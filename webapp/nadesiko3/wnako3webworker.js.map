{"version":3,"file":"wnako3webworker.js","mappings":"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","sources":["webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_in_worker.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_worker.mjs","webpack://nadesiko3/./src/wnako3webworker.mjs"],"sourcesContent":["/**\n * なでしこ言語が投げる全てのエラーが継承するクラス\n */\nexport class NakoError extends Error {\n    constructor(tag, msg, file = undefined, line = undefined) {\n        // エラー位置を分かりやすく日本語に変換\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\n        // 親のErrorを呼ぶ\n        super(`[${tag}]${positionJa}${msg}`);\n        // エラーの種類を設定\n        this.name = 'NakoError';\n        this.type = 'NakoError';\n        this.tag = '[' + tag + ']';\n        this.positionJa = positionJa;\n        this.msg = msg;\n    }\n}\nexport class NakoIndentError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} line\n     * @param {string} file\n     */\n    constructor(msg, line, file) {\n        super('インデントエラー', msg, file, line);\n        this.type = 'NakoIndentError';\n        this.line = line;\n        this.file = file;\n    }\n}\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\nexport class InternalLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} preprocessedCodeStartOffset\n     * @param {number} preprocessedCodeEndOffset\n     * @param {number | undefined} [line]\n     * @param {string | undefined} [file]\n     */\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\n        super('字句解析エラー（内部エラー）', msg, file, line);\n        this.type = 'InternalLexerError';\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | null} startOffset\n     * @param {number | null} endOffset,\n     * @param {number | undefined} line\n     * @param {string | undefined} file\n     */\n    constructor(msg, startOffset, endOffset, line, file) {\n        super('字句解析エラー', msg, file, line);\n        this.type = 'NakoLexerError';\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoSyntaxError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {Ast} first\n     * @param {Ast} [last]\n     */\n    static fromNode(msg, first, last = undefined) {\n        if (!first) {\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\n        }\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\n        const endOffset = (last && typeof last.endOffset === 'number')\n            ? last.endOffset\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\n    }\n    /**\n     * @param {string} msg\n     * @param {number | undefined} line\n     * @param {number | undefined} startOffset\n     * @param {number | undefined} endOffset\n     * @param {string | undefined} file\n     */\n    constructor(msg, line, startOffset, endOffset, file) {\n        super('文法エラー', msg, file, line);\n        this.type = 'NakoSyntaxError';\n        this.file = file;\n        this.line = line;\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n    }\n}\nexport class NakoRuntimeError extends NakoError {\n    /**\n     * @param error エラー\n     * @param lineNo 発生行\n     */\n    constructor(error, lineNo) {\n        let msg = 'unknown';\n        if (typeof error === 'string') {\n            msg = error;\n        }\n        else {\n            if (error instanceof NakoRuntimeError) {\n                msg = error.msg;\n            }\n            else if (error instanceof NakoError) {\n                msg = error.msg;\n            }\n            else if (error instanceof Error) {\n                if (error.name === 'Error') {\n                    msg = error.message;\n                }\n                else {\n                    msg = `${error.name}: ${error.message}`;\n                }\n            }\n        }\n        // 行番号を表す文字列をパースする。\n        let line;\n        let file;\n        let matches;\n        if (lineNo === undefined) {\n            line = undefined;\n            file = undefined;\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = matches[2];\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = 'main.nako3';\n        }\n        else {\n            line = 0;\n            file = lineNo;\n        }\n        super('実行時エラー', msg, file, line);\n        this.type = 'NakoRuntimeError';\n        this.lineNo = lineNo;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoImportError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     */\n    constructor(msg, file, line) {\n        super('取り込みエラー', msg, file, line);\n        this.file = file;\n        this.line = line;\n    }\n}\n","/**\n * 助詞の一覧\n */\nexport const josiList = [\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\n];\n// 「もし」文で使う助詞\nexport const tararebaJosiList = [\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\n];\n// 意味のない助詞(削除する) #936 #939 #974\nexport const removeJosiList = [\n    'こと', 'である', 'です', 'します', 'でした'\n];\n/**\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\n */\nexport const tararebaMap = {};\ntararebaJosiList.forEach(josi => {\n    josiList.push(josi);\n    tararebaMap[josi] = true;\n});\n/**\n * 意味のない助詞(削除する)をマップに変換したもの\n */\nexport const removeJosiMap = {};\nremoveJosiList.forEach(josi => {\n    josiList.push(josi);\n    removeJosiMap[josi] = true;\n});\n// 「もの」構文 (#1614)\nconst josiListMono = [];\nfor (const jo of josiList) {\n    josiListMono.push('もの' + jo);\n    josiListMono.push(jo);\n}\n// 文字数の長い順に並び替え\njosiListMono.sort((a, b) => b.length - a.length);\n// 正規表現で助詞をマッチできるようにする\nconst pat = '^[\\\\t ]*(' + josiListMono.join('|') + ')';\nexport const josiRE = new RegExp(pat);\n","/** 予約語 */\nconst reserved = new Map([\n    ['回', '回'],\n    ['回繰返', '回'], // (#924)\n    ['間', '間'],\n    ['間繰返', '間'], // (#927)\n    ['繰返', '繰返'],\n    ['増繰返', '増繰返'], // (#1140)\n    ['減繰返', '減繰返'],\n    ['後判定', '後判定'], // (#1147)\n    ['反復', '反復'],\n    ['抜', '抜ける'],\n    ['続', '続ける'],\n    ['戻', '戻る'],\n    ['先', '先に'],\n    ['次', '次に'],\n    ['代入', '代入'],\n    ['実行速度優先', '実行速度優先'],\n    ['パフォーマンスモニタ適用', 'パフォーマンスモニタ適用'], // (#986)\n    ['定', '定める'],\n    ['逐次実行', '逐次実行'], // 廃止 #1611 ただし念のため残しておく\n    ['条件分岐', '条件分岐'],\n    ['増', '増'],\n    ['減', '減'],\n    ['変数', '変数'],\n    ['定数', '定数'],\n    ['エラー監視', 'エラー監視'], // 例外処理:エラーならばと対\n    ['エラー', 'エラー'],\n    ['それ', 'word'],\n    ['そう', 'word'], // 「それ」のエイリアス\n    ['関数', 'def_func'], // 無名関数の定義用\n    ['インデント構文', 'インデント構文'], // https://nadesi.com/v3/doc/go.php?949\n    ['非同期モード', '非同期モード'], // (#637)\n    ['DNCLモード', 'DNCLモード'], // (#1140)\n    ['モード設定', 'モード設定'], // (#1020)\n    ['取込', '取込'],\n    ['モジュール公開既定値', 'モジュール公開既定値']\n]);\nexport default reserved;\n","import { NakoRuntimeError } from './nako_errors.mjs';\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_system', // プラグインの名前\n            description: 'システム関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // システム変数の初期化\n            const system = sys;\n            sys.isDebug = false;\n            // システム変数にアクセスするための関数を定義\n            sys.__setSysVar = (name, value) => system.__v0.set(name, value);\n            sys.__getSysVar = (name, defaultValue = undefined) => {\n                const v = system.__v0.get(name);\n                if (v === undefined) {\n                    return defaultValue;\n                }\n                return v;\n            };\n            sys.__setSore = (v) => { sys.__vars.set('それ', v); return v; };\n            sys.__getSore = () => sys.__vars.get('それ');\n            sys.tags = {}; // タグ情報\n            // 言語バージョンを設定\n            sys.__setSysVar('ナデシコバージョン', sys.version);\n            sys.__setSysVar('ナデシコ言語バージョン', sys.coreVersion);\n            if (!system.__namespaceList) {\n                system.__namespaceList = [];\n            }\n            // なでしこの関数や変数を探して返す\n            sys.__findVar = function (nameStr, def) {\n                if (typeof nameStr === 'function') {\n                    return nameStr;\n                }\n                // ローカル変数を探す\n                const localVar = system.__locals.get(nameStr);\n                if (localVar) {\n                    return localVar;\n                }\n                // 名前空間が指定されている場合\n                if (nameStr.indexOf('__') >= 0) {\n                    for (let i = 2; i >= 0; i--) {\n                        const varScope = system.__varslist[i];\n                        const scopeValue = varScope.get(nameStr);\n                        if (scopeValue) {\n                            return scopeValue;\n                        }\n                    }\n                    return def;\n                }\n                // 名前空間を参照して関数・変数名を解決する\n                const modList = system.__modList ? system.__modList : [system.__modName];\n                for (const modName of modList) {\n                    const gname = modName + '__' + nameStr;\n                    for (let i = 2; i >= 0; i--) {\n                        const scope = system.__varslist[i];\n                        const scopeValue = scope.get(gname);\n                        if (scopeValue) {\n                            return scopeValue;\n                        }\n                    }\n                }\n                return def;\n            };\n            // 文字列から関数を探す\n            sys.__findFunc = function (nameStr, parentFunc) {\n                const f = sys.__findVar(nameStr);\n                if (typeof f === 'function') {\n                    return f;\n                }\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\n            };\n            // システム関数を実行\n            sys.__exec = function (func, params) {\n                // システム命令を優先\n                const f0 = sys.__getSysVar(func);\n                if (f0) {\n                    return f0.apply(this, params);\n                }\n                // グローバル・ローカルを探す\n                const f = sys.__findVar(func);\n                if (!f) {\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\n                }\n                return f.apply(this, params);\n            };\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\n            sys.__timeout = [];\n            sys.__interval = [];\n            // 日付処理などに使う\n            const z2 = sys.__zero2 = (s) => {\n                s = '00' + s;\n                return s.substring(s.length - 2);\n            };\n            sys.__zero = (s, keta) => {\n                let zeroS = '';\n                for (let i = 0; i < keta; i++) {\n                    zeroS += '0';\n                }\n                s = zeroS + s;\n                return s.substring(s.length - keta);\n            };\n            sys.__formatDate = (t) => {\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n            };\n            sys.__formatTime = (t) => {\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\n            };\n            sys.__formatDateTime = (t, fmt) => {\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\n                    return dateStr + ' ' + timeStr;\n                }\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\n                    return dateStr;\n                }\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\n                    return timeStr;\n                }\n                return dateStr + ' ' + timeStr;\n            };\n            sys.__str2date = (s) => {\n                // trim\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\n                // is unix time\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\n                    return new Date(parseFloat(s) * 1000);\n                }\n                // is time ?\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\n                    const t = new Date();\n                    const a = (s + ':0').split(':');\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\n                }\n                // replace splitter to '/'\n                s = s.replace(/[\\s:-]/g, '/');\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\n                const a = s.split('/');\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\n            };\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\n            sys.__printPool = '';\n            // 暗黙の型変換で足し算を行うときに使用。bigint はそのまま、その他は number に自動変換\n            sys.__parseFloatOrBigint = (v) => {\n                return (typeof v) === 'bigint' ? v : parseFloat(v);\n            };\n            // undefinedチェック\n            system.chk = (value, constId) => {\n                if (typeof value === 'undefined') {\n                    const cp = system.constPools[constId];\n                    const [msgNo, msgArgs, fileNo, lineNo] = cp;\n                    let msg = system.constPoolsTemplate[msgNo];\n                    for (const i in msgArgs) {\n                        const arg = system.constPoolsTemplate[msgArgs[i]];\n                        msg = msg.split(`$${i}`).join(arg);\n                    }\n                    const fileStr = system.constPoolsTemplate[fileNo];\n                    sys.logger.warn(msg, { file: fileStr, line: lineNo });\n                }\n                return value;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            if (sys.__exec) {\n                sys.__exec('全タイマー停止', [sys]);\n            }\n            sys.__setSysVar('表示ログ', '');\n        }\n    },\n    // @システム定数\n    'ナデシコバージョン': { type: 'const', value: '?' }, // @なでしこばーじょん\n    'ナデシコ言語バージョン': { type: 'const', value: '?' }, // @なでしこげんごばーじょん\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' }, // @なでしこえんじん\n    'ナデシコ種類': { type: 'const', value: '?' }, // @なでしこしゅるい\n    'はい': { type: 'const', value: 1 }, // @はい\n    'いいえ': { type: 'const', value: 0 }, // @いいえ\n    '真': { type: 'const', value: 1 }, // @しん\n    '偽': { type: 'const', value: 0 }, // @ぎ\n    '永遠': { type: 'const', value: 1 }, // @えいえん\n    'オン': { type: 'const', value: 1 }, // @おん\n    'オフ': { type: 'const', value: 0 }, // @おふ\n    '改行': { type: 'const', value: '\\n' }, // @かいぎょう\n    'タブ': { type: 'const', value: '\\t' }, // @たぶ\n    'カッコ': { type: 'const', value: '「' }, // @かっこ\n    'カッコ閉': { type: 'const', value: '」' }, // @かっことじ\n    '波カッコ': { type: 'const', value: '{' }, // @なみかっこ\n    '波カッコ閉': { type: 'const', value: '}' }, // @なみかっことじ\n    'OK': { type: 'const', value: true }, // @OK\n    'NG': { type: 'const', value: false }, // @NG\n    'キャンセル': { type: 'const', value: 0 }, // @きゃんせる\n    'TRUE': { type: 'const', value: true }, // @TRUE\n    'FALSE': { type: 'const', value: false }, // @FALSE\n    'true': { type: 'const', value: true }, // @true\n    'false': { type: 'const', value: false }, // @false\n    'PI': { type: 'const', value: Math.PI }, // @PI\n    '空': { type: 'const', value: '' }, // @から\n    'NULL': { type: 'const', value: null }, // @NULL\n    'undefined': { type: 'const', value: undefined }, // @undefined\n    '未定義': { type: 'const', value: undefined }, // @みていぎ\n    'エラーメッセージ': { type: 'const', value: '' }, // @えらーめっせーじ\n    '対象': { type: 'const', value: '' }, // @たいしょう\n    '対象キー': { type: 'const', value: '' }, // @たいしょうきー\n    '回数': { type: 'const', value: '' }, // @かいすう\n    'CR': { type: 'const', value: '\\r' }, // @CR\n    'LF': { type: 'const', value: '\\n' }, // @LF\n    '非数': { type: 'const', value: NaN }, // @ひすう\n    '無限大': { type: 'const', value: Infinity }, // @むげんだい\n    '空配列': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return [];\n        }\n    },\n    '空辞書': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空ハッシュ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空オブジェクト': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            return sys.__exec('空ハッシュ', [sys]);\n        }\n    },\n    // @標準出力\n    '表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            // 継続表示の一時プールを出力\n            s = sys.__printPool + s;\n            sys.__printPool = '';\n            //\n            sys.__setSysVar('表示ログ', sys.__getSysVar('表示ログ') + s + '\\n');\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    '継続表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__printPool += s;\n        },\n        return_none: true\n    },\n    '連続表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '連続無改行表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('継続表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '表示ログ': { type: 'const', value: '' }, // @ひょうじろぐ\n    '表示ログクリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__setSysVar('表示ログ', '');\n        },\n        return_none: true\n    },\n    '言': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    'コンソール表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s) {\n            console.log(s);\n        },\n        return_none: true\n    },\n    // @四則演算\n    '足': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        isVariableJosi: false,\n        pure: true,\n        fn: function (a, b) {\n            return a + b;\n        }\n    },\n    '引': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            return a - b;\n        }\n    },\n    '掛': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            // 数値の掛け算\n            if (typeof a === 'number') {\n                return a * b;\n            }\n            // 文字列の掛け算(文字列の繰り返し)\n            if (typeof a === 'string') {\n                let s = '';\n                for (let i = 0; i < parseInt(b); i++) {\n                    s += a;\n                }\n                return s;\n            }\n            // 配列の繰り返し\n            if (a instanceof Array) {\n                const aa = [];\n                for (let i = 0; i < parseInt(b); i++) {\n                    aa.push(...a);\n                }\n                return aa;\n            }\n            return a * b;\n        }\n    },\n    '倍': {\n        type: 'func',\n        josi: [['の', 'を'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a * b;\n        }\n    },\n    '割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a / b;\n        }\n    },\n    '割余': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a % b;\n        }\n    },\n    '偶数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 0);\n        }\n    },\n    '奇数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 1);\n        }\n    },\n    '二乗': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            return a * a;\n        }\n    },\n    'べき乗': {\n        type: 'func',\n        josi: [['の'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.pow(a, b);\n        }\n    },\n    '以上': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a >= b;\n        }\n    },\n    '以下': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a <= b;\n        }\n    },\n    '未満': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a < b;\n        }\n    },\n    '超': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a > b;\n        }\n    },\n    '等': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a === b;\n        }\n    },\n    '等無': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a !== b;\n        }\n    },\n    '一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA === jsonB;\n            }\n            return a === b;\n        }\n    },\n    '不一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA !== jsonB;\n            }\n            return a !== b;\n        }\n    },\n    '範囲内': {\n        type: 'func',\n        josi: [['が'], ['から'], ['の', 'までの']],\n        pure: true,\n        fn: function (v, a, b) {\n            return (a <= v) && (v <= b);\n        }\n    },\n    '連続加算': {\n        type: 'func',\n        josi: [['を'], ['に', 'と']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (b, ...a) {\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\n            a.push(b);\n            return a.reduce((p, c) => p + c);\n        }\n    },\n    // @敬語\n    'ください': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'お願': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'です': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    '拝啓': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu = 0;\n        },\n        return_none: true\n    },\n    '敬具': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu += 100; // bonus point\n        },\n        return_none: true\n    },\n    '礼節レベル取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            return sys.__reisetu;\n        }\n    },\n    // @特殊命令\n    'JS実行': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fn: function (src, sys) {\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\n            // https://github.com/kujirahand/nadesiko3/issues/1237\n            return eval(src); // eslint-disable-line\n        }\n    },\n    'JSオブジェクト取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (name, sys) {\n            return sys.__findVar(name, null);\n        }\n    },\n    'JS関数実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        fn: function (name, args) {\n            // nameが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof name === 'string') {\n                name = eval(name);\n            }\n            if (typeof name !== 'function') {\n                throw new Error('JS関数取得で実行できません。');\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            // eslint-disable-next-line prefer-spread\n            return name.apply(null, args);\n        }\n    },\n    'ASYNC': {\n        type: 'func',\n        josi: [],\n        asyncFn: true,\n        pure: true,\n        fn: async function () {\n            // empty\n        },\n        return_none: true\n    },\n    'AWAIT実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (f, args, sys) {\n            // nameが文字列ならevalして関数を得る\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, 'AWAIT実行');\n            }\n            if (!(f instanceof Function)) {\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\n            }\n            // 実行\n            return await f(...args);\n        }\n    },\n    'JSメソッド実行': {\n        type: 'func',\n        josi: [['の'], ['を'], ['で']],\n        fn: function (obj, m, args) {\n            // objが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof obj === 'string') {\n                obj = eval(obj);\n            }\n            if (typeof obj !== 'object') {\n                throw new Error('JSオブジェクトを取得できませんでした。');\n            }\n            // method を求める\n            if (typeof m !== 'function') {\n                m = obj[m];\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            return m.apply(obj, args);\n        }\n    },\n    'ナデシコ': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: false,\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\n            }\n            sys.__setSysVar('表示ログ', '');\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\n            const outLog = sys.__getSysVar('表示ログ') + '';\n            if (outLog) {\n                sys.logger.trace(outLog);\n            }\n            return outLog;\n        }\n    },\n    'ナデシコ続': {\n        type: 'func',\n        josi: [['を', 'で']],\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\n            }\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\n            const out = sys.__getSysVar('表示ログ') + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    '実行': {\n        type: 'func',\n        josi: [['を', 'に', 'で']],\n        pure: false,\n        fn: function (f, sys) {\n            // #938 の規則に従って処理\n            // 引数が関数なら実行\n            if (typeof f === 'function') {\n                return f(sys);\n            }\n            // 文字列なら関数に変換できるか判定して実行\n            if (typeof f === 'string') {\n                const tf = sys.__findFunc(f, '実行');\n                if (typeof tf === 'function') {\n                    return tf(sys);\n                }\n            }\n            // それ以外ならそのまま値を返す\n            return f;\n        }\n    },\n    '実行時間計測': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (f, sys) {\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '実行時間計測');\n            }\n            //\n            if (performance && performance.now) {\n                const t1 = performance.now();\n                f(sys);\n                const t2 = performance.now();\n                return (t2 - t1);\n            }\n            else {\n                const t1 = Date.now();\n                f(sys);\n                const t2 = Date.now();\n                return (t2 - t1);\n            }\n        }\n    },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            sys.__setSysVar('__forceClose', true);\n            if (!sys.__getSysVar('__useDebug')) {\n                throw new Error('__終わる__');\n            }\n        }\n    },\n    // @型変換\n    '変数型確認': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    'TYPEOF': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    '文字列変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    'TOSTR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    '整数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'TOINT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    '実数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'TOFLOAT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'INT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'FLOAT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'NAN判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return isNaN(v);\n        }\n    },\n    '非数判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n            return Number.isNaN(v);\n        }\n    },\n    'HEX': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return parseInt(a).toString(16);\n        }\n    },\n    '進数変換': {\n        type: 'func',\n        josi: [['を', 'の'], ['']],\n        pure: true,\n        fn: function (v, n) {\n            return parseInt(v).toString(n);\n        }\n    },\n    '二進': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v).toString(2);\n        }\n    },\n    '二進表示': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v, sys) {\n            const s = parseInt(v).toString(2);\n            sys.__exec('表示', [s, sys]);\n        }\n    },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['の'], ['で']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + (parseInt('' + v).toString(16));\n                return v2.substring(v2.length - 2, v2.length);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        }\n    },\n    // @論理演算\n    '論理OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a || b);\n        }\n    },\n    '論理AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a && b);\n        }\n    },\n    '論理NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (!v) ? 1 : 0;\n        }\n    },\n    // @ビット演算\n    'OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a | b);\n        }\n    },\n    'AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a & b);\n        }\n    },\n    'XOR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a ^ b);\n        }\n    },\n    'NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (~v);\n        }\n    },\n    'SHIFT_L': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a << b);\n        }\n    },\n    'SHIFT_R': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >> b);\n        }\n    },\n    'SHIFT_UR': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >>> b);\n        }\n    },\n    // @文字列処理\n    '文字数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).length;\n            }\n            return Array.from(v).length;\n        }\n    },\n    '何文字目': {\n        type: 'func',\n        josi: [['で', 'の'], ['が']],\n        pure: true,\n        fn: function (s, a) {\n            return String(s).indexOf(a) + 1;\n        }\n    },\n    'CHR': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.fromCodePoint) {\n                return String.fromCharCode(v);\n            }\n            return String.fromCodePoint(v);\n        }\n    },\n    'ASC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.prototype.codePointAt) {\n                return String(v).charCodeAt(0);\n            }\n            return String(v).codePointAt(0);\n        }\n    },\n    '文字挿入': {\n        type: 'func',\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, i, a) {\n            if (i <= 0) {\n                i = 1;\n            }\n            const ss = String(s);\n            const mae = ss.substring(0, i - 1);\n            const usi = ss.substring(i - 1);\n            return mae + a + usi;\n        }\n    },\n    '文字検索': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, b) {\n            let str = String(s);\n            str = str.substring(a);\n            const res = str.indexOf(b);\n            if (res === -1) {\n                return 0;\n            }\n            return res + 1 + a;\n        }\n    },\n    '追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a);\n        }\n    },\n    '一行追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a) + '\\n';\n        }\n    },\n    '文字列分解': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).split('');\n            }\n            return Array.from(v);\n        }\n    },\n    'リフレイン': {\n        type: 'func',\n        josi: [['を', 'の'], ['で']],\n        pure: true,\n        fn: function (v, cnt) {\n            let s = '';\n            for (let i = 0; i < cnt; i++) {\n                s += String(v);\n            }\n            return s;\n        }\n    },\n    '出現回数': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            return s.split(a).length - 1;\n        }\n    },\n    'MID': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    '文字抜出': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を', '']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    'LEFT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    '文字左部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    'RIGHT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '文字右部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '区切': {\n        type: 'func',\n        josi: [['の', 'を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            return ('' + s).split('' + a);\n        }\n    },\n    '文字列分割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            const i = s.indexOf(a);\n            if (i < 0) {\n                return [s];\n            }\n            return [s.substring(0, i), s.substring(i + a.length)];\n        }\n    },\n    '切取': {\n        type: 'func',\n        josi: [['から', 'の'], ['まで', 'を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            s = String(s);\n            const i = s.indexOf(a);\n            if (i < 0) {\n                sys.__setSysVar('対象', '');\n                return s;\n            }\n            sys.__setSysVar('対象', s.substring(i + a.length));\n            return s.substring(0, i);\n        }\n    },\n    '文字削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\n        pure: true,\n        fn: function (s, a, b) {\n            s = '' + s;\n            const mae = s.substring(0, a - 1);\n            const usi = s.substring((a - 1 + b));\n            return mae + usi;\n        }\n    },\n    // @置換・トリム\n    '置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            return String(s).split(a).join(b);\n        }\n    },\n    '単置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            // replaceは最初の一度だけ置換する\n            return String(s).replace(a, b);\n        }\n    },\n    'トリム': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    '空白除去': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    // @文字変換\n    '大文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toUpperCase();\n        }\n    },\n    '小文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toLowerCase();\n        }\n    },\n    '平仮名変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const kanaToHira = (str) => {\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\n                    const chr = m.charCodeAt(0) - 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return kanaToHira('' + s);\n        }\n    },\n    'カタカナ変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const hiraToKana = (str) => {\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\n                    const chr = m.charCodeAt(0) + 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return hiraToKana('' + s);\n        }\n    },\n    '英数全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    '英数記号全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数記号半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    'カタカナ全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__getSysVar('全角カナ一覧');\n            const han1 = sys.__getSysVar('半角カナ一覧');\n            const zen2 = sys.__getSysVar('全角カナ濁音一覧');\n            const han2 = sys.__getSysVar('半角カナ濁音一覧');\n            let str = '';\n            let i = 0;\n            while (i < s.length) {\n                // 濁点の変換\n                const c2 = s.substring(i, i + 2);\n                const n2 = han2.indexOf(c2);\n                if (n2 >= 0) {\n                    str += zen2.charAt(n2 / 2);\n                    i += 2;\n                    continue;\n                }\n                // 濁点以外の変換\n                const c = s.charAt(i);\n                const n = han1.indexOf(c);\n                if (n >= 0) {\n                    str += zen1.charAt(n);\n                    i++;\n                    continue;\n                }\n                str += c;\n                i++;\n            }\n            return str;\n        }\n    },\n    'カタカナ半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__getSysVar('全角カナ一覧');\n            const han1 = sys.__getSysVar('半角カナ一覧');\n            const zen2 = sys.__getSysVar('全角カナ濁音一覧');\n            const han2 = sys.__getSysVar('半角カナ濁音一覧');\n            return s.split('').map((c) => {\n                const i = zen1.indexOf(c);\n                if (i >= 0) {\n                    return han1.charAt(i);\n                }\n                const j = zen2.indexOf(c);\n                if (j >= 0) {\n                    return han2.substring(j * 2, j * 2 + 2);\n                }\n                return c;\n            }).join('');\n        }\n    },\n    '全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\n            result = sys.__exec('英数記号全角変換', [result, sys]);\n            return result;\n        }\n    },\n    '半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\n            result = sys.__exec('英数記号半角変換', [result, sys]);\n            return result;\n        }\n    },\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' }, // @ぜんかくかないちらん\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' }, // @ぜんかくかなだくおんいちらん\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' }, // @はんかくかないちらん\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' }, // @はんかくかなだくおんいちらん\n    // @JSON\n    'JSONエンコード': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v);\n        }\n    },\n    'JSONエンコード整形': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v, null, 2);\n        }\n    },\n    'JSONデコード': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (s) {\n            return JSON.parse(s);\n        }\n    },\n    // @正規表現\n    '正規表現マッチ': {\n        type: 'func',\n        josi: [['を', 'が'], ['で', 'に']],\n        pure: true,\n        fn: function (a, b, sys) {\n            let re;\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\n            // パターンがない場合\n            if (f === null) {\n                re = new RegExp(b, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            const sa = sys.__getSysVar('抽出文字列');\n            sa.splice(0, sa.length); // clear\n            const m = String(a).match(re);\n            let result = m;\n            if (re.global) {\n                // no groups\n            }\n            else if (m) {\n                // has group?\n                if (m.length > 0) {\n                    result = m[0];\n                    for (let i = 1; i < m.length; i++) {\n                        sa[i - 1] = m[i];\n                    }\n                }\n            }\n            return result;\n        }\n    },\n    '抽出文字列': { type: 'const', value: [] }, // @ちゅうしゅつもじれつ\n    '正規表現置換': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).replace(re, b);\n        }\n    },\n    '正規表現区切': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).split(re);\n        }\n    },\n    // @指定形式\n    '通貨形式': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        }\n    },\n    'ゼロ埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = '0';\n            for (let i = 0; i < a; i++) {\n                z += '0';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    '空白埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = ' ';\n            for (let i = 0; i < a; i++) {\n                z += ' ';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    // @文字種類\n    'かなか判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x3041 && c <= 0x309F);\n        }\n    },\n    'カタカナ判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x30A1 && c <= 0x30FA);\n        }\n    },\n    '数字判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charAt(0);\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\n        }\n    },\n    '数列判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\n            return String(s).match(checkerRE) !== null;\n        }\n    },\n    // @配列操作\n    '配列結合': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, s) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.join('' + s);\n            }\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\n            return a2.join('' + s);\n        }\n    },\n    '配列検索': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, s) {\n            if (a instanceof Array) {\n                return a.indexOf(s);\n            } // 配列ならOK\n            return -1;\n        }\n    },\n    '配列要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.length;\n            } // 配列ならOK\n            if (a instanceof Object) {\n                return Object.keys(a).length;\n            } // オブジェクト\n            if (typeof a === 'string') {\n                return String(a).length;\n            } // 文字列\n            return 1;\n        }\n    },\n    '要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    'LEN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    '配列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (a instanceof Array) {\n                return a.splice(i, 0, s);\n            } // 配列ならOK\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列一括挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, b) {\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\n                for (let j = 0; j < b.length; j++) {\n                    a.splice(i + j, 0, b[j]);\n                }\n                return a;\n            }\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.sort();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列数値変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                for (let i = 0; i < a.length; i++) {\n                    a[i] = parseFloat(a[i]);\n                }\n                return a;\n            }\n            throw new Error('『配列数値変換』で配列以外が指定されました。');\n        }\n    },\n    '配列数値ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.sort((a, b) => {\n                    return parseFloat(a) - parseFloat(b);\n                });\n            }\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列カスタムソート': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: false,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\n            }\n            if (a instanceof Array) {\n                return a.sort(ufunc);\n            }\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\n        }\n    },\n    '配列逆順': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.reverse();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列シャッフル': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) { // 配列ならOK\n                for (let i = a.length - 1; i > 0; i--) {\n                    const r = Math.floor(Math.random() * (i + 1));\n                    const tmp = a[i];\n                    a[i] = a[r];\n                    a[r] = tmp;\n                }\n                return a;\n            }\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\n        }\n    },\n    '配列削除': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: false,\n        fn: function (a, i, sys) {\n            return sys.__exec('配列切取', [a, i, sys]);\n        }\n    },\n    '配列切取': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            // 配列変数のとき\n            if (a instanceof Array) {\n                const b = a.splice(i, 1);\n                if (b instanceof Array) {\n                    return b[0];\n                } // 切り取った戻り値は必ずArrayになるので。\n                return null;\n            }\n            // 辞書型変数のとき\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\n                if (a[i]) {\n                    const old = a[i];\n                    delete a[i];\n                    return old;\n                }\n                return undefined;\n            }\n            throw new Error('『配列切取』で配列以外を指定。');\n        }\n    },\n    '配列取出': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, i, cnt) {\n            if (a instanceof Array) {\n                return a.splice(i, cnt);\n            }\n            throw new Error('『配列取出』で配列以外を指定。');\n        }\n    },\n    '配列ポップ': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.pop();\n            }\n            throw new Error('『配列ポップ』で配列以外の処理。');\n        }\n    },\n    '配列プッシュ': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b, sys) {\n            return sys.__exec('配列追加', [a, b, sys]);\n        }\n    },\n    '配列追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) { // 配列ならOK\n                a.push(b);\n                return a;\n            }\n            throw new Error('『配列追加』で配列以外の処理。');\n        }\n    },\n    '配列複製': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列足': {\n        type: 'func',\n        josi: [['に', 'へ', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) {\n                return a.concat(b);\n            }\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列最大値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.max(x, y));\n        }\n    },\n    '配列最小値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.min(x, y));\n        }\n    },\n    '配列合計': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                let v = 0;\n                a.forEach((n) => {\n                    const nn = parseFloat(n);\n                    if (isNaN(nn)) {\n                        return;\n                    }\n                    v += nn;\n                });\n                return v;\n            }\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\n        }\n    },\n    '配列入替': {\n        type: 'func',\n        josi: [['の'], ['と'], ['を']],\n        pure: true,\n        fn: function (a, i, j) {\n            if (!(a instanceof Array)) {\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\n            }\n            const tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n            return a;\n        }\n    },\n    '配列連番作成': {\n        type: 'func',\n        josi: [['から'], ['までの', 'まで', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = a; i <= b; i++) {\n                result.push(i);\n            }\n            return result;\n        }\n    },\n    '配列要素作成': {\n        type: 'func',\n        josi: [['を'], ['だけ']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = 0; i < b; i++) {\n                result.push(a);\n            }\n            return result;\n        }\n    },\n    '配列関数適用': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列関数適用');\n            }\n            const result = [];\n            for (const e of a) {\n                result.push(ufunc(e));\n            }\n            return result;\n        }\n    },\n    '配列マップ': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            return sys.__exec('配列関数適用', [f, a, sys]);\n        }\n    },\n    '配列フィルタ': {\n        type: 'func',\n        josi: [['で', 'の'], ['を', 'について']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列フィルタ');\n            }\n            const result = [];\n            for (const e of a) {\n                if (ufunc(e)) {\n                    result.push(e);\n                }\n            }\n            return result;\n        }\n    },\n    // @二次元配列処理\n    '表ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                if (ns === ms) {\n                    return 0;\n                }\n                else if (ns < ms) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n            });\n            return a;\n        }\n    },\n    '表数値ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                return ns - ms;\n            });\n            return a;\n        }\n    },\n    '表ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\n        }\n    },\n    '表完全一致ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => row[no] === s);\n        }\n    },\n    '表検索': {\n        type: 'func',\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, row, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表検索』には配列を指定する必要があります。');\n            }\n            for (let i = row; i < a.length; i++) {\n                if (a[i][col] === s) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表列数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列数』には配列を指定する必要があります。');\n            }\n            let cols = 1;\n            for (let i = 0; i < a.length; i++) {\n                if (a[i].length > cols) {\n                    cols = a[i].length;\n                }\n            }\n            return cols;\n        }\n    },\n    '表行数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行数』には配列を指定する必要があります。');\n            }\n            return a.length;\n        }\n    },\n    '表行列交換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\n                }\n            }\n            return res;\n        }\n    },\n    '表右回転': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表右回転』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = a[rows - c - 1][r];\n                }\n            }\n            return res;\n        }\n    },\n    '表重複削除': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            const keys = {};\n            for (let n = 0; n < a.length; n++) {\n                const k = a[n][i];\n                if (undefined === keys[k]) {\n                    keys[k] = true;\n                    res.push(a[n]);\n                }\n            }\n            return res;\n        }\n    },\n    '表列取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列取得』には配列を指定する必要があります。');\n            }\n            const res = a.map(row => row[i]);\n            return res;\n        }\n    },\n    '表列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row, idx) => {\n                let nr = [];\n                if (i > 0) {\n                    nr = nr.concat(row.slice(0, i));\n                }\n                nr.push(s[idx]);\n                nr = nr.concat(row.slice(i));\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列削除': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row) => {\n                const nr = row.slice(0);\n                nr.splice(i, 1);\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列合計': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列合計』には配列を指定する必要があります。');\n            }\n            let sum = 0;\n            a.forEach((row) => { sum += row[i]; });\n            return sum;\n        }\n    },\n    '表曖昧検索': {\n        type: 'func',\n        josi: [['の'], ['から'], ['で'], ['を']],\n        pure: true,\n        fn: function (a, row, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            for (let i = row; i < a.length; i++) {\n                const line = a[i];\n                if (re.test(line[col])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表正規表現ピックアップ': {\n        type: 'func',\n        josi: [['の', 'で'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            const res = [];\n            for (let i = 0; i < a.length; i++) {\n                const row = a[i];\n                if (re.test(row[col])) {\n                    res.push(row.slice(0));\n                }\n            }\n            return res;\n        }\n    },\n    // @辞書型変数の操作\n    '辞書キー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const keys = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    keys.push(key);\n                }\n                return keys;\n            }\n            if (a instanceof Array) { // 配列なら数字を返す\n                for (let i = 0; i < a.length; i++) {\n                    keys.push(i);\n                }\n                return keys;\n            }\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: true,\n        fn: function (a, key) {\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                if (key in a) {\n                    delete a[key];\n                }\n                return a;\n            }\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @ハッシュ\n    'ハッシュキー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('辞書キー列挙', [a, sys]);\n        }\n    },\n    'ハッシュ内容列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const body = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    body.push(a[key]);\n                }\n                return body;\n            }\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    'ハッシュキー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: false,\n        fn: function (a, key, sys) {\n            return sys.__exec('辞書キー削除', [a, key, sys]);\n        }\n    },\n    'ハッシュキー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @タイマー\n    '秒待': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: function (n, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    // タイマーを仕掛ける\n                    const timerId = setTimeout(() => {\n                        // タイマー使用中リストに追加したIDを削除\n                        const i = sys.__timeout.indexOf(timerId);\n                        if (i >= 0) {\n                            sys.__timeout.splice(i, 1);\n                        }\n                        // Promiseを終了\n                        resolve();\n                    }, parseFloat(n) * 1000);\n                    // タイマー使用中リストに追加\n                    sys.__timeout.push(timerId);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        },\n        return_none: true\n    },\n    '秒待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒逐次待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒後': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: true,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒後');\n            }\n            // 1回限りのタイマーをセット\n            const timerId = setTimeout(() => {\n                // 使用中リストに追加したIDを削除\n                const i = sys.__timeout.indexOf(timerId);\n                if (i >= 0) {\n                    sys.__timeout.splice(i, 1);\n                }\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                try {\n                    f(timerId, sys);\n                }\n                catch (e) {\n                    let err = e;\n                    if (!(e instanceof NakoRuntimeError)) {\n                        err = new NakoRuntimeError(e, sys.__getSysVar('__line'));\n                    }\n                    sys.logger.error(err);\n                }\n            }, parseFloat(n) * 1000);\n            sys.__timeout.unshift(timerId);\n            sys.__setSysVar('対象', timerId);\n            return timerId;\n        }\n    },\n    '秒毎': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒毎');\n            }\n            // タイマーをセット\n            const timerId = setInterval(() => {\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                f(timerId, sys);\n            }, parseFloat(n) * 1000);\n            // タイマーIDを追加\n            sys.__interval.unshift(timerId);\n            sys.__setSysVar('対象', timerId);\n            return timerId;\n        }\n    },\n    '秒タイマー開始時': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            return sys.__exec('秒毎', [f, n, sys]);\n        }\n    },\n    'タイマー停止': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (timerId, sys) {\n            const i = sys.__interval.indexOf(timerId);\n            if (i >= 0) {\n                sys.__interval.splice(i, 1);\n                clearInterval(timerId);\n                return true;\n            }\n            const j = sys.__timeout.indexOf(timerId);\n            if (j >= 0) {\n                sys.__timeout.splice(j, 1);\n                clearTimeout(timerId);\n                return true;\n            }\n            return false;\n        },\n        return_none: false\n    },\n    '全タイマー停止': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // clearInterval\n            for (let i = 0; i < sys.__interval.length; i++) {\n                const timerId = sys.__interval[i];\n                clearInterval(timerId);\n            }\n            sys.__interval = [];\n            // clearTimeout\n            for (let i = 0; i < sys.__timeout.length; i++) {\n                const timerId = sys.__timeout[i];\n                clearTimeout(timerId);\n            }\n            sys.__timeout = [];\n        },\n        return_none: true\n    },\n    // @日時処理(簡易)\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] }, // @げんごうでーた\n    '今': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const z2 = (n) => {\n                n = '00' + n;\n                return n.substring(n.length - 2, n.length);\n            };\n            const t = new Date();\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n        }\n    },\n    'システム時間': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return Math.floor(now.getTime() / 1000);\n        }\n    },\n    'システム時間ミリ秒': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return now.getTime();\n        }\n    },\n    '今日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            return sys.__formatDate(new Date());\n        }\n    },\n    '明日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() + (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '昨日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() - (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '今年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear();\n        }\n    },\n    '来年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() + 1;\n        }\n    },\n    '去年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() - 1;\n        }\n    },\n    '今月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 1;\n        }\n    },\n    '来月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 2;\n        }\n    },\n    '先月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth();\n        }\n    },\n    '曜日': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return '日月火水木金土'.charAt(d.getDay() % 7);\n        }\n    },\n    '曜日番号取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s) {\n            const a = s.split('/');\n            const t = new Date(a[0], a[1] - 1, a[2]);\n            return t.getDay();\n        }\n    },\n    'UNIXTIME変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    'UNIX時間変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    '日時変換': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (tm, sys) {\n            const t = tm * 1000;\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\n        }\n    },\n    '日時書式変換': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (tm, fmt, sys) {\n            const t = sys.__str2date(tm);\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\n                switch (m) {\n                    case 'YYYY': return t.getFullYear();\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\n                    case 'DD': return sys.__zero2(t.getDate());\n                    case 'M': return (t.getMonth() + 1);\n                    case 'D': return (t.getDate());\n                    case 'HH': return sys.__zero2(t.getHours());\n                    case 'mm': return sys.__zero2(t.getMinutes());\n                    case 'ss': return sys.__zero2(t.getSeconds());\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\n                    case 'H': return (t.getHours());\n                    case 'm': return (t.getMinutes());\n                    case 's': return (t.getSeconds());\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\n                }\n                return m;\n            });\n            return fmt;\n        }\n    },\n    '和暦変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            const t = d.getTime();\n            for (const era of sys.__getSysVar('元号データ')) {\n                const gengo = era['元号'];\n                const d2 = sys.__str2date(era['改元日']);\n                const t2 = d2.getTime();\n                if (t2 <= t) {\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\n                    if (y === 1) {\n                        y = '元';\n                    }\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\n                }\n            }\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\n        }\n    },\n    '年数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return (t2.getFullYear() - t1.getFullYear());\n        }\n    },\n    '月数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\n                (t1.getFullYear() * 12 + t1.getMonth()));\n        }\n    },\n    '日数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\n            return days;\n        }\n    },\n    '時間差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\n            return hours;\n        }\n    },\n    '分差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const min = Math.ceil((t2 - t1) / (60));\n            return min;\n        }\n    },\n    '秒差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const sec = Math.ceil((t2 - t1));\n            return sec;\n        }\n    },\n    '日時差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\n        pure: true,\n        fn: function (a, b, unit, sys) {\n            switch (unit) {\n                case '年': return sys.__exec('年数差', [a, b, sys]);\n                case '月': return sys.__exec('月数差', [a, b, sys]);\n                case '日': return sys.__exec('日数差', [a, b, sys]);\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\n                case '分': return sys.__exec('分差', [a, b, sys]);\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\n            }\n            throw new Error('『日時差』で不明な単位です。');\n        }\n    },\n    '時間加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const op = a.charAt(0);\n            if (op === '-' || op === '+') {\n                a = a.substring(1);\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + ':0:0').split(':');\n            let sec = parseInt(aa[0]) * 60 * 60 +\n                parseInt(aa[1]) * 60 +\n                parseInt(aa[2]);\n            if (op === '-') {\n                sec *= -1;\n            }\n            const rd = new Date(d.getTime() + (sec * 1000));\n            return sys.__formatDateTime(rd, s);\n        }\n    },\n    '日付加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            let op = 1;\n            const opc = a.charAt(0);\n            if (opc === '-' || opc === '+') {\n                a = a.substring(1);\n                if (opc === '-') {\n                    op *= -1;\n                }\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + '/0/0').split('/');\n            const addY = parseInt(aa[0]) * op;\n            const addM = parseInt(aa[1]) * op;\n            const addD = parseInt(aa[2]) * op;\n            d.setFullYear(d.getFullYear() + addY);\n            d.setMonth(d.getMonth() + addM);\n            d.setDate(d.getDate() + addD);\n            return sys.__formatDateTime(d, s);\n        }\n    },\n    '日時加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\n            if (!r) {\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\n            }\n            switch (r[3]) {\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\n            }\n        }\n    },\n    '時間ミリ秒取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            if (performance && performance.now) {\n                return performance.now();\n            }\n            else if (Date.now) {\n                return Date.now();\n            }\n            else {\n                const now = new Date();\n                return now.getTime();\n            }\n        }\n    },\n    // @デバッグ支援\n    'エラー発生': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s) {\n            throw new Error(s);\n        },\n        return_none: true\n    },\n    '__DEBUG': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.isDebug = true;\n            console.log(sys);\n        }\n    },\n    '__DEBUG強制待機': { type: 'const', value: 0 }, // @__DEBUGきょうせいたいき\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] }, // @__DEBUGぶれいくぽいんといちらん\n    '__DEBUG待機フラグ': { type: 'const', value: 0 }, // @__DEBUGたいきフラグ\n    '__DEBUG_BP_WAIT': {\n        type: 'func',\n        josi: [['で']],\n        pure: true,\n        asyncFn: true,\n        fn: function (curLine, sys) {\n            return new Promise((resolve) => {\n                const breakpoints = sys.__getSysVar('__DEBUGブレイクポイント一覧');\n                const forceLine = sys.__getSysVar('__DEBUG強制待機');\n                sys.__setSysVar('__DEBUG強制待機', 0);\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\n                    if (sys.__getSysVar('プラグイン名') !== 'メイン') {\n                        return;\n                    } // 現状メインのみデバッグする\n                    console.log(`@__DEBUG_BP_WAIT(${curLine})`);\n                    const timerId = setInterval(() => {\n                        if (sys.__getSysVar('__DEBUG待機フラグ') === 1) {\n                            sys.__setSysVar('__DEBUG待機フラグ', 0);\n                            clearInterval(timerId);\n                            resolve(curLine);\n                        }\n                    }, 500);\n                }\n                else {\n                    resolve(curLine);\n                }\n            });\n        }\n    },\n    'グローバル関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[1];\n            const res = [];\n            for (const key of vars.keys()) {\n                res.push(key);\n            }\n            return res;\n        }\n    },\n    'システム関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__v0;\n            const res = [];\n            for (const key of vars.keys()) {\n                if (key.startsWith('__') || key.startsWith('!') || key === 'meta') {\n                    continue;\n                }\n                res.push(key);\n            }\n            return res;\n        }\n    },\n    'システム関数存在': {\n        type: 'func',\n        josi: [['が', 'の']],\n        pure: true,\n        fn: function (fname, sys) {\n            return (typeof sys.__getSysVar(fname) !== 'undefined');\n        }\n    },\n    'プラグイン一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.pluginfiles) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    'モジュール一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.__module) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    '助詞一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            return new Promise((resolve, reject) => {\n                import('./nako_josi_list.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    resolve(obj.josiList);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    '予約語一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            // const words = require('./nako_reserved_words.mjs')\n            return new Promise((resolve, reject) => {\n                import('./nako_reserved_words.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    const w = [];\n                    for (const key in obj.default) {\n                        w.push(key);\n                    }\n                    resolve(w);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    // @プラグイン管理\n    'プラグイン名': { type: 'const', value: 'メイン' }, // @ぷらぐいんめい\n    'プラグイン名設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__setSysVar('プラグイン名', s);\n        },\n        return_none: true\n    },\n    '名前空間': { type: 'const', value: '' }, // @なまえくうかん\n    '名前空間設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            // push namespace\n            sys.__namespaceList.push([sys.__getSysVar('名前空間'), sys.__getSysVar('プラグイン名')]);\n            sys.__setSysVar('名前空間', s);\n        },\n        return_none: true\n    },\n    '名前空間ポップ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // pop namespace\n            const a = sys.__namespaceList.pop();\n            if (a) {\n                sys.__setSysVar('名前空間', a[0]);\n                sys.__setSysVar('プラグイン名', a[1]);\n            }\n        },\n        return_none: true\n    },\n    // @URLエンコードとパラメータ\n    'URLエンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            return encodeURIComponent(text);\n        }\n    },\n    'URLデコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            return decodeURIComponent(text);\n        }\n    },\n    'URLパラメータ解析': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const res = {};\n            if (typeof url !== 'string') {\n                return res;\n            }\n            const p = url.split('?');\n            if (p.length <= 1) {\n                return res;\n            }\n            const params = p[1].split('&');\n            for (const line of params) {\n                const line2 = line + '=';\n                const kv = line2.split('=');\n                const k = sys.__exec('URLデコード', [kv[0]]);\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\n            }\n            return res;\n        }\n    },\n    // @BASE64\n    'BASE64エンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            // browser?\n            if (typeof (window) !== 'undefined' && window.btoa) {\n                const u8a = new TextEncoder().encode(text);\n                const utf8str = String.fromCharCode.apply(null, u8a);\n                return btoa(utf8str);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text).toString('base64');\n            }\n            throw new Error('『BASE64エンコード』は利用できません。');\n        }\n    },\n    'BASE64デコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            if (typeof (window) !== 'undefined' && window.atob) {\n                const decodedUtf8str = atob(text);\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\n                const decodedArray = new Uint8Array(dec);\n                return new TextDecoder('UTF-8').decode(decodedArray);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text, 'base64').toString();\n            }\n            throw new Error('『BASE64デコード』は利用できません。');\n        }\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\nexport const opPriority = {\n    // and or\n    'and': 1,\n    'or': 1,\n    // compare\n    'eq': 2,\n    'noteq': 2,\n    '===': 2,\n    '!==': 2,\n    'gt': 2,\n    'gteq': 2,\n    'lt': 2,\n    'lteq': 2,\n    '&': 3,\n    // + - << >> >>>\n    '+': 4,\n    '-': 4,\n    'shift_l': 4,\n    'shift_r': 4,\n    'shift_r0': 4,\n    // * /\n    '*': 5,\n    '/': 5, // 一般的な割り算\n    '÷': 5, // 一般的な割り算\n    '÷÷': 5, // 整数の割り算\n    '%': 5,\n    // ^\n    '^': 6,\n    '**': 6\n};\nexport const RenbunJosi = [\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\n];\nexport const operatorList = [];\nfor (const key in opPriority) {\n    operatorList.push(key);\n}\n","/**\n * なでしこ3 の TypeScript のための型定義\n */\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\n    return {\n        type,\n        value,\n        indent,\n        line,\n        column: 0,\n        file,\n        josi: ''\n    };\n}\n","import { NewEmptyToken } from './nako_types.mjs';\n/**\n * なでしこの構文解析のためのユーティリティクラス\n */\nexport class NakoParserBase {\n    constructor(logger) {\n        this.logger = logger;\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\n        this.tokens = [];\n        this.usedFuncs = new Set();\n        /** @type {import('./nako3.mjs').Ast[]} */\n        this.stack = [];\n        this.index = 0;\n        /** トークン出現チェック(accept関数)に利用する\n         * @type {import('./nako3.mjs').Ast[]}\n         */\n        this.y = [];\n        /** モジュル名 @type {string} */\n        this.modName = 'inline';\n        this.namespaceStack = [];\n        /**\n         * 利用するモジュールの名前一覧\n         * @type {Array<string>}\n         */\n        this.modList = [];\n        /** グローバル変数・関数の確認用 */\n        this.funclist = new Map();\n        this.funcLevel = 0;\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\n        /**\n         * ローカル変数の確認用\n         * @type {Object.<string,Object>}\n         */\n        this.localvars = new Map([['それ', { type: 'var', value: '' }]]);\n        /** コード生成器の名前 @type {string} */\n        this.genMode = 'sync'; // #637\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\n        this.arrayIndexFrom = 0;\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\n        this.flagReverseArrayIndex = false;\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\n        this.flagCheckArrayInit = false;\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\n        this.recentlyCalledFunc = [];\n        // 構文解析に利用する - 現在計算式を読んでいるかどうか\n        this.isReadingCalc = false;\n        // エクスポート設定が未設定の関数・変数に対する既定値\n        this.isExportDefault = true;\n        this.isExportStack = [];\n        this.moduleExport = new Map();\n        this.init();\n    }\n    init() {\n        this.funclist = new Map(); // 関数の一覧\n        this.moduleExport = new Map();\n        this.reset();\n    }\n    reset() {\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\n        this.genMode = 'sync'; // #637, #1056\n    }\n    setFuncList(funclist) {\n        this.funclist = funclist;\n    }\n    setModuleExport(moduleexport) {\n        this.moduleExport = moduleexport;\n    }\n    /**\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\n     * @param {string[]} josiList 下ろしたい助詞の配列\n     */\n    popStack(josiList = undefined) {\n        if (!josiList) {\n            const t = this.stack.pop();\n            if (t) {\n                return t;\n            }\n            return null;\n        }\n        // josiList にマッチする助詞を探す\n        for (let i = this.stack.length - 1; i >= 0; i--) {\n            const t = this.stack[i];\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\n                this.stack.splice(i, 1); // remove stack\n                this.logger.trace('POP :' + JSON.stringify(t));\n                return t;\n            }\n        }\n        // 該当する助詞が見つからなかった場合\n        return null;\n    }\n    /**\n     * saveStack と loadStack は対で使う。\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\n     */\n    saveStack() {\n        this.stackList.push(this.stack);\n        this.stack = [];\n    }\n    loadStack() {\n        this.stack = this.stackList.pop();\n    }\n    /** 変数名を探す\n     * @param {string} name\n     * @returns {any}変数名の情報\n     */\n    findVar(name) {\n        // ローカル変数？\n        if (this.localvars.get(name)) {\n            return {\n                name,\n                scope: 'local',\n                info: this.localvars.get(name)\n            };\n        }\n        // モジュール名を含んでいる?\n        if (name.indexOf('__') >= 0) {\n            if (this.funclist.get(name)) {\n                return {\n                    name,\n                    scope: 'global',\n                    info: this.funclist.get(name)\n                };\n            }\n            else {\n                return undefined;\n            }\n        }\n        // グローバル変数（自身）？\n        const gnameSelf = `${this.modName}__${name}`;\n        if (this.funclist.get(gnameSelf)) {\n            return {\n                name: gnameSelf,\n                scope: 'global',\n                info: this.funclist.get(gnameSelf)\n            };\n        }\n        // グローバル変数（モジュールを検索）？\n        for (const mod of this.modList) {\n            const gname = `${mod}__${name}`;\n            const exportDefault = this.moduleExport.get(mod);\n            const funcObj = this.funclist.get(gname);\n            if (funcObj && (funcObj.isExport === true || (funcObj.isExport !== false && exportDefault !== false))) {\n                return {\n                    name: gname,\n                    scope: 'global',\n                    info: this.funclist.get(gname)\n                };\n            }\n        }\n        // システム変数 (funclistを普通に検索)\n        if (this.funclist.get(name)) {\n            return {\n                name,\n                scope: 'system',\n                info: this.funclist.get(name)\n            };\n        }\n        return undefined;\n    }\n    /**\n     * 計算用に要素をスタックに積む\n     */\n    pushStack(item) {\n        this.logger.trace('PUSH:' + JSON.stringify(item));\n        this.stack.push(item);\n    }\n    /**\n     * トークンの末尾に達したか\n     */\n    isEOF() {\n        return (this.index >= this.tokens.length);\n    }\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * カーソル位置にある単語の型を確かめる\n     */\n    check(ttype) {\n        return (this.tokens[this.index].type === ttype);\n    }\n    /**\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\n     * @param a [単語1の型, 単語2の型, ... ]\n     */\n    check2(a) {\n        for (let i = 0; i < a.length; i++) {\n            const idx = i + this.index;\n            if (this.tokens.length <= idx) {\n                return false;\n            }\n            if (a[i] === '*') {\n                continue;\n            } // ワイルドカード(どんなタイプも許容)\n            const t = this.tokens[idx];\n            if (a[i] instanceof Array) {\n                if (a[i].indexOf(t.type) < 0) {\n                    return false;\n                }\n                continue;\n            }\n            if (t.type !== a[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\n     */\n    checkTypes(a) {\n        const type = this.tokens[this.index].type;\n        return (a.indexOf(type) >= 0);\n    }\n    /**\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\n     */\n    accept(types) {\n        const y = [];\n        const tmpIndex = this.index;\n        const rollback = () => {\n            this.index = tmpIndex;\n            return false;\n        };\n        for (let i = 0; i < types.length; i++) {\n            if (this.isEOF()) {\n                return rollback();\n            }\n            const type = types[i];\n            if (type == null) {\n                return rollback();\n            }\n            if (typeof type === 'string') {\n                const token = this.get();\n                if (token && token.type !== type) {\n                    return rollback();\n                }\n                y[i] = token;\n                continue;\n            }\n            if (typeof type === 'function') {\n                const f = type.bind(this);\n                const r = f(y);\n                if (r === null) {\n                    return rollback();\n                }\n                y[i] = r;\n                continue;\n            }\n            if (type instanceof Array) {\n                if (!this.checkTypes(type)) {\n                    return rollback();\n                }\n                y[i] = this.get();\n                continue;\n            }\n            throw new Error('System Error : accept broken : ' + typeof type);\n        }\n        this.y = y;\n        return true;\n    }\n    /**\n     * カーソル語句を取得して、カーソルを後ろに移動する\n     */\n    get() {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index++];\n    }\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\n    getCur() {\n        if (this.isEOF()) {\n            throw new Error('トークンが取得できません。');\n        }\n        const t = this.tokens[this.index++];\n        if (!t) {\n            throw new Error('トークンが取得できません。');\n        }\n        return t;\n    }\n    unget() {\n        if (this.index > 0) {\n            this.index--;\n        }\n    }\n    /** 解析中のトークンを返す */\n    peek(i = 0) {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index + i];\n    }\n    /** 解析中のトークンを返す、無理なら def を返す */\n    peekDef(def = null) {\n        if (this.isEOF()) {\n            if (!def) {\n                def = NewEmptyToken();\n            }\n            return def;\n        }\n        return this.tokens[this.index];\n    }\n    /**\n     * 現在のカーソル語句のソースコード上の位置を取得する。\n     */\n    peekSourceMap() {\n        const token = this.peek();\n        if (token === null) {\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\n        }\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\n    }\n    /**\n     * depth: 表示する深さ\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\n     * @param {{ depth: number, typeName?: string }} opts\n     * @param {boolean} debugMode\n     */\n    nodeToStr(node, opts, debugMode) {\n        const depth = opts.depth - 1;\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\n        if (!node) {\n            return '(NULL)';\n        }\n        switch (node.type) {\n            case 'not':\n                if (depth >= 0) {\n                    const subNode = node.value;\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『not』`;\n                }\n            case 'op': {\n                const node2 = node;\n                let operator = node2.operator || '';\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\n                if (operator in table) {\n                    operator = table[operator];\n                }\n                if (depth >= 0) {\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\n                    if (node2.operator === 'eq') {\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\n                    }\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『${operator}${debug}』`;\n                }\n            }\n            case 'number':\n                return `${typeName('数値')}${node.value}`;\n            case 'bigint':\n                return `${typeName('巨大整数')}${node.value}`;\n            case 'string':\n                return `${typeName('文字列')}『${node.value}${debug}』`;\n            case 'word':\n                return `${typeName('単語')}『${node.value}${debug}』`;\n            case 'func':\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\n            case 'eol':\n                return '行の末尾';\n            case 'eof':\n                return 'ファイルの末尾';\n            default: {\n                let name = node.name;\n                if (name) {\n                    name = node.value;\n                }\n                if (typeof name !== 'string') {\n                    name = node.type;\n                }\n                return `${typeName('')}『${name}${debug}』`;\n            }\n        }\n    }\n}\n","/**\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\n */\nexport function isIndentChars(ch) {\n    const code = ch.charCodeAt(0);\n    // 特別なコード\n    if (ch === '\\t') {\n        return 4;\n    }\n    if (ch === ' ' || ch === '|') {\n        return 1;\n    }\n    if (ch === '・' || ch === '　') {\n        return 2;\n    }\n    if (ch === '⏋' || ch === '⏌') {\n        return 2;\n    } // 0x23CB, 0x23CC\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\n    if (code >= 0x2500 && code <= 0x257F) {\n        return 2;\n    }\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\n        (code >= 0x23B8 && code <= 0x23BF)) {\n        return 2;\n    }\n    return 0;\n}\n","/**\n * なでしこ3字句解析のためのルール\n */\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\nconst hira = /^[ぁ-ん]/;\nconst allHiragana = /^[ぁ-ん]+$/;\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\nconst wordSpecial = /^(かつ|または)/;\nconst errorRead = (ch) => {\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\n};\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\n/** トークンに区切るルールの一覧 */\nexport const rules = [\n    // 上から順にマッチさせていく\n    { name: 'ここまで', pattern: /^;;;/ }, // #925\n    { name: 'eol', pattern: /^\\n/ },\n    { name: 'eol', pattern: /^;/ },\n    // eslint-disable-next-line no-control-regex\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ }, // #877,#1015\n    { name: 'comma', pattern: /^,/ },\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\n    { name: 'def_test', pattern: /^●テスト:/ },\n    { name: 'def_func', pattern: /^●/ },\n    // 多倍長整数リテラルの判定。整数の末尾に「n」がついているだけな為、数値判定より上に書かないとただの整数にされる\n    { name: 'bigint', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[oO][0-7]+(_[0-7]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[bB][0-1]+(_[0-1]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^\\d+(_\\d+)*?n/, readJosi: true },\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'ここから', pattern: /^(ここから),?/ },\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\n    { name: 'もし', pattern: /^もしも?/ },\n    // 「ならば」は助詞として定義している\n    { name: '違えば', pattern: /^違(えば)?/ },\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\n    // @see nako_reserved_words.js\n    { name: 'shift_r0', pattern: /^>>>/ },\n    { name: 'shift_r', pattern: /^>>/ },\n    { name: 'shift_l', pattern: /^<</ },\n    { name: '===', pattern: /^===/ }, // #999\n    { name: '!==', pattern: /^!==/ }, // #999\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\n    { name: '←', pattern: /^(←|<--)/ }, // 矢印 --- ただし(core#140)で廃止された演算子(#891,#899)\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\n    { name: 'eq', pattern: /^(=|🟰)/ },\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ }, // #1184\n    { name: 'not', pattern: /^(!|💡)/ }, // #1184 #1457\n    { name: 'gt', pattern: /^>/ },\n    { name: 'lt', pattern: /^</ },\n    { name: 'and', pattern: /^(かつ|&&|and\\s)/ },\n    { name: 'or', pattern: /^(または|或いは|あるいは|or\\s|\\|\\|)/ },\n    { name: '@', pattern: /^@/ },\n    { name: '+', pattern: /^\\+/ },\n    { name: '-', pattern: /^-/ },\n    { name: '**', pattern: /^(××|\\*\\*)/ }, // Python風べき乗演算子\n    { name: '*', pattern: /^(×|\\*)/ },\n    { name: '÷÷', pattern: /^÷÷/ }, // 整数の割り算\n    { name: '÷', pattern: /^(÷|\\/)/ }, // 普通の割り算\n    { name: '%', pattern: /^%/ },\n    { name: '^', pattern: /^\\^/ },\n    { name: '&', pattern: /^&/ },\n    { name: '[', pattern: /^\\[/ },\n    { name: ']', pattern: /^]/, readJosi: true },\n    { name: '(', pattern: /^\\(/ },\n    { name: ')', pattern: /^\\)/, readJosi: true },\n    { name: '|', pattern: /^\\|/ },\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') }, // error\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') }, // error\n    { name: 'func', pattern: /^\\{関数\\},?/ },\n    { name: '{', pattern: /^\\{/ },\n    { name: '}', pattern: /^\\}/, readJosi: true },\n    { name: ':', pattern: /^:/ },\n    { name: '_eol', pattern: /^_\\s*\\n/ },\n    { name: 'dec_lineno', pattern: /^‰/ },\n    // 絵文字変数 = (絵文字)英数字*\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true }, // 絵文字\n    { name: 'word', pattern: /^《.+?》/, readJosi: true }, // 《特別名前トークン》(#672)\n    // 単語句\n    {\n        name: 'word',\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\n        cbParser: cbWordParser\n    }\n];\nexport function trimOkurigana(s) {\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\n    if (!hira.test(s)) {\n        return s.replace(/[ぁ-ん]+/g, '');\n    }\n    // 全てひらがな？ (例) どうぞ\n    if (allHiragana.test(s)) {\n        return s;\n    }\n    // 末尾のひらがなのみ (例)お願いします →お願\n    return s.replace(/[ぁ-ん]+$/g, '');\n}\n// Utility for Rule\nfunction cbRangeComment(src) {\n    let res = '';\n    const josi = '';\n    let numEOL = 0;\n    src = src.substring(2); // skip /*\n    const i = src.indexOf('*/');\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + 2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\n    return { src, res, josi, numEOL };\n}\n/**\n * @param {string} src\n */\nfunction cbWordParser(src, isTrimOkurigana = true) {\n    /*\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\n      hiragana = [ぁ-ん]\n      katakana = [ァ-ヶー]\n      emoji    = [\\u1F60-\\u1F6F]\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\n      alphabet = [_a-zA-Z]\n      numchars = [0-9]\n    */\n    let res = '';\n    let josi = '';\n    while (src !== '') {\n        // 1文字以上のとき\n        if (res.length > 0) {\n            // 「かつ」「または」なら分割する (#1379 core#84)\n            const jsw = wordSpecial.exec(src);\n            if (jsw) {\n                break;\n            }\n            // 助詞の判定\n            const j = josiRE.exec(src);\n            if (j) {\n                josi = j[0].replace(/^\\s+/, '');\n                src = src.substring(j[0].length);\n                // 助詞の直後にある「,」を飛ばす #877\n                if (src.charAt(0) === ',') {\n                    src = src.substring(1);\n                }\n                break;\n            }\n        }\n        // カタカナ漢字英数字か？\n        const m = kanakanji.exec(src);\n        if (m) {\n            res += m[0];\n            src = src.substring(m[0].length);\n            continue;\n        }\n        // ひらがな？\n        const h = hira.test(src);\n        if (h) {\n            res += src.charAt(0);\n            src = src.substring(1);\n            continue;\n        }\n        break; // other chars\n    }\n    // --- 単語分割における特殊ルール ---\n    // 「間」の特殊ルール (#831)\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\n    if (/[ぁ-ん]間$/.test(res)) {\n        src = res.charAt(res.length - 1) + src;\n        res = res.slice(0, -1);\n    }\n    // 「以上」「以下」「超」「未満」 #918\n    const ii = wordHasIjoIka.exec(res);\n    if (ii) {\n        src = ii[1] + josi + src;\n        josi = '';\n        res = res.substring(0, res.length - ii[1].length);\n    }\n    // 「もの」構文 #1614\n    if (josi.substring(0, 2) === 'もの') {\n        josi = josi.substring(2);\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 送り仮名の省略ルール\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\n    if (isTrimOkurigana) {\n        res = trimOkurigana(res);\n    }\n    // 助詞だけの語句の場合\n    if (res === '' && josi !== '') {\n        res = josi;\n        josi = '';\n    }\n    return { src, res, josi, numEOL: 0 };\n}\nfunction cbString(beginTag, closeTag, src) {\n    let res = '';\n    let josi = '';\n    let numEOL = 0;\n    src = src.substring(beginTag.length); // skip beginTag\n    const i = src.indexOf(closeTag);\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + closeTag.length);\n        // res の中に beginTag があればエラーにする #953\n        if (res.indexOf(beginTag) >= 0) {\n            if (beginTag === '『') {\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\n            }\n            else {\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\n            }\n        }\n    }\n    // 文字列直後の助詞を取得\n    const j = josiRE.exec(src);\n    if (j) {\n        josi = j[0].replace(/^\\s+/, '');\n        src = src.substring(j[0].length);\n        // 助詞の後のカンマ #877\n        if (src.charAt(0) === ',') {\n            src = src.substring(1);\n        }\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 「もの」構文 (#1614)\n    if (josi.substring(0, 2) === 'もの') {\n        josi = josi.substring(2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    return { src, res, josi, numEOL };\n}\nfunction parseNumber(n) {\n    return Number(n.replace(/_/g, ''));\n}\n","// なでしこの字句解析を行う\n// 既に全角半角を揃えたコードに対して字句解析を行う\nimport { opPriority } from './nako_parser_const.mjs';\n// 予約語句\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\n/** @types {Record<string, string>} */\nimport reservedWords from './nako_reserved_words.mjs';\nimport { isIndentChars } from './nako_indent_chars.mjs';\n// 助詞の一覧\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\n// 字句解析ルールの一覧\nimport { rules, unitRE } from './nako_lex_rules.mjs';\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\nexport class NakoLexer {\n    /**\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\n        this.funclist = new Map();\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\n        this.result = [];\n        this.modName = 'main.nako3'; // モジュール名\n        this.moduleExport = new Map();\n    }\n    /** 関数一覧をセット */\n    setFuncList(listMap) {\n        this.funclist = listMap;\n    }\n    /** モジュール公開既定値一覧をセット */\n    setModuleExport(exportObj) {\n        this.moduleExport = exportObj;\n    }\n    /**\n     * @param tokens\n     * @param {boolean} isFirst\n     * @param {string} filename\n     */\n    replaceTokens(tokens, isFirst, filename) {\n        this.result = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        // 関数の定義があれば funclist を更新\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist, this.moduleExport);\n        this._replaceWord(this.result);\n        if (isFirst) {\n            if (this.result.length > 0) {\n                const eof = this.result[this.result.length - 1];\n                this.result.push({\n                    type: 'eol',\n                    line: eof.line,\n                    column: 0,\n                    indent: -1,\n                    file: eof.file,\n                    josi: '',\n                    value: '---',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: eof.line,\n                    indent: -1,\n                    column: 0,\n                    file: eof.file,\n                    josi: '',\n                    value: '',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n            else {\n                this.result.push({\n                    type: 'eol',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '---',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n        }\n        return this.result;\n    }\n    /**\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\n     */\n    static preDefineFunc(tokens, logger, funclist, moduleexport) {\n        // 関数を先読みして定義\n        let i = 0;\n        let isFuncPointer = false;\n        const readArgs = () => {\n            const args = [];\n            const keys = {};\n            if (tokens[i].type !== '(') {\n                return [];\n            }\n            i++;\n            while (tokens[i]) {\n                const t = tokens[i];\n                i++;\n                if (t.type === ')') {\n                    break;\n                }\n                if (t.type === 'func') {\n                    isFuncPointer = true;\n                }\n                else if (t.type !== '|' && t.type !== 'comma') {\n                    if (isFuncPointer) {\n                        t.funcPointer = true;\n                        isFuncPointer = false;\n                    }\n                    args.push(t);\n                    if (!keys[t.value]) {\n                        keys[t.value] = [];\n                    }\n                    keys[t.value].push(t.josi);\n                }\n            }\n            const varnames = [];\n            const funcPointers = [];\n            const result = [];\n            const already = {};\n            for (const arg of args) {\n                if (!already[arg.value]) {\n                    const josi = keys[arg.value];\n                    result.push(josi);\n                    varnames.push(arg.value);\n                    if (arg.funcPointer) {\n                        funcPointers.push(arg.value);\n                    }\n                    else {\n                        funcPointers.push(null);\n                    }\n                    already[arg.value] = true;\n                }\n            }\n            return [result, varnames, funcPointers];\n        };\n        // トークンを一つずつ確認\n        while (i < tokens.length) {\n            // タイプの置換\n            const t = tokens[i];\n            if (t.type === 'not' && tokens.length - i > 3) {\n                let prevToken = { type: 'eol' };\n                if (i >= 1) {\n                    prevToken = tokens[i - 1];\n                }\n                if (prevToken.type === 'eol') {\n                    let nextToken = tokens[i + 1];\n                    if (nextToken.type === 'word' && nextToken.value === 'モジュール公開既定値') {\n                        nextToken.type = 'モジュール公開既定値';\n                        nextToken = tokens[i + 2];\n                        if (nextToken.type === 'string' && nextToken.value === '非公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport.set(modName, false);\n                            i += 3;\n                            continue;\n                        }\n                        else if (nextToken.type === 'string' && nextToken.value === '公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport.set(modName, true);\n                            i += 3;\n                            continue;\n                        }\n                    }\n                }\n            }\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\n                t.josi = 'には';\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\n                i++;\n                continue;\n            }\n            // N回をN|回に置換\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\n                if (t.value.match(/回$/)) {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    // N回を挿入\n                    if (!t.endOffset) {\n                        t.endOffset = 1;\n                    }\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\n                    tokens.splice(i + 1, 0, kai);\n                    t.endOffset--;\n                    i++;\n                }\n            }\n            // 予約語の置換\n            if (t.type === 'word') {\n                const rtype = reservedWords.get(t.value);\n                if (rtype) {\n                    t.type = rtype;\n                }\n                if (t.value === 'そう') {\n                    t.value = 'それ';\n                }\n            }\n            // 関数定義の確認\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\n                i++;\n                continue;\n            }\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\n            let isMumei = true;\n            let prevToken = { type: 'eol' };\n            if (i >= 1) {\n                prevToken = tokens[i - 1];\n            }\n            if (prevToken.type === 'eol') {\n                isMumei = false;\n            }\n            // 関数名や引数を得る\n            const defToken = t;\n            i++; // skip \"●\" or \"関数\"\n            let josi = [];\n            let varnames = [];\n            let funcPointers = [];\n            let funcName = '';\n            let funcNameToken = null;\n            let isExport = null;\n            // 関数の属性指定\n            if (tokens[i] && tokens[i].type === '{') {\n                i++;\n                const attr = tokens[i] && tokens[i].type === 'word' ? tokens[i].value : '';\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    logger.warn(`不明な関数属性『${attr}』が指定されています。`);\n                }\n                i++;\n                if (tokens[i] && tokens[i].type === '}') {\n                    i++;\n                }\n            }\n            // 関数名の前に引数定義\n            if (tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 関数名を得る\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\n                funcNameToken = tokens[i++];\n                funcName = funcNameToken.value;\n            }\n            // 関数名の後で引数定義\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\n            // 無名関数は登録しないように気をつける\n            if (funcName !== '' && funcNameToken) {\n                const modName = NakoLexer.filenameToModName(t.file);\n                funcName = modName + '__' + funcName;\n                if (funclist.has(funcName)) { // 関数の二重定義を警告\n                    // main__は省略 #1223\n                    const dispName = funcName.replace(/^main__/, '');\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\n                }\n                funcNameToken.value = funcName;\n                funclist.set(funcName, {\n                    type: 'func',\n                    josi,\n                    fn: null,\n                    asyncFn: false,\n                    isExport,\n                    varnames,\n                    funcPointers\n                });\n            }\n            // 無名関数のために\n            const metaValue = {\n                'type': 'func',\n                josi,\n                varnames,\n                funcPointers\n            };\n            defToken.meta = metaValue;\n        }\n    }\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\n    splitStringEx(code) {\n        /** @type {string[]} */\n        const list = [];\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\n        const arr = code.split(/[{｛]/);\n        list.push(arr[0]);\n        for (const s of arr.slice(1)) {\n            const end = s.replace('｝', '}').indexOf('}');\n            if (end === -1) {\n                return null;\n            }\n            list.push(s.slice(0, end), s.slice(end + 1));\n        }\n        return list;\n    }\n    _replaceWord(tokens) {\n        let comment = [];\n        let i = 0;\n        let isFuncPointer = false;\n        const namespaceStack = [];\n        const getLastType = () => {\n            if (i <= 0) {\n                return 'eol';\n            }\n            return tokens[i - 1].type;\n        };\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main';\n        while (i < tokens.length) {\n            const t = tokens[i];\n            // モジュール名の変更に対応\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\n                if (isFuncPointer) {\n                    throw new InternalLexerError('名前空間設定の関数参照を取得することはできません。', t.startOffset === undefined ? 0 : t.startOffset, t.endOffset === undefined ? 0 : t.endOffset, t.line, t.file);\n                }\n                namespaceStack.push(modSelf);\n                modSelf = tokens[i - 1].value;\n            }\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間ポップ') {\n                if (isFuncPointer) {\n                    throw new InternalLexerError('名前空間ポップの関数参照を取得することはできません。', t.startOffset === undefined ? 0 : t.startOffset, t.endOffset === undefined ? 0 : t.endOffset, t.line, t.file);\n                }\n                const space = namespaceStack.pop();\n                if (space) {\n                    modSelf = space;\n                }\n            }\n            // 関数を強制的に置換( word => func )\n            if (t.type === 'word' && t.value !== 'それ') {\n                // 関数を変換\n                const funcName = t.value;\n                if (funcName.indexOf('__') < 0) {\n                    // 自身のモジュール名を検索\n                    const gname1 = `${modSelf}__${funcName}`;\n                    const gfo1 = this.funclist.get(gname1);\n                    if (gfo1 && gfo1.type === 'func') {\n                        t.type = isFuncPointer ? 'func_pointer' : 'func';\n                        t.meta = gfo1;\n                        t.value = gname1;\n                        if (isFuncPointer) {\n                            isFuncPointer = false;\n                            tokens.splice(i - 1, 1);\n                        }\n                        continue;\n                    }\n                    // モジュール関数を置換\n                    for (const mod of this.modList) {\n                        const gname = `${mod}__${funcName}`;\n                        const gfo = this.funclist.get(gname);\n                        const exportDefault = this.moduleExport.get(mod);\n                        if (gfo && gfo.type === 'func' && (gfo.isExport === true || (gfo.isExport !== false && exportDefault !== false))) {\n                            t.type = isFuncPointer ? 'func_pointer' : 'func';\n                            t.meta = gfo;\n                            t.value = gname;\n                            if (isFuncPointer) {\n                                isFuncPointer = false;\n                                tokens.splice(i - 1, 1);\n                            }\n                            break;\n                        }\n                    }\n                    if (t.type === 'func' || t.type === 'func_pointer') {\n                        continue;\n                    }\n                }\n                const fo = this.funclist.get(funcName);\n                if (fo && fo.type === 'func') {\n                    t.type = isFuncPointer ? 'func_pointer' : 'func';\n                    t.meta = fo;\n                    if (isFuncPointer) {\n                        isFuncPointer = false;\n                        tokens.splice(i - 1, 1);\n                        continue;\n                    }\n                }\n            }\n            // 関数ポインタの前置詞を検出\n            if (isFuncPointer) {\n                // 無効な関数参照の指定がある。\n            }\n            isFuncPointer = false;\n            if (t.type === 'func' && t.value === '{関数}') {\n                i++;\n                isFuncPointer = true;\n                continue;\n            }\n            // 数字につくマイナス記号を判定\n            // (ng) 5 - 3 || word - 3\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\n            if (t.type === '-' && tokens[i + 1]) {\n                const tokenType = tokens[i + 1].type;\n                if (tokenType === 'number' || tokenType === 'bigint') {\n                    // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\n                    const ltype = getLastType();\n                    if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\n                        tokens.splice(i, 1); // remove '-'\n                        if (tokenType === 'number') {\n                            tokens[i].value *= -1;\n                        }\n                        else {\n                            tokens[i].value = '-' + tokens[i].value;\n                        }\n                    }\n                }\n            }\n            // 助詞の「は」を = に展開\n            if (t.josi === undefined) {\n                t.josi = '';\n            }\n            if (t.josi === 'は') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'eq',\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                i += 2;\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                continue;\n            }\n            // 「とは」を一つの単語にする\n            if (t.josi === 'とは') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: t.josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // 助詞のならばをトークンとする\n            if (tararebaMap[t.josi]) {\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\n                if (!t.rawJosi) {\n                    t.rawJosi = josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'ならば',\n                    value: josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: ''\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\n            if (t.type === '_eol') {\n                tokens.splice(i, 1);\n                continue;\n            }\n            // コメントを飛ばす\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\n                comment.push(t.value);\n                tokens.splice(i, 1);\n                continue;\n            }\n            // 改行にコメントを埋め込む\n            if (t.type === 'eol') {\n                t.value = comment.join('/');\n                comment = [];\n            }\n            i++;\n        }\n    }\n    /**\n     * インデントの個数を数える\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\n     */\n    countIndent(src) {\n        let indent = 0;\n        for (let i = 0; i < src.length; i++) {\n            const c = src.charAt(i);\n            const n = isIndentChars(c);\n            if (n === 0) {\n                return [indent, i];\n            }\n            indent += n;\n        }\n        return [indent, src.length];\n    }\n    /**\n     * ソースコードをトークンに分割する\n     * @param src なでしこのソースコード\n     * @param line 先頭行の行番号\n     * @param filename ファイル名\n     */\n    tokenize(src, line, filename) {\n        const srcLength = src.length;\n        const result = [];\n        let columnCurrent;\n        let lineCurrent;\n        let column = 1;\n        let isDefTest = false;\n        let indent = 0;\n        // 最初にインデントを数える\n        const ia = this.countIndent(src);\n        indent = ia[0]; // インデント数\n        src = src.substring(ia[1]); // 読み飛ばす文字数\n        column += ia[1];\n        while (src !== '') {\n            let ok = false;\n            // 各ルールについて\n            for (const rule of rules) {\n                // 正規表現でマッチ\n                const m = rule.pattern.exec(src);\n                if (!m) {\n                    continue;\n                }\n                ok = true;\n                // 空白ならスキップ\n                if (rule.name === 'space') {\n                    column += m[0].length;\n                    src = src.substring(m[0].length);\n                    continue;\n                }\n                // マッチしたルールがコールバックを持つなら\n                if (rule.cbParser) {\n                    // コールバックを呼ぶ\n                    let rp;\n                    if (isDefTest && rule.name === 'word') {\n                        rp = rule.cbParser(src, false);\n                    }\n                    else {\n                        try {\n                            rp = rule.cbParser(src);\n                        }\n                        catch (e) {\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\n                        }\n                    }\n                    if (rule.name === 'string_ex') {\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\n                        const list = this.splitStringEx(rp.res);\n                        if (list === null) {\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\n                        }\n                        let offset = 0;\n                        for (let i = 0; i < list.length; i++) {\n                            const josi = (i === list.length - 1) ? rp.josi : '';\n                            if (i % 2 === 0) {\n                                result.push({\n                                    type: 'string',\n                                    value: list[i],\n                                    file: filename,\n                                    josi,\n                                    indent,\n                                    line,\n                                    column,\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\n                                });\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\n                                offset += list[i].length + 2;\n                            }\n                            else {\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                offset += list[i].length;\n                            }\n                        }\n                        line += rp.numEOL;\n                        column += src.length - rp.src.length;\n                        src = rp.src;\n                        if (rp.numEOL > 0) {\n                            column = 1;\n                        }\n                        break;\n                    }\n                    columnCurrent = column;\n                    column += src.length - rp.src.length;\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\n                    src = rp.src;\n                    line += rp.numEOL;\n                    if (rp.numEOL > 0) {\n                        column = 1;\n                    }\n                    break;\n                }\n                // ソースを進める前に位置を計算\n                const srcOffset = srcLength - src.length;\n                // 値を変換する必要があるか？\n                let value = m[0];\n                if (rule.cb) {\n                    value = rule.cb(value);\n                }\n                // ソースを進める\n                columnCurrent = column;\n                lineCurrent = line;\n                column += m[0].length;\n                src = src.substring(m[0].length);\n                // 改行の時の処理\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\n                    value = line++;\n                    column = 1;\n                }\n                // 数値なら単位を持つか？ --- #994\n                if (rule.name === 'number') {\n                    // 単位があれば読み飛ばす\n                    const um = unitRE.exec(src);\n                    if (um) {\n                        src = src.substring(um[0].length);\n                        column += m[0].length;\n                    }\n                }\n                let josi = '';\n                if (rule.readJosi) {\n                    // 正規表現で助詞があるか読み取る\n                    const j = josiRE.exec(src);\n                    if (j) {\n                        column += j[0].length;\n                        josi = j[0].replace(/^\\s+/, '');\n                        src = src.substring(j[0].length);\n                        // 助詞の直後にあるカンマを無視 #877\n                        if (src.charAt(0) === ',') {\n                            src = src.substring(1);\n                        }\n                        // 「＊＊である」なら削除 #939 #974\n                        if (removeJosiMap[josi]) {\n                            josi = '';\n                        }\n                        // 「もの」構文 (#1614)\n                        if (josi.substring(0, 2) === 'もの') {\n                            josi = josi.substring(2);\n                        }\n                    }\n                }\n                switch (rule.name) {\n                    case 'def_test': {\n                        isDefTest = true;\n                        break;\n                    }\n                    case 'eol': { // eolの処理はほかに↑と↓にある\n                        isDefTest = false;\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n                // ここまで‰(#682) を処理\n                if (rule.name === 'dec_lineno') {\n                    line--;\n                    continue;\n                }\n                result.push({\n                    type: rule.name,\n                    value,\n                    indent,\n                    line: lineCurrent,\n                    column: columnCurrent,\n                    file: filename,\n                    josi,\n                    preprocessedCodeOffset: srcOffset,\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\n                });\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\n                if (rule.name === 'eol' && column === 1) {\n                    const ia = this.countIndent(src);\n                    indent = ia[0];\n                    column += ia[1];\n                    src = src.substring(ia[1]); // インデントを飛ばす\n                }\n                break;\n            }\n            if (!ok) {\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\n            }\n        }\n        return result;\n    }\n    // トークン配列をtype文字列に変換\n    static tokensToTypeStr(tokens, sep) {\n        const a = tokens.map((v) => {\n            return v.type;\n        });\n        return a.join(sep);\n    }\n    /**\n     * ファイル名からモジュール名へ変換\n     * @param {string} filename\n     * @returns {string}\n     */\n    static filenameToModName(filename) {\n        if (!filename) {\n            return 'main';\n        }\n        // パスがあればパスを削除\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\n        if (filename.indexOf('/') >= 0) {\n            const a = filename.split('/');\n            filename = a[a.length - 1];\n        }\n        filename = filename.replace(/\\.nako3?$/, '');\n        return filename;\n    }\n}\n","/**\n * nadesiko v3 parser\n */\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\nimport { NakoParserBase } from './nako_parser_base.mjs';\nimport { NakoSyntaxError } from './nako_errors.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * 構文解析を行うクラス\n */\nexport class NakoParser extends NakoParserBase {\n    /**\n     * 構文解析を実行する\n     */\n    parse(tokens, filename) {\n        this.reset();\n        this.tokens = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        this.modList.push(this.modName);\n        // 解析開始\n        return this.startParser();\n    }\n    /** パーサーの一番最初に呼び出す構文規則 */\n    startParser() {\n        const b = this.ySentenceList();\n        const c = this.get();\n        if (c && c.type !== 'eof') {\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\n        }\n        return b;\n    }\n    /** 複数文を返す */\n    ySentenceList() {\n        const blocks = [];\n        let line = -1;\n        const map = this.peekSourceMap();\n        while (!this.isEOF()) {\n            const n = this.ySentence();\n            if (!n) {\n                break;\n            }\n            blocks.push(n);\n            if (line < 0) {\n                line = n.line;\n            }\n        }\n        if (blocks.length === 0) {\n            const token = this.peek() || this.tokens[0];\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\n    }\n    /** 余剰スタックのレポートを作る */\n    makeStackBalanceReport() {\n        const words = [];\n        this.stack.forEach((t) => {\n            let w = this.nodeToStr(t, { depth: 1 }, false);\n            if (t.josi) {\n                w += t.josi;\n            }\n            words.push(w);\n        });\n        const desc = words.join(',');\n        // 最近使った関数の使い方レポートを作る #1093\n        let descFunc = '';\n        const chA = 'A'.charCodeAt(0);\n        for (const f of this.recentlyCalledFunc) {\n            descFunc += ' - ';\n            let no = 0;\n            const josiA = f.josi;\n            if (josiA) {\n                for (const arg of josiA) {\n                    const ch = String.fromCharCode(chA + no);\n                    descFunc += ch;\n                    if (arg.length === 1) {\n                        descFunc += arg[0];\n                    }\n                    else {\n                        descFunc += `(${arg.join('|')})`;\n                    }\n                    no++;\n                }\n            }\n            descFunc += f.name + '\\n';\n        }\n        this.recentlyCalledFunc = [];\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\n    }\n    yEOL() {\n        // 行末のチェック #1009\n        const eol = this.get();\n        if (!eol) {\n            return null;\n        }\n        // 余剰スタックの確認\n        if (this.stack.length > 0) {\n            const report = this.makeStackBalanceReport();\n            throw NakoSyntaxError.fromNode(report, eol);\n        }\n        this.recentlyCalledFunc = [];\n        return eol; // Token to Ast\n    }\n    /** @returns {Ast | null} */\n    ySentence() {\n        const map = this.peekSourceMap();\n        // 最初の語句が決まっている構文\n        if (this.check('eol')) {\n            return this.yEOL();\n        }\n        if (this.check('もし')) {\n            return this.yIF();\n        }\n        if (this.check('後判定')) {\n            return this.yAtohantei();\n        }\n        if (this.check('エラー監視')) {\n            return this.yTryExcept();\n        }\n        if (this.accept(['抜ける'])) {\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['続ける'])) {\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['DNCLモード'])) {\n            return this.yDNCLMode(1);\n        }\n        if (this.accept(['DNCL2モード'])) {\n            return this.yDNCLMode(2);\n        }\n        if (this.accept(['not', 'string', 'モード設定'])) {\n            return this.ySetGenMode(this.y[1].value);\n        }\n        if (this.accept(['not', 'モジュール公開既定値', 'eq', 'string'])) {\n            return this.yExportDefault(this.y[3].value);\n        }\n        // (memo) 現状「取込」はプリプロセス段階(NakoCompiler.listRequireStatements)で処理される\n        // if (this.accept(['require', 'string', '取込'])) { return this.yRequire() }\n        // 廃止された構文 #1611\n        if (this.check('逐次実行')) {\n            return this.yTikuji();\n        }\n        if (this.accept(['not', '非同期モード'])) {\n            return this.yASyncMode();\n        }\n        if (this.check2(['func', 'eq'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\n        }\n        // 先読みして初めて確定する構文\n        if (this.accept([this.ySpeedMode])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yPerformanceMonitor])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yLet])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefTest])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefFunc])) {\n            return this.y[0];\n        }\n        // 関数呼び出しの他、各種構文の実装\n        if (this.accept([this.yCall])) {\n            const c1 = this.y[0];\n            const nextToken = this.peek();\n            if (nextToken && nextToken.type === 'ならば') {\n                const map = this.peekSourceMap();\n                const cond = c1;\n                this.get(); // skip ならば\n                // もし文の条件として関数呼び出しがある場合\n                return this.yIfThen(map, cond);\n            }\n            else if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\n                    const report = this.makeStackBalanceReport();\n                    throw NakoSyntaxError.fromNode(report, c1);\n                }\n                const c2 = this.ySentence();\n                if (c2 !== null) {\n                    return {\n                        type: 'block',\n                        block: [c1, c2],\n                        josi: c2.josi,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n            }\n            return c1;\n        }\n        return null;\n    }\n    /** [廃止] 非同期モード #11 @returns {Ast} */\n    yASyncMode() {\n        this.logger.error('『非同期モード』構文は廃止されました(https://nadesi.com/v3/doc/go.php?1028)。', this.peek());\n        const map = this.peekSourceMap();\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** set DNCL mode */\n    yDNCLMode(ver) {\n        const map = this.peekSourceMap();\n        if (ver === 1) {\n            // 配列インデックスは1から\n            this.arrayIndexFrom = 1;\n            // 配列アクセスをJSと逆順で指定する\n            this.flagReverseArrayIndex = true;\n        }\n        else {\n            // ver2はPythonに近いとのこと\n        }\n        // 配列代入時自動で初期化チェックする\n        this.flagCheckArrayInit = true;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    ySetGenMode(mode) {\n        const map = this.peekSourceMap();\n        this.genMode = mode;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yExportDefault(mode) {\n        const map = this.peekSourceMap();\n        this.isExportDefault = mode === '公開';\n        this.moduleExport.set(this.modName, this.isExportDefault);\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /*\n    // NakoCompiler.listRequireStatements で実装されているので不要\n    yRequire (): Ast {\n      console.log('@@@yRequire')\n      const nameToken = this.y[1]\n      const filename: string = nameToken.value\n      const modName = NakoLexer.filenameToModName(filename)\n      if (this.modList.indexOf(modName) < 0) {\n        // 優先度が最も高いのは modList[0]\n        // [memo] モジュールの検索優先度は、下に書くほど高くなる\n        const modSelf: string|undefined = this.modList.shift()\n        if (modSelf) {\n          this.modList.unshift(modName)\n          this.modList.unshift(modSelf)\n        }\n      }\n      return {\n        type: 'require',\n        value: filename,\n        josi: '',\n        ...this.peekSourceMap(),\n        end: this.peekSourceMap()\n      }\n    }\n    */\n    /** @returns {Ast} */\n    yBlock() {\n        const map = this.peekSourceMap();\n        const blocks = [];\n        if (this.check('ここから')) {\n            this.get();\n        }\n        while (!this.isEOF()) {\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\n                break;\n            }\n            if (!this.accept([this.ySentence])) {\n                break;\n            }\n            blocks.push(this.y[0]);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\n    }\n    yDefFuncReadArgs() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const a = [];\n        this.get(); // skip '('\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                this.get(); // skip ''\n                break;\n            }\n            const t = this.get();\n            if (t) {\n                a.push(t);\n            } // Token to Ast\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    yDefTest() {\n        return this.yDef('def_test');\n    }\n    yDefFunc() {\n        return this.yDef('def_func');\n    }\n    /** ユーザー関数の定義 */\n    yDef(type) {\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\n            return null;\n        }\n        const map = this.peekSourceMap();\n        const def = this.get(); // ●\n        if (!def) {\n            return null;\n        }\n        let isExport = this.isExportDefault;\n        if (this.check('{')) {\n            this.get();\n            const funcAttribute = this.get();\n            if (this.check('}')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('関数の属性の指定が正しくありません。『{』と『}』で囲む必要があります。', def);\n            }\n            if (funcAttribute != null) {\n                if (funcAttribute.value === '公開') {\n                    isExport = true;\n                }\n                if (funcAttribute.value === '非公開') {\n                    isExport = false;\n                }\n                if (funcAttribute.value === 'エクスポート') {\n                    isExport = true;\n                }\n            }\n        }\n        let defArgs = [];\n        if (this.check('(')) {\n            defArgs = this.yDefFuncReadArgs() || [];\n        } // // lexerでも解析しているが再度詳しく\n        const funcName = this.get();\n        if (!funcName || funcName.type !== 'func') {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\n        }\n        if (this.check('(')) {\n            // 関数引数の二重定義\n            if (defArgs.length > 0) {\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n            }\n            defArgs = this.yDefFuncReadArgs() || [];\n        }\n        if (this.check('とは')) {\n            this.get();\n        }\n        let block = null;\n        let multiline = false;\n        let asyncFn = false;\n        if (this.check('ここから')) {\n            multiline = true;\n        }\n        if (this.check('eol')) {\n            multiline = true;\n        }\n        try {\n            this.funcLevel++;\n            this.usedAsyncFn = false;\n            // ローカル変数を生成\n            const backupLocalvars = this.localvars;\n            this.localvars = new Map([['それ', { type: 'var', value: '' }]]);\n            if (multiline) {\n                this.saveStack();\n                // 関数の引数をローカル変数として登録する\n                for (const arg of defArgs) {\n                    const fnName = (arg.value) ? arg.value + '' : '';\n                    this.localvars.set(fnName, { 'type': 'var', 'value': '' });\n                }\n                block = this.yBlock();\n                if (this.check('ここまで')) {\n                    this.get();\n                }\n                else {\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\n                }\n                this.loadStack();\n            }\n            else {\n                this.saveStack();\n                block = this.ySentence();\n                this.loadStack();\n            }\n            this.funcLevel--;\n            asyncFn = this.usedAsyncFn;\n            this.localvars = backupLocalvars;\n        }\n        catch (err) {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n        }\n        return {\n            type,\n            name: funcName,\n            args: defArgs,\n            block: block || [],\n            asyncFn,\n            isExport,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yIFCond() {\n        const map = this.peekSourceMap();\n        let a = this.yGetArg();\n        if (!a) {\n            return null;\n        }\n        // console.log('@@yIFCond=', a)\n        // チェック : Aならば\n        if (a.josi === 'ならば') {\n            return a;\n        }\n        if (a.josi === 'でなければ') {\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\n            return a;\n        }\n        // チェック : AがBならば --- 「関数B(A)」のとき\n        if ((a.josi !== '') && (this.check('func'))) {\n            // もし文で関数呼び出しがある場合\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        else \n        // チェック : AがBならば --- 「A = B」のとき\n        if (a.josi === 'が') {\n            const tmpI = this.index;\n            const b = this.yGetArg();\n            if (!b) {\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\n            }\n            if (this.check('ならば')) {\n                const naraba = this.get() || { 'value': 'ならば' };\n                b.josi = naraba.value;\n            }\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\n                return {\n                    type: 'op',\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\n                    left: a,\n                    right: b,\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            this.index = tmpI;\n        }\n        // もし文で追加の関数呼び出しがある場合\n        if (!this.check('ならば')) {\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        // (ならば|でなければ)を確認\n        if (!this.check('ならば')) {\n            const smap = a || { type: '?', ...map };\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n        }\n        const naraba = this.get();\n        // 否定形のチェック\n        if (naraba && naraba.value === 'でなければ') {\n            a = {\n                type: 'not',\n                value: a,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yIF() {\n        const map = this.peekSourceMap();\n        if (!this.check('もし')) {\n            return null;\n        }\n        const mosi = this.get(); // skip もし\n        if (mosi == null) {\n            return null;\n        }\n        while (this.check('comma')) {\n            this.get();\n        } // skip commafffff\n        let cond = null;\n        try {\n            cond = this.yIFCond();\n        }\n        catch (err) {\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\n        }\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\n        }\n        return this.yIfThen(map, cond);\n    }\n    /** @returns {Ast | null} */\n    yIfThen(map, cond) {\n        let trueBlock = null;\n        let falseBlock = null;\n        let tanbun = false;\n        // True Block\n        if (this.check('eol')) {\n            trueBlock = this.yBlock();\n        }\n        else {\n            trueBlock = this.ySentence();\n            tanbun = true;\n        }\n        // skip EOL\n        while (this.check('eol')) {\n            this.get();\n        }\n        // Flase Block\n        if (this.check('違えば')) {\n            this.get(); // skip 違えば\n            while (this.check('comma')) {\n                this.get();\n            }\n            if (this.check('eol')) {\n                falseBlock = this.yBlock();\n            }\n            else {\n                falseBlock = this.ySentence();\n                tanbun = true;\n            }\n        }\n        if (tanbun === false) {\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', map);\n            }\n        }\n        return {\n            type: 'if',\n            expr: cond || [],\n            block: trueBlock || [],\n            false_block: falseBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    ySpeedMode() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', '実行速度優先'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        this.get();\n        let val = '';\n        if (optionNode && optionNode.value) {\n            val = optionNode.value;\n        }\n        else {\n            return null;\n        }\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\n        for (const name of val.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'speed_mode',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    yPerformanceMonitor() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        if (!optionNode) {\n            return null;\n        }\n        this.get();\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\n        for (const name of optionNode.value.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'performance_monitor',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    /** [廃止] #1611 「逐次実行」構文 @returns {Ast | null} */\n    yTikuji() {\n        if (!this.check('逐次実行')) {\n            return null;\n        }\n        const tikuji = this.getCur(); // skip\n        this.logger.error('『逐次実行』構文は廃止されました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\n        return { type: 'eol', ...this.peekSourceMap(), end: this.peekSourceMap() };\n    }\n    /**\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\n     * @param {Ast} firstValue\n     */\n    yGetArgOperator(firstValue) {\n        const args = [firstValue];\n        while (!this.isEOF()) {\n            // 演算子がある？\n            let op = this.peek();\n            if (op && opPriority[op.type]) {\n                op = this.getCur();\n                args.push(op); // Token to Ast\n                // 演算子後の値を取得\n                const v = this.yValue();\n                if (v === null) {\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\n                }\n                args.push(v);\n                continue;\n            }\n            break;\n        }\n        if (args.length === 0) {\n            return null;\n        }\n        if (args.length === 1) {\n            return args[0];\n        }\n        return this.infixToAST(args);\n    }\n    yGetArg() {\n        // 値を一つ読む\n        const value1 = this.yValue();\n        if (value1 === null) {\n            return null;\n        }\n        // 計算式がある場合を考慮\n        return this.yGetArgOperator(value1);\n    }\n    infixToPolish(list) {\n        // 中間記法から逆ポーランドに変換\n        const priority = (t) => {\n            if (opPriority[t.type]) {\n                return opPriority[t.type];\n            }\n            return 10;\n        };\n        const stack = [];\n        const polish = [];\n        while (list.length > 0) {\n            const t = list.shift();\n            if (!t) {\n                break;\n            }\n            while (stack.length > 0) { // 優先順位を見て移動する\n                const sTop = stack[stack.length - 1];\n                if (priority(t) > priority(sTop)) {\n                    break;\n                }\n                const tpop = stack.pop();\n                if (!tpop) {\n                    this.logger.error('計算式に間違いがあります。', t);\n                    break;\n                }\n                polish.push(tpop);\n            }\n            stack.push(t);\n        }\n        // 残った要素を積み替える\n        while (stack.length > 0) {\n            const t = stack.pop();\n            if (t) {\n                polish.push(t);\n            }\n        }\n        return polish;\n    }\n    /** @returns {Ast | null} */\n    infixToAST(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        // 逆ポーランドを構文木に\n        const josi = list[list.length - 1].josi;\n        const node = list[list.length - 1];\n        const polish = this.infixToPolish(list);\n        /** @type {Ast[]} */\n        const stack = [];\n        for (const t of polish) {\n            if (!opPriority[t.type]) { // 演算子ではない\n                stack.push(t);\n                continue;\n            }\n            const b = stack.pop();\n            const a = stack.pop();\n            if (a === undefined || b === undefined) {\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\n            }\n            /** @type {Ast} */\n            const op = {\n                type: 'op',\n                operator: t.type,\n                left: a,\n                right: b,\n                josi,\n                startOffset: a.startOffset,\n                endOffset: a.endOffset,\n                line: a.line,\n                column: a.column,\n                file: a.file\n            };\n            stack.push(op);\n        }\n        const ans = stack.pop();\n        if (!ans) {\n            return null;\n        }\n        return ans;\n    }\n    yGetArgParen(y) {\n        let isClose = false;\n        const si = this.stack.length;\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                isClose = true;\n                break;\n            }\n            const v = this.yGetArg();\n            if (v) {\n                this.pushStack(v);\n                if (this.check('comma')) {\n                    this.get();\n                }\n                continue;\n            }\n            break;\n        }\n        if (!isClose) {\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\n        }\n        const a = [];\n        while (si < this.stack.length) {\n            const v = this.popStack();\n            if (v) {\n                a.unshift(v);\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yRepeatTime() {\n        const map = this.peekSourceMap();\n        if (!this.check('回')) {\n            return null;\n        }\n        this.get(); // skip '回'\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 'N回、繰り返す' (#924)\n        let num = this.popStack([]);\n        let multiline = false;\n        let block = null;\n        if (num === null) {\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) { // multiline\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            // singleline\n            block = this.ySentence();\n        }\n        return {\n            type: 'repeat_times',\n            value: num,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yWhile() {\n        const map = this.peekSourceMap();\n        if (!this.check('間')) {\n            return null;\n        }\n        this.get(); // skip '間'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        if (this.check('繰返')) {\n            this.get();\n        } // skip '繰り返す' #927\n        const cond = this.popStack();\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (!this.checkTypes(['ここから', 'eol'])) {\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『間』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'while',\n            cond,\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yAtohantei() {\n        const map = this.peekSourceMap();\n        if (this.check('後判定')) {\n            this.get();\n        } // skip 後判定\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 繰り返す\n        if (this.check('ここから')) {\n            this.get();\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        let cond = this.yGetArg(); // 条件\n        let bUntil = false;\n        const t = this.peek();\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\n            this.get(); // skip なるまで\n            bUntil = true;\n        }\n        if (this.check('間')) {\n            this.get();\n        } // skip 間\n        if (bUntil) { // 条件を反転する\n            cond = {\n                type: 'not',\n                value: cond,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return {\n            type: 'atohantei',\n            cond: cond || [],\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yFor() {\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\n        let loopDirection = null; // ループの方向を一方向に限定する\n        const map = this.peekSourceMap();\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n            // pass\n        }\n        else {\n            return null;\n        }\n        const kurikaesu = this.getCur(); // skip 繰り返す\n        // スタックに(増や|減ら)してがある？\n        const incdec = this.stack.pop();\n        if (incdec) {\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\n                if (incdec.value === '増') {\n                    flagDown = false;\n                }\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\n            }\n            else {\n                // 普通の繰り返しの場合\n                this.stack.push(incdec); // 違ったので改めて追加\n            }\n        }\n        let vInc = null;\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\n            vInc = this.popStack(['ずつ']);\n            if (kurikaesu.type === '増繰返') {\n                flagDown = false;\n            }\n            loopDirection = kurikaesu.type === '増繰返' ? 'up' : 'down';\n        }\n        const vTo = this.popStack(['まで']);\n        const vFrom = this.popStack(['から']);\n        const word = this.popStack(['を', 'で']);\n        if (vFrom === null || vTo === null) {\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\n        }\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n            this.get();\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'for',\n            from: vFrom,\n            to: vTo,\n            inc: vInc,\n            flagDown,\n            loopDirection,\n            word,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yReturn() {\n        const map = this.peekSourceMap();\n        if (!this.check('戻る')) {\n            return null;\n        }\n        this.get(); // skip '戻る'\n        const v = this.popStack(['で', 'を']);\n        if (this.stack.length > 0) {\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\n        }\n        return {\n            type: 'return',\n            value: v,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yForEach() {\n        const map = this.peekSourceMap();\n        if (!this.check('反復')) {\n            return null;\n        }\n        this.get(); // skip '反復'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        const target = this.popStack(['を']);\n        const name = this.popStack(['で']);\n        let block = null;\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『反復』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'foreach',\n            name,\n            target,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 条件分岐構文 */\n    ySwitch() {\n        const map = this.peekSourceMap();\n        if (!this.check('条件分岐')) {\n            return null;\n        }\n        const joukenbunki = this.get(); // skip '条件分岐'\n        if (!joukenbunki) {\n            return null;\n        }\n        const eol = this.get(); // skip 'eol'\n        if (!eol) {\n            return null;\n        }\n        const value = this.popStack(['で']);\n        if (!value) {\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\n        }\n        if (eol.type !== 'eol') {\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\n        }\n        let isDefaultClause = false; // 「違えば」内かどうか\n        let skippedKokomade = false;\n        const cases = [];\n        while (!this.isEOF()) {\n            if (this.check('ここまで')) {\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                this.get(); // skip ここまで\n                break;\n            }\n            if (this.check('eol')) {\n                this.get();\n                continue;\n            }\n            if (isDefaultClause) {\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\n            }\n            // 違えば？\n            let cond = null;\n            const condToken = this.peek();\n            if (condToken && condToken.type === '違えば') {\n                // 違えば\n                skippedKokomade = false;\n                isDefaultClause = true;\n                cond = this.get(); // skip 違えば // Token to Ast\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            else {\n                // ＊＊＊ならば\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 「＊＊ならば」を得る\n                cond = this.yValue();\n                if (!cond) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                const naraba = this.get(); // skip ならば\n                if (!naraba || naraba.type !== 'ならば') {\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\n                }\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            // 条件にあったときに実行すること\n            const condBlock = this.yBlock();\n            const kokomade = this.peek();\n            if (kokomade && kokomade.type === 'ここまで') {\n                this.get(); // skip ここまで\n            }\n            else {\n                if (isDefaultClause) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\n                skippedKokomade = true;\n            }\n            cases.push([cond, condBlock]);\n        }\n        return {\n            type: 'switch',\n            value,\n            cases: cases || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 無名関数 */\n    yMumeiFunc() {\n        const map = this.peekSourceMap();\n        if (!this.check('def_func')) {\n            return null;\n        }\n        const def = this.get();\n        if (!def) {\n            return null;\n        }\n        let args = [];\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // 関数の引数定義は省略できる\n        if (this.check('(')) {\n            args = this.yDefFuncReadArgs() || [];\n        }\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // ブロックを読む\n        this.funcLevel++;\n        this.saveStack();\n        const block = this.yBlock();\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\n        if (!this.check('ここまで')) {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\n        }\n        this.get(); // skip ここまで\n        this.loadStack();\n        this.funcLevel--;\n        return {\n            type: 'func_obj',\n            args,\n            block,\n            meta: def.meta,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 代入構文 */\n    yDainyu() {\n        const map = this.peekSourceMap();\n        const dainyu = this.get(); // 代入\n        if (dainyu === null) {\n            return null;\n        }\n        const value = this.popStack(['を']);\n        const word = this.popStack(['へ', 'に']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\n        }\n        // 配列への代入\n        if (word.type === '配列参照') {\n            return {\n                type: 'let_array',\n                name: word.name,\n                index: word.index,\n                value,\n                josi: '',\n                checkInit: this.flagCheckArrayInit,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 一般的な変数への代入\n        const word2 = this.getVarName(word);\n        return {\n            type: 'let',\n            name: word2,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 定める構文 */\n    ySadameru() {\n        const map = this.peekSourceMap();\n        const sadameru = this.get(); // 定める\n        if (sadameru === null) {\n            return null;\n        }\n        const word = this.popStack(['を']);\n        const value = this.popStack(['へ', 'に', 'と']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\n        }\n        let isExport = this.isExportDefault;\n        if (this.check2(['{', 'word', '}'])) {\n            this.get();\n            const attrNode = this.get();\n            if (attrNode === null) {\n                throw NakoSyntaxError.fromNode('定める『' + word.value + '』の定義エラー', word);\n            }\n            const attr = attrNode.value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n            }\n            this.get();\n        }\n        // 変数を生成する\n        const nameToken = this.createVar(word, true, isExport);\n        return {\n            type: 'def_local_var',\n            name: nameToken,\n            vartype: '定数',\n            isExport,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yIncDec() {\n        const map = this.peekSourceMap();\n        const action = this.get(); // (増やす|減らす)\n        if (action === null) {\n            return null;\n        }\n        // 『Nずつ増やして繰り返す』文か？\n        if (this.check('繰返')) {\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\n            return this.yFor();\n        }\n        // スタックから引数をポップ\n        let value = this.popStack(['だけ', '']);\n        if (!value) {\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\n        }\n        const word = this.popStack(['を']);\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\n        }\n        // 減らすなら-1かける\n        if (action.value === '減') {\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\n        }\n        return {\n            type: 'inc',\n            name: word,\n            value,\n            josi: action.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yCall() {\n        if (this.isEOF()) {\n            return null;\n        }\n        // スタックに積んでいく\n        while (!this.isEOF()) {\n            if (this.check('ここから')) {\n                this.get();\n            }\n            // 代入\n            if (this.check('代入')) {\n                return this.yDainyu();\n            }\n            if (this.check('定める')) {\n                return this.ySadameru();\n            }\n            // 制御構文\n            if (this.check('回')) {\n                return this.yRepeatTime();\n            }\n            if (this.check('間')) {\n                return this.yWhile();\n            }\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n                return this.yFor();\n            }\n            if (this.check('反復')) {\n                return this.yForEach();\n            }\n            if (this.check('条件分岐')) {\n                return this.ySwitch();\n            }\n            if (this.check('戻る')) {\n                return this.yReturn();\n            }\n            if (this.check('増') || this.check('減')) {\n                return this.yIncDec();\n            }\n            // C言語風関数\n            if (this.check2([['func', 'word'], '('])) { // C言語風\n                const cur = this.peek();\n                if (cur && cur.josi === '') {\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\n                    if (t) {\n                        const josi = t.josi || '';\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\n                            t.josi = '';\n                            return t; // 関数なら値とする\n                        }\n                        this.pushStack(t);\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    }\n                    continue;\n                }\n            }\n            // なでしこ式関数\n            if (this.check('func')) {\n                const r = this.yCallFunc();\n                if (r === null) {\n                    continue;\n                }\n                // 「〜する間」の形ならスタックに積む。\n                if (this.check('間')) {\n                    this.pushStack(r);\n                    continue;\n                }\n                // 関数呼び出しの直後に、四則演算があるか?\n                if (!this.checkTypes(operatorList)) {\n                    return r; // 関数呼び出しの後に演算子がないのでそのまま関数呼び出しを戻す\n                }\n                // 四則演算があった場合、計算してスタックに載せる\n                const s = this.yGetArgOperator(r);\n                this.pushStack(s);\n                continue;\n            }\n            // 値のとき → スタックに載せる\n            const t = this.yGetArg();\n            if (t) {\n                this.pushStack(t);\n                continue;\n            }\n            break;\n        } // end of while\n        // 助詞が余ってしまった場合\n        if (this.stack.length > 0) {\n            if (this.isReadingCalc) {\n                return this.popStack();\n            }\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\n            // 各ノードについて、更に詳細な情報があるなら表示\n            for (const n of this.stack) {\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\n                if (d0 !== d1) {\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\n                    msg += `${d0}は${d1}として使われています。`;\n                }\n            }\n            const first = this.stack[0];\n            const last = this.stack[this.stack.length - 1];\n            this.logger.debug(msgDebug, first);\n            throw NakoSyntaxError.fromNode(msg, first, last);\n        }\n        return this.popStack([]);\n    }\n    /** @returns {Ast | null} */\n    yCallFunc() {\n        const map = this.peekSourceMap();\n        const t = this.get();\n        if (!t) {\n            return null;\n        }\n        const f = t.meta;\n        const funcName = t.value;\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\n        let funcObj = null;\n        if (t.josi === 'には') {\n            try {\n                funcObj = this.yMumeiFunc();\n            }\n            catch (err) {\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\n            }\n            if (funcObj === null) {\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\n            }\n        }\n        if (!f || typeof f.josi === 'undefined') {\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\n        }\n        // 最近使った関数を記録\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\n        if (f && f.asyncFn) {\n            this.usedAsyncFn = true;\n        }\n        // 関数の引数を取り出す処理\n        const args = [];\n        let nullCount = 0;\n        let valueCount = 0;\n        for (let i = f.josi.length - 1; i >= 0; i--) {\n            while (true) {\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\n                let popArg = this.popStack(f.josi[i]);\n                if (popArg !== null) {\n                    valueCount++;\n                }\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    nullCount++;\n                    popArg = funcObj;\n                }\n                else {\n                    break;\n                }\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\n                        popArg.type = 'func_pointer';\n                    }\n                    else {\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\n                    }\n                }\n                args.unshift(popArg);\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    break;\n                }\n            }\n        }\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\n        }\n        this.usedFuncs.add(t.value);\n        // 関数呼び出しのAstを構築\n        const funcNode = {\n            type: 'func',\n            name: t.value,\n            args,\n            josi: t.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\n        if (funcNode.name === 'プラグイン名設定') {\n            if (args.length > 0 && args[0]) {\n                let fname = '' + args[0].value;\n                if (fname === 'メイン') {\n                    fname = '' + args[0].file;\n                }\n                this.namespaceStack.push(this.modName);\n                this.isExportStack.push(this.isExportDefault);\n                this.modName = NakoLexer.filenameToModName(fname);\n                this.modList.push(this.modName);\n            }\n        }\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\n            const space = this.namespaceStack.pop();\n            if (space) {\n                this.modName = space;\n            }\n            const isexport = this.isExportStack.pop();\n            if (isexport != null) {\n                this.isExportDefault = isexport;\n            }\n        }\n        // 言い切りならそこで一度切る\n        if (t.josi === '') {\n            return funcNode;\n        }\n        // 「**して、**」の場合も一度切る\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\n            funcNode.josi = 'して';\n            return funcNode;\n        }\n        // 続き\n        funcNode.meta = f;\n        this.pushStack(funcNode);\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLet() {\n        const map = this.peekSourceMap();\n        // 通常の変数\n        if (this.check2(['word', 'eq'])) {\n            const word = this.peek();\n            let threw = false;\n            try {\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\n                    if (this.y[2].type === 'eol') {\n                        throw new Error('値が空です。');\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    } // skip comma (ex) name1=val1, name2=val2\n                    const nameToken = this.getVarName(this.y[0]);\n                    const valueToken = this.y[2];\n                    return {\n                        type: 'let',\n                        name: nameToken,\n                        value: valueToken,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n                else {\n                    threw = true;\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\n                }\n            }\n            catch (err) {\n                if (threw) {\n                    throw err;\n                }\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\n            }\n        }\n        // let_array ?\n        if (this.check2(['word', '@'])) {\n            const la = this.yLetArrayAt(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (la) {\n                la.checkInit = this.flagCheckArrayInit;\n                return la;\n            }\n        }\n        if (this.check2(['word', '['])) {\n            const lb = this.yLetArrayBracket(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (lb) {\n                lb.checkInit = this.flagCheckArrayInit;\n                return lb;\n            }\n        }\n        // ローカル変数定義\n        if (this.accept(['word', 'とは'])) {\n            const wordToken = this.y[0];\n            if (!this.checkTypes(['変数', '定数'])) {\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n            }\n            const vtype = this.getCur(); // 変数 or 定数\n            let isExport = this.isExportDefault;\n            if (this.check2(['{', 'word', '}'])) {\n                this.get();\n                const attrNode = this.get();\n                if (attrNode === null) {\n                    throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n                }\n                const attr = attrNode.value;\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n                }\n                this.get();\n            }\n            const word = this.createVar(wordToken, vtype.type === '定数', isExport);\n            // 初期値がある？\n            let value = null;\n            if (this.check('eq')) {\n                this.get();\n                value = this.yCalc();\n            }\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: vtype.type,\n                isExport,\n                value,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // ローカル変数定義（その２）\n        if (this.accept(['変数', 'word'])) {\n            const wordVar = this.y[1];\n            this.index -= 2; // 「変数 word」の前に巻き戻す\n            // 変数の宣言および初期化1\n            if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\n                const word = this.createVar(this.y[1], false, this.isExportDefault);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    value: this.y[3],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 変数の宣言および初期化2\n            if (this.accept(['変数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n                let isExport = this.isExportDefault;\n                const attr = this.y[3].value;\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n                }\n                const word = this.createVar(this.y[1], false, isExport);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    isExport,\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 変数宣言のみの場合\n            {\n                this.index += 2; // 変数 word を読んだとする\n                const word = this.createVar(wordVar, false, this.isExportDefault);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    value: null,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], true, this.isExportDefault);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n            let isExport = this.isExportDefault;\n            const attr = this.y[3].value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な定数属性『${attr}』が指定されています。`);\n            }\n            const word = this.createVar(this.y[1], true, isExport);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                isExport,\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数定数への代入 #563\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, true, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, false, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.check2(['word', 'comma', 'word'])) {\n            // 2 word\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[4],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 3 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 4 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[8],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 5 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[10],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 配列のインデックスが1から始まる場合を考慮するか\n     * @param {Ast} node\n     * @returns\n     */\n    checkArrayIndex(node) {\n        // 配列が0から始まるのであればそのまま返す\n        if (this.arrayIndexFrom === 0) {\n            return node;\n        }\n        // 配列が1から始まるのであれば演算を加えて返す\n        return {\n            ...node,\n            'type': 'op',\n            'operator': '-',\n            'left': node,\n            'right': {\n                ...node,\n                'type': 'number',\n                'value': this.arrayIndexFrom\n            }\n        };\n    }\n    /**\n     * 配列のインデックスを逆順にするのを考慮するか\n     * @param {Ast[]| null} ary\n     */\n    checkArrayReverse(ary) {\n        if (!ary) {\n            return [];\n        }\n        if (!this.flagReverseArrayIndex) {\n            return ary;\n        }\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\n        if (ary.length <= 1) {\n            return ary;\n        }\n        return ary.reverse();\n    }\n    /** @returns {Ast | null} */\n    yLetArrayAt(map) {\n        // 一次元配列\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[4],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLetArrayBracket(map) {\n        // 一次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[5],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\n                value: this.y[8],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[7],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\n                value: this.y[11],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[9],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yCalc() {\n        const map = this.peekSourceMap();\n        if (this.check('eol')) {\n            return null;\n        }\n        // 値を一つ読む\n        const t = this.yGetArg();\n        if (!t) {\n            return null;\n        }\n        // 助詞がある？ つまり、関数呼び出しがある？\n        if (t.josi === '') {\n            return t;\n        } // 値だけの場合\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\n        const tmpReadingCalc = this.isReadingCalc;\n        this.isReadingCalc = true;\n        this.pushStack(t);\n        const t1 = this.yCall();\n        this.isReadingCalc = tmpReadingCalc;\n        if (!t1) {\n            // 関数がなければ、先ほど積んだ値をスタックから取り出して返す\n            return this.popStack();\n        }\n        // 計算式をfCalcとする\n        let fCalc = t1;\n        // それが連文か助詞を読んで確認\n        if (RenbunJosi.indexOf(t1.josi || '') >= 0) {\n            // 連文なら右側を読んで左側とくっつける\n            const t2 = this.yCalc();\n            if (t2) {\n                fCalc = {\n                    type: 'renbun',\n                    left: t1,\n                    right: t2,\n                    josi: t2.josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        // 演算子があれば続ける\n        const op = this.peek();\n        if (!op) {\n            return fCalc;\n        }\n        if (opPriority[op.type]) {\n            return this.yGetArgOperator(fCalc);\n        }\n        return fCalc;\n    }\n    /** @returns {Ast | null} */\n    yValueKakko() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const t = this.get(); // skip '('\n        if (!t) {\n            throw new Error('[System Error] check したのに get できない');\n        }\n        this.saveStack();\n        const v = this.yCalc() || this.ySentence();\n        if (v === null) {\n            const v2 = this.get();\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\n        }\n        if (!this.check(')')) {\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\n        }\n        const closeParent = this.get(); // skip ')'\n        this.loadStack();\n        if (closeParent) {\n            v.josi = closeParent.josi;\n        }\n        return v;\n    }\n    /** @returns {Ast | null} */\n    yValue() {\n        const map = this.peekSourceMap();\n        // カンマなら飛ばす #877\n        if (this.check('comma')) {\n            this.get();\n        }\n        // プリミティブな値\n        if (this.checkTypes(['number', 'bigint', 'string'])) {\n            return this.getCur();\n        } // Token To Ast\n        // 丸括弧\n        if (this.check('(')) {\n            return this.yValueKakko();\n        }\n        // マイナス記号\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\n            const m = this.get(); // skip '-'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            const line = (m && m.line) ? m.line : 0;\n            return {\n                type: 'op',\n                operator: '*',\n                left: { type: 'number', value: -1, line },\n                right: v || [],\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // NOT\n        if (this.check('not')) {\n            this.get(); // skip '!'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            return {\n                type: 'not',\n                value: v,\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // JSON object\n        const a = this.yJSONArray();\n        if (a) {\n            return a;\n        }\n        const o = this.yJSONObject();\n        if (o) {\n            return o;\n        }\n        // 一語関数\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\n        if (this.check2(['func', splitType])) {\n            const tt = this.get();\n            if (!tt) {\n                throw new Error('[System Error] 正しく値が取れませんでした。');\n            }\n            const f = this.getVarNameRef(tt);\n            this.usedFuncs.add(f.value);\n            // 引数の個数をチェック\n            const meta = f.meta;\n            const args = [];\n            if (!meta) {\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\n            }\n            if (meta.josi && meta.josi.length === 1) {\n                args.push({ type: 'word', value: 'それ' });\n            }\n            else if (meta.josi && meta.josi.length >= 2) {\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\n            }\n            return {\n                type: 'func',\n                name: f.value,\n                args,\n                josi: f.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // C風関数呼び出し FUNC(...)\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\n            const f = this.peek();\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\n                const ff = this.getVarNameRef(this.y[0]);\n                const args = this.y[2];\n                const funcName = ff.value;\n                this.usedFuncs.add(funcName);\n                // 引数の個数をチェック\n                const meta = ff.meta;\n                if (meta && meta.josi) {\n                    // 引数の個数が異なる場合\n                    if (meta.josi.length === args.length) {\n                        // ok\n                    }\n                    else if (meta.isVariableJosi) {\n                        // ok\n                    }\n                    else { // 引数の個数が違う\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\n                    }\n                }\n                return {\n                    type: 'func',\n                    name: funcName,\n                    args,\n                    josi: this.y[3].josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\n        }\n        // 無名関数(関数オブジェクト)\n        if (this.check('def_func')) {\n            return this.yMumeiFunc();\n        }\n        // 変数\n        const word = this.yValueWord();\n        if (word) {\n            return word;\n        }\n        // 関数への参照\n        const funcPtr = this.yValueFuncPointer();\n        if (funcPtr) {\n            return funcPtr;\n        }\n        // その他\n        return null;\n    }\n    yValueWordGetIndex(ast) {\n        if (!ast.index) {\n            ast.index = [];\n        }\n        // word @ a, b, c\n        if (this.check('@')) {\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index.push(this.checkArrayIndex(this.y[5]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[5].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[3].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[1].josi;\n                return true;\n            }\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, ']'])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[2].josi;\n                return this.y[2].josi === ''; // 助詞があればそこで終了(false)を返す (#1627)\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[4].josi;\n                return this.y[4].josi === ''; // 助詞があればそこで終了(false)を返す\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3]),\n                    this.checkArrayIndex(this.y[5])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[6].josi;\n                return this.y[6].josi === ''; // 助詞があればそこで終了(false)を返す\n            }\n        }\n        return false;\n    }\n    /** @returns {Ast | null} */\n    yValueFuncPointer() {\n        const map = this.peekSourceMap();\n        if (this.check('func_pointer')) {\n            const t = this.getCur();\n            const ast = {\n                type: 'func_pointer',\n                name: t.value,\n                josi: t.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n            return ast;\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yValueWord() {\n        const map = this.peekSourceMap();\n        if (this.check('word')) {\n            const t = this.getCur();\n            const word = this.getVarNameRef(t);\n            // word[n] || word@n\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\n                const ast = {\n                    type: '配列参照',\n                    name: word,\n                    index: [],\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n                while (!this.isEOF()) {\n                    if (!this.yValueWordGetIndex(ast)) {\n                        break;\n                    }\n                }\n                if (ast.index && ast.index.length === 0) {\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\n                }\n                return ast;\n            }\n            return word; // Token to Ast\n        }\n        return null;\n    }\n    /** 変数を生成 */\n    createVar(word, isConst, isExport) {\n        let gname = word.value;\n        const typeName = isConst ? 'const' : 'var';\n        if (this.funcLevel === 0) {\n            // global ?\n            if (gname.indexOf('__') < 0) {\n                gname = this.modName + '__' + gname;\n            }\n            this.funclist.set(gname, { type: typeName, value: '', isExport });\n            word.value = gname;\n            return word;\n        }\n        else {\n            // local\n            this.localvars.set(gname, { type: typeName, value: '' });\n            return word;\n        }\n    }\n    /** 変数名を検索して解決する\n     * @param {Ast|Token} word\n     * @return {Ast|Token}\n     */\n    getVarName(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (f) {\n            if (f && f.scope === 'global') {\n                word.value = f.name;\n            }\n            return word;\n        }\n        // 変数が見つからない\n        this.createVar(word, false, this.isExportDefault);\n        return word;\n    }\n    /** 変数名を検索して解決する */\n    getVarNameRef(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (!f) { // 変数が見つからない\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\n                word.value = this.modName + '__' + word.value;\n            }\n        }\n        else if (f && f.scope === 'global') {\n            word.value = f.name;\n        }\n        return word;\n    }\n    /** 複数の変数名を検索して解決する */\n    createVarList(words, isConst, isExport) {\n        for (let i = 0; i < words.length; i++) {\n            words[i] = this.createVar(words[i], isConst, isExport);\n        }\n        return words;\n    }\n    yJSONObjectValue() {\n        const a = [];\n        const firstToken = this.peek();\n        if (!firstToken) {\n            return null;\n        }\n        while (!this.isEOF()) {\n            while (this.check('eol')) {\n                this.get();\n            }\n            if (this.check('}')) {\n                break;\n            }\n            if (this.accept(['word', ':', this.yCalc])) {\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.accept(['string', ':', this.yCalc])) {\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.check('word')) {\n                const w = this.getCur();\n                w.type = 'string';\n                a.push({\n                    key: w, // Token to Ast\n                    value: w\n                });\n            }\n            else if (this.checkTypes(['string', 'number'])) {\n                const w = this.getCur();\n                a.push({\n                    key: w, // Token to Ast\n                    value: w\n                });\n            }\n            else {\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONObject() {\n        const map = this.peekSourceMap();\n        if (this.accept(['{', '}'])) {\n            return {\n                type: 'json_obj',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\n            return {\n                type: 'json_obj',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['{', this.yJSONObjectValue])) {\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    yJSONArrayValue() {\n        if (this.check('eol')) {\n            this.get();\n        }\n        const v1 = this.yCalc();\n        if (v1 === null) {\n            return null;\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        const a = [v1];\n        while (!this.isEOF()) {\n            if (this.check('eol')) {\n                this.get();\n            }\n            if (this.check(']')) {\n                break;\n            }\n            const v2 = this.yCalc();\n            if (v2 === null) {\n                break;\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n            a.push(v2);\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONArray() {\n        const map = this.peekSourceMap();\n        if (this.accept(['[', ']'])) {\n            return {\n                type: 'json_array',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\n            return {\n                type: 'json_array',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['[', this.yJSONArrayValue])) {\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    /** エラー監視構文 */\n    yTryExcept() {\n        const map = this.peekSourceMap();\n        if (!this.check('エラー監視')) {\n            return null;\n        }\n        const kansi = this.getCur(); // skip エラー監視\n        const block = this.yBlock();\n        if (!this.check2(['エラー', 'ならば'])) {\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\n        }\n        this.get(); // skip エラー\n        this.get(); // skip ならば\n        const errBlock = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'try_except',\n            block,\n            errBlock: errBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n}\n","/**\n * nako_prepare.js\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\n */\nclass ReplaceHistory {\n    constructor(from, to, index) {\n        this.from = from;\n        this.to = to;\n        this.index = index;\n    }\n}\nclass ConvertResult {\n    constructor(text, sourcePosition) {\n        this.text = text;\n        this.sourcePosition = sourcePosition;\n    }\n}\n/**\n * 置換後の位置から置換前の位置へマッピングできる文字列\n */\nexport class Replace {\n    constructor(code) {\n        this.history = [];\n        this.code = code;\n    }\n    getText() {\n        return this.code;\n    }\n    replaceAll(from, to) {\n        while (true) {\n            const index = this.getText().indexOf(from);\n            if (index === -1) {\n                break;\n            }\n            if (from.length !== to.length) {\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\n            }\n            this.code = this.code.replace(from, to);\n        }\n    }\n    getSourcePosition(i) {\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\n        for (const item of this.history) {\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\n                i += item.from - item.to;\n            }\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\n                if (item.to >= 2 && i === item.index + item.to - 1) {\n                    i = item.index + item.from - 1;\n                }\n                else {\n                    i = item.index;\n                }\n            }\n        }\n        return i;\n    }\n}\n/**\n * 字句解析を行う前に全角文字を半角に揃える\n *    [memo]\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\n *    for https://github.com/kujirahand/nadesiko3/issues/94\n */\nexport class NakoPrepare {\n    /** 唯一のインスタンスを返す */\n    static getInstance() {\n        if (!NakoPrepare._instance) {\n            NakoPrepare._instance = new NakoPrepare();\n        }\n        return NakoPrepare._instance;\n    }\n    constructor() {\n        // 単純な変換テーブル\n        this.convertTable = new Map([\n            // ハイフンへの変換\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\n            // 0x2d: true, // ASCIIのハイフン\n            [0x2010, '-'], // 別のハイフン\n            [0x2011, '-'], // 改行しないハイフン\n            [0x2013, '-'], // ENダッシュ\n            [0x2014, '-'], // EMダッシュ\n            [0x2015, '-'], // 全角のダッシュ\n            [0x2212, '-'], // 全角のマイナス\n            // チルダの変換\n            // 0x7e: true,\n            [0x02dc, '~'], // 小さなチルダ\n            [0x02F7, '~'], // Modifier Letter Low Tilde\n            [0x2053, '~'], // Swung Dash - 辞書のみだし\n            [0x223c, '~'], // Tilde Operator: 数学で Similar to\n            [0x301c, '~'], // Wave Dash(一般的な波ダッシュ)\n            [0xFF5E, '~'], // 全角チルダ\n            // スペースの変換\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\n            // 0x20: true,\n            [0x2000, ' '], // EN QUAD\n            [0x2002, ' '], // EN SPACE\n            [0x2003, ' '], // EM SPACE\n            [0x2004, ' '], // THREE-PER-EM SPACE\n            [0x2005, ' '], // FOUR-PER-EM SPACE\n            [0x2006, ' '], // SIX-PER-EM SPACE\n            [0x2007, ' '], // FIGURE SPACE\n            [0x2009, ' '], // THIN SPACE\n            [0x200A, ' '], // HAIR SPACE\n            [0x200B, ' '], // ZERO WIDTH SPACE\n            [0x202F, ' '], // NARROW NO-BREAK SPACE\n            [0x205F, ' '], // MEDIUM MATHEMATICAL SPACE\n            [0x3000, ' '], // 全角スペース\n            [0x3164, ' '], // HANGUL FILLER\n            // その他の変換\n            // [0x09, ' '], // TAB --> SPC\n            [0x203B, '#'], // '※' --- コメント\n            [0x3002, ';'], // 句点\n            [0x3010, '['], // '【'\n            [0x3011, ']'], // '】'\n            // 読点は「,」に変換する (#877)\n            [0x3001, ','], // 読点 --- JSON記法で「,」と「、」を区別したいので読点は変換しないことに。(#276)\n            [0xFF0C, ','], // 読点 '，' 論文などで利用、ただし句点はドットと被るので変換しない (#735)\n            [0x2716, '*'], // ×の絵文字 (#1183)\n            [0x2795, '+'], // +の絵文字 (#1183)\n            [0x2796, '-'], // -の絵文字 (#1183)\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\n        ]);\n    }\n    // 一文字だけ変換\n    /**\n     * @param {string} ch\n     */\n    convert1ch(ch) {\n        if (!ch) {\n            return '';\n        }\n        const c = ch.codePointAt(0) || 0;\n        // テーブルによる変換\n        const c2 = this.convertTable.get(c) || '';\n        if (c2) {\n            return c2;\n        }\n        // ASCIIエリア\n        if (c < 0x7F) {\n            return ch;\n        }\n        // 全角半角単純変換可能 --- '！' - '～'\n        if (c >= 0xFF01 && c <= 0xFF5E) {\n            const c2 = c - 0xFEE0;\n            return String.fromCodePoint(c2);\n        }\n        return ch;\n    }\n    /** convert code */\n    convert(code) {\n        if (!code) {\n            return [];\n        }\n        const src = new Replace(code);\n        // 改行コードを統一\n        src.replaceAll('\\r\\n', '\\n');\n        src.replaceAll('\\r', '\\n');\n        let flagStr = false; // 文字列リテラル内かどうか\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\n        const res = [];\n        let left = 0; // 現在処理中の部分文字列の左端の位置\n        let str = ''; // 文字列リテラルの値\n        // 一文字ずつ全角を半角に置換する\n        let i = 0;\n        while (i < src.getText().length) {\n            const c = src.getText().charAt(i);\n            const ch2 = src.getText().substr(i, 2);\n            // 文字列のとき\n            if (flagStr) {\n                if (c === endOfStr) {\n                    flagStr = false;\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i++;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 絵文字制御による文字列のとき\n            if (flagStr2) {\n                if (ch2 === endOfStr) {\n                    flagStr2 = false;\n                    if (endOfStr === '＊／') {\n                        endOfStr = '*/';\n                    } // 強制変換\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i += 2;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 文字列判定\n            if (c === '「') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '」';\n                str = '';\n                continue;\n            }\n            if (c === '『') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '』';\n                str = '';\n                continue;\n            }\n            if (c === '“') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '”';\n                str = '';\n                continue;\n            }\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\n            if (ch2 === '🌴' || ch2 === '🌿') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = ch2;\n                str = '';\n                continue;\n            }\n            const c1 = this.convert1ch(c);\n            if (c1 === '\"' || c1 === '\\'') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = c;\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす (#725)\n            if (c1 === '#') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true; // 本当はコメントだけど便宜上\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす\n            if (ch2 === '//' || ch2 === '／／') {\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\n                i += 2;\n                left = i;\n                flagStr = true;\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす\n            if (ch2 === '／＊') {\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '＊／';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす (#731)\n            if (ch2 === '/*') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '*/';\n                str = '';\n                continue;\n            }\n            // 変換したものを追加\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n            i++;\n            left = i;\n        }\n        if (flagStr || flagStr2) {\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n        }\n        return res;\n    }\n}\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\nexport function checkNakoMode(code, modeNames) {\n    // 先頭の256文字について調べる\n    code = code.substring(0, 256);\n    // 全角半角の揺れを吸収\n    code = code.replace(/(！|💡)/, '!');\n    // 範囲コメントを削除\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\n    // 毎文調べる\n    const lines = code.split(/[;。\\n]/, 30);\n    for (let line of lines) {\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\n        if (modeNames.indexOf(line) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお速度優先で忠実にJavaScriptのコードを生成する。\n */\nimport { NakoSyntaxError } from './nako_errors.mjs';\n// なでしこで定義した関数の開始コードと終了コード\nconst topOfFunction = '(function(){\\n';\nconst endOfFunction = '})';\nconst topOfFunctionAsync = '(async function(){\\n';\n/** コード生成オプション */\nexport class NakoGenOptions {\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\n        this.isTest = isTest;\n        this.codeStandalone = codeStandalone;\n        this.codeEnv = convEnv;\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\n        for (const fname of importFiles) {\n            this.importFiles.push(fname);\n        }\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGen {\n    /** constructor\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = new Map(com.getNakoFuncList());\n        /**\n         * なでしこで定義したテストの一覧\n         */\n        this.nakoTestFuncs = new Map();\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         */\n        this.loopId = 1;\n        /**\n         * 非同関数を何回使ったか\n         */\n        this.numAsyncFn = 0;\n        /**\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\n         */\n        this.usedAsyncFn = false;\n        /** 変換中の処理が、ループの中かどうかを判定する */\n        this.flagLoop = false;\n        this.__self = com;\n        /** コードジェネレータの種類 */\n        this.genMode = 'sync';\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\n        this.lastLineNo = null;\n        /** スタック */\n        this.varslistSet = this.setVarslistSet(com.__varslist);\n        /** スタックトップ */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0, // 行番号を出力しない\n            implicitTypeCasting: 0, // 数値加算でparseFloatを出力しない\n            invalidSore: 0, // 「それ」を用いない\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0, // 呼び出されたユーザ関数\n            systemFunction: 0, // システム関数(呼び出しコードを含む)\n            systemFunctionBody: 0, // システム関数(呼び出しコードを除く)\n            mumeiId: 0\n        };\n        /**\n         * 未定義の変数の警告を行う\n         */\n        this.warnUndefinedVar = true;\n        this.constPools = [];\n        this.constPoolsTemplate = [];\n        // 暫定変数\n        this.warnUndefinedReturnUserFunc = 1;\n        this.warnUndefinedCallingUserFunc = 1;\n        this.warnUndefinedCallingSystemFunc = 1;\n        this.warnUndefinedCalledUserFuncArgs = 1;\n        this.debugOption = com.debugOption;\n    }\n    static isValidIdentifier(name) {\n        // TODO: いらなそうな部分は削る\n        // https://stackoverflow.com/a/9337047\n        // eslint-disable-next-line no-misleading-character-class\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\n    }\n    /**\n     * com.__varslistを元に、this.varslistSetを設定\n     */\n    setVarslistSet(varslist) {\n        const vlist = [];\n        // 変数名の一覧をVarsSetに格納 (0: システム変数, 1: グローバル変数, 2: ローカル変数) 0と1のみ移す\n        for (let i = 0; i <= 1; i++) {\n            const scope = varslist[i];\n            const names = new Set(scope.keys());\n            names.delete('meta'); // remove 'meta' from names\n            vlist[i] = { isFunction: false, names, readonly: new Set() };\n        }\n        return vlist;\n    }\n    /**\n     * 改行を埋め込む\n     */\n    convLineno(node, forceUpdate = false, incLine = 0) {\n        // スピードモードでは行番号を埋め込まない\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        const lineNo = node.line + incLine;\n        let lineNoStr;\n        if (typeof node.line !== 'number') {\n            lineNoStr = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNoStr = `l${lineNo}`;\n        }\n        else {\n            lineNoStr = `l${lineNo}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNoStr === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNoStr;\n        }\n        // 実行行のデータ\n        const lineDataJSON = JSON.stringify(lineNoStr);\n        // デバッグ実行か\n        let debugCode = '';\n        if (this.debugOption.useDebug) {\n            // messageAction\n            if (this.debugOption.messageAction) {\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\n                    `line: ${lineDataJSON}});`;\n            }\n            // waitTime\n            if (lineNo >= 1) {\n                if (this.debugOption.waitTime > 0) {\n                    debugCode += `await __v0.get('秒待')(${this.debugOption.waitTime},__self);`;\n                }\n                // breakpoints\n                this.numAsyncFn += 1;\n                this.usedAsyncFn = true;\n                debugCode += `await __v0.get('__DEBUG_BP_WAIT')(${lineNo}, __self);`;\n            }\n            // end\n            debugCode += 'if (__v0.get(\\'__forceClose\\')) { return -1 };';\n        }\n        // 例: __v0.set('__line', 'l1:main.nako3')\n        // return `__v0.set('__line', ${lineDataJSON});` + debugCode\n        return `__line(${lineDataJSON});` + debugCode;\n    }\n    /**\n     * ローカル変数の取得用JavaScriptコードを生成する。\n     * @param {string} name\n     */\n    varname_get(name) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__self.__varslist[${2}].get(${JSON.stringify(name)})`;\n        }\n        else {\n            // ローカル\n            return `__self.__vars.get(${JSON.stringify(name)})`;\n        }\n    }\n    /**\n     * ローカル変数の設定用JavaScriptコードを生成する。\n     * @param {string} name\n     * @param {string} jsvalue\n     */\n    varname_set(name, jsvalue) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__self.__varslist[${2}].set(${JSON.stringify(name)}, ${jsvalue})`;\n        }\n        else {\n            // ローカル\n            return `__self.__vars.set(${JSON.stringify(name)}, ${jsvalue})`;\n        }\n    }\n    /**\n     * @param {string} name\n     * @returns {string}\n    */\n    static getFuncName(name) {\n        if (name.indexOf('__') >= 0) { // スコープがある場合\n            const a = name.split('__');\n            const scope = a[0];\n            const name3 = NakoGen.getFuncName(a[1]);\n            return `${scope}__${name3}`;\n        }\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\n        if (name2 === '') {\n            name2 = name;\n        }\n        return name2;\n    }\n    /** @param {Ast} node */\n    static convPrint(node) {\n        return `__print(${node});`;\n    }\n    /** @param {Ast} node */\n    convRequire(node) {\n        const moduleName = node.value;\n        return this.convLineno(node, false) +\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param com\n     * @param opt\n     */\n    getDefFuncCode(com, opt) {\n        let code = '';\n        // よく使う変数のショートカット\n        // jsInit の部分に設定するコード\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\n        code += 'const __self = self;\\n';\n        code += '__self.__self = __self;\\n';\n        code += 'const __varslist = __self.__varslist;\\n';\n        code += 'const __module = __self.__module;\\n';\n        code += 'const __v0 = __self.__v0 = __self.__varslist[0];\\n';\n        code += 'const __v1 = __self.__v1 = __self.__varslist[1];\\n';\n        code += 'const __vars = __self.__vars = __self.__varslist[2];\\n';\n        code += `const __modList = __self.__modList = ${JSON.stringify(com.getModList())}\\n`;\n        code += 'const __line = (lineno) => { __self.__v0.set(\\'__line\\', lineno); }\\n';\n        code += '__v0.set(\\'__line\\', \\'l0:__getDefFuncCode\\');\\n';\n        code += '__v0.set(\\'__forceClose\\', false);\\n';\n        code += `__v0.set('__useDebug', ${this.debugOption.useDebug});\\n`;\n        // 定数を埋め込む\n        code += '__self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\n        code += '__self.constPoolsTemplate = ' + JSON.stringify(this.constPoolsTemplate) + ';\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        this.nakoFuncList.forEach((value, key) => {\n            const f = trim(cleanGeneratedCode(String(value.fn), 1));\n            const isAsync = value.asyncFn ? 'true' : 'false';\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\n                `__self.__varslist[1].set(\"${key}\", ${f});\\n` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        });\n        if (nakoFuncCode !== '') {\n            code += '__v0.set(\\'__line\\', \\'関数の定義\\');\\n' + nakoFuncCode;\n        }\n        // テストの定義を行う\n        if (opt.isTest) {\n            let testCode = 'const __tests = [];\\n';\n            this.nakoTestFuncs.forEach((value) => {\n                const f = value.fn;\n                testCode += `${f};\\n`;\n            });\n            if (testCode !== '') {\n                code += '__v0.set(\\'__line\\', \\'テストの定義\\');\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        /** 関数一覧 */\n        const funcList = [];\n        // なでしこ関数を定義して this.nako_func[name] に定義する\n        const registFunc = (node) => {\n            if (!node.block) {\n                return;\n            }\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\n            for (let i = 0; i < blockList.length; i++) {\n                const t = blockList[i];\n                if (t.type === 'def_func') {\n                    if (!t.name) {\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\n                    }\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1].set(name, () => { }); // 事前に適当な値を設定\n                    this.varslistSet[1].names.add(name); // global\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\n                    this.nakoFuncList.set(name, {\n                        josi: meta.josi,\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        fn: () => { },\n                        type: 'func',\n                        asyncFn: t.asyncFn,\n                        isExport: t.isExport\n                    });\n                    funcList.push({ name, node: t });\n                    // eslint-disable-next-line brace-style\n                }\n                // 実行速度優先 などのオプションが付いている場合の処理\n                else if (t.type === 'speed_mode') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        // 関数の登録\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.setVarslistSet(this.__self.__varslist);\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param node\n     * @param opt\n     */\n    convGen(node, opt) {\n        const result = this.convLineno(node, false) + this._convGen(node, true);\n        if (opt.isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        if (!node) {\n            return '';\n        }\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            case 'nop':\n                break;\n            case 'block':\n                if (!node.block) {\n                    return code;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\n                for (let i = 0; i < blocks.length; i++) {\n                    const b = blocks[i];\n                    code += this._convGen(b, false);\n                }\n                break;\n            case 'comment':\n            case 'eol':\n                code += this.convComment(node);\n                break;\n            case 'break':\n                code += this.convCheckLoop(node, 'break');\n                break;\n            case 'continue':\n                code += this.convCheckLoop(node, 'continue');\n                break;\n            case 'end':\n                code += '__v0.get(\\'終\\')(__self);';\n                break;\n            case 'number':\n                code += node.value;\n                break;\n            case 'bigint':\n                code += node.value;\n                break;\n            case 'string':\n                code += this.convString(node);\n                break;\n            case 'def_local_var':\n                code += this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.convDefLocalVarlist(node);\n                break;\n            case 'let':\n                code += this.convLet(node);\n                break;\n            case 'inc':\n                code += this.convInc(node);\n                break;\n            case 'word':\n            case 'variable':\n                code += this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                code += this.convOp(node);\n                break;\n            case 'renbun':\n                code += this.convRenbun(node);\n                break;\n            case 'not':\n                code += '((' + this._convGen(node.value, true) + ')?false:true)';\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                code += this.convCallFunc(node, isExpression);\n                break;\n            case 'if':\n                code += this.convIf(node);\n                break;\n            case 'for':\n                code += this.convFor(node);\n                break;\n            case 'foreach':\n                code += this.convForeach(node);\n                break;\n            case 'repeat_times':\n                code += this.convRepeatTimes(node);\n                break;\n            case 'speed_mode':\n                code += this.convSpeedMode(node, isExpression);\n                break;\n            case 'performance_monitor':\n                code += this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'while':\n                code += this.convWhile(node);\n                break;\n            case 'atohantei':\n                code += this.convAtohantei(node);\n                break;\n            case 'switch':\n                code += this.convSwitch(node);\n                break;\n            case 'let_array':\n                code += this.convLetArray(node);\n                break;\n            case '配列参照':\n                code += this.convRefArray(node);\n                break;\n            case 'json_array':\n                code += this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                code += this.convJsonObj(node);\n                break;\n            case 'func_obj':\n                code += this.convFuncObj(node);\n                break;\n            case 'bool':\n                code += (node.value) ? 'true' : 'false';\n                break;\n            case 'null':\n                code += 'null';\n                break;\n            case 'def_test':\n                code += this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.convDefFunc(node);\n                break;\n            case 'return':\n                code += this.convReturn(node);\n                break;\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    /** 変数を検索 */\n    findVar(name, jsvalue = null) {\n        // __vars ? (ローカル変数)\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\n            return {\n                i: this.varslistSet.length - 1,\n                name,\n                isTop: true,\n                js: this.varname_get(name),\n                js_set: this.varname_set(name, String(jsvalue))\n            };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\n                // それ以外の変数は、必ず__varslistに入っている。\n                return {\n                    i,\n                    name,\n                    isTop: false,\n                    js: `__self.__varslist[${i}].get(${JSON.stringify(name)})`,\n                    js_set: `__self.__varslist[${i}].set(${JSON.stringify(name)}, ${jsvalue})`\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                if (this.warnUndefinedVar) {\n                    // main__は省略して表示するように。 #1223\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\n                }\n            }\n            this.varsSet.names.add(name);\n            return this.varname_get(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getNakoFunc(name);\n            if (!pv) {\n                return `${res.js}/*[link_error]l${lno}:${position.file}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi || pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        return this.genVar(name, node);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        const lno = this.convLineno(node, false);\n        let value;\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        else if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        else {\n            return lno + 'return;';\n        }\n        if (this.warnUndefinedReturnUserFunc === 0) {\n            return lno + `return ${value};`;\n        }\n        else {\n            const poolIndex = this.addConstPool('ユーザ関数からundefinedが返されています', [], node.file, node.line);\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\n        }\n    }\n    getConstPoolsTemplateId(msg) {\n        let id = this.constPoolsTemplate.indexOf(msg);\n        if (id < 0) {\n            id = this.constPoolsTemplate.length;\n            this.constPoolsTemplate[id] = msg;\n        }\n        return id;\n    }\n    addConstPool(msg, args, file, line) {\n        // file\n        file = '' + file;\n        const fileNo = this.getConstPoolsTemplateId(file);\n        // msg\n        const msgNo = this.getConstPoolsTemplateId(msg);\n        // args\n        const args2 = [];\n        for (const i in args) {\n            const arg = '' + args[i];\n            const argNo = this.getConstPoolsTemplateId(arg);\n            args2.push(argNo);\n        }\n        const poolIndex = this.constPools.length;\n        this.constPools.push([msgNo, args2, fileNo, line]);\n        return poolIndex;\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        return this.convLineno(node) + cmd + ';';\n    }\n    convDefFuncCommon(node, name) {\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\n        let performanceMonitorInjectAtStart = '';\n        let performanceMonitorInjectAtEnd = '';\n        if (this.performanceMonitor.userFunction !== 0) {\n            let key = name;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\n                'const uf_start = performance.now() * 1000;\\n' +\n                'return function () {\\n' +\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\n                `}};})('${key}', 'user');` +\n                'try {\\n';\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\n        }\n        let variableDeclarations = '';\n        const indent = '    ';\n        const popStack = '';\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        variableDeclarations += indent + 'const 引数 = arguments;\\n';\n        // ローカル変数を生成\n        variableDeclarations += indent + 'const __vars = new Map();\\n';\n        // 宣言済みの名前を保存\n        const varsDeclared = Array.from(this.varsSet.names.values());\n        let code = '';\n        // 引数をローカル変数に設定\n        const meta = (!name) ? node.meta : node.name.meta;\n        for (let i = 0; i < meta.varnames.length; i++) {\n            const word = meta.varnames[i];\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\n                code += indent + this.varname_set(word, `arguments[${i}]`) + ';\\n';\n            }\n            else {\n                // check undefined\n                let errMsg = `匿名関数の引数『${word}』にundefinedが渡されました`;\n                if (name) {\n                    errMsg = `ユーザ関数『${name}』の引数『${word}』にundefinedが渡されました`;\n                }\n                const warnJS = `__self.logger.warn('${errMsg}', {line: ${node.line}, file: ${JSON.stringify(node.file)}});`;\n                const checkFunc = `((a) => { if (a === undefined) { ${warnJS} }; return a; })`;\n                const callCheckFunc = `${checkFunc}(arguments[${i}])`;\n                code += indent + this.varname_set(word, callCheckFunc) + ';\\n';\n            }\n            this.varsSet.names.add(word);\n        }\n        // 関数定義は、グローバル領域で。\n        if (name) {\n            this.usedFuncSet.add(name);\n            this.varslistSet[1].names.add(name);\n            if (this.nakoFuncList.get(name) === undefined) {\n                // 既に generate で作成済みのはず(念のため)\n                this.nakoFuncList.set(name, {\n                    josi: node.name.meta.josi,\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    fn: () => { },\n                    type: 'func',\n                    asyncFn: false,\n                    isExport: null\n                });\n                this.__self.getLogger().warn(`generateで未定義の状態の関数『${name}』が動的に登録されています。`);\n            }\n        }\n        // ブロックを解析\n        const oldUsedAsyncFn = this.usedAsyncFn;\n        this.usedAsyncFn = false || this.debugOption.useDebug;\n        const block = this._convGen(node.block, false);\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\n        // 関数の最後に、変数「それ」をreturnするようにする\n        if (this.speedMode.invalidSore === 0) {\n            code += `  return (${this.varname_get('それ')});\\n`;\n        }\n        // パフォーマンスモニタ:ユーザ関数のinject\n        code += performanceMonitorInjectAtEnd;\n        // ブロックでasyncFnを使ったか\n        if (name && this.usedAsyncFn) {\n            const f = this.nakoFuncList.get(name);\n            if (f) {\n                f.asyncFn = true;\n            }\n        }\n        // 関数の末尾に、ローカル変数をPOP\n        // 関数内で定義されたローカル変数の宣言\n        for (const name of Array.from(this.varsSet.names.values())) {\n            if (!varsDeclared.includes(name)) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    variableDeclarations += `  var ${name};\\n`;\n                }\n            }\n        }\n        if (this.speedMode.invalidSore === 0) {\n            if (NakoGen.isValidIdentifier('それ')) {\n                variableDeclarations += '  var それ = \\'\\';\\n';\n            }\n            else {\n                variableDeclarations += `  ${this.varname_get('それ')} = '';`;\n            }\n        }\n        // usedAsyncFnの値に応じて関数定義の方法を変更\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\n        // 関数コード全体を構築\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\n        code = tof + performanceMonitorInjectAtStart + variableDeclarations + lineInfo + code + popStack;\n        code += endOfFunction;\n        // 名前があれば、関数を登録する\n        if (name) {\n            const nameFuncValue = this.nakoFuncList.get(name);\n            if (nameFuncValue) {\n                nameFuncValue.fn = code;\n                nameFuncValue.asyncFn = this.usedAsyncFn;\n                meta.asyncFn = this.usedAsyncFn;\n            }\n        }\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        if (name) {\n            this.__self.__varslist[1].set(name, code);\n        }\n        return code;\n    }\n    convDefTest(node) {\n        const name = node.name.value;\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\n        // ブロックを解析\n        const block = this._convGen(node.block, false);\n        code += `   ${block}\\n` +\n            '}});';\n        this.nakoTestFuncs.set(name, {\n            josi: node.name.meta.josi,\n            fn: code,\n            type: 'test_func'\n        });\n        // ★この時点ではテストコードを生成しない★\n        // プログラム冒頭でコード生成時にテストの定義を行う\n        return '';\n    }\n    convDefFunc(node) {\n        // ※ [関数定義のメモ]\n        // ※ 関数の定義はプログラムの冒頭に移される。\n        // ※ そのため、生成されたコードはここでは返さない\n        // ※ registerFunction を参照\n        if (!node.name) {\n            return '';\n        }\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        return '';\n    }\n    convFuncObj(node) {\n        return '/*convFuncObj*/' + this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            const key = this._convGen(e.key, true);\n            const val = this._convGen(e.value, true);\n            return `${key}:${val}`;\n        });\n        return '{' + codelist.join(',') + '}';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            return this._convGen(e, true);\n        });\n        return '[' + codelist.join(',') + ']';\n    }\n    convRefArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index;\n        let code = name;\n        if (!list) {\n            return code;\n        }\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        return code;\n    }\n    convLetArray(node) {\n        const id = this.loopId++;\n        const name = this._convGen(node.name, true);\n        const list = node.index || [];\n        let codeInit = '';\n        let code = name;\n        let codeArray = '';\n        // codeInit?\n        if (node.checkInit) {\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\n            //\n            // [name]の内容は[__self.__varslist[2].get(\"a__A\")]のようなものになっているはず\n            //\n            const nodeName = node.name;\n            if (nodeName && nodeName.type === 'word') {\n                const word = nodeName.value;\n                const tmpVar = `$nako_tmp_a${id}`;\n                const initArrayCode = this.varname_set(word, arrayDefCode);\n                codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${initArrayCode} };\\n`;\n                codeInit += `${tmpVar} = ${name};\\n`;\n                for (let i = 0; i < list.length - 1; i++) {\n                    const idx = this._convGen(list[i], true);\n                    codeArray += `[${idx}]`;\n                    codeInit += `\\n/*配列初期化${i}*/if (!(${tmpVar}${codeArray} instanceof Array)) { ${tmpVar}${codeArray} = ${arrayDefCode}; };`;\n                }\n                codeInit += '\\n';\n            }\n        }\n        // array\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        // value\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        code += ' = ' + value + ';\\n';\n        // generate code\n        const src = this.convLineno(node, false) + codeInit + code;\n        return src;\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        // forのIDを取得\n        const idLoop = this.loopId++;\n        const varI = `$nako_i${idLoop}`;\n        // ループ変数について\n        let loopVarSetter = '';\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value;\n            this.varsSet.names.add(varName);\n            loopVarSetter = this.varname_set(varName, varI);\n        }\n        // ループ条件を確認\n        const kara = this._convGen(node.from, true);\n        const made = this._convGen(node.to, true);\n        const flagDown = node.flagDown;\n        let inc = '1';\n        if (node.inc && node.inc !== 'null') {\n            inc = this._convGen(node.inc, true);\n        }\n        // ループ内のブロック内容を得る\n        const block = this.convGenLoop(node.block);\n        // ループ条件を変数に入れる用\n        const varFrom = `$nako_from${idLoop}`;\n        const varTo = `$nako_to${idLoop}`;\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', varI);\n        }\n        const code = this.convLineno(node, false) + '\\n' +\n            `/*[convFor id=${idLoop}]*/\\n` +\n            `const ${varFrom} = ${kara};\\n` +\n            `const ${varTo} = ${made};\\n` +\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\n            `    ${sorePrefex};${loopVarSetter}\\n` +\n            '    // for block begin\\n' +\n            `    ${block}\\n` +\n            '    // for block end\\n' +\n            '  };\\n' +\n            '} else { // down\\n' +\n            `  if (${flagDown}) {` +\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\n            `      ${sorePrefex};${loopVarSetter}\\n` +\n            '      // for block begin\\n' +\n            `      ${block}\\n` +\n            '      // for block end\\n' +\n            '    }\\n' +\n            '  };\\n' +\n            '};\\n' +\n            `//[/convFor id=${idLoop}]\\n`;\n        return code;\n    }\n    convForeach(node) {\n        // foreachのIDを取得\n        const id = this.loopId++;\n        const loopKeyVar = `$nako_i${id}`;\n        const loopValueVar = `$nako_foreach_value${id}`;\n        const loopDataVar = `$nako_foreach_data${id}`;\n        // 「対象」「対象キー」を取得 --- blockより早く変数を定義する必要がある\n        let valueVar = '対象';\n        if (node.name) { // 対象変数がある場合、対象は設定されない\n            valueVar = '' + node.name.value;\n        }\n        this.varsSet.names.add(valueVar);\n        const keyVar = '対象キー';\n        this.varsSet.names.add(keyVar);\n        const keySetter = this.varname_set(keyVar, loopKeyVar);\n        // 「それ」(対象のエイリアス)の設定\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', loopValueVar);\n        }\n        // 反復するデータを取得\n        let targetData = '';\n        if (node.target === null) {\n            if (this.speedMode.invalidSore === 0) {\n                targetData = this.varname_get('それ');\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n            }\n        }\n        else {\n            targetData = this._convGen(node.target, true);\n        }\n        // 反復するブロックを取得\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        // コードを生成\n        const code = this.convLineno(node, false) + '\\n' +\n            `// [convForeach id=${id}]\\n` +\n            `let ${loopDataVar} = ${targetData};\\n` +\n            '// foreach Map?\\n' +\n            `if (${loopDataVar} instanceof Map) { // Objectに強制変換\\n` +\n            `  let tmp = {}; for (let tmpKey of ${loopDataVar}.keys()) { tmp[tmpKey] = ${loopDataVar}.get(tmpKey); }; \\n` +\n            `  ${loopDataVar} = tmp;\\n` +\n            '}\\n' +\n            `for (let ${loopKeyVar} in ${loopDataVar}) {\\n` +\n            `  if (!${loopDataVar}.hasOwnProperty(${loopKeyVar})) { continue }\\n` +\n            '  // 対象キーの設定\\n' +\n            `  ${keySetter}\\n` +\n            '  // 対象の設定\\n' +\n            `  let ${loopValueVar} = $nako_foreach_data${id}[${loopKeyVar}]\\n` +\n            `  ${sorePrefex};\\n` +\n            `  ${this.varname_set(valueVar, loopValueVar)}\\n` +\n            '  // [convForeach::block]\\n' +\n            `  ${block}\\n` +\n            '  // [/convForeach::block]\\n' +\n            '}\\n' +\n            `// [/convForeach id=${id}]\\n`;\n        return code;\n    }\n    convRepeatTimes(node) {\n        // ループのIDを取得\n        const id = this.loopId++;\n        const varI = `$nako_i${id}`;\n        const varCount = `$nako_times_data${id}`;\n        const codeCount = this._convGen(node.value, true);\n        // 回数\n        this.varsSet.names.add('回数');\n        const codeCounterSetter = this.varname_set('回数', varI);\n        // ブロックを得る\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        // それ\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', varI);\n        }\n        const code = this.convLineno(node, false) + '\\n' +\n            `// [convRepeatTimes id=${id}] // 『n回』構文\\n` +\n            `let ${varCount} = ${codeCount};\\n` +\n            `for (let ${varI} = 1; ${varI} <= ${varCount}; ${varI}++) {\\n` +\n            `  ${sorePrefex};${codeCounterSetter}\\n` +\n            `  ${block}\\n` +\n            '}\\n' +\n            `// [/convRepeatTimes id=${id}]\\n`;\n        return code;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convSpeedMode(node, isExpression) {\n        if (!node.options) {\n            return '';\n        }\n        const prev = { ...this.speedMode };\n        if (node.options['行番号無し']) {\n            this.speedMode.lineNumbers++;\n        }\n        if (node.options['暗黙の型変換無し']) {\n            this.speedMode.implicitTypeCasting++;\n        }\n        if (node.options['強制ピュア']) {\n            this.speedMode.forcePure++;\n        }\n        if (node.options['それ無効']) {\n            this.speedMode.invalidSore++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.speedMode = prev;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (!node.options) {\n            return '';\n        }\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.performanceMonitor = prev;\n        }\n    }\n    convWhile(node) {\n        const cond = this._convGen(node.cond, true);\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        const code = '// [convWhile]\\n' +\n            this.convLineno(node, false) + '\\n' +\n            `while (${cond})` + '{\\n' +\n            `  ${block}` + '\\n' +\n            '}\\n' +\n            '// [convWhile]\\n';\n        return code;\n    }\n    convAtohantei(node) {\n        const id = this.loopId++;\n        const varId = `$nako_i${id}`;\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = 'while (true) {\\n' +\n            `  ${block}\\n` +\n            `  let ${varId} = ${cond};\\n` +\n            `  if (${varId}) { continue } else { break }\\n` +\n            '}\\n\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convSwitch(node) {\n        const value = this._convGen(node.value, true);\n        const cases = node.cases || [];\n        let body = '';\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            const cblock = this.convGenLoop(cases[i][1]);\n            if (cvalue.type === '違えば') {\n                body += '  default:\\n';\n            }\n            else {\n                const cvalueCode = this._convGen(cvalue, true);\n                body += `  case ${cvalueCode}:\\n`;\n            }\n            body += `    ${cblock}\\n` +\n                '    break\\n';\n        }\n        const code = `switch (${value})` + '{\\n' +\n            `${body}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convIf(node) {\n        // 条件\n        const expr = this._convGen(node.expr, true);\n        // TRUEブロック\n        const block = trim(cleanGeneratedCode(this._convGen(node.block, false), 1));\n        // FALSEブロック\n        let falseBlock = '';\n        if (node.false_block) {\n            falseBlock = trim(cleanGeneratedCode(this.convGenLoop(node.false_block), 1));\n        }\n        let code = '// [convIf]\\n' +\n            this.convLineno(node, false) + '\\n' +\n            `if (${expr}) {\\n` +\n            `  ${block}\\n` +\n            '}';\n        if (falseBlock !== '') {\n            code +=\n                '  else {\\n' +\n                    `  ${falseBlock}\\n` +\n                    '}\\n';\n        }\n        code += '\\n// [/convIf]\\n';\n        return code;\n    }\n    convFuncGetArgsCalcType(_funcName, _func, node) {\n        const args = [];\n        const opts = {};\n        const nodeArgs = (node.args) ? node.args : [];\n        for (let i = 0; i < nodeArgs.length; i++) {\n            const arg = nodeArgs[i];\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\n                args.push(this.varname_get('それ'));\n                opts.sore = true;\n            }\n            else {\n                const argCode = this._convGen(arg, true);\n                args.push(`/*arg${i}*/${argCode}`);\n            }\n        }\n        return [args, opts];\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convCallFunc(node, isExpression) {\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        // どの関数を呼び出すのか関数を特定する\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (!func) {\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\n            }\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n        }\n        else {\n            func = this.nakoFuncList.get(funcName);\n            // 無名関数の可能性\n            if (func === undefined) {\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\n        const args = argsInfo[0];\n        const argsOpts = argsInfo[1];\n        // function\n        this.usedFuncSet.add(funcName);\n        if (funcName === '名前空間設定') {\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__self.__varslist[0].get('名前空間設定')(${args[0]}, __self);__self.__modName=${args[0]};\\n`;\n        }\n        else if (funcName === 'プラグイン名設定') {\n            return `\\n__self.__varslist[0].get('プラグイン名設定')(${args[0]}, __self);\\n`;\n        }\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\n        args.push('__self');\n        let funcDef = 'function';\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\n            // 展開されたローカル変数の列挙\n            const localVars = [];\n            for (const name of Array.from(this.varsSet.names.values())) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    localVars.push({ str: JSON.stringify(name), js: this.varname_get(name) });\n                }\n            }\n            // --- 実行前 ---\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\n            funcBegin += '__self.__locals = __vars;\\n';\n            // 全ての展開されたローカル変数を __self.__locals に保存する\n            if (localVars.length > 0) {\n                funcBegin += '/* 全ての展開されたローカル変数を __self.__locals に保存 */\\n';\n                for (const v of localVars) {\n                    funcBegin += `__self.__locals.set(${v.str}, ${v.js});\\n`;\n                }\n            }\n            // --- 実行後 ---\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\n            if (localVars.length > 0) {\n                funcEnd += '/* 全ての展開されたローカル変数を __self.__locals から受け取る */\\n';\n                for (const v of localVars) {\n                    if (v.js !== 'それ') {\n                        funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\n                    }\n                }\n            }\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        const indent = (text, n) => {\n            let result = '';\n            for (const line of text.split('\\n')) {\n                if (line !== '') {\n                    result += '  '.repeat(n) + line + '\\n';\n                }\n            }\n            return result;\n        };\n        // 引数チェックの例外 #1260\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\n        // 関数呼び出しコードの構築\n        let argsCode;\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\n            argsCode = args.join(',');\n        }\n        else {\n            const argsA = [];\n            args.forEach((arg) => {\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\n                    argsA.push(`${arg}`);\n                }\n                else {\n                    // 引数のundefinedチェックのコードを入れる\n                    const msg = (res.i === 0) ? '命令『$0』の引数にundefinedを渡しています。' : 'ユーザ命令『$0』の引数にundefinedを渡しています。';\n                    const poolIndex = this.addConstPool(msg, [funcName], node.file, node.line);\n                    // argが空になる対策 #1315\n                    const argStr = (arg === '') ? '\"\"' : arg;\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\n                }\n            });\n            argsCode = argsA.join(', ');\n        }\n        let funcCall = `${res.js}(${argsCode})`;\n        if (func.asyncFn) {\n            funcDef = `async ${funcDef}`;\n            funcCall = `await ${funcCall}`;\n            this.numAsyncFn++;\n            this.usedAsyncFn = true;\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\n            let key = funcName;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            funcCall = `(${funcDef} (key, type) {\\n` +\n                'const sbf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + funcCall + ';\\n' +\n                '} finally {\\n' +\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\n                `}}})('${funcName}_body', 'sysbody')\\n`;\n        }\n        let code = '';\n        if (func.return_none) {\n            // ------------------------------------\n            // 戻り値のない関数の場合\n            // ------------------------------------\n            if (funcEnd === '') {\n                code = `/*戻値のない関数呼出1*/${funcBegin}${funcCall};\\n`;\n            }\n            else {\n                code = `/*戻値のない関数呼出2*/${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\n            }\n        }\n        else {\n            // ------------------------------------\n            // 戻り値のある関数の場合\n            // ------------------------------------\n            let sorePrefex = '';\n            let sorePostfix = '';\n            if (this.speedMode.invalidSore === 0) {\n                // 関数の戻り値を記録\n                sorePrefex = '__self.__setSore(';\n                sorePostfix = ')';\n            }\n            if (funcBegin === '' && funcEnd === '') {\n                code = `${sorePrefex}${funcCall}${sorePostfix}`;\n            }\n            else {\n                if (funcEnd === '') {\n                    const funcBody = `${sorePrefex}${funcCall}${sorePostfix}`;\n                    const funcObj = `${funcDef}(){ return ${funcBody} }`;\n                    const funcCallThis = `(${funcObj}).call(this)`;\n                    code = `/* funcCallThis1 */${funcCallThis}`;\n                }\n                else { // つまり、pure=falseの場合\n                    code = `/* funcCallThis2 */(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall}${sorePostfix};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\n                }\n            }\n            // ...して\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\n                code += ';\\n';\n            }\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\n            code = '(function (key, type) {\\n' +\n                'const sf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + code + ';\\n' +\n                '} finally {\\n' +\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\n                `}}})('${funcName}_sys', 'system')\\n`;\n        }\n        return code;\n    }\n    convRenbun(node) {\n        const right = this._convGen(node.right, true);\n        const left = this._convGen(node.left, false);\n        this.numAsyncFn++;\n        this.usedAsyncFn = true;\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\n    }\n    convOp(node) {\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        let op = node.operator || ''; // 演算子\n        let right = this._convGen(node.right, true);\n        let left = this._convGen(node.left, true);\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\n            if (node.left && node.left.type !== 'number' && node.left.type !== 'bigint') {\n                left = `self.__parseFloatOrBigint(${left})`;\n            }\n            if (node.right && node.right.type !== 'number' && node.right.type !== 'bigint') {\n                right = `self.__parseFloatOrBigint(${right})`;\n            }\n        }\n        // 階乗\n        if (op === '^' || op === '**') {\n            return `((${left}) ** (${right}))`;\n        }\n        // 整数の割り算 #1152\n        if (op === '÷÷') {\n            return `(Math.floor(${left} / ${right}))`;\n        }\n        // 一般的なオペレータに変換\n        if (OP_TBL[op]) {\n            op = OP_TBL[op];\n        }\n        //\n        return `(${left} ${op} ${right})`;\n    }\n    convInc(node) {\n        // idを得る\n        const id = this.loopId++;\n        const valueVar = `$nako_v${id}`;\n        // もし値が省略されていたら、変数「それ」に代入する\n        let incValue = null;\n        if (this.speedMode.invalidSore === 0) {\n            incValue = this.varname_get('それ');\n        }\n        if (node.value) {\n            incValue = this._convGen(node.value, true);\n        }\n        if (incValue == null) {\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\n        }\n        // 配列への代入か(core#86)\n        let code = '';\n        let varGetter = '';\n        let varSetter = '';\n        let varInitter = '';\n        const nodeName = node.name;\n        if (nodeName.type === '配列参照') {\n            varGetter = this.convRefArray(nodeName);\n            varSetter = `${varGetter} = ${valueVar}`;\n            varInitter = `${varGetter} = 0`;\n        }\n        else {\n            // 変数名\n            const name = nodeName.value;\n            let res = this.findVar(name, valueVar);\n            if (res === null) {\n                this.varsSet.names.add(name);\n                res = this.findVar(name, valueVar);\n                if (!res) {\n                    throw new Error('『増』または『減』で変数が見当たりません。');\n                }\n            }\n            varGetter = res.js;\n            varSetter = res.js_set;\n            res = this.findVar(name, '0');\n            if (res !== null) {\n                varInitter = res.js_set;\n            }\n        }\n        // 自動初期化するか\n        code += '\\n/*[convInc]*/\\n';\n        code += this.convLineno(node, false) + '\\n';\n        code += `let ${valueVar} = ${varGetter}\\n`;\n        code += `if (typeof ${valueVar} === 'undefined') { ${varInitter}; }\\n`;\n        code += `${valueVar} = ${varGetter} + ${incValue};\\n`;\n        code += `${varSetter}\\n`;\n        code += '/*[/convInc]*/\\n';\n        return code;\n    }\n    convLet(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name, value);\n        let code = '';\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname_set(name, value)};`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js_set};`;\n        }\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convDefLocalVar(node) {\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        //\n        this.varsSet.names.add(name);\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        const code = `${this.varname_set(name, value)};\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        let code = '';\n        const vtype = node.vartype; // 変数 or 定数\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const id = this.loopId++;\n        const varI = `$nako_i${id}`;\n        code += `let ${varI} = ${value}\\n`;\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\n        const names = (node.names) ? node.names : [];\n        for (let i = 0; i < names.length; i++) {\n            const nameObj = names[i];\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                // 複数変数文では、二重定義も許容する #1027\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\n            }\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            code += this.varname_set(name, `${varI}[${i}]`) + ';\\n';\n        }\n        return this.convLineno(node, false) +\n            '/*[convDefLocalVarlist]*/\\n' +\n            code +\n            '/*[/convDefLocalVarlist]*/\\n';\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            const rf = (a, name) => {\n                return '\"+' + this.genVar(name, node) + '+\"';\n            };\n            value = value.replace(/\\{(.+?)\\}/g, rf);\n            value = value.replace(/｛(.+?)｝/g, rf);\n        }\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const block = this._convGen(node.block, false);\n        const errBlock = this._convGen(node.errBlock, false);\n        return this.convLineno(node, false) +\n            `try {\\n${block}\\n} catch (e) {\\n` +\n            '  __self.__setSysVar(\"エラーメッセージ\", e.message);\\n' +\n            ';\\n' +\n            `${errBlock}}\\n`;\n    }\n    getUsedFuncSet() {\n        return this.usedFuncSet;\n    }\n    getPluginInitCode() {\n        // プラグインの初期化関数を実行する\n        let code = '';\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0.get('!${name}:初期化')(__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.set(\\'__line\\', \\'l0:プラグインの初期化\\');\\n' + pluginCode;\n        }\n        return code;\n    }\n}\n/** template of standalone js code */\nconst STANDALONE_CODE = `\n// === generated by nadesiko3 v__version__(core:__coreVersion__) ===\n// -----------------------------------------------------------------\n// <nadesiko3standalone>\n// -----------------------------------------------------------------\n// --- import\nimport path from 'path'\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\n__codeImportFiles__\n// --- init global self\nconst self = {}\nself.coreVersion = '__coreVersion__'\nself.version = '__version__'\nself.logger = {\n  error: (message) => { console.error(message) },\n  warn: (message) => { console.warn(message) },\n  send: (level, message) => { console.log(message) },\n  runtimeError: (message, lineInfo) => { console.error(message, lineInfo) }\n};\nself.__varslist = [new Map(), new Map(), new Map()]\nself.__v0 = self.__varslist[0]\nself.initFuncList = []\nself.clearFuncList = []\n// --- jsInit ---\n__jsInit__\n// --- Copy module functions ---\nfor (const mod of __importNames__) {\n  for (const funcName in mod) {\n    // プラグインの初期化とクリア関数を登録\n    if (funcName === '初期化') {\n      __self.initFuncList.push(mod[funcName].fn)\n      continue\n    }\n    if (funcName === '!クリア') {\n      __self.clearFuncList.push(mod[funcName].fn)\n      continue\n    }\n    // 関数や定数を登録\n    const f = mod[funcName]\n    if (f.type === 'func') { // 関数\n      __self.__varslist[0].set(funcName, f.fn)\n    } else { // 定数\n      __self.__varslist[0].set(funcName, f.value)\n    }\n  }\n}\n__self.__vars = __self.__varslist[2];\n__self.__module = {};\n__self.__locals = new Map();\n__self.__genMode = 'sync';\n// プラグインの初期化コードを実行\n__self.initFuncList.map(f => f(self))\n// standalone\n__self.__v0.set('__standalone', true)\n// -----------------------------------------------------------------\ntry {\n  try {\n// -----------------------------------------------------------------\n// <prepareMainCode>\n__codeStandalone__\n// </prepareMainCode>\n// -----------------------------------------------------------------\n// <mainCode>\n// -----------------------------------------------------------------\n__codeJS__\n// -----------------------------------------------------------------\n// </mainCode>\n// -----------------------------------------------------------------\n  } catch (err) {\n    __self.logger.error(err);\n    throw err;\n  }\n} finally {\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\n  __self.clearFuncList.map(f => f(__self))\n}\n// -----------------------------------------------------------------\n// </nadesiko3standalone>\n// -----------------------------------------------------------------\n`;\n/**\n * @param com\n * @param ast\n * @param opt\n */\nexport function generateJS(com, ast, opt) {\n    // NakoGenのインスタンスを作成\n    const gen = new NakoGen(com);\n    // ※ [関数定義に関するコード生成のヒント]\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\n    // (1) ユーザー定義関数をシステムに登録する\n    gen.registerFunction(ast);\n    // (2) JSコードを生成する\n    let js = trim(cleanGeneratedCode(gen.convGen(ast, opt), 1));\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\n    const jsInit = gen.getDefFuncCode(com, opt);\n    // ランダムな関数名を生成\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\n    // テストの実行\n    if (js && opt.isTest) {\n        js += '\\n__self._runTests(__tests);\\n';\n    }\n    // async method\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\n        js = `\n// ------------------------------------------------------------------\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\n// ------------------------------------------------------------------\nasync function ${asyncMain}(__self) {\n  // --- code_begin ---\n  ${js}\n  // --- code_end ---\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} // end of ${asyncMain}\n// ------------------------------------------------------------------\n// call ${asyncMain}\n(async () => {\n  if (__self.__v0.get('__standalone')) {\n    await ${asyncMain}(self);\n  } else {\n    ${asyncMain}.call(self, self)\n    .then(() => { /* __async_ok__ */ })\n    .catch(err => {\n      if (err.message === '__終わる__') { return }\n      __self.numFailures++\n      // send errors to logger\n      let rterr = __self.logger.runtimeError(err, __self.__v0.get('__line'))\n      __self.logger.error(rterr)\n    })\n  }\n})();\n// ------------------------------------------------------------------\n// </nadesiko3::gen::async id=\"${funcID}\">\n// ------------------------------------------------------------------\n`;\n    }\n    else {\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\n        js = `\n// ------------------------------------------------------------------\n// <nadesiko3::gen::syncMode>\n// ------------------------------------------------------------------\nfunction ${syncMain}(__self) {\ntry {\n  ${js}\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} catch (err) {\n  if (err.message === '__終わる__') { return }\n  __self.numFailures++\n  throw __self.logger.runtimeError(err, __self.__v0.get('__line'))\n}\n} // end of ${syncMain}\n${syncMain}(__self)\n// ------------------------------------------------------------------\n// </nadesiko3::gen::syncMode>\n// ------------------------------------------------------------------\n`;\n    }\n    // --- 生成したコードの簡単な整形 ---\n    js = cleanGeneratedCode(js);\n    // デバッグメッセージ\n    com.getLogger().trace('--- generate ---\\n' + js);\n    let codeImportFiles = '';\n    const importNames = [];\n    for (const f of opt.importFiles) {\n        if (f === 'nako_errors.mjs') {\n            continue;\n        }\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\n        importNames.push(ff);\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\n    }\n    // ---\n    const initCode = gen.getPluginInitCode();\n    const runtimeEnvCode = `\n// <runtimeEnvCode>\nconst self = this\n${opt.codeEnv}\n${jsInit}\n${initCode}\n${js}\n// </runtimeEnvCode>\n`;\n    return {\n        // なでしこの実行環境ありの場合(thisが有効)\n        runtimeEnv: runtimeEnvCode,\n        // JavaScript単体で動かす場合\n        standalone: replaceTemplateCode(STANDALONE_CODE, {\n            codeImportFiles,\n            'coreVersion': com.coreVersion,\n            'version': com.version,\n            'importNames': ('[' + importNames.join(', ') + ']'),\n            'codeStandalone': opt.codeStandalone,\n            'codeJS': js,\n            jsInit\n        }),\n        // コード生成に使ったNakoGenのインスタンス\n        gen\n    };\n}\n// template\nfunction replaceTemplateCode(template, values) {\n    for (const key in values) {\n        const pat = `__${key}__`;\n        const val = values[key];\n        template = template.split(pat).join(val);\n    }\n    return template;\n}\n// clean generated code\nfunction cleanGeneratedCode(code, indent = 0) {\n    // 無意味な改行やセミコロンを削除\n    code = code.replace(/;{2,}/g, ';');\n    code = code.replace(/\\n{2,}/g, '\\n');\n    let spc = '';\n    for (let i = 0; i < indent; i++) {\n        spc += '  ';\n    }\n    // 行頭の\";\"を削除\n    const result = [];\n    const lines = code.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        let line = lines[i];\n        line = line.replace(/^(\\s*);/, '$1');\n        if (trim(line) === '') {\n            continue;\n        }\n        result.push(spc + line);\n    }\n    code = result.join('\\n');\n    return code;\n}\n/**\n * 前後の空白を削除する\n * @param str 対象文字列\n * @returns トリムした文字列\n */\nfunction trim(str) {\n    str = String(str);\n    return str.replace(/^\\s+|\\s+$/g, '');\n}\n","/**\n * よく使う処理をまとめたもの\n */\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * トークンの内容をデバッグ出力する関数\n * @param tokens トークンの一覧\n * @returns 文字列\n */\nexport function debugTokens(tokens) {\n    const result = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const ftype = t.type;\n        const fvalue = t.value;\n        let s = `[${ftype}:${fvalue}]`;\n        if (ftype === fvalue) {\n            s = ftype;\n        }\n        if (ftype === 'comma') {\n            s = ',';\n        }\n        if (ftype === 'string') {\n            s = `\"${fvalue}\"`;\n        }\n        if (ftype === 'number') {\n            s = `(${fvalue})`;\n        }\n        if (ftype === 'word') {\n            s = `[word:${fvalue}]`;\n        }\n        if (!result[t.line]) {\n            result[t.line] = makeIndent(t.indent);\n        }\n        result[t.line] += s + t.josi + '|';\n    }\n    return result.join('\\n');\n}\nexport function makeIndent(n) {\n    let s = '';\n    for (let i = 0; i < n; i++) {\n        s += ' ';\n    }\n    return s;\n}\nlet lastTokenInfo = NewEmptyToken();\nexport function newToken(type, value, templateToken = undefined) {\n    if (templateToken) {\n        lastTokenInfo = templateToken;\n    }\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\n    return t;\n}\n","/** インデント構文を処理するモジュール */\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { NakoIndentError } from '../src/nako_errors.mjs';\nimport { debugTokens, newToken } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nfunction isSkipWord(t) {\n    if (t.type === '違えば') {\n        return true;\n    }\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\n        return true;\n    }\n    return false;\n}\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\nexport function convertInlineIndent(tokens) {\n    //\n    // 0:もし、A=0ならば:\n    // 2:  もし、B=0ならば:\n    // 4:    「A=0,B=0」を表示。\n    // 2:  違えば:\n    // 4:    「A=0,B!=0」を表示。\n    // 5:違えば:\n    // 6:  「A!=0」を表示。\n    //\n    const lines = splitTokens(tokens, 'eol');\n    const blockIndents = [];\n    let checkICount = -1;\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        // JSONの途中であればブロックの変更は行わない\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        // インデントの終了を確認する必要があるか？\n        if (checkICount >= 0) {\n            const lineICount = leftToken.indent;\n            while (checkICount >= lineICount) {\n                const tFirst = leftToken;\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\n                }\n                else {\n                    // ここまでを挿入する\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    checkICount = blockIndents[blockIndents.length - 1];\n                }\n                else {\n                    checkICount = -1;\n                    break;\n                }\n            }\n        }\n        // JSONの途中であればブロックの変更は行わない\n        checkJsonSyntax(line);\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            continue;\n        }\n        // 末尾の「:」をチェック\n        const tLast = getLastTokenWithoutEOL(line);\n        if (tLast.type === ':') {\n            // 末尾の「:」を削除\n            lines[i] = lines[i].filter(t => t !== tLast);\n            checkICount = tLast.indent;\n            blockIndents.push(checkICount);\n        }\n    }\n    if (lines.length > 0 && blockIndents.length > 0) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        // ここまでを差し込む\n        for (let i = 0; i < blockIndents.length; i++) {\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\n        }\n    }\n    const result = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('###', debugTokens(result));\n    }\n    return result;\n}\n/** 行ごとに分割していたトークンをくっつける */\nexport function joinTokenLines(lines) {\n    const r = [];\n    for (const line of lines) {\n        for (const t of line) {\n            r.push(t);\n        }\n    }\n    return r;\n}\nfunction getLastTokenWithoutEOL(line) {\n    const len = line.length;\n    if (len === 0) {\n        return NewEmptyToken('?');\n    }\n    let res = line[len - 1];\n    if (res.type === 'eol') {\n        if (len >= 2) {\n            res = line[len - 2];\n        }\n    }\n    return res;\n}\nexport function splitTokens(tokens, delimiter) {\n    const result = [];\n    let line = [];\n    let kakko = 0;\n    for (const t of tokens) {\n        line.push(t);\n        if (t.type === '{') {\n            kakko++;\n        }\n        else if (t.type === '}') {\n            kakko--;\n        }\n        else if (kakko === 0 && t.type === delimiter) {\n            result.push(line);\n            line = [];\n        }\n    }\n    if (line.length > 0) {\n        result.push(line);\n    }\n    return result;\n}\n/** トークン行が空かどうか調べる */\nfunction IsEmptyLine(line) {\n    if (line.length === 0) {\n        return true;\n    }\n    for (let j = 0; j < line.length; j++) {\n        const ty = line[j].type;\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/** コメントを除去した最初のトークンを返す */\nfunction GetLeftTokens(line) {\n    for (let i = 0; i < line.length; i++) {\n        const t = line[i].type;\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\n            continue;\n        }\n        return line[i];\n    }\n    return line[0];\n}\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\nexport function convertIndentSyntax(tokens) {\n    // インデント構文の変換が必要か?\n    if (!useIndentSynax(tokens)) {\n        return tokens;\n    }\n    // 『ここまで』があったらエラーを出す\n    for (const t of tokens) {\n        if (t.type === 'ここまで') {\n            // エラーを出す\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\n        }\n    }\n    // JSON構文のチェック\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    // 行ごとにトークンを分割\n    const blockIndents = [];\n    const lines = splitTokens(tokens, 'eol');\n    let lastI = 0;\n    // 各行を確認する\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        // JSON構文のチェック\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        const curI = leftToken.indent;\n        if (curI === lastI) {\n            continue;\n        }\n        // ブロックの終了?\n        // 0: 3回\n        // 2:   もし、1 > 1ならば\n        // 4:     1を表示\n        // 2:   違えば\n        // 4:     2を表示\n        // 0:\n        // ブロックの終了?\n        if (lastI >= 0) {\n            while (lastI > curI) {\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\n                }\n                else {\n                    const t = lines[i - 1][0];\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\n                    lines[i - 1].push(newToken('eol', '\\n', t));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    lastI = blockIndents[blockIndents.length - 1][0];\n                }\n                else {\n                    lastI = 0;\n                    break;\n                }\n            }\n        }\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            continue;\n        }\n        // JSON構文のチェック\n        checkJsonSyntax(line);\n        // ブロックの開始？\n        if (curI > lastI) {\n            blockIndents.push([curI, lastI]);\n            // console.log('@@@push', curI)\n            lastI = curI;\n            continue;\n        }\n    }\n    // 末尾に「ここまで」を追加する\n    for (let i = 0; i < blockIndents.length; i++) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\n    }\n    const result = joinTokenLines(lines);\n    // console.log('###', debugTokens(result))\n    return result;\n}\nfunction useIndentSynax(tokens) {\n    // インデント構文が必要かチェック (最初の100個をチェック)\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * DNCLに対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\n// DNCLモードのキーワード\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:を実行': ['ここまで', 'ここまで'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL(tokens) {\n    if (!useDNCLmode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // 行頭の | はただのインデント\n        for (let j = 0; j < line.length; j++) {\n            if (line[j].type === '|') {\n                line[j].type = 'range_comment';\n                continue;\n            }\n            break;\n        }\n        // 後判定の繰り返しの実装のため\n        const t = line[0];\n        if (t.type === 'word' && t.value === '繰返') {\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\n        }\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\n        if (fi > 0) {\n            replaceAtohantei(line, fi);\n        }\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\n        if (fi2 > 0) {\n            replaceAtohantei(line, fi2);\n        }\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // を繰り返す → ここまで\n        for (;;) {\n            const ni = findTokens(line, ['word:を繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'ここまで';\n            fu.value = 'ここまで';\n            fu.josi = '';\n        }\n        // 'のすべての要素を0にする'\n        // 'のすべての要素に0を代入する'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 'のすべての値を0にする'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    return tokens;\n}\nfunction replaceAllElementV(line, ni) {\n    //\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\n    //\n    const t = line[ni];\n    line[ni - 1].josi = '';\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\n    end.josi = 'に';\n    const val = line[ni + 2];\n    val.josi = '';\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\n    times.josi = 'を';\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\n}\nfunction replaceAtohantei(tokens, fi) {\n    // `ここまで、(${r[1]})になるまでの間`\n    const wo = findTokens(tokens, ['word:を']);\n    if (wo >= 0) {\n        tokens[wo].type = 'ここまで';\n        tokens[wo].value = 'ここまで';\n    }\n    const ga = findTokens(tokens, ['word:が']);\n    if (ga >= 0) {\n        tokens[ga].type = 'ここまで';\n        tokens[ga].value = 'ここまで';\n    }\n    // なる:まで(fi) 実行(fi+1)\n    tokens[fi + 1].value = '間';\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCLmode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCLモード';\n            return true;\n        }\n    }\n    return false;\n}\nexport const NakoDncl = {\n    convert: convertDNCL\n};\n","/**\n * DNCL ver2 に対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\nimport { newToken, debugTokens } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nconst DNCL_ARRAY_INIT_COUNT = 30;\n// DNCL2モードのキーワード\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    // 'word:and': ['and', 'かつ'],\n    // 'word:or': ['or', 'または'],\n    'word:not': ['not', '!'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示'],\n    'word:と定義': ['ここまで', 'ここまで'] // 「と定義」→「ここまで」\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL2(tokens) {\n    if (!useDNCL2mode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // --- 制御構文の変換 ---\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // そうでなければ(そう|でなければ) or そうでなく → 違えば\n        for (let ni = 0; ni < line.length; ni++) {\n            const t = line[ni];\n            if ((t.value === 'そう' || t.value === 'それ') && (t.josi === 'でなければ' || t.josi === 'でなく')) {\n                t.type = '違えば';\n                t.value = '違えば';\n                t.josi = '';\n            }\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // 'そうでなく': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なく']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            if (sou.josi === 'で') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni + 1, 1);\n                // console.log('@@@', line.map(v => v.value).join('|'))\n                continue;\n            }\n            break;\n        }\n        // 'そうでなくもし': '違えば,もし'\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なくもし']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            const nakumosi = line[ni + 1];\n            sou.type = '違えば';\n            sou.value = '違えば';\n            sou.josi = '';\n            nakumosi.type = 'もし';\n            nakumosi.value = 'もし';\n            nakumosi.josi = '';\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // --- 配列変数周りの変換 ---\n        for (let i = 0; i < line.length; i++) {\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                const valToken = line[i + 4];\n                valToken.josi = '';\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n                i += 6; // skip\n            }\n            // Hensuの|すべての|(要素を|値を)|0に|する\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\n                const varToken = line[i];\n                varToken.josi = '';\n                const valToken = line[i + 3];\n                valToken.josi = '';\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n            // 配列変数 | xxを | 初期化する\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n        }\n        // --- その他の変換 ---\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('// DEBUG---DNCL:tokens---BEGIN');\n        console.log(debugTokens(tokens));\n        console.log('// DEBUG---DNCL:tokens---END');\n    }\n    return tokens;\n}\n/**\n * トークンが合致するかを確認する\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\n * @param lines 差し替え\n * @param fromIndex 検索場所\n * @returns 合致したかどうか\n */\nfunction tokenEq(typeValues, lines, fromIndex) {\n    const check = (pattern, t) => {\n        if (pattern instanceof Array) {\n            for (let i = 0; i < pattern.length; i++) {\n                if (check(pattern[i], t)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (pattern === '*') {\n            return true;\n        }\n        if (pattern.indexOf(':') < 0) {\n            if (pattern === t.type) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const tv = `${t.type}:${t.value}`;\n        if (pattern === tv) {\n            return true;\n        }\n        return false;\n    };\n    for (let i = 0; i < typeValues.length; i++) {\n        const idx = i + fromIndex;\n        if (idx >= lines.length) {\n            return false;\n        }\n        const pat = typeValues[i];\n        const t = lines[idx];\n        if (!check(pat, t)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCL2mode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCL2モード';\n            return true;\n        }\n    }\n    return false;\n}\n","/** prepareとtokenizeのソースマッピング */\nexport class SourceMappingOfTokenization {\n    /**\n       * @param {number} sourceCodeLength\n       * @param {PreprocessItem[]} preprocessed\n       */\n    constructor(sourceCodeLength, preprocessed) {\n        /** @private @readonly */\n        this.sourceCodeLength = sourceCodeLength;\n        /** @private @readonly */\n        this.preprocessed = preprocessed;\n        let i = 0;\n        /** @private @readonly @type {number[]} */\n        this.cumulativeSum = [];\n        for (const el of preprocessed) {\n            this.cumulativeSum.push(i);\n            i += el.text.length;\n        }\n        /** @private */\n        this.lastIndex = 0;\n        /** @private */\n        this.lastPreprocessedCodePosition = 0;\n    }\n    /**\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    map(preprocessedCodePosition) {\n        const i = this.findIndex(preprocessedCodePosition);\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\n    }\n    /**\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    findIndex(preprocessedCodePosition) {\n        // 連続アクセスに対する高速化\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\n            this.lastIndex = 0;\n        }\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\n                this.lastIndex = i;\n                return i;\n            }\n        }\n        this.lastIndex = this.preprocessed.length - 1;\n        return this.preprocessed.length - 1;\n    }\n}\nexport class SourceMappingOfIndentSyntax {\n    /**\n       * @param {string} codeAfterProcessingIndentationSyntax\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\n       */\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\n        /** @private @type {{ offset: number, len: number }[]} */\n        this.lines = [];\n        /** @private @readonly */\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\n        /** @private @readonly */\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\n        let offset = 0;\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\n            this.lines.push({ offset, len: line.length });\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number | null} startOffset\n       * @param {number | null} endOffset\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\n       */\n    map(startOffset, endOffset) {\n        if (startOffset === null) {\n            return { startOffset, endOffset };\n        }\n        // 何行目かを判定\n        const tokenLine = this.getLineNumber(startOffset);\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\n            if (tokenLine === insertedLine) {\n                startOffset = null;\n                endOffset = null;\n                break;\n            }\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\n            if (tokenLine > insertedLine) {\n                // \"\\n\"の分1足す\n                startOffset -= this.lines[insertedLine].len + 1;\n                if (endOffset !== null) {\n                    endOffset -= this.lines[insertedLine].len + 1;\n                }\n            }\n        }\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\n            if (tokenLine >= deletedLine.lineNumber) {\n                // \"\\n\"の分1足す\n                if (startOffset !== null) {\n                    startOffset += deletedLine.len + 1;\n                }\n                if (endOffset !== null) {\n                    endOffset += deletedLine.len + 1;\n                }\n            }\n        }\n        return { startOffset, endOffset };\n    }\n    /**\n       * @param {number} offset\n       * @returns {number}\n       * @private\n       */\n    getLineNumber(offset) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\n            if (offset < this.lines[i + 1].offset) {\n                this.lastLineNumber = i;\n                return i;\n            }\n        }\n        this.lastLineNumber = this.lines.length - 1;\n        return this.lines.length - 1;\n    }\n}\n/** offsetから (line, column) へ変換する。 */\nexport class OffsetToLineColumn {\n    /**\n       * @param {string} code\n       */\n    constructor(code) {\n        /** @private @type {number[]} */\n        this.lineOffsets = [];\n        // 各行の先頭位置を先に計算しておく\n        let offset = 0;\n        for (const line of code.split('\\n')) {\n            this.lineOffsets.push(offset);\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number} offset\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\n       * @returns {{ line: number, column: number }}\n       */\n    map(offset, oneBasedLineNumber) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\n            if (offset < this.lineOffsets[i + 1]) {\n                this.lastLineNumber = i;\n                return {\n                    line: i + (oneBasedLineNumber ? 1 : 0),\n                    column: offset - this.lineOffsets[i]\n                };\n            }\n        }\n        this.lastLineNumber = this.lineOffsets.length - 1;\n        return {\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\n        };\n    }\n}\n/**\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\n */\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\n    // offsetは単純に引くだけでよい\n    if (typeof sourceMap.startOffset === 'number') {\n        sourceMap.startOffset -= preCode.length;\n    }\n    if (typeof sourceMap.endOffset === 'number') {\n        sourceMap.endOffset -= preCode.length;\n    }\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\n    if (preCode !== '') {\n        const lines = preCode.split('\\n');\n        if (typeof sourceMap.line === 'number') {\n            sourceMap.line -= lines.length - 1;\n        }\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\n            sourceMap.column -= lines[lines.length - 1].length;\n        }\n    }\n    return sourceMap;\n}\n","/**\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\n */\n/**\n * ANSI escape code の一部\n */\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\n// 30 ~ 37\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\n/** @param {string} t */\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n/**\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\n * @param {string} text\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\n */\nconst convertColorTextFormat = (text) => {\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\n    // eslint-disable-next-line no-control-regex\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\n    // nodeConsoleからbrowserConsoleを作る\n    /** @type {string[]} */\n    const browserConsoleStyles = [];\n    let consoleColor = 'inherit'; // 文字色\n    let consoleFontWeight = 'inherit'; // 文字の太さ\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\n    const browserConsoleText = text === noColor\n        ? noColor\n        // eslint-disable-next-line no-control-regex\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n            const m1 = +m1str;\n            if (m1 === 0) {\n                consoleColor = 'inherit';\n                consoleFontWeight = 'inherit';\n            }\n            if (m1 === 1) {\n                consoleFontWeight = 'bold';\n            }\n            if (m1 >= 30 && m1 <= 37) {\n                consoleColor = colorNames[m1 - 30];\n            }\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\n            return '%c';\n        });\n    // nodeConsoleからhtmlを作る\n    let htmlColor = 'inherit'; // 文字色\n    let htmlFontWeight = 'inherit'; // 文字の太さ\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\n    // eslint-disable-next-line multiline-ternary\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\n        // eslint-disable-next-line no-control-regex\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n        const m1 = +m1str;\n        if (m1 === 0) { // リセット\n            htmlColor = 'inherit';\n            htmlFontWeight = 'inherit';\n        }\n        if (m1 === 1) { // 太字化\n            htmlFontWeight = 'bold';\n        }\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\n            htmlColor = colorNames[m1 - 30];\n        }\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\n    }) + '</span>');\n    // 各表現を返す。\n    return {\n        noColor,\n        nodeConsole: text === noColor\n            ? noColor // textが色の情報を含まないならnoColorを返す。\n            : text + '\\x1b[0m', // そうでなければtextの末尾に色をリセットするコードを付けて返す。\n        html,\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\n    };\n};\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\n","/** NakoLogger */\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport { NakoColors } from './nako_colors.mjs';\n/**\n * ログレベル - 数字が高いほど優先度が高い。\n */\nexport class LogLevel {\n    // string to level no\n    static fromS(levelStr) {\n        let level = LogLevel.trace;\n        switch (levelStr) {\n            case 'all':\n                level = LogLevel.all;\n                break;\n            case 'trace':\n                level = LogLevel.trace;\n                break;\n            case 'debug':\n                level = LogLevel.debug;\n                break;\n            case 'info':\n                level = LogLevel.info;\n                break;\n            case 'warn':\n                level = LogLevel.warn;\n                break;\n            case 'error':\n                level = LogLevel.error;\n                break;\n            case 'stdout':\n                level = LogLevel.stdout;\n                break;\n            default:\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\n        }\n        return level;\n    }\n    static toString(level) {\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\n        return levels[level];\n    }\n}\n// level no\nLogLevel.all = 0;\nLogLevel.trace = 1;\nLogLevel.debug = 2;\nLogLevel.info = 3;\nLogLevel.warn = 4;\nLogLevel.error = 5;\nLogLevel.stdout = 6;\n/**\n * エラー位置を日本語で表示する。\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\n */\nfunction stringifyPosition(p) {\n    if (!p) {\n        return '';\n    }\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\n}\n/**\n * コンパイラのログ情報を出力するためのクラス。\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\n */\nexport class NakoLogger {\n    constructor() {\n        this.listeners = [];\n        this.logs = '';\n        this.position = '';\n    }\n    getErrorLogs() {\n        return [this.logs.replace(/\\s+$/, ''), this.position];\n    }\n    clear() {\n        this.logs = '';\n        this.position = '';\n    }\n    /**\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\n     * @param levelStr\n     * @param callback\n     */\n    addListener(levelStr, callback) {\n        const level = LogLevel.fromS(levelStr);\n        this.listeners.push({ level, callback });\n    }\n    /**\n     * addListenerメソッドで設定したコールバックを取り外す。\n     * @param {LogListener} callback\n     */\n    removeListener(callback) {\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\n    }\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    trace(message, position = null) {\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** 本体開発時のデバッグ情報\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    debug(message, position = null) {\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    info(message, position = null) {\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（重要なもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    warn(message, position = null) {\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** エラーメッセージ\n     * @param {string | Error} message\n     * @param {Position | null} position\n     */\n    error(message, position = null) {\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\n        if (message instanceof Error && typeof message.type === 'string') {\n            // NakoErrorか\n            const etype = message.type;\n            switch (etype) {\n                case 'NakoRuntimeError':\n                case 'NakoError':\n                    if (message instanceof NakoError) {\n                        const e = message;\n                        let pos = position;\n                        if (pos === null || pos === undefined) {\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\n                        }\n                        this.sendI(LogLevel.error, e.message, pos);\n                        return;\n                    }\n            }\n        }\n        if (message instanceof Error) {\n            // 一般のエラーの場合は、messageのみ取得できる。\n            message = message.message;\n        }\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** RuntimeErrorを生成する */\n    runtimeError(error, posStr) {\n        const e = new NakoRuntimeError(error, posStr);\n        return e;\n    }\n    /** ユーザープログラムのデバッグ情報（すべて)\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    stdout(message, position = null) {\n        this.sendI(LogLevel.stdout, `${message}`, position);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\n        const i = LogLevel.fromS(levelStr);\n        this.sendI(i, nodeConsole, position, html, browserConsole);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\n        const makeData = () => {\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\n            let style = '';\n            if (nodeConsole.includes('\\n')) {\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\n            }\n            // 各イベントリスナーが受け取るデータ\n            const data = {\n                noColor: formats.noColor,\n                nodeConsole: formats.nodeConsole,\n                browserConsole: browserConsole || formats.browserConsole,\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>', // 各行を style: block で表示するために、<div>で囲む。\n                level: LogLevel.toString(level),\n                position\n            };\n            return data;\n        };\n        // エラーならログに追加\n        if (level === LogLevel.error) {\n            const data = makeData();\n            this.logs += data.noColor + '\\n';\n            if (position && this.position !== null) {\n                this.position = `l${position.line}:${position.file}`;\n            }\n        }\n        // 登録したリスナーに通知する\n        for (const l of this.listeners) {\n            if (l.level <= level) {\n                const data = makeData();\n                l.callback(data);\n            }\n        }\n    }\n}\n","import { NakoColors } from './nako_colors.mjs';\n/**\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\n */\nexport class NakoGlobal {\n    /**\n     * @param compiler\n     * @param gen\n     */\n    constructor(compiler, gen, guid = 0) {\n        this.guid = guid;\n        this.lastJSCode = '';\n        // ユーザーのプログラムから編集される変数\n        this.__locals = new Map();\n        this.__varslist = [\n            new Map(compiler.__varslist[0]), // system\n            new Map(compiler.__varslist[1]), // global\n            new Map(compiler.__varslist[2]) // local [2][3][4][5] ...\n        ];\n        this.numFailures = 0;\n        this.index = 0;\n        this.nextIndex = -1;\n        this.__code = [];\n        this.__callstack = [];\n        this.__stack = [];\n        this.__labels = [];\n        this.__genMode = gen.genMode;\n        // バージョン情報の引き継ぎ\n        this.version = compiler.version;\n        this.coreVersion = compiler.coreVersion;\n        // PluginSystemとdestroy()から参照するため\n        this.__module = { ...compiler.__module }; // shallow copy\n        this.pluginfiles = { ...compiler.getPluginfiles() };\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\n        this.gen = gen;\n        // 以下のメソッドで使うため\n        this.logger = compiler.getLogger();\n        this.compiler = compiler;\n    }\n    clearLog() {\n        this.__varslist[0].set('表示ログ', '');\n    }\n    get log() {\n        let s = this.__varslist[0].get('表示ログ');\n        s = s.replace(/\\s+$/, '');\n        return s;\n    }\n    /**\n     * システム変数を設定する\n     * @param name システム変数名\n     * @param value 設定したい値\n     */\n    __setSysVar(name, value) {\n        this.__varslist[0].set(name, value);\n    }\n    /**\n     * システム変数を取得する\n     * @param name システム変数名\n     * @returns システム変数の値\n     */\n    __getSysVar(name) {\n        return this.__varslist[0].get(name);\n    }\n    /**\n     * 「ナデシコ」命令のためのメソッド\n     */\n    runEx(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return this.compiler.runSync(code, fname, opts);\n    }\n    async runAsync(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return await this.compiler.runAsync(code, fname, opts);\n    }\n    /**\n     * テスト実行のためのメソッド\n     * @param {{ name: string, f: () => void }[]} tests\n     */\n    _runTests(tests) {\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\n        let pass = 0;\n        let numFailures = 0;\n        for (const t of tests) {\n            try {\n                t.f();\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\n                pass++;\n            }\n            catch (err) {\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\n                numFailures++;\n            }\n        }\n        if (numFailures > 0) {\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\n        }\n        else {\n            text += `${NakoColors.color.green}成功 ${pass}件`;\n        }\n        this.numFailures = numFailures;\n        this.logger.stdout(text);\n    }\n    /**\n     * 毎プラグインの「!クリア」関数を実行\n     */\n    clearPlugins() {\n        // 実行している関数をすべて終了させる\n        // プラグインのクリア関数を呼び出す\n        const clearName = '!クリア';\n        for (const pname in this.pluginfiles) {\n            const po = this.__module[pname];\n            if (po[clearName] && po[clearName].fn) {\n                po[clearName].fn(this);\n            }\n        }\n    }\n    /**\n     * 各種リセット処理\n     */\n    reset() {\n        this.clearPlugins();\n    }\n    destroy() {\n        this.reset();\n    }\n}\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst coreVersion = {\n    version: '3.6.3',\n    major: 3,\n    minor: 6,\n    patch: 3\n};\nexport default coreVersion;\n","export default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_math', // プラグインの名前\n            description: '数学関数を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @三角関数\n    'SIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.sin(v);\n        }\n    },\n    'COS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.cos(v);\n        }\n    },\n    'TAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.tan(v);\n        }\n    },\n    'ARCSIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.asin(v);\n        }\n    },\n    'ARCCOS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.acos(v);\n        }\n    },\n    'ARCTAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.atan(v);\n        }\n    },\n    'ATAN2': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (y, x) {\n            return Math.atan2(y, x);\n        }\n    },\n    '座標角度計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (XY) {\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\n        }\n    },\n    'RAD2DEG': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'DEG2RAD': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    '度変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'ラジアン変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    // @算術関数\n    'SIGN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\n        }\n    },\n    '符号': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        fn: function (v, sys) {\n            return sys.__exec('SIGN', [v]);\n        }\n    },\n    'ABS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    '絶対値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    'EXP': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.exp(a);\n        }\n    },\n    'HYPOT': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    '斜辺': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    'LN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOG': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOGN': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            if (a === 2) {\n                return Math.LOG2E * Math.log(b);\n            }\n            if (a === 10) {\n                return Math.LOG10E * Math.log(b);\n            }\n            return Math.log(b) / Math.log(a);\n        }\n    },\n    'FRAC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '小数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '整数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.trunc(a);\n        }\n    },\n    '乱数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.floor(Math.random() * a);\n        }\n    },\n    '乱数範囲': {\n        type: 'func',\n        josi: [['から'], ['までの', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\n        }\n    },\n    'SQRT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    '平方根': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    // @数値切上切捨丸め\n    'ROUND': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '四捨五入': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '小数点切上': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.ceil(a * base) / base;\n        }\n    },\n    '小数点切下': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.floor(a * base) / base;\n        }\n    },\n    '小数点四捨五入': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.round(a * base) / base;\n        }\n    },\n    'CEIL': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    '切上': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    'FLOOR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    },\n    '切捨': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    }\n};\n","export const options = {\n    delimiter: ',',\n    eol: '\\r\\n'\n};\nexport function resetEnv() {\n    options.delimiter = ',';\n    options.eol = '\\r\\n';\n}\nexport function parse(txt, delimiter = undefined) {\n    // delimiter\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    // check txt\n    txt = '' + txt + '\\n';\n    // convert CRLF to LF, and CR to LF\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\n    // trim right\n    txt = txt.replace(/\\s+$/, '') + '\\n';\n    // set pattern\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\n    const reToDelim = new RegExp(patToDelim);\n    // if value is number then convert to float\n    const convType = function (v) {\n        if (typeof (v) === 'string') {\n            if (v.search(/^[0-9.]+$/) >= 0) {\n                v = parseFloat(v); // convert number\n            }\n        }\n        return v;\n    };\n    // parse txt\n    const res = [];\n    let cells = [];\n    let c = '';\n    while (txt !== '') {\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\n        c = txt.charAt(0);\n        if (c === delimiter) {\n            txt = txt.substring(1);\n            cells.push('');\n            continue;\n        }\n        // second check LF (#7)\n        if (c === '\\n') {\n            cells.push('');\n            res.push(cells);\n            cells = [];\n            txt = txt.substring(1);\n            continue;\n        }\n        // trim white space\n        txt = txt.replace(/^\\s+/, '');\n        c = txt.charAt(0);\n        // no data\n        if (c === delimiter) {\n            console.log('delimiter');\n            cells.push('');\n            txt = txt.substring(delimiter.length);\n            continue;\n        }\n        // written using the dialect of Excel\n        if (c === '=' && txt.charAt(1) === '\"') {\n            txt = txt.substring(1);\n            continue;\n        }\n        // number or simple string\n        if (c !== '\"') { // number or simple str\n            const m = reToDelim.exec(txt);\n            if (!m) {\n                cells.push(convType(txt));\n                res.push(cells);\n                cells = [];\n                break;\n            }\n            if (m[2] === '\\n') {\n                cells.push(convType(m[1]));\n                res.push(cells);\n                cells = [];\n            }\n            else if (m[2] === delimiter) {\n                cells.push(convType(m[1]));\n            }\n            txt = txt.substring(m[0].length);\n            continue;\n        }\n        // \"\" ... blank data\n        if (txt.substring(0, 2) === '\"\"') {\n            cells.push('');\n            txt = txt.substring(2);\n            continue;\n        }\n        // \"...\"\n        let i = 1;\n        let s = '';\n        while (i < txt.length) {\n            const c1 = txt.charAt(i);\n            const c2 = txt.charAt(i + 1);\n            // console.log(\"@\" + c1 + c2);\n            // 2quote => 1quote char\n            if (c1 === '\"' && c2 === '\"') {\n                i += 2;\n                s += '\"';\n                continue;\n            }\n            if (c1 === '\"') {\n                i++;\n                if (c2 === delimiter) {\n                    i++;\n                    cells.push(convType(s));\n                    s = '';\n                    break;\n                }\n                if (c2 === '\\n') {\n                    i++;\n                    cells.push(convType(s));\n                    res.push(cells);\n                    cells = [];\n                    break;\n                }\n                // if (c2 === \" \" || c2 === \"\\t\") {\n                i++;\n                continue;\n            }\n            s += c1;\n            i++;\n        }\n        txt = txt.substr(i);\n    }\n    if (cells.length > 0)\n        res.push(cells);\n    return res;\n}\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\n    // check arguments\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    if (eol === undefined) {\n        eol = options.eol;\n    }\n    const valueConv = genValueConverter(delimiter);\n    if (ary === undefined)\n        return '';\n    let r = '';\n    for (let i = 0; i < ary.length; i++) {\n        const cells = ary[i];\n        if (cells === undefined) {\n            r += eol;\n            continue;\n        }\n        for (let j = 0; j < cells.length; j++) {\n            cells[j] = valueConv(cells[j]);\n        }\n        r += cells.join(delimiter) + eol;\n    }\n    // replace return code\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\n    return r;\n}\nexport function replaceEolMark(eol) {\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\n    eol = eol.replace(/\\r/g, '[CR]');\n    eol = eol.replace(/\\n/g, '[LF]');\n    return eol;\n}\nfunction genValueConverter(delimiter) {\n    return function (s) {\n        s = '' + s;\n        let fQuot = false;\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf(delimiter) >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf('\"') >= 0) {\n            fQuot = true;\n            s = s.replace(/\"/g, '\"\"');\n        }\n        if (fQuot)\n            s = '\"' + s + '\"';\n        return s;\n    };\n}\n","import { options, parse, stringify } from './nako_csv.mjs';\nconst PluginCSV = {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_csv', // プラグインの名前\n            description: 'CSV関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 基本的に初期化不要\n        }\n    },\n    // @CSV操作\n    'CSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = ',';\n            return parse(str);\n        }\n    },\n    'TSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = '\\t';\n            return parse(str);\n        }\n    },\n    '表CSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = ',';\n            return stringify(a);\n        }\n    },\n    '表TSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = '\\t';\n            return stringify(a);\n        }\n    }\n};\nexport default PluginCSV;\n","export default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_promise', // プラグインの名前\n            description: 'promise関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (sys.__promise == null) {\n                sys.__promise = {\n                    setLastPromise: function (promise) {\n                        sys.__setSysVar('そ', promise);\n                        return promise;\n                    }\n                };\n            }\n        }\n    },\n    // @非同期処理の保証の定数\n    'そ': { type: 'const', value: '' }, // @そ\n    // @非同期処理の保証\n    '動時': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (callback, sys) {\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\n                return callback(resolve, reject);\n            }));\n        },\n        return_none: false\n    },\n    '成功時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__setSysVar('対象', result);\n                return callback(result);\n            }));\n        },\n        return_none: false\n    },\n    '処理時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (cbFunc, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__setSysVar('対象', result);\n                return cbFunc(true, result, sys);\n            }, (reason) => {\n                sys.__setSysVar('対象', reason);\n                return cbFunc(false, reason, sys);\n            }));\n        },\n        return_none: false\n    },\n    '失敗時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.catch((err) => {\n                sys.__setSysVar('対象', err);\n                return callback(err);\n            }));\n        },\n        return_none: false\n    },\n    '終了時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.finally(() => {\n                return callback();\n            }));\n        },\n        return_none: false\n    },\n    '束': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (...args) {\n            const sys = args.pop();\n            return sys.__promise.setLastPromise(Promise.all(args));\n        },\n        return_none: false\n    }\n};\n","/**\n * file: plugin_test.js\n * テスト実行用プラグイン\n */\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_test', // プラグインの名前\n            description: 'テストを提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @テスト\n    'ASSERT等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: true,\n        fn: function (a, b) {\n            if (a !== b) {\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\n            }\n            return true;\n        }\n    },\n    'テスト実行': {\n        type: 'func',\n        josi: [['と'], ['で']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    },\n    'テスト等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    }\n};\n","// parser / lexer\nimport { NakoParser } from './nako_parser3.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NakoPrepare } from './nako_prepare.mjs';\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\nimport { convertDNCL } from './nako_from_dncl.mjs';\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\nimport { NakoLogger } from './nako_logger.mjs';\nimport { NakoGlobal } from './nako_global.mjs';\n// version info\nimport coreVersion from './nako_core_version.mjs';\n// basic plugins\nimport PluginSystem from './plugin_system.mjs';\nimport PluginMath from './plugin_math.mjs';\nimport PluginCSV from './plugin_csv.mjs';\nimport PluginPromise from './plugin_promise.mjs';\nimport PluginTest from './plugin_test.mjs';\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\nconst PLUGIN_MIN_VERSION_INT = 600; // = minor * 100 + patch\n/** コンパイラ実行オプションを生成 */\nexport function newCompilerOptions(initObj = {}) {\n    if (typeof initObj !== 'object') {\n        initObj = {};\n    }\n    initObj.testOnly = initObj.testOnly || false;\n    initObj.resetEnv = initObj.resetEnv || false;\n    initObj.resetAll = initObj.resetAll || false;\n    initObj.preCode = initObj.preCode || '';\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\n    return initObj;\n}\n/** なでしこコンパイラ */\nexport class NakoCompiler {\n    /**\n     * @param {undefined | {'useBasicPlugin':true|false}} options\n     */\n    constructor(options = undefined) {\n        if (options === undefined) {\n            options = { useBasicPlugin: true };\n        }\n        // 環境のリセット\n        this.__varslist = [new Map(), new Map(), new Map()]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\n        this.__locals = new Map(); // ローカル変数\n        this.__self = this;\n        this.__vars = this.__varslist[2]; // alias of __varslist[2]\n        this.__v1 = this.__varslist[1]; // alias of __varslist[1]\n        this.__v0 = this.__varslist[0]; // alias of __varslist[0]\n        // バージョンを設定\n        this.version = coreVersion.version;\n        this.coreVersion = coreVersion.version;\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\n        this.__globalObj = null;\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\n        this.pluginFunclist = {}; // プラグインで定義された関数\n        this.funclist = new Map(); // プラグインで定義された関数 + ユーザーが定義した関数\n        this.moduleExport = new Map();\n        this.pluginfiles = {}; // 取り込んだファイル一覧\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\n        this.nakoFuncList = new Map(); // __v1に配置するJavaScriptのコードで定義された関数\n        this.eventList = []; // 実行前に環境を変更するためのイベント\n        this.codeGenerateor = {}; // コードジェネレータ\n        this.debugOption = { useDebug: false, waitTime: 0 };\n        this.logger = new NakoLogger();\n        this.filename = 'main.nako3';\n        /**\n         * 取り込み文を置換するためのオブジェクト。\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\n         */\n        this.dependencies = {};\n        this.usedFuncs = new Set();\n        this.numFailures = 0;\n        if (options.useBasicPlugin) {\n            this.addBasicPlugins();\n        }\n        // 必要なオブジェクトを覚えておく\n        this.prepare = NakoPrepare.getInstance();\n        this.parser = new NakoParser(this.logger);\n        this.lexer = new NakoLexer(this.logger);\n        // 関数一覧を設定\n        this.lexer.setFuncList(this.funclist);\n        this.lexer.setModuleExport(this.moduleExport);\n    }\n    /** モジュール(名前空間)の一覧を取得する */\n    getModList() {\n        return this.lexer.modList;\n    }\n    getLogger() {\n        return this.logger;\n    }\n    getNakoFuncList() {\n        return this.nakoFuncList;\n    }\n    getNakoFunc(name) {\n        return this.nakoFuncList.get(name);\n    }\n    getPluginfiles() {\n        return this.pluginfiles;\n    }\n    /**\n     * 基本的なプラグインを追加する\n     */\n    addBasicPlugins() {\n        this.addPlugin(PluginSystem);\n        this.addPlugin(PluginMath);\n        this.addPlugin(PluginPromise);\n        this.addPlugin(PluginTest);\n        this.addPlugin(PluginCSV);\n    }\n    /**\n     * loggerを新しいインスタンスで置き換える。\n     */\n    replaceLogger() {\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\n        return logger;\n    }\n    /**\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\n     * @param {Token[]} tokens rawtokenizeの出力\n     */\n    static listRequireStatements(tokens) {\n        const requireStatements = [];\n        for (let i = 0; i + 2 < tokens.length; i++) {\n            // not (string|string_ex) '取り込み'\n            if (!(tokens[i].type === 'not' &&\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\n                tokens[i + 2].value === '取込')) {\n                continue;\n            }\n            // 取り込むライブラリ\n            let filename = tokens[i + 1].value + '';\n            // 『取り込む』文で「拡張プラグイン:」機構を追加する #139\n            // (ex) !『貯蔵庫:ojyo-sama.nako3』を取り込む → https://n3s.nadesi.com/plain/ojyo-sama.nako3\n            if (filename.startsWith('貯蔵庫:')) {\n                filename = `https://n3s.nadesi.com/plain/${filename.substring(4)}`;\n            }\n            // (ex) !『拡張プラグイン:music.js@1.0.2』を取り込む → https://cdn.jsdelivr.net/npm/nadesiko3-music@1.0.2/nadesiko3-music.js\n            if (filename.startsWith('拡張プラグイン:')) {\n                const name = filename.split(':')[1];\n                const m = name.match(/^([a-zA-Z0-9_-]+)\\.(js|mjs|nako3)(@[0-9.]+)?$/);\n                if (m) {\n                    let basename = m[1];\n                    const ext = m[2];\n                    const version = m[3] || '@latest';\n                    if (ext === 'js' || ext === 'mjs') {\n                        // JSプラグイン\n                        if (!basename.startsWith('nadesiko3-')) {\n                            basename = `nadesiko3-${basename}`;\n                        }\n                        filename = `https://cdn.jsdelivr.net/npm/${basename}${version}/${basename}.${ext}`;\n                    }\n                    else {\n                        // なでしこ3プラグイン\n                        filename = `https://n3s.nadesi.com/plain/${basename}.${ext}`;\n                    }\n                }\n                else {\n                    throw new NakoImportError('『取込』の指定エラー。『拡張プラグイン:(ファイル名).(js|nako3)(@ver)』の書式で指定してください。', tokens[i].file, tokens[i].line);\n                }\n            }\n            // push\n            requireStatements.push({\n                ...tokens[i],\n                start: i,\n                end: i + 3,\n                value: filename,\n                firstToken: tokens[i],\n                lastToken: tokens[i + 2]\n            });\n            i += 2;\n        }\n        return requireStatements;\n    }\n    /**\n     * プログラムが依存するファイルを再帰的に取得する。\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\n     *\n     * @param {string} code\n     * @param {string} filename\n     * @param {string} preCode\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\n     *  - readNako3は指定されたファイルの中身を返す関数。\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\n     * @returns {Promise<unknown> | void}\n     * @protected\n     */\n    _loadDependencies(code, filename, preCode, tools) {\n        const dependencies = {};\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\n        /**\n         * @param {any} item\n         * @param {any} tasks\n         */\n        const loadJS = (item, tasks) => {\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\n            const obj = tools.readJs(item.filePath, item.firstToken);\n            tasks.push(obj.task.then((res) => {\n                const pluginFuncs = res();\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\n                dependencies[item.filePath].funclist = pluginFuncs;\n                dependencies[item.filePath].moduleExport = {};\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\n            }));\n        };\n        const loadNako3 = (item, tasks) => {\n            // nako3ならファイルを読んでdependenciesに保存する。\n            const content = tools.readNako3(item.filePath, item.firstToken);\n            const registerFile = (code) => {\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\n                // 「プラグイン名設定」を行う (#956)\n                const modName = NakoLexer.filenameToModName(item.filePath);\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\n                const tokens = this.rawtokenize(code, 0, item.filePath);\n                dependencies[item.filePath].tokens = tokens;\n                const funclist = new Map();\n                const moduleexport = new Map();\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist, moduleexport);\n                dependencies[item.filePath].funclist = funclist;\n                dependencies[item.filePath].moduleExport = moduleexport;\n                // 再帰\n                return loadRec(code, item.filePath, '');\n            };\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\n            tasks.push(content.task.then((res) => registerFile(res)));\n        };\n        const loadRec = (code, filename, preCode) => {\n            const tasks = [];\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\n            // パスを解決する\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\n            // 取り込み開始\n            for (const item of tagsResolvePath) {\n                // 2回目以降の読み込み\n                // eslint-disable-next-line no-prototype-builtins\n                if (dependencies.hasOwnProperty(item.filePath)) {\n                    dependencies[item.filePath].alias.add(item.value);\n                    continue;\n                }\n                // 初回の読み込み\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {}, moduleExport: {} };\n                if (item.type === 'js' || item.type === 'mjs') {\n                    loadJS(item, tasks);\n                }\n                else if (item.type === 'nako3') {\n                    loadNako3(item, tasks);\n                }\n                else {\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\n                }\n            }\n            if (tasks.length > 0) {\n                return Promise.all(tasks);\n            }\n            return undefined;\n        };\n        try {\n            const result = loadRec(code, filename, preCode);\n            // 非同期な場合のエラーハンドリング\n            if (result !== undefined) {\n                result.catch((err) => {\n                    // 読み込みに失敗したら処理を中断する\n                    this.logger.error(err.msg);\n                    this.numFailures++;\n                });\n            }\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\n            // loadDependencies() が並列実行されるときに正しく動作しない。\n            this.dependencies = dependencies;\n            return result;\n        }\n        catch (err) {\n            // 同期処理では素直に例外を投げる\n            this.logger.error('' + err);\n            throw err;\n        }\n    }\n    /**\n     * コードを単語に分割する\n     * @param code なでしこのプログラム\n     * @param line なでしこのプログラムの行番号\n     * @param filename\n     * @param preCode\n     * @returns トークンのリスト\n     */\n    rawtokenize(code, line, filename, preCode = '') {\n        if (!code.startsWith(preCode)) {\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\n        }\n        // 名前空間のモジュールリストに自身を追加\n        const modName = NakoLexer.filenameToModName(filename);\n        const modList = this.getModList();\n        if (modList.indexOf(modName) < 0) {\n            modList.unshift(modName);\n        }\n        // 全角半角の統一処理\n        const preprocessed = this.prepare.convert(code);\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        // トークン分割\n        let tokens;\n        try {\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\n        }\n        catch (err) {\n            if (!(err instanceof InternalLexerError)) {\n                throw err;\n            }\n            // エラー位置をソースコード上の位置に変換して返す\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\n        }\n        // DNCL ver2 (core #41)\n        tokens = convertDNCL2(tokens);\n        // DNCL ver1 (#1140)\n        tokens = convertDNCL(tokens);\n        // インデント構文を変換 #596\n        tokens = convertIndentSyntax(tokens);\n        // インラインインデントを変換 #1215\n        tokens = convertInlineIndent(tokens);\n        // ソースコード上の位置に変換\n        tokens = tokens.map((token) => {\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\n            let line = token.line;\n            let column = 0;\n            if (token.type === 'eol' && dest.endOffset !== null) {\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\n                // 行末のeolのlineは次の行の行数を表す必要がある。\n                const out = offsetToLineColumn.map(dest.endOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            else if (dest.startOffset !== null) {\n                const out = offsetToLineColumn.map(dest.startOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            return {\n                ...token,\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\n                rawJosi: token.josi\n            };\n        });\n        return tokens;\n    }\n    /**\n     * 単語の属性を構文解析に先立ち補正する\n     * @param {Token[]} tokens トークンのリスト\n     * @param {boolean} isFirst 最初の呼び出しかどうか\n     * @param {string} filename\n     * @returns コード (なでしこ)\n     */\n    converttoken(tokens, isFirst, filename) {\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\n        return tok;\n    }\n    /**\n     * 環境のリセット\n     * {NakoResetOption|undefined}\n     */\n    reset(options = undefined) {\n        if (!options || options.needToClearPlugin) {\n            // (メモ) #1245\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\n            this.clearPlugins();\n        }\n        /**\n         * なでしこのローカル変数をスタックで管理\n         * __varslist[0] プラグイン領域\n         * __varslist[1] なでしこグローバル領域\n         * __varslist[2] 最初のローカル変数 ( == __vars }\n         */\n        this.__varslist = [this.__varslist[0], new Map(), new Map()];\n        this.__v0 = this.__varslist[0]; // alias of __varslist[0]\n        this.__v1 = this.__varslist[1]; // alias of __varslist[1]\n        this.__vars = this.__varslist[2]; // alias of __varslist[2]\n        this.__locals = new Map();\n        // プラグイン命令以外を削除する。\n        this.funclist = new Map();\n        for (const name of this.__v0.keys()) {\n            const original = this.pluginFunclist[name]; // record\n            if (!original) {\n                continue;\n            }\n            this.funclist.set(name, JSON.parse(JSON.stringify(original)));\n        }\n        this.lexer.setFuncList(this.funclist);\n        this.moduleExport = new Map();\n        this.lexer.setModuleExport(this.moduleExport);\n        this.logger.clear();\n    }\n    /**\n     * typeがcodeのトークンを単語に分割するための処理\n     * @param {string} code\n     * @param {number} line\n     * @param {string} filename\n     * @param {number | null} startOffset\n     * @returns\n     * @private\n     */\n    lexCodeToken(code, line, filename, startOffset) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, line, filename, '');\n        // 文字列内位置からファイル内位置へ変換\n        if (startOffset === null) {\n            for (const token of tokens) {\n                token.startOffset = undefined;\n                token.endOffset = undefined;\n            }\n        }\n        else {\n            for (const token of tokens) {\n                if (token.startOffset !== undefined) {\n                    token.startOffset += startOffset;\n                }\n                if (token.endOffset !== undefined) {\n                    token.endOffset += startOffset;\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, false, filename);\n        return { tokens, commentTokens };\n    }\n    /**\n     * 再帰的にrequire文を置換する。\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\n     * @param {TokenWithSourceMap[]} tokens\n     * @param {Set<string>} [includeGuard]\n     * @returns {Token[]} 削除された取り込み文のトークン\n     */\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\n            if (includeGuard.has(r.value)) {\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\n                continue;\n            }\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath === undefined) {\n                if (!r.firstToken) {\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\n                }\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\n            }\n            this.dependencies[filePath].addPluginFile();\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\n            includeGuard.add(r.value);\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\n        }\n        return deletedTokens;\n    }\n    /**\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\n     * @param {TokenWithSourceMap[]} tokens\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\n     */\n    removeRequireStatements(tokens) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath !== undefined) {\n                this.dependencies[filePath].addPluginFile();\n            }\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\n        }\n        return deletedTokens;\n    }\n    /** 字句解析を行う */\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\n        // require文を再帰的に置換する\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\n        for (const t of requireStatementTokens) {\n            if (t.type === 'word' || t.type === 'not') {\n                t.type = 'require';\n            }\n        }\n        if (requireStatementTokens.length >= 3) {\n            // modList を更新\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\n                let modName = requireStatementTokens[i + 1].value;\n                modName = NakoLexer.filenameToModName(modName);\n                if (this.lexer.modList.indexOf(modName) < 0) {\n                    this.lexer.modList.push(modName);\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, true, filename);\n        for (let i = 0; i < tokens.length; i++) {\n            if (tokens[i] && tokens[i].type === 'code') {\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\n                commentTokens.push(...children.commentTokens);\n                tokens.splice(i, 1, ...children.tokens);\n                i--;\n            }\n        }\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\n    }\n    /**\n     * コードをパースしてASTにする\n     */\n    parse(code, filename, preCode = '') {\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setFuncList(this.funclist);\n        this.parser.setFuncList(this.funclist);\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setModuleExport(this.moduleExport);\n        this.parser.setModuleExport(this.moduleExport);\n        // 字句解析を行う\n        const lexerOutput = this.lex(code, filename, preCode);\n        // 構文木を作成\n        let ast;\n        try {\n            this.parser.genMode = 'sync'; // set default\n            ast = this.parser.parse(lexerOutput.tokens, filename);\n        }\n        catch (err) {\n            if (typeof err.startOffset !== 'number') {\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\n            }\n            throw err;\n        }\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\n        return ast;\n    }\n    getUsedFuncs(ast) {\n        const queue = [ast];\n        this.usedFuncs = new Set();\n        while (queue.length > 0) {\n            const ast_ = queue.pop();\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\n            }\n        }\n        return this.deleteUnNakoFuncs();\n    }\n    getUsedAndDefFuncs(astQueue, blockQueue) {\n        while (blockQueue.length > 0) {\n            const block = blockQueue.pop();\n            if (block !== null && block !== undefined) {\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\n            }\n        }\n    }\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\n            this.usedFuncs.add(block.name);\n        }\n        astQueue.push([block, block.block]);\n        // eslint-disable-next-line prefer-spread\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\n    }\n    deleteUnNakoFuncs() {\n        for (const func of this.usedFuncs) {\n            if (!this.commandlist.has(func)) {\n                this.usedFuncs.delete(func);\n            }\n        }\n        return this.usedFuncs;\n    }\n    /**\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\n     * @param code コード (なでしこ)\n     * @param filename\n     * @param isTest テストかどうか\n     * @param preCode\n     */\n    compile(code, filename, isTest = false, preCode = '') {\n        const opt = newCompilerOptions();\n        opt.testOnly = isTest;\n        opt.preCode = preCode;\n        const res = this.compileFromCode(code, filename, opt);\n        return res.runtimeEnv;\n    }\n    /** parse & generate  */\n    compileFromCode(code, filename, options = undefined) {\n        if (filename === '') {\n            filename = 'main.nako3';\n        }\n        if (options === undefined) {\n            options = newCompilerOptions();\n        }\n        try {\n            if (options.resetEnv) {\n                this.reset();\n            }\n            if (options.resetAll) {\n                this.clearPlugins();\n            }\n            // onBeforeParse\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\n            // parse\n            const ast = this.parse(code, filename, options.preCode);\n            // onBeforeGenerate\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\n            // generate\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\n            // onAfterGenerate\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\n            return outCode;\n        }\n        catch (e) {\n            this.logger.error(e);\n            throw e;\n        }\n    }\n    /**\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\n     * @param ast\n     * @param opt テストかどうか\n     */\n    generateCode(ast, opt) {\n        // Select Code Generator #637\n        const mode = ast.genMode || '';\n        // normal mode\n        if (mode === 'sync') {\n            return generateJS(this, ast, opt);\n        }\n        // 廃止の非同期モード #1164\n        if (mode === '非同期モード') {\n            this.logger.error('『!非同期モード』は廃止されました。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\n        }\n        // その他のコードジェネレータ(PHPなど)\n        const genObj = this.codeGenerateor[mode];\n        if (!genObj) {\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\n        }\n        return genObj.generate(this, ast, opt.isTest);\n    }\n    /** コードジェネレータを追加する */\n    addCodeGenerator(mode, obj) {\n        this.codeGenerateor[mode] = obj;\n    }\n    /** (非推奨)\n     * @param code\n     * @param fname\n     * @param isReset\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    async _run(code, fname, isReset, isTest, preCode = '') {\n        const opts = newCompilerOptions({\n            resetEnv: isReset,\n            resetAll: isReset,\n            testOnly: isTest,\n            preCode\n        });\n        return this._runEx(code, fname, opts);\n    }\n    /** 各プラグインをリセットする */\n    clearPlugins() {\n        // 他に実行している「なでしこ」があればクリアする\n        this.__globals.forEach((sys) => {\n            // core #56\n            sys.__setSysVar('__forceClose', true);\n            sys.reset();\n        });\n        this.__globals = []; // clear\n    }\n    /**\n     * 環境を指定してJavaScriptのコードを実行する\n     * @param code JavaScriptのコード\n     * @param nakoGlobal 実行環境\n     */\n    evalJS(code, nakoGlobal) {\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\n        this.__globalObj.lastJSCode = code;\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\n        try {\n            // eslint-disable-next-line no-new-func\n            const f = new Function(nakoGlobal.lastJSCode);\n            f.apply(nakoGlobal);\n        }\n        catch (err) {\n            // なでしこコードのエラーは抑止してログにのみ記録\n            nakoGlobal.numFailures++;\n            this.getLogger().error(err);\n            throw err;\n        }\n        // 実行後に終了イベントを実行(finish)\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\n    }\n    /**\n     * 同期的になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runSync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    /**\n     * 非同期になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     */\n    async runAsync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const compiledCode = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, compiledCode.gen, filename);\n        // 実行\n        this.evalJS(compiledCode.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    getNakoGlobal(options, gen, filename) {\n        // オプションを参照\n        let g = options.nakoGlobal;\n        if (!g) {\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\n                g = this.__globals[this.__globals.length - 1];\n            }\n            else {\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\n            }\n            // 名前空間を設定\n            g.__varslist[0].set('名前空間', NakoLexer.filenameToModName(filename));\n        }\n        if (this.__globals.indexOf(g) < 0) {\n            this.__globals.push(g);\n        }\n        return g;\n    }\n    /**\n     * イベントを登録する\n     * @param eventName イベント名\n     * @param callback コールバック関数\n     */\n    addListener(eventName, callback) {\n        this.eventList.push({ eventName, callback });\n    }\n    /**\n     * テストを実行する\n     * @param code\n     * @param fname\n     * @param preCode\n     * @param testOnly\n     */\n    test(code, fname, preCode = '', testOnly = false) {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        options.testOnly = testOnly;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\n     * @param code\n     * @param fname\n     * @param [preCode]\n     * @deprecated 代わりに runAsync を使ってください。\n     */\n    run(code, fname = 'main.nako3', preCode = '') {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * JavaScriptのみで動くコードを取得する場合\n     * @param code\n     * @param filename\n     * @param opt? オプション\n     */\n    compileStandalone(code, filename, options) {\n        if (options === undefined) {\n            options = new NakoGenOptions();\n        }\n        const ast = this.parse(code, filename);\n        return this.generateCode(ast, options).standalone;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     * @param fpath ファイルパス\n     */\n    addPlugin(po, persistent = true, fpath = '') {\n        // __v0を取得\n        const __v0 = this.__varslist[0];\n        // プラグインのメタ情報をチェック (#1034) (#1647)\n        let __pluginInfo = __v0.get('__pluginInfo');\n        if (!__pluginInfo) {\n            __pluginInfo = {};\n            __v0.set('__pluginInfo', __pluginInfo);\n        }\n        // バージョンチェック\n        let intVersion = 0;\n        let pluginName = 'unknown';\n        let metaValue = { pluginName: 'unknown', nakoVersionResult: true, nakoVersion: '0.0.0', path: '' };\n        if (po.meta) {\n            if (po.meta.value && typeof (po.meta) === 'object') {\n                const meta = po.meta;\n                metaValue = meta.value || { pluginName: 'unknown', nakoVersion: '0.0.0' };\n                pluginName = metaValue.pluginName || 'unknown';\n                // version check\n                const nakoVersion = (metaValue.nakoVersion || '0.0.0') + '.0.0';\n                const versions = nakoVersion.split('.').map((v) => parseInt(v));\n                intVersion = versions[1] * 100 + versions[2];\n                // fpath\n                metaValue.path = fpath;\n            }\n        }\n        // unknown の場合は、関数名からプラグイン名を自動生成する\n        if (pluginName === 'unknown') {\n            pluginName = Object.keys(po).join('-');\n        }\n        // プラグイン名の重複を確認\n        if (__pluginInfo[pluginName] !== undefined) {\n            // プラグイン名が重複した場合はプラグインとして登録しない\n            this.logger.info(`プラグイン名『${pluginName}』が重複しているため、プラグインとして登録しませんでした。`);\n            return;\n        }\n        // Windowsのパスやファイル名に使えない文字列があると、JSファイル書き出しでエラーになるので置換\n        const removeInvalidFilenameChars = (str) => {\n            return str.replace(/[^a-zA-z0-9\\-_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF\\u3400-\\u4DBF\\uF900-\\uFAFF]/g, '_');\n        };\n        pluginName = removeInvalidFilenameChars(pluginName);\n        // プラグイン情報を記録\n        __pluginInfo[pluginName] = metaValue;\n        // バージョンチェック\n        if (PLUGIN_MIN_VERSION_INT > intVersion) {\n            const keyStr = Object.keys(po).join(',');\n            if (pluginName === 'unknown') {\n                pluginName = keyStr.substring(0, 30) + '...';\n            }\n            const errMsg = `なでしこプラグイン『${pluginName}』は古い形式なので正しく動作しない可能性があります。` +\n                `(ランタイムの要求: ${PLUGIN_MIN_VERSION_INT}/プラグイン: ${intVersion})`;\n            console.warn(errMsg, 'see', 'https://github.com/kujirahand/nadesiko3/issues/1647');\n            this.logger.warn(errMsg);\n            metaValue.nakoVersionResult = false;\n        }\n        // 初期化とクリアを変換する\n        this.__module[pluginName] = po;\n        this.pluginfiles[pluginName] = '*';\n        // `初期化`と`クリア`をチェック\n        if (typeof (po['初期化']) === 'object') {\n            const def = po['初期化'];\n            delete po['初期化'];\n            const initKey = `!${pluginName}:初期化`;\n            po[initKey] = def;\n        }\n        // プラグインの値を、なでしこシステム変数(Map)にコピー\n        for (const key in po) {\n            const v = po[key];\n            this.funclist.set(key, v);\n            if (persistent) {\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\n            }\n            if (v.type === 'func') {\n                __v0.set(key, v.fn);\n                if (v.asyncFn) { // asyncFn を正しく実行するために pure に変更する (core#142)\n                    v.pure = true;\n                }\n            }\n            else if (v.type === 'const' || v.type === 'var') {\n                __v0.set(key, v.value);\n                // メタ情報としての const | var は現在利用していない\n                // meta[key] = { readonly: v.type === 'const' }\n            }\n            else {\n                console.error('[プラグイン追加エラー]', v);\n                throw new Error('プラグインの追加でエラー。');\n            }\n            // コマンドを登録するか?\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\n                continue;\n            }\n            this.commandlist.add(key);\n        }\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param objName オブジェクト名 (今後プラグイン名は、meta.value.pluginNameに指定する)\n     * @param po 関数リスト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginObject(objName, po, persistent = true) {\n        // metaプロパティがなければ互換性のため適当に追加\n        if (po.meta === undefined) {\n            po.meta = { type: 'const', value: { pluginName: objName, nakoVersion: '0.0.0' } };\n        }\n        this.addPlugin(po, persistent);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名(ただし、v3.6.3以降のバージョンでは無効になる)\n     * @param fpath ファイルパス\n     * @param po 登録するオブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     * @deprecated 利用は非推奨\n     */\n    addPluginFile(_objName, fpath, po, persistent = true) {\n        this.addPluginFromFile(fpath, po, persistent);\n    }\n    /**\n   * プラグイン・ファイルを追加(Node.js向け)\n   * @param fpath ファイルパス\n   * @param po 登録するオブジェクト\n   * @param persistent falseのとき、次以降の実行では使えない\n   */\n    addPluginFromFile(fpath, po, persistent = true) {\n        this.addPlugin(po, persistent, fpath);\n    }\n    /**\n     * 関数を追加する\n     * @param {string} key 関数名\n     * @param {string[][]} josi 助詞\n     * @param {Function} fn 関数\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\n     */\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        const funcObj = { josi, fn, type: 'func', return_none: returnNone, asyncFn, pure: true };\n        this.funclist.set(key, funcObj);\n        this.pluginFunclist[key] = cloneAsJSON(funcObj);\n        this.__varslist[0].set(key, fn);\n    }\n    /** (非推奨) 互換性のため ... 関数を追加する\n     * @deprecated 代わりにaddFuncを使ってください\n    */\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.funclist.get(key);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\n        // コンパイル\n        opts.preCode = preCode;\n        if (nakoGlobal) {\n            opts.nakoGlobal = nakoGlobal;\n        }\n        return this.runSync(code, filename, opts);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @param code\n     * @param fname\n     * @param opts\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runEx(code, fname, opts, preCode = '') {\n        return this._runEx(code, fname, opts, preCode);\n    }\n    /**\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\n     * @param code\n     * @param fname\n     * @param [preCode]\n     */\n    async runReset(code, fname = 'main.nako3', preCode = '') {\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\n        return this._runEx(code, fname, opts, preCode);\n    }\n}\n","// @ts-nocheck\nexport default {\n    // @色定数\n    '水色': { type: 'const', value: 'aqua' }, // @みずいろ\n    '紫色': { type: 'const', value: 'fuchsia' }, // @むらさきいろ\n    '緑色': { type: 'const', value: 'lime' }, // @みどりいろ\n    '青色': { type: 'const', value: 'blue' }, // @あおいろ\n    '赤色': { type: 'const', value: 'red' }, // @あかいろ\n    '黄色': { type: 'const', value: 'yellow' }, // @きいろ\n    '黒色': { type: 'const', value: 'black' }, // @くろいろ\n    '白色': { type: 'const', value: 'white' }, // @しろいろ\n    '茶色': { type: 'const', value: 'maroon' }, // @ちゃいろ\n    '灰色': { type: 'const', value: 'gray' }, // @はいいろ\n    '金色': { type: 'const', value: 'gold' }, // @きんいろ\n    '黄金色': { type: 'const', value: 'gold' }, // @こがねいろ\n    '銀色': { type: 'const', value: 'silver' }, // @ぎんいろ\n    '白金色': { type: 'const', value: 'silver' }, // @しろがねいろ\n    'オリーブ色': { type: 'const', value: 'olive' }, // @おりーぶいろ\n    'ベージュ色': { type: 'const', value: 'beige' }, // @べーじゅいろ\n    'アリスブルー色': { type: 'const', value: 'aliceblue' }, // @ありすぶるーいろ\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['と'], ['で', 'の']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        },\n        return_none: false\n    },\n    '色混': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            if (!a) {\n                throw new Error('『色混ぜる』の引数には配列を指定します');\n            }\n            if (a.length < 3) {\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\n            }\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\n        },\n        return_none: false\n    }\n};\n","export default {\n    // @HTTPとAJAX\n    'HTTP取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信時': {\n        type: 'func',\n        josi: [['で'], ['から', 'を']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'AJAX送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\n                if (res.status !== 200) {\n                    return sys.__getSysVar('AJAX:ONERROR')(res.status);\n                }\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text, sys);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        },\n        return_none: true\n    },\n    'AJAXオプション': { type: 'const', value: '' }, // @AJAXおぷしょん\n    'AJAXオプション設定': {\n        type: 'func',\n        josi: [['に', 'へ', 'と']],\n        pure: true,\n        fn: function (option, sys) {\n            sys.__setSysVar('AJAXオプション', option);\n        },\n        return_none: true\n    },\n    'AJAXオプションPOST設定': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            sys.__setSysVar('AJAXオプション', options);\n        },\n        return_none: true\n    },\n    'AJAX失敗時': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('AJAX:ONERROR', callback);\n        }\n    },\n    'AJAXテキスト取得': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.text();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAX_JSON取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.json();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAXバイナリ取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const bin = await res.blob();\n            return bin;\n        },\n        return_none: false\n    },\n    // @GETとPOST\n    'GET送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'POST送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        }\n    },\n    'POSTフォーム送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        }\n    },\n    'POSTデータ生成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (params, sys) {\n            const flist = [];\n            for (const key in params) {\n                const v = params[key];\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\n                flist.push(kv);\n            }\n            return flist.join('&');\n        }\n    },\n    'POST送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: bodyData\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    'POSTフォーム送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const fd = new FormData();\n                for (const key in params) {\n                    fd.set(key, params[key]);\n                }\n                const options = {\n                    method: 'POST',\n                    body: fd\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    // @HTTPとAJAX(保証)\n    'AJAX保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'HTTP保障取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            return sys.__exec('AJAX保障送信', [url, sys]);\n        },\n        return_none: false\n    },\n    'POST保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'POSTフォーム保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'AJAX内容取得': {\n        type: 'func',\n        josi: [['から'], ['で']],\n        pure: true,\n        fn: function (res, type, sys) {\n            type = type.toString().toUpperCase();\n            if (type === 'TEXT' || type === 'テキスト') {\n                return res.text();\n            }\n            else if (type === 'JSON') {\n                return res.json();\n            }\n            else if (type === 'BLOB') {\n                return res.blob();\n            }\n            else if (type === 'ARRAY' || type === '配列') {\n                return res.arrayBuffer();\n            }\n            else if (type === 'BODY' || type === '本体') {\n                return res.body;\n            }\n            return res.body();\n        },\n        return_none: false\n    },\n    // @Blob\n    'BLOB作成': {\n        type: 'func',\n        josi: [['を', 'から'], ['で']],\n        pure: true,\n        fn: function (data, options) {\n            if (!(data instanceof Array)) {\n                data = [data];\n            }\n            return new Blob(data, options);\n        }\n    },\n    // @HTTPとAJAX(非推奨)\n    'AJAX逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve();\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'HTTP逐次取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.__exec('AJAX逐次送信', [url, sys]);\n        },\n        return_none: true\n    },\n    'POST逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'POSTフォーム逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\n// plugin_browser_in_worker.js\nimport PartBrowserColor from './plugin_browser_color.mjs';\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\nimport PartBrowserHtml from './plugin_browser_html.mjs';\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\nconst BrowserParts = [\n    PartBrowserColor,\n    PartBrowserAjax,\n    PartBrowserHtml,\n    PartBrowserWebsocket\n];\nconst PluginBrowserInWorker = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            /* eslint no-global-assign: 0 */\n            if (typeof self === 'undefined') {\n                self = {};\n            }\n            if (typeof navigator === 'undefined') {\n                navigator = {};\n            }\n            // 定数を初期化\n            sys.__setSysVar('AJAX:ONERROR', (err) => { console.log(err); });\n            // オブジェクトを初期化\n            sys.__v0.SELF = self;\n            sys.__v0.NAVIGATOR = navigator;\n        }\n    }\n};\nBrowserParts.forEach((a) => {\n    const b = {};\n    Object.assign(b, a);\n    if (typeof b['初期化'] !== 'undefined') {\n        delete b['初期化'];\n    }\n    Object.assign(PluginBrowserInWorker, b);\n});\nexport default PluginBrowserInWorker;\n","// @ts-nocheck\nexport default {\n    // @HTML操作\n    'HTML変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (text) {\n            return String(text)\n                .replace(/&/g, '&amp;')\n                .replace(/>/g, '&gt;')\n                .replace(/</g, '&lt;');\n        }\n    },\n    // @クリップボード\n    'クリップボード設定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (text) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                await navigator.clipboard.writeText(text);\n                return;\n            }\n            // Clipboard APIをサポートしていない場合\n            const tmp = document.createElement('div');\n            const pre = document.createElement('pre');\n            pre.style.webkitUserSelect = 'auto';\n            pre.style.userSelect = 'auto';\n            tmp.appendChild(pre).textContent = text;\n            // 画面外へ表示する\n            tmp.style.position = 'fixed';\n            tmp.right = '200%';\n            document.body.appendChild(tmp);\n            document.getSelection().selectAllChildren(tmp);\n            document.execCommand('copy');\n            document.body.removeChild(tmp);\n        },\n        return_none: true\n    },\n    'クリップボード取得時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (f, sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                if (typeof (f) === 'string') {\n                    f = sys.__findFunc(f, 'クリップボード取得時');\n                }\n                const pm = navigator.clipboard.readText();\n                pm.then(text => {\n                    sys.__setSysVar('対象', text);\n                    f(sys);\n                });\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    },\n    'クリップボード取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: async function (sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                const result = await navigator.clipboard.readText();\n                return result;\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @WebSocket\n    'WS接続完了時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONOPEN', callback);\n        },\n        return_none: true\n    },\n    'WS受信時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONMESSAGE', callback);\n        },\n        return_none: true\n    },\n    'WSエラー発生時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONERROR', callback);\n        },\n        return_none: true\n    },\n    'WS接続': {\n        type: 'func',\n        josi: [['に', 'へ', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = new WebSocket(s);\n            ws.onopen = () => {\n                const cbOpen = sys.__getSysVar('WS:ONOPEN');\n                if (cbOpen) {\n                    cbOpen(sys);\n                }\n            };\n            ws.onerror = (err) => {\n                const cbError = sys.__getSysVar('WS:ONERROR');\n                if (cbError) {\n                    cbError(err, sys);\n                }\n                console.log('WSエラー', err);\n            };\n            ws.onmessage = (e) => {\n                sys.__setSysVar('対象', e.data);\n                const cbMsg = sys.__getSysVar('WS:ONMESSAGE');\n                if (cbMsg) {\n                    cbMsg(sys);\n                }\n            };\n            sys.__setSysVar('WS:SOCKET', ws);\n            return ws;\n        }\n    },\n    'WS送信': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = sys.__getSysVar('WS:SOCKET');\n            ws.send(s);\n        }\n    },\n    'WS切断': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const ws = sys.__getSysVar('WS:SOCKET');\n            ws.close();\n        }\n    }\n};\n","// @ts-nocheck\nconst PluginWorker = {\n  '初期化': {\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      sys.__v0.SELF = self || {}\n      sys.__v0['依頼主'] = self || {}\n    }\n  },\n\n  '対象イベント': { type: 'const', value: '' }, // @たいしょういべんと\n  '受信データ': { type: 'const', value: '' }, // @たいしょういべんと\n  'SELF': { type: 'const', value: '' }, // @SELF\n  '依頼主': { type: 'const', value: '' }, // @SELF\n\n  'NAKOワーカーデータ受信時': { // @無名関数Fでなでしこv3エンジンに対してワーカーメッセージによりデータを受信した時に実行するイベントを設定。『受信データ』に受信したデータM。『対象イベント』にイベント引数。 // @NAKOわーかーでーたじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      sys.__setSysVar('PluginWorker:ondata', (data, e) => {\n        sys.__v0['受信データ'] = data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      })\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ受信時': { // @無名関数Fでselfに対してメッセージを受信した時に実行するイベントを設定。『受信データ』に受信したデータ。『対象イベント』にイベント引数。 // @わーかーめっせーじじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      self.onmessage = (e) => {\n        sys.__v0['受信データ'] = e.data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      }\n    },\n    return_none: true\n  },\n  'NAKOワーカーデータ送信': { // @起動もとに固有の形式でデータを送信する。 // @NAKOわーかーでーたへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'data',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ送信': { // @起動もとにメッセージを送信する。 // @わーかーめっせーじへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (msg, sys) {\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '表示': { // @メインスレッドに固有の形式で表示データを送信する。 // @ひょうじ\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'output',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '終了': { // @ワーカーを終了する。 // @しゅうりょう\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      close()\n    },\n    return_none: true\n  }\n}\n\n// module.exports = PluginWorker\nexport default PluginWorker\n\n\n","// nadesiko for web browser worker\n// wwnako3.js\nimport { NakoCompiler } from '../core/src/nako3.mjs'\nimport PluginBrowserInWorker from './plugin_browser_in_worker.mjs'\nimport PluginWorker from './plugin_worker.mjs'\n\nclass WebWorkerNakoCompiler extends NakoCompiler {\n  constructor () {\n    super()\n    this.__setSysVar('ナデシコ種類', 'wwnako3')\n    this.__setSysVar('PluginWorker:ondata', (data, event) => {\n      throw new Error('『NAKOワーカーデータ受信時』が呼ばれていません。')\n    })\n  }\n}\n\n// ブラウザワーカーなら navigator.nako3 になでしこを登録\n// eslint-disable-next-line no-undef\nif (typeof (navigator) === 'object' && self && self instanceof WorkerGlobalScope) {\n  /** @type {WebWorkerNakoCompiler} */\n  const nako3Compiler = navigator.nako3 = new WebWorkerNakoCompiler()\n  /** @type {WebWorkerNakoCompiler | import('./nako_global')} */\n  let nako3Global = nako3Compiler\n  \n  nako3Compiler.addPluginObject('PluginBrowserInWorker', PluginBrowserInWorker)\n  nako3Compiler.addPluginObject('PluginWorker', PluginWorker)\n\n  nako3Compiler.getLogger().addListener('error', function (obj) {\n    self.postMessage({\n      type: 'error',\n      data: obj\n    })\n  }, false)\n\n  self.onmessage = (event) => {\n    const data = event.data || { type: '', data: '' }\n    const type = data.type || ''\n    const value = data.data || ''\n    switch (type) {\n      case 'reset':\n        nako3Compiler.reset()\n        break\n      case 'close':\n        self.close()\n        break\n      case 'run':\n        nako3Global = nako3Global.runEx(value, '_webworker.nako3', { resetEnv: false, resetLog: false })\n        break\n      case 'trans':\n        value.forEach(o => {\n          if (o.type === 'func') {\n            nako3Compiler.nakoFuncList[o.name] = o.content.meta\n            nako3Compiler.funclist[o.name] = o.content.func\n            nako3Compiler.__varslist[1].set(o.name, () => {})\n          } else if (o.type === 'val') {\n            nako3Compiler.__varslist[2].set(o.name, o.content)\n          } else if (o.type === 'env') {\n            if (o.name === 'modlist') {\n              for (const modInfo of o.content) {\n                if (nako3Compiler.lexer.modList.indexOf(modInfo.name) < 0) {\n                  nako3Compiler.lexer.modList.push(modInfo.name)\n                }\n                if (modInfo.export != null && !nako3Compiler.moduleExport.hasOwnProperty(modInfo.name)) {\n                  nako3Compiler.moduleExport[modInfo.name] = modInfo.export\n                }\n              }\n            } else if (o.name === 'constPools') {\n              nako3Compiler.constPools = o.content\n            } else if (o.name === 'constPoolsTemplate') {\n              nako3Compiler.constPoolsTemplate = o.content\n            } else if (o.name === 'chk') {\n              nako3Compiler.chk = o.content\n            }\n          }\n        })\n        break\n      case 'data':\n        if (nako3Global.__getSysVar('PluginWorker:ondata')) {\n          nako3Global.__getSysVar('PluginWorker:ondata').apply(nako3Global, [value, event])\n        }\n        break\n    }\n  }\n}\n\n"],"names":["NakoError","Error","constructor","tag","msg","file","undefined","line","positionJa","super","replace","this","name","type","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","fromNode","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","josiList","tararebaJosiList","removeJosiList","tararebaMap","forEach","josi","push","removeJosiMap","josiListMono","jo","sort","a","b","length","pat","join","josiRE","RegExp","reserved","Map","value","pluginName","description","pluginVersion","nakoRuntime","nakoVersion","pure","fn","sys","system","isDebug","__setSysVar","__v0","set","__getSysVar","defaultValue","v","get","__setSore","__vars","__getSore","tags","version","coreVersion","__namespaceList","__findVar","nameStr","def","localVar","__locals","indexOf","i","scopeValue","__varslist","modList","__modList","__modName","modName","gname","__findFunc","parentFunc","f","__exec","func","params","f0","apply","__timeout","__interval","z2","__zero2","s","substring","__zero","keta","zeroS","__formatDate","t","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","Date","parseFloat","split","__printPool","__parseFloatOrBigint","chk","constId","cp","constPools","msgNo","msgArgs","fileNo","constPoolsTemplate","arg","fileStr","logger","warn","Math","PI","NaN","Infinity","send","return_none","isVariableJosi","pop","console","log","Array","aa","pow","JSON","stringify","reduce","p","c","__reisetu","src","eval","args","asyncFn","async","Function","obj","m","code","__genMode","__self","runEx","resetEnv","resetLog","outLog","trace","resetAll","out","tf","performance","now","t1","String","isNaN","Number","toString","n","r","g","v2","from","fromCodePoint","fromCharCode","prototype","codePointAt","charCodeAt","ss","str","res","cnt","toUpperCase","toLowerCase","chr","zen1","han1","zen2","han2","c2","n2","charAt","map","j","result","parse","re","sa","splice","global","z","Object","keys","ufunc","reverse","floor","random","tmp","old","concat","x","y","max","min","nn","e","no","ns","ms","filter","row","col","cols","rows","k","idx","nr","slice","sum","test","key","body","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","getTime","d","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","op","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","startsWith","fname","pluginfiles","__module","then","mod","assign","catch","w","default","text","encodeURIComponent","decodeURIComponent","url","kv","window","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","call","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","prop","hasOwnProperty","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","indent","column","NakoParserBase","stackList","tokens","usedFuncs","Set","stack","index","namespaceStack","funclist","funcLevel","usedAsyncFn","localvars","genMode","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","isReadingCalc","isExportDefault","isExportStack","moduleExport","init","reset","setFuncList","setModuleExport","moduleexport","popStack","saveStack","loadStack","findVar","scope","info","gnameSelf","exportDefault","funcObj","isExport","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","node","opts","debugMode","depth","typeName","debug","subNode","node2","operator","table","eq","not","gt","lt","and","or","left","right","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","ii","trimOkurigana","beginTag","closeTag","NakoLexer","listMap","exportObj","replaceTokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","isFuncPointer","readArgs","funcPointer","varnames","funcPointers","already","prevToken","nextToken","kai","rtype","isMumei","defToken","funcName","funcNameToken","attr","has","dispName","metaValue","meta","splitStringEx","list","arr","end","comment","modSelf","space","gname1","gfo1","gfo","fo","tokenType","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","tokensToTypeStr","sep","NakoParser","startParser","ySentenceList","blocks","ySentence","block","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yDNCLMode","ySetGenMode","yExportDefault","yTikuji","yASyncMode","word","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","cond","yIfThen","ver","mode","yBlock","yDefFuncReadArgs","yDef","funcAttribute","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","falseBlock","tanbun","expr","false_block","optionNode","val","options","includes","tikuji","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","shift","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","flagDown","loopDirection","kurikaesu","incdec","vInc","vTo","vFrom","to","inc","yReturn","yForEach","target","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","cases","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","checkInit","getVarName","ySadameru","sadameru","attrNode","createVar","vartype","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","nullCount","valueCount","popArg","varname","add","funcNode","isexport","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","vtype","wordVar","yJSONArray","names","createVarList","checkArrayIndex","checkArrayReverse","ary","tmpReadingCalc","fCalc","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","ff","yValueWord","funcPtr","yValueFuncPointer","yValueWordGetIndex","ast","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","errBlock","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","getInstance","_instance","convertTable","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","substr","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","loopId","numAsyncFn","flagLoop","lastLineNo","varslistSet","setVarslistSet","varsSet","isFunction","readonly","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","isValidIdentifier","varslist","vlist","delete","convLineno","forceUpdate","incLine","lineNoStr","lineDataJSON","debugCode","useDebug","messageAction","waitTime","varname_get","varname_set","jsvalue","getFuncName","name2","convPrint","convRequire","moduleName","getDefFuncCode","opt","getModList","nakoFuncCode","trim","cleanGeneratedCode","isAsync","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","getFunc","registerFunction","funcList","registFunc","blockList","initialNames","convGen","_convGen","isExpression","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","isTop","js","js_set","genVar","position","lno","getLogger","pv","getNakoFunc","commentSrc","addConstPool","getConstPoolsTemplateId","id","args2","argNo","poolIndex","cmd","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","values","errMsg","callCheckFunc","oldUsedAsyncFn","nameFuncValue","codeInit","codeArray","arrayDefCode","nodeName","tmpVar","convGenLoop","tmpflag","idLoop","varI","loopVarSetter","varName","kara","made","varFrom","varTo","sorePrefex","loopKeyVar","loopValueVar","loopDataVar","valueVar","keyVar","keySetter","targetData","varCount","codeCount","codeCounterSetter","prev","varId","cvalue","cblock","convFuncGetArgsCalcType","_funcName","_func","nodeArgs","sore","argCode","getPluginList","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","localVars","repeat","noCheckFuncs","argsCode","argsA","argStr","funcCall","sorePostfix","OP_TBL","noteq","gteq","lteq","shift_l","shift_r","shift_r0","incValue","varGetter","varSetter","varInitter","rf","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","replaceTemplateCode","template","spc","lines","lastTokenInfo","newToken","templateToken","isSkipWord","joinTokenLines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","findIndex","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","fromS","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","clear","addListener","callback","removeListener","l","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","gen","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","clearName","pname","destroy","major","minor","patch","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","parser","lexer","replaceLogger","listRequireStatements","requireStatements","basename","ext","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","resolvePath","alias","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","find","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","compile","compileFromCode","runtimeEnv","eventName","outCode","generateCode","jsInit","funcID","asyncMain","syncMain","codeImportFiles","importNames","initCode","standalone","generateJS","genObj","generate","addCodeGenerator","_run","isReset","_runEx","evalJS","getNakoGlobal","compiledCode","run","compileStandalone","persistent","fpath","__pluginInfo","intVersion","nakoVersionResult","versions","keyStr","_objName","addPluginFromFile","returnNone","setFunc","runReset","method","fetch","status","option","headers","json","blob","bodyData","fd","FormData","flist","arrayBuffer","Blob","resolveCount","PluginBrowserInWorker","self","navigator","SELF","NAVIGATOR","clipboard","writeText","document","createElement","pre","webkitUserSelect","userSelect","appendChild","textContent","getSelection","selectAllChildren","execCommand","removeChild","readText","ws","WebSocket","onopen","cbOpen","onerror","cbError","onmessage","cbMsg","close","postMessage","WebWorkerNakoCompiler","event","WorkerGlobalScope","nako3Compiler","nako3","nako3Global","modInfo","export"],"sourceRoot":""}