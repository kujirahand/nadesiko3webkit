{"version":3,"file":"wnako3webworker.js","mappings":"qEAOA,IANoB,CAChBA,QAAS,SACTC,MAAO,EACPC,MAAO,EACPC,MAAO,G,uMCFJ,MAAMC,UAAkBC,MAC3BC,YAAYC,EAAKC,EAAKC,EAAkBC,GAEpC,MAAMC,EAAa,GAAGF,GAAQ,UAAcG,IAATF,EAAqB,GAAK,IAAIA,EAAO,WAIxEG,MAAM,IAAIN,KAAOI,IAFjBH,EAAMA,EAAIM,QAAQ,iBAAkB,WAIpCC,KAAKC,KAAO,YACZD,KAAKE,KAAO,YACZF,KAAKR,IAAM,IAAMA,EAAM,IACvBQ,KAAKJ,WAAaA,EAClBI,KAAKP,IAAMA,CACf,EAEG,MAAMU,UAAwBd,EAMjCE,YAAYE,EAAKE,EAAMD,GACnBI,MAAM,WAAYL,EAAKC,EAAMC,GAC7BK,KAAKE,KAAO,kBACZF,KAAKL,KAAOA,EACZK,KAAKN,KAAOA,CAChB,EAGG,MAAMU,UAA2Bf,EAQpCE,YAAYE,EAAKY,EAA6BC,EAA2BX,EAAMD,GAC3EI,MAAM,iBAAkBL,EAAKC,EAAMC,GACnCK,KAAKE,KAAO,qBACZF,KAAKK,4BAA8BA,EACnCL,KAAKM,0BAA4BA,EACjCN,KAAKL,KAAOA,EACZK,KAAKN,KAAOA,CAChB,EAEG,MAAMa,UAAuBlB,EAQhCE,YAAYE,EAAKe,EAAaC,EAAWd,EAAMD,GAC3CI,MAAM,UAAWL,EAAKC,EAAMC,GAC5BK,KAAKE,KAAO,iBACZF,KAAKQ,YAAcA,EACnBR,KAAKS,UAAYA,EACjBT,KAAKL,KAAOA,EACZK,KAAKN,KAAOA,CAChB,EAEG,MAAMgB,UAAwBrB,EAQjCE,YAAYE,EAAKE,EAAMa,EAAaC,EAAWf,GAC3CI,MAAM,QAASL,EAAKC,EAAMC,GAC1BK,KAAKE,KAAO,kBACZF,KAAKN,KAAOA,EACZM,KAAKL,KAAOA,EACZK,KAAKQ,YAAcA,EACnBR,KAAKS,UAAYA,CACrB,CAMAE,gBAAgBlB,EAAKmB,EAAOC,GACxB,IAAKD,EACD,OAAO,IAAIF,EAAgBjB,OAAKI,OAAWA,OAAWA,OAAWA,GAErE,MAAMW,EAA2C,iBAAtBI,EAAMJ,YAA2BI,EAAMJ,iBAAcX,EAC1EY,EAAaI,GAAkC,iBAAnBA,EAAKJ,UACjCI,EAAKJ,UACuB,iBAApBG,EAAMH,UAAyBG,EAAMH,eAAYZ,EAC/D,OAAO,IAAIa,EAAgBjB,EAAKmB,EAAMjB,KAAMa,EAAaC,EAAWG,EAAMlB,KAC9E,EAEG,MAAMoB,UAAyBzB,EAKlCE,YAAYwB,EAAOC,GACf,IAqBIrB,EACAD,EACAuB,EAvBAxB,EAAM,UACW,iBAAVsB,EACPtB,EAAMsB,EAGFA,aAAiBD,GAGZC,aAAiB1B,EAFtBI,EAAMsB,EAAMtB,IAKPsB,aAAiBzB,QAElBG,EADe,UAAfsB,EAAMd,KACAc,EAAMG,QAGN,GAAGH,EAAMd,SAASc,EAAMG,gBAQ3BrB,IAAXmB,GACArB,OAAOE,EACPH,OAAOG,IAGFoB,EAAU,kBAAkBE,KAAKH,KACtCrB,EAAOyB,SAASH,EAAQ,IACxBvB,EAAOuB,EAAQ,KAGVA,EAAU,aAAaE,KAAKH,KACjCrB,EAAOyB,SAASH,EAAQ,IACxBvB,EAAO,eAGPC,EAAO,EACPD,EAAOsB,GAEXlB,MAAM,SAAUL,EAAKC,EAAMC,GAC3BK,KAAKE,KAAO,mBACZF,KAAKgB,OAASA,EACdhB,KAAKL,KAAOA,EACZK,KAAKN,KAAOA,CAChB,EAEG,MAAM2B,UAAwBhC,EAMjCE,YAAYE,EAAKC,EAAMC,GACnBG,MAAM,UAAWL,EAAKC,EAAMC,GAC5BK,KAAKN,KAAOA,EACZM,KAAKL,KAAOA,CAChB,E,sHC1JG,MAAM2B,EACT/B,YAAYgC,GAAS,EAAOC,EAAc,GAAIC,EAAiB,GAAIC,EAAU,IACzE1B,KAAKuB,OAASA,EACdvB,KAAKyB,eAAiBA,EACtBzB,KAAK2B,QAAUD,EACf1B,KAAKwB,YAAc,CAAC,oBAAqB,kBAAmB,iBAAkB,qBAAsB,mBACpG,IAAK,MAAMI,KAASJ,EAChBxB,KAAKwB,YAAYK,KAAKD,EAE9B,EAKG,MAAME,EAITvC,YAAYwC,GAKR/B,KAAKgC,aAAe,IAAKD,EAAIE,mBAI7BjC,KAAKkC,cAAgB,CAAC,EAKtBlC,KAAKmC,YAAc,IAAIC,IAIvBpC,KAAKqC,OAAS,EAIdrC,KAAKsC,WAAa,EAIlBtC,KAAKuC,aAAc,EAEnBvC,KAAKwC,UAAW,EAChBxC,KAAKyC,OAASV,EAEd/B,KAAK0C,QAAU,OAEf1C,KAAK2C,WAAa,KAElB3C,KAAK4C,YAAcb,EAAIc,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAIc,OAAOC,KAAKJ,IAAKK,SAAU,IAAIhB,QAEjHpC,KAAKqD,QAAU,CAAEL,YAAY,EAAOC,MAAO,IAAIb,IAAOgB,SAAU,IAAIhB,KACpEpC,KAAK4C,YAAY,GAAK5C,KAAKqD,QAG3BrD,KAAKsD,UAAY,CACbC,YAAa,EACbC,oBAAqB,EACrBC,YAAa,EACbC,UAAW,GAIf1D,KAAK2D,mBAAqB,CACtBC,aAAc,EACdC,eAAgB,EAChBC,mBAAoB,EACpBC,QAAS,GAKb/D,KAAKgE,kBAAmB,EACxBhE,KAAKiE,WAAa,GAElBjE,KAAKkE,4BAA8B,EACnClE,KAAKmE,6BAA+B,EACpCnE,KAAKoE,+BAAiC,EACtCpE,KAAKqE,gCAAkC,EACvCrE,KAAKsE,YAAcvC,EAAIuC,WAC3B,CACA3D,yBAAyBV,GAIrB,MAAO,m+VAAm+VsE,KAAKtE,EACn/V,CAIAuE,WAAWC,EAAMC,GAAc,EAAOC,EAAU,GAE5C,GAAI3E,KAAKsD,UAAUC,YAAc,EAC7B,MAAO,GAEX,MAAMvC,EAASyD,EAAK9E,KAAOgF,EAC3B,IAAIC,EAWJ,GATIA,EADqB,iBAAdH,EAAK9E,KACA,UAEc,iBAAd8E,EAAK/E,KACL,IAAIsB,IAGJ,IAAIA,KAAUyD,EAAK/E,QAG9BgF,EAAa,CACd,GAAIE,IAAc5E,KAAK2C,WACnB,MAAO,GAEX3C,KAAK2C,WAAaiC,CACtB,CAEA,MAAMC,EAAeC,KAAKC,UAAUH,GAEpC,IAAII,EAAY,GAqBhB,OApBIhF,KAAKsE,YAAYW,WAEbjF,KAAKsE,YAAYY,gBACjBF,GAAa,+BAA+BhF,KAAKsE,YAAYY,wBAChDL,QAGb7D,GAAU,IACNhB,KAAKsE,YAAYa,SAAW,IAC5BH,GAAa,oBAAoBhF,KAAKsE,YAAYa,qBAGtDnF,KAAKsC,YAAc,EACnBtC,KAAKuC,aAAc,EACnByC,GAAa,iCAAiChE,eAGlDgE,GAAa,kCAGV,aAAaH,KAAkBG,CAC1C,CAKAI,QAAQnF,GACJ,OAAgC,IAA5BD,KAAK4C,YAAYyC,OAEV,iBAAoBP,KAAKC,UAAU9E,MAItC6B,EAAQwD,kBAAkBrF,GACnBA,EAGA,UAAU6E,KAAKC,UAAU9E,KAG5C,CAKAU,mBAAmBV,GACf,GAAIA,EAAKsF,QAAQ,OAAS,EAAG,CACzB,MAAMC,EAAIvF,EAAKwF,MAAM,MAGrB,MAAO,GAFOD,EAAE,OACF1D,EAAQ4D,YAAYF,EAAE,KAExC,CACA,IAAIG,EAAQ1F,EAAKF,QAAQ,UAAW,IAIpC,MAHc,KAAV4F,IACAA,EAAQ1F,GAEL0F,CACX,CAEAhF,iBAAiB8D,GACb,MAAO,WAAWA,KACtB,CAEAmB,YAAYnB,GACR,MAAMoB,EAAapB,EAAKqB,MACxB,OAAO9F,KAAKwE,WAAWC,GAAM,GACzB,aAAaoB,kBAA2BA,QAChD,CAOAE,eAAehE,EAAKiE,GAChB,IAAIC,EAAO,GAEXA,GAAQ,kCAAkCnB,KAAKC,UAAUhD,EAAI9C,eAC7DgH,GAAQ,yBACRA,GAAQ,wBACRA,GAAQ,wCACRA,GAAQ,oCACRA,GAAQ,iDACRA,GAAQ,iDACRA,GAAQ,qDACRA,GAAQ,sCAAsCnB,KAAKC,UAAUhD,EAAImE,kBACjED,GAAQ,mBACRA,GAAQ,6BACRA,GAAQ,mBAAmBjG,KAAKsE,YAAYW,cAE5CgB,GAAQ,qBAAuBnB,KAAKC,UAAU/E,KAAKiE,YAAc,MAEjE,IAAIkC,EAAe,GACnB,IAAK,MAAMC,KAAOpG,KAAKgC,aAAc,CACjC,MAAMqE,EAAIrG,KAAKgC,aAAaoE,GAAKE,GAEjCH,GACI,qBAAqBC,cAFTpG,KAAKgC,aAAaoE,GAAKG,QAAU,OAAS,iCAG/BH,OAASC,2BACVD,OAC9B,CAKA,GAJqB,KAAjBD,IACAF,GAAQ,uBAA2BE,GAGnCH,EAAIzE,OAAQ,CACZ,IAAIiF,EAAW,wBACf,IAAK,MAAMJ,KAAOpG,KAAKkC,cAAe,CAElCsE,GAAY,GADFxG,KAAKkC,cAAckE,GAAKE,QAEtC,CACiB,KAAbE,IACAP,GAAQ,wBACRA,GAAQO,EAAW,KAE3B,CACA,OAAOP,CACX,CAKAQ,UAAUC,GACN,OAAO1G,KAAKyC,OAAOgE,UAAUC,EACjC,CAMAC,gBAAgB1G,EAAMyG,GAClB1G,KAAKyC,OAAOkE,gBAAgB1G,EAAMyG,EACtC,CAOAE,cAAcC,EAASC,EAAMJ,GACzB1G,KAAKyC,OAAOmE,cAAcC,EAASC,EAAMJ,EAC7C,CAOAK,QAAQX,EAAKY,EAAMV,GACftG,KAAKyC,OAAOsE,QAAQX,EAAKY,EAAMV,EACnC,CAMAW,QAAQb,GACJ,OAAOpG,KAAKyC,OAAOwE,QAAQb,EAC/B,CAIAc,iBAAiBC,GACb,GAAiB,UAAbA,EAAIjH,KACJ,MAAM,cAAyB,kCAAmCiH,GAGtE,MAAMC,EAAW,GAEXC,EAAc5C,IAChB,IAAKA,EAAK6C,MACN,OAEJ,MAAMC,EAAa9C,EAAK6C,iBAAiBE,MAAS/C,EAAK6C,MAAQ,CAAC7C,EAAK6C,OACrE,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAUlC,OAAQoC,IAAK,CACvC,MAAMC,EAAIH,EAAUE,GACpB,GAAe,aAAXC,EAAExH,KAAqB,CACvB,IAAKwH,EAAEzH,KACH,MAAM,IAAIX,MAAM,qCAEpB,MAAMW,EAAOyH,EAAEzH,KAAK6F,MACpB9F,KAAKmC,YAAYwF,IAAI1H,GAErBD,KAAKyC,OAAOI,WAAW,GAAG5C,GAAQ,WAAc,EAChDD,KAAK4C,YAAY,GAAGK,MAAM0E,IAAI1H,GAC9B,MAAM2H,EAAQF,EAAM,KAAEE,KACtB5H,KAAKgC,aAAa/B,GAAQ,CACtB+G,KAAMY,EAAKZ,KAEXV,GAAI,OACJpG,KAAM,OACNqG,QAASmB,EAAEnB,SAEfa,EAASvF,KAAK,CAAE5B,OAAMwE,KAAMiD,GAEhC,MAEK,GAAe,eAAXA,EAAExH,KAAuB,CAC9B,IAAKwH,EAAEJ,MACH,SAEiB,UAAjBI,EAAEJ,MAAMpH,KACRmH,EAAWK,EAAEJ,OAGbD,EAAWK,EAEnB,MACK,GAAe,wBAAXA,EAAExH,KAAgC,CACvC,IAAKwH,EAAEJ,MACH,SAEiB,UAAjBI,EAAEJ,MAAMpH,KACRmH,EAAWK,EAAEJ,OAGbD,EAAWK,EAEnB,CACJ,GAGJL,EAAWF,GAEX,MAAMU,EAAe,IAAIzF,IACU,IAA/BpC,KAAKsD,UAAUG,aACfoE,EAAaF,IAAI,MAErB3H,KAAKqD,QAAU,CAAEL,YAAY,EAAOC,MAAO4E,EAAczE,SAAU,IAAIhB,KACvEpC,KAAK4C,YAAc5C,KAAKyC,OAAOI,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAIc,OAAOC,KAAKJ,IAAKK,SAAU,IAAIhB,QACzHpC,KAAK4C,YAAY,GAAK5C,KAAKqD,OAC/B,CAKAyE,QAAQrD,EAAMuB,GACV,MAAM+B,EAAS/H,KAAKwE,WAAWC,GAAM,GAASzE,KAAKgI,SAASvD,GAAM,GAClE,OAAIuB,EAAIzE,OACG,GAGAwG,CAEf,CAKAC,SAASvD,EAAMwD,GACX,IAAKxD,EACD,MAAO,GAEX,IAAIwB,EAAO,GACX,GAAIxB,aAAgB+C,MAAO,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIhD,EAAKY,OAAQoC,IAAK,CAClC,MAAMS,EAAIzD,EAAKgD,GACfxB,GAAQjG,KAAKgI,SAASE,EAAGD,EAC7B,CACA,OAAOhC,CACX,CACA,GAAa,OAATxB,EACA,MAAO,OAEX,QAAa5E,IAAT4E,EACA,MAAO,YAEX,GAAsB,iBAAX,EACP,MAAO,GAAKA,EAGhB,OAAQA,EAAKvE,MACT,IAAK,MACD,MACJ,IAAK,QACD,IAAKuE,EAAK6C,MACN,OAAOrB,EAGX,MAAMkC,EAAU1D,EAAK6C,iBAAiBE,MAAS/C,EAAK6C,MAAQ,CAAC7C,EAAK6C,OAClE,IAAK,IAAIG,EAAI,EAAGA,EAAIU,EAAO9C,OAAQoC,IAAK,CACpC,MAAMW,EAAID,EAAOV,GACjBxB,GAAQjG,KAAKgI,SAASI,GAAG,EAC7B,CACA,MACJ,IAAK,UACL,IAAK,MACDnC,GAAQjG,KAAKqI,YAAY5D,GACzB,MACJ,IAAK,QACDwB,GAAQjG,KAAKsI,cAAc7D,EAAM,SACjC,MACJ,IAAK,WACDwB,GAAQjG,KAAKsI,cAAc7D,EAAM,YACjC,MACJ,IAAK,MACDwB,GAAQ,qBACR,MACJ,IAAK,SACDA,GAAQxB,EAAKqB,MACb,MACJ,IAAK,SACDG,GAAQjG,KAAKuI,WAAW9D,GACxB,MACJ,IAAK,gBACDwB,GAAQjG,KAAKwI,gBAAgB/D,GAC7B,MACJ,IAAK,oBACDwB,GAAQjG,KAAKyI,oBAAoBhE,GACjC,MACJ,IAAK,MACDwB,GAAQjG,KAAK0I,QAAQjE,GACrB,MACJ,IAAK,MACDwB,GAAQjG,KAAK2I,QAAQlE,GACrB,MACJ,IAAK,OACL,IAAK,WACDwB,GAAQjG,KAAK4I,WAAWnE,GACxB,MACJ,IAAK,KACL,IAAK,OACDwB,GAAQjG,KAAK6I,OAAOpE,GACpB,MACJ,IAAK,SACDwB,GAAQjG,KAAK8I,WAAWrE,GACxB,MACJ,IAAK,MACDwB,GAAQ,KAAOjG,KAAKgI,SAASvD,EAAKqB,OAAO,GAAQ,SACjD,MACJ,IAAK,OACL,IAAK,eACL,IAAK,YACDG,GAAQjG,KAAK+I,aAAatE,EAAMwD,GAChC,MACJ,IAAK,KACDhC,GAAQjG,KAAKgJ,OAAOvE,GACpB,MACJ,IAAK,SACDwB,GAAQjG,KAAKiJ,WAAWxE,GACxB,MACJ,IAAK,MACDwB,GAAQjG,KAAKkJ,QAAQzE,GACrB,MACJ,IAAK,UACDwB,GAAQjG,KAAKmJ,YAAY1E,GACzB,MACJ,IAAK,eACDwB,GAAQjG,KAAKoJ,gBAAgB3E,GAC7B,MACJ,IAAK,aACDwB,GAAQjG,KAAKqJ,cAAc5E,EAAMwD,GACjC,MACJ,IAAK,sBACDhC,GAAQjG,KAAKsJ,uBAAuB7E,EAAMwD,GAC1C,MACJ,IAAK,QACDhC,GAAQjG,KAAKuJ,UAAU9E,GACvB,MACJ,IAAK,YACDwB,GAAQjG,KAAKwJ,cAAc/E,GAC3B,MACJ,IAAK,SACDwB,GAAQjG,KAAKyJ,WAAWhF,GACxB,MACJ,IAAK,YACDwB,GAAQjG,KAAK0J,aAAajF,GAC1B,MACJ,IAAK,OACDwB,GAAQjG,KAAK2J,aAAalF,GAC1B,MACJ,IAAK,aACDwB,GAAQjG,KAAK4J,cAAcnF,GAC3B,MACJ,IAAK,WACDwB,GAAQjG,KAAK6J,YAAYpF,GACzB,MACJ,IAAK,WACDwB,GAAQjG,KAAK8J,YAAYrF,GACzB,MACJ,IAAK,OACDwB,GAASxB,EAAU,MAAI,OAAS,QAChC,MACJ,IAAK,OACDwB,GAAQ,OACR,MACJ,IAAK,WACDA,GAAQjG,KAAK+J,YAAYtF,GACzB,MACJ,IAAK,WACDwB,GAAQjG,KAAKgK,YAAYvF,GACzB,MACJ,IAAK,SACDwB,GAAQjG,KAAKiK,WAAWxF,GACxB,MACJ,IAAK,aACDwB,GAAQjG,KAAKkK,cAAczF,GAC3B,MACJ,IAAK,UACDwB,GAAQjG,KAAK4F,YAAYnB,GACzB,MACJ,QACI,MAAM,IAAInF,MAAM,8BAAgCmF,EAAKvE,MAE7D,OAAO+F,CACX,CAEAkE,QAAQlK,GAEJ,GAAID,KAAK4C,YAAYyC,OAAS,GAAKrF,KAAKqD,QAAQJ,MAAMmH,IAAInK,GACtD,MAAO,CAAEwH,EAAGzH,KAAK4C,YAAYyC,OAAS,EAAGpF,OAAMoK,OAAO,EAAMC,GAAItK,KAAKoF,QAAQnF,IAGjF,IAAK,IAAIwH,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAIzH,KAAK4C,YAAY6E,GAAGxE,MAAMmH,IAAInK,GAG9B,MAAO,CAAEwH,IAAGxH,OAAMoK,OAAO,EAAOC,GAAI,cAAc7C,MAAM3C,KAAKC,UAAU9E,OAG/E,OAAO,IACX,CAMAsK,OAAOtK,EAAMuK,GACT,MAAMC,EAAMzK,KAAKmK,QAAQlK,GACnByK,EAAMF,EAAS7K,KACrB,GAAY,OAAR8K,EAAc,CAKd,GAAa,OAATxK,GAA0B,OAATA,GAA0B,OAATA,GAA0B,SAATA,QAInD,GAAID,KAAKgE,iBAAkB,CAEvB,MAAM2G,EAAW1K,EAAKF,QAAQ,eAAgB,MAC9CC,KAAKyC,OAAOmI,YAAYC,KAAK,MAAMF,gBAAwBH,EAC/D,CAGJ,OADAxK,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GAChBD,KAAKoF,QAAQnF,EACxB,CAGA,GAAU,IAFAwK,EAAIhD,EAED,CACT,MAAMqD,EAAK9K,KAAKyC,OAAOsI,YAAY9K,GACnC,IAAK6K,EACD,MAAO,GAAGL,EAAIH,WAAWI,MAE7B,GAAgB,UAAZI,EAAG5K,MAAgC,QAAZ4K,EAAG5K,KAC1B,OAAOuK,EAAIH,GAEf,GAAgB,SAAZQ,EAAG5K,KAAiB,CACpB,IAAK4K,EAAG9D,MAA2B,IAAnB8D,EAAG9D,KAAK3B,OACpB,MAAO,IAAIoF,EAAIH,QAEnB,MAAM,cAAyB,IAAIrK,mCAAuCuK,EAC9E,CACA,MAAM,cAAyB,IAAIvK,mBAAuBuK,EAC9D,CACA,OAAOC,EAAIH,EACf,CACA1B,WAAWnE,GACP,MAAMxE,EAAOwE,EAAKqB,MAClB,OAAO9F,KAAKuK,OAAOtK,EAAMwE,EAC7B,CACA4D,YAAY5D,GACR,IAAIuG,EAAaC,OAAOxG,EAAKqB,OAC7BkF,EAAaA,EAAWjL,QAAQ,MAAO,KACvC,MAAMiB,EAAShB,KAAKwE,WAAWC,GAAM,GACrC,MAAmB,KAAfuG,GAAgC,KAAXhK,EACd,IAEQ,KAAfgK,EACO,IAAMhK,EAAS,KAEnB,IAAMA,EAAS,KAAOgK,EAAa,IAC9C,CACAf,WAAWxF,GAEP,GAAIzE,KAAKqD,QAAQJ,MAAMmH,IAAI,OACvB,MAAM,cAAyB,6BAA8B3F,GAEjE,MAAMiG,EAAM1K,KAAKwE,WAAWC,GAAM,GAClC,IAAIqB,EACJ,GAAIrB,EAAKqB,MACLA,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,OAEjC,IAAmC,IAA/B9F,KAAKsD,UAAUG,YAIpB,OAAOiH,EAAM,UAHb5E,EAAQ9F,KAAKoF,QAAQ,KAIzB,CACA,GAAyC,IAArCpF,KAAKkE,4BACL,OAAOwG,EAAM,UAAU5E,KAEtB,CACD,MAAMoF,EAAYlL,KAAKiE,WAAWoB,OAMlC,OALArF,KAAKiE,WAAWpC,KAAK,CACjBpC,IAAK,2BACLC,KAAM+E,EAAK/E,KACXC,KAAM8E,EAAK9E,OAER+K,EAAM,sBAAsB5E,MAAUoF,MACjD,CACJ,CACA5C,cAAc7D,EAAM0G,GAEhB,IAAKnL,KAAKwC,SAAU,CAChB,MAAM4I,EAAgB,aAARD,EAAsB,MAAQ,MAC5C,MAAM,cAAyB,IAAIC,gCAAoC3G,EAC3E,CACA,OAAOzE,KAAKwE,WAAWC,GAAQ0G,EAAM,GACzC,CACAE,kBAAkB5G,EAAMxE,GAEpB,IAAIqL,EAAkC,GAClCC,EAAgC,GACpC,GAA6C,IAAzCvL,KAAK2D,mBAAmBC,aAAoB,CAC5C,IAAIwC,EAAMnG,EACLmG,SAC8C,IAApCpG,KAAK2D,mBAAmBI,UAC/B/D,KAAK2D,mBAAmBI,QAAU,GAEtC/D,KAAK2D,mBAAmBI,UACxBqC,EAAM,SAASpG,KAAK2D,mBAAmBI,WAE3CuH,EAcI,g3BAAUlF,sBAEdmF,EAAgC,0CACpC,CACA,IAAIC,EAAuB,GAC3B,MACM3D,EAAe,IAAIzF,IACU,IAA/BpC,KAAKsD,UAAUG,aACfoE,EAAaF,IAAI,MAErB3H,KAAKqD,QAAU,CAAEL,YAAY,EAAMC,MAAO4E,EAAczE,SAAU,IAAIhB,KAEtEpC,KAAK4C,YAAYf,KAAK7B,KAAKqD,SAE3BmI,GAAwB,0BAExBA,GAAwB,uBAExB,MAAMC,EAAejE,MAAMkE,KAAK1L,KAAKqD,QAAQJ,MAAM0I,UACnD,IAAI1F,EAAO,GAEX,MAAM2B,EAAS3H,EAAoBwE,EAAKxE,KAAK2H,KAAtBnD,EAAKmD,KAC5B,IAAK,IAAIH,EAAI,EAAGA,EAAIG,EAAKgE,SAASvG,OAAQoC,IAAK,CAC3C,MAAMoE,EAAOjE,EAAKgE,SAASnE,GACkB,IAAzCzH,KAAKqE,gCACL4B,GAAQ,KAAKjG,KAAKoF,QAAQyG,kBAAqBpE,QAG/CxB,GADKhG,EACG,KAAKD,KAAKoF,QAAQyG,iEAAoE5L,SAAYD,KAAKoF,QAAQyG,gCAAmCpH,EAAK/E,cAAc+E,EAAK9E,kCAAkC8H,SAG5M,KAAKzH,KAAKoF,QAAQyG,mEAAsE7L,KAAKoF,QAAQyG,gCAAmCpH,EAAK/E,cAAc+E,EAAK9E,kCAAkC8H,SAE9MzH,KAAKqD,QAAQJ,MAAM0E,IAAIkE,EAC3B,CAEI5L,IACAD,KAAKmC,YAAYwF,IAAI1H,GACrBD,KAAK4C,YAAY,GAAGK,MAAM0E,IAAI1H,QACEJ,IAA5BG,KAAKgC,aAAa/B,KAElBD,KAAKgC,aAAa/B,GAAQ,CACtB+G,KAAMvC,EAAKxE,KAAK2H,KAAKZ,KAErBV,GAAI,OACJpG,KAAM,OACNqG,SAAS,KAKrB,MAAMuF,EAAiB9L,KAAKuC,YAC5BvC,KAAKuC,YAAuBvC,KAAKsE,YAAYW,SAE7CgB,GADcjG,KAAKgI,SAASvD,EAAK6C,OAAO,GAC1B7B,MAAM,MAAM3C,KAAKnD,GAAS,KAAOA,IAAMoM,KAAK,MAAQ,KAE/B,IAA/B/L,KAAKsD,UAAUG,cACfwC,GAAQ,aAAajG,KAAKoF,QAAQ,aAGtCa,GAAQsF,EAEJtL,GAAQD,KAAKuC,cACbvC,KAAKgC,aAAa/B,GAAMsG,SAAU,GAItC,IAAK,MAAMtG,KAAQuH,MAAMkE,KAAK1L,KAAKqD,QAAQJ,MAAM0I,UACxCF,EAAaO,SAAS/L,IACnB6B,EAAQwD,kBAAkBrF,KAC1BuL,GAAwB,SAASvL,QAIV,IAA/BD,KAAKsD,UAAUG,cACX3B,EAAQwD,kBAAkB,MAC1BkG,GAAwB,mBAGxBA,GAAwB,KAAKxL,KAAKoF,QAAQ,eAqBlD,OAdAa,GAHajG,KAAgB,YAlvBV,uBAFL,kBAuvBDsL,EAAkCE,GAD9B,KAAOxL,KAAKwE,WAAWC,GAAM,EAAM,GAAK,MACwBwB,EAjFhE,GAkFjBA,GAvvBc,KAyvBVhG,IACAD,KAAKgC,aAAa/B,GAAMqG,GAAKL,EAC7BjG,KAAKgC,aAAa/B,GAAMsG,QAAUvG,KAAKuC,YACvCqF,EAAKrB,QAAUvG,KAAKuC,aAExBvC,KAAKuC,YAAcuJ,EACnB9L,KAAK4C,YAAYqJ,MACjBjM,KAAKqD,QAAUrD,KAAK4C,YAAY5C,KAAK4C,YAAYyC,OAAS,GACtDpF,IACAD,KAAKyC,OAAOI,WAAW,GAAG5C,GAAQgG,GAE/BA,CACX,CACA8D,YAAYtF,GACR,MAAMxE,EAAOwE,EAAKxE,KAAK6F,MACvB,IAAIG,EAAO,yBAAyBhG,mBAYpC,OATAgG,GAAQ,MADMjG,KAAKgI,SAASvD,EAAK6C,OAAO,WAGxCtH,KAAKkC,cAAcjC,GAAQ,CACvB+G,KAAMvC,EAAKxE,KAAK2H,KAAKZ,KACrBV,GAAIL,EACJ/F,KAAM,aAIH,EACX,CACA8J,YAAYvF,GAKR,IAAKA,EAAKxE,KACN,MAAO,GAEX,MAAMA,EAAO6B,EAAQ4D,YAAYjB,EAAKxE,KAAK6F,OAE3C,OADA9F,KAAKqL,kBAAkB5G,EAAMxE,GACtB,EACX,CACA6J,YAAYrF,GACR,OAAOzE,KAAKqL,kBAAkB5G,EAAM,GACxC,CACAoF,YAAYpF,GAOR,MAAO,IANMA,EAAKqB,MACIhD,KAAKoJ,GAGhB,GAFKlM,KAAKgI,SAASkE,EAAE9F,KAAK,MACrBpG,KAAKgI,SAASkE,EAAEpG,OAAO,OAGjBiG,KAAK,KAAO,GACtC,CACAnC,cAAcnF,GAKV,MAAO,IAJMA,EAAKqB,MACIhD,KAAKoJ,GAChBlM,KAAKgI,SAASkE,GAAG,KAENH,KAAK,KAAO,GACtC,CACApC,aAAalF,GACT,MAAMxE,EAAOD,KAAKgI,SAASvD,EAAKxE,MAAM,GAChCkM,EAAO1H,EAAK2H,MAClB,IAAInG,EAAOhG,EACX,IAAKkM,EACD,OAAOlG,EAEX,IAAK,IAAIwB,EAAI,EAAGA,EAAI0E,EAAK9G,OAAQoC,IAAK,CAElCxB,GAAQ,IADIjG,KAAKgI,SAASmE,EAAK1E,IAAI,GACf,GACxB,CACA,OAAOxB,CACX,CACAyD,aAAajF,GACT,MAAMxE,EAAOD,KAAKgI,SAASvD,EAAKxE,MAAM,GAChCkM,EAAO1H,EAAK2H,OAAS,GAC3B,IAAIC,EAAW,GACXpG,EAAOhG,EACPqM,EAAY,GAEhB,GAAI7H,EAAK8H,UAAW,CAChB,MAAMC,EAAe,kEACrBH,GAAY,oBAAoBpM,0BAA6BA,OAAUuM,yBAAoCvM,WAC3G,IAAK,IAAIwH,EAAI,EAAGA,EAAI0E,EAAK9G,OAAS,EAAGoC,IAAK,CAEtC6E,GAAa,IADDtM,KAAKgI,SAASmE,EAAK1E,IAAI,MAEnC4E,GAAY,YAAY5E,YAAYxH,IAAOqM,0BAAkCrM,IAAOqM,OAAeE,OAEvG,CACAH,GAAY,IAChB,CAEA,IAAK,IAAI5E,EAAI,EAAGA,EAAI0E,EAAK9G,OAAQoC,IAAK,CAElCxB,GAAQ,IADIjG,KAAKgI,SAASmE,EAAK1E,IAAI,GACf,GACxB,CAEA,IAAI3B,EAAQ,KAOZ,GANmC,IAA/B9F,KAAKsD,UAAUG,cACfqC,EAAQ9F,KAAKoF,QAAQ,OAErBX,EAAKqB,QACLA,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBrB,GAEvDwB,GAAQ,MAAQH,EAAQ,MAGxB,OADY9F,KAAKwE,WAAWC,GAAM,GAAS4H,EAAWpG,CAE1D,CACAwG,YAAYhI,GACR,MAAMiI,EAAU1M,KAAKwC,SACrBxC,KAAKwC,UAAW,EAChB,IACI,OAAOxC,KAAKgI,SAASvD,GAAM,EAI/B,CAFA,QACIzE,KAAKwC,SAAWkK,CACpB,CACJ,CACAxD,QAAQzE,GAEJ,IAAIoH,EACJ,GAAkB,OAAdpH,EAAKoH,KAAe,CACpB,MAAMc,EAAUlI,EAAKoH,KAAK/F,MAC1B9F,KAAKqD,QAAQJ,MAAM0E,IAAIgF,GACvBd,EAAO7L,KAAKoF,QAAQuH,EACxB,MAEI3M,KAAKqD,QAAQJ,MAAM0E,IAAI,SACvBkE,EAAO7L,KAAKoF,QAAQ,SAExB,MAAMwH,EAAS5M,KAAKqC,SACdwK,EAAO,UAAUD,IAEjBE,EAAO9M,KAAKgI,SAASvD,EAAKiH,MAAM,GAChCqB,EAAO/M,KAAKgI,SAASvD,EAAKuI,IAAI,GAC9BC,EAAWxI,EAAKwI,SACtB,IAAIC,EAAM,IACNzI,EAAKyI,KAAoB,SAAbzI,EAAKyI,MACjBA,EAAMlN,KAAKgI,SAASvD,EAAKyI,KAAK,IAGlC,MAAM5F,EAAQtH,KAAKyM,YAAYhI,EAAK6C,OAE9B6F,EAAU,aAAaP,IACvBQ,EAAQ,WAAWR,IACzB,IAAIS,EAAa,GACkB,IAA/BrN,KAAKsD,UAAUG,cACf4J,EAAa,GAAGrN,KAAKoF,QAAQ,YAEjC,MAAMa,EAAO,eAAe2G,aACfO,OAAaL,aACbM,OAAWL,WACbI,QAAcC,0BACPP,OAAUM,MAAYN,QAAWO,MAAUP,OAAUK,aAC5DG,IAAaxB,OAAUgB,WACvBvF,oCAGE2F,oBACOJ,OAAUM,MAAYN,QAAWO,MAAUP,OAAUK,eAC5DG,IAAaxB,OAAUgB,aACvBvF,kCAGSsF,OACtB,OAAO5M,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAkD,YAAY1E,GACR,IAAI6I,EACJ,GAAoB,OAAhB7I,EAAK6I,OAAiB,CACtB,GAAmC,IAA/BtN,KAAKsD,UAAUG,YAIf,MAAM,cAAyB,iBAAkBgB,GAHjD6I,EAAStN,KAAKoF,QAAQ,KAK9B,MAEIkI,EAAStN,KAAKgI,SAASvD,EAAK6I,QAAQ,GAGxC,IAAIC,EAAQ,aACR9I,EAAKxE,OACLsN,EAAQvN,KAAKoF,QAAQX,EAAKxE,KAAK6F,OAC/B9F,KAAKqD,QAAQJ,MAAM0E,IAAIlD,EAAKxE,KAAK6F,QAErC,MAAMwB,EAAQtH,KAAKyM,YAAYhI,EAAK6C,OAC9BkG,EAAKxN,KAAKqC,SAEhB,IAAIgL,EAAa,GACkB,IAA/BrN,KAAKsD,UAAUG,cACf4J,EAAa,GAAGrN,KAAKoF,QAAQ,YAEjC,MAAMa,EAAO,sBAAsBuH,KAAMF,uBAClBE,uBAAwBA,6BACnBA,2BAA4BA,cAC7CD,OAAWF,mBAA4BG,YAAaA,kCACpCA,WAChBlG,eAGX,OAAOtH,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAmD,gBAAgB3E,GACZ,MAAM+I,EAAKxN,KAAKqC,SACVyD,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,GAClCwB,EAAQtH,KAAKyM,YAAYhI,EAAK6C,OAEpC,IAAI+F,EAAa,GACkB,IAA/BrN,KAAKsD,UAAUG,cACf4J,EAAa,GAAGrN,KAAKoF,QAAQ,YAEjC,MAAMa,EAAO,oBAAoBuH,OAAQ1H,sBACnB0H,iBAAkBA,qBAAsBA,aAAcA,YACnEH,wBAA+BG,SAC7BlG,EAAQ,QACnB,OAAOtH,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CAKAoD,cAAc5E,EAAMwD,GAChB,IAAKxD,EAAKgJ,QACN,MAAO,GAEX,MAAMC,EAAO,IAAK1N,KAAKsD,WACnBmB,EAAKgJ,QAAQ,UACbzN,KAAKsD,UAAUC,cAEfkB,EAAKgJ,QAAQ,aACbzN,KAAKsD,UAAUE,sBAEfiB,EAAKgJ,QAAQ,UACbzN,KAAKsD,UAAUI,YAEfe,EAAKgJ,QAAQ,SACbzN,KAAKsD,UAAUG,cAEnB,IACI,OAAOzD,KAAKgI,SAASvD,EAAK6C,MAAOW,EAIrC,CAFA,QACIjI,KAAKsD,UAAYoK,CACrB,CACJ,CAKApE,uBAAuB7E,EAAMwD,GACzB,MAAMyF,EAAO,IAAK1N,KAAK2D,oBACvB,IAAKc,EAAKgJ,QACN,MAAO,GAEPhJ,EAAKgJ,QAAQ,UACbzN,KAAK2D,mBAAmBC,eAExBa,EAAKgJ,QAAQ,aACbzN,KAAK2D,mBAAmBG,qBAExBW,EAAKgJ,QAAQ,WACbzN,KAAK2D,mBAAmBE,iBAE5B,IACI,OAAO7D,KAAKgI,SAASvD,EAAK6C,MAAOW,EAIrC,CAFA,QACIjI,KAAK2D,mBAAqB+J,CAC9B,CACJ,CACAnE,UAAU9E,GACN,MAEMwB,EAAO,UAFAjG,KAAKgI,SAASvD,EAAKkJ,MAAM,WACxB3N,KAAKyM,YAAYhI,EAAK6C,cAIpC,OAAOtH,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAuD,cAAc/E,GACV,MACMmJ,EAAQ,UADH5N,KAAKqC,WAEVsL,EAAO3N,KAAKgI,SAASvD,EAAKkJ,MAAM,GAEhC1H,EACF,gBAFUjG,KAAKyM,YAAYhI,EAAK6C,iBAGvBsG,OAAWD,aACXC,wCAEb,OAAO5N,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAwD,WAAWhF,GACP,MAAMqB,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,GAClC+H,EAAQpJ,EAAKoJ,OAAS,GAC5B,IAAIC,EAAO,GACX,IAAK,IAAIrG,EAAI,EAAGA,EAAIoG,EAAMxI,OAAQoC,IAAK,CACnC,MAAMsG,EAASF,EAAMpG,GAAG,GAClBuG,EAAShO,KAAKyM,YAAYoB,EAAMpG,GAAG,IACzC,GAAoB,QAAhBsG,EAAO7N,KACP4N,GAAQ,mBAEP,CAEDA,GAAQ,UADW9N,KAAKgI,SAAS+F,GAAQ,OAE7C,CACAD,GAAQ,OAAOE,gBAEnB,CACA,MAAM/H,EAAO,WAAWH,QACjBgI,SAEP,OAAO9N,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACA+C,OAAOvE,GACH,MAAMwJ,EAAOjO,KAAKgI,SAASvD,EAAKwJ,MAAM,GAChC3G,EAAQtH,KAAKgI,SAASvD,EAAK6C,OAAO,GAClC4G,EAAmC,OAArBzJ,EAAK0J,YACnB,GACA,SAAWnO,KAAKgI,SAASvD,EAAK0J,aAAa,GAAS,OAC1D,OAAOnO,KAAKwE,WAAWC,GAAM,GACzB,OAAOwJ,WAAc3G,OAAa4G,EAAa,KACvD,CACAjF,WAAWxE,GAEP,MAEM2J,EAAU,WAFJpO,KAAKqC,WAGjB,IAAI4D,EAAO,SAASmI,WACpB,MAAMjG,EAAU1D,EAAW,OAAIA,EAAK0D,OAAS,GAC7C,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAO9C,OAAQoC,IAAK,CACpC,MAAMH,EAAQtH,KAAKgI,SAASG,EAAOV,IAAI,GAAO1H,QAAQ,OAAQ,IAAM,KAWpEkG,GATkB,GAAGmI,mIADDpO,KAAKwE,WAAW2D,EAAOV,IAAI,SAMtCH,qFAKb,CACArB,GAAQ,aAAamI,OAErB,IAAIC,EAAY,KAAKD,6CAErB,GAAuB,MAAnB3J,EAAK6J,WAAoB,CAEzBD,GADiBrO,KAAKgI,SAASvD,EAAK6J,YAAY,GAAOvO,QAAQ,OAAQ,IAAM,IAEjF,CAYA,OAXAkG,GAAQ,SAASmI,kCAAwCC,QAEzDpI,GAAQ,gCACRA,GAAQ,SAASmI,6BACjBnI,GAAQ,mCACRA,GAAQ,WAAWmI,4BACnBnI,GAAQ,iBAAiBmI,cACzBnI,GAAQ,eAAemI,eAAqBA,gBAC5CnI,GAAQ,aACRA,GAAQ,OACRA,GAAQ,GAAGmI,iBACJpO,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAsI,wBAAwBC,EAAWC,EAAOhK,GACtC,MAAMiK,EAAO,GACPC,EAAO,CAAC,EACRC,EAAYnK,EAAS,KAAIA,EAAKiK,KAAO,GAC3C,IAAK,IAAIjH,EAAI,EAAGA,EAAImH,EAASvJ,OAAQoC,IAAK,CACtC,MAAMoH,EAAMD,EAASnH,GACX,IAANA,GAAmB,OAARoH,GAA+C,IAA/B7O,KAAKsD,UAAUG,aAC1CiL,EAAK7M,KAAK7B,KAAKoF,QAAQ,OACvBuJ,EAAKG,MAAO,GAGZJ,EAAK7M,KAAK7B,KAAKgI,SAAS6G,GAAK,GAErC,CACA,MAAO,CAACH,EAAMC,EAClB,CACAI,gBACI,MAAMC,EAAI,GACV,IAAK,MAAM/O,KAAQD,KAAKyC,OAAOwM,SAC3BD,EAAEnN,KAAK5B,GAEX,OAAO+O,CACX,CAOAjG,aAAatE,EAAMwD,GACf,MAAMiH,EAAWpN,EAAQ4D,YAAYjB,EAAKxE,MACpCwK,EAAMzK,KAAKmK,QAAQ+E,GACzB,GAAY,OAARzE,EACA,MAAM,cAAyB,MAAMyE,uBAAgClP,KAAK+O,gBAAgBhD,KAAK,MAAQ,IAAKtH,GAGhH,IAAI0K,EACJ,GAAc,IAAV1E,EAAIhD,EAAS,CAEb,GADA0H,EAAOnP,KAAKyC,OAAOwE,QAAQiI,IACtBC,EACD,MAAM,IAAI7P,MAAM,qBAAqB4P,0CAEzC,GAAkB,SAAdC,EAAKjP,KACL,MAAM,cAAyB,IAAIgP,gBAAwBzK,EAEnE,MAEI0K,EAAOnP,KAAKgC,aAAakN,QAEZrP,IAATsP,IACAA,EAAO,CAAEC,aAAa,IAI9B,GAAkB,iBAAd3K,EAAKvE,KACL,OAAOuK,EAAIH,GAIf,MAAM+E,EAAWrP,KAAKuO,wBAAwBW,EAAUC,EAAM1K,GACxDiK,EAAOW,EAAS,GAChBC,EAAWD,EAAS,GAG1B,GADArP,KAAKmC,YAAYwF,IAAIuH,GACJ,WAAbA,EACA,MAAO,iBAAiBR,EAAK,oCAAoCA,EAAK,gCAAgCA,EAAK,QAE1G,GAAiB,aAAbQ,EACL,MAAO,+BAA+BR,EAAK,iBAG/CA,EAAK7M,KAAK,UACV,IAAI0N,EAAU,WACVC,EAAY,GACZC,EAAU,GAQd,GANIhL,EAAKiL,SACLF,GAAa,6BACbC,GAAW,+BAID,IAAVhF,EAAIhD,GAAWzH,KAAK4C,YAAYyC,OAAS,IAAmB,IAAd8J,EAAKQ,MAA8C,IAA7B3P,KAAKsD,UAAUI,UAAiB,CAEpG,MAAMkM,EAAY,GAClB,IAAK,MAAM3P,KAAQuH,MAAMkE,KAAK1L,KAAKqD,QAAQJ,MAAM0I,UACzC7J,EAAQwD,kBAAkBrF,IAC1B2P,EAAU/N,KAAK,CAAEgO,IAAK/K,KAAKC,UAAU9E,GAAOqK,GAAItK,KAAKoF,QAAQnF,KAKrEuP,GAAa,8BAEb,IAAK,MAAMzM,KAAK6M,EACZJ,GAAa,mBAAmBzM,EAAE8M,UAAU9M,EAAEuH,QAKlD,IAAK,MAAMvH,KAAK6M,EACC,OAAT7M,EAAEuH,KACFmF,GAAW,GAAG1M,EAAEuH,wBAAwBvH,EAAE8M,UAGtD,CAEIP,EAASR,OACTU,GAAa,cAEjB,MAAMM,EAAS,CAACC,EAAM7H,KAClB,IAAIH,EAAS,GACb,IAAK,MAAMpI,KAAQoQ,EAAKtK,MAAM,MACb,KAAT9F,IACAoI,GAAU,KAAKiI,OAAO9H,GAAKvI,EAAO,MAG1C,OAAOoI,CAAM,EAGXkI,EAAe,CAAE,QAAU,EAAM,SAAS,GAEhD,IAAIC,EACJ,GAA2C,IAAtClQ,KAAKmE,8BAAgD,IAAVsG,EAAIhD,GAAqD,IAAxCzH,KAAKoE,gCAAkD,IAAVqG,EAAIhD,EAC9GyI,EAAWxB,EAAK3C,KAAK,SAEpB,CACD,MAAMoE,EAAQ,GACdzB,EAAK0B,SAASvB,IACV,GAAY,WAARA,IAA+C,IAA3BoB,EAAaf,GACjCiB,EAAMtO,KAAK,GAAGgN,SAEb,CAED,MAAM3D,EAAYlL,KAAKiE,WAAWoB,OACpB,IAAVoF,EAAIhD,EACJzH,KAAKiE,WAAWpC,KAAK,CACjBpC,IAAK,MAAMyP,0BACXxP,KAAM+E,EAAK/E,KACXC,KAAM8E,EAAK9E,OAIfK,KAAKiE,WAAWpC,KAAK,CACjBpC,IAAK,UAAUyP,0BACfxP,KAAM+E,EAAK/E,KACXC,KAAM8E,EAAK9E,OAInB,MAAM0Q,EAAkB,KAARxB,EAAc,KAAOA,EACrCsB,EAAMtO,KAAK,eAAewO,MAAWnF,MACzC,KAEJgF,EAAWC,EAAMpE,KAAK,KAC1B,CACA,IAAIuE,EAAW,GAAG7F,EAAIH,MAAM4F,KAO5B,GANIf,EAAK5I,UACLgJ,EAAU,SAASA,IACnBe,EAAW,SAASA,IACpBtQ,KAAKsC,aACLtC,KAAKuC,aAAc,GAET,IAAVkI,EAAIhD,GAA0D,IAA/CzH,KAAK2D,mBAAmBG,mBAA0B,CACjE,IAAIsC,EAAM8I,EACL9I,SAC8C,IAApCpG,KAAK2D,mBAAmBI,UAC/B/D,KAAK2D,mBAAmBI,QAAU,GAEtC/D,KAAK2D,mBAAmBI,UACxBqC,EAAM,SAASpG,KAAK2D,mBAAmBI,WAE3CuM,EAAW,IAAIf,+EAGCe,EAHL,6wBAgBP,SAASpB,uBACjB,CACA,IAAIjJ,EAAO,GACX,GAAIkJ,EAAKC,YAIGnJ,EAFQ,KAAZwJ,EACkB,KAAdD,EACO,GAAGc,OAGH,GAAGd,KAAac,OAIpB,GAAGd,WAAmBM,EAAOQ,EAAU,qBAAqBR,EAAOL,EAAS,YAGtF,CAED,IAAIpC,EAAa,GACkB,IAA/BrN,KAAKsD,UAAUG,cACf4J,EAAa,GAAGrN,KAAKoF,QAAQ,YAG7Ba,EADc,KAAduJ,GAAgC,KAAZC,EACb,IAAIpC,IAAaiD,KAGR,KAAZb,EACO,IAAIF,SAAeO,EAAO,GAAGN,cAAsBnC,KAAciD,IAAY,kBAG7E,IAAIf,SAAeO,EAAO,GAAGN,WAAmBM,EAAO,UAAUzC,IAAaiD,KAAa,oBAAoBR,EAAOL,EAAS,MAAO,mBAInI,OAAdhL,EAAKuC,MAAgC,KAAdvC,EAAKuC,OAAgBiB,KAC5ChC,GAAQ,MAEhB,CAoBA,OAnBc,IAAVwE,EAAIhD,GAAsD,IAA3CzH,KAAK2D,mBAAmBE,iBACvCoC,EAAO,sFAGSA,EAHT,gwBAgBH,SAASiJ,uBAEVjJ,CACX,CACA6C,WAAWrE,GACP,MAAM8L,EAAQvQ,KAAKgI,SAASvD,EAAK8L,OAAO,GAClCC,EAAOxQ,KAAKgI,SAASvD,EAAK+L,MAAM,GAGtC,OAFAxQ,KAAKsC,aACLtC,KAAKuC,aAAc,EACZ,kCAAkCiO,aAAgBD,iBAC7D,CACA1H,OAAOpE,GAEH,MAAMgM,EAAS,CACX,IAAK,OACLC,GAAI,KACJC,MAAO,KACP,MAAO,MACP,MAAO,MACPC,GAAI,IACJC,GAAI,IACJC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,GAAI,KACJC,QAAS,KACTC,QAAS,KACTC,SAAU,MACV,IAAK,KAET,IAAIC,EAAK5M,EAAK6M,UAAY,GACtBf,EAAQvQ,KAAKgI,SAASvD,EAAK8L,OAAO,GAClCC,EAAOxQ,KAAKgI,SAASvD,EAAK+L,MAAM,GAUpC,MATW,MAAPa,GAAqD,IAAvCrR,KAAKsD,UAAUE,sBACzBiB,EAAK+L,MAA2B,WAAnB/L,EAAK+L,KAAKtQ,OACvBsQ,EAAO,cAAcA,MAErB/L,EAAK8L,OAA6B,WAApB9L,EAAK8L,MAAMrQ,OACzBqQ,EAAQ,cAAcA,OAInB,MAAPc,GAAqB,OAAPA,EACP,aAAab,MAASD,MAGtB,OAAPc,EACO,eAAeb,OAAUD,OAGhCE,EAAOY,KACPA,EAAKZ,EAAOY,IAGT,IAAIb,KAAQa,KAAMd,KAC7B,CACA5H,QAAQlE,GAEJ,IAAIqB,EAAQ,KAOZ,GANmC,IAA/B9F,KAAKsD,UAAUG,cACfqC,EAAQ9F,KAAKoF,QAAQ,OAErBX,EAAKqB,QACLA,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBrB,GAGvD,IACI8M,EADAtL,EAAO,GAEX,MAAMuL,EAAW/M,EAAKxE,KACtB,GAAsB,SAAlBuR,EAAStR,KACTqR,EAASvR,KAAK2J,aAAa6H,OAE1B,CAED,MAAMvR,EAAOuR,EAAS1L,MACtB,IAAI2E,EAAMzK,KAAKmK,QAAQlK,GACvB,GAAY,OAARwK,IACAzK,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACvBwK,EAAMzK,KAAKmK,QAAQlK,IACdwK,GACD,MAAM,IAAInL,MAAM,yBAGxBiS,EAAS9G,EAAIH,EACjB,CAIA,OAFArE,GAAQ,cAAcsL,yBAA8BA,WACpDtL,GAAQ,GAAGsL,QAAazL,IACjB,IAAM9F,KAAKwE,WAAWC,GAAM,GAASwB,EAAO,IACvD,CACAyC,QAAQjE,GAEJ,IAAIqB,EAAQ,KAOZ,GANmC,IAA/B9F,KAAKsD,UAAUG,cACfqC,EAAQ9F,KAAKoF,QAAQ,OAErBX,EAAKqB,QACLA,EAAQ9F,KAAKgI,SAASvD,EAAKqB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBrB,GAGvD,MAAMxE,EAAOwE,EAAKxE,KAAK6F,MACjB2E,EAAMzK,KAAKmK,QAAQlK,GACzB,IAAIgG,EAAO,GACX,GAAY,OAARwE,EACAzK,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACvBgG,EAAO,GAAGjG,KAAKoF,QAAQnF,QAAW6F,SAEjC,CAED,GAAI9F,KAAK4C,YAAY6H,EAAIhD,GAAGrE,SAASgH,IAAInK,GACrC,MAAM,cAAyB,MAAMA,+BAAmCwE,GAE5EwB,EAAO,GAAGwE,EAAIH,QAAQxE,IAC1B,CACA,MAAO,IAAM9F,KAAKwE,WAAWC,GAAM,GAASwB,EAAO,IACvD,CACAuC,gBAAgB/D,GACZ,MAAMqB,EAAwB,OAAfrB,EAAKqB,MAAkB,OAAS9F,KAAKgI,SAASvD,EAAKqB,OAAO,GACnE7F,EAAOwE,EAAKxE,KAAK6F,MACjB2L,EAAQhN,EAAKiN,QAEnB,GAAI1R,KAAKqD,QAAQJ,MAAMmH,IAAInK,GACvB,MAAM,cAAyB,GAAGwR,KAASxR,iBAAqBwE,GAGpEzE,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACT,OAAVwR,GACAzR,KAAKqD,QAAQD,SAASuE,IAAI1H,GAE9B,MAAMgG,EAAO,GAAGjG,KAAKoF,QAAQnF,MAAS6F,OACtC,OAAO9F,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CAEAwC,oBAAoBhE,GAChB,IAAIwB,EAAO,GACX,MAAMwL,EAAQhN,EAAKiN,QACb5L,EAAwB,OAAfrB,EAAKqB,MAAkB,OAAS9F,KAAKgI,SAASvD,EAAKqB,OAAO,GACzE9F,KAAKqC,SACL,MAAMwK,EAAO,UAAU7M,KAAKqC,SAC5B4D,GAAQ,GAAG4G,KAAQ/G,MACnBG,GAAQ,SAAS4G,0BAA6BA,MAASA,SACvD,MAAM5J,EAASwB,EAAU,MAAIA,EAAKxB,MAAQ,GAC1C,IAAK,IAAIwE,EAAI,EAAGA,EAAIxE,EAAMoC,OAAQoC,IAAK,CACnC,MACMxH,EADUgD,EAAMwE,GACD3B,MAEjB9F,KAAKqD,QAAQJ,MAAMmH,IAAInK,GAI3BD,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACT,OAAVwR,GACAzR,KAAKqD,QAAQD,SAASuE,IAAI1H,GAG9BgG,GAAQ,GADMjG,KAAKoF,QAAQnF,MACP4M,KAAQpF,OAChC,CACA,OAAOzH,KAAKwE,WAAWC,GAAM,GAASwB,CAC1C,CACAsC,WAAW9D,GACP,IAAIqB,EAAQ,GAAKrB,EAAKqB,MACtB,MAAM6L,EAAOlN,EAAKkN,KAKlB,GAJA7L,EAAQA,EAAM/F,QAAQ,MAAO,QAC7B+F,EAAQA,EAAM/F,QAAQ,KAAM,OAC5B+F,EAAQA,EAAM/F,QAAQ,MAAO,OAC7B+F,EAAQA,EAAM/F,QAAQ,MAAO,OAChB,OAAT4R,EAAe,CACf,MAAMC,EAAK,CAACpM,EAAGvF,IACJ,KAAOD,KAAKuK,OAAOtK,EAAMwE,GAAQ,KAE5CqB,EAAQA,EAAM/F,QAAQ,aAAc6R,GACpC9L,EAAQA,EAAM/F,QAAQ,WAAY6R,EACtC,CACA,MAAO,IAAM9L,EAAQ,GACzB,CACAoE,cAAczF,GACV,MAAM6C,EAAQtH,KAAKgI,SAASvD,EAAK6C,OAAO,GAClCuK,EAAW7R,KAAKgI,SAASvD,EAAKoN,UAAU,GAC9C,OAAO7R,KAAKwE,WAAWC,GAAM,GACzB,UAAU6C,yDAGV,GAAGuK,MACX,CACAC,iBACI,OAAO9R,KAAKmC,WAChB,CACA4P,oBAEI,IAAI9L,EAAO,GACP+L,EAAa,GACjB,IAAK,MAAM/R,KAAQD,KAAKyC,OAAOwM,SAAU,CACrC,MAAMgD,EAAU,IAAIhS,QAChBD,KAAK4C,YAAY,GAAGK,MAAMmH,IAAI6H,KAC9BjS,KAAKmC,YAAYwF,IAAI,IAAI1H,SACzB+R,GAAc,UAAU/R,qBAEhC,CAIA,MAHmB,KAAf+R,IACA/L,GAAQ,8BAAkC+L,GAEvC/L,CACX,EAOG,SAASiM,EAAWnQ,EAAKoF,EAAKnB,GAEjC,MAAMmM,EAAM,IAAIrQ,EAAQC,GAMxBoQ,EAAIjL,iBAAiBC,GAErB,IAAImD,EAAK6H,EAAIrK,QAAQX,EAAKnB,GAE1B,MAAMoM,EAASD,EAAIpM,eAAehE,EAAKiE,GAEjCqM,GAAc,IAAKC,MAAQC,UAAY,IAAMC,KAAKC,MAAM,WAAaD,KAAKE,UAMhF,GAJIpI,GAAMtE,EAAIzE,SACV+I,GAAM,kCAGN6H,EAAI7P,WAAa,GAAK6P,EAAI7N,YAAYW,SAAU,CAChD,MAAM0N,EAAY,qBAAuBN,EAAS,KAClD/H,EAAK,0FAEmB+H,aAAkBF,EAAI7P,gCACrCqQ,cACfP,MACA9H,kBACYqI,MACZA,+RAW+BN,8DAG7B,KACK,CACD,MAAMO,EAAW,oBAAsBP,EAAS,KAChD/H,EAAK,oGAGFsI,uBAEPR,QACA9H,gKAMUsI,MACZA,kGAIE,CAEA7Q,EAAI6I,YAAYiI,MAAM,qBAAuBvI,GAC7C,IAAIwI,EAAkB,GACtB,MAAMC,EAAc,GACpB,IAAK,MAAM1M,KAAKL,EAAIxE,YAAa,CAC7B,GAAU,oBAAN6E,EACA,SAEJ,MAAM2M,EAAK,gBAAkB3M,EAAEtG,QAAQ,cAAe,IAAIA,QAAQ,iBAAkB,KACpFgT,EAAYlR,KAAKmR,GACjBF,GAAmB,UAAUE,0BAA2B3M,MAC5D,CACA,MAAM4M,EAAmB,oHAI3BH,2CAEoB/Q,EAAImR,iCACRnR,EAAI9C,2VAWD8T,EAAYhH,KAAK,qeAsBpC/F,EAAIvE,uCAEJ6I,+LAWQ6I,EAAWhB,EAAIJ,oBAUrB,MAAO,CAEHqB,WAXmB,6CAGzBpN,EAAIrE,YACJyQ,MACAe,MACA7I,4BAOM+I,WAAYJ,EAEZd,MAER,C,yFCnsDA,MAAMmB,EAAc,MACdC,EAAgB,MAChBC,EAAc,MACdC,EAAe,MACfC,EAAqB,QACrBC,EAAsB,QACtBC,EAAe,OACfC,EAAkB,WAClBC,EAAiB,MACjBC,EAAc,MACdC,EAAe,OAKrB,MAAMC,EAKF1U,YAAYW,EAAM4F,GAId9F,KAAKE,KAAOA,EAIZF,KAAK8F,MAAQA,EAIb9F,KAAKkU,IAAM,EAIXlU,KAAKR,IAAM,CACf,EAKG,MAAM2U,EAIT5U,YAAYwC,GACR/B,KAAK+B,IAAMA,EAKX/B,KAAKgC,aAAe,IAAKD,EAAIE,mBAK7BjC,KAAKoU,aAAe,CAAC,EAMrBpU,KAAKmC,YAAc,IAAIC,IAKvBpC,KAAKqC,OAAS,EAKdrC,KAAKwC,UAAW,EAKhBxC,KAAKqU,OAAS,EAKdrU,KAAKsM,UAAY,GAEjBtM,KAAKsU,cAAgB,KAErBtU,KAAKuU,WAAa,KAKlBvU,KAAKwU,OAAS,CAAC,EAEfxU,KAAKyC,OAASV,EAKd/B,KAAK0C,QAAU,SAKf1C,KAAK2C,WAAa,KAKlB3C,KAAK4C,YAAcb,EAAIc,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAIc,OAAOC,KAAKJ,IAAKK,SAAU,IAAIhB,QAKjHpC,KAAKqD,QAAU,CAAEL,YAAY,EAAOC,MAAO,IAAIb,IAAOgB,SAAU,IAAIhB,KACpEpC,KAAK4C,YAAY,GAAK5C,KAAKqD,QAG3BrD,KAAKsD,UAAY,CACbC,YAAa,EACbC,oBAAqB,EACrBC,YAAa,EACbC,UAAW,GAIf1D,KAAK2D,mBAAqB,CACtBC,aAAc,EACdC,eAAgB,EAChBC,mBAAoB,EAE5B,CAMAnD,gBAAgBoB,EAAKoF,EAAK5F,GACtB,MAAM4Q,EAAM,IAAIgC,EAAapS,GAE7BoQ,EAAIjL,iBAAiBC,GAErB,IAAImD,EAAK6H,EAAIrK,QAAQX,IAAO5F,GAQ5B,OANA+I,EAAK6H,EAAIpM,eAAexE,GAAU+I,EAClCvI,EAAI6I,YAAYiI,MAAM,6BAA+BvI,GAEjDA,GAAM/I,IACN+I,GAAM,kCAEH,CAEH8I,WAAY9I,EAEZ+I,WAAY,uBACFvO,KAAKC,UAAU,UACnC,mBACA,gXAeEoN,EAAIsC,oBACJnK,kLAQQ6H,MAER,CAKA3N,WAAWC,EAAMC,GACb,GAAI1E,KAAKsD,UAAUC,YAAc,EAC7B,MAAO,GAGX,IAAIvC,EAWJ,GATIA,EADqB,iBAAdyD,EAAK9E,KACH,UAEiB,iBAAd8E,EAAK/E,KACR,IAAI+E,EAAK9E,OAGT,IAAI8E,EAAK9E,QAAQ8E,EAAK/E,QAG9BgF,EAAa,CACd,GAAI1D,IAAWhB,KAAK2C,WAChB,MAAO,GAEX3C,KAAK2C,WAAa3B,CACtB,CAEA,MAAO,aAAa8D,KAAKC,UAAU/D,KACvC,CAMAoE,QAAQnF,GAEJ,MAAO,cADM6E,KAAKC,UAAU9E,KAEhC,CAKAwU,cACI,IAAIxO,EAAO,GAEX,IAAK,MAAMG,KAAOoB,MAAMkE,KAAK1L,KAAKmC,YAAYwJ,UAAW,CACrD,MAAMtF,EAAIrG,KAAKyC,OAAOI,WAAW,GAAGuD,GAC9BnG,EAAO,uBAAuBmG,MAEhCH,GADe,mBAAR,EACChG,EAAO,IAAMoG,EAAEqO,WAAa,MAG5BzU,EAAO,IAAM6E,KAAKC,UAAUsB,GAAK,KAEjD,CACA,OAAOJ,CACX,CAOAF,eAAexE,GACX,IAAI0E,EAAO,GAEXA,GAAQ,uCACRA,GAAQ,wCACRA,GAAQ,oCACRA,GAAQ,iDACRA,GAAQ,iDACRA,GAAQ,qDACRA,GAAQ,gCAER,IAAIE,EAAe,GACnB,IAAK,MAAMC,KAAOpG,KAAKgC,aAAc,CAEjCmE,GACI,qBAAqBC,cACZA,OAHHpG,KAAKgC,aAAaoE,GAAKE,4BAIPF,OAC9B,CACqB,KAAjBD,IACAF,GAAQ,uBAA2BE,GAGvC,IAAI6L,EAAa,GACjB,IAAK,MAAM/R,KAAQD,KAAKyC,OAAOwM,SAAU,CACrC,MAAMgD,EAAU,IAAIhS,QAChBD,KAAK4C,YAAY,GAAGK,MAAMmH,IAAI6H,KAC9BjS,KAAKmC,YAAYwF,IAAI,IAAI1H,SACzB+R,GAAc,UAAU/R,qBAEhC,CAKA,GAJmB,KAAf+R,IACA/L,GAAQ,2BAA+B+L,GAGvCzQ,EAAQ,CACR,IAAIiF,EAAW,wBACf,IAAK,MAAMJ,KAAOpG,KAAKoU,aACnB,IAAe,IAAX7S,GAAsC,iBAAXA,GAAuBA,IAAW6E,EAAM,CAEnEI,GAAY,GADFxG,KAAKoU,aAAahO,GAAKE,QAErC,CAEa,KAAbE,IACAP,GAAQ,wBACRA,GAAQO,EAAW,KAE3B,CACA,OAAOP,CACX,CAKAQ,UAAUC,GACN,OAAO1G,KAAKyC,OAAOgE,UAAUC,EACjC,CAMAC,gBAAgB1G,EAAMyG,GAClB1G,KAAKyC,OAAOkE,gBAAgB1G,EAAMyG,EACtC,CAOAE,cAAcC,EAASC,EAAMJ,GACzB1G,KAAKyC,OAAOmE,cAAcC,EAASC,EAAMJ,EAC7C,CAOAK,QAAQX,EAAKY,EAAMV,GACftG,KAAKyC,OAAOsE,QAAQX,EAAKY,EAAMV,EACnC,CAMAW,QAAQb,GACJ,OAAOpG,KAAKyC,OAAOwE,QAAQb,EAC/B,CAIAc,iBAAiBC,GACb,GAAiB,UAAbA,EAAIjH,KACJ,MAAM,cAAyB,kCAAmCiH,GAEtE,MAAME,EAAc5C,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAK6C,MAAMjC,OAAQoC,IAAK,CACxC,MAAMC,EAAIjD,EAAK6C,MAAMG,GACrB,GAAe,aAAXC,EAAExH,KAAqB,CACvB,MAAMD,EAAOyH,EAAEzH,KAAK6F,MACpB9F,KAAKmC,YAAYwF,IAAI1H,GAErBD,KAAKyC,OAAOI,WAAW,GAAG5C,GAAQ,WAAc,EAChDD,KAAKgC,aAAa/B,GAAQ,CACtB+G,KAAMU,EAAEzH,KAAK2H,KAAKZ,KAClBV,GAAI,GACJpG,KAAM,OAEd,MACoB,eAAXwH,EAAExH,MAQS,wBAAXwH,EAAExH,QAPc,UAAjBwH,EAAEJ,MAAMpH,KACRmH,EAAWK,EAAEJ,OAGbD,EAAWK,GAWvB,GAEJL,EAAWF,GAEX,MAAMU,EAAe,IAAIzF,IACU,IAA/BpC,KAAKsD,UAAUG,aACfoE,EAAaF,IAAI,MAErB3H,KAAKqD,QAAU,CAAEL,YAAY,EAAOC,MAAO4E,EAAczE,SAAU,IAAIhB,KACvEpC,KAAK4C,YAAc5C,KAAKyC,OAAOI,WAAWC,KAAIC,IAAK,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAIc,OAAOC,KAAKJ,IAAKK,SAAU,IAAIhB,QACvHpC,KAAK4C,YAAY,GAAK5C,KAAKqD,OAC/B,CAKAyE,QAAQrD,EAAMlD,GAEVvB,KAAKgI,SAASvD,GAAM,GAEpB,MAAMkQ,EAAgB,IAAIvS,IAAI,CAC1BqR,EAAcC,EAAoBC,EAAqBC,EAAcG,IAIzE,IAAIa,EAAQ5U,KAAKsM,UAEC,CAEdsI,EAAQA,EAAMC,QAAQ5O,GACXA,EAAK/F,OAASoT,IAGzB,MAAMwB,EAAa,IAAI1S,IACvBwS,EAAMxE,SAASnK,IACP0O,EAAcvK,IAAInE,EAAK/F,OACvB4U,EAAWnN,IAAI1B,EAAKH,MACxB,IAGJ8O,EAAQA,EAAMC,QAAQ5O,GACdA,EAAK/F,OAASqT,IArZH,KAwZXtN,EAAKzG,KAGFsV,EAAW1K,IAAInE,EAAKH,UAG/B,IAAI2B,EAAI,EACR,KAAOA,EAAImN,EAAMvP,OAAS,GAClBuP,EAAMnN,GAAGvH,OAASsT,GAAeoB,EAAMnN,EAAI,GAAGvH,OAASsT,EAI3D/L,IAHImN,EAAMG,OAAOtN,EAAI,EAAG,GAK5BzH,KAAKsM,UAAYsI,CACrB,CAEAA,EAAMxE,SAAQ,CAACnK,EAAMmG,KACbnG,EAAK/F,OAASqT,IACdvT,KAAKwU,OAAOvO,EAAKH,OAASsG,EAC9B,IAEJwI,EAAMxE,SAASnK,IACP0O,EAAcvK,IAAInE,EAAK/F,OACnB+F,EAAKiO,GAAK,IACVjO,EAAKiO,GAAKlU,KAAKwU,OAAOvO,EAAKH,OAEnC,IAEJ,IAAIiC,EAAS,GAoOb,OAlOA6M,EAAMxE,SAAQ,CAACnK,EAAMmG,KACjB,OAAQnG,EAAK/F,MACT,KAAKoT,EACDvL,GAAU,QAAQqE,sBAA0BnG,EAAKH,UACjD,MACJ,KAAKyN,EACDxL,GAAU,QAAQqE,wBAA4BnG,EAAKH,UACnD,MACJ,KAAK0N,EACDzL,GAAU,QAAQqE,MAAUnG,EAAKH,2BACjC,MACJ,KAAK2N,EACD1L,GAAU,QAAQqE,sBAA0BnG,EAAKiO,iBAAiBjO,EAAKH,UACvE,MACJ,KAAK4N,EACD3L,GAAU,QAAQqE,+CAAmDnG,EAAKiO,kBAAkBjO,EAAKH,UACjG,MACJ,KAAK6N,EACD5L,GAAU,QAAQqE,gDAAoDnG,EAAKiO,iBAAiBjO,EAAKH,UACjG,MACJ,KAAKgO,EACD/L,GAAU,QAAQqE,iCAClB,MACJ,KAAKwH,EACD7L,GAAU,QAAQqE,iBAAqBnG,EAAKiO,uBAAuBjO,EAAKH,UACxE,MACJ,KAAK+N,EACD9L,GAAU,QAAQqE,qBAAyBnG,EAAKH,WAAWsG,sBAA0BnG,EAAKH,UAC1F,MACJ,KAAKiO,EACDhM,GAAU,QAAQqE,qBAAyBnG,EAAKiO,uBAChD,MACJ,KAAKF,EACD,CAEI,MAAMgB,EAAI/O,EAAKH,MAAM/F,QAAQ,OAAQ,IACrCgI,GAAU,QAAQqE,SAAa4I,gBAC/B,KACJ,CACJ,QACI,MAAM,IAAI1V,MAAM,qBACxB,IAEJyI,EAAS,4EAGKjD,KAAKC,UAAU/E,KAAKwU,gXAU5BzM,oxDA+DS6M,EAAMvP,42GA2GjB9D,EACO,GAGAwG,CAEf,CAKAC,SAASvD,EAAMwD,GACX,IAAIhC,EAAO,GACX,GAAIxB,aAAgB+C,MAAO,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIhD,EAAKY,OAAQoC,IAAK,CAClC,MAAMS,EAAIzD,EAAKgD,GACfxB,GAAQjG,KAAKgI,SAASE,EAAGD,EAC7B,CACA,OAAOhC,CACX,CACA,GAAa,OAATxB,EACA,MAAO,OAEX,QAAa5E,IAAT4E,EACA,MAAO,YAEX,GAAsB,iBAAX,EACP,MAAO,GAAKA,EAGhB,OAAQA,EAAKvE,MAET,IAAK,MACD,MACJ,IAAK,UACIuE,EAAKqB,QACNrB,EAAKqB,MAAQ,IAEjB9F,KAAKiV,QAAQ,IAAIhB,EAASX,EAAa7O,EAAKqB,QAC5C,MACJ,IAAK,MACD9F,KAAKiV,QAAQ,IAAIhB,EAAST,EAAaxT,KAAKwE,WAAWC,GAAM,KAC7D,MAEJ,IAAK,SACDzE,KAAKkV,WAAW,oBAAoBzQ,EAAKqB,mBACzC,MACJ,IAAK,SACD9F,KAAKuI,WAAW9D,GAChB,MACJ,IAAK,OACL,IAAK,WACDzE,KAAK4I,WAAWnE,GAChB,MACJ,IAAK,KACL,IAAK,OACDzE,KAAK6I,OAAOpE,GACZ,MACJ,IAAK,SACDzE,KAAK8I,WAAWrE,GAChB,MACJ,IAAK,MACDzE,KAAKgI,SAASvD,EAAKqB,OAAO,GAC1B9F,KAAKkV,WAAW,gJAEhB,MACJ,IAAK,OACDlV,KAAK2J,aAAalF,GAClB,MACJ,IAAK,aACDzE,KAAK4J,cAAcnF,GACnB,MACJ,IAAK,WACDzE,KAAK6J,YAAYpF,GACjB,MACJ,IAAK,OACD,CACI,MAAM2D,EAAK3D,EAAU,MAAI,OAAS,QAClCzE,KAAKkV,WAAW,oBAAoB9M,MACpC,KACJ,CACJ,IAAK,OACDpI,KAAKkV,WAAW,0BAChB,MACJ,IAAK,OACL,IAAK,eACL,IAAK,YACDlV,KAAKmV,SAAS1Q,EAAMwD,GACpB,MAEJ,IAAK,MACDjI,KAAK0I,QAAQjE,GACb,MACJ,IAAK,YACDzE,KAAK0J,aAAajF,GAClB,MACJ,IAAK,QACD,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAK6C,MAAMjC,OAAQoC,IAAK,CACxC,MAAMW,EAAI3D,EAAK6C,MAAMG,GACrBzH,KAAKgI,SAASI,GAAG,EACrB,CACA,MACJ,IAAK,KACDpI,KAAKgJ,OAAOvE,GACZ,MACJ,IAAK,eACDzE,KAAKoJ,gBAAgB3E,GACrB,MACJ,IAAK,QACDzE,KAAKkV,WAAWlV,KAAKsI,cAAc7D,EAAM,UACzC,MACJ,IAAK,WACDzE,KAAKkV,WAAWlV,KAAKsI,cAAc7D,EAAM,aACzC,MACJ,IAAK,MACDzE,KAAKkJ,QAAQzE,GACb,MACJ,IAAK,UACDzE,KAAKmJ,YAAY1E,GACjB,MACJ,IAAK,QACDzE,KAAKuJ,UAAU9E,GACf,MACJ,IAAK,SACDzE,KAAKyJ,WAAWhF,GAChB,MACJ,IAAK,SACDzE,KAAKiK,WAAWxF,GAChB,MACJ,IAAK,MACDwB,GAAQjG,KAAKkV,WAAW,yBACxB,MACJ,IAAK,gBACDlV,KAAKwI,gBAAgB/D,GACrB,MACJ,IAAK,oBACDwB,GAAQjG,KAAKkV,WAAWlV,KAAKyI,oBAAoBhE,IACjD,MACJ,IAAK,SACD,MAAM,cAAyB,6BAA8BA,GACjE,IAAK,aACD,MAAM,cAAyB,6BAA8BA,GACjE,IAAK,sBACDzE,KAAKsJ,uBAAuB7E,EAAMwD,GAClC,MACJ,IAAK,WACDjI,KAAK8J,YAAYrF,GACjB,MACJ,IAAK,WACDzE,KAAK+J,YAAYtF,GACjB,MACJ,IAAK,WACDwB,GAAQjG,KAAKkV,WAAWlV,KAAKgK,YAAYvF,IACzC,MAEJ,IAAK,aACDwB,GAAQjG,KAAKkK,cAAczF,GAC3B,MACJ,IAAK,UACDwB,GAAQjG,KAAK4F,YAAYnB,GACzB,MACJ,QACI,MAAM,IAAInF,MAAM,8BAAgCmF,EAAKvE,MAE7D,OAAO+F,CACX,CACAL,YAAYnB,GACR,MAAM0N,EAAM,IAAI,KAAQnS,KAAK+B,KAE7B,OADA/B,KAAKkV,WAAW/C,EAAIvM,YAAYnB,IACzB,EACX,CAMAyQ,WAAWE,GACP,GAAgB,KAAZA,EACA,MAAO,GAEX,MACMC,EADID,EAAQ3P,MAAM,MACX3C,KAAKwS,GAAQ,KAAOA,EAAIvV,QAAQ,OAAQ,MAC/CwV,EAAI,IAAItB,EAASD,EAAcqB,EAAGtJ,KAAK,OAC7C,OAAO/L,KAAKiV,QAAQM,EACxB,CAMAN,QAAQhP,GAGJ,OAFAjG,KAAKsM,UAAUtM,KAAKqU,QAAUpO,EAC9BjG,KAAKqU,SACE,EACX,CAMAmB,UAAUvV,GACN,MAAMwV,EAAYxV,EAAO,IAAOD,KAAKqC,SACrC,OAAOrC,KAAK0V,kBAAkBD,EAClC,CAMAC,kBAAkBC,GACd,MAAMJ,EAAI,IAAItB,EAASV,EAAeoC,GAEtC,OADA3V,KAAKwU,OAAOmB,IAAc,EACnBJ,CACX,CAMAK,SAASC,GACL,OAAO,IAAI5B,EAASR,EAAcoC,EAAM/P,MAC5C,CAMAgQ,eAAeD,GACX,OAAO,IAAI5B,EAASP,EAAoBmC,EAAM/P,MAClD,CAMAiQ,gBAAgBF,GACZ,OAAO,IAAI5B,EAASN,EAAqBkC,EAAM/P,MACnD,CAIAkD,OAAOvE,GACH,MAAMuR,EAAahW,KAAKwV,UAAU,WAC5BS,EAAWjW,KAAKwV,UAAU,WAC1BU,EAAelW,KAAKwV,UAAU,UAYpC,OAVAxV,KAAKiV,QAAQe,GACbhW,KAAKgI,SAASvD,EAAKwJ,MAAM,GACzBjO,KAAKiV,QAAQjV,KAAK+V,gBAAgBG,IAClClW,KAAKgI,SAASvD,EAAK6C,OAAO,GAC1BtH,KAAKiV,QAAQjV,KAAK4V,SAASK,IAC3BjW,KAAKiV,QAAQiB,GACTzR,EAAKyJ,YACLlO,KAAKgI,SAASvD,EAAKyJ,YAAY,GAEnClO,KAAKiV,QAAQgB,GACN,EACX,CACA7M,gBAAgB3E,GACZzE,KAAKwC,UAAW,EAChBxC,KAAKqD,QAAQJ,MAAM0E,IAAI,MACvB3H,KAAKqD,QAAQD,SAASuE,IAAI,MAE1B,MAAMwO,EAAU,cAAcnW,KAAKqC,SACnCrC,KAAKqC,SAEL,MAAM+T,EAAY,kBAAkBpW,KAAKqC,SACzCrC,KAAKqC,SACLrC,KAAKgI,SAASvD,EAAKqB,OAAO,GAC1B9F,KAAKkV,WAAW,GAAGkB,0BAAkCD,UACrD,MAAME,EAAarW,KAAKwV,UAAU,YAClCxV,KAAKiV,QAAQoB,GACb,MAAMJ,EAAWjW,KAAKwV,UAAU,UAChCxV,KAAKuU,WAAa0B,EAClBjW,KAAKsU,cAAgB+B,EAErB,MACM1I,EAAO,wBAAgBwI,uBACLA,OAAaC,OAOrC,OANApW,KAAKkV,WAAWvH,GAChB3N,KAAKiV,QAAQjV,KAAK8V,eAAeG,IACjCjW,KAAKyM,YAAYhI,EAAK6C,OACtBtH,KAAKiV,QAAQjV,KAAK4V,SAASS,IAC3BrW,KAAKiV,QAAQgB,GACbjW,KAAKwC,UAAW,EACT,EACX,CAKA2H,QAAQlK,GAEJ,GAAID,KAAKqD,QAAQJ,MAAMmH,IAAInK,GACvB,MAAO,CAAEwH,EAAGzH,KAAK4C,YAAYyC,OAAS,EAAGpF,OAAMoK,OAAO,EAAMC,GAAI,cAAcxF,KAAKC,UAAU9E,OAGjG,IAAK,IAAIwH,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAIzH,KAAK4C,YAAY6E,GAAGxE,MAAMmH,IAAInK,GAC9B,MAAO,CAAEwH,IAAGxH,OAAMoK,OAAO,EAAOC,GAAI,kBAAkB7C,MAAM3C,KAAKC,UAAU9E,OAGnF,OAAO,IACX,CAMAsK,OAAOtK,EAAMuK,GACT,MAAMC,EAAMzK,KAAKmK,QAAQlK,GACnByK,EAAMF,EAAS7K,KACrB,GAAY,OAAR8K,EAYA,MAPa,OAATxK,GAA0B,OAATA,GAA0B,OAATA,GAA0B,SAATA,GAA4B,OAATA,GAItED,KAAKyC,OAAOmI,YAAYC,KAAK,MAAM5K,gBAAoBuK,GAE3DxK,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GAChBD,KAAKoF,QAAQnF,GAIxB,GAAU,IAFAwK,EAAIhD,EAED,CACT,MAAMqD,EAAK9K,KAAKyC,OAAOwE,QAAQhH,GAC/B,IAAK6K,EACD,MAAO,GAAGL,EAAIH,WAAWI,MAE7B,GAAgB,UAAZI,EAAG5K,MAAgC,QAAZ4K,EAAG5K,KAC1B,OAAOuK,EAAIH,GAEf,GAAgB,SAAZQ,EAAG5K,KAAiB,CACpB,IAAK4K,EAAG9D,KACJ,MAAM,IAAI1H,MAAM,kBAEpB,GAAuB,IAAnBwL,EAAG9D,KAAK3B,OACR,MAAO,IAAIoF,EAAIH,QAEnB,MAAM,cAAyB,IAAIrK,mCAAuCuK,EAC9E,CACA,MAAM,cAAyB,IAAIvK,mBAAuBuK,EAC9D,CACA,OAAOC,EAAIH,EACf,CACA1B,WAAWnE,GACP,MAAMxE,EAAOwE,EAAKqB,MAClB,IAAI6G,EAAU,cAAc7H,KAAKC,UAAU9E,MAC3C,MAAMqW,EAAItW,KAAKmK,QAAQlK,GACd,MAALqW,IACA3J,EAAU2J,EAAEhM,IAEhBtK,KAAKkV,WAAW,oBAAoBvI,MACxC,CACAtE,YAAY5D,GACR,IAAIuG,EAAaC,OAAOxG,EAAKqB,OAC7BkF,EAAaA,EAAWjL,QAAQ,MAAO,KACvC,MAAMiB,EAAShB,KAAKwE,WAAWC,GAAM,GACrC,MAAmB,KAAfuG,GAAgC,KAAXhK,EACd,IAEQ,KAAfgK,EACO,IAAMhK,EAAS,KAEnB,IAAMA,EAAS,KAAOgK,EAAa,IAC9C,CACAf,WAAWxF,GAEP,GAAIzE,KAAKqD,QAAQJ,MAAMmH,IAAI,OACvB,MAAM,cAAyB,6BAA8B3F,GAOjE,OALIA,EAAKqB,QACL9F,KAAKgI,SAASvD,EAAKqB,OAAO,GAC1B9F,KAAKkV,WAAW,yCAEpBlV,KAAKiV,QAAQ,IAAIhB,EAASH,EAAgB,KACnC,EACX,CACAxL,cAAc7D,EAAM0G,GAEhB,IAAKnL,KAAKwC,SAAU,CAChB,MAAM4I,EAAgB,aAARD,EAAsB,MAAQ,MAC5C,MAAM,cAAyB,IAAIC,gCAAoC3G,EAC3E,CAWA,MAVY,aAAR0G,EACInL,KAAKsU,eACLtU,KAAKiV,QAAQjV,KAAK4V,SAAS5V,KAAKsU,gBAIhCtU,KAAKuU,YACLvU,KAAKiV,QAAQjV,KAAK4V,SAAS5V,KAAKuU,aAGjC,EACX,CACAlJ,kBAAkB5G,EAAMxE,GAEpB,MAAMsW,EAAwB,KAATtW,EACrB,IAAIiP,EAAWjP,EACXsW,IACArH,EAAW,QAAQlP,KAAKqC,UAE5B,MAAM4T,EAAWjW,KAAKwV,UAAU,MAAMtG,WACtClP,KAAKiV,QAAQjV,KAAK4V,SAASK,IAC3B,MAAMD,EAAahW,KAAK0V,kBAAkBxG,GAC1C8G,EAAWxW,IAnjCY,GAojCvBQ,KAAKiV,QAAQe,GAEb,MAAMnO,EAAe,IAAIzF,IACzBpC,KAAKqD,QAAU,CAAEL,YAAY,EAAMC,MAAO4E,EAAczE,SAAU,IAAIhB,KACtEpC,KAAKqD,QAAQJ,MAAM0E,IAAI,MAEvB3H,KAAK4C,YAAYf,KAAK7B,KAAKqD,SAE3B,MAAMuE,EAAO2O,EAAc9R,EAAKmD,KAAOnD,EAAKxE,KAAK2H,KACjD,IAAI3B,EAAO,GACPuQ,EAAW,GACfvQ,GAAQ,QAAQiJ,aAIhBjJ,GAAQ,sBACR,IAAK,IAAIwB,EAAIG,EAAKgE,SAASvG,OAAS,EAAGoC,GAAK,EAAGA,IAAK,CAChD,MAAMoE,EAAOjE,EAAKgE,SAASnE,GAC3BxB,GAAQ,KAAKjG,KAAKoF,QAAQyG,4BAC1B7L,KAAKqD,QAAQJ,MAAM0E,IAAIkE,GACvB2K,GAAY,EAChB,CAgCA,OA/BAvQ,GAAQ,2BACRjG,KAAKkV,WAAWjP,GAEhBjG,KAAKmC,YAAYwF,IAAIuH,GACrBlP,KAAK4C,YAAY,GAAGK,MAAM0E,IAAIuH,GAC9BlP,KAAKgC,aAAakN,GAAY,CAC1BlI,KAAMY,EAAKZ,KACXV,GAII,sLAA6C4I,6BAEtCsH,EAAW,KAClB,wCAAwCtH,kFAG5ChP,KAAM,QAGVF,KAAKgI,SAASvD,EAAK6C,OAAO,GAC1BtH,KAAK4C,YAAYqJ,MACjBjM,KAAKqD,QAAUrD,KAAK4C,YAAY5C,KAAK4C,YAAYyC,OAAS,GAE1DrF,KAAKyC,OAAOI,WAAW,GAAGqM,GAAY,WAAc,EACpDlP,KAAKiV,QAAQ,IAAIhB,EAASH,EAAgB,KAC1C9T,KAAKiV,QAAQgB,GAERhW,GACDD,KAAKkV,WAAW,qBAAqBhG,OAElC,EACX,CACAnF,YAAYtF,GACR,MAAM,cAAyB,wBAAyBA,EAC5D,CACAuF,YAAYvF,GACR,MAAMxE,EAAO,iBAAoBwE,EAAKxE,KAAK6F,OAI3C,OAHA9F,KAAKqL,kBAAkB5G,EAAMxE,GAGtB,EACX,CACA6J,YAAYrF,GACR,OAAOzE,KAAKqL,kBAAkB5G,EAAM,GACxC,CACAoF,YAAYpF,GACR,MAAM0H,EAAO1H,EAAKqB,MACZe,EAAU,gBAAgB7G,KAAKqC,SAQrC,OAPArC,KAAKkV,WAAWrO,EAAU,6BAC1BsF,EAAKiE,SAASlE,IACVlM,KAAKgI,SAASkE,EAAEpG,OAAO,GACvB9F,KAAKgI,SAASkE,EAAE9F,KAAK,GACrBpG,KAAKkV,WAAW,GAAGrO,yCAA+C,IAEtE7G,KAAKkV,WAAW,qBAAqBrO,6CAC9B,EACX,CACA+C,cAAcnF,GACV,MAAM0H,EAAO1H,EAAKqB,MAClB9F,KAAKiV,QAAQjV,KAAKwV,UAAU,wBAC5BrJ,EAAKiE,SAASlE,GAAMlM,KAAKgI,SAASkE,GAAG,KACrC,MAAMuK,EAAOtK,EAAK9G,OAElB,OADArF,KAAKkV,WAAW,0DAA0DuB,KAAQA,OAC3E,EACX,CACA9M,aAAalF,GAETzE,KAAKgI,SAASvD,EAAKxE,MAAM,GACzB,MAAMkM,EAAO1H,EAAK2H,MAClB,IAAK,IAAI3E,EAAI,EAAGA,EAAI0E,EAAK9G,OAAQoC,IAE7BzH,KAAKgI,SAASmE,EAAK1E,IAAI,GAEvBzH,KAAKkV,WAAW,+FAIpB,MAAO,EACX,CACAxL,aAAajF,GAETzE,KAAKgI,SAASvD,EAAKqB,OAAO,GAE1B9F,KAAKgI,SAASvD,EAAKxE,MAAM,GACzB,MAAMkM,EAAO1H,EAAK2H,MAClB,IAAK,IAAI3E,EAAI,EAAGA,EAAI0E,EAAK9G,OAAQoC,IAAK,CAElC,GADAzH,KAAKgI,SAASmE,EAAK1E,IAAI,GACnBA,IAAM0E,EAAK9G,OAAS,EAAG,CACvBrF,KAAKkV,WAAW,8GAIhB,KACJ,CAEAlV,KAAKkV,WAAW,8FAGpB,CACA,MAAO,EACX,CACAzI,YAAYhI,GACR,MAAMiI,EAAU1M,KAAKwC,SACrBxC,KAAKwC,UAAW,EAChB,IACI,OAAOxC,KAAKgI,SAASvD,GAAM,EAI/B,CAFA,QACIzE,KAAKwC,SAAWkK,CACpB,CACJ,CACAxD,QAAQzE,GAGJ,IAAIoH,EACJ,GAHA7L,KAAKwC,UAAW,EAGE,OAAdiC,EAAKoH,KAAe,CACpB,MAAMc,EAAUlI,EAAKoH,KAAK/F,MAC1B9F,KAAKqD,QAAQJ,MAAM0E,IAAIgF,GACvBd,EAAO7L,KAAKoF,QAAQuH,EACxB,MAEI3M,KAAKqD,QAAQJ,MAAM0E,IAAI,SACvBkE,EAAO7L,KAAKoF,QAAQ,SAExB,MAAM0J,EAAO9O,KAAKoF,QAAQ,MACpBwH,EAAS5M,KAAKqC,SACdwK,EAAO,eAAeD,IAEtBQ,EAAQ,gBAAgBR,IAE9B5M,KAAKgI,SAASvD,EAAKiH,MAAM,GACzB1L,KAAKgI,SAASvD,EAAKuI,IAAI,GACvBhN,KAAKkV,WAAW,GAAG9H,uBAA2BP,wBAE9C7M,KAAKkV,WAAW,GAAGpG,OAAUjD,OAAUgB,KAEvC,MAAMwJ,EAAarW,KAAKwV,UAAU,WAC5BkB,EAAW1W,KAAKwV,UAAU,SAChCxV,KAAKiV,QAAQoB,GACb,MAAMJ,EAAWjW,KAAKwV,UAAU,WAahC,OAZAxV,KAAKkV,WAAW,oBAAoBrJ,QAAWuB,MAC/CpN,KAAKiV,QAAQjV,KAAK+V,gBAAgBE,IAClCjW,KAAKsU,cAAgBoC,EACrB1W,KAAKuU,WAAa0B,EAElBjW,KAAKyM,YAAYhI,EAAK6C,OACtBtH,KAAKiV,QAAQyB,GACb1W,KAAKkV,WAAW,GAAGpG,SAAYjD,MAC/B7L,KAAKiV,QAAQjV,KAAK4V,SAASS,IAC3BrW,KAAKiV,QAAQgB,GACbjW,KAAKkV,WAAW,UAAUrI,YAAeO,aACzCpN,KAAKwC,UAAW,EACT,EACX,CACA2G,YAAY1E,GACRzE,KAAKwC,UAAW,EAEhB,IAAImU,EAAS,aAETlS,EAAKxE,OACL0W,EAAS3W,KAAKoF,QAAQX,EAAKxE,KAAK6F,OAChC9F,KAAKqD,QAAQJ,MAAM0E,IAAIlD,EAAKxE,KAAK6F,QAIrC,GAAe,OADArB,EAAK6I,OAEhB,MAAM,cAAyB,iBAAkB7I,GAErD,MAAMqK,EAAO9O,KAAKoF,QAAQ,MACpBwR,EAAc,oBAAoB5W,KAAKqC,SACvCwU,EAAa,kBAAkB7W,KAAKqC,SACpC8T,EAAU,eAAenW,KAAKqC,SAC9B+T,EAAY,mBAAmBpW,KAAKqC,SAE1CrC,KAAKgI,SAASvD,EAAK6I,QAAQ,GAE3B,MAAM6F,EACF,eAAGyD,2BACAT,sBAEWS,4BAAsCA,qBAA+BA,QAAkBA,cAE9FA,yBAAmCR,OAAeQ,sCAEpDC,mBAA4BD,iDAE5BC,OAAgBA,4BAAqCD,+BACrDR,OAAeS,iBAExB7W,KAAKkV,WAAW/B,GAChB,MAAMkD,EAAarW,KAAKwV,UAAU,WAC5BkB,EAAW1W,KAAKwV,UAAU,SAC1BS,EAAWjW,KAAKwV,UAAU,WAChCxV,KAAKuU,WAAa0B,EAClBjW,KAAKsU,cAAgBoC,EACrB1W,KAAKiV,QAAQoB,GACb,MAAMS,EAAY,OAAOF,4BAEhBD,OAAY7H,OAAU8H,KAAeT,sBAA4BA,kCAElDU,KAAcV,OAAaQ,OAAY7H,OAAU8H,wBAYzE,OAVA5W,KAAKkV,WAAW,GAAG4B,uBAA+BX,OAAaC,OAC/DpW,KAAKiV,QAAQjV,KAAK+V,gBAAgBE,IAElCjW,KAAKyM,YAAYhI,EAAK6C,OAEtBtH,KAAKiV,QAAQyB,GACb1W,KAAKkV,WAAW,GAAGiB,OACnBnW,KAAKiV,QAAQjV,KAAK4V,SAASS,IAC3BrW,KAAKiV,QAAQgB,GACbjW,KAAKwC,UAAW,EACT,EACX,CACA+G,UAAU9E,GACNzE,KAAKwC,UAAW,EAChB,MAAMwT,EAAahW,KAAKwV,UAAU,UAC5BS,EAAWjW,KAAKwV,UAAU,UAYhC,OAXAxV,KAAKsU,cAAgB0B,EACrBhW,KAAKuU,WAAa0B,EAClBjW,KAAKiV,QAAQe,GAEbhW,KAAKgI,SAASvD,EAAKkJ,MAAM,GACzB3N,KAAKiV,QAAQjV,KAAK+V,gBAAgBE,IAElCjW,KAAKyM,YAAYhI,EAAK6C,OACtBtH,KAAKiV,QAAQjV,KAAK4V,SAASI,IAC3BhW,KAAKiV,QAAQgB,GACbjW,KAAKwC,UAAW,EACT,EACX,CAMA6G,cAAc0N,EAAOC,GACjB,MAAO,EACX,CAKA1N,uBAAuB7E,EAAMwD,GACzB,MAAMyF,EAAO,IAAK1N,KAAK2D,oBACnBc,EAAKgJ,QAAQ,UACbzN,KAAK2D,mBAAmBC,eAExBa,EAAKgJ,QAAQ,aACbzN,KAAK2D,mBAAmBG,qBAExBW,EAAKgJ,QAAQ,WACbzN,KAAK2D,mBAAmBE,iBAE5B7D,KAAKgI,SAASvD,EAAK6C,MAAOW,GAC1BjI,KAAK2D,mBAAqB+J,CAC9B,CACAjE,WAAWhF,GAEPzE,KAAKgI,SAASvD,EAAKqB,OAAO,GAC1B,MAAMmR,EAAW,eAAejX,KAAKqC,SACrCrC,KAAKkV,WAAW,GAAG+B,yBACnB,MAAMhB,EAAWjW,KAAKwV,UAAU,aAC1B3H,EAAQpJ,EAAKoJ,MACnB,IAAK,IAAIpG,EAAI,EAAGA,EAAIoG,EAAMxI,OAAQoC,IAAK,CACnC,MAAMsG,EAASF,EAAMpG,GAAG,GACxB,GAAoB,QAAhBsG,EAAO7N,KACPF,KAAKyM,YAAYoB,EAAMpG,GAAG,QAEzB,CACD,MAAMyP,EAAYlX,KAAKwV,UAAU,UACjCxV,KAAKgI,SAAS+F,GAAQ,GACtB/N,KAAKkV,WAAW,yCAAyC+B,MACzDjX,KAAKiV,QAAQjV,KAAK+V,gBAAgBmB,IAClClX,KAAKyM,YAAYoB,EAAMpG,GAAG,IAC1BzH,KAAKiV,QAAQjV,KAAK4V,SAASK,IAC3BjW,KAAKiV,QAAQiC,EACjB,CACJ,CAGA,OAFAlX,KAAKiV,QAAQgB,GACbjW,KAAKkV,WAAW,UAAU+B,cACnB,EACX,CACA1I,wBAAwBW,EAAUC,EAAM1K,GACpC,MAAMkK,EAAO,CAAC,EACd,IAAK,IAAIlH,EAAI,EAAGA,EAAIhD,EAAKiK,KAAKrJ,OAAQoC,IAAK,CACvC,MAAMoH,EAAMpK,EAAKiK,KAAKjH,GACZ,IAANA,GAAmB,OAARoH,GACX7O,KAAKkV,WAAW,sCAChBvG,EAAKG,MAAO,GAIZ9O,KAAKgI,SAAS6G,GAAK,EAE3B,CACA,OAAOF,CACX,CACAI,gBACI,MAAMC,EAAI,GACV,IAAK,MAAM/O,KAAQD,KAAKyC,OAAOwM,SAC3BD,EAAEnN,KAAK5B,GAEX,OAAO+O,CACX,CAOAmG,SAAS1Q,EAAMwD,GACX,IAAIkP,GAAW,EACXZ,GAAc,EAClB,MAAMrH,EAAW,iBAAoBzK,EAAKxE,MACpCwK,EAAMzK,KAAKmK,QAAQ+E,GACzB,GAAY,OAARzE,EACA,MAAM,cAAyB,MAAMyE,uBAAgClP,KAAK+O,gBAAgBhD,KAAK,MAAQ,IAAKtH,GAEhH,IAAI0K,EACJ,GAAc,IAAV1E,EAAIhD,EAAS,CAEb,GADA0H,EAAOnP,KAAKyC,OAAOwE,QAAQiI,GACT,SAAdC,EAAKjP,KACL,MAAM,cAAyB,IAAIgP,gBAAwBzK,GAE/D0S,GAAW,CACf,MAEIhI,EAAOnP,KAAKgC,aAAakN,QAEZrP,IAATsP,IACAoH,GAAc,EACdpH,EAAO,CAAEC,aAAa,IAI9B,GAAkB,iBAAd3K,EAAKvE,KACL,OAAOuK,EAAIH,GAIf,MAAMgF,EAAWtP,KAAKuO,wBAAwBW,EAAUC,EAAM1K,GAE9DzE,KAAKmC,YAAYwF,IAAIuH,GACrB,IAAIM,EAAY,GACZC,EAAU,GAEVhL,EAAKiL,SACLF,GAAa,6BACbC,GAAW,+BAGXH,EAASR,OACTU,GAAa,cAGjB,MAAM4H,EAAW3S,EAAKiK,KAAKrJ,OAE3B,IAAIY,EAAO,GACPkR,GACAlR,GAAQuJ,EACRvJ,GAAQ,wDAAwDmR,MAAaA,QAE7EnR,GAAQ,oBACRA,GAAQ,eAAewE,EAAIH,yBACtB6E,EAAKC,cACNnJ,GAAQ,4BACJgC,IACAhC,GAAQ,6BAGhBA,GAAQwJ,EACRzP,KAAKkV,WAAWjP,KAGZsQ,EACAvW,KAAKiV,QAAQ,IAAIhB,EAASJ,EAAiB3E,IAG3ClP,KAAKiV,QAAQ,IAAIhB,EAASL,EAAc1E,IAEvCjH,GACDjI,KAAKkV,WAAW,sCAG5B,CACApM,WAAWrE,GACPzE,KAAKgI,SAASvD,EAAK+L,MAAM,GACzBxQ,KAAKgI,SAASvD,EAAK8L,OAAO,EAC9B,CACA1H,OAAOpE,GACH,MAAMgM,EAAS,CACX,IAAK,OACLC,GAAI,KACJC,MAAO,KACP,MAAO,MACP,MAAO,MACPC,GAAI,IACJC,GAAI,IACJC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,GAAI,KACJC,QAAS,KACTC,QAAS,KACTC,SAAU,MACV,IAAK,KAEHC,EAAK5M,EAAK6M,SAGhBtR,KAAKgI,SAASvD,EAAK+L,MAAM,GAEzBxQ,KAAKgI,SAASvD,EAAK8L,OAAO,GAE1B,IAAItK,EAAO,iEAEX,GAAW,MAAPoL,EACApL,GAAQ,qCAEP,CAEDA,GAAQ,mBADIwK,EAAOY,IAAOA,YAE9B,CAEApL,GAAQ,6BAA6BoL,MACrCrR,KAAKkV,WAAWjP,EACpB,CACAyC,QAAQjE,GACJ,IAAIwB,EAAO,GAEQ,OAAfxB,EAAKqB,MAEL9F,KAAKkV,WAAW,sCAIhBlV,KAAKgI,SAASvD,EAAKqB,OAAO,GAG9B,MAAM7F,EAAOwE,EAAKxE,KAAK6F,MACjB2E,EAAMzK,KAAKmK,QAAQlK,GACzB,GAAY,OAARwK,EACAzK,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACvBgG,EAAO,GAAGjG,KAAKoF,QAAQnF,4BAEtB,CAED,GAAID,KAAK4C,YAAY6H,EAAIhD,GAAGrE,SAASgH,IAAInK,GACrC,MAAM,cAAyB,MAAMA,+BAAmCwE,GAE5EwB,EAAO,GAAGwE,EAAIH,uBAClB,CACAtK,KAAKkV,WAAWjP,EAAO,QAC3B,CACAuC,gBAAgB/D,GACO,OAAfA,EAAKqB,MACL9F,KAAKkV,WAAW,0BAGhBlV,KAAKgI,SAASvD,EAAKqB,OAAO,GAE9B,MAAM7F,EAAOwE,EAAKxE,KAAK6F,MACjB2L,EAAQhN,EAAKiN,QAEnB,GAAI1R,KAAKqD,QAAQJ,MAAMmH,IAAInK,GACvB,MAAM,cAAyB,GAAGwR,KAASxR,iBAAqBwE,GAQpE,OANAzE,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GAET,OAAVwR,GACAzR,KAAKqD,QAAQD,SAASuE,IAAI1H,GAE9BD,KAAKkV,WAAW,GAAGlV,KAAKoF,QAAQnF,wBACzB,EACX,CAEAwI,oBAAoBhE,GAChB,MAAMgN,EAAQhN,EAAKiN,QACA,OAAfjN,EAAKqB,MACL9F,KAAKkV,WAAW,0BAGhBlV,KAAKgI,SAASvD,EAAKqB,OAAO,GAE9B,MAAM+G,EAAO,cAAc7M,KAAKqC,SAChCrC,KAAKqC,SACLrC,KAAKkV,WAAW,GAAGrI,6BAAgCA,0BAA6BA,MAASA,QACzF,IAAK,MAAMwK,KAAW5S,EAAKxB,MAAO,CAC9B,MAAMhD,EAAOoX,EAAQvR,MAErB,GAAI9F,KAAKqD,QAAQJ,MAAMmH,IAAInK,GACvB,MAAM,cAAyB,GAAGwR,KAASxR,iBAAqBwE,GAGpEzE,KAAKqD,QAAQJ,MAAM0E,IAAI1H,GACT,OAAVwR,GACAzR,KAAKqD,QAAQD,SAASuE,IAAI1H,GAE9B,MAAMqX,EAAQtX,KAAKoF,QAAQnF,GAC3BD,KAAKkV,WAAW,GAAGoC,KAASzK,UAChC,CAEA,OADA7M,KAAKkV,WAAW,UAAUrI,cACnB,EACX,CACAtE,WAAW9D,GACP,IAAIqB,EAAQ,GAAKrB,EAAKqB,MACtB,MAAM6L,EAAOlN,EAAKkN,KAKlB,GAJA7L,EAAQA,EAAM/F,QAAQ,MAAO,QAC7B+F,EAAQA,EAAM/F,QAAQ,KAAM,OAC5B+F,EAAQA,EAAM/F,QAAQ,MAAO,OAC7B+F,EAAQA,EAAM/F,QAAQ,MAAO,OAChB,OAAT4R,EACA,MAAM,IAAIrS,MAAM,wCAGpB,OADAU,KAAKkV,WAAW,qBAAqBpP,eAC9B,IAAMA,EAAQ,GACzB,CACAoE,cAAczF,GACV,MAAM8S,EAAcvX,KAAKwV,UAAU,aAC7BS,EAAWjW,KAAKwV,UAAU,cAEhCxV,KAAKiV,QAAQ,IAAIhB,EAASF,EAAawD,EAAYzR,QACnD9F,KAAKgI,SAASvD,EAAK6C,OAAO,GAC1BtH,KAAKiV,QAAQjV,KAAK4V,SAASK,IAC3BjW,KAAKiV,QAAQsC,GACbvX,KAAKgI,SAASvD,EAAKoN,UAAU,GAC7B7R,KAAKiV,QAAQgB,EACjB,EAGJ,GAA2B,iBAAhB,WAAyD,iBAArBuB,UAAe,MAAgB,CAE1E,MAAMC,EAAQD,UAAUC,MACpBA,EAAMC,kBACND,EAAMC,iBAAiB,SAAUvD,EAEzC,C,+OCvnDO,MAAMwD,EAAW,CACpB,OAAQ,MAAO,MAAO,MAAO,MAAO,MACpC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG1BC,EAAmB,CAC5B,QAAS,OAAQ,MAAO,KAAM,KAAM,MAG3BC,EAAiB,CAC1B,KAAM,MAAO,KAAM,MAAO,OAKjBC,EAAc,CAAC,EAC5BF,EAAiBxH,SAAQpJ,IACrB2Q,EAAS9V,KAAKmF,GACd8Q,EAAY9Q,IAAQ,CAAI,IAKrB,MAAM+Q,EAAgB,CAAC,EAC9BF,EAAezH,SAAQpJ,IACnB2Q,EAAS9V,KAAKmF,GACd+Q,EAAc/Q,IAAQ,CAAI,IAG9B2Q,EAASK,MAAK,CAACxS,EAAG4C,IAAMA,EAAE/C,OAASG,EAAEH,SAE9B,MAAM4S,EAAS,IAAIC,OAAO,YAAcP,EAAS5L,KAAK,KAAO,I,6BCApE,UApCiB,CACb,IAAK,IACL,MAAO,IACP,IAAK,IACL,MAAO,IACP,KAAM,KACN,MAAO,MACP,MAAO,MACP,MAAO,MACP,KAAM,KACN,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,KAAM,KACN,SAAU,SACV,eAAgB,eAChB,IAAK,MACL,OAAQ,OACR,OAAQ,OACR,IAAK,IACL,IAAK,IACL,KAAM,KACN,KAAM,KACN,QAAS,QACT,MAAO,MACP,KAAM,OACN,KAAM,OACN,KAAM,WACN,UAAW,UACX,SAAU,SACV,UAAW,UACX,QAAS,QACT,KAAM,K,yKClCV,uBACI,KAAQ,CACJ7L,KAAM,QACN4F,MAAO,CACHqS,WAAY,gBACZC,cAAe,QACfC,YAAa,CAAC,QAAS,QAAS,WAChCC,YAAa,WAGrB,MAAO,CACHpY,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAEVA,EAAIC,SAAU,EACdD,EAAIE,KAAK,aAAeF,EAAItZ,QAC5BsZ,EAAIE,KAAK,eAAiBF,EAAIrF,YAC9BqF,EAAIG,gBAAkB,GAEtBH,EAAII,UAAY,SAAUC,EAASC,GAC/B,GAAuB,mBAAZD,EACP,OAAOA,EAEX,GAAIL,EAAIO,SAASF,GACb,OAAOL,EAAIO,SAASF,GAGxB,GAAIA,EAAQrT,QAAQ,OAAS,EAAG,CAC5B,IAAK,IAAIkC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMsR,EAAWR,EAAI1V,WAAW4E,GAChC,GAAIsR,EAASH,GACT,OAAOG,EAASH,EAExB,CACA,OAAOC,CACX,CAEA,MAAMG,EAAUT,EAAIU,UAAYV,EAAIU,UAAY,CAACV,EAAIW,WACrD,IAAK,MAAMC,KAAWH,EAAS,CAC3B,MAAMI,EAAQD,EAAU,KAAOP,EAC/B,IAAK,IAAInR,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAM4R,EAAQd,EAAI1V,WAAW4E,GAC7B,GAAI4R,EAAMD,GACN,OAAOC,EAAMD,EAErB,CACJ,CACA,OAAOP,CACX,EAEAN,EAAIe,WAAa,SAAUV,EAASW,GAChC,MAAMlT,EAAIkS,EAAII,UAAUC,GACxB,GAAiB,mBAANvS,EACP,OAAOA,EAEX,MAAM,IAAI/G,MAAM,IAAIia,uBACxB,EAEAhB,EAAIiB,OAAS,SAAUrK,EAAMsK,GAEzB,MAAMC,EAAKnB,EAAIE,KAAKtJ,GACpB,GAAIuK,EACA,OAAOA,EAAGC,MAAM3Z,KAAMyZ,GAG1B,MAAMpT,EAAIkS,EAAII,UAAUxJ,GACxB,IAAK9I,EACD,MAAM,IAAI/G,MAAM,qBAAuB6P,GAE3C,OAAO9I,EAAEsT,MAAM3Z,KAAMyZ,EACzB,EAEAlB,EAAIqB,UAAY,GAChBrB,EAAIsB,WAAa,GAEjB,MAAMC,EAAKvB,EAAIwB,QAAW/E,IACtBA,EAAI,KAAOA,GACFgF,UAAUhF,EAAE3P,OAAS,GAElCkT,EAAI0B,OAAS,CAACjF,EAAGkF,KACb,IAAIC,EAAQ,GACZ,IAAK,IAAI1S,EAAI,EAAGA,EAAIyS,EAAMzS,IACtB0S,GAAS,IAGb,OADAnF,EAAImF,EAAQnF,GACHgF,UAAUhF,EAAE3P,OAAS6U,EAAK,EAEvC3B,EAAI6B,aAAgB1S,GACTA,EAAE2S,cAAgB,IAAMP,EAAGpS,EAAE4S,WAAa,GAAK,IAAMR,EAAGpS,EAAE6S,WAErEhC,EAAIiC,aAAgB9S,GACToS,EAAGpS,EAAE+S,YAAc,IAAMX,EAAGpS,EAAEgT,cAAgB,IAAMZ,EAAGpS,EAAEiT,cAEpEpC,EAAIqC,iBAAmB,CAAClT,EAAGmT,KACvB,MAAMC,EAAUpT,EAAE2S,cAAgB,IAAMP,EAAGpS,EAAE4S,WAAa,GAAK,IAAMR,EAAGpS,EAAE6S,WACpEQ,EAAUjB,EAAGpS,EAAE+S,YAAc,IAAMX,EAAGpS,EAAEiT,cAAgB,IAAMb,EAAGpS,EAAEgT,cACzE,OAAIG,EAAIG,MAAM,iCACHF,EAAU,IAAMC,EAEvBF,EAAIG,MAAM,mBACHF,EAEPD,EAAIG,MAAM,iBACHD,EAEJD,EAAU,IAAMC,CAAO,EAElCxC,EAAI0C,WAAcjG,IAId,IAFAA,GAAK,GAAKA,GAAGjV,QAAQ,cAAe,KAE9Bib,MAAM,oBACR,OAAO,IAAI1I,KAAqB,IAAhB4I,WAAWlG,IAG/B,GAAIA,EAAEgG,MAAM,oBAAqB,CAC7B,MAAMtT,EAAI,IAAI4K,KACR9M,GAAKwP,EAAI,MAAMvP,MAAM,KAC3B,OAAO,IAAI6M,KAAK5K,EAAE2S,cAAe3S,EAAE4S,WAAY5S,EAAE6S,UAAWnZ,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAC3G,CAEAwP,EAAIA,EAAEjV,QAAQ,UAAW,KAEzB,MAAMyF,GADNwP,GAAK,UACOvP,MAAM,KAClB,OAAO,IAAI6M,KAAKlR,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAAM,EAAGpE,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAAKpE,SAASoE,EAAE,IAAI,EAGvH+S,EAAI4C,YAAc,GAElB5C,EAAI6C,IAAM,CAACtV,EAAOuV,KACd,QAAqB,IAAVvV,EAAuB,CAC9B,MAAMwV,EAAK/C,EAAItU,WAAWoX,GAC1B9C,EAAIgD,OAAO1Q,KAAKyQ,EAAG7b,IAAK,CAAEC,KAAM4b,EAAG5b,KAAMC,KAAM2b,EAAG3b,MACtD,CACA,OAAOmG,CAAK,CAEpB,GAEJ,OAAQ,CACJ5F,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACNA,EAAIiB,QACJjB,EAAIiB,OAAO,UAAW,CAACjB,IAEL,WAAlBA,EAAIiD,WACJjD,EAAIkD,YAAYlD,GAEpBA,EAAIE,KAAK,QAAU,EACvB,GAGJ,YAAa,CAAEvY,KAAM,QAAS4F,MAAO,KACrC,cAAe,CAAE5F,KAAM,QAAS4F,MAAO,KACvC,WAAY,CAAE5F,KAAM,QAAS4F,MAAO,iBACpC,SAAU,CAAE5F,KAAM,QAAS4F,MAAO,KAClC,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,GAC9B,MAAO,CAAE5F,KAAM,QAAS4F,MAAO,GAC/B,IAAK,CAAE5F,KAAM,QAAS4F,MAAO,GAC7B,IAAK,CAAE5F,KAAM,QAAS4F,MAAO,GAC7B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,GAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,GAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,GAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,MAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,MAC9B,MAAO,CAAE5F,KAAM,QAAS4F,MAAO,KAC/B,OAAQ,CAAE5F,KAAM,QAAS4F,MAAO,KAChC,OAAQ,CAAE5F,KAAM,QAAS4F,MAAO,KAChC,QAAS,CAAE5F,KAAM,QAAS4F,MAAO,KACjC,GAAM,CAAE5F,KAAM,QAAS4F,OAAO,GAC9B,GAAM,CAAE5F,KAAM,QAAS4F,OAAO,GAC9B,QAAS,CAAE5F,KAAM,QAAS4F,MAAO,GACjC,KAAQ,CAAE5F,KAAM,QAAS4F,OAAO,GAChC,MAAS,CAAE5F,KAAM,QAAS4F,OAAO,GACjC,GAAM,CAAE5F,KAAM,QAAS4F,MAAO0M,KAAKkJ,IACnC,IAAK,CAAExb,KAAM,QAAS4F,MAAO,IAC7B,KAAQ,CAAE5F,KAAM,QAAS4F,MAAO,MAChC,UAAa,CAAE5F,KAAM,QAAS4F,WAAOjG,GACrC,MAAO,CAAEK,KAAM,QAAS4F,WAAOjG,GAC/B,WAAY,CAAEK,KAAM,QAAS4F,MAAO,IACpC,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,IAC9B,OAAQ,CAAE5F,KAAM,QAAS4F,MAAO,IAChC,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,IAC9B,GAAM,CAAE5F,KAAM,QAAS4F,MAAO,MAC9B,GAAM,CAAE5F,KAAM,QAAS4F,MAAO,MAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO6V,KAC9B,MAAO,CAAEzb,KAAM,QAAS4F,MAAO8V,KAC/B,MAAO,CACH1b,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,MAAO,EACX,GAEJ,MAAO,CACHpG,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,MAAO,CAAC,CACZ,GAEJ,QAAS,CACLpG,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,MAAO,CAAC,CACZ,GAEJ,UAAW,CACPpG,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,OAAOA,EAAIiB,OAAO,QAAS,CAACjB,GAChC,GAGJ,KAAM,CACFrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEbvD,EAAIuD,EAAI4C,YAAcnG,EACtBuD,EAAI4C,YAAc,GAElB5C,EAAI1V,WAAW,GAAG,SAAYmS,EAAI,KAClCuD,EAAIgD,OAAOM,KAAK,SAAU7G,EAAI,GAClC,EACA5F,aAAa,GAEjB,OAAQ,CACJlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACbA,EAAI4C,aAAenG,CACvB,EACA5F,aAAa,GAEjB,OAAQ,CACJlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb8U,gBAAgB,EAChBnM,MAAM,EACNrJ,GAAI,YAAad,GACb,MAAM+S,EAAM/S,EAAEyG,MACRlJ,EAAIyC,EAAEuG,KAAK,IACjBwM,EAAIiB,OAAO,KAAM,CAACzW,EAAGwV,GACzB,EACAnJ,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb8U,gBAAgB,EAChBnM,MAAM,EACNrJ,GAAI,YAAad,GACb,MAAM+S,EAAM/S,EAAEyG,MACRlJ,EAAIyC,EAAEuG,KAAK,IACjBwM,EAAIiB,OAAO,OAAQ,CAACzW,EAAGwV,GAC3B,EACAnJ,aAAa,GAEjB,OAAQ,CAAElP,KAAM,QAAS4F,MAAO,IAChC,UAAW,CACP5F,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACVA,EAAI1V,WAAW,GAAG,QAAU,EAChC,EACAuM,aAAa,GAEjB,IAAK,CACDlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACbA,EAAIgD,OAAOM,KAAK,SAAU7G,EAAI,GAClC,EACA5F,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV+G,QAAQC,IAAIhH,EAChB,EACA5F,aAAa,GAGjB,IAAK,CACDlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB8U,gBAAgB,EAChBnM,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MAAO,CAAC,MAChB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GAEb,GAAiB,iBAAN5C,EACP,OAAOA,EAAI4C,EAGf,GAAiB,iBAAN5C,EAAgB,CACvB,IAAIwP,EAAI,GACR,IAAK,IAAIvN,EAAI,EAAGA,EAAIrG,SAASgH,GAAIX,IAC7BuN,GAAKxP,EAET,OAAOwP,CACX,CAEA,GAAIxP,aAAagC,MAAO,CACpB,MAAMyU,EAAK,GACX,IAAK,IAAIxU,EAAI,EAAGA,EAAIrG,SAASgH,GAAIX,IAC7BwU,EAAGpa,QAAQ2D,GAEf,OAAOyW,CACX,CACA,OAAOzW,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAQpE,SAASoE,GAAK,GAAM,CAChC,GAEJ,KAAM,CACFtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAQpE,SAASoE,GAAK,GAAM,CAChC,GAEJ,KAAM,CACFtF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOA,EAAIA,CACf,GAEJ,MAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAOoK,KAAK0J,IAAI1W,EAAG4C,EACvB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,GAAK4C,CAChB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,GAAK4C,CAChB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,EAAI4C,CACf,GAEJ,IAAK,CACDlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,IAAM4C,CACjB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAO5C,IAAM4C,CACjB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GAEb,GAAmB,iBAAR,EAAkB,CAGzB,OAFctD,KAAKC,UAAUS,KACfV,KAAKC,UAAUqD,EAEjC,CACA,OAAO5C,IAAM4C,CACjB,GAEJ,MAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GAEb,GAAmB,iBAAR,EAAkB,CAGzB,OAFctD,KAAKC,UAAUS,KACfV,KAAKC,UAAUqD,EAEjC,CACA,OAAO5C,IAAM4C,CACjB,GAEJ,MAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,QAC5B2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGyC,EAAG4C,GAChB,OAAQ5C,GAAKzC,GAAOA,GAAKqF,CAC7B,GAEJ,OAAQ,CACJlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB8U,gBAAgB,EAChBnM,MAAM,EACNrJ,GAAI,SAAU8B,KAAM5C,GAGhB,OAFAA,EAAEyG,MACFzG,EAAE3D,KAAKuG,GACA5C,EAAE2W,QAAO,CAACC,EAAG7G,IAAM6G,EAAI7G,GAClC,GAGJ,OAAQ,CACJrV,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACLA,EAAI8D,YACL9D,EAAI8D,UAAY,GAEpB9D,EAAI8D,WACR,EACAjN,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACLA,EAAI8D,YACL9D,EAAI8D,UAAY,GAEpB9D,EAAI8D,WACR,EACAjN,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACLA,EAAI8D,YACL9D,EAAI8D,UAAY,GAEpB9D,EAAI8D,WACR,EACAjN,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACVA,EAAI8D,UAAY,CACpB,EACAjN,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACVA,EAAI8D,WAAa,GACrB,EACAjN,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAIV,OAHKA,EAAI8D,YACL9D,EAAI8D,UAAY,GAEb9D,EAAI8D,SACf,GAGJ,OAAQ,CACJnc,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EAENrJ,GAAI,SAAUgW,IAAK/D,KAGf,OAAOgE,KAAKD,IAChB,GAEJ,aAAc,CACVpc,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUrG,EAAMsY,GAChB,OAAOA,EAAII,UAAU1Y,EAAM,KAC/B,GAEJ,SAAU,CACNC,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACfV,GAAI,SAAUrG,KAAMyO,MAMhB,GAHoB,iBAATzO,OACPA,KAAOsc,KAAKtc,OAEI,mBAATA,KACP,MAAM,IAAIX,MAAM,mBAQpB,OALMoP,gBAAgBlH,QAClBkH,KAAO,CAACA,OAILzO,KAAK0Z,MAAM,KAAMjL,KAC5B,GAEJ,MAAS,CACLxO,KAAM,OACN8G,KAAM,GACNT,SAAS,EACTD,GAAIkW,iBAEJ,EACApN,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACfT,SAAS,EACTD,GAAIkW,eAAgBnW,EAAGqI,EAAM6J,GAKzB,GAHiB,iBAANlS,IACPA,EAAIkS,EAAIe,WAAWjT,EAAG,cAEpBA,aAAaoW,UACf,MAAM,IAAInd,MAAM,8CAGpB,aAAa+G,KAAKqI,EACtB,GAEJ,WAAY,CACRxO,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBV,GAAI,SAAUoW,IAAKC,EAAGjO,MAMlB,GAHmB,iBAARgO,MACPA,IAAMH,KAAKG,MAEI,iBAARA,IACP,MAAM,IAAIpd,MAAM,wBAWpB,MARiB,mBAANqd,IACPA,EAAID,IAAIC,IAGNjO,gBAAgBlH,QAClBkH,KAAO,CAACA,OAGLiO,EAAEhD,MAAM+C,IAAKhO,KACxB,GAEJ,OAAQ,CACJxO,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUL,EAAMsS,GAChB,GAAsB,WAAlBA,EAAIiD,UACJ,MAAM,IAAIlc,MAAM,2BAEpBiZ,EAAI1V,WAAW,GAAG,QAAU,GAC5B0V,EAAI9V,OAAOma,MAAM3W,EAAMsS,EAAIW,UAAW,CAAE2D,UAAU,EAAOC,UAAU,IACnE,MAAMC,EAAMxE,EAAI1V,WAAW,GAAG,QAAU,GAIxC,OAHIka,GACAxE,EAAIgD,OAAO1I,MAAMkK,GAEdA,CACX,GAEJ,QAAS,CACL7c,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACbV,GAAI,SAAUL,EAAMsS,GAChB,GAAsB,WAAlBA,EAAIiD,UACJ,MAAM,IAAIlc,MAAM,4BAEpBiZ,EAAI9V,OAAOma,MAAM3W,EAAMsS,EAAIW,UAAW,CAAE2D,UAAU,EAAOG,UAAU,IACnE,MAAMD,EAAMxE,EAAI1V,WAAW,GAAG,QAAU,GAIxC,OAHIka,GACAxE,EAAIgD,OAAO1I,MAAMkK,GAEdA,CACX,GAEJ,KAAM,CACF7c,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGkS,GAGb,GAAiB,mBAANlS,EACP,OAAOA,EAAEkS,GAGb,GAAiB,iBAANlS,EAAgB,CACvB,MAAM4W,EAAK1E,EAAIe,WAAWjT,EAAG,MAC7B,GAAkB,mBAAP4W,EACP,OAAOA,EAAG1E,EAElB,CAEA,OAAOlS,CACX,GAEJ,SAAU,CACNnG,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGkS,GAKb,GAJiB,iBAANlS,IACPA,EAAIkS,EAAIe,WAAWjT,EAAG,WAGtB6W,aAAeA,YAAYC,IAAK,CAChC,MAAMC,EAAKF,YAAYC,MACvB9W,EAAEkS,GAEF,OADW2E,YAAYC,MACVC,CACjB,CACK,CACD,MAAMA,EAAK9K,KAAK6K,MAChB9W,EAAEkS,GAEF,OADWjG,KAAK6K,MACHC,CACjB,CACJ,GAEJ,IAAK,CACDld,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAGV,GADAA,EAAIE,KAAK4E,YAAa,GACjB9E,EAAIE,KAAKxT,SACV,MAAM,IAAI3F,MAAM,UAExB,GAGJ,QAAS,CACLY,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,cAAeA,CACnB,GAEJ,OAAU,CACN7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,cAAeA,CACnB,GAEJ,QAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOkI,OAAOlI,EAClB,GAEJ,MAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOkI,OAAOlI,EAClB,GAEJ,OAAQ,CACJ7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO3B,SAAS2B,EACpB,GAEJ,MAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO3B,SAAS2B,EACpB,GAEJ,OAAQ,CACJ7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOmY,WAAWnY,EACtB,GAEJ,QAAW,CACP7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOmY,WAAWnY,EACtB,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO3B,SAAS2B,EACpB,GAEJ,MAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOmY,WAAWnY,EACtB,GAEJ,QAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOua,MAAMva,EACjB,GAEJ,OAAQ,CACJ7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GAEV,OAAOwa,OAAOD,MAAMva,EACxB,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOpE,SAASoE,GAAGkP,SAAS,GAChC,GAEJ,OAAQ,CACJxU,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KACpB2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGmF,GACb,OAAO9G,SAAS2B,GAAG2R,SAASxM,EAChC,GAEJ,KAAM,CACFhI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO3B,SAAS2B,GAAG2R,SAAS,EAChC,GAEJ,OAAQ,CACJxU,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGwV,GACb,MAAMvD,EAAI5T,SAAS2B,GAAG2R,SAAS,GAC/B6D,EAAIiB,OAAO,KAAM,CAACxE,EAAGuD,GACzB,GAEJ,IAAO,CACHrY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtB2I,MAAM,EACNrJ,GAAI,SAAU0I,EAAGwO,EAAGpV,GAChB,MAAM0R,EAAM/W,IACR,MAAM0a,EAAK,KAAQrc,SAAS,GAAK2B,GAAG2R,SAAS,IAC7C,OAAO+I,EAAGzD,UAAUyD,EAAGpY,OAAS,EAAGoY,EAAGpY,OAAO,EAEjD,MAAO,IAAMyU,EAAG9K,GAAK8K,EAAG0D,GAAK1D,EAAG1R,EACpC,GAGJ,OAAQ,CACJlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,GAAK4C,CACjB,GAEJ,QAAS,CACLlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,GAAK4C,CACjB,GAEJ,QAAS,CACLlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAASA,EAAS,EAAJ,CAClB,GAGJ,GAAM,CACF7C,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,EAAI4C,CAChB,GAEJ,IAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,EAAI4C,CAChB,GAEJ,IAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,EAAI4C,CAChB,GAEJ,IAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAASA,CACb,GAEJ,QAAW,CACP7C,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,GAAK4C,CACjB,GAEJ,QAAW,CACPlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,GAAK4C,CACjB,GAEJ,SAAY,CACRlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQ5C,IAAM4C,CAClB,GAGJ,MAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAKyE,MAAMkE,KAGJlE,MAAMkE,KAAK3I,GAAGsC,OAFV4F,OAAOlI,GAAGsC,MAGzB,GAEJ,OAAQ,CACJnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GACb,OAAOyF,OAAO+J,GAAGzP,QAAQC,GAAK,CAClC,GAEJ,IAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAKkI,OAAOyS,cAGLzS,OAAOyS,cAAc3a,GAFjBkI,OAAO0S,aAAa5a,EAGnC,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAKkI,OAAO2S,UAAUC,YAGf5S,OAAOlI,GAAG8a,YAAY,GAFlB5S,OAAOlI,GAAG+a,WAAW,EAGpC,GAEJ,OAAQ,CACJ5d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,MAChC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGvN,EAAGjC,GACZiC,GAAK,IACLA,EAAI,GAER,MAAMsW,EAAK9S,OAAO+J,GAGlB,OAFY+I,EAAG/D,UAAU,EAAGvS,EAAI,GAEnBjC,EADDuY,EAAG/D,UAAUvS,EAAI,EAEjC,GAEJ,OAAQ,CACJvH,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5B2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG4C,GAChB,IAAIyH,EAAM5E,OAAO+J,GACjBnF,EAAMA,EAAImK,UAAUxU,GACpB,MAAMiF,EAAMoF,EAAItK,QAAQ6C,GACxB,OAAa,IAATqC,EACO,EAEJA,EAAM,EAAIjF,CACrB,GAEJ,KAAM,CACFtF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GACb,OAAIwP,aAAaxN,OACbwN,EAAEnT,KAAK2D,GACAwP,GAEJ/J,OAAO+J,GAAK/J,OAAOzF,EAC9B,GAEJ,OAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GACb,OAAIwP,aAAaxN,OACbwN,EAAEnT,KAAK2D,GACAwP,GAEJ/J,OAAO+J,GAAK/J,OAAOzF,GAAK,IACnC,GAEJ,QAAS,CACLtF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAKyE,MAAMkE,KAGJlE,MAAMkE,KAAK3I,GAFPkI,OAAOlI,GAAG0C,MAAM,GAG/B,GAEJ,QAAS,CACLvF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGib,GACb,IAAIhJ,EAAI,GACR,IAAK,IAAIvN,EAAI,EAAGA,EAAIuW,EAAKvW,IACrBuN,GAAK/J,OAAOlI,GAEhB,OAAOiS,CACX,GAEJ,OAAQ,CACJ9U,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GAGb,OAFAwP,EAAI,GAAKA,GAEAvP,MADTD,EAAI,GAAKA,GACSH,OAAS,CAC/B,GAEJ,IAAO,CACHnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5B2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAGwY,GAEhB,OADAA,EAAMA,GAAO,EACL/S,OAAO+J,GAAGgF,UAAUxU,EAAI,EAAGA,EAAIwY,EAAM,EACjD,GAEJ,OAAQ,CACJ9d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,IAAK,KACjC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAGwY,GAEhB,OADAA,EAAMA,GAAO,EACL/S,OAAO+J,GAAGgF,UAAUxU,EAAI,EAAGA,EAAIwY,EAAM,EACjD,GAEJ,KAAQ,CACJ9d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,OACpB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGgJ,GACb,OAAQ/S,OAAO+J,GAAGgF,UAAU,EAAGgE,EACnC,GAEJ,QAAS,CACL9d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,KAC1B2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGgJ,GACb,OAAQ/S,OAAO+J,GAAGgF,UAAU,EAAGgE,EACnC,GAEJ,MAAS,CACL9d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,OACpB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGgJ,GAEb,OADAhJ,EAAI,GAAKA,GACCgF,UAAUhF,EAAE3P,OAAS2Y,EAAKhJ,EAAE3P,OAC1C,GAEJ,QAAS,CACLnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,KAC1B2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGgJ,GAEb,OADAhJ,EAAI,GAAKA,GACCgF,UAAUhF,EAAE3P,OAAS2Y,EAAKhJ,EAAE3P,OAC1C,GAEJ,KAAM,CACFnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GACb,OAAQ,GAAKwP,GAAGvP,MAAM,GAAKD,EAC/B,GAEJ,QAAS,CACLtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GAGb,MAAMiC,GAFNuN,EAAI,GAAKA,GAEGzP,QADZC,EAAI,GAAKA,GAET,OAAIiC,EAAI,EACG,CAACuN,GAEL,CAACA,EAAEgF,UAAU,EAAGvS,GAAIuN,EAAEgF,UAAUvS,EAAIjC,EAAEH,QACjD,GAEJ,KAAM,CACFnF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,KAAM,MAC3B2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG+S,GAEhB,MAAM9Q,GADNuN,EAAI/J,OAAO+J,IACCzP,QAAQC,GACpB,OAAIiC,EAAI,GACJ8Q,EAAIE,KAAK,MAAQ,GACVzD,IAEXuD,EAAIE,KAAK,MAAQzD,EAAEgF,UAAUvS,EAAIjC,EAAEH,QAC5B2P,EAAEgF,UAAU,EAAGvS,GAC1B,GAEJ,OAAQ,CACJvH,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,KAAM,IAAK,KAClC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG4C,GAIhB,OAHA4M,EAAI,GAAKA,GACKgF,UAAU,EAAGxU,EAAI,GACnBwP,EAAEgF,UAAWxU,EAAI,EAAI4C,EAErC,GAGJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MACtC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG4C,GAChB,OAAO6C,OAAO+J,GAAGvP,MAAMD,GAAGuG,KAAK3D,EACnC,GAEJ,MAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,CAAC,IAAK,MAChC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG4C,GAEhB,OAAO6C,OAAO+J,GAAGjV,QAAQyF,EAAG4C,EAChC,GAEJ,MAAO,CACHlI,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GAEV,OADAA,EAAI/J,OAAO+J,GAAGjV,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAEtD,GAEJ,OAAQ,CACJG,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GAEV,OADAA,EAAI/J,OAAO+J,GAAGjV,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAEtD,GAGJ,QAAS,CACLG,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGiJ,aACrB,GAEJ,QAAS,CACL/d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGkJ,aACrB,GAEJ,QAAS,CACLhe,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GAOV,OALW/J,OAKO,GAAK+J,GALAjV,QAAQ,oBAAoB,SAAU4c,GACrD,MAAMwB,EAAMxB,EAAEmB,WAAW,GAAK,GAC9B,OAAO7S,OAAO0S,aAAaQ,EAC/B,GAGR,GAEJ,SAAU,CACNje,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GAOV,OALW/J,OAKO,GAAK+J,GALAjV,QAAQ,oBAAoB,SAAU4c,GACrD,MAAMwB,EAAMxB,EAAEmB,WAAW,GAAK,GAC9B,OAAO7S,OAAO0S,aAAaQ,EAC/B,GAGR,GAEJ,SAAU,CACNje,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGjV,QAAQ,gBAAgB,SAAUgD,GAC/C,OAAOkI,OAAO0S,aAAa5a,EAAE+a,WAAW,GAAK,MACjD,GACJ,GAEJ,SAAU,CACN5d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGjV,QAAQ,gBAAgB,SAAUgD,GAC/C,OAAOkI,OAAO0S,aAAa5a,EAAE+a,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACR5d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGjV,QAAQ,gBAAgB,SAAUgD,GAC/C,OAAOkI,OAAO0S,aAAa5a,EAAE+a,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACR5d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAO/J,OAAO+J,GAAGjV,QAAQ,oBAAoB,SAAUgD,GACnD,OAAOkI,OAAO0S,aAAa5a,EAAE+a,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACR5d,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEb,MAAM6F,EAAO7F,EAAIE,KAAK,UAChB4F,EAAO9F,EAAIE,KAAK,UAChB6F,EAAO/F,EAAIE,KAAK,YAChB8F,EAAOhG,EAAIE,KAAK,YACtB,IAAI5I,EAAM,GACNpI,EAAI,EACR,KAAOA,EAAIuN,EAAE3P,QAAQ,CAEjB,MAAMmZ,EAAKxJ,EAAEgF,UAAUvS,EAAGA,EAAI,GACxBgX,EAAKF,EAAKhZ,QAAQiZ,GACxB,GAAIC,GAAM,EAAG,CACT5O,GAAOyO,EAAKI,OAAOD,EAAK,GACxBhX,GAAK,EACL,QACJ,CAEA,MAAM8N,EAAIP,EAAE0J,OAAOjX,GACbS,EAAImW,EAAK9Y,QAAQgQ,GACnBrN,GAAK,GACL2H,GAAOuO,EAAKM,OAAOxW,GACnBT,MAGJoI,GAAO0F,EACP9N,IACJ,CACA,OAAOoI,CACX,GAEJ,WAAY,CACR3P,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEb,MAAM6F,EAAO7F,EAAIE,KAAK,UAChB4F,EAAO9F,EAAIE,KAAK,UAChB6F,EAAO/F,EAAIE,KAAK,YAChB8F,EAAOhG,EAAIE,KAAK,YACtB,OAAOzD,EAAEvP,MAAM,IAAI3C,KAAKyS,IACpB,MAAM9N,EAAI2W,EAAK7Y,QAAQgQ,GACvB,GAAI9N,GAAK,EACL,OAAO4W,EAAKK,OAAOjX,GAEvB,MAAMkX,EAAIL,EAAK/Y,QAAQgQ,GACvB,OAAIoJ,GAAK,EACEJ,EAAKvE,UAAc,EAAJ2E,EAAW,EAAJA,EAAQ,GAElCpJ,CAAC,IACTxJ,KAAK,GACZ,GAEJ,OAAQ,CACJ7L,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACb,IAAIxQ,EAASiN,EAGb,OAFAjN,EAASwQ,EAAIiB,OAAO,WAAY,CAACzR,EAAQwQ,IACzCxQ,EAASwQ,EAAIiB,OAAO,WAAY,CAACzR,EAAQwQ,IAClCxQ,CACX,GAEJ,OAAQ,CACJ7H,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACb,IAAIxQ,EAASiN,EAGb,OAFAjN,EAASwQ,EAAIiB,OAAO,WAAY,CAACzR,EAAQwQ,IACzCxQ,EAASwQ,EAAIiB,OAAO,WAAY,CAACzR,EAAQwQ,IAClCxQ,CACX,GAEJ,SAAU,CAAE7H,KAAM,QAAS4F,MAAO,gEAClC,WAAY,CAAE5F,KAAM,QAAS4F,MAAO,6BACpC,SAAU,CAAE5F,KAAM,QAAS4F,MAAO,kEAClC,WAAY,CAAE5F,KAAM,QAAS4F,MAAO,sDAEpC,YAAa,CACT5F,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO+B,KAAKC,UAAUhC,EAC1B,GAEJ,cAAe,CACX7C,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAO+B,KAAKC,UAAUhC,EAAG,KAAM,EACnC,GAEJ,WAAY,CACR7C,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,OAAOlQ,KAAK8Z,MAAM5J,EACtB,GAGJ,UAAW,CACP9U,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MACzB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,IAAIsG,EACJ,MAAMxY,GAAK,GAAK+B,GAAG4S,MAAM,yBAGrB6D,EADM,OAANxY,EACK,IAAI6R,OAAO9P,EAAG,KAGd,IAAI8P,OAAO7R,EAAE,GAAIA,EAAE,IAE5B,MAAMyY,EAAKvG,EAAI1V,WAAW,GAAG,SAAW,GAClC8Z,EAAI1R,OAAOzF,GAAGwV,MAAM6D,GAC1B,IAAI9W,EAAS4U,EACb,GAAIkC,EAAGE,aAGF,GAAIpC,GAEDA,EAAEtX,OAAS,EAAG,CACd0C,EAAS4U,EAAE,GACX,IAAK,IAAIlV,EAAI,EAAGA,EAAIkV,EAAEtX,OAAQoC,IAC1BqX,EAAGrX,EAAI,GAAKkV,EAAElV,EAEtB,CAEJ,OAAOM,CACX,GAEJ,QAAS,CAAE7H,KAAM,QAAS4F,MAAO,IACjC,SAAU,CACN5F,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,IAAK,MACtC2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG4C,GAChB,IAAIyW,EACJ,MAAMxY,EAAIb,EAAEwV,MAAM,wBAOlB,OALI6D,EADM,OAANxY,EACK,IAAI6R,OAAO1S,EAAG,KAGd,IAAI0S,OAAO7R,EAAE,GAAIA,EAAE,IAErB4E,OAAO+J,GAAGjV,QAAQ8e,EAAIzW,EACjC,GAEJ,SAAU,CACNlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,GACb,IAAIqZ,EACJ,MAAMxY,EAAIb,EAAEwV,MAAM,wBAOlB,OALI6D,EADM,OAANxY,EACK,IAAI6R,OAAO1S,EAAG,KAGd,IAAI0S,OAAO7R,EAAE,GAAIA,EAAE,IAErB4E,OAAO+J,GAAGvP,MAAMoZ,EAC3B,GAGJ,OAAQ,CACJ3e,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOkI,OAAOlI,GAAGhD,QAAQ,2BAA4B,MACzD,GAEJ,MAAO,CACHG,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGyC,GACbzC,EAAIkI,OAAOlI,GACX,IAAIic,EAAI,IACR,IAAK,IAAIvX,EAAI,EAAGA,EAAIjC,EAAGiC,IACnBuX,GAAK,KAETxZ,EAAIpE,SAASoE,IACLzC,EAAEsC,SACNG,EAAIzC,EAAEsC,QAEV,MAAM2P,EAAIgK,EAAI/T,OAAOlI,GACrB,OAAOiS,EAAEgF,UAAUhF,EAAE3P,OAASG,EAAGwP,EAAE3P,OACvC,GAEJ,MAAO,CACHnF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUvD,EAAGyC,GACbzC,EAAIkI,OAAOlI,GACX,IAAIic,EAAI,IACR,IAAK,IAAIvX,EAAI,EAAGA,EAAIjC,EAAGiC,IACnBuX,GAAK,KAETxZ,EAAIpE,SAASoE,IACLzC,EAAEsC,SACNG,EAAIzC,EAAEsC,QAEV,MAAM2P,EAAIgK,EAAI/T,OAAOlI,GACrB,OAAOiS,EAAEgF,UAAUhF,EAAE3P,OAASG,EAAGwP,EAAE3P,OACvC,GAGJ,QAAS,CACLnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,MAAMO,EAAItK,OAAO+J,GAAG8I,WAAW,GAC/B,OAAQvI,GAAK,OAAUA,GAAK,KAChC,GAEJ,SAAU,CACNrV,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,MAAMO,EAAItK,OAAO+J,GAAG8I,WAAW,GAC/B,OAAQvI,GAAK,OAAUA,GAAK,KAChC,GAEJ,OAAQ,CACJrV,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,MAAMO,EAAItK,OAAO+J,GAAG0J,OAAO,GAC3B,OAASnJ,GAAK,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,GACxD,GAEJ,OAAQ,CACJrV,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GAEV,OAAsC,OAA/B/J,OAAO+J,GAAGgG,MADC,kFAEtB,GAGJ,OAAQ,CACJ9a,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGwP,GAEb,GAAIxP,aAAagC,MACb,OAAOhC,EAAEuG,KAAK,GAAKiJ,GAGvB,OADW/J,OAAOzF,GAAGC,MAAM,MACjBsG,KAAK,GAAKiJ,EACxB,GAEJ,OAAQ,CACJ9U,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGwP,GACb,OAAIxP,aAAagC,MACNhC,EAAED,QAAQyP,IAEb,CACZ,GAEJ,QAAS,CACL9U,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAIA,aAAagC,MACNhC,EAAEH,OAETG,aAAatC,OACNA,OAAOC,KAAKqC,GAAGH,OAEnB,CACX,GAEJ,MAAO,CACHnF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG+S,GACb,OAAOA,EAAIiB,OAAO,QAAS,CAAChU,GAChC,GAEJ,OAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAGuN,GAChB,GAAIxP,aAAagC,MACb,OAAOhC,EAAEuP,OAAOtN,EAAG,EAAGuN,GAE1B,MAAM,IAAI1V,MAAM,sBACpB,GAEJ,SAAU,CACNY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAGW,GAChB,GAAI5C,aAAagC,OAASY,aAAaZ,MAAO,CAC1C,IAAK,IAAImX,EAAI,EAAGA,EAAIvW,EAAE/C,OAAQsZ,IAC1BnZ,EAAEuP,OAAOtN,EAAIkX,EAAG,EAAGvW,EAAEuW,IAEzB,OAAOnZ,CACX,CACA,MAAM,IAAIlG,MAAM,wBACpB,GAEJ,QAAS,CACLY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,GAAIA,aAAagC,MACb,OAAOhC,EAAEwS,OAEb,MAAM,IAAI1Y,MAAM,wBACpB,GAEJ,UAAW,CACPY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,GAEV,GAAIA,aAAagC,MACb,OAAOhC,EAAEwS,MAAK,CAACxS,EAAG4C,IACP8S,WAAW1V,GAAK0V,WAAW9S,KAG1C,MAAM,IAAI9I,MAAM,0BACpB,GAEJ,YAAa,CACTY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGb,EAAG+S,GAChB,IAAI0G,EAAQ5Y,EAIZ,GAHiB,iBAANA,IACP4Y,EAAQ1G,EAAIe,WAAWjT,EAAG,cAE1Bb,aAAagC,MACb,OAAOhC,EAAEwS,KAAKiH,GAElB,MAAM,IAAI3f,MAAM,4BACpB,GAEJ,OAAQ,CACJY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,GAAIA,aAAagC,MACb,OAAOhC,EAAE0Z,UAEb,MAAM,IAAI5f,MAAM,wBACpB,GAEJ,UAAW,CACPY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,GAAIA,aAAagC,MAAO,CACpB,IAAK,IAAIC,EAAIjC,EAAEH,OAAS,EAAGoC,EAAI,EAAGA,IAAK,CACnC,MAAMuH,EAAIwD,KAAKC,MAAMD,KAAKE,UAAYjL,EAAI,IACpC0X,EAAM3Z,EAAEiC,GACdjC,EAAEiC,GAAKjC,EAAEwJ,GACTxJ,EAAEwJ,GAAKmQ,CACX,CACA,OAAO3Z,CACX,CACA,MAAM,IAAIlG,MAAM,0BACpB,GAEJ,OAAQ,CACJY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAG8Q,GAChB,OAAOA,EAAIiB,OAAO,OAAQ,CAAChU,EAAGiC,EAAG8Q,GACrC,GAEJ,OAAQ,CACJrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,GAEb,GAAIjC,aAAagC,MAAO,CACpB,MAAMY,EAAI5C,EAAEuP,OAAOtN,EAAG,GACtB,OAAIW,aAAaZ,MACNY,EAAE,GAEN,IACX,CAEA,KAAI5C,aAAatC,QAAyB,iBAAR,GAQlC,MAAM,IAAI5D,MAAM,mBAPZ,GAAIkG,EAAEiC,GAAI,CACN,MAAM2X,EAAM5Z,EAAEiC,GAEd,cADOjC,EAAEiC,GACF2X,CACX,CAIR,GAEJ,OAAQ,CACJlf,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,MACvB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAGuW,GAChB,GAAIxY,aAAagC,MACb,OAAOhC,EAAEuP,OAAOtN,EAAGuW,GAEvB,MAAM,IAAI1e,MAAM,kBACpB,GAEJ,QAAS,CACLY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,OACb2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,GAAIA,aAAagC,MACb,OAAOhC,EAAEyG,MAEb,MAAM,IAAI3M,MAAM,mBACpB,GAEJ,SAAU,CACNY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,OAAOA,EAAIiB,OAAO,OAAQ,CAAChU,EAAG4C,EAAGmQ,GACrC,GAEJ,OAAQ,CACJrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,GAAI5C,aAAagC,MAEb,OADAhC,EAAE3D,KAAKuG,GACA5C,EAEX,MAAM,IAAIlG,MAAM,kBACpB,GAEJ,OAAQ,CACJY,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOV,KAAK8Z,MAAM9Z,KAAKC,UAAUS,GACrC,GAEJ,MAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAI5C,aAAagC,MACNhC,EAAE6Z,OAAOjX,GAEbtD,KAAK8Z,MAAM9Z,KAAKC,UAAUS,GACrC,GAEJ,QAAS,CACLtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOA,EAAE2W,QAAO,CAACmD,EAAGC,IAAM/M,KAAKgN,IAAIF,EAAGC,IAC1C,GAEJ,QAAS,CACLrf,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOA,EAAE2W,QAAO,CAACmD,EAAGC,IAAM/M,KAAKiN,IAAIH,EAAGC,IAC1C,GAEJ,OAAQ,CACJrf,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,GAAIA,aAAagC,MAAO,CACpB,IAAIzE,EAAI,EAQR,OAPAyC,EAAE4K,SAASlI,IACP,MAAMwX,EAAKxE,WAAWhT,GAClBoV,MAAMoC,KAGV3c,GAAK2c,EAAE,IAEJ3c,CACX,CACA,MAAM,IAAIzD,MAAM,2BACpB,GAEJ,OAAQ,CACJY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAGkX,GAChB,KAAMnZ,aAAagC,OACf,MAAM,IAAIlI,MAAM,6BAEpB,MAAM6f,EAAM3Z,EAAEiC,GAGd,OAFAjC,EAAEiC,GAAKjC,EAAEmZ,GACTnZ,EAAEmZ,GAAKQ,EACA3Z,CACX,GAEJ,SAAU,CACNtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MAAO,CAAC,MAAO,KAAM,MAC7B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,MAAML,EAAS,GACf,IAAK,IAAIN,EAAIjC,EAAGiC,GAAKW,EAAGX,IACpBM,EAAOlG,KAAK4F,GAEhB,OAAOM,CACX,GAEJ,SAAU,CACN7H,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,OACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,MAAML,EAAS,GACf,IAAK,IAAIN,EAAI,EAAGA,EAAIW,EAAGX,IACnBM,EAAOlG,KAAK2D,GAEhB,OAAOuC,CACX,GAEJ,SAAU,CACN7H,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGb,EAAG+S,GAChB,IAAI0G,EAAQ5Y,EACK,iBAANA,IACP4Y,EAAQ1G,EAAIe,WAAWjT,EAAG,WAE9B,MAAM0B,EAAS,GACf,IAAK,MAAMmE,KAAK1G,EACZuC,EAAOlG,KAAKod,EAAM/S,IAEtB,OAAOnE,CACX,GAEJ,QAAS,CACL7H,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGb,EAAG+S,GAChB,OAAOA,EAAIiB,OAAO,SAAU,CAACnT,EAAGb,EAAG+S,GACvC,GAEJ,SAAU,CACNrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,SACzB2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGb,EAAG+S,GAChB,IAAI0G,EAAQ5Y,EACK,iBAANA,IACP4Y,EAAQ1G,EAAIe,WAAWjT,EAAG,WAE9B,MAAM0B,EAAS,GACf,IAAK,MAAMmE,KAAK1G,EACRyZ,EAAM/S,IACNnE,EAAOlG,KAAKqK,GAGpB,OAAOnE,CACX,GAGJ,OAAQ,CACJ7H,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG0O,GACb,KAAM1O,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAepB,OAbAkG,EAAEwS,MAAK,CAAC9P,EAAGyU,KACP,MAAMgD,EAAKzX,EAAEgM,GACP0L,EAAKjD,EAAEzI,GACb,OAAIyL,IAAOC,EACA,EAEFD,EAAKC,GACF,EAGD,CACX,IAEGpa,CACX,GAEJ,SAAU,CACNtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG0O,GACb,KAAM1O,aAAagC,OACf,MAAM,IAAIlI,MAAM,6BAOpB,OALAkG,EAAEwS,MAAK,CAAC9P,EAAGyU,IACIzU,EAAEgM,GACFyI,EAAEzI,KAGV1O,CACX,GAEJ,UAAW,CACPtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,MAC5B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG0O,EAAIc,GACjB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,8BAEpB,OAAOkG,EAAEqP,QAAQS,GAAQrK,OAAOqK,EAAIpB,IAAK3O,QAAQyP,IAAM,GAC3D,GAEJ,cAAe,CACX9U,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,MAC5B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG0O,EAAIc,GACjB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,gCAEpB,OAAOkG,EAAEqP,QAAQS,GAAQA,EAAIpB,KAAQc,GACzC,GAEJ,MAAO,CACH9U,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MACnC2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGqa,EAAKvK,EAAKN,GACvB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,0BAEpB,IAAK,IAAImI,EAAI6N,EAAK7N,EAAIjC,EAAEH,OAAQoC,IAC5B,GAAIjC,EAAEiC,GAAGoY,KAAS7K,EACd,OAAOvN,EAGf,OAAQ,CACZ,GAEJ,MAAO,CACHvH,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,KAAMA,aAAagC,OACf,MAAM,IAAIlI,MAAM,0BAEpB,IAAIwgB,EAAO,EACX,IAAK,IAAIrY,EAAI,EAAGA,EAAIjC,EAAEH,OAAQoC,IACtBjC,EAAEiC,GAAGpC,OAASya,IACdA,EAAOta,EAAEiC,GAAGpC,QAGpB,OAAOya,CACX,GAEJ,MAAO,CACH5f,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,KAAMA,aAAagC,OACf,MAAM,IAAIlI,MAAM,0BAEpB,OAAOkG,EAAEH,MACb,GAEJ,QAAS,CACLnF,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG+S,GACb,KAAM/S,aAAagC,OACf,MAAM,IAAIlI,MAAM,4BAEpB,MAAMwgB,EAAOvH,EAAIiB,OAAO,MAAO,CAAChU,IAC1Bua,EAAOva,EAAEH,OACToF,EAAM,GACZ,IAAK,IAAIuE,EAAI,EAAGA,EAAI8Q,EAAM9Q,IAAK,CAC3B,MAAMsG,EAAM,GACZ7K,EAAI5I,KAAKyT,GACT,IAAK,IAAIC,EAAI,EAAGA,EAAIwK,EAAMxK,IACtBD,EAAIC,QAAkB1V,IAAZ2F,EAAE+P,GAAGvG,GAAoBxJ,EAAE+P,GAAGvG,GAAK,EAErD,CACA,OAAOvE,CACX,GAEJ,OAAQ,CACJvK,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG+S,GACb,KAAM/S,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAEpB,MAAMwgB,EAAOvH,EAAIiB,OAAO,MAAO,CAAChU,IAC1Bua,EAAOva,EAAEH,OACToF,EAAM,GACZ,IAAK,IAAIuE,EAAI,EAAGA,EAAI8Q,EAAM9Q,IAAK,CAC3B,MAAMsG,EAAM,GACZ7K,EAAI5I,KAAKyT,GACT,IAAK,IAAIC,EAAI,EAAGA,EAAIwK,EAAMxK,IACtBD,EAAIC,GAAK/P,EAAEua,EAAOxK,EAAI,GAAGvG,EAEjC,CACA,OAAOvE,CACX,GAEJ,QAAS,CACLvK,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,GACb,KAAMjC,aAAagC,OACf,MAAM,IAAIlI,MAAM,4BAEpB,MAAMmL,EAAM,GACNtH,EAAO,CAAC,EACd,IAAK,IAAI+E,EAAI,EAAGA,EAAI1C,EAAEH,OAAQ6C,IAAK,CAC/B,MAAM8X,EAAIxa,EAAE0C,GAAGT,QACX5H,IAAcsD,EAAK6c,KACnB7c,EAAK6c,IAAK,EACVvV,EAAI5I,KAAK2D,EAAE0C,IAEnB,CACA,OAAOuC,CACX,GAEJ,OAAQ,CACJvK,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,GACb,KAAMjC,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAGpB,OADYkG,EAAE1C,KAAIwS,GAAOA,EAAI7N,IAEjC,GAEJ,OAAQ,CACJvH,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,EAAGuN,GAChB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAEpB,MAAMmL,EAAM,GAUZ,OATAjF,EAAE4K,SAAQ,CAACkF,EAAK2K,KACZ,IAAIC,EAAK,GACLzY,EAAI,IACJyY,EAAKA,EAAGb,OAAO/J,EAAI6K,MAAM,EAAG1Y,KAEhCyY,EAAGre,KAAKmT,EAAEiL,IACVC,EAAKA,EAAGb,OAAO/J,EAAI6K,MAAM1Y,IACzBgD,EAAI5I,KAAKqe,EAAG,IAETzV,CACX,GAEJ,OAAQ,CACJvK,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,GACb,KAAMjC,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAEpB,MAAMmL,EAAM,GAMZ,OALAjF,EAAE4K,SAASkF,IACP,MAAM4K,EAAK5K,EAAI6K,MAAM,GACrBD,EAAGnL,OAAOtN,EAAG,GACbgD,EAAI5I,KAAKqe,EAAG,IAETzV,CACX,GAEJ,OAAQ,CACJvK,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGiC,GACb,KAAMjC,aAAagC,OACf,MAAM,IAAIlI,MAAM,2BAEpB,IAAI8gB,EAAM,EAEV,OADA5a,EAAE4K,SAASkF,IAAU8K,GAAO9K,EAAI7N,EAAE,IAC3B2Y,CACX,GAEJ,QAAS,CACLlgB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,KAAM,CAAC,MAC9B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG8P,EAAKuK,EAAK7K,GACvB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,4BAEpB,MAAMuf,EAAK,IAAI3G,OAAOlD,GACtB,IAAK,IAAIvN,EAAI6N,EAAK7N,EAAIjC,EAAEH,OAAQoC,IAAK,CACjC,MAAM9H,EAAO6F,EAAEiC,GACf,GAAIoX,EAAGta,KAAK5E,EAAKkgB,IACb,OAAOpY,CAEf,CACA,OAAQ,CACZ,GAEJ,cAAe,CACXvH,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGqa,EAAK7K,GAClB,KAAMxP,aAAagC,OACf,MAAM,IAAIlI,MAAM,kCAEpB,MAAMuf,EAAK,IAAI3G,OAAOlD,GAChBvK,EAAM,GACZ,IAAK,IAAIhD,EAAI,EAAGA,EAAIjC,EAAEH,OAAQoC,IAAK,CAC/B,MAAM6N,EAAM9P,EAAEiC,GACVoX,EAAGta,KAAK+Q,EAAIuK,KACZpV,EAAI5I,KAAKyT,EAAI6K,MAAM,GAE3B,CACA,OAAO1V,CACX,GAGJ,SAAU,CACNvK,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,MAAMrC,EAAO,GACb,GAAIqC,aAAatC,OAAQ,CACrB,IAAK,MAAMkD,KAAOZ,EACdrC,EAAKtB,KAAKuE,GAEd,OAAOjD,CACX,CACA,GAAIqC,aAAagC,MAAO,CACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIjC,EAAEH,OAAQoC,IAC1BtE,EAAKtB,KAAK4F,GAEd,OAAOtE,CACX,CACA,MAAM,IAAI7D,MAAM,2BACpB,GAEJ,SAAU,CACNY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGY,GACb,GAAIZ,aAAatC,OAIb,OAHIkD,KAAOZ,UACAA,EAAEY,GAENZ,EAEX,MAAM,IAAIlG,MAAM,2BACpB,GAEJ,SAAU,CACNY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGY,GACb,OAAOA,KAAOZ,CAClB,GAGJ,WAAY,CACRtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG+S,GACb,OAAOA,EAAIiB,OAAO,SAAU,CAAChU,EAAG+S,GACpC,GAEJ,WAAY,CACRrY,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,MAAMsI,EAAO,GACb,GAAItI,aAAatC,OAAQ,CACrB,IAAK,MAAMkD,KAAOZ,EACdsI,EAAKjM,KAAK2D,EAAEY,IAEhB,OAAO0H,CACX,CACA,MAAM,IAAIxO,MAAM,6BACpB,GAEJ,WAAY,CACRY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGY,EAAKmS,GAClB,OAAOA,EAAIiB,OAAO,SAAU,CAAChU,EAAGY,EAAKmS,GACzC,GAEJ,WAAY,CACRrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAGY,GACb,OAAOA,KAAOZ,CAClB,GAGJ,KAAM,CACFtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,SAAU4B,EAAGqQ,GACb,OAAO,IAAI8H,SAAQ,CAACC,EAASC,KACzB,IAEI,MAAMC,EAAUC,YAAW,KAEvB,MAAMhZ,EAAI8Q,EAAIqB,UAAUrU,QAAQib,GAC5B/Y,GAAK,GACL8Q,EAAIqB,UAAU7E,OAAOtN,EAAG,GAG5B6Y,GAAS,GACM,IAAhBpF,WAAWhT,IAEdqQ,EAAIqB,UAAU/X,KAAK2e,EAIvB,CAFA,MAAOE,GACHH,EAAOG,EACX,IAER,EACAtR,aAAa,GAEjB,MAAO,CACHlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgBtU,EAAGqQ,GACnB,MAAM6D,EAAI7D,EAAIiB,OAAO,KAAM,CAACtR,EAAGqQ,IAC/B,aAAa6D,CACjB,EACAhN,aAAa,GAEjB,QAAS,CACLlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgBtU,EAAGqQ,GACnB,MAAM6D,EAAI7D,EAAIiB,OAAO,KAAM,CAACtR,EAAGqQ,IAC/B,aAAa6D,CACjB,EACAhN,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUD,EAAG6B,EAAGqQ,GAEC,iBAANlS,IACPA,EAAIkS,EAAIe,WAAWjT,EAAG,OAG1B,MAAMma,EAAUC,YAAW,KAEvB,MAAMhZ,EAAI8Q,EAAIqB,UAAUrU,QAAQib,GAC5B/Y,GAAK,GACL8Q,EAAIqB,UAAU7E,OAAOtN,EAAG,GAEN,WAAlB8Q,EAAIiD,YACJjD,EAAIoI,QAAS,GAEjB,IACIta,EAAEma,EAASjI,EAQf,CANA,MAAOrM,GACH,IAAIwU,EAAMxU,EACJA,aAAa,mDACfwU,EAAM,IAAI,iDAAiBxU,EAAGqM,EAAI1V,WAAW,GAAGlD,OAEpD4Y,EAAIgD,OAAOxa,MAAM2f,EACrB,IACe,IAAhBxF,WAAWhT,IAGd,OAFAqQ,EAAIqB,UAAUgH,QAAQJ,GACtBjI,EAAIE,KAAK,MAAQ+H,EACVA,CACX,GAEJ,KAAM,CACFtgB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUD,EAAG6B,EAAGqQ,GAEC,iBAANlS,IACPA,EAAIkS,EAAIe,WAAWjT,EAAG,OAG1B,MAAMma,EAAUK,aAAY,KACF,WAAlBtI,EAAIiD,YACJjD,EAAIoI,QAAS,GAEjBta,EAAEma,EAASjI,EAAI,GACA,IAAhB2C,WAAWhT,IAId,OAFAqQ,EAAIsB,WAAW+G,QAAQJ,GACvBjI,EAAIE,KAAK,MAAQ+H,EACVA,CACX,GAEJ,WAAY,CACRtgB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KACf2I,MAAM,EACNrJ,GAAI,SAAUD,EAAG6B,EAAGqQ,GAChB,OAAOA,EAAIiB,OAAO,KAAM,CAACnT,EAAG6B,EAAGqQ,GACnC,GAEJ,SAAU,CACNrY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUka,EAASjI,GACnB,MAAM9Q,EAAI8Q,EAAIsB,WAAWtU,QAAQib,GACjC,GAAI/Y,GAAK,EAGL,OAFA8Q,EAAIsB,WAAW9E,OAAOtN,EAAG,GACzBqZ,cAAcN,IACP,EAEX,MAAM7B,EAAIpG,EAAIqB,UAAUrU,QAAQib,GAChC,OAAI7B,GAAK,IACLpG,EAAIqB,UAAU7E,OAAO4J,EAAG,GACxBoC,aAAaP,IACN,EAGf,EACApR,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAEV,IAAK,IAAI9Q,EAAI,EAAGA,EAAI8Q,EAAIsB,WAAWxU,OAAQoC,IAAK,CAC5C,MAAM+Y,EAAUjI,EAAIsB,WAAWpS,GAC/BqZ,cAAcN,EAClB,CACAjI,EAAIsB,WAAa,GAEjB,IAAK,IAAIpS,EAAI,EAAGA,EAAI8Q,EAAIqB,UAAUvU,OAAQoC,IAAK,CAC3C,MAAM+Y,EAAUjI,EAAIqB,UAAUnS,GAC9BsZ,aAAaP,EACjB,CACAjI,EAAIqB,UAAY,EACpB,EACAxK,aAAa,GAGjB,QAAS,CAAElP,KAAM,QAAS4F,MAAO,CAAC,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,gBAC3M,IAAK,CACD5F,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,MAAMwT,EAAM5R,IACRA,EAAI,KAAOA,GACF8R,UAAU9R,EAAE7C,OAAS,EAAG6C,EAAE7C,QAEjCqC,EAAI,IAAI4K,KACd,OAAOwH,EAAGpS,EAAE+S,YAAc,IAAMX,EAAGpS,EAAEiT,cAAgB,IAAMb,EAAGpS,EAAEgT,aACpE,GAEJ,SAAU,CACNxa,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,MAAM6W,EAAM,IAAI7K,KAChB,OAAOE,KAAKC,MAAM0K,EAAI5K,UAAY,IACtC,GAEJ,YAAa,CACTrS,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WAEA,OADY,IAAIgM,MACLC,SACf,GAEJ,KAAM,CACFrS,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,OAAOA,EAAI6B,aAAa,IAAI9H,KAChC,GAEJ,KAAM,CACFpS,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM7Q,EAAI4K,KAAK6K,MAAQ,MACvB,OAAO5E,EAAI6B,aAAa,IAAI9H,KAAK5K,GACrC,GAEJ,KAAM,CACFxH,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM7Q,EAAI4K,KAAK6K,MAAQ,MACvB,OAAO5E,EAAI6B,aAAa,IAAI9H,KAAK5K,GACrC,GAEJ,KAAM,CACFxH,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQ+H,aACxB,GAEJ,KAAM,CACFna,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQ+H,cAAgB,CACxC,GAEJ,KAAM,CACFna,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQ+H,cAAgB,CACxC,GAEJ,KAAM,CACFna,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQgI,WAAa,CACrC,GAEJ,KAAM,CACFpa,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQgI,WAAa,CACrC,GAEJ,KAAM,CACFpa,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,OAAO,IAAKgM,MAAQgI,UACxB,GAEJ,KAAM,CACFpa,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACb,MAAMyI,EAAIzI,EAAI0C,WAAWjG,GACzB,MAAO,UAAU0J,OAAOsC,EAAEC,SAAW,EACzC,GAEJ,SAAU,CACN/gB,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,MAAMxP,EAAIwP,EAAEvP,MAAM,KAElB,OADU,IAAI6M,KAAK9M,EAAE,GAAIA,EAAE,GAAK,EAAGA,EAAE,IAC5Byb,QACb,GAEJ,aAAc,CACV/gB,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEb,OADUA,EAAI0C,WAAWjG,GAChBzC,UAAY,GACzB,GAEJ,WAAY,CACRrS,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEb,OADUA,EAAI0C,WAAWjG,GAChBzC,UAAY,GACzB,GAEJ,OAAQ,CACJrS,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,OACb2I,MAAM,EACNrJ,GAAI,SAAU4a,EAAI3I,GACd,MAAM7Q,EAAS,IAALwZ,EACV,OAAO3I,EAAIqC,iBAAiB,IAAItI,KAAK5K,GAAI,sBAC7C,GAEJ,SAAU,CACNxH,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU4a,EAAIrG,EAAKtC,GACnB,MAAM7Q,EAAI6Q,EAAI0C,WAAWiG,GAsBzB,OArBArG,EAAMA,EAAI9a,QAAQ,kDAAmD4c,IACjE,OAAQA,GACJ,IAAK,OAAQ,OAAOjV,EAAE2S,cACtB,IAAK,KAAM,OAAQ,GAAK3S,EAAE2S,eAAeL,UAAU,GACnD,IAAK,KAAM,OAAOzB,EAAIwB,QAAQrS,EAAE4S,WAAa,GAC7C,IAAK,KAAM,OAAO/B,EAAIwB,QAAQrS,EAAE6S,WAChC,IAAK,IAAK,OAAQ7S,EAAE4S,WAAa,EACjC,IAAK,IAAK,OAAQ5S,EAAE6S,UACpB,IAAK,KAAM,OAAOhC,EAAIwB,QAAQrS,EAAE+S,YAChC,IAAK,KAAM,OAAOlC,EAAIwB,QAAQrS,EAAEiT,cAChC,IAAK,KAAM,OAAOpC,EAAIwB,QAAQrS,EAAEgT,cAChC,IAAK,MAAO,OAAOnC,EAAI0B,OAAOvS,EAAEyZ,kBAAmB,GACnD,IAAK,IAAK,OAAQzZ,EAAE+S,WACpB,IAAK,IAAK,OAAQ/S,EAAEiT,aACpB,IAAK,IAAK,OAAQjT,EAAEgT,aACpB,IAAK,IAAK,MAAO,UAAUgE,OAAOhX,EAAEuZ,SAAW,GAC/C,IAAK,MAAO,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOvZ,EAAEuZ,SAAW,GAClF,IAAK,MAAO,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOvZ,EAAE4S,YAE9G,OAAOqC,CAAC,GAGhB,GAEJ,OAAQ,CACJzc,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACb,MAAMyI,EAAIzI,EAAI0C,WAAWjG,GACnBtN,EAAIsZ,EAAEzO,UACZ,IAAK,MAAM6O,KAAO7I,EAAIE,KAAK,SAAU,CACjC,MAAM4I,EAAQD,EAAI,MACZE,EAAK/I,EAAI0C,WAAWmG,EAAI,QAE9B,GADWE,EAAG/O,WACJ7K,EAAG,CACT,IAAI6X,EAAKyB,EAAE3G,cAAgBiH,EAAGjH,cAAiB,EAI/C,OAHU,IAANkF,IACAA,EAAI,KAED8B,EAAQ9B,EAAI,IAAMhH,EAAIwB,QAAQiH,EAAE1G,WAAa,GAAK,IAAM/B,EAAIwB,QAAQiH,EAAEzG,WAAa,GAC9F,CACJ,CACA,MAAM,IAAIjb,MAAM,4BACpB,GAEJ,MAAO,CACHY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK7E,EAAI0C,WAAWzV,GAE1B,OADW+S,EAAI0C,WAAW7S,GACfiS,cAAgB+C,EAAG/C,aAClC,GAEJ,MAAO,CACHna,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK7E,EAAI0C,WAAWzV,GACpB+b,EAAKhJ,EAAI0C,WAAW7S,GAC1B,OAA4B,GAAnBmZ,EAAGlH,cAAqBkH,EAAGjH,YACZ,GAAnB8C,EAAG/C,cAAqB+C,EAAG9C,WACpC,GAEJ,MAAO,CACHpa,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK5K,KAAKgP,KAAKjJ,EAAI0C,WAAWzV,GAAG+M,UAAY,KAC7CgP,EAAK/O,KAAKgP,KAAKjJ,EAAI0C,WAAW7S,GAAGmK,UAAY,KAEnD,OADaC,KAAKgP,MAAMD,EAAKnE,GAAM,MAEvC,GAEJ,MAAO,CACHld,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK5K,KAAKgP,KAAKjJ,EAAI0C,WAAWzV,GAAG+M,UAAY,KAC7CgP,EAAK/O,KAAKgP,KAAKjJ,EAAI0C,WAAW7S,GAAGmK,UAAY,KAEnD,OADcC,KAAKgP,MAAMD,EAAKnE,GAAM,KAExC,GAEJ,KAAM,CACFld,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK5K,KAAKgP,KAAKjJ,EAAI0C,WAAWzV,GAAG+M,UAAY,KAC7CgP,EAAK/O,KAAKgP,KAAKjJ,EAAI0C,WAAW7S,GAAGmK,UAAY,KAEnD,OADYC,KAAKgP,MAAMD,EAAKnE,GAAM,GAEtC,GAEJ,KAAM,CACFld,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1B2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChB,MAAM6E,EAAK5K,KAAKgP,KAAKjJ,EAAI0C,WAAWzV,GAAG+M,UAAY,KAC7CgP,EAAK/O,KAAKgP,KAAKjJ,EAAI0C,WAAW7S,GAAGmK,UAAY,KAEnD,OADYC,KAAKgP,KAAMD,EAAKnE,EAEhC,GAEJ,MAAO,CACHld,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,OAAQ,CAAC,QACnC2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGqZ,EAAMlJ,GACtB,OAAQkJ,GACJ,IAAK,IAAK,OAAOlJ,EAAIiB,OAAO,MAAO,CAAChU,EAAG4C,EAAGmQ,IAC1C,IAAK,IAAK,OAAOA,EAAIiB,OAAO,MAAO,CAAChU,EAAG4C,EAAGmQ,IAC1C,IAAK,IAAK,OAAOA,EAAIiB,OAAO,MAAO,CAAChU,EAAG4C,EAAGmQ,IAC1C,IAAK,KAAM,OAAOA,EAAIiB,OAAO,MAAO,CAAChU,EAAG4C,EAAGmQ,IAC3C,IAAK,IAAK,OAAOA,EAAIiB,OAAO,KAAM,CAAChU,EAAG4C,EAAGmQ,IACzC,IAAK,IAAK,OAAOA,EAAIiB,OAAO,KAAM,CAAChU,EAAG4C,EAAGmQ,IAE7C,MAAM,IAAIjZ,MAAM,iBACpB,GAEJ,OAAQ,CACJY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG+S,GAChB,MAAMlH,EAAK7L,EAAEkZ,OAAO,GACT,MAAPrN,GAAqB,MAAPA,IACd7L,EAAIA,EAAEwU,UAAU,IAEpB,MAAMgH,EAAIzI,EAAI0C,WAAWjG,GACnBiH,GAAMzW,EAAI,QAAQC,MAAM,KAC9B,IAAIic,EAAwB,GAAlBtgB,SAAS6a,EAAG,IAAW,GACX,GAAlB7a,SAAS6a,EAAG,IACZ7a,SAAS6a,EAAG,IACL,MAAP5K,IACAqQ,IAAQ,GAEZ,MAAMC,EAAK,IAAIrP,KAAK0O,EAAEzO,UAAmB,IAANmP,GACnC,OAAOnJ,EAAIqC,iBAAiB+G,EAAI3M,EACpC,GAEJ,OAAQ,CACJ9U,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG+S,GAChB,IAAIlH,EAAK,EACT,MAAMuQ,EAAMpc,EAAEkZ,OAAO,GACT,MAARkD,GAAuB,MAARA,IACfpc,EAAIA,EAAEwU,UAAU,GACJ,MAAR4H,IACAvQ,IAAO,IAGf,MAAM2P,EAAIzI,EAAI0C,WAAWjG,GACnBiH,GAAMzW,EAAI,QAAQC,MAAM,KACxBoc,EAAOzgB,SAAS6a,EAAG,IAAM5K,EACzByQ,EAAO1gB,SAAS6a,EAAG,IAAM5K,EACzB0Q,EAAO3gB,SAAS6a,EAAG,IAAM5K,EAI/B,OAHA2P,EAAEgB,YAAYhB,EAAE3G,cAAgBwH,GAChCb,EAAEiB,SAASjB,EAAE1G,WAAawH,GAC1Bd,EAAEkB,QAAQlB,EAAEzG,UAAYwH,GACjBxJ,EAAIqC,iBAAiBoG,EAAGhM,EACnC,GAEJ,OAAQ,CACJ9U,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGxP,EAAG+S,GAChB,MAAMvJ,GAAK,GAAKxJ,GAAGwV,MAAM,oCACzB,IAAKhM,EACD,MAAM,IAAI1P,MAAM,4CAEpB,OAAQ0P,EAAE,IACN,IAAK,IAAK,OAAOuJ,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,KAAKA,EAAE,SAAUuJ,IAC9D,IAAK,KAAM,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,OAAOA,EAAE,OAAQuJ,IAC/D,IAAK,KAAM,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,SAA0B,EAAjB5N,SAAS4N,EAAE,MAAWuJ,IAC7E,IAAK,IAAK,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,SAASA,EAAE,KAAMuJ,IAC9D,IAAK,KAAM,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,KAAKA,EAAE,SAAUuJ,IAC/D,IAAK,IAAK,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,OAAOA,EAAE,OAAQuJ,IAC9D,IAAK,IAAK,OAAOA,EAAIiB,OAAO,OAAQ,CAACxE,EAAG,GAAGhG,EAAE,SAASA,EAAE,KAAMuJ,IAEtE,GAEJ,UAAW,CACPrY,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WACA,GAAI4W,aAAeA,YAAYC,IAC3B,OAAOD,YAAYC,MAElB,GAAI7K,KAAK6K,IACV,OAAO7K,KAAK6K,MAIZ,OADY,IAAI7K,MACLC,SAEnB,GAGJ,QAAS,CACLrS,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,GACV,MAAM,IAAI1V,MAAM0V,EACpB,GAEJ,QAAW,CACP9U,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACVA,EAAIC,SAAU,EACduD,QAAQC,IAAIzD,EAChB,GAEJ,cAAe,CAAErY,KAAM,QAAS4F,MAAO,GACvC,oBAAqB,CAAE5F,KAAM,QAAS4F,MAAO,IAC7C,eAAgB,CAAE5F,KAAM,QAAS4F,MAAO,GACxC,gBAAmB,CACf5F,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,SAAU6b,EAAS5J,GACnB,OAAO,IAAI8H,SAASC,IAChB,MAAM8B,EAAc7J,EAAIE,KAAK,qBACvB4J,EAAY9J,EAAIE,KAAK,eAG3B,GAFAF,EAAIE,KAAK,eAAiB,EAEtB2J,EAAY7c,QAAQ4c,IAAY,GAAKE,EAAW,CAChDtG,QAAQC,IAAI,iBAAkBmG,GAC9B,MAAM3B,EAAUK,aAAY,KACS,IAA7BtI,EAAIE,KAAK,kBACTF,EAAIE,KAAK,gBAAkB,EAC3BqI,cAAcN,GACdF,EAAQ6B,GACZ,GACD,IACP,MAEI7B,EAAQ6B,EACZ,GAER,GAEJ,cAAe,CACXjiB,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM+J,EAAO/J,EAAI1V,WAAW,GACtB4H,EAAM,GACZ,IAAK,MAAMrE,KAAOkc,EACVpf,OAAO0a,UAAU2E,eAAeC,KAAKF,EAAMlc,IAC3CqE,EAAI5I,KAAKuE,GAGjB,OAAOqE,CACX,GAEJ,aAAc,CACVvK,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM+J,EAAO/J,EAAI1V,WAAW,GACtB4H,EAAM,GACZ,IAAK,MAAMrE,KAAOkc,EACVpf,OAAO0a,UAAU2E,eAAeC,KAAKF,EAAMlc,IAC3CqE,EAAI5I,KAAKuE,GAGjB,OAAOqE,CACX,GAEJ,WAAY,CACRvK,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU1E,EAAO2W,GACjB,YAAmC,IAApBA,EAAIE,KAAK7W,EAC5B,GAEJ,YAAa,CACT1B,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM/S,EAAI,GACV,IAAK,MAAMa,KAAKkS,EAAIkK,YAChBjd,EAAE3D,KAAKwE,GAEX,OAAOb,CACX,GAEJ,YAAa,CACTtF,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACV,MAAM/S,EAAI,GACV,IAAK,MAAMa,KAAKkS,EAAItJ,SAChBzJ,EAAE3D,KAAKwE,GAEX,OAAOb,CACX,GAEJ,SAAU,CACNtF,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,WACA,OAAO,IAAI+Z,SAAQ,CAACC,EAASC,KACzB,2EACKmC,MAAMC,IACP,MAAMjG,EAAMxZ,OAAO0f,OAAO,CAAC,EAAGD,GAC9BrC,EAAQ5D,EAAI/E,SAAS,IAEpBkL,OAAOnC,IACRH,EAAOG,EAAI,GACb,GAEV,GAEJ,UAAW,CACPxgB,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,WAEA,OAAO,IAAI+Z,SAAQ,CAACC,EAASC,KACzB,0EACKmC,MAAMC,IACP,MAAMjG,EAAMxZ,OAAO0f,OAAO,CAAC,EAAGD,GACxBG,EAAI,GACV,IAAK,MAAM1c,KAAOsW,EAAIqG,QAClBD,EAAEjhB,KAAKuE,GAEXka,EAAQwC,EAAE,IAETD,OAAOnC,IACRH,EAAOG,EAAI,GACb,GAEV,GAGJ,SAAU,CAAExgB,KAAM,QAAS4F,MAAO,OAClC,WAAY,CACR5F,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACbA,EAAIE,KAAK,UAAYzD,CACzB,EACA5F,aAAa,GAEjB,OAAQ,CAAElP,KAAM,QAAS4F,MAAO,IAChC,SAAU,CACN5F,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GAEbA,EAAIG,gBAAgB7W,KAAK,CAAC0W,EAAIE,KAAK,QAASF,EAAIE,KAAK,YACrDF,EAAIE,KAAK,QAAUzD,CACvB,EACA5F,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAEV,MAAM/S,EAAI+S,EAAIG,gBAAgBzM,MAC1BzG,IACA+S,EAAIE,KAAK,QAAUjT,EAAE,GACrB+S,EAAIE,KAAK,UAAYjT,EAAE,GAE/B,EACA4J,aAAa,GAGjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,OACb2I,MAAM,EACNrJ,GAAI,SAAUyJ,GACV,OAAOiT,mBAAmBjT,EAC9B,GAEJ,UAAW,CACP7P,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUyJ,GACV,OAAOkT,mBAAmBlT,EAC9B,GAEJ,aAAc,CACV7P,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,OAClB2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAK3K,GACf,MAAM9N,EAAM,CAAC,EACb,GAAmB,iBAARyY,EACP,OAAOzY,EAEX,MAAM2R,EAAI8G,EAAIzd,MAAM,KACpB,GAAI2W,EAAE/W,QAAU,EACZ,OAAOoF,EAEX,MAAMgP,EAAS2C,EAAE,GAAG3W,MAAM,KAC1B,IAAK,MAAM9F,KAAQ8Z,EAAQ,CACvB,MACM0J,GADQxjB,EAAO,KACJ8F,MAAM,KAEvBgF,EADU8N,EAAIiB,OAAO,UAAW,CAAC2J,EAAG,MAC3B5K,EAAIiB,OAAO,UAAW,CAAC2J,EAAG,IACvC,CACA,OAAO1Y,CACX,GAGJ,cAAe,CACXvK,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,OACb2I,MAAM,EACNrJ,GAAI,SAAUyJ,GAEV,GAAwB,oBAAb,QAA4BqT,OAAOC,KAAM,CAChD,MAAMC,GAAM,IAAIC,aAAcC,OAAOzT,GAC/B0T,EAAUxY,OAAO0S,aAAahE,MAAM,KAAM2J,GAChD,OAAOD,KAAKI,EAChB,CAEA,GAAwB,oBAAb,OACP,OAAOC,OAAOhY,KAAKqE,GAAM2E,SAAS,UAEtC,MAAM,IAAIpV,MAAM,yBACpB,GAEJ,aAAc,CACVY,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUyJ,GACV,GAAwB,oBAAb,QAA4BqT,OAAOO,KAAM,CAChD,MAAMC,EAAiBD,KAAK5T,GACtB8T,EAAMrc,MAAMoW,UAAU9a,IAAI0f,KAAKoB,GAAgBrO,GAAKA,EAAEuI,eACtDgG,EAAe,IAAIC,WAAWF,GACpC,OAAO,IAAIG,YAAY,SAASC,OAAOH,EAC3C,CAEA,GAAwB,oBAAb,OACP,OAAOJ,OAAOhY,KAAKqE,EAAM,UAAU2E,WAEvC,MAAM,IAAIpV,MAAM,wBACpB,G,GCn/FJ4kB,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBvkB,IAAjBwkB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,yBAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,oBAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,qBAG/CI,EAAOD,OACf,CCrBAH,oBAAoBnD,EAAI,SAASsD,EAASG,GACzC,IAAI,IAAIre,KAAOqe,EACXN,oBAAoB7N,EAAEmO,EAAYre,KAAS+d,oBAAoB7N,EAAEgO,EAASle,IAC5ElD,OAAOwhB,eAAeJ,EAASle,EAAK,CAAEue,YAAY,EAAMC,IAAKH,EAAWre,IAG3E,ECPA+d,oBAAoB7N,EAAI,SAASoG,EAAKmI,GAAQ,OAAO3hB,OAAO0a,UAAU2E,eAAeC,KAAK9F,EAAKmI,EAAO,ECCtGV,oBAAoBnV,EAAI,SAASsV,GACX,oBAAXQ,QAA0BA,OAAOC,aAC1C7hB,OAAOwhB,eAAeJ,EAASQ,OAAOC,YAAa,CAAEjf,MAAO,WAE7D5C,OAAOwhB,eAAeJ,EAAS,aAAc,CAAExe,OAAO,GACvD,E,uCCLO,MAAMkf,EAAa,CAEtB,IAAO,EACP,GAAM,EAEN,GAAM,EACN,MAAS,EACT,MAAO,EACP,MAAO,EACP,GAAM,EACN,KAAQ,EACR,GAAM,EACN,KAAQ,EACR,IAAK,EAEL,IAAK,EACL,IAAK,EACL,QAAW,EACX,QAAW,EACX,SAAY,EAEZ,IAAK,EACL,IAAK,EACL,IAAK,EACL,KAAM,EACN,IAAK,EAEL,IAAK,EACL,KAAM,GAEGC,EAAa,CACtB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzDC,EAAe,GAC5B,IAAK,MAAM9e,KAAO4e,EACdE,EAAarjB,KAAKuE,GCjCf,SAAS+e,EAAcjlB,EAAO,IAAK4F,EAAQ,GAAIgK,GAAS,EAAInQ,EAAO,EAAGD,EAAO,cAChF,MAAO,CACHQ,OACA4F,QACAgK,SACAnQ,OACAylB,OAAQ,EACR1lB,OACAsH,KAAM,GAEd,C,2DCVO,SAASqe,EAAcC,GAC1B,MAAMrf,EAAOqf,EAAGxH,WAAW,GAE3B,MAAW,OAAPwH,EACO,EAEA,MAAPA,GAAqB,MAAPA,EACP,EAEA,MAAPA,GAAqB,MAAPA,GAGP,MAAPA,GAAqB,MAAPA,GAIdrf,GAAQ,MAAUA,GAAQ,MAIzBA,GAAQ,MAAUA,GAAQ,MAC1BA,GAAQ,MAAUA,GAAQ,KAXpB,EAcJ,CACX,C,gCCxBA,MAAMsf,EAAY,+EACZC,EAAO,SACPC,EAAc,WACdC,EAAgB,mBAChBC,EAAc,YACdC,EAAaN,GACR,WAAc,MAAM,IAAIhmB,MAAM,OAASgmB,EAAK,UAAY,EAEtDO,EAAS,sGAETC,EAAQ,CAEjB,CAAE7lB,KAAM,OAAQ8lB,QAAS,QACzB,CAAE9lB,KAAM,MAAO8lB,QAAS,OACxB,CAAE9lB,KAAM,MAAO8lB,QAAS,MAExB,CAAE9lB,KAAM,QAAS8lB,QAAS,0BAC1B,CAAE9lB,KAAM,QAAS8lB,QAAS,MAC1B,CAAE9lB,KAAM,eAAgB8lB,QAAS,YACjC,CAAE9lB,KAAM,eAAgB8lB,QAAS,eACjC,CAAE9lB,KAAM,gBAAiB8lB,QAAS,QAASC,SAyF/C,SAAwB1J,GACpB,IAAI7R,EAAM,GAEV,IAAIwb,EAAS,EAEb,MAAMxe,GADN6U,EAAMA,EAAItC,UAAU,IACNzU,QAAQ,MAClBkC,EAAI,GACJgD,EAAM6R,EACNA,EAAM,KAGN7R,EAAM6R,EAAItC,UAAU,EAAGvS,GACvB6U,EAAMA,EAAItC,UAAUvS,EAAI,IAG5B,IAAK,IAAIA,EAAI,EAAGA,EAAIgD,EAAIpF,OAAQoC,IACN,OAAlBgD,EAAIiU,OAAOjX,IACXwe,IAIR,OADAxb,EAAMA,EAAI1K,QAAQ,cAAe,IAC1B,CAAEuc,MAAK7R,MAAKzD,KAnBN,GAmBYif,SAC7B,GA9GI,CAAEhmB,KAAM,WAAY8lB,QAAS,UAC7B,CAAE9lB,KAAM,WAAY8lB,QAAS,MAE7B,CAAE9lB,KAAM,SAAU8lB,QAAS,qCAAsCG,UAAU,EAAMC,GAAIC,GACrF,CAAEnmB,KAAM,SAAU8lB,QAAS,yBAA0BG,UAAU,EAAMC,GAAIC,GACzE,CAAEnmB,KAAM,SAAU8lB,QAAS,yBAA0BG,UAAU,EAAMC,GAAIC,GAEzE,CAAEnmB,KAAM,SAAU8lB,QAAS,oDAAqDG,UAAU,EAAMC,GAAIC,GACpG,CAAEnmB,KAAM,SAAU8lB,QAAS,uCAAwCG,UAAU,EAAMC,GAAIC,GACvF,CAAEnmB,KAAM,SAAU8lB,QAAS,qCAAsCG,UAAU,EAAMC,GAAIC,GACrF,CAAEnmB,KAAM,OAAQ8lB,QAAS,aACzB,CAAE9lB,KAAM,OAAQ8lB,QAAS,cACzB,CAAE9lB,KAAM,KAAM8lB,QAAS,SAEvB,CAAE9lB,KAAM,MAAO8lB,QAAS,WAGxB,CAAE9lB,KAAM,WAAY8lB,QAAS,QAC7B,CAAE9lB,KAAM,UAAW8lB,QAAS,OAC5B,CAAE9lB,KAAM,UAAW8lB,QAAS,OAC5B,CAAE9lB,KAAM,MAAO8lB,QAAS,QACxB,CAAE9lB,KAAM,MAAO8lB,QAAS,QACxB,CAAE9lB,KAAM,OAAQ8lB,QAAS,cACzB,CAAE9lB,KAAM,OAAQ8lB,QAAS,cACzB,CAAE9lB,KAAM,QAAS8lB,QAAS,cAC1B,CAAE9lB,KAAM,IAAK8lB,QAAS,YACtB,CAAE9lB,KAAM,KAAM8lB,QAAS,cACvB,CAAE9lB,KAAM,KAAM8lB,QAAS,WACvB,CAAE9lB,KAAM,eAAgB8lB,QAAS,yDACjC,CAAE9lB,KAAM,MAAO8lB,QAAS,WACxB,CAAE9lB,KAAM,KAAM8lB,QAAS,MACvB,CAAE9lB,KAAM,KAAM8lB,QAAS,MACvB,CAAE9lB,KAAM,MAAO8lB,QAAS,YACxB,CAAE9lB,KAAM,KAAM8lB,QAAS,wBACvB,CAAE9lB,KAAM,IAAK8lB,QAAS,MACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,MACtB,CAAE9lB,KAAM,KAAM8lB,QAAS,cACvB,CAAE9lB,KAAM,IAAK8lB,QAAS,WACtB,CAAE9lB,KAAM,KAAM8lB,QAAS,OACvB,CAAE9lB,KAAM,IAAK8lB,QAAS,WACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,MACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,MACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,KAAMG,UAAU,GACtC,CAAEjmB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,MAAOG,UAAU,GACvC,CAAEjmB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,SAAU8lB,QAAS,MAAOC,SAAU1J,GAAO+J,EAAS,KAAM,KAAM/J,IACxE,CAAErc,KAAM,YAAa8lB,QAAS,MAAOC,SAAU1J,GAAO+J,EAAS,KAAM,KAAM/J,IAC3E,CAAErc,KAAM,YAAa8lB,QAAS,KAAMC,SAAU1J,GAAO+J,EAAS,IAAK,IAAK/J,IACxE,CAAErc,KAAM,SAAU8lB,QAAS,KAAMC,SAAU1J,GAAO+J,EAAS,IAAK,IAAK/J,IACrE,CAAErc,KAAM,YAAa8lB,QAAS,KAAMC,SAAU1J,GAAO+J,EAAS,IAAK,IAAK/J,IACxE,CAAErc,KAAM,YAAa8lB,QAAS,KAAMC,SAAU1J,GAAO+J,EAAS,IAAK,IAAK/J,IACxE,CAAErc,KAAM,SAAU8lB,QAAS,KAAMC,SAAU1J,GAAO+J,EAAS,IAAM,IAAM/J,IACvE,CAAErc,KAAM,IAAK8lB,QAAS,KAAMC,SAAUJ,EAAU,MAChD,CAAE3lB,KAAM,IAAK8lB,QAAS,KAAMC,SAAUJ,EAAU,MAChD,CAAE3lB,KAAM,OAAQ8lB,QAAS,aACzB,CAAE9lB,KAAM,IAAK8lB,QAAS,OACtB,CAAE9lB,KAAM,IAAK8lB,QAAS,MAAOG,UAAU,GACvC,CAAEjmB,KAAM,IAAK8lB,QAAS,MACtB,CAAE9lB,KAAM,OAAQ8lB,QAAS,WACzB,CAAE9lB,KAAM,aAAc8lB,QAAS,MAE/B,CAAE9lB,KAAM,OAAQ8lB,QAAS,+CAAgDG,UAAU,GACnF,CAAEjmB,KAAM,OAAQ8lB,QAAS,gCAAiCG,UAAU,GACpE,CAAEjmB,KAAM,OAAQ8lB,QAAS,SAAUG,UAAU,GAE7C,CACIjmB,KAAM,OACN8lB,QAAS,6EACTC,SA0CR,SAAsB1J,EAAKgK,GAAkB,GAUzC,IAAI7b,EAAM,GACNzD,EAAO,GACX,KAAe,KAARsV,GAAY,CAEf,GAAI7R,EAAIpF,OAAS,EAAG,CAGhB,GADYsgB,EAAYxkB,KAAKmb,GAEzB,MAGJ,MAAMqC,EAAI,EAAA1G,OAAA,KAAYqE,GACtB,GAAIqC,EAAG,CACH3X,EAAO2X,EAAE,GAAG5e,QAAQ,OAAQ,IAGN,OAFtBuc,EAAMA,EAAItC,UAAU2E,EAAE,GAAGtZ,SAEjBqZ,OAAO,KACXpC,EAAMA,EAAIiK,OAAO,IAErB,KACJ,CACJ,CAEA,MAAM5J,EAAI4I,EAAUpkB,KAAKmb,GACzB,GAAIK,EAAG,CACHlS,GAAOkS,EAAE,GACTL,EAAMA,EAAItC,UAAU2C,EAAE,GAAGtX,QACzB,QACJ,CAGA,IADUmgB,EAAKjhB,KAAK+X,GAMpB,MAJI7R,GAAO6R,EAAIoC,OAAO,GAClBpC,EAAMA,EAAItC,UAAU,EAI5B,CAII,UAAUzV,KAAKkG,KACf6R,EAAM7R,EAAIiU,OAAOjU,EAAIpF,OAAS,GAAKiX,EACnC7R,EAAMA,EAAI0V,MAAM,GAAI,IAGxB,MAAMqG,EAAKd,EAAcvkB,KAAKsJ,GAC1B+b,IACAlK,EAAMkK,EAAG,GAAKxf,EAAOsV,EACrBtV,EAAO,GACPyD,EAAMA,EAAIuP,UAAU,EAAGvP,EAAIpF,OAASmhB,EAAG,GAAGnhB,SAG1C,EAAA0S,cAAc/Q,KACdA,EAAO,IAIPsf,IACA7b,EA5GD,SAAuBuK,GAE1B,IAAKwQ,EAAKjhB,KAAKyQ,GACX,OAAOA,EAAEjV,QAAQ,UAAW,IAGhC,GAAI0lB,EAAYlhB,KAAKyQ,GACjB,OAAOA,EAGX,OAAOA,EAAEjV,QAAQ,WAAY,GACjC,CAiGc0mB,CAAchc,IAGZ,KAARA,GAAuB,KAATzD,IACdyD,EAAMzD,EACNA,EAAO,IAEX,MAAO,CAAEsV,MAAK7R,MAAKzD,OAAMif,OAAQ,EACrC,IACA,SAASI,EAASK,EAAUC,EAAUrK,GAClC,IAAI7R,EAAM,GACNzD,EAAO,GACPif,EAAS,EAEb,MAAMxe,GADN6U,EAAMA,EAAIiK,OAAOG,EAASrhB,SACZE,QAAQohB,GACtB,GAAIlf,EAAI,EACJgD,EAAM6R,EACNA,EAAM,QAMN,GAHA7R,EAAM6R,EAAIiK,OAAO,EAAG9e,GACpB6U,EAAMA,EAAIiK,OAAO9e,EAAIkf,EAASthB,QAE1BoF,EAAIlF,QAAQmhB,IAAa,EACzB,KAAiB,MAAbA,EACM,IAAIpnB,MAAM,iCAGV,IAAIA,MAAM,IAAIonB,gBAAuBA,mBAKvD,MAAM/H,EAAI,EAAA1G,OAAA,KAAYqE,GAClBqC,IACA3X,EAAO2X,EAAE,GAAG5e,QAAQ,OAAQ,IAGN,OAFtBuc,EAAMA,EAAIiK,OAAO5H,EAAE,GAAGtZ,SAEdqZ,OAAO,KACXpC,EAAMA,EAAIiK,OAAO,KAIrB,EAAAxO,cAAc/Q,KACdA,EAAO,IAGX,IAAK,IAAIS,EAAI,EAAGA,EAAIgD,EAAIpF,OAAQoC,IACN,OAAlBgD,EAAIiU,OAAOjX,IACXwe,IAGR,MAAO,CAAE3J,MAAK7R,MAAKzD,OAAMif,SAC7B,CACA,SAASG,EAAYle,GACjB,OAAOqV,OAAOrV,EAAEnI,QAAQ,KAAM,IAClC,CC3PO,MAAM6mB,EAITrnB,YAAYgc,GACRvb,KAAKub,OAASA,EACdvb,KAAK6mB,SAAW,CAAC,EACjB7mB,KAAKgZ,QAAU,GACfhZ,KAAK+H,OAAS,GACd/H,KAAKmZ,QAAU,YACnB,CAEA2N,YAAYC,GACR/mB,KAAK6mB,SAAWE,CACpB,CAMAC,cAAcC,EAAQC,EAASC,GAM3B,GALAnnB,KAAK+H,OAASkf,EACdjnB,KAAKmZ,QAAUyN,EAAUQ,kBAAkBD,GAE3CP,EAAUS,cAAcJ,EAAQjnB,KAAKub,OAAQvb,KAAK6mB,UAClD7mB,KAAKsnB,aAAatnB,KAAK+H,QACnBmf,EACA,GAAIlnB,KAAK+H,OAAO1C,OAAS,EAAG,CACxB,MAAMkiB,EAAMvnB,KAAK+H,OAAO/H,KAAK+H,OAAO1C,OAAS,GAC7CrF,KAAK+H,OAAOlG,KAAK,CACb3B,KAAM,MACNP,KAAM4nB,EAAI5nB,KACVylB,OAAQ,EACRtV,QAAS,EACTpQ,KAAM6nB,EAAI7nB,KACVsH,KAAM,GACNlB,MAAO,MACPtF,YAAa+mB,EAAI/mB,YACjBC,UAAW8mB,EAAI9mB,UACf+mB,QAAS,KAEbxnB,KAAK+H,OAAOlG,KAAK,CACb3B,KAAM,MACNP,KAAM4nB,EAAI5nB,KACVmQ,QAAS,EACTsV,OAAQ,EACR1lB,KAAM6nB,EAAI7nB,KACVsH,KAAM,GACNlB,MAAO,GACPtF,YAAa+mB,EAAI/mB,YACjBC,UAAW8mB,EAAI9mB,UACf+mB,QAAS,IAEjB,MAEIxnB,KAAK+H,OAAOlG,KAAK,CACb3B,KAAM,MACNP,KAAM,EACNylB,OAAQ,EACRtV,QAAS,EACTpQ,KAAM,GACNsH,KAAM,GACNlB,MAAO,MACPtF,YAAa,EACbC,UAAW,EACX+mB,QAAS,KAEbxnB,KAAK+H,OAAOlG,KAAK,CACb3B,KAAM,MACNP,KAAM,EACNylB,OAAQ,EACRtV,QAAS,EACTpQ,KAAM,GACNsH,KAAM,GACNlB,MAAO,GACPtF,YAAa,EACbC,UAAW,EACX+mB,QAAS,KAIrB,OAAOxnB,KAAK+H,MAChB,CAKApH,qBAAqBsmB,EAAQ1L,EAAQsL,GAEjC,IAAIpf,EAAI,EACJggB,GAAgB,EACpB,MAAMC,EAAW,KACb,MAAMhZ,EAAO,GACPvL,EAAO,CAAC,EACd,GAAuB,MAAnB8jB,EAAOxf,GAAGvH,KACV,MAAO,GAGX,IADAuH,IACOwf,EAAOxf,IAAI,CACd,MAAMC,EAAIuf,EAAOxf,GAEjB,GADAA,IACe,MAAXC,EAAExH,KACF,MAEW,SAAXwH,EAAExH,KACFunB,GAAgB,EAEA,MAAX/f,EAAExH,MAA2B,UAAXwH,EAAExH,OACrBunB,IACA/f,EAAEigB,aAAc,EAChBF,GAAgB,GAEpB/Y,EAAK7M,KAAK6F,GACLvE,EAAKuE,EAAE5B,SACR3C,EAAKuE,EAAE5B,OAAS,IAEpB3C,EAAKuE,EAAE5B,OAAOjE,KAAK6F,EAAEV,MAE7B,CACA,MAAM4E,EAAW,GACXgc,EAAe,GACf7f,EAAS,GACT8f,EAAU,CAAC,EACjB,IAAK,MAAMhZ,KAAOH,EACd,IAAKmZ,EAAQhZ,EAAI/I,OAAQ,CACrB,MAAMkB,EAAO7D,EAAK0L,EAAI/I,OACtBiC,EAAOlG,KAAKmF,GACZ4E,EAAS/J,KAAKgN,EAAI/I,OACd+I,EAAI8Y,YACJC,EAAa/lB,KAAKgN,EAAI/I,OAGtB8hB,EAAa/lB,KAAK,MAEtBgmB,EAAQhZ,EAAI/I,QAAS,CACzB,CAEJ,MAAO,CAACiC,EAAQ6D,EAAUgc,EAAa,EAG3C,KAAOngB,EAAIwf,EAAO5hB,QAAQ,CAEtB,MAAMqC,EAAIuf,EAAOxf,GAEjB,GAAgB,SAAXC,EAAExH,MAA8B,OAAXwH,EAAEV,MAA8B,SAAXU,EAAExH,MAA8B,OAAXwH,EAAEV,KAAgB,CAClFU,EAAEV,KAAO,KACTigB,EAAOlS,OAAOtN,EAAI,EAAG,EAAG,CAAEvH,KAAM,WAAY4F,MAAO,KAAMgK,OAAQpI,EAAEoI,OAAQnQ,KAAM+H,EAAE/H,KAAMylB,OAAQ1d,EAAE0d,OAAQ1lB,KAAMgI,EAAEhI,KAAMsH,KAAM,GAAIxG,YAAakH,EAAEjH,UAAWA,UAAWiH,EAAEjH,UAAW+mB,QAAS,GAAIhoB,IAAK,SACvMiI,IACA,QACJ,CAEA,GAAe,SAAXC,EAAExH,MAA8B,KAAXwH,EAAEV,MAAeU,EAAE5B,MAAMT,QAAU,GACpDqC,EAAE5B,MAAMkV,MAAM,MAAO,CACrBtT,EAAE5B,MAAQ4B,EAAE5B,MAAMkU,UAAU,EAAGtS,EAAE5B,MAAMT,OAAS,GAE3CqC,EAAEjH,YACHiH,EAAEjH,UAAY,GAElB,MAAMqnB,EAAM,CAAE5nB,KAAM,IAAK4F,MAAO,IAAKgK,OAAQpI,EAAEoI,OAAQnQ,KAAM+H,EAAE/H,KAAMylB,OAAQ1d,EAAE0d,OAAQ1lB,KAAMgI,EAAEhI,KAAMsH,KAAM,GAAIxG,YAAakH,EAAEjH,UAAY,EAAGA,UAAWiH,EAAEjH,UAAW+mB,QAAS,IAC9KP,EAAOlS,OAAOtN,EAAI,EAAG,EAAGqgB,GACxBpgB,EAAEjH,YACFgH,GACJ,CAUJ,GAPe,SAAXC,EAAExH,MAAmB,UAAcwH,EAAE5B,SACrC4B,EAAExH,KAAO,UAAcwH,EAAE5B,OACT,OAAZ4B,EAAE5B,QACF4B,EAAE5B,MAAQ,OAIH,aAAX4B,EAAExH,MAAkC,aAAXwH,EAAExH,KAAqB,CAChDuH,IACA,QACJ,CAEA,IAAIsgB,GAAU,EACVC,EAAY,CAAE9nB,KAAM,OACpBuH,GAAK,IACLugB,EAAYf,EAAOxf,EAAI,IAEJ,QAAnBugB,EAAU9nB,OACV6nB,GAAU,GAGd,MAAME,EAAWvgB,EACjBD,IACA,IAAIT,EAAO,GACP4E,EAAW,GACXgc,EAAe,GACf1Y,EAAW,GACXgZ,EAAgB,KAgBpB,GAdIjB,EAAOxf,IAAyB,MAAnBwf,EAAOxf,GAAGvH,QACtB8G,EAAM4E,EAAUgc,GAAgBF,MAGhCK,GAAWd,EAAOxf,IAAyB,SAAnBwf,EAAOxf,GAAGvH,OACnCgoB,EAAgBjB,EAAOxf,KACvByH,EAAWgZ,EAAcpiB,OAGT,IAAhBkB,EAAK3B,QAAgB4hB,EAAOxf,IAAyB,MAAnBwf,EAAOxf,GAAGvH,QAC3C8G,EAAM4E,EAAUgc,GAAgBF,KAIpB,KAAbxY,GAAmBgZ,EAAe,CAGlC,GADAhZ,EADgB0X,EAAUQ,kBAAkB1f,EAAEhI,MACzB,KAAOwP,EACxBA,KAAY2X,EAAU,CAEtB,MAAMlc,EAAWuE,EAASnP,QAAQ,UAAW,IAC7Cwb,EAAO1Q,KAAK,MAAMF,iBAAyBsd,EAC/C,CACAC,EAAcpiB,MAAQoJ,EACtB2X,EAAS3X,GAAY,CACjBhP,KAAM,OACN8G,OACAV,GAAI,KACJC,SAAS,EACTqF,WACAgc,eAER,CAEAK,EAASrgB,KAAO,CACZ1H,KAAM,OACN8G,OACA4E,WACAgc,eAER,CACJ,CAEAO,cAAcliB,GAEV,MAAMkG,EAAO,GAGPic,EAAMniB,EAAKR,MAAM,QACvB0G,EAAKtK,KAAKumB,EAAI,IACd,IAAK,MAAMpT,KAAKoT,EAAIjI,MAAM,GAAI,CAC1B,MAAMkI,EAAMrT,EAAEjV,QAAQ,IAAK,KAAKwF,QAAQ,KACxC,IAAa,IAAT8iB,EACA,OAAO,KAEXlc,EAAKtK,KAAKmT,EAAEmL,MAAM,EAAGkI,GAAMrT,EAAEmL,MAAMkI,EAAM,GAC7C,CACA,OAAOlc,CACX,CACAmb,aAAaL,GACT,IAAIqB,EAAU,GACV7gB,EAAI,EAOR,IAAI8gB,EAAWtB,EAAO5hB,OAAS,EAAKuhB,EAAUQ,kBAAkBH,EAAO,GAAGvnB,MAAQ,aAClF,KAAO+H,EAAIwf,EAAO5hB,QAAQ,CACtB,MAAMqC,EAAIuf,EAAOxf,GAMjB,GAJgB,SAAXC,EAAExH,MAA8B,SAAXwH,EAAExH,MAAgC,WAAZwH,EAAE5B,QAC9CyiB,EAAUtB,EAAOxf,EAAI,GAAG3B,OAGb,SAAX4B,EAAExH,MAA+B,OAAZwH,EAAE5B,MAAgB,CAEvC,MAAMoJ,EAAWxH,EAAE5B,MACnB,GAAIoJ,EAAS3J,QAAQ,MAAQ,EAAG,CAE5B,MAAMijB,EAAS,GAAGD,MAAYrZ,IACxBuZ,EAAOzoB,KAAK6mB,SAAS2B,GAC3B,GAAIC,GAAsB,SAAdA,EAAKvoB,KAAiB,CAC9BwH,EAAExH,KAAO,OACTwH,EAAEE,KAAO6gB,EACT/gB,EAAE5B,MAAQ0iB,EACV,QACJ,CAEA,IAAK,MAAM7F,KAAO3iB,KAAKgZ,QAAS,CAC5B,MAAMI,EAAQ,GAAGuJ,MAAQzT,IACnBwZ,EAAM1oB,KAAK6mB,SAASzN,GAC1B,GAAIsP,GAAoB,SAAbA,EAAIxoB,KAAiB,CAC5BwH,EAAExH,KAAO,OACTwH,EAAEE,KAAO8gB,EACThhB,EAAE5B,MAAQsT,EACV,KACJ,CACJ,CACA,GAAe,SAAX1R,EAAExH,KACF,QAER,CACA,MAAMyoB,EAAK3oB,KAAK6mB,SAAS3X,GACrByZ,GAAkB,SAAZA,EAAGzoB,OACTwH,EAAExH,KAAO,OACTwH,EAAEE,KAAO+gB,EAEjB,CAIA,GAAe,MAAXjhB,EAAExH,MAAgB+mB,EAAOxf,EAAI,IAA6B,WAAvBwf,EAAOxf,EAAI,GAAGvH,KAAmB,CAEpE,MAAM0oB,EApDNnhB,GAAK,EACE,MAEJwf,EAAOxf,EAAI,GAAGvH,MAkDH,QAAV0oB,GAAmB5D,EAAW4D,IAAiC,KAAvB3B,EAAOxf,EAAI,GAAGT,QACtDigB,EAAOlS,OAAOtN,EAAG,GACjBwf,EAAOxf,GAAG3B,QAAU,EAE5B,CAKA,QAHejG,IAAX6H,EAAEV,OACFU,EAAEV,KAAO,IAEE,MAAXU,EAAEV,KAuBN,GAAe,OAAXU,EAAEV,KAuBN,GAAI,EAAA8Q,YAAYpQ,EAAEV,MAAlB,CACI,MAAMA,EAAmB,UAAXU,EAAEV,MAA+B,SAAXU,EAAEV,KAAmB,QAAU,MAC9DU,EAAE8f,UACH9f,EAAE8f,QAAUxgB,GAEhB,MAAMxG,OAA8BX,IAAhB6H,EAAEjH,eAA0BZ,EAAY6H,EAAEjH,UAAYiH,EAAE8f,QAAQniB,OACpF4hB,EAAOlS,OAAOtN,EAAI,EAAG,EAAG,CACpBvH,KAAM,MACN4F,MAAOkB,EACP8I,OAAQpI,EAAEoI,OACVnQ,KAAM+H,EAAE/H,KACRylB,OAAQ1d,EAAE0d,OACV1lB,KAAMgI,EAAEhI,KACRc,cACAC,UAAWiH,EAAEjH,UACbuG,KAAM,GACNwgB,QAAS,KAEb9f,EAAEV,KAAOU,EAAE8f,QAAU,GACrB9f,EAAEjH,UAAYD,EACdiH,GAAK,CAET,KAEe,SAAXC,EAAExH,KAKS,iBAAXwH,EAAExH,MAAsC,kBAAXwH,EAAExH,MAMpB,QAAXwH,EAAExH,OACFwH,EAAE5B,MAAQwiB,EAAQvc,KAAK,KACvBuc,EAAU,IAEd7gB,MATI6gB,EAAQzmB,KAAK6F,EAAE5B,OACfmhB,EAAOlS,OAAOtN,EAAG,IANjBwf,EAAOlS,OAAOtN,EAAG,OAhDrB,CACSC,EAAE8f,UACH9f,EAAE8f,QAAU9f,EAAEV,MAElB,MAAMxG,OAA8BX,IAAhB6H,EAAEjH,eAA0BZ,EAAY6H,EAAEjH,UAAYiH,EAAE8f,QAAQniB,OACpF4hB,EAAOlS,OAAOtN,EAAI,EAAG,EAAG,CACpBvH,KAAMwH,EAAEV,KACR8I,OAAQpI,EAAEoI,OACVnQ,KAAM+H,EAAE/H,KACRylB,OAAQ1d,EAAE0d,OACV1lB,KAAMgI,EAAEhI,KACRc,cACAC,UAAWiH,EAAEjH,UACbuG,KAAM,GACNwgB,QAAS,GACT1hB,WAAOjG,IAEX6H,EAAEV,KAAOU,EAAE8f,QAAU,GACrB9f,EAAEjH,UAAYD,EACdiH,GAAK,CAET,KA5CA,CACSC,EAAE8f,UACH9f,EAAE8f,QAAU9f,EAAEV,MAElB,MAAMxG,OAA+BX,IAAhB6H,EAAEjH,eAA2BZ,EAAY6H,EAAEjH,UAAYiH,EAAE8f,QAAQniB,OACtF4hB,EAAOlS,OAAOtN,EAAI,EAAG,EAAG,CACpBvH,KAAM,KACN4P,OAAQpI,EAAEoI,OACVnQ,KAAM+H,EAAE/H,KACRylB,OAAQ1d,EAAE0d,OACV1lB,KAAMgI,EAAEhI,KACRc,cACAC,UAAWiH,EAAEjH,UACbuG,KAAM,GACNwgB,QAAS,GACT1hB,WAAOjG,IAEX4H,GAAK,EACLC,EAAEV,KAAOU,EAAE8f,QAAU,GACrB9f,EAAEjH,UAAYD,CAElB,CAiEJ,CACJ,CAKAqoB,YAAYvM,GACR,IAAIxM,EAAS,EACb,IAAK,IAAIrI,EAAI,EAAGA,EAAI6U,EAAIjX,OAAQoC,IAAK,CACjC,MACMS,EAAImd,EADA/I,EAAIoC,OAAOjX,IAErB,GAAU,IAANS,EACA,MAAO,CAAC4H,EAAQrI,GAEpBqI,GAAU5H,CACd,CACA,MAAO,CAAC4H,EAAQwM,EAAIjX,OACxB,CAOAyjB,SAASxM,EAAK3c,EAAMwnB,GAChB,MAAM4B,EAAYzM,EAAIjX,OAChB0C,EAAS,GACf,IAAIihB,EACAC,EACA7D,EAAS,EACT8D,GAAY,EACZpZ,EAAS,EAEb,MAAMqZ,EAAKnpB,KAAK6oB,YAAYvM,GAI5B,IAHAxM,EAASqZ,EAAG,GACZ7M,EAAMA,EAAItC,UAAUmP,EAAG,IACvB/D,GAAU+D,EAAG,GACE,KAAR7M,GAAY,CACf,IAAI8M,GAAK,EAET,IAAK,MAAMC,KAAQvD,EAAO,CAEtB,MAAMnJ,EAAI0M,EAAKtD,QAAQ5kB,KAAKmb,GAC5B,IAAKK,EACD,SAIJ,GAFAyM,GAAK,EAEa,UAAdC,EAAKppB,KAAkB,CACvBmlB,GAAUzI,EAAE,GAAGtX,OACfiX,EAAMA,EAAItC,UAAU2C,EAAE,GAAGtX,QACzB,QACJ,CAEA,GAAIgkB,EAAKrD,SAAU,CAEf,IAAIsD,EACJ,GAAIJ,GAA2B,SAAdG,EAAKppB,KAClBqpB,EAAKD,EAAKrD,SAAS1J,GAAK,QAGxB,IACIgN,EAAKD,EAAKrD,SAAS1J,EAIvB,CAFA,MAAOpQ,GACH,MAAM,IAAI,KAAeA,EAAEhL,QAAS6nB,EAAYzM,EAAIjX,OAAQ0jB,EAAYzM,EAAIjX,OAAS,EAAG1F,EAAMwnB,EAClG,CAEJ,GAAkB,cAAdkC,EAAKppB,KAAsB,CAE3B,MAAMkM,EAAOnM,KAAKmoB,cAAcmB,EAAG7e,KACnC,GAAa,OAAT0B,EACA,MAAM,IAAI,KAAmB,gCAAiC4c,EAAYzM,EAAIjX,OAAQ0jB,EAAYO,EAAGhN,IAAIjX,OAAQ1F,EAAMwnB,GAE3H,IAAIoC,EAAS,EACb,IAAK,IAAI9hB,EAAI,EAAGA,EAAI0E,EAAK9G,OAAQoC,IAAK,CAClC,MAAMT,EAAQS,IAAM0E,EAAK9G,OAAS,EAAKikB,EAAGtiB,KAAO,GAC7CS,EAAI,GAAM,GACVM,EAAOlG,KAAK,CACR3B,KAAM,SACN4F,MAAOqG,EAAK1E,GACZ/H,KAAMynB,EACNngB,OACA8I,SACAnQ,OACAylB,SACAoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EACjDE,uBAAwBtd,EAAK1E,GAAGpC,OAAS,EAAI2B,EAAK3B,SAGtDkkB,GAAUpd,EAAK1E,GAAGpC,OAAS,IAG3B0C,EAAOlG,KAAK,CAAE3B,KAAM,IAAK4F,MAAO,IAAKkB,KAAM,GAAI8I,SAAQpQ,KAAMynB,EAAUxnB,OAAMylB,SAAQoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EAAQE,uBAAwB,IACtK1hB,EAAOlG,KAAK,CAAE3B,KAAM,IAAK4F,MAAO,IAAKkB,KAAM,GAAI8I,SAAQpQ,KAAMynB,EAAUxnB,OAAMylB,SAAQoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EAAQE,uBAAwB,IACtK1hB,EAAOlG,KAAK,CAAE3B,KAAM,OAAQ4F,MAAOqG,EAAK1E,GAAIT,KAAM,GAAI8I,SAAQpQ,KAAMynB,EAAUxnB,OAAMylB,SAAQoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EAAQE,uBAAwBtd,EAAK1E,GAAGpC,SACrL0C,EAAOlG,KAAK,CAAE3B,KAAM,IAAK4F,MAAO,IAAKkB,KAAM,GAAI8I,SAAQpQ,KAAMynB,EAAUxnB,OAAMylB,SAAQoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EAASpd,EAAK1E,GAAGpC,OAAQokB,uBAAwB,IACvL1hB,EAAOlG,KAAK,CAAE3B,KAAM,IAAK4F,MAAO,IAAKkB,KAAM,GAAI8I,SAAQpQ,KAAMynB,EAAUxnB,OAAMylB,SAAQoE,uBAAwBT,EAAYzM,EAAIjX,OAASkkB,EAASpd,EAAK1E,GAAGpC,OAAQokB,uBAAwB,IACvLF,GAAUpd,EAAK1E,GAAGpC,OAE1B,CACA1F,GAAQ2pB,EAAGrD,OACXb,GAAU9I,EAAIjX,OAASikB,EAAGhN,IAAIjX,OAC9BiX,EAAMgN,EAAGhN,IACLgN,EAAGrD,OAAS,IACZb,EAAS,GAEb,KACJ,CACA4D,EAAgB5D,EAChBA,GAAU9I,EAAIjX,OAASikB,EAAGhN,IAAIjX,OAC9B0C,EAAOlG,KAAK,CAAE3B,KAAMmpB,EAAKppB,KAAM6F,MAAOwjB,EAAG7e,IAAKzD,KAAMsiB,EAAGtiB,KAAM8I,SAAQnQ,OAAMylB,OAAQ4D,EAAetpB,KAAMynB,EAAUqC,uBAAwBT,EAAYzM,EAAIjX,OAAQokB,uBAAwBnN,EAAIjX,OAASikB,EAAGhN,IAAIjX,SAC9MiX,EAAMgN,EAAGhN,IACT3c,GAAQ2pB,EAAGrD,OACPqD,EAAGrD,OAAS,IACZb,EAAS,GAEb,KACJ,CAEA,MAAMsE,EAAYX,EAAYzM,EAAIjX,OAElC,IAAIS,EAAQ6W,EAAE,GAed,GAdI0M,EAAKlD,KACLrgB,EAAQujB,EAAKlD,GAAGrgB,IAGpBkjB,EAAgB5D,EAChB6D,EAActpB,EACdylB,GAAUzI,EAAE,GAAGtX,OACfiX,EAAMA,EAAItC,UAAU2C,EAAE,GAAGtX,SAEN,QAAdgkB,EAAKppB,MAA4B,OAAV6F,GAAiC,SAAdujB,EAAKppB,QAChD6F,EAAQnG,IACRylB,EAAS,GAGK,WAAdiE,EAAKppB,KAAmB,CAExB,MAAM0pB,EAAK9D,EAAO1kB,KAAKmb,GACnBqN,IACArN,EAAMA,EAAItC,UAAU2P,EAAG,GAAGtkB,QAC1B+f,GAAUzI,EAAE,GAAGtX,OAEvB,CACA,IAAI2B,EAAO,GACX,GAAIqiB,EAAKnD,SAAU,CACf,MAAMvH,EAAI,EAAA1G,OAAA,KAAYqE,GAClBqC,IACA3X,EAAO2X,EAAE,GAAG5e,QAAQ,OAAQ,IAC5BqlB,GAAUzG,EAAE,GAAGtZ,OAGO,OAFtBiX,EAAMA,EAAItC,UAAU2E,EAAE,GAAGtZ,SAEjBqZ,OAAO,KACXpC,EAAMA,EAAItC,UAAU,IAGpB,EAAAjC,cAAc/Q,KACdA,EAAO,IAGnB,CACA,OAAQqiB,EAAKppB,MACT,IAAK,WACDipB,GAAY,EACZ,MAEJ,IAAK,MACDA,GAAY,EAQpB,GAAkB,eAAdG,EAAKppB,KAAT,CAgBA,GAZA8H,EAAOlG,KAAK,CACR3B,KAAMmpB,EAAKppB,KACX6F,QACAgK,SACAnQ,KAAMspB,EACN7D,OAAQ4D,EACRtpB,KAAMynB,EACNngB,OACAwiB,uBAAwBE,EACxBD,uBAAyBV,EAAYzM,EAAIjX,OAAUqkB,IAGrC,QAAdL,EAAKppB,MAA6B,IAAXmlB,EAAc,CACrC,MAAM+D,EAAKnpB,KAAK6oB,YAAYvM,GAC5BxM,EAASqZ,EAAG,GACZ/D,GAAU+D,EAAG,GACb7M,EAAMA,EAAItC,UAAUmP,EAAG,GAC3B,CACA,KAnBA,CAFIxpB,GAsBR,CACA,IAAKypB,EACD,MAAM,IAAI,KAAmB,UAAY9M,EAAItC,UAAU,EAAG,GAAK,MAAO+O,EAAYzM,EAAIjX,OAAQ0jB,EAAYA,EAAY,EAAGppB,EAAMwnB,EAEvI,CACA,OAAOpf,CACX,CAEApH,uBAAuBsmB,EAAQ2C,GAI3B,OAHU3C,EAAOnkB,KAAKC,GACXA,EAAE7C,OAEJ6L,KAAK6d,EAClB,CAMAjpB,yBAAyBwmB,GACrB,IAAKA,EACD,MAAO,OAIX,IADAA,EAAWA,EAASpnB,QAAQ,SAAU,MACzBwF,QAAQ,MAAQ,EAAG,CAC5B,MAAMC,EAAI2hB,EAAS1hB,MAAM,KACzB0hB,EAAW3hB,EAAEA,EAAEH,OAAS,EAC5B,CAEA,OADA8hB,EAAWA,EAASpnB,QAAQ,YAAa,GAE7C,EC5nBG,MAAM8pB,UCPN,MACHtqB,YAAYgc,GACRvb,KAAKub,OAASA,EACdvb,KAAK8pB,UAAY,GACjB9pB,KAAKinB,OAAS,GACdjnB,KAAK+pB,UAAY,IAAI3nB,IAErBpC,KAAKgqB,MAAQ,GACbhqB,KAAKoM,MAAQ,EAIbpM,KAAKuf,EAAI,GAETvf,KAAKmZ,QAAU,SACfnZ,KAAKiqB,eAAiB,GAKtBjqB,KAAKgZ,QAAU,GAEfhZ,KAAK6mB,SAAW,CAAC,EACjB7mB,KAAKkqB,UAAY,EACjBlqB,KAAKuC,aAAc,EAKnBvC,KAAKmqB,UAAY,CAAE,KAAM,CAAEjqB,KAAM,MAAO4F,MAAO,KAE/C9F,KAAK0C,QAAU,OAEf1C,KAAKoqB,eAAiB,EAEtBpqB,KAAKqqB,uBAAwB,EAE7BrqB,KAAKsqB,oBAAqB,EAE1BtqB,KAAKuqB,mBAAqB,GAC1BvqB,KAAKwqB,MACT,CACAA,OACIxqB,KAAK6mB,SAAW,CAAC,EACjB7mB,KAAKyqB,OACT,CACAA,QACIzqB,KAAKinB,OAAS,GACdjnB,KAAKoM,MAAQ,EACbpM,KAAKgqB,MAAQ,GACbhqB,KAAKuf,EAAI,GACTvf,KAAK0C,QAAU,MACnB,CACAokB,YAAYD,GACR7mB,KAAK6mB,SAAWA,CACpB,CAKA6D,SAAS/S,GACL,IAAKA,EAAU,CACX,MAAMjQ,EAAI1H,KAAKgqB,MAAM/d,MACrB,OAAIvE,GAGG,IACX,CAEA,IAAK,IAAID,EAAIzH,KAAKgqB,MAAM3kB,OAAS,EAAGoC,GAAK,EAAGA,IAAK,CAC7C,MAAMC,EAAI1H,KAAKgqB,MAAMviB,GACrB,GAAwB,IAApBkQ,EAAStS,QAAgBsS,EAASpS,QAAQmC,EAAEV,OAAS,EAGrD,OAFAhH,KAAKgqB,MAAMjV,OAAOtN,EAAG,GACrBzH,KAAKub,OAAO1I,MAAM,QAAU/N,KAAKC,UAAU2C,IACpCA,CAEf,CAEA,OAAO,IACX,CAKAijB,YACI3qB,KAAK8pB,UAAUjoB,KAAK7B,KAAKgqB,OACzBhqB,KAAKgqB,MAAQ,EACjB,CACAY,YACI5qB,KAAKgqB,MAAQhqB,KAAK8pB,UAAU7d,KAChC,CAKA9B,QAAQlK,GAEJ,GAAID,KAAKmqB,UAAUlqB,GACf,MAAO,CACHA,OACAoZ,MAAO,QACPwR,KAAM7qB,KAAKmqB,UAAUlqB,IAI7B,GAAIA,EAAKsF,QAAQ,OAAS,EACtB,OAAIvF,KAAK6mB,SAAS5mB,GACP,CACHA,OACAoZ,MAAO,SACPwR,KAAM7qB,KAAK6mB,SAAS5mB,SAIxB,EAIR,MAAM6qB,EAAY,GAAG9qB,KAAKmZ,YAAYlZ,IACtC,GAAID,KAAK6mB,SAASiE,GACd,MAAO,CACH7qB,KAAM6qB,EACNzR,MAAO,SACPwR,KAAM7qB,KAAK6mB,SAASiE,IAI5B,IAAK,MAAMnI,KAAO3iB,KAAKgZ,QAAS,CAC5B,MAAMI,EAAQ,GAAGuJ,MAAQ1iB,IACzB,GAAID,KAAK6mB,SAASzN,GACd,MAAO,CACHnZ,KAAMmZ,EACNC,MAAO,SACPwR,KAAM7qB,KAAK6mB,SAASzN,GAGhC,CAEA,OAAIpZ,KAAK6mB,SAAS5mB,GACP,CACHA,OACAoZ,MAAO,SACPwR,KAAM7qB,KAAK6mB,SAAS5mB,SAJ5B,CAQJ,CAIA8qB,UAAUC,GACNhrB,KAAKub,OAAO1I,MAAM,QAAU/N,KAAKC,UAAUimB,IAC3ChrB,KAAKgqB,MAAMnoB,KAAKmpB,EACpB,CAIAC,QACI,OAAQjrB,KAAKoM,OAASpM,KAAKinB,OAAO5hB,MACtC,CACA6lB,WACI,OAAOlrB,KAAKoM,KAChB,CAIA+e,MAAMC,GACF,OAAQprB,KAAKinB,OAAOjnB,KAAKoM,OAAOlM,OAASkrB,CAC7C,CAKAC,OAAO7lB,GACH,IAAK,IAAIiC,EAAI,EAAGA,EAAIjC,EAAEH,OAAQoC,IAAK,CAC/B,MAAMwY,EAAMxY,EAAIzH,KAAKoM,MACrB,GAAIpM,KAAKinB,OAAO5hB,QAAU4a,EACtB,OAAO,EAEX,GAAa,MAATza,EAAEiC,GACF,SAEJ,MAAMC,EAAI1H,KAAKinB,OAAOhH,GACtB,GAAIza,EAAEiC,aAAcD,OAChB,GAAIhC,EAAEiC,GAAGlC,QAAQmC,EAAExH,MAAQ,EACvB,OAAO,OAIf,GAAIwH,EAAExH,OAASsF,EAAEiC,GACb,OAAO,CAEf,CACA,OAAO,CACX,CAIA6jB,WAAW9lB,GACP,MAAMtF,EAAOF,KAAKinB,OAAOjnB,KAAKoM,OAAOlM,KACrC,OAAQsF,EAAED,QAAQrF,IAAS,CAC/B,CAKAqrB,OAAOC,GACH,MAAMjM,EAAI,GACJkM,EAAWzrB,KAAKoM,MAChBsf,EAAW,KACb1rB,KAAKoM,MAAQqf,GACN,GAEX,IAAK,IAAIhkB,EAAI,EAAGA,EAAI+jB,EAAMnmB,OAAQoC,IAAK,CACnC,GAAIzH,KAAKirB,QACL,OAAOS,IAEX,MAAMxrB,EAAOsrB,EAAM/jB,GACnB,GAAY,MAARvH,EACA,OAAOwrB,IAEX,GAAoB,iBAATxrB,EAQX,GAAoB,mBAATA,EAAX,CASA,KAAIA,aAAgBsH,OAOpB,MAAM,IAAIlI,MAAM,yCAA2CY,GANvD,IAAKF,KAAKsrB,WAAWprB,GACjB,OAAOwrB,IAEXnM,EAAE9X,GAAKzH,KAAK4kB,KALhB,KARA,CACI,MACM5V,EADI9O,EAAKyrB,KAAK3rB,KACVqG,CAAEkZ,GACZ,GAAU,OAANvQ,EACA,OAAO0c,IAEXnM,EAAE9X,GAAKuH,CAEX,KAhBA,CACI,MAAM4c,EAAQ5rB,KAAK4kB,MACnB,GAAIgH,GAASA,EAAM1rB,OAASA,EACxB,OAAOwrB,IAEXnM,EAAE9X,GAAKmkB,CAEX,CAkBJ,CAEA,OADA5rB,KAAKuf,EAAIA,GACF,CACX,CAIAqF,MACI,OAAI5kB,KAAKirB,QACE,KAEJjrB,KAAKinB,OAAOjnB,KAAKoM,QAC5B,CAEAyf,SACI,GAAI7rB,KAAKirB,QACL,MAAM,IAAI3rB,MAAM,iBAEpB,MAAMoI,EAAI1H,KAAKinB,OAAOjnB,KAAKoM,SAC3B,IAAK1E,EACD,MAAM,IAAIpI,MAAM,iBAEpB,OAAOoI,CACX,CACAokB,QACQ9rB,KAAKoM,MAAQ,GACbpM,KAAKoM,OAEb,CAEA2f,KAAKtkB,EAAI,GACL,OAAIzH,KAAKirB,QACE,KAEJjrB,KAAKinB,OAAOjnB,KAAKoM,MAAQ3E,EACpC,CAEAukB,QAAQnT,EAAM,MACV,OAAI7Y,KAAKirB,SACApS,IACDA,EAAMsM,KAEHtM,GAEJ7Y,KAAKinB,OAAOjnB,KAAKoM,MAC5B,CAIA6f,gBACI,MAAML,EAAQ5rB,KAAK+rB,OACnB,OAAc,OAAVH,EACO,CAAEprB,iBAAaX,EAAWY,eAAWZ,EAAWH,UAAMG,EAAWF,KAAM,EAAGylB,OAAQ,GAEtF,CAAE5kB,YAAaorB,EAAMprB,YAAaC,UAAWmrB,EAAMnrB,UAAWf,KAAMksB,EAAMlsB,KAAMC,KAAMisB,EAAMjsB,KAAMylB,OAAQwG,EAAMxG,OAC3H,CAOA8G,UAAUznB,EAAMkK,EAAMwd,GAClB,MAAMC,EAAQzd,EAAKyd,MAAQ,EACrBC,EAAYpsB,QAA4BJ,IAAlB8O,EAAK0d,SAA0B1d,EAAK0d,SAAWpsB,EACrEqsB,EAAQH,EAAa,WAAarnB,KAAKC,UAAUN,EAAM,KAAM,GAAM,GACzE,IAAKA,EACD,MAAO,SAEX,OAAQA,EAAKvE,MACT,IAAK,MACD,GAAIksB,GAAS,EAAG,CACZ,MAAMG,EAAU9nB,EAAKqB,MACrB,MAAO,GAAGumB,EAAS,OAAOrsB,KAAKksB,UAAUK,EAAS,CAAEH,SAASD,oBAA4BG,IAC7F,CAEI,MAAO,GAAGD,EAAS,cAE3B,IAAK,KAAM,CACP,MAAMG,EAAQ/nB,EACd,IAAI6M,EAAWkb,EAAMlb,UAAY,GACjC,MAAMmb,EAAQ,CAAE/b,GAAI,IAAKgc,IAAK,IAAK9b,GAAI,IAAKC,GAAI,IAAKG,IAAK,KAAMC,GAAI,OAIpE,GAHIK,KAAYmb,IACZnb,EAAWmb,EAAMnb,IAEjB8a,GAAS,EAAG,CACZ,MAAM5b,EAAOxQ,KAAKksB,UAAUM,EAAMhc,KAAM,CAAE4b,SAASD,GAC7C5b,EAAQvQ,KAAKksB,UAAUM,EAAMjc,MAAO,CAAE6b,SAASD,GACrD,MAAuB,OAAnBK,EAAMlb,SACC,GAAG+a,EAAS,OAAO7b,KAAQD,eAAmB+b,KAElD,GAAGD,EAAS,OAAO7b,KAAQD,SAAae,WAAkBgb,IACrE,CAEI,MAAO,GAAGD,EAAS,UAAU/a,IAAWgb,IAEhD,CACA,IAAK,SACD,MAAO,GAAGD,EAAS,QAAQ5nB,EAAKqB,QACpC,IAAK,SACD,MAAO,GAAGumB,EAAS,UAAU5nB,EAAKqB,QAAQwmB,KAC9C,IAAK,OACD,MAAO,GAAGD,EAAS,SAAS5nB,EAAKqB,QAAQwmB,KAC7C,IAAK,OACD,MAAO,GAAGD,EAAS,SAAS5nB,EAAKxE,MAAQwE,EAAKqB,QAAQwmB,KAC1D,IAAK,MACD,MAAO,OACX,IAAK,MACD,MAAO,UACX,QAAS,CACL,IAAIrsB,EAAOwE,EAAKxE,KAOhB,OANIA,IACAA,EAAOwE,EAAKqB,OAEI,iBAAT7F,IACPA,EAAOwE,EAAKvE,MAET,GAAGmsB,EAAS,OAAOpsB,IAAOqsB,IACrC,EAER,GDnWA1N,MAAMqI,EAAQE,GAMV,OALAnnB,KAAKyqB,QACLzqB,KAAKinB,OAASA,EACdjnB,KAAKmZ,QAAUyN,EAAUQ,kBAAkBD,GAC3CnnB,KAAKgZ,QAAQnX,KAAK7B,KAAKmZ,SAEhBnZ,KAAK2sB,aAChB,CAEAA,cACI,MAAMvkB,EAAIpI,KAAK4sB,gBACTrX,EAAIvV,KAAK4kB,MACf,GAAIrP,GAAgB,QAAXA,EAAErV,KAEP,MADAF,KAAKub,OAAO+Q,MAAM,YAAYtsB,KAAKksB,UAAU3W,EAAG,CAAE6W,MAAO,IAAK,kBAAsB7W,GAC9E,cAAyB,YAAYvV,KAAKksB,UAAU3W,EAAG,CAAE6W,MAAO,IAAK,kBAAuB7W,GAEtG,OAAOnN,CACX,CAEAwkB,gBACI,MAAMzkB,EAAS,GACf,IAAIxI,GAAQ,EACZ,MAAMmD,EAAM9C,KAAKisB,gBACjB,MAAQjsB,KAAKirB,SAAS,CAClB,MAAM/iB,EAAIlI,KAAK6sB,YACf,IAAK3kB,EACD,MAEJC,EAAOtG,KAAKqG,GACRvI,EAAO,IACPA,EAAOuI,EAAEvI,KAEjB,CACA,GAAsB,IAAlBwI,EAAO9C,OAAc,CACrB,MAAMumB,EAAQ5rB,KAAK+rB,QAAU/rB,KAAKinB,OAAO,GAEzC,MADAjnB,KAAKub,OAAO+Q,MAAM,WAAatsB,KAAKksB,UAAUlsB,KAAK+rB,OAAQ,CAAEK,MAAO,IAAK,GAAOR,GAC1E,cAAyB,WAAa5rB,KAAKksB,UAAUlsB,KAAK+rB,OAAQ,CAAEK,MAAO,IAAK,GAAQR,EAClG,CACA,MAAO,CAAE1rB,KAAM,QAASoH,MAAOa,KAAWrF,EAAKulB,IAAKroB,KAAKisB,gBAAiBvpB,QAAS1C,KAAK0C,QAC5F,CAEAoqB,yBACI,MAAMC,EAAQ,GACd/sB,KAAKgqB,MAAM5Z,SAAS1I,IAChB,IAAIob,EAAI9iB,KAAKksB,UAAUxkB,EAAG,CAAE0kB,MAAO,IAAK,GACpC1kB,EAAEV,OACF8b,GAAKpb,EAAEV,MAEX+lB,EAAMlrB,KAAKihB,EAAE,IAEjB,MAAMkK,EAAOD,EAAMhhB,KAAK,KAExB,IAAIkhB,EAAW,GACf,MAAMC,EAAM,IAAIpP,WAAW,GAC3B,IAAK,MAAMzX,KAAKrG,KAAKuqB,mBAAoB,CACrC0C,GAAY,MACZ,IAAI/Y,EAAK,EACT,MAAMiZ,EAAQ9mB,EAAEW,KAChB,GAAImmB,EACA,IAAK,MAAMte,KAAOse,EAAO,CAErBF,GADWhiB,OAAO0S,aAAauP,EAAMhZ,GAElB,IAAfrF,EAAIxJ,OACJ4nB,GAAYpe,EAAI,GAGhBoe,GAAY,IAAIpe,EAAI9C,KAAK,QAE7BmI,GACJ,CAEJ+Y,GAAY5mB,EAAEpG,KAAO,IACzB,CAEA,OADAD,KAAKuqB,mBAAqB,GACnB,iBAAiByC,uBAA0BC,GACtD,CACAG,OAEI,MAAMC,EAAMrtB,KAAK4kB,MACjB,IAAKyI,EACD,OAAO,KAGX,GAAIrtB,KAAKgqB,MAAM3kB,OAAS,EAAG,CACvB,MAAMioB,EAASttB,KAAK8sB,yBACpB,MAAM,cAAyBQ,EAAQD,EAC3C,CAEA,OADArtB,KAAKuqB,mBAAqB,GACnB8C,CACX,CAEAR,YACI,MAAM/pB,EAAM9C,KAAKisB,gBAEjB,GAAIjsB,KAAKmrB,MAAM,OACX,OAAOnrB,KAAKotB,OAEhB,GAAIptB,KAAKmrB,MAAM,MACX,OAAOnrB,KAAKutB,MAEhB,GAAIvtB,KAAKmrB,MAAM,OACX,OAAOnrB,KAAKwtB,aAEhB,GAAIxtB,KAAKmrB,MAAM,SACX,OAAOnrB,KAAKytB,aAEhB,GAAIztB,KAAKmrB,MAAM,QACX,OAAOnrB,KAAK0tB,UAEhB,GAAI1tB,KAAKurB,OAAO,CAAC,QACb,MAAO,CAAErrB,KAAM,QAAS8G,KAAM,MAAOlE,EAAKulB,IAAKroB,KAAKisB,iBAExD,GAAIjsB,KAAKurB,OAAO,CAAC,QACb,MAAO,CAAErrB,KAAM,WAAY8G,KAAM,MAAOlE,EAAKulB,IAAKroB,KAAKisB,iBAE3D,GAAIjsB,KAAKurB,OAAO,CAAC,UAAW,SAAU,OAClC,OAAOvrB,KAAK2tB,WAEhB,GAAI3tB,KAAKurB,OAAO,CAAC,MAAO,WACpB,OAAOvrB,KAAK4tB,aAEhB,GAAI5tB,KAAKurB,OAAO,CAAC,YACb,OAAOvrB,KAAK6tB,UAAU,GAE1B,GAAI7tB,KAAKurB,OAAO,CAAC,aACb,OAAOvrB,KAAK6tB,UAAU,GAE1B,GAAI7tB,KAAKurB,OAAO,CAAC,MAAO,SAAU,UAC9B,OAAOvrB,KAAK8tB,YAAY9tB,KAAKuf,EAAE,GAAGzZ,OAGtC,GAAI9F,KAAKqrB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAMxf,EAAO7L,KAAK4kB,OAASO,IAC3B,MAAM,cAAyB,uBAAuBtZ,EAAK/F,cAAe+F,EAC9E,CACA,GAAI7L,KAAKqrB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMxf,EAAO7L,KAAK4kB,OAASO,IAC3B,MAAM,cAAyB,MAAMtZ,EAAK/F,kBAAmB+F,EACjE,CAEA,GAAI7L,KAAKurB,OAAO,CAACvrB,KAAK+tB,aAClB,OAAO/tB,KAAKuf,EAAE,GAElB,GAAIvf,KAAKurB,OAAO,CAACvrB,KAAKguB,sBAClB,OAAOhuB,KAAKuf,EAAE,GAElB,GAAIvf,KAAKurB,OAAO,CAACvrB,KAAKiuB,OAClB,OAAOjuB,KAAKuf,EAAE,GAElB,GAAIvf,KAAKurB,OAAO,CAACvrB,KAAKkuB,WAClB,OAAOluB,KAAKuf,EAAE,GAElB,GAAIvf,KAAKurB,OAAO,CAACvrB,KAAKmuB,WAClB,OAAOnuB,KAAKuf,EAAE,GAGlB,GAAIvf,KAAKurB,OAAO,CAACvrB,KAAKouB,QAAS,CAC3B,MAAMC,EAAKruB,KAAKuf,EAAE,GAClB,GAAI0F,EAAW1f,QAAQ8oB,EAAGrnB,MAAQ,KAAO,EAAG,CACxC,GAAIhH,KAAKgqB,MAAM3kB,QAAU,EAAG,CACxB,MAAMioB,EAASttB,KAAK8sB,yBACpB,MAAM,cAAyBQ,EAAQe,EAC3C,CACA,MAAM7P,EAAKxe,KAAK6sB,YAChB,GAAW,OAAPrO,EACA,MAAO,CACHte,KAAM,QACNoH,MAAO,CAAC+mB,EAAI7P,GACZxX,KAAMwX,EAAGxX,QACNlE,EACHulB,IAAKroB,KAAKisB,gBAGtB,CACA,OAAOoC,CACX,CACA,OAAO,IACX,CAEAT,aACI,MAAM9qB,EAAM9C,KAAKisB,gBAEjB,OADAjsB,KAAK0C,QAAU,SACR,CAAExC,KAAM,SAAU4C,EAAKulB,IAAKroB,KAAKisB,gBAC5C,CAEA4B,UAAUS,GACN,MAAMxrB,EAAM9C,KAAKisB,gBAYjB,OAXY,IAARqC,IAEAtuB,KAAKoqB,eAAiB,EAEtBpqB,KAAKqqB,uBAAwB,GAMjCrqB,KAAKsqB,oBAAqB,EACnB,CAAEpqB,KAAM,SAAU4C,EAAKulB,IAAKroB,KAAKisB,gBAC5C,CAEA6B,YAAYnc,GACR,MAAM7O,EAAM9C,KAAKisB,gBAEjB,OADAjsB,KAAK0C,QAAUiP,EACR,CAAEzR,KAAM,SAAU4C,EAAKulB,IAAKroB,KAAKisB,gBAC5C,CAEA0B,WACI,MACMxG,EADYnnB,KAAKuf,EAAE,GACEzZ,MACrBqT,EAAUyN,EAAUQ,kBAAkBD,GAC5C,GAAInnB,KAAKgZ,QAAQzT,QAAQ4T,GAAW,EAAG,CAGnC,MAAMoP,EAAUvoB,KAAKgZ,QAAQuV,QACzBhG,IACAvoB,KAAKgZ,QAAQ4H,QAAQzH,GACrBnZ,KAAKgZ,QAAQ4H,QAAQ2H,GAE7B,CACA,MAAO,CACHroB,KAAM,UACN4F,MAAOqhB,EACPngB,KAAM,MACHhH,KAAKisB,gBACR5D,IAAKroB,KAAKisB,gBAElB,CAEAuC,SACI,MAAM1rB,EAAM9C,KAAKisB,gBACX9jB,EAAS,GAIf,IAHInI,KAAKmrB,MAAM,SACXnrB,KAAK4kB,OAED5kB,KAAKirB,UACLjrB,KAAKsrB,WAAW,CAAC,MAAO,OAAQ,SAG/BtrB,KAAKurB,OAAO,CAACvrB,KAAK6sB,aAGvB1kB,EAAOtG,KAAK7B,KAAKuf,EAAE,IAEvB,MAAO,CAAErf,KAAM,QAASoH,MAAOa,KAAWrF,EAAKulB,IAAKroB,KAAKisB,gBAC7D,CACAwC,mBACI,IAAKzuB,KAAKmrB,MAAM,KACZ,OAAO,KAEX,MAAM3lB,EAAI,GAEV,IADAxF,KAAK4kB,OACG5kB,KAAKirB,SAAS,CAClB,GAAIjrB,KAAKmrB,MAAM,KAAM,CACjBnrB,KAAK4kB,MACL,KACJ,CACA,MAAMld,EAAI1H,KAAK4kB,MACXld,GACAlC,EAAE3D,KAAK6F,GAEP1H,KAAKmrB,MAAM,UACXnrB,KAAK4kB,KAEb,CACA,OAAOpf,CACX,CACA0oB,WACI,OAAOluB,KAAK0uB,KAAK,WACrB,CACAP,WACI,OAAOnuB,KAAK0uB,KAAK,WACrB,CAEAA,KAAKxuB,GACD,IAAKF,KAAKmrB,MAAMjrB,GACZ,OAAO,KAEX,MAAM4C,EAAM9C,KAAKisB,gBACXpT,EAAM7Y,KAAK4kB,MACjB,IAAK/L,EACD,OAAO,KAEX,IAAI8V,EAAU,GACV3uB,KAAKmrB,MAAM,OACXwD,EAAU3uB,KAAKyuB,oBAAsB,IAEzC,MAAMvf,EAAWlP,KAAK4kB,MACtB,IAAK1V,GAA8B,SAAlBA,EAAShP,KAEtB,MADAF,KAAKub,OAAO+Q,MAAMtsB,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GAAQ,WAAYnd,GACvF,cAAyBlP,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GAAS,WAAYxT,GAE/G,GAAI7Y,KAAKmrB,MAAM,KAAM,CAEjB,GAAIwD,EAAQtpB,OAAS,EAEjB,MADArF,KAAKub,OAAO+Q,MAAMtsB,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GAAQ,6BAA8Bnd,GACzG,cAAyBlP,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GAAS,6BAA8Bnd,GAEjIyf,EAAU3uB,KAAKyuB,oBAAsB,EACzC,CACIzuB,KAAKmrB,MAAM,OACXnrB,KAAK4kB,MAET,IAAItd,EAAQ,KACRsnB,GAAY,EACZroB,GAAU,EACVvG,KAAKmrB,MAAM,UACXyD,GAAY,GAEZ5uB,KAAKmrB,MAAM,SACXyD,GAAY,GAEhB,IACI5uB,KAAKkqB,YACLlqB,KAAKuC,aAAc,EAEnB,MAAMssB,EAAkB7uB,KAAKmqB,UAE7B,GADAnqB,KAAKmqB,UAAY,CAAE,KAAM,CAAEjqB,KAAM,MAAO4F,MAAO,KAC3C8oB,EAAW,CACX5uB,KAAK2qB,YAEL,IAAK,MAAM9b,KAAO8f,EAAS,CACvB,MAAMG,EAAUjgB,EAAS,MAAIA,EAAI/I,MAAQ,GAAK,GAC9C9F,KAAKmqB,UAAU2E,GAAU,CAAE,KAAQ,MAAO,MAAS,GACvD,CAEA,GADAxnB,EAAQtH,KAAKwuB,UACTxuB,KAAKmrB,MAAM,QAIX,MAAM,cAAyB,6BAA8BtS,GAH7D7Y,KAAK4kB,MAKT5kB,KAAK4qB,WACT,MAEI5qB,KAAK2qB,YACLrjB,EAAQtH,KAAK6sB,YACb7sB,KAAK4qB,YAET5qB,KAAKkqB,YACL3jB,EAAUvG,KAAKuC,YACfvC,KAAKmqB,UAAY0E,CAOrB,CALA,MAAOnO,GAGH,MAFA1gB,KAAKub,OAAO+Q,MAAMtsB,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GACrE,sBAAwB3L,EAAIxf,QAAS2X,GACnC,cAAyB7Y,KAAKksB,UAAUhd,EAAU,CAAEkd,MAAO,EAAGC,SAAU,OAAQ,GAClF,sBAAwB3L,EAAIxf,QAAS2X,EAC7C,CACA,MAAO,CACH3Y,OACAD,KAAMiP,EACNR,KAAMigB,EACNrnB,MAAOA,GAAS,GAChBf,UACAS,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA8C,UACI,MAAMjsB,EAAM9C,KAAKisB,gBACjB,IAAIzmB,EAAIxF,KAAKgvB,UACb,IAAKxpB,EACD,OAAO,KAIX,GAAe,QAAXA,EAAEwB,KACF,OAAOxB,EAEX,GAAe,UAAXA,EAAEwB,KAEF,OADAxB,EAAI,CAAEtF,KAAM,MAAO4F,MAAON,EAAGwB,KAAM,MAAOlE,EAAKulB,IAAKroB,KAAKisB,iBAClDzmB,EAGX,GAAgB,KAAXA,EAAEwB,MAAiBhH,KAAKmrB,MAAM,QAE/BnrB,KAAKgqB,MAAMnoB,KAAK2D,GAChBA,EAAIxF,KAAKouB,aAIb,GAAe,MAAX5oB,EAAEwB,KAAc,CAChB,MAAMioB,EAAOjvB,KAAKoM,MACZhE,EAAIpI,KAAKgvB,UACf,IAAK5mB,EACD,MAAM,cAAyB,iCAC3BpI,KAAKksB,UAAUlsB,KAAK+rB,OAAQ,CAAEK,MAAO,IAAK,GAAQtpB,GAE1D,GAAI9C,KAAKmrB,MAAM,OAAQ,CACnB,MAAM+D,EAASlvB,KAAK4kB,OAAS,CAAE,MAAS,OACxCxc,EAAEpB,KAAOkoB,EAAOppB,KACpB,CACA,GAAIsC,IAAiB,QAAXA,EAAEpB,MAA6B,UAAXoB,EAAEpB,MAC5B,MAAO,CACH9G,KAAM,KACNoR,SAAsB,UAAXlJ,EAAEpB,KAAoB,QAAU,KAC3CwJ,KAAMhL,EACN+K,MAAOnI,EACPpB,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,iBAGlBjsB,KAAKoM,MAAQ6iB,CACjB,CAOA,GALKjvB,KAAKmrB,MAAM,SACZnrB,KAAKgqB,MAAMnoB,KAAK2D,GAChBA,EAAIxF,KAAKouB,UAGRpuB,KAAKmrB,MAAM,OAAQ,CACpB,MAAMgE,EAAO3pB,GAAK,CAAEtF,KAAM,OAAQ4C,GAElC,MADA9C,KAAKub,OAAO+Q,MAAM,2BAA6BtsB,KAAKksB,UAAUlsB,KAAK+rB,OAAQ,CAAEK,MAAO,IAAK,GAAS,qBAAsB+C,GAClH,cAAyB,2BAA6BnvB,KAAKksB,UAAUlsB,KAAK+rB,OAAQ,CAAEK,MAAO,IAAK,GAAS,qBAAsB+C,EACzI,CACA,MAAMD,EAASlvB,KAAK4kB,MAWpB,OATIsK,GAA2B,UAAjBA,EAAOppB,QACjBN,EAAI,CACAtF,KAAM,MACN4F,MAAON,EACPwB,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,kBAGXzmB,CACX,CAEA+nB,MACI,MAAMzqB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,MACZ,OAAO,KAEX,MAAMiE,EAAOpvB,KAAK4kB,MAClB,GAAY,MAARwK,EACA,OAAO,KAEX,KAAOpvB,KAAKmrB,MAAM,UACdnrB,KAAK4kB,MAET,IAAIjX,EAAO,KACX,IACIA,EAAO3N,KAAK+uB,SAIhB,CAFA,MAAOrO,GACH,MAAM,cAAyB,yBAA2BA,EAAIxf,QAASkuB,EAC3E,CACA,GAAa,OAATzhB,EACA,MAAM,cAAyB,mBAAoByhB,GAEvD,IAAIC,EAAY,KACZnhB,EAAa,KACbohB,GAAS,EAUb,IARItvB,KAAKmrB,MAAM,OACXkE,EAAYrvB,KAAKwuB,UAGjBa,EAAYrvB,KAAK6sB,YACjByC,GAAS,GAGNtvB,KAAKmrB,MAAM,QACdnrB,KAAK4kB,MAGT,GAAI5kB,KAAKmrB,MAAM,OAAQ,CAEnB,IADAnrB,KAAK4kB,MACE5kB,KAAKmrB,MAAM,UACdnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,OACXjd,EAAalO,KAAKwuB,UAGlBtgB,EAAalO,KAAK6sB,YAClByC,GAAS,EAEjB,CACA,IAAe,IAAXA,EAAkB,CAClB,IAAItvB,KAAKmrB,MAAM,QAIX,MAAM,cAAyB,sBAAuBiE,GAHtDpvB,KAAK4kB,KAKb,CACA,MAAO,CACH1kB,KAAM,KACN+N,KAAMN,GAAQ,GACdrG,MAAO+nB,GAAa,GACpBlhB,YAAaD,GAAc,GAC3BlH,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CACA8B,aACI,MAAMjrB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKqrB,OAAO,CAAC,SAAU,WACxB,OAAO,KAEX,MAAMkE,EAAavvB,KAAK4kB,MACxB5kB,KAAK4kB,MACL,IAAI4K,EAAM,GACV,IAAID,IAAcA,EAAWzpB,MAIzB,OAAO,KAHP0pB,EAAMD,EAAWzpB,MAKrB,MAAM2H,EAAU,CAAE,SAAO,EAAO,YAAU,EAAO,SAAO,EAAO,QAAM,GACrE,IAAK,MAAMxN,KAAQuvB,EAAI/pB,MAAM,KAAM,CAE/B,GAAa,OAATxF,EAAe,CACf,IAAK,MAAM+f,KAAK9c,OAAOC,KAAKsK,GACxBA,EAAQuS,IAAK,EAEjB,KACJ,CAEI9c,OAAOC,KAAKsK,GAASzB,SAAS/L,GAC9BwN,EAAQxN,IAAQ,EAIhBD,KAAKub,OAAO1Q,KAAK,iBAAiB5K,aAAiBsvB,EAE3D,CACA,IAAIX,GAAY,EACZ5uB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MACLgK,GAAY,GAEP5uB,KAAKmrB,MAAM,SAChByD,GAAY,GAEhB,IAAItnB,EAAQ,KAUZ,OATIsnB,GACAtnB,EAAQtH,KAAKwuB,SACTxuB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,OAITtd,EAAQtH,KAAK6sB,YAEV,CACH3sB,KAAM,aACNuN,UACAnG,MAAOA,GAAS,GAChBN,KAAM,MACHlE,EAEX,CACAkrB,sBACI,MAAMlrB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKqrB,OAAO,CAAC,SAAU,iBACxB,OAAO,KAEX,MAAMkE,EAAavvB,KAAK4kB,MACxB,IAAK2K,EACD,OAAO,KAEXvvB,KAAK4kB,MACL,MAAMnX,EAAU,CAAE,SAAO,EAAO,YAAU,EAAO,UAAQ,GACzD,IAAK,MAAMxN,KAAQsvB,EAAWzpB,MAAML,MAAM,KAAM,CAE5C,GAAa,OAATxF,EAAe,CACf,IAAK,MAAM+f,KAAK9c,OAAOC,KAAKsK,GACxBA,EAAQuS,IAAK,EAEjB,KACJ,CAEI9c,OAAOC,KAAKsK,GAASzB,SAAS/L,GAC9BwN,EAAQxN,IAAQ,EAIhBD,KAAKub,OAAO1Q,KAAK,uBAAuB5K,aAAiBsvB,EAEjE,CACA,IAAIX,GAAY,EACZ5uB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MACLgK,GAAY,GAEP5uB,KAAKmrB,MAAM,SAChByD,GAAY,GAEhB,IAAItnB,EAAQ,KAUZ,OATIsnB,GACAtnB,EAAQtH,KAAKwuB,SACTxuB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,OAITtd,EAAQtH,KAAK6sB,YAEV,CACH3sB,KAAM,sBACNuN,UACAnG,MAAOA,GAAS,GAChBN,KAAM,MACHlE,EAEX,CAEA4qB,UACI,MAAM5qB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,QACZ,OAAO,KAEX,MAAMsE,EAASzvB,KAAK6rB,SACpB7rB,KAAKub,OAAO1Q,KAAK,+DAAgE4kB,GACjF,MAAMtnB,EAAS,GACf,IAAImG,EAAa,KACjB,IAAKmhB,IAAWzvB,KAAKmrB,MAAM,OACvB,MAAM,cAAyB,qBAAsBsE,GAGzD,MACQzvB,KAAKmrB,MAAM,SADV,CAIL,GAAInrB,KAAKmrB,MAAM,OAAQ,CACnBnrB,KAAK4kB,MACL,QACJ,CACA,GAAI5kB,KAAKqrB,OAAO,CAAC,MAAO,QAAS,CAC7BrrB,KAAK4kB,MACL5kB,KAAK4kB,MACLtW,EAAatO,KAAKwuB,SAClB,KACJ,CACA,IAAIlnB,EAAQ,KAEZ,GAAItH,KAAKmrB,MAAM,OAASnrB,KAAKmrB,MAAM,MAAO,CACtC,MAAMuE,EAAS1vB,KAAK4kB,MAIpB,GAHI5kB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,OAAQ,CAEnB,GADA7jB,EAAQtH,KAAKwuB,UACRxuB,KAAKmrB,MAAM,QAAS,CACrB,IAAIwE,EAAa,KAIjB,MAHc,MAAVD,IACAC,EAAaD,EAAOxvB,MAElB,cAAyB,IAAIyvB,yBAAmC7sB,EAC1E,CACA9C,KAAK4kB,KACT,MAEItd,EAAQtH,KAAK6sB,WAErB,MAEIvlB,EAAQtH,KAAK6sB,YAGJ,MAATvlB,GACAa,EAAOtG,KAAKyF,EAEpB,CACA,IAAKtH,KAAKmrB,MAAM,QAEZ,MADApP,QAAQC,IAAI7T,EAAQnI,KAAK+rB,QACnB,cAAyB,6BAA8B0D,GAGjE,OADAzvB,KAAK4kB,MACE,CACH1kB,KAAM,SACNiI,OAAQA,GAAU,GAClBmG,WAAYA,GAAc,GAC1BtH,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAKA2D,gBAAgBC,GACZ,MAAMnhB,EAAO,CAACmhB,GACd,MAAQ7vB,KAAKirB,SAAS,CAElB,IAAI5Z,EAAKrR,KAAK+rB,OACd,IAAI1a,IAAM2T,EAAW3T,EAAGnR,MAWxB,MAXA,CACImR,EAAKrR,KAAK6rB,SACVnd,EAAK7M,KAAKwP,GAEV,MAAMtO,EAAI/C,KAAK8vB,SACf,GAAU,OAAN/sB,EACA,MAAM,cAAyB,WAAWsO,EAAGvL,kBAAmB+pB,GAEpEnhB,EAAK7M,KAAKkB,EAEd,CAEJ,CACA,OAAoB,IAAhB2L,EAAKrJ,OACE,KAES,IAAhBqJ,EAAKrJ,OACEqJ,EAAK,GAET1O,KAAK+vB,WAAWrhB,EAC3B,CACAsgB,UAEI,MAAMgB,EAAShwB,KAAK8vB,SACpB,OAAe,OAAXE,EACO,KAGJhwB,KAAK4vB,gBAAgBI,EAChC,CACAC,cAAc9jB,GAEV,MAAM+jB,EAAYxoB,GACVsd,EAAWtd,EAAExH,MACN8kB,EAAWtd,EAAExH,MAEjB,GAEL8pB,EAAQ,GACRmG,EAAS,GACf,KAAOhkB,EAAK9G,OAAS,GAAG,CACpB,MAAMqC,EAAIyE,EAAKoiB,QACf,IAAK7mB,EACD,MAEJ,KAAOsiB,EAAM3kB,OAAS,GAAG,CACrB,MAAM+qB,EAAOpG,EAAMA,EAAM3kB,OAAS,GAClC,GAAI6qB,EAASxoB,GAAKwoB,EAASE,GACvB,MAEJ,MAAMC,EAAOrG,EAAM/d,MACnB,IAAKokB,EAAM,CACPrwB,KAAKub,OAAOxa,MAAM,gBAAiB2G,GACnC,KACJ,CACAyoB,EAAOtuB,KAAKwuB,EAChB,CACArG,EAAMnoB,KAAK6F,EACf,CAEA,KAAOsiB,EAAM3kB,OAAS,GAAG,CACrB,MAAMqC,EAAIsiB,EAAM/d,MACZvE,GACAyoB,EAAOtuB,KAAK6F,EAEpB,CACA,OAAOyoB,CACX,CAEAJ,WAAW5jB,GACP,GAAoB,IAAhBA,EAAK9G,OACL,OAAO,KAGX,MAAM2B,EAAOmF,EAAKA,EAAK9G,OAAS,GAAG2B,KAC7BvC,EAAO0H,EAAKA,EAAK9G,OAAS,GAC1B8qB,EAASnwB,KAAKiwB,cAAc9jB,GAE5B6d,EAAQ,GACd,IAAK,MAAMtiB,KAAKyoB,EAAQ,CACpB,IAAKnL,EAAWtd,EAAExH,MAAO,CACrB8pB,EAAMnoB,KAAK6F,GACX,QACJ,CACA,MAAMU,EAAI4hB,EAAM/d,MACVzG,EAAIwkB,EAAM/d,MAChB,QAAUpM,IAAN2F,QAAyB3F,IAANuI,EAEnB,MADApI,KAAKub,OAAO+Q,MAAM,wBAA0BxnB,KAAKC,UAAUorB,IACrD,cAAyB,UAAW1rB,GAG9C,MAAM4M,EAAK,CACPnR,KAAM,KACNoR,SAAU5J,EAAExH,KACZsQ,KAAMhL,EACN+K,MAAOnI,EACPpB,OACAxG,YAAagF,EAAEhF,YACfC,UAAW+E,EAAE/E,UACbd,KAAM6F,EAAE7F,KACRylB,OAAQ5f,EAAE4f,OACV1lB,KAAM8F,EAAE9F,MAEZsqB,EAAMnoB,KAAKwP,EACf,CACA,MAAMif,EAAMtG,EAAM/d,MAClB,OAAKqkB,GACM,IAGf,CACAC,aAAahR,GACT,IAAIiR,GAAU,EACd,MAAMC,EAAKzwB,KAAKgqB,MAAM3kB,OACtB,MAAQrF,KAAKirB,SAAS,CAClB,GAAIjrB,KAAKmrB,MAAM,KAAM,CACjBqF,GAAU,EACV,KACJ,CACA,MAAMztB,EAAI/C,KAAKgvB,UACf,IAAIjsB,EAOJ,MANI/C,KAAK+qB,UAAUhoB,GACX/C,KAAKmrB,MAAM,UACXnrB,KAAK4kB,KAKjB,CACA,IAAK4L,EACD,MAAM,cAAyB,QAAQjR,EAAE,GAAGzZ,qBAAsByZ,EAAE,IAExE,MAAM/Z,EAAI,GACV,KAAOirB,EAAKzwB,KAAKgqB,MAAM3kB,QAAQ,CAC3B,MAAMtC,EAAI/C,KAAK0qB,WACX3nB,GACAyC,EAAEob,QAAQ7d,EAElB,CACA,OAAOyC,CACX,CAEAkrB,cACI,MAAM5tB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,KACZ,OAAO,KAEXnrB,KAAK4kB,MACD5kB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,OACXnrB,KAAK4kB,MAET,IAAI+L,EAAM3wB,KAAK0qB,SAAS,IACpBkE,GAAY,EACZtnB,EAAQ,KAcZ,GAbY,OAARqpB,IACAA,EAAM,CAAEzwB,KAAM,OAAQ4F,MAAO,KAAMkB,KAAM,MAAOlE,EAAKulB,IAAKroB,KAAKisB,kBAE/DjsB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MACLgK,GAAY,GAEP5uB,KAAKmrB,MAAM,SAChByD,GAAY,GAEZA,EAAW,CAEX,GADAtnB,EAAQtH,KAAKwuB,UACTxuB,KAAKmrB,MAAM,QAIX,MAAM,cAAyB,uCAAwCroB,GAHvE9C,KAAK4kB,KAKb,MAGItd,EAAQtH,KAAK6sB,YAEjB,MAAO,CACH3sB,KAAM,eACN4F,MAAO6qB,EACPrpB,MAAOA,GAAS,GAChBN,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA2E,SACI,MAAM9tB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,KACZ,OAAO,KAGX,IADAnrB,KAAK4kB,MACE5kB,KAAKmrB,MAAM,UACdnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,OACXnrB,KAAK4kB,MAET,MAAMjX,EAAO3N,KAAK0qB,WAClB,GAAa,OAAT/c,EACA,MAAM,cAAyB,gBAAiB7K,GAKpD,GAHI9C,KAAKmrB,MAAM,UACXnrB,KAAK4kB,OAEJ5kB,KAAKsrB,WAAW,CAAC,OAAQ,QAC1B,MAAM,cAAyB,iBAAkBxoB,GAErD,MAAMwE,EAAQtH,KAAKwuB,SAInB,OAHIxuB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MAEF,CACH1kB,KAAM,QACNyN,OACArG,QACAN,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEAuB,aACI,MAAM1qB,EAAM9C,KAAKisB,gBACbjsB,KAAKmrB,MAAM,QACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,OACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MAET,MAAMtd,EAAQtH,KAAKwuB,SACfxuB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MAEL5kB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAET,IAAIjX,EAAO3N,KAAKgvB,UACZ6B,GAAS,EACb,MAAMnpB,EAAI1H,KAAK+rB,OAiBf,OAhBIrkB,GAAiB,OAAZA,EAAE5B,OAA8B,OAAX4B,EAAEV,MAA4B,QAAXU,EAAEV,OAC/ChH,KAAK4kB,MACLiM,GAAS,GAET7wB,KAAKmrB,MAAM,MACXnrB,KAAK4kB,MAELiM,IACAljB,EAAO,CACHzN,KAAM,MACN4F,MAAO6H,EACP3G,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,kBAGX,CACH/rB,KAAM,YACNyN,KAAMA,GAAQ,GACdrG,QACAN,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA6E,OACI,IAAI7jB,GAAW,EACf,MAAMnK,EAAM9C,KAAKisB,gBACjB,KAAIjsB,KAAKmrB,MAAM,OAASnrB,KAAKmrB,MAAM,QAAUnrB,KAAKmrB,MAAM,QAIpD,OAAO,KAEX,MAAM4F,EAAY/wB,KAAK6rB,SAEjBmF,EAAShxB,KAAKgqB,MAAM/d,MACtB+kB,IACoB,SAAhBA,EAAO9wB,MAAqC,MAAjB8wB,EAAOlrB,OAAkC,MAAjBkrB,EAAOlrB,MAQ1D9F,KAAKgqB,MAAMnoB,KAAKmvB,IAPK,MAAjBA,EAAOlrB,QACPmH,GAAW,GAEf8jB,EAAU7wB,KAAO8wB,EAAOlrB,MAAQirB,EAAU7wB,OAOlD,IAAI+wB,EAAO,KACY,QAAnBF,EAAU7wB,MAAqC,QAAnB6wB,EAAU7wB,OACtC+wB,EAAOjxB,KAAK0qB,SAAS,CAAC,OACC,QAAnBqG,EAAU7wB,OACV+M,GAAW,IAGnB,MAAMikB,EAAMlxB,KAAK0qB,SAAS,CAAC,OACrByG,EAAQnxB,KAAK0qB,SAAS,CAAC,OACvB7e,EAAO7L,KAAK0qB,SAAS,CAAC,IAAK,MACjC,GAAc,OAAVyG,GAA0B,OAARD,EAClB,MAAM,cAAyB,2BAA4BH,GAE3D/wB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAET,IAAIgK,GAAY,GACZ5uB,KAAKmrB,MAAM,SAINnrB,KAAKmrB,MAAM,UAHhByD,GAAY,EACZ5uB,KAAK4kB,OAMT,IAAItd,EAAQ,KACZ,GAAIsnB,EAAW,CAEX,GADAtnB,EAAQtH,KAAKwuB,UACTxuB,KAAKmrB,MAAM,QAIX,MAAM,cAAyB,0CAA2CroB,GAH1E9C,KAAK4kB,KAKb,MAEItd,EAAQtH,KAAK6sB,YAEjB,MAAO,CACH3sB,KAAM,MACNwL,KAAMylB,EACNnkB,GAAIkkB,EACJhkB,IAAK+jB,EACLhkB,WACApB,OACAvE,MAAOA,GAAS,GAChBN,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEAmF,UACI,MAAMtuB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,MACZ,OAAO,KAEXnrB,KAAK4kB,MACL,MAAM7hB,EAAI/C,KAAK0qB,SAAS,CAAC,IAAK,MAC9B,GAAI1qB,KAAKgqB,MAAM3kB,OAAS,EACpB,MAAM,cAAyB,iDAAkDvC,GAErF,MAAO,CACH5C,KAAM,SACN4F,MAAO/C,EACPiE,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEAoF,WACI,MAAMvuB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,MACZ,OAAO,KAGX,IADAnrB,KAAK4kB,MACE5kB,KAAKmrB,MAAM,UACdnrB,KAAK4kB,MAET,MAAMtX,EAAStN,KAAK0qB,SAAS,CAAC,MACxBzqB,EAAOD,KAAK0qB,SAAS,CAAC,MAC5B,IAAIpjB,EAAQ,KACRsnB,GAAY,EAiBhB,OAhBI5uB,KAAKmrB,MAAM,SACXyD,GAAY,EACZ5uB,KAAK4kB,OAEA5kB,KAAKmrB,MAAM,SAChByD,GAAY,GAEZA,GACAtnB,EAAQtH,KAAKwuB,SACTxuB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,OAITtd,EAAQtH,KAAK6sB,YAEV,CACH3sB,KAAM,UACND,OACAqN,SACAhG,MAAOA,GAAS,GAChBN,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEAqF,UACI,MAAMxuB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,QACZ,OAAO,KAEX,MAAMoG,EAAcvxB,KAAK4kB,MACzB,IAAK2M,EACD,OAAO,KAEX,MAAMlE,EAAMrtB,KAAK4kB,MACjB,IAAKyI,EACD,OAAO,KAEX,MAAMvnB,EAAQ9F,KAAK0qB,SAAS,CAAC,MAC7B,IAAK5kB,EACD,MAAM,cAAyB,0BAA2ByrB,GAE9D,GAAiB,QAAblE,EAAIntB,KACJ,MAAM,cAAyB,sBAAuBqxB,GAE1D,IAAIC,GAAkB,EAClBC,GAAkB,EACtB,MAAM5jB,EAAQ,GACd,MAAQ7N,KAAKirB,SAAS,CAClB,GAAIjrB,KAAKmrB,MAAM,QAAS,CACpB,GAAIsG,EACA,MAAM,cAAyB,kCAAmCF,GAEtEvxB,KAAK4kB,MACL,KACJ,CACA,GAAI5kB,KAAKmrB,MAAM,OAAQ,CACnBnrB,KAAK4kB,MACL,QACJ,CACA,GAAI4M,EACA,MAAM,cAAyB,sCAAuCD,GAG1E,IAAI5jB,EAAO,KACX,MAAM+jB,EAAY1xB,KAAK+rB,OACvB,GAAI2F,GAAgC,QAAnBA,EAAUxxB,KAEvBuxB,GAAkB,EAClBD,GAAkB,EAClB7jB,EAAO3N,KAAK4kB,MACR5kB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,UAGR,CAED,GAAI6M,EACA,MAAM,cAAyB,kCAAmCF,GAItE,GADA5jB,EAAO3N,KAAK8vB,UACPniB,EACD,MAAM,cAAyB,kCAAmC4jB,GAEtE,MAAMrC,EAASlvB,KAAK4kB,MACpB,IAAKsK,GAA0B,QAAhBA,EAAOhvB,KAClB,MAAM,cAAyB,4BAA6BqxB,GAE5DvxB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,KAEb,CAEA,MAAM+M,EAAY3xB,KAAKwuB,SACjBoD,EAAW5xB,KAAK+rB,OACtB,GAAI6F,GAA8B,SAAlBA,EAAS1xB,KACrBF,KAAK4kB,UAEJ,CACD,GAAI4M,EACA,MAAM,cAAyB,8BAA+BD,GAGlEE,GAAkB,CACtB,CACA5jB,EAAMhM,KAAK,CAAC8L,EAAMgkB,GACtB,CACA,MAAO,CACHzxB,KAAM,SACN4F,QACA+H,MAAOA,GAAS,GAChB7G,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA4F,aACI,MAAM/uB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,YACZ,OAAO,KAEX,MAAMtS,EAAM7Y,KAAK4kB,MACjB,IAAK/L,EACD,OAAO,KAEX,IAAInK,EAAO,GAEP1O,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAGL5kB,KAAKmrB,MAAM,OACXzc,EAAO1O,KAAKyuB,oBAAsB,IAGlCzuB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAGT5kB,KAAKkqB,YACLlqB,KAAK2qB,YACL,MAAMrjB,EAAQtH,KAAKwuB,SAEnB,IAAKxuB,KAAKmrB,MAAM,QACZ,MAAM,cAAyB,2CAA4CroB,GAK/E,OAHA9C,KAAK4kB,MACL5kB,KAAK4qB,YACL5qB,KAAKkqB,YACE,CACHhqB,KAAM,WACNwO,OACApH,QACAM,KAAMiR,EAAIjR,KACVZ,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA6F,UACI,MAAMhvB,EAAM9C,KAAKisB,gBACX8F,EAAS/xB,KAAK4kB,MACpB,GAAe,OAAXmN,EACA,OAAO,KAEX,MAAMjsB,EAAQ9F,KAAK0qB,SAAS,CAAC,MACvB7e,EAAO7L,KAAK0qB,SAAS,CAAC,IAAK,MACjC,IAAK7e,GAAuB,SAAdA,EAAK3L,MAAiC,SAAd2L,EAAK3L,MAAiC,SAAd2L,EAAK3L,KAC/D,MAAM,cAAyB,6CAA8C6xB,GAGjF,GAAkB,SAAdlmB,EAAK3L,KACL,MAAO,CACHA,KAAM,YACND,KAAM4L,EAAK5L,KACXmM,MAAOP,EAAKO,MACZtG,QACAkB,KAAM,GACNuF,UAAWvM,KAAKsqB,sBACbxnB,EACHulB,IAAKroB,KAAKisB,iBAKlB,MAAO,CACH/rB,KAAM,MACND,KAHUD,KAAKgyB,WAAWnmB,GAI1B/F,QACAkB,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEAgG,YACI,MAAMnvB,EAAM9C,KAAKisB,gBACXiG,EAAWlyB,KAAK4kB,MACtB,GAAiB,OAAbsN,EACA,OAAO,KAEX,MAAMrmB,EAAO7L,KAAK0qB,SAAS,CAAC,MACtB5kB,EAAQ9F,KAAK0qB,SAAS,CAAC,IAAK,IAAK,MACvC,IAAK7e,GAAuB,SAAdA,EAAK3L,MAAiC,SAAd2L,EAAK3L,MAAiC,SAAd2L,EAAK3L,KAC/D,MAAM,cAAyB,6CAA8CgyB,GAIjF,MAAO,CACHhyB,KAAM,gBACND,KAHcD,KAAKmyB,UAAUtmB,GAAM,GAInC6F,QAAS,KACT5L,QACAkB,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CACAmG,UACI,MAAMtvB,EAAM9C,KAAKisB,gBACXoG,EAASryB,KAAK4kB,MACpB,GAAe,OAAXyN,EACA,OAAO,KAGX,GAAIryB,KAAKmrB,MAAM,MAEX,OADAnrB,KAAK+qB,UAAU,CAAE7qB,KAAM,OAAQ4F,MAAOusB,EAAOvsB,MAAOkB,KAAMqrB,EAAOrrB,QAASlE,EAAKulB,IAAKroB,KAAKisB,kBAClFjsB,KAAK8wB,OAGhB,IAAIhrB,EAAQ9F,KAAK0qB,SAAS,CAAC,KAAM,KAC5B5kB,IACDA,EAAQ,CAAE5F,KAAM,SAAU4F,MAAO,EAAGkB,KAAM,QAASlE,EAAKulB,IAAKroB,KAAKisB,kBAEtE,MAAMpgB,EAAO7L,KAAK0qB,SAAS,CAAC,MAC5B,IAAK7e,GAAuB,SAAdA,EAAK3L,MAAiC,SAAd2L,EAAK3L,KACvC,MAAM,cAAyB,IAAImyB,EAAOnyB,iCAAiCmyB,EAAOnyB,iBAAkBmyB,GAMxG,MAHqB,MAAjBA,EAAOvsB,QACPA,EAAQ,CAAE5F,KAAM,KAAMoR,SAAU,IAAKd,KAAM1K,EAAOyK,MAAO,CAAErQ,KAAM,SAAU4F,OAAQ,EAAGnG,KAAM0yB,EAAO1yB,MAAQqH,KAAM,MAAOlE,IAErH,CACH5C,KAAM,MACND,KAAM4L,EACN/F,QACAkB,KAAMqrB,EAAOrrB,QACVlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CACAmC,QACI,GAAIpuB,KAAKirB,QACL,OAAO,KAGX,MAAQjrB,KAAKirB,SAAS,CAKlB,GAJIjrB,KAAKmrB,MAAM,SACXnrB,KAAK4kB,MAGL5kB,KAAKmrB,MAAM,MACX,OAAOnrB,KAAK8xB,UAEhB,GAAI9xB,KAAKmrB,MAAM,OACX,OAAOnrB,KAAKiyB,YAGhB,GAAIjyB,KAAKmrB,MAAM,KACX,OAAOnrB,KAAK0wB,cAEhB,GAAI1wB,KAAKmrB,MAAM,KACX,OAAOnrB,KAAK4wB,SAEhB,GAAI5wB,KAAKmrB,MAAM,OAASnrB,KAAKmrB,MAAM,QAAUnrB,KAAKmrB,MAAM,OACpD,OAAOnrB,KAAK8wB,OAEhB,GAAI9wB,KAAKmrB,MAAM,MACX,OAAOnrB,KAAKqxB,WAEhB,GAAIrxB,KAAKmrB,MAAM,QACX,OAAOnrB,KAAKsxB,UAEhB,GAAItxB,KAAKmrB,MAAM,MACX,OAAOnrB,KAAKoxB,UAEhB,GAAIpxB,KAAKmrB,MAAM,MAAQnrB,KAAKmrB,MAAM,KAC9B,OAAOnrB,KAAKoyB,UAGhB,GAAIpyB,KAAKqrB,OAAO,CAAC,CAAC,OAAQ,QAAS,MAAO,CACtC,MAAMiH,EAAMtyB,KAAK+rB,OACjB,GAAIuG,GAAoB,KAAbA,EAAItrB,KAAa,CACxB,MAAMU,EAAI1H,KAAK8vB,SACf,GAAIpoB,EAAG,CACH,MAAMV,EAAOU,EAAEV,MAAQ,GACvB,GAAe,SAAXU,EAAExH,OAA+B,KAAXwH,EAAEV,MAAeie,EAAW1f,QAAQyB,IAAS,GAEnE,OADAU,EAAEV,KAAO,GACFU,EAEX1H,KAAK+qB,UAAUrjB,EACnB,CACI1H,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAET,QACJ,CACJ,CAEA,GAAI5kB,KAAKmrB,MAAM,QAAS,CACpB,MAAMnc,EAAIhP,KAAKuyB,YACf,GAAU,OAANvjB,EACA,SAGJ,GAAIhP,KAAKmrB,MAAM,KAAM,CACjBnrB,KAAK+qB,UAAU/b,GACf,QACJ,CAEA,IAAKhP,KAAKsrB,WAAWpG,GACjB,OAAOlW,EAGXhP,KAAK+qB,UAAU/qB,KAAK4vB,gBAAgB5gB,IACpC,QACJ,CAEA,MAAMtH,EAAI1H,KAAKgvB,UACf,IAAItnB,EAIJ,MAHI1H,KAAK+qB,UAAUrjB,EAIvB,CAEA,GAAI1H,KAAKgqB,MAAM3kB,OAAS,EAAG,CACvBrF,KAAKub,OAAO+Q,MAAM,uBAAyBxnB,KAAKC,UAAU/E,KAAKgqB,MAAO,KAAM,GAAK,WAAallB,KAAKC,UAAU/E,KAAK+rB,OAAQ,KAAM,IAChI,IAAIyG,EAAW,WAAWxyB,KAAKgqB,MAAMlnB,KAAKoF,GAAMlI,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,KAAOrgB,KAAK,iBACxFtM,EAAM,WAAWO,KAAKgqB,MAAMlnB,KAAKoF,GAAMlI,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,KAAQrgB,KAAK,iBAExF,IAAK,MAAM7D,KAAKlI,KAAKgqB,MAAO,CACxB,MAAMyI,EAAKzyB,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,GACrCsG,EAAK1yB,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,GACvCqG,IAAOC,IACPF,GAAY,GAAGxyB,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,MAASpsB,KAAKksB,UAAUhkB,EAAG,CAAEkkB,MAAO,IAAK,gBACxF3sB,GAAO,GAAGgzB,KAAMC,eAExB,CACA,MAAM9xB,EAAQZ,KAAKgqB,MAAM,GACnBnpB,EAAOb,KAAKgqB,MAAMhqB,KAAKgqB,MAAM3kB,OAAS,GAE5C,MADArF,KAAKub,OAAO+Q,MAAMkG,EAAU5xB,GACtB,cAAyBnB,EAAKmB,EAAOC,EAC/C,CACA,OAAOb,KAAK0qB,SAAS,GACzB,CAEA6H,YACI,MAAMzvB,EAAM9C,KAAKisB,gBACXvkB,EAAI1H,KAAK4kB,MACf,IAAKld,EACD,OAAO,KAEX,MAAMrB,EAAIqB,EAAEE,KACNsH,EAAWxH,EAAE5B,MAEnB,IAAI6sB,EAAU,KACd,GAAe,OAAXjrB,EAAEV,KAAe,CACjB,IACI2rB,EAAU3yB,KAAK6xB,YAInB,CAFA,MAAOnR,GACH,MAAM,cAAyB,IAAIhZ,EAAE5B,qCAAqC4a,EAAIxf,UAAWwG,EAC7F,CACA,GAAgB,OAAZirB,EACA,MAAM,cAAyB,+BAAgCjrB,EAEvE,CACA,IAAKrB,QAAuB,IAAXA,EAAEW,KACf,MAAM,cAAyB,aAAcU,GAGjD1H,KAAKuqB,mBAAmB1oB,KAAK,CAAE5B,KAAMiP,KAAa7I,IAE9CA,GAAKA,EAAEE,UACPvG,KAAKuC,aAAc,GAGvB,MAAMmM,EAAO,GACb,IAAIkkB,EAAY,EACZC,EAAa,EACjB,IAAK,IAAIprB,EAAIpB,EAAEW,KAAK3B,OAAS,EAAGoC,GAAK,EAAGA,IACpC,OAAa,CAET,IAAIqrB,EAAS9yB,KAAK0qB,SAASrkB,EAAEW,KAAKS,IAClC,GAAe,OAAXqrB,EACAD,QAEC,MAAIprB,EAAIpB,EAAEW,KAAK3B,OAAS,IAAMgB,EAAEyV,eAKjC,MAJA8W,IACAE,EAASH,CAIb,CACA,GAAe,OAAXG,QAAsCjzB,IAAnBwG,EAAEuhB,cAAoD,OAAtBvhB,EAAEuhB,aAAangB,GAAa,CAC/E,GAAoB,SAAhBqrB,EAAO5yB,KAGN,CACD,MAAMkF,EAAWiB,EAAU,SAAIA,EAAEuF,SAASnE,GAAK,GAAGA,EAAI,SACtD,MAAM,cAAyB,MAAMC,EAAE5B,aAAaV,qBAA4BsC,EACpF,CALIorB,EAAO5yB,KAAO,cAMtB,CAEA,GADAwO,EAAKkS,QAAQkS,GACTrrB,EAAIpB,EAAEW,KAAK3B,OAAS,IAAMgB,EAAEyV,eAC5B,KAER,CAIJ,GAAI8W,GAAa,IAAMC,EAAa,GAAgB,KAAXnrB,EAAEV,MAAeie,EAAW1f,QAAQmC,EAAEV,OAAS,GACpF,MAAM,cAAyB,MAAMU,EAAE5B,qBAAsB4B,GAEjE1H,KAAK+pB,UAAUpiB,IAAID,EAAE5B,OAErB,MAAMitB,EAAW,CACb7yB,KAAM,OACND,KAAMyH,EAAE5B,MACR4I,OACA1H,KAAMU,EAAEV,QACLlE,EACHulB,IAAKroB,KAAKisB,iBAGd,GAAsB,aAAlB8G,EAAS9yB,MACT,GAAIyO,EAAKrJ,OAAS,GAAKqJ,EAAK,GAAI,CAC5B,IAAI9M,EAAQ,GAAK8M,EAAK,GAAG5I,MACX,QAAVlE,IACAA,EAAQ,GAAK8M,EAAK,GAAGhP,MAEzBM,KAAKiqB,eAAepoB,KAAK7B,KAAKmZ,SAC9BnZ,KAAKmZ,QAAUyN,EAAUQ,kBAAkBxlB,GAC3C5B,KAAKgZ,QAAQnX,KAAK7B,KAAKmZ,QAC3B,OAEC,GAAsB,YAAlB4Z,EAAS9yB,KAAoB,CAClC,MAAM+yB,EAAQhzB,KAAKiqB,eAAehe,MAC9B+mB,IACAhzB,KAAKmZ,QAAU6Z,EAEvB,CAEA,MAAe,KAAXtrB,EAAEV,KACK+rB,EAGP9N,EAAW1f,QAAQmC,EAAEV,OAAS,GAC9B+rB,EAAS/rB,KAAO,KACT+rB,IAGXA,EAASnrB,KAAOvB,EAChBrG,KAAK+qB,UAAUgI,GACR,KACX,CAEA9E,OACI,MAAMnrB,EAAM9C,KAAKisB,gBAEjB,GAAIjsB,KAAKqrB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMxf,EAAO7L,KAAK+rB,OAClB,IAAIkH,GAAQ,EACZ,IACI,GAAIjzB,KAAKurB,OAAO,CAAC,OAAQ,KAAMvrB,KAAKkzB,SAAWlzB,KAAKurB,OAAO,CAAC,OAAQ,KAAMvrB,KAAK6sB,YAAa,CACxF,GAAuB,QAAnB7sB,KAAKuf,EAAE,GAAGrf,KACV,MAAM,IAAIZ,MAAM,UAEhBU,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAET,MAAMuO,EAAYnzB,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAEzC,MAAO,CACHrf,KAAM,MACND,KAAMkzB,EACNrtB,MAJe9F,KAAKuf,EAAE,MAKnBzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAII,MAFAgH,GAAQ,EACRjzB,KAAKub,OAAO+Q,MAAM,GAAGtsB,KAAKksB,UAAUrgB,EAAM,CAAEugB,MAAO,IAAK,0BAA8BvgB,GAChF,cAAyB,GAAG7L,KAAKksB,UAAUrgB,EAAM,CAAEugB,MAAO,IAAK,0BAA+BtpB,EAS5G,CANA,MAAO4d,GACH,GAAIuS,EACA,MAAMvS,EAGV,MADA1gB,KAAKub,OAAO+Q,MAAM,GAAGtsB,KAAKksB,UAAUrgB,EAAM,CAAEugB,MAAO,IAAK,+BAAkC1L,EAAIxf,UAAW2K,GACnG,cAAyB,GAAG7L,KAAKksB,UAAUrgB,EAAM,CAAEugB,MAAO,IAAK,+BAAmC1L,EAAIxf,UAAW4B,EAC3H,CACJ,CAEA,GAAI9C,KAAKqrB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAM+H,EAAKpzB,KAAKqzB,YAAYvwB,GAI5B,GAHI9C,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAELwO,EAEA,OADAA,EAAG7mB,UAAYvM,KAAKsqB,mBACb8I,CAEf,CACA,GAAIpzB,KAAKqrB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAMiI,EAAKtzB,KAAKuzB,iBAAiBzwB,GAIjC,GAHI9C,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAEL0O,EAEA,OADAA,EAAG/mB,UAAYvM,KAAKsqB,mBACbgJ,CAEf,CAEA,GAAItzB,KAAKurB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMiI,EAAYxzB,KAAKuf,EAAE,GACzB,IAAKvf,KAAKsrB,WAAW,CAAC,KAAM,OACxB,MAAM,cAAyB,UAAYkI,EAAU1tB,MAAQ,UAAW0tB,GAE5E,MAAM/hB,EAAQzR,KAAK6rB,SACbhgB,EAAO7L,KAAKmyB,UAAUqB,EAA0B,OAAf/hB,EAAMvR,MAE7C,IAAI4F,EAAQ,KAQZ,OAPI9F,KAAKmrB,MAAM,QACXnrB,KAAK4kB,MACL9e,EAAQ9F,KAAKkzB,SAEblzB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAEF,CACH1kB,KAAM,gBACND,KAAM4L,EACN6F,QAASD,EAAMvR,KACf4F,WACGhD,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,KAAM,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAE/C,MAAO,CACHhzB,KAAM,gBACND,KAHSD,KAAKmyB,UAAUnyB,KAAKuf,EAAE,IAAI,GAInC7N,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CACA,GAAIjsB,KAAKurB,OAAO,CAAC,KAAM,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAE/C,MAAO,CACHhzB,KAAM,gBACND,KAHSD,KAAKmyB,UAAUnyB,KAAKuf,EAAE,IAAI,GAInC7N,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,KAAMvrB,KAAKyzB,WAAY,KAAMzzB,KAAKkzB,QAAS,CACxD,MAAMjwB,EAAQjD,KAAKuf,EAAE,GAErB,KAAItc,GAASA,EAAM6C,iBAAiB0B,OAQhC,MAAM,cAAyB,gDAAiDxH,KAAKuf,EAAE,IAPvF,IAAK,MAAM9X,KAAKxE,EAAM6C,MAClB,GAA4B,SAAxB7C,EAAM6C,MAAM2B,GAAGvH,KACf,MAAM,cAAyB,WAAWuH,EAAI,2CAA4CzH,KAAKuf,EAAE,IAQ7G,OADAtc,EAAM6C,MAAQ9F,KAAK0zB,cAAczwB,EAAM6C,OAAO,GACvC,CACH5F,KAAM,oBACN+C,MAAOA,EAAM6C,MACb4L,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,KAAMvrB,KAAKyzB,WAAY,KAAMzzB,KAAKkzB,QAAS,CACxD,MAAMjwB,EAAQjD,KAAKuf,EAAE,GAErB,KAAItc,GAASA,EAAM6C,iBAAiB0B,OAQhC,MAAM,cAAyB,gDAAiDxH,KAAKuf,EAAE,IAPvF,IAAK,MAAM9X,KAAKxE,EAAM6C,MAClB,GAA4B,SAAxB7C,EAAM6C,MAAM2B,GAAGvH,KACf,MAAM,cAAyB,WAAWuH,EAAI,2CAA4CzH,KAAKuf,EAAE,IAQ7G,OADAtc,EAAM6C,MAAQ9F,KAAK0zB,cAAczwB,EAAM6C,OAAO,GACvC,CACH5F,KAAM,oBACN+C,MAAOA,EAAM6C,MACb4L,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKqrB,OAAO,CAAC,OAAQ,QAAS,SAAU,CAExC,GAAIrrB,KAAKurB,OAAO,CAAC,OAAQ,QAAS,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAC1D,IAAIjwB,EAAQ,CAACjD,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,IAE/B,OADAtc,EAAQjD,KAAK0zB,cAAczwB,GAAO,GAC3B,CACH/C,KAAM,oBACN+C,QACAyO,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAC3E,IAAIjwB,EAAQ,CAACjD,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,IAE1C,OADAtc,EAAQjD,KAAK0zB,cAAczwB,GAAO,GAC3B,CACH/C,KAAM,oBACN+C,QACAyO,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAC5F,IAAIjwB,EAAQ,CAACjD,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,IAErD,OADAtc,EAAQjD,KAAK0zB,cAAczwB,GAAO,GAC3B,CACH/C,KAAM,oBACN+C,QACAyO,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKurB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAMvrB,KAAKkzB,QAAS,CAC7G,IAAIjwB,EAAQ,CAACjD,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,GAAIvf,KAAKuf,EAAE,IAEhE,OADAtc,EAAQjD,KAAK0zB,cAAczwB,GAAO,GAC3B,CACH/C,KAAM,oBACN+C,QACAyO,QAAS,KACT5L,MAAO9F,KAAKuf,EAAE,OACXzc,EACHulB,IAAKroB,KAAKisB,gBAElB,CACJ,CACA,OAAO,IACX,CAMA0H,gBAAgBlvB,GAEZ,OAA4B,IAAxBzE,KAAKoqB,eACE3lB,EAGJ,IACAA,EACH,KAAQ,KACR,SAAY,IACZ,KAAQA,EACR,MAAS,IACFA,EACH,KAAQ,SACR,MAASzE,KAAKoqB,gBAG1B,CAKAwJ,kBAAkBC,GACd,OAAKA,EAGA7zB,KAAKqqB,sBAINwJ,EAAIxuB,QAAU,EACPwuB,EAEJA,EAAI3U,UANA2U,EAHA,EAUf,CAEAR,YAAYvwB,GAER,OAAI9C,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAK8vB,OAAQ,KAAM9vB,KAAKkzB,QAC3C,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAO,CAACpM,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KACpCzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAK8vB,OAAQ,IAAK9vB,KAAK8vB,OAAQ,KAAM9vB,KAAKkzB,QAC7D,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC5FzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAK8vB,OAAQ,IAAK9vB,KAAK8vB,OAAQ,IAAK9vB,KAAK8vB,OAAQ,KAAM9vB,KAAKkzB,QAC/E,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC7HzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,OAAQ,KAAM9vB,KAAKkzB,QACjE,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC5FzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,OAAQ,KAAM9vB,KAAKkzB,QACvF,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC7HzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAGX,IACX,CAEAsH,iBAAiBzwB,GAEb,OAAI9C,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,MAAO,IAAK,KAAMlzB,KAAKkzB,QAC/C,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAO,CAACpM,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KACpCzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,MAAO,IAAK,IAAKlzB,KAAKkzB,MAAO,IAAK,KAAMlzB,KAAKkzB,QACrE,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC5FzZ,MAAO9F,KAAKuf,EAAE,GACd/f,IAAK,OACFsD,EACHulB,IAAKroB,KAAKisB,iBAGdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,IAAK,KAAMlzB,KAAKkzB,QACpE,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC5FzZ,MAAO9F,KAAKuf,EAAE,GACd/f,IAAK,OACFsD,EACHulB,IAAKroB,KAAKisB,iBAIdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,MAAO,IAAK,IAAKlzB,KAAKkzB,MAAO,IAAK,IAAKlzB,KAAKkzB,MAAO,IAAK,KAAMlzB,KAAKkzB,QAC3F,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC7HzZ,MAAO9F,KAAKuf,EAAE,OACXzc,EACHulB,IAAKroB,KAAKisB,iBAGdjsB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,IAAK,KAAMlzB,KAAKkzB,QACzF,CACHhzB,KAAM,YACND,KAAMD,KAAKgyB,WAAWhyB,KAAKuf,EAAE,IAC7BnT,MAAOpM,KAAK4zB,kBAAkB,CAAC5zB,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAAKvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,MAC7HzZ,MAAO9F,KAAKuf,EAAE,MACXzc,EACHulB,IAAKroB,KAAKisB,iBAGX,IACX,CAEAiH,QACI,MAAMpwB,EAAM9C,KAAKisB,gBACjB,GAAIjsB,KAAKmrB,MAAM,OACX,OAAO,KAGX,MAAMzjB,EAAI1H,KAAKgvB,UACf,IAAKtnB,EACD,OAAO,KAGX,GAAe,KAAXA,EAAEV,KACF,OAAOU,EAGX1H,KAAK+qB,UAAUrjB,GACf,MAAM0V,EAAKpd,KAAKouB,QAChB,IAAKhR,EACD,OAAOpd,KAAK0qB,WAGhB,GAAIzF,EAAW1f,QAAQ6X,EAAGpW,MAAQ,IAAM,EACpC,OAAOoW,EAGX,MAAMmE,EAAKvhB,KAAKkzB,QAChB,OAAK3R,EAGE,CACHrhB,KAAM,SACNsQ,KAAM4M,EACN7M,MAAOgR,EACPva,KAAMua,EAAGva,QACNlE,EACHulB,IAAKroB,KAAKisB,iBARH7O,CAUf,CAEA0W,cACI,IAAK9zB,KAAKmrB,MAAM,KACZ,OAAO,KAEX,MAAMzjB,EAAI1H,KAAK4kB,MACf,IAAKld,EACD,MAAM,IAAIpI,MAAM,sCAEpBU,KAAK2qB,YACL,MAAM5nB,EAAI/C,KAAKkzB,SAAWlzB,KAAK6sB,YAC/B,GAAU,OAAN9pB,EAAY,CACZ,MAAM0a,EAAKzd,KAAK4kB,MAEhB,MADA5kB,KAAKub,OAAO+Q,MAAM,eAAiBtsB,KAAKksB,UAAUzO,EAAI,CAAE2O,MAAO,IAAK,GAAQ,MAAO1kB,GAC7E,cAAyB,eAAiB1H,KAAKksB,UAAUzO,EAAI,CAAE2O,MAAO,IAAK,GAAS,MAAO1kB,EACrG,CACA,IAAK1H,KAAKmrB,MAAM,KAEZ,MADAnrB,KAAKub,OAAO+Q,MAAM,eAAiBtsB,KAAKksB,UAAUnpB,EAAG,CAAEqpB,MAAO,IAAK,GAAQ,MAAO1kB,GAC5E,cAAyB,eAAiB1H,KAAKksB,UAAUnpB,EAAG,CAAEqpB,MAAO,IAAK,GAAS,MAAO1kB,GAEpG,MAAMqsB,EAAc/zB,KAAK4kB,MAKzB,OAJA5kB,KAAK4qB,YACDmJ,IACAhxB,EAAEiE,KAAO+sB,EAAY/sB,MAElBjE,CACX,CAEA+sB,SACI,MAAMhtB,EAAM9C,KAAKisB,gBAMjB,GAJIjsB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAGL5kB,KAAKsrB,WAAW,CAAC,SAAU,WAC3B,OAAOtrB,KAAK6rB,SAGhB,GAAI7rB,KAAKmrB,MAAM,KACX,OAAOnrB,KAAK8zB,cAGhB,GAAI9zB,KAAKqrB,OAAO,CAAC,IAAK,YAAcrrB,KAAKqrB,OAAO,CAAC,IAAK,UAAYrrB,KAAKqrB,OAAO,CAAC,IAAK,SAAU,CAC1F,MAAM1O,EAAI3c,KAAK4kB,MACT7hB,EAAI/C,KAAK8vB,SACT9oB,EAAQjE,GAAKA,EAAEiE,KAAQjE,EAAEiE,KAAO,GAEtC,MAAO,CACH9G,KAAM,KACNoR,SAAU,IACVd,KAAM,CAAEtQ,KAAM,SAAU4F,OAAQ,EAAGnG,KAJzBgd,GAAKA,EAAEhd,KAAQgd,EAAEhd,KAAO,GAKlC4Q,MAAOxN,GAAK,GACZiE,UACGlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKmrB,MAAM,OAAQ,CACnBnrB,KAAK4kB,MACL,MAAM7hB,EAAI/C,KAAK8vB,SAEf,MAAO,CACH5vB,KAAM,MACN4F,MAAO/C,EACPiE,KAJUjE,GAAKA,EAAEiE,KAAQjE,EAAEiE,KAAO,MAK/BlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,MAAMzmB,EAAIxF,KAAKyzB,aACf,GAAIjuB,EACA,OAAOA,EAEX,MAAM8Q,EAAItW,KAAKg0B,cACf,GAAI1d,EACA,OAAOA,EAGX,MAAM2d,EAAY/O,EAAa7F,OAAO,CAAC,MAAO,IAAK,IAAK,MAAO,IAAK,IAAK,KAAM,SAC/E,GAAIrf,KAAKqrB,OAAO,CAAC,OAAQ4I,IAAa,CAClC,MAAMC,EAAKl0B,KAAK4kB,MAChB,IAAKsP,EACD,MAAM,IAAI50B,MAAM,iCAEpB,MAAM+G,EAAIrG,KAAKm0B,cAAcD,GAC7Bl0B,KAAK+pB,UAAUpiB,IAAItB,EAAEP,OAErB,MAAM8B,EAAOvB,EAAEuB,KACT8G,EAAO,GACb,IAAK9G,EACD,MAAM,cAAyB,QAAQvB,EAAEpG,gBAAiBi0B,GAE9D,GAAItsB,EAAKZ,MAA6B,IAArBY,EAAKZ,KAAK3B,OACvBqJ,EAAK7M,KAAK,CAAE3B,KAAM,OAAQ4F,MAAO,YAEhC,GAAI8B,EAAKZ,MAAQY,EAAKZ,KAAK3B,QAAU,EACtC,MAAM,cAAyB,MAAMgB,EAAEpG,sBAAsB2H,EAAKZ,KAAK3B,uBAAwB6uB,GAEnG,MAAO,CACHh0B,KAAM,OACND,KAAMoG,EAAEP,MACR4I,OACA1H,KAAMX,EAAEW,QACLlE,EACHulB,IAAKroB,KAAKisB,gBAElB,CAEA,GAAIjsB,KAAKqrB,OAAO,CAAC,CAAC,OAAQ,QAAS,OAAiC,KAAxBrrB,KAAKgsB,UAAUhlB,KAAa,CACpE,MAAMX,EAAIrG,KAAK+rB,OACf,GAAI/rB,KAAKurB,OAAO,CAAC,CAAC,OAAQ,QAAS,IAAKvrB,KAAKuwB,aAAc,MAAO,CAC9D,MAAMvd,EAAKhT,KAAKm0B,cAAcn0B,KAAKuf,EAAE,IAC/B7Q,EAAO1O,KAAKuf,EAAE,GACdrQ,EAAW8D,EAAGlN,MACpB9F,KAAK+pB,UAAUpiB,IAAIuH,GAEnB,MAAMtH,EAAOoL,EAAGpL,KAChB,GAAIA,GAAQA,EAAKZ,KAEb,GAAIY,EAAKZ,KAAK3B,SAAWqJ,EAAKrJ,aAGzB,IAAIuC,EAAKkU,eAIV,MAAM,cAAyB,MAAM9I,EAAGlN,YAAY4I,EAAKrJ,oBAAoBuC,EAAKZ,KAAK3B,uBAAwB2N,GAGvH,MAAO,CACH9S,KAAM,OACND,KAAMiP,EACNR,OACA1H,KAAMhH,KAAKuf,EAAE,GAAGvY,QACblE,EACHulB,IAAKroB,KAAKisB,gBAElB,CACA,MAAM,cAAyB,eAAgB5lB,GAAK8e,IACxD,CAEA,GAAInlB,KAAKqrB,OAAO,CAAC,OAAQ,MACrB,MAAM,IAAI/rB,MAAM,sBAGpB,GAAIU,KAAKmrB,MAAM,YACX,OAAOnrB,KAAK6xB,aAGhB,MAAMhmB,EAAO7L,KAAKo0B,aAClB,OAAIvoB,GAIG,IACX,CACAwoB,mBAAmBltB,GAKf,GAJKA,EAAIiF,QACLjF,EAAIiF,MAAQ,IAGZpM,KAAKmrB,MAAM,KAAM,CACjB,GAAInrB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,SAMnE,OALA3oB,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIiF,MAAQpM,KAAK4zB,kBAAkBzsB,EAAIiF,OACvCjF,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,EAEX,GAAIhH,KAAKurB,OAAO,CAAC,IAAKvrB,KAAK8vB,OAAQ,QAAS9vB,KAAK8vB,SAK7C,OAJA3oB,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIiF,MAAQpM,KAAK4zB,kBAAkBzsB,EAAIiF,OACvCjF,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,EAEX,GAAIhH,KAAKurB,OAAO,CAAC,IAAKvrB,KAAK8vB,SAGvB,OAFA3oB,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,EAEX,MAAM,cAAyB,uBAAwBG,EAC3D,CACA,GAAInH,KAAKmrB,MAAM,MACPnrB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKkzB,MAAO,MAG9B,OAFA/rB,EAAIiF,MAAMvK,KAAK7B,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAC3CpY,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,EAGf,GAAIhH,KAAKmrB,MAAM,MACPnrB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,MAAO,CAC1D,MAAM9mB,EAAQ,CACVpM,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAC5Bvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAIhC,OAFApY,EAAIiF,MAAQpM,KAAK4zB,kBAAkBxnB,GACnCjF,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,CACX,CAEJ,GAAIhH,KAAKmrB,MAAM,MACPnrB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,QAASlzB,KAAKkzB,MAAO,MAAO,CAC/E,MAAM9mB,EAAQ,CACVpM,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAC5Bvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,IAC5Bvf,KAAK2zB,gBAAgB3zB,KAAKuf,EAAE,KAIhC,OAFApY,EAAIiF,MAAQpM,KAAK4zB,kBAAkBxnB,GACnCjF,EAAIH,KAAOhH,KAAKuf,EAAE,GAAGvY,MACd,CACX,CAEJ,OAAO,CACX,CAEAotB,aACI,MAAMtxB,EAAM9C,KAAKisB,gBACjB,GAAIjsB,KAAKmrB,MAAM,QAAS,CACpB,MAAMzjB,EAAI1H,KAAK6rB,SACThgB,EAAO7L,KAAKm0B,cAAczsB,GAEhC,GAAkB,KAAdmE,EAAK7E,MAAehH,KAAKsrB,WAAW,CAAC,IAAK,MAAO,CACjD,MAAMnkB,EAAM,CACRjH,KAAM,OACND,KAAM4L,EACNO,MAAO,GACPpF,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,iBAEd,MAAQjsB,KAAKirB,SACJjrB,KAAKq0B,mBAAmBltB,KAIjC,GAAIA,EAAIiF,OAA8B,IAArBjF,EAAIiF,MAAM/G,OACvB,MAAM,cAAyB,MAAMwG,EAAK/F,kBAAmB+F,GAEjE,OAAO1E,CACX,CACA,OAAO0E,CACX,CACA,OAAO,IACX,CAEAsmB,UAAUtmB,EAAMyoB,GACZ,IAAIlb,EAAQvN,EAAK/F,MACjB,MAAMumB,EAAWiI,EAAU,QAAU,MACrC,OAAuB,IAAnBt0B,KAAKkqB,WAED9Q,EAAM7T,QAAQ,MAAQ,IACtB6T,EAAQpZ,KAAKmZ,QAAU,KAAOC,GAElCpZ,KAAK6mB,SAASzN,GAAS,CAAElZ,KAAMmsB,EAAUvmB,MAAO,IAChD+F,EAAK/F,MAAQsT,EACNvN,IAIP7L,KAAKmqB,UAAU/Q,GAAS,CAAElZ,KAAMmsB,EAAUvmB,MAAO,IAC1C+F,EAEf,CAKAmmB,WAAWnmB,GAEP,MAAMxF,EAAIrG,KAAKmK,QAAQ0B,EAAK/F,OAC5B,OAAIO,GACIA,GAAiB,WAAZA,EAAEgT,QACPxN,EAAK/F,MAAQO,EAAEpG,MAEZ4L,IAGX7L,KAAKmyB,UAAUtmB,GAAM,GACdA,EACX,CAEAsoB,cAActoB,GAEV,MAAMxF,EAAIrG,KAAKmK,QAAQ0B,EAAK/F,OAS5B,OARKO,EAKIA,GAAiB,WAAZA,EAAEgT,QACZxN,EAAK/F,MAAQO,EAAEpG,MALQ,IAAnBD,KAAKkqB,WAAmBre,EAAK/F,MAAMP,QAAQ,MAAQ,IACnDsG,EAAK/F,MAAQ9F,KAAKmZ,QAAU,KAAOtN,EAAK/F,OAMzC+F,CACX,CAEA6nB,cAAc3G,EAAOuH,GACjB,IAAK,IAAI7sB,EAAI,EAAGA,EAAIslB,EAAM1nB,OAAQoC,IAC9BslB,EAAMtlB,GAAKzH,KAAKmyB,UAAUpF,EAAMtlB,GAAI6sB,GAExC,OAAOvH,CACX,CACAwH,mBACI,MAAM/uB,EAAI,GACJgvB,EAAax0B,KAAK+rB,OACxB,IAAKyI,EACD,OAAO,KAEX,MAAQx0B,KAAKirB,SAAS,CAClB,KAAOjrB,KAAKmrB,MAAM,QACdnrB,KAAK4kB,MAET,GAAI5kB,KAAKmrB,MAAM,KACX,MAEJ,GAAInrB,KAAKurB,OAAO,CAAC,OAAQ,IAAKvrB,KAAKkzB,QAC/BlzB,KAAKuf,EAAE,GAAGrf,KAAO,SACjBsF,EAAE3D,KAAK,CACHuE,IAAKpG,KAAKuf,EAAE,GACZzZ,MAAO9F,KAAKuf,EAAE,UAGjB,GAAIvf,KAAKurB,OAAO,CAAC,SAAU,IAAKvrB,KAAKkzB,QACtC1tB,EAAE3D,KAAK,CACHuE,IAAKpG,KAAKuf,EAAE,GACZzZ,MAAO9F,KAAKuf,EAAE,UAGjB,GAAIvf,KAAKmrB,MAAM,QAAS,CACzB,MAAMrI,EAAI9iB,KAAK6rB,SACf/I,EAAE5iB,KAAO,SACTsF,EAAE3D,KAAK,CACHuE,IAAK0c,EACLhd,MAAOgd,GAEf,KACK,KAAI9iB,KAAKsrB,WAAW,CAAC,SAAU,WAQhC,MAAM,cAAyB,4BAA6BkJ,GARhB,CAC5C,MAAM1R,EAAI9iB,KAAK6rB,SACfrmB,EAAE3D,KAAK,CACHuE,IAAK0c,EACLhd,MAAOgd,GAEf,CAGA,CACI9iB,KAAKmrB,MAAM,UACXnrB,KAAK4kB,KAEb,CACA,OAAOpf,CACX,CAEAwuB,cACI,MAAMlxB,EAAM9C,KAAKisB,gBACjB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAK,MAClB,MAAO,CACHrrB,KAAM,WACN4F,MAAO,GACPkB,KAAMhH,KAAKuf,EAAE,GAAGvY,QACblE,EACHulB,IAAKroB,KAAKisB,iBAGlB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKu0B,iBAAkB,MACzC,MAAO,CACHr0B,KAAM,WACN4F,MAAO9F,KAAKuf,EAAE,GACdvY,KAAMhH,KAAKuf,EAAE,GAAGvY,QACblE,EACHulB,IAAKroB,KAAKisB,iBAIlB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKu0B,mBACvB,MAAM,cAAyB,2BAA4Bv0B,KAAKuf,EAAE,IAEtE,OAAO,IACX,CACAkV,kBACQz0B,KAAKmrB,MAAM,QACXnrB,KAAK4kB,MAET,MAAM8P,EAAK10B,KAAKkzB,QAChB,GAAW,OAAPwB,EACA,OAAO,KAEP10B,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAET,MAAMpf,EAAI,CAACkvB,GACX,MAAQ10B,KAAKirB,UACLjrB,KAAKmrB,MAAM,QACXnrB,KAAK4kB,OAEL5kB,KAAKmrB,MAAM,OAJG,CAOlB,MAAM1N,EAAKzd,KAAKkzB,QAChB,GAAW,OAAPzV,EACA,MAEAzd,KAAKmrB,MAAM,UACXnrB,KAAK4kB,MAETpf,EAAE3D,KAAK4b,EACX,CACA,OAAOjY,CACX,CAEAiuB,aACI,MAAM3wB,EAAM9C,KAAKisB,gBACjB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAK,MAClB,MAAO,CACHrrB,KAAM,aACN4F,MAAO,GACPkB,KAAMhH,KAAKuf,EAAE,GAAGvY,QACblE,EACHulB,IAAKroB,KAAKisB,iBAGlB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKy0B,gBAAiB,MACxC,MAAO,CACHv0B,KAAM,aACN4F,MAAO9F,KAAKuf,EAAE,GACdvY,KAAMhH,KAAKuf,EAAE,GAAGvY,QACblE,EACHulB,IAAKroB,KAAKisB,iBAIlB,GAAIjsB,KAAKurB,OAAO,CAAC,IAAKvrB,KAAKy0B,kBACvB,MAAM,cAAyB,0BAA2Bz0B,KAAKuf,EAAE,IAErE,OAAO,IACX,CAEAkO,aACI,MAAM3qB,EAAM9C,KAAKisB,gBACjB,IAAKjsB,KAAKmrB,MAAM,SACZ,OAAO,KAEX,MAAMwJ,EAAQ30B,KAAK6rB,SACbvkB,EAAQtH,KAAKwuB,SACnB,IAAKxuB,KAAKqrB,OAAO,CAAC,MAAO,QACrB,MAAM,cAAyB,sDACOsJ,GAE1C30B,KAAK4kB,MACL5kB,KAAK4kB,MACL,MAAM/S,EAAW7R,KAAKwuB,SACtB,IAAIxuB,KAAKmrB,MAAM,QAIX,MAAM,cAAyB,sDAAuDroB,GAE1F,OALI9C,KAAK4kB,MAKF,CACH1kB,KAAM,aACNoH,QACAuK,SAAUA,GAAY,GACtB7K,KAAM,MACHlE,EACHulB,IAAKroB,KAAKisB,gBAElB,EEz4EJ,MAAM2I,EACFr1B,YAAYmM,EAAMsB,EAAIZ,GAClBpM,KAAK0L,KAAOA,EACZ1L,KAAKgN,GAAKA,EACVhN,KAAKoM,MAAQA,CACjB,EAEJ,MAAMyoB,EACFt1B,YAAYwQ,EAAM+kB,GACd90B,KAAK+P,KAAOA,EACZ/P,KAAK80B,eAAiBA,CAC1B,EAKG,MAAMC,EACTx1B,YAAY0G,GACRjG,KAAKg1B,QAAU,GACfh1B,KAAKiG,KAAOA,CAChB,CACAgvB,UACI,OAAOj1B,KAAKiG,IAChB,CACAivB,WAAWxpB,EAAMsB,GACb,OAAa,CACT,MAAMZ,EAAQpM,KAAKi1B,UAAU1vB,QAAQmG,GACrC,IAAe,IAAXU,EACA,MAEAV,EAAKrG,SAAW2H,EAAG3H,QACnBrF,KAAKg1B,QAAQpU,QAAQ,IAAIgU,EAAelpB,EAAKrG,OAAQ2H,EAAG3H,OAAQ+G,IAEpEpM,KAAKiG,KAAOjG,KAAKiG,KAAKlG,QAAQ2L,EAAMsB,EACxC,CACJ,CACAmoB,kBAAkB1tB,GAEd,IAAK,MAAMujB,KAAQhrB,KAAKg1B,QAChBvtB,GAAKujB,EAAK5e,MAAQ4e,EAAKhe,GACvBvF,GAAKujB,EAAKtf,KAAOsf,EAAKhe,GAEjBge,EAAK5e,OAAS3E,GAAKA,EAAIujB,EAAK5e,MAAQ4e,EAAKhe,KAG1CvF,EADAujB,EAAKhe,IAAM,GAAKvF,IAAMujB,EAAK5e,MAAQ4e,EAAKhe,GAAK,EACzCge,EAAK5e,MAAQ4e,EAAKtf,KAAO,EAGzBsf,EAAK5e,OAIrB,OAAO3E,CACX,EAQG,MAAM2tB,EACT71B,cAEIS,KAAKq1B,aAAe,IAAIC,IAAI,CAIxjB,CAEA30B,qBAII,OAHKy0B,EAAYG,YACbH,EAAYG,UAAY,IAAIH,GAEzBA,EAAYG,SACvB,CAKAC,WAAWlQ,GACP,IAAKA,EACD,MAAO,GAEX,MAAM/P,EAAI+P,EAAGzH,YAAY,IAAM,EAEzBW,EAAKxe,KAAKq1B,aAAazQ,IAAIrP,IAAM,GACvC,GAAIiJ,EACA,OAAOA,EAGX,GAAIjJ,EAAI,IACJ,OAAO+P,EAGX,GAAI/P,GAAK,OAAUA,GAAK,MAAQ,CAC5B,MAAMiJ,EAAKjJ,EAAI,MACf,OAAOtK,OAAOyS,cAAcc,EAChC,CACA,OAAO8G,CACX,CAEAmQ,QAAQxvB,GACJ,IAAKA,EACD,MAAO,GAEX,MAAMqW,EAAM,IAAIyY,EAAQ9uB,GAExBqW,EAAI4Y,WAAW,OAAQ,MACvB5Y,EAAI4Y,WAAW,KAAM,MACrB,IAAIQ,GAAU,EACVC,GAAW,EACXC,EAAW,GACf,MAAMnrB,EAAM,GACZ,IAAI+F,EAAO,EACPX,EAAM,GAENpI,EAAI,EACR,KAAOA,EAAI6U,EAAI2Y,UAAU5vB,QAAQ,CAC7B,MAAMkQ,EAAI+G,EAAI2Y,UAAUvW,OAAOjX,GACzBouB,EAAMvZ,EAAI2Y,UAAU1O,OAAO9e,EAAG,GAEpC,GAAIiuB,EAAS,CACT,GAAIngB,IAAMqgB,EAAU,CAChBF,GAAU,EACVjrB,EAAI5I,KAAK,IAAIgzB,EAAchlB,EAAM+lB,EAAUtZ,EAAI6Y,kBAAkB3kB,KACjE/I,IACA+I,EAAO/I,EACP,QACJ,CACAoI,GAAO0F,EACP9N,IACA,QACJ,CAEA,GAAIkuB,EAAU,CACV,GAAIE,IAAQD,EAAU,CAClBD,GAAW,EACM,OAAbC,IACAA,EAAW,MAEfnrB,EAAI5I,KAAK,IAAIgzB,EAAchlB,EAAM+lB,EAAUtZ,EAAI6Y,kBAAkB3kB,KACjE/I,GAAK,EACL+I,EAAO/I,EACP,QACJ,CACAoI,GAAO0F,EACP9N,IACA,QACJ,CAEA,GAAU,MAAN8N,EAAW,CACX9K,EAAI5I,KAAK,IAAIgzB,EAActf,EAAG+G,EAAI6Y,kBAAkB3kB,KACpD/I,IACA+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAW,IACX/lB,EAAM,GACN,QACJ,CACA,GAAU,MAAN0F,EAAW,CACX9K,EAAI5I,KAAK,IAAIgzB,EAActf,EAAG+G,EAAI6Y,kBAAkB3kB,KACpD/I,IACA+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAW,IACX/lB,EAAM,GACN,QACJ,CACA,GAAU,MAAN0F,EAAW,CACX9K,EAAI5I,KAAK,IAAIgzB,EAActf,EAAG+G,EAAI6Y,kBAAkB3kB,KACpD/I,IACA+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAW,IACX/lB,EAAM,GACN,QACJ,CAEA,GAAY,OAARgmB,GAAwB,OAARA,EAAc,CAC9BprB,EAAI5I,KAAK,IAAIgzB,EAAcgB,EAAKvZ,EAAI6Y,kBAAkB3kB,KACtD/I,GAAK,EACL+I,EAAO/I,EACPkuB,GAAW,EACXC,EAAWC,EACXhmB,EAAM,GACN,QACJ,CACA,MAAMwe,EAAKruB,KAAKw1B,WAAWjgB,GAChB,MAAP8Y,GAAqB,MAAPA,EAUP,MAAPA,EAUQ,OAARwH,GAAwB,OAARA,EAUR,OAARA,EAUQ,OAARA,GAUJprB,EAAI5I,KAAK,IAAIgzB,EAAcxG,EAAI/R,EAAI6Y,kBAAkB3kB,KACrD/I,IACA+I,EAAO/I,IAXHgD,EAAI5I,KAAK,IAAIgzB,EAAcgB,EAAKvZ,EAAI6Y,kBAAkB3kB,KACtD/I,GAAK,EACL+I,EAAO/I,EACPkuB,GAAW,EACXC,EAAW,KACX/lB,EAAM,KAfNpF,EAAI5I,KAAK,IAAIgzB,EAAc,KAAMvY,EAAI6Y,kBAAkB3kB,KACvD/I,GAAK,EACL+I,EAAO/I,EACPkuB,GAAW,EACXC,EAAW,KACX/lB,EAAM,KAfNpF,EAAI5I,KAAK,IAAIgzB,EAAc,KAAMvY,EAAI6Y,kBAAkB3kB,KACvD/I,GAAK,EACL+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAW,KACX/lB,EAAM,KAfNpF,EAAI5I,KAAK,IAAIgzB,EAAcxG,EAAI/R,EAAI6Y,kBAAkB3kB,KACrD/I,IACA+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAW,KACX/lB,EAAM,KAfNpF,EAAI5I,KAAK,IAAIgzB,EAAcxG,EAAI/R,EAAI6Y,kBAAkB3kB,KACrD/I,IACA+I,EAAO/I,EACPiuB,GAAU,EACVE,EAAWrgB,EACX1F,EAAM,GA+Cd,CAIA,OAHI6lB,GAAWC,IACXlrB,EAAI5I,KAAK,IAAIgzB,EAAchlB,EAAM+lB,EAAUtZ,EAAI6Y,kBAAkB3kB,KAE9D/F,CACX,E,4DC5PJ,IAAIqrB,EAAgB3Q,IACb,SAAS4Q,EAAS71B,EAAM4F,EAAOkwB,GAC9BA,IACAF,EAAgBE,GAGpB,OADU7Q,EAAcjlB,EAAM4F,EAAOgwB,EAAchmB,OAAQgmB,EAAcn2B,KAAMm2B,EAAcp2B,KAEjG,CC/CA,SAASu2B,EAAWvuB,GAChB,MAAe,QAAXA,EAAExH,MAGS,SAAXwH,EAAExH,MAA+B,QAAZwH,EAAE5B,OAA8B,QAAX4B,EAAEV,IAIpD,CA2GO,SAASkvB,EAAeC,GAC3B,MAAMnnB,EAAI,GACV,IAAK,MAAMrP,KAAQw2B,EACf,IAAK,MAAMzuB,KAAK/H,EACZqP,EAAEnN,KAAK6F,GAGf,OAAOsH,CACX,CACA,SAASonB,EAAuBz2B,GAC5B,MAAM02B,EAAM12B,EAAK0F,OACjB,GAAY,IAARgxB,EACA,OAAOlR,EAAc,KAEzB,IAAI1a,EAAM9K,EAAK02B,EAAM,GAMrB,MALiB,QAAb5rB,EAAIvK,MACAm2B,GAAO,IACP5rB,EAAM9K,EAAK02B,EAAM,IAGlB5rB,CACX,CACO,SAAS6rB,EAAYrP,EAAQsP,GAChC,MAAMxuB,EAAS,GACf,IAAIpI,EAAO,GACP62B,EAAQ,EACZ,IAAK,MAAM9uB,KAAKuf,EACZtnB,EAAKkC,KAAK6F,GACK,MAAXA,EAAExH,KACFs2B,IAEgB,MAAX9uB,EAAExH,KACPs2B,IAEe,IAAVA,GAAe9uB,EAAExH,OAASq2B,IAC/BxuB,EAAOlG,KAAKlC,GACZA,EAAO,IAMf,OAHIA,EAAK0F,OAAS,GACd0C,EAAOlG,KAAKlC,GAEToI,CACX,CAEA,SAAS0uB,EAAY92B,GACjB,GAAoB,IAAhBA,EAAK0F,OACL,OAAO,EAEX,IAAK,IAAIsZ,EAAI,EAAGA,EAAIhf,EAAK0F,OAAQsZ,IAAK,CAClC,MAAM+X,EAAK/2B,EAAKgf,GAAGze,KACnB,GAAW,QAAPw2B,GAAuB,iBAAPA,GAAgC,kBAAPA,EAG7C,OAAO,CACX,CACA,OAAO,CACX,CAEA,SAASC,EAAch3B,GACnB,IAAK,IAAI8H,EAAI,EAAGA,EAAI9H,EAAK0F,OAAQoC,IAAK,CAClC,MAAMC,EAAI/H,EAAK8H,GAAGvH,KAClB,GAAU,QAANwH,GAAqB,iBAANA,GAA8B,kBAANA,EAG3C,OAAO/H,EAAK8H,EAChB,CACA,OAAO9H,EAAK,EAChB,CAEA,MAAMi3B,EAAuB,CAAC,WAAY,WAAY,YAAa,aAE5D,SAASC,EAAoB5P,GAEhC,IAgHJ,SAAwBA,GAEpB,IAAK,IAAIxf,EAAI,EAAGA,EAAIwf,EAAO5hB,UACnBoC,EAAI,KADuBA,IAAK,CAIpC,MAAMC,EAAIuf,EAAOxf,GACjB,GAAe,iBAAXC,EAAExH,MAA4B02B,EAAqBrxB,QAAQmC,EAAE5B,QAAU,EACvE,OAAO,CAEf,CACA,OAAO,CACX,CA5HSgxB,CAAe7P,GAChB,OAAOA,EAGX,IAAK,MAAMvf,KAAKuf,EACZ,GAAe,SAAXvf,EAAExH,KAEF,MAAM,IAAI,KAAgB,wCAAyCwH,EAAE/H,KAAM+H,EAAEhI,MAIrF,IAAIq3B,EAAe,EACfC,EAAiB,EACrB,MAAMC,EAAmBt3B,IAErBA,EAAKyQ,SAAS1I,IACK,MAAXA,EAAExH,MACF62B,IAEW,MAAXrvB,EAAExH,MACF62B,IAEW,MAAXrvB,EAAExH,MACF82B,IAEW,MAAXtvB,EAAExH,MACF82B,GACJ,GACF,EAGAE,EAAe,GACff,EAAQG,EAAYrP,EAAQ,OAClC,IAAIkQ,EAAQ,EAEZ,IAAK,IAAI1vB,EAAI,EAAGA,EAAI0uB,EAAM9wB,OAAQoC,IAAK,CACnC,MAAM9H,EAAOw2B,EAAM1uB,GAEnB,GAAIgvB,EAAY92B,GACZ,SAGJ,GAAIq3B,EAAiB,GAAKD,EAAe,EAAG,CACxCE,EAAgBt3B,GAChB,QACJ,CACA,MAAMy3B,EAAYT,EAAch3B,GAC1B03B,EAAOD,EAAUtnB,OACvB,GAAIunB,IAASF,EAAb,CAWA,GAAIA,GAAS,EACT,KAAOA,EAAQE,GAAM,CACjB,MAAMC,EAAqBJ,EAAaA,EAAa7xB,OAAS,GAAG,GAEjE,GAAI4wB,EAAWmB,IAAcE,IAAuBD,OAG/C,CACD,MAAM3vB,EAAIyuB,EAAM1uB,EAAI,GAAG,GACvB0uB,EAAM1uB,EAAI,GAAG5F,KAAKk0B,EAAS,OAAQ,OAAQruB,IAC3CyuB,EAAM1uB,EAAI,GAAG5F,KAAKk0B,EAAS,MAAO,KAAMruB,GAC5C,CAEA,GADAwvB,EAAajrB,QACTirB,EAAa7xB,OAAS,GAGrB,CACD8xB,EAAQ,EACR,KACJ,CALIA,EAAQD,EAAaA,EAAa7xB,OAAS,GAAG,EAMtD,CAEA2xB,EAAiB,GAAKD,EAAe,IAIzCE,EAAgBt3B,GAEZ03B,EAAOF,IACPD,EAAar1B,KAAK,CAACw1B,EAAMF,IAEzBA,EAAQE,GAxCZ,CA2CJ,CAEA,IAAK,IAAI5vB,EAAI,EAAGA,EAAIyvB,EAAa7xB,OAAQoC,IAAK,CAE1C,IAAIC,EAAIuf,EAAO,GACf,IAAK,IAAIxf,EAAI0uB,EAAM9wB,OAAS,EAAGoC,GAAK,EAAGA,IAAK,CACxC,MAAM9H,EAAOw2B,EAAM1uB,GACnB,GAAI9H,EAAK0F,OAAS,EAAG,CACjBqC,EAAI/H,EAAKA,EAAK0F,OAAS,GACvB,KACJ,CACJ,CACA8wB,EAAMA,EAAM9wB,OAAS,GAAGxD,KAAKk0B,EAAS,OAAQ,OAAQruB,IACtDyuB,EAAMA,EAAM9wB,OAAS,GAAGxD,KAAKk0B,EAAS,MAAO,KAAMruB,GACvD,CAGA,OAFewuB,EAAeC,EAGlC,CC1SA,MAAMoB,EAAgB,CAAC,WAAY,aAE7BC,EAAe,CACjB,MAAO,CAAC,KAAM,KACd,MAAO,CAAC,KAAM,MACd,MAAO,CAAC,IAAK,KACb,MAAO,CAAC,IAAK,KACb,WAAY,CAAC,OAAQ,QACrB,UAAW,CAAC,OAAQ,QACpB,UAAW,CAAC,OAAQ,SAKjB,SAASC,EAAYxQ,GACxB,IAsPJ,SAAqBA,GAEjB,IAAK,IAAIxf,EAAI,EAAGA,EAAIwf,EAAO5hB,UACnBoC,EAAI,KADuBA,IAAK,CAIpC,MAAMC,EAAIuf,EAAOxf,GACjB,GAAe,iBAAXC,EAAExH,MAA2Bq3B,EAAchyB,QAAQmC,EAAE5B,QAAU,EAE/D,OADA4B,EAAExH,KAAO,WACF,CAEf,CACA,OAAO,CACX,CAnQSw3B,CAAYzQ,GACb,OAAOA,EAGX,MAAMkP,EAAQG,EAAYrP,EAAQ,OAClC,IAAK,IAAIxf,EAAI,EAAGA,EAAI0uB,EAAM9wB,OAAQoC,IAAK,CACnC,MAAM9H,EAAOw2B,EAAM1uB,GACnB,GAAI9H,EAAK0F,QAAU,EACf,SAGJ,IAAK,IAAIsZ,EAAI,EAAGA,EAAIhf,EAAK0F,QACA,MAAjB1F,EAAKgf,GAAGze,KADiBye,IAEzBhf,EAAKgf,GAAGze,KAAO,gBAMvB,MAAMwH,EAAI/H,EAAK,GACA,SAAX+H,EAAExH,MAA+B,OAAZwH,EAAE5B,OACvBnG,EAAKoV,OAAO,EAAGpV,EAAK0F,OAAQ8f,EAAc,OAAQ,MAAOzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MAAOylB,EAAc,OAAQ,KAAMzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,OAGxI,MAAMi4B,EAAKC,EAAWj4B,EAAM,CAAC,UAAW,YACpCg4B,EAAK,GACLE,EAAiBl4B,EAAMg4B,GAE3B,MAAMG,EAAMF,EAAWj4B,EAAM,CAAC,UAAW,YACrCm4B,EAAM,GACND,EAAiBl4B,EAAMm4B,GAG3B,MAAMC,EAAMH,EAAWj4B,EAAM,CAAC,YAC9B,GAAIo4B,GAAO,EAAG,CAEM,QADLp4B,EAAKo4B,GACT/wB,OACHrH,EAAKo4B,EAAM,GAAG/wB,KAAO,QACrBrH,EAAKoV,OAAOgjB,EAAK,GAEzB,CAEA,OAAS,CACL,MAAMC,EAAKJ,EAAWj4B,EAAM,CAAC,UAAW,YACxC,GAAIq4B,EAAK,EACL,MAEJr4B,EAAKq4B,GAAIlyB,MAAQ,OACjBnG,EAAKq4B,GAAIhxB,KAAO,GAChBrH,EAAKoV,OAAOijB,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWj4B,EAAM,CAAC,UAAW,YACxC,GAAIq4B,EAAK,EACL,MAMJ,MAAMtwB,EAAI/H,EAAKq4B,GACftwB,EAAE5B,MAAQ,UACV4B,EAAEV,KAAO,GACTrH,EAAKoV,OAAOijB,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWj4B,EAAM,CAAC,WAAY,UAAW,YACpD,GAAIq4B,EAAK,EACL,MAEJ,MAAMC,EAAMt4B,EAAKq4B,EAAK,GACtB,GAAiB,UAAbC,EAAIjxB,KAAR,CAOK,GAAiB,MAAbixB,EAAIjxB,KAAc,CACvB,MAAMkxB,EAAWv4B,EAAKq4B,EAAK,GAC3B,GAAuC,SAAnCE,EAASpyB,MAAMkU,UAAU,EAAG,GAAe,CAK3C,GAJAie,EAAI/3B,KAAO,MACX+3B,EAAInyB,MAAQ,MACZmyB,EAAIjxB,KAAO,GACXrH,EAAKoV,OAAOijB,EAAI,EAAGC,GACfC,EAASpyB,MAAMT,OAAS,EAAG,CAC3B,MAAM8yB,EAAoBD,EAASpyB,MAAMkU,UAAU,GAC7Coe,EAAgBjT,EAAc,OAAQgT,EAAmBD,EAASpoB,OAAQooB,EAASv4B,KAAMu4B,EAASx4B,MACpGy4B,EAAkBnd,MAAM,SACxBod,EAAcl4B,KAAO,UAEzBP,EAAKoV,OAAOijB,EAAK,EAAG,EAAGI,GACvBF,EAASpyB,MAAQoyB,EAASpyB,MAAMkU,UAAU,EAAG,EACjD,CACAke,EAASh4B,KAAO,KAChBg4B,EAASpyB,MAAQ,KACjBoyB,EAASlxB,KAAO,GAChB,QACJ,CACJ,CACA,KADA,CA3BIixB,EAAI/3B,KAAO,MACX+3B,EAAInyB,MAAQ,MACZmyB,EAAIjxB,KAAO,GACXrH,EAAKoV,OAAOijB,EAAI,EAAGC,EA0B3B,CAEA,OAAS,CACL,MAAMD,EAAKJ,EAAWj4B,EAAM,CAAC,SAAU,WACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAKJ,EAAWj4B,EAAM,CAAC,SAAU,WACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAKJ,EAAWj4B,EAAM,CAAC,cAC7B,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,OACXuyB,EAAGrxB,KAAO,EACd,CAGA,OAAS,CACL,MAAMgxB,EAAKJ,EAAWj4B,EAAM,CAAC,WAAY,YACzC,KAAIq4B,GAAM,GAIN,MAHAM,EAAmB34B,EAAMq4B,EAKjC,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWj4B,EAAM,CAAC,WAAY,WACzC,KAAIq4B,GAAM,GAIN,MAHAM,EAAmB34B,EAAMq4B,EAKjC,CAEA,IAAIrZ,EAAI,EACR,KAAOA,EAAIhf,EAAK0F,QAAQ,CACpB,MAAMqC,EAAI/H,EAAKgf,GAEf,GAAe,SAAXjX,EAAExH,MAAmBwH,EAAE5B,MAAMT,QAAU,EAA3C,CACI,MAAMkQ,EAAI7N,EAAE5B,MAAM4Y,OAAOhX,EAAE5B,MAAMT,OAAS,GAChC,MAANkQ,GAAmB,MAANA,IACb7N,EAAE5B,MAAQ4B,EAAE5B,MAAMkU,UAAU,EAAGtS,EAAE5B,MAAMT,OAAS,GAChDqC,EAAEV,KAAO,KACTrH,EAAKoV,OAAO4J,EAAI,EAAG,EAAGwG,EAAc,OAAQ5P,EAAG7N,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,QAEvEif,GAEJ,MACAA,GACJ,CACJ,CAEA,IAAK,IAAIlX,EAAI,EAAGA,EAAIwf,EAAO5hB,OAAQoC,IAAK,CACpC,MAAMC,EAAIuf,EAAOxf,GACXjC,EAAIgyB,EAAa9vB,EAAExH,KAAO,IAAMwH,EAAE5B,YAC9BjG,IAAN2F,IACAkC,EAAExH,KAAOsF,EAAE,GACXkC,EAAE5B,MAAQN,EAAE,GAEpB,CAEA,OADAyhB,EAASiP,EAAeC,EAE5B,CACA,SAASmC,EAAmB34B,EAAMq4B,GAI9B,MAAMtwB,EAAI/H,EAAKq4B,GACfr4B,EAAKq4B,EAAK,GAAGhxB,KAAO,GACpB,MAAM0J,EAAKyU,EAAc,KAAM,IAAKzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MAClD64B,EAAQpT,EAAc,IAAK,IAAKzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MACpD2oB,EAAMlD,EAAc,IAAK,IAAKzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MACxD2oB,EAAIrhB,KAAO,IACX,MAAMwoB,EAAM7vB,EAAKq4B,EAAK,GACtBxI,EAAIxoB,KAAO,GACX,MAAMwxB,EAAQrT,EAAc,SAAU,IAAKzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MAC/D84B,EAAMxxB,KAAO,IACb,MAAMyxB,EAAMtT,EAAc,OAAQ,IAAKzd,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,MAC3DC,EAAKoV,OAAOijB,EAAI,EAAGtnB,EAAI6nB,EAAO/I,EAAKnH,EAAKmQ,EAAOC,EACnD,CACA,SAASZ,EAAiB5Q,EAAQ0Q,GAE9B,MAAMe,EAAKd,EAAW3Q,EAAQ,CAAC,WAC3ByR,GAAM,IACNzR,EAAOyR,GAAIx4B,KAAO,OAClB+mB,EAAOyR,GAAI5yB,MAAQ,QAEvB,MAAM6yB,EAAKf,EAAW3Q,EAAQ,CAAC,WAC3B0R,GAAM,IACN1R,EAAO0R,GAAIz4B,KAAO,OAClB+mB,EAAO0R,GAAI7yB,MAAQ,QAGvBmhB,EAAO0Q,EAAK,GAAG7xB,MAAQ,GAC3B,CACA,SAAS8xB,EAAW3Q,EAAQ2R,GACxB,MAAMC,EAAQD,EAAc91B,KAAIkS,GAAKA,EAAEvP,MAAM,OAC7C,IAAK,IAAIgC,EAAI,EAAGA,EAAIwf,EAAO5hB,OAAQoC,IAAK,CACpC,IAAIqxB,GAAO,EACX,IAAK,IAAIna,EAAI,EAAGA,EAAIka,EAAMxzB,OAAQsZ,IAAK,CACnC,MAAMtY,EAAIwyB,EAAMla,GACVsB,EAAMxY,EAAIkX,EAChB,GAAIsB,GAAOgH,EAAO5hB,OACd,OAAQ,EAEZ,GAAI4hB,EAAOhH,GAAK/f,OAASmG,EAAE,IAAM4gB,EAAOhH,GAAKna,QAAUO,EAAE,GAAzD,CAIIyyB,GAAO,EACP,KACJ,CACJ,CACA,GAAIA,EACA,OAAOrxB,CAEf,CACA,OAAQ,CACZ,CAeO,MChRDsxB,EAAiB,CAAC,YAAa,aAAc,SAAU,WAEvD,EAAe,CACjB,MAAO,CAAC,KAAM,KACd,MAAO,CAAC,KAAM,MACd,MAAO,CAAC,IAAK,KACb,MAAO,CAAC,IAAK,KACb,WAAY,CAAC,MAAO,MACpB,UAAW,CAAC,KAAM,OAClB,WAAY,CAAC,MAAO,KACpB,UAAW,CAAC,OAAQ,QACpB,UAAW,CAAC,OAAQ,SAKjB,SAASC,EAAa/R,GACzB,IAiRJ,SAAsBA,GAElB,IAAK,IAAIxf,EAAI,EAAGA,EAAIwf,EAAO5hB,UACnBoC,EAAI,KADuBA,IAAK,CAIpC,MAAMC,EAAIuf,EAAOxf,GACjB,GAAe,iBAAXC,EAAExH,MAA2B64B,EAAexzB,QAAQmC,EAAE5B,QAAU,EAEhE,OADA4B,EAAExH,KAAO,YACF,CAEf,CACA,OAAO,CACX,CA9RS+4B,CAAahS,GACd,OAAOA,EAGX,MAAMkP,EAAQG,EAAYrP,EAAQ,OAClC,IAAK,IAAIxf,EAAI,EAAGA,EAAI0uB,EAAM9wB,OAAQoC,IAAK,CACnC,MAAM9H,EAAOw2B,EAAM1uB,GACnB,GAAI9H,EAAK0F,QAAU,EACf,SAIJ,MAAM0yB,EAAM,EAAWp4B,EAAM,CAAC,YAC9B,GAAIo4B,GAAO,EAAG,CAEM,QADLp4B,EAAKo4B,GACT/wB,OACHrH,EAAKo4B,EAAM,GAAG/wB,KAAO,QACrBrH,EAAKoV,OAAOgjB,EAAK,GAEzB,CAEA,IAAK,IAAIC,EAAK,EAAGA,EAAKr4B,EAAK0F,OAAQ2yB,IAAM,CACrC,MAAMtwB,EAAI/H,EAAKq4B,GACC,OAAZtwB,EAAE5B,OAA6B,UAAX4B,EAAEV,OACtBU,EAAExH,KAAO,MACTwH,EAAE5B,MAAQ,MACV4B,EAAEV,KAAO,GAEjB,CAEA,OAAS,CACL,MAAMgxB,EAAK,EAAWr4B,EAAM,CAAC,WAAY,UAAW,YACpD,GAAIq4B,EAAK,EACL,MAEJ,MAAMC,EAAMt4B,EAAKq4B,EAAK,GACtB,GAAiB,UAAbC,EAAIjxB,KAAR,CAOK,GAAiB,MAAbixB,EAAIjxB,KAAc,CACvB,MAAMkxB,EAAWv4B,EAAKq4B,EAAK,GAC3B,GAAuC,SAAnCE,EAASpyB,MAAMkU,UAAU,EAAG,GAAe,CAK3C,GAJAie,EAAI/3B,KAAO,MACX+3B,EAAInyB,MAAQ,MACZmyB,EAAIjxB,KAAO,GACXrH,EAAKoV,OAAOijB,EAAI,EAAGC,GACfC,EAASpyB,MAAMT,OAAS,EAAG,CAC3B,MAAM8yB,EAAoBD,EAASpyB,MAAMkU,UAAU,GAC7Coe,EAAgBjT,EAAc,OAAQgT,EAAmBD,EAASpoB,OAAQooB,EAASv4B,KAAMu4B,EAASx4B,MACpGy4B,EAAkBnd,MAAM,SACxBod,EAAcl4B,KAAO,UAEzBP,EAAKoV,OAAOijB,EAAK,EAAG,EAAGI,GACvBF,EAASpyB,MAAQoyB,EAASpyB,MAAMkU,UAAU,EAAG,EACjD,CACAke,EAASh4B,KAAO,KAChBg4B,EAASpyB,MAAQ,KACjBoyB,EAASlxB,KAAO,GAChB,QACJ,CACJ,CACA,KADA,CA3BIixB,EAAI/3B,KAAO,MACX+3B,EAAInyB,MAAQ,MACZmyB,EAAIjxB,KAAO,GACXrH,EAAKoV,OAAOijB,EAAI,EAAGC,EA0B3B,CAEA,OAAS,CACL,MAAMD,EAAK,EAAWr4B,EAAM,CAAC,SAAU,WACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAWr4B,EAAM,CAAC,SAAU,WACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAWr4B,EAAM,CAAC,SAAU,cACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAWr4B,EAAM,CAAC,SAAU,cACvC,GAAIq4B,EAAK,EACL,MAEJ,MAAMK,EAAK14B,EAAKq4B,GAChBK,EAAGn4B,KAAO,OACVm4B,EAAGvyB,MAAQ,MACXuyB,EAAGrxB,KAAO,GACVrH,EAAKoV,OAAOijB,EAAI,EAAGK,EACvB,CAEA,IAAK,IAAI5wB,EAAI,EAAGA,EAAI9H,EAAK0F,OAAQoC,IAAK,CAElC,GAAIyxB,EAAQ,CAAC,CAAC,UAAW,aAAc,OAAQ,WAAY,CAAC,UAAW,UAAW,IAAK,WAAYv5B,EAAM8H,GAAI,CACzG,MAAM0xB,EAAWx5B,EAAK8H,EAAI,GAC1B0xB,EAASnyB,KAAO,GAChB,MAAMoyB,EAAWz5B,EAAK8H,EAAI,GAC1B2xB,EAASpyB,KAAO,GAChBrH,EAAKoV,OAAOtN,EAAG,EAAG0xB,EAAUpD,EAAS,KAAM,IAAKoD,GAAWpD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMqD,EAAUrD,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SA9I3K,IA8I6MA,EAAS,IAAK,MACzOtuB,GAAK,CACT,CAEA,GAAIyxB,EAAQ,CAAC,OAAQ,WAAY,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,QAAS,WAAYv5B,EAAM8H,GAAI,CACxG,MAAM0xB,EAAWx5B,EAAK8H,GACtB0xB,EAASnyB,KAAO,GAChB,MAAMoyB,EAAWz5B,EAAK8H,EAAI,GAC1B2xB,EAASpyB,KAAO,GAChBrH,EAAKoV,OAAOtN,EAAG,EAAG0xB,EAAUpD,EAAS,KAAM,IAAKoD,GAAWpD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMqD,EAAUrD,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SAvJ3K,IAuJ6MA,EAAS,IAAK,KAC7O,CAEA,GAAImD,EAAQ,CAAC,CAAC,YAAa,WAAY,OAAQ,YAAav5B,EAAM8H,GAAI,CAClE,MAAM0xB,EAAWx5B,EAAK8H,EAAI,GAC1B0xB,EAASnyB,KAAO,GAChBrH,EAAKoV,OAAOtN,EAAG,EAAG0xB,EAAUpD,EAAS,KAAM,IAAKoD,GAAWpD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMA,EAAS,SAAU,GAAIA,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SA7JxL,IA6J0NA,EAAS,IAAK,KAC1P,CACJ,CAGA,OAAS,CACL,MAAMiC,EAAK,EAAWr4B,EAAM,CAAC,UAAW,YACxC,GAAIq4B,EAAK,EACL,MAEJr4B,EAAKq4B,GAAIlyB,MAAQ,OACjBnG,EAAKq4B,GAAIhxB,KAAO,GAChBrH,EAAKoV,OAAOijB,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAK,EAAWr4B,EAAM,CAAC,UAAW,YACxC,GAAIq4B,EAAK,EACL,MAMJ,MAAMtwB,EAAI/H,EAAKq4B,GACftwB,EAAE5B,MAAQ,UACV4B,EAAEV,KAAO,GACTrH,EAAKoV,OAAOijB,EAAK,EAAG,EACxB,CAEA,IAAIrZ,EAAI,EACR,KAAOA,EAAIhf,EAAK0F,QAAQ,CACpB,MAAMqC,EAAI/H,EAAKgf,GAEf,GAAe,SAAXjX,EAAExH,MAAmBwH,EAAE5B,MAAMT,QAAU,EAA3C,CACI,MAAMkQ,EAAI7N,EAAE5B,MAAM4Y,OAAOhX,EAAE5B,MAAMT,OAAS,GAChC,MAANkQ,GAAmB,MAANA,IACb7N,EAAE5B,MAAQ4B,EAAE5B,MAAMkU,UAAU,EAAGtS,EAAE5B,MAAMT,OAAS,GAChDqC,EAAEV,KAAO,KACTrH,EAAKoV,OAAO4J,EAAI,EAAG,EAAGwG,EAAc,OAAQ5P,EAAG7N,EAAEoI,OAAQpI,EAAE/H,KAAM+H,EAAEhI,QAEvEif,GAEJ,MACAA,GACJ,CACJ,CAEA,IAAK,IAAIlX,EAAI,EAAGA,EAAIwf,EAAO5hB,OAAQoC,IAAK,CACpC,MAAMC,EAAIuf,EAAOxf,GACXjC,EAAI,EAAakC,EAAExH,KAAO,IAAMwH,EAAE5B,YAC9BjG,IAAN2F,IACAkC,EAAExH,KAAOsF,EAAE,GACXkC,EAAE5B,MAAQN,EAAE,GAEpB,CAOA,OANAyhB,EAASiP,EAAeC,EAO5B,CAQA,SAAS+C,EAAQG,EAAYlD,EAAOmD,GAChC,MAAMnO,EAAQ,CAACpF,EAASre,KACpB,GAAIqe,aAAmBve,MAAO,CAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIse,EAAQ1gB,OAAQoC,IAChC,GAAI0jB,EAAMpF,EAAQte,GAAIC,GAClB,OAAO,EAGf,OAAO,CACX,CACA,GAAgB,MAAZqe,EACA,OAAO,EAEX,GAAIA,EAAQxgB,QAAQ,KAAO,EACvB,OAAIwgB,IAAYre,EAAExH,KAQtB,OAAI6lB,IADO,GAAGre,EAAExH,QAAQwH,EAAE5B,OAId,EAEhB,IAAK,IAAI2B,EAAI,EAAGA,EAAI4xB,EAAWh0B,OAAQoC,IAAK,CACxC,MAAMwY,EAAMxY,EAAI6xB,EAChB,GAAIrZ,GAAOkW,EAAM9wB,OACb,OAAO,EAEX,MAAMk0B,EAAMF,EAAW5xB,GACjBC,EAAIyuB,EAAMlW,GAChB,IAAKkL,EAAMoO,EAAK7xB,GACZ,OAAO,CAEf,CACA,OAAO,CACX,CACA,SAAS,EAAWuf,EAAQ2R,GACxB,MAAMC,EAAQD,EAAc91B,KAAIkS,GAAKA,EAAEvP,MAAM,OAC7C,IAAK,IAAIgC,EAAI,EAAGA,EAAIwf,EAAO5hB,OAAQoC,IAAK,CACpC,IAAIqxB,GAAO,EACX,IAAK,IAAIna,EAAI,EAAGA,EAAIka,EAAMxzB,OAAQsZ,IAAK,CACnC,MAAMtY,EAAIwyB,EAAMla,GACVsB,EAAMxY,EAAIkX,EAChB,GAAIsB,GAAOgH,EAAO5hB,OACd,OAAQ,EAEZ,GAAI4hB,EAAOhH,GAAK/f,OAASmG,EAAE,IAAM4gB,EAAOhH,GAAKna,QAAUO,EAAE,GAAzD,CAIIyyB,GAAO,EACP,KACJ,CACJ,CACA,GAAIA,EACA,OAAOrxB,CAEf,CACA,OAAQ,CACZ,CC1SO,MAAM+xB,EAKTj6B,YAAYk6B,EAAkBC,GAE1B15B,KAAKy5B,iBAAmBA,EAExBz5B,KAAK05B,aAAeA,EACpB,IAAIjyB,EAAI,EAERzH,KAAK25B,cAAgB,GACrB,IAAK,MAAMC,KAAMF,EACb15B,KAAK25B,cAAc93B,KAAK4F,GACxBA,GAAKmyB,EAAG7pB,KAAK1K,OAGjBrF,KAAK65B,UAAY,EAEjB75B,KAAK85B,6BAA+B,CACxC,CAMAh3B,IAAIi3B,GACA,MAAMtyB,EAAIzH,KAAKg6B,UAAUD,GACzB,OAAOvnB,KAAKiN,IAAIzf,KAAK05B,aAAajyB,GAAGqtB,gBAAkBiF,EAA2B/5B,KAAK25B,cAAclyB,IAAKA,IAAMzH,KAAK05B,aAAar0B,OAAS,EAAIrF,KAAKy5B,iBAAmBz5B,KAAK05B,aAAajyB,EAAI,GAAGqtB,eAAiB,EACrN,CAKAkF,UAAUD,GAEFA,EAA2B/5B,KAAK85B,+BAChC95B,KAAK65B,UAAY,GAErB75B,KAAK85B,6BAA+BC,EACpC,IAAK,IAAItyB,EAAIzH,KAAK65B,UAAWpyB,EAAIzH,KAAK05B,aAAar0B,OAAS,EAAGoC,IAC3D,GAAIsyB,EAA2B/5B,KAAK25B,cAAclyB,EAAI,GAElD,OADAzH,KAAK65B,UAAYpyB,EACVA,EAIf,OADAzH,KAAK65B,UAAY75B,KAAK05B,aAAar0B,OAAS,EACrCrF,KAAK05B,aAAar0B,OAAS,CACtC,EAEG,MAAM40B,EAMT16B,YAAY26B,EAAsCC,EAAkCC,GAEhFp6B,KAAKm2B,MAAQ,GAEbn2B,KAAKm6B,iCAAmCA,EAExCn6B,KAAKo6B,gCAAkCA,EACvC,IAAI7Q,EAAS,EACb,IAAK,MAAM5pB,KAAQu6B,EAAqCz0B,MAAM,MAC1DzF,KAAKm2B,MAAMt0B,KAAK,CAAE0nB,SAAQ8M,IAAK12B,EAAK0F,SACpCkkB,GAAU5pB,EAAK0F,OAAS,EAG5BrF,KAAKq6B,eAAiB,EAEtBr6B,KAAKs6B,WAAa,CACtB,CAMAx3B,IAAItC,EAAaC,GACb,GAAoB,OAAhBD,EACA,MAAO,CAAEA,cAAaC,aAG1B,MAAM85B,EAAYv6B,KAAKw6B,cAAch6B,GACrC,IAAK,MAAMi6B,KAAgBz6B,KAAKm6B,iCAAkC,CAE9D,GAAII,IAAcE,EAAc,CAC5Bj6B,EAAc,KACdC,EAAY,KACZ,KACJ,CAGI85B,EAAYE,IAEZj6B,GAAeR,KAAKm2B,MAAMsE,GAAcpE,IAAM,EAC5B,OAAd51B,IACAA,GAAaT,KAAKm2B,MAAMsE,GAAcpE,IAAM,GAGxD,CACA,IAAK,MAAMqE,KAAe16B,KAAKo6B,gCACvBG,GAAaG,EAAYC,aAEL,OAAhBn6B,IACAA,GAAek6B,EAAYrE,IAAM,GAEnB,OAAd51B,IACAA,GAAai6B,EAAYrE,IAAM,IAI3C,MAAO,CAAE71B,cAAaC,YAC1B,CAMA+5B,cAAcjR,GAENA,EAASvpB,KAAKs6B,aACdt6B,KAAKq6B,eAAiB,GAE1Br6B,KAAKs6B,WAAa/Q,EAClB,IAAK,IAAI9hB,EAAIzH,KAAKq6B,eAAgB5yB,EAAIzH,KAAKm2B,MAAM9wB,OAAS,EAAGoC,IACzD,GAAI8hB,EAASvpB,KAAKm2B,MAAM1uB,EAAI,GAAG8hB,OAE3B,OADAvpB,KAAKq6B,eAAiB5yB,EACfA,EAIf,OADAzH,KAAKq6B,eAAiBr6B,KAAKm2B,MAAM9wB,OAAS,EACnCrF,KAAKm2B,MAAM9wB,OAAS,CAC/B,EAGG,MAAMu1B,EAITr7B,YAAY0G,GAERjG,KAAK66B,YAAc,GAEnB,IAAItR,EAAS,EACb,IAAK,MAAM5pB,KAAQsG,EAAKR,MAAM,MAC1BzF,KAAK66B,YAAYh5B,KAAK0nB,GACtBA,GAAU5pB,EAAK0F,OAAS,EAG5BrF,KAAKq6B,eAAiB,EAEtBr6B,KAAKs6B,WAAa,CACtB,CAMAx3B,IAAIymB,EAAQuR,GAEJvR,EAASvpB,KAAKs6B,aACdt6B,KAAKq6B,eAAiB,GAE1Br6B,KAAKs6B,WAAa/Q,EAClB,IAAK,IAAI9hB,EAAIzH,KAAKq6B,eAAgB5yB,EAAIzH,KAAK66B,YAAYx1B,OAAS,EAAGoC,IAC/D,GAAI8hB,EAASvpB,KAAK66B,YAAYpzB,EAAI,GAE9B,OADAzH,KAAKq6B,eAAiB5yB,EACf,CACH9H,KAAM8H,GAAKqzB,EAAqB,EAAI,GACpC1V,OAAQmE,EAASvpB,KAAK66B,YAAYpzB,IAK9C,OADAzH,KAAKq6B,eAAiBr6B,KAAK66B,YAAYx1B,OAAS,EACzC,CACH1F,KAAMK,KAAK66B,YAAYx1B,OAAS,GAAKy1B,EAAqB,EAAI,GAC9D1V,OAAQmE,EAASvpB,KAAK66B,YAAY76B,KAAK66B,YAAYx1B,OAAS,GAEpE,EAMG,SAAS01B,EAAiCC,EAAWC,GASxD,GAPqC,iBAA1BD,EAAUx6B,cACjBw6B,EAAUx6B,aAAey6B,EAAQ51B,QAEF,iBAAxB21B,EAAUv6B,YACjBu6B,EAAUv6B,WAAaw6B,EAAQ51B,QAGnB,KAAZ41B,EAAgB,CAChB,MAAM9E,EAAQ8E,EAAQx1B,MAAM,MACE,iBAAnBu1B,EAAUr7B,OACjBq7B,EAAUr7B,MAAQw2B,EAAM9wB,OAAS,GAEd,IAAnB21B,EAAUr7B,MAA0C,iBAArBq7B,EAAU5V,SACzC4V,EAAU5V,QAAU+Q,EAAMA,EAAM9wB,OAAS,GAAGA,OAEpD,CACA,OAAO21B,CACX,CCxMA,MAEME,EAAa,CAAC,QAAS,MAAO,QAAS,SAAU,OAAQ,UAAW,OAAQ,SAqErEC,EA5DmBprB,IAG5B,MAAMqrB,EAAUrrB,EAAKhQ,QAAQ,cAAe,IAGtCs7B,EAAuB,GAC7B,IAAIC,EAAe,UACfC,EAAoB,UAGxB,MAAMC,EAAqBzrB,IAASqrB,EAC9BA,EAEArrB,EAAKhQ,QAAQ,iBAAiB,CAAC07B,EAAGC,KAChC,MAAMC,GAAMD,EAYZ,OAXW,IAAPC,IACAL,EAAe,UACfC,EAAoB,WAEb,IAAPI,IACAJ,EAAoB,QAEpBI,GAAM,IAAMA,GAAM,KAClBL,EAAeJ,EAAWS,EAAK,KAEnCN,EAAqBx5B,KAAK,UAAUy5B,mBAA8BC,MAC3D,IAAI,IAGnB,IAAIK,EAAY,UACZC,EAAiB,UAtCN,IAACn0B,EA0DhB,MAAO,CACH0zB,UACAU,YAAa/rB,IAASqrB,EAChBA,EACArrB,EAAO,OACbgsB,KAtBShsB,IAASqrB,EAAUA,EAAW,UAzC3B1zB,EAyCiDqI,EAzC3CrI,EAAE3H,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,WA2C5HA,QAAQ,iBAAiB,CAAC07B,EAAGC,KAC9B,MAAMC,GAAMD,EAWZ,OAVW,IAAPC,IACAC,EAAY,UACZC,EAAiB,WAEV,IAAPF,IACAE,EAAiB,QAEjBF,GAAM,IAAMA,GAAM,KAClBC,EAAYV,EAAWS,EAAK,KAEzB,8BAA8BC,mBAA2BC,MAAmB,IAClF,UAQDG,eAAgB,CAACR,KAAuBH,GAC3C,EAEQF,EAvEC,CAAE1Q,MAAO,OAAWwR,KAAM,OAAWC,MAAO,QAAYC,IAAK,QAAYC,MAAO,QAAYC,OAAQ,QAAYC,KAAM,QAAYC,QAAS,QAAYC,KAAM,QAAYC,MAAO,SCFvL,MAAMC,GAET/7B,aAAag8B,GACT,IAAIC,EAAQF,GAAS7pB,MACrB,OAAQ8pB,GACJ,IAAK,MACDC,EAAQF,GAASG,IACjB,MACJ,IAAK,QACDD,EAAQF,GAAS7pB,MACjB,MACJ,IAAK,QACD+pB,EAAQF,GAASpQ,MACjB,MACJ,IAAK,OACDsQ,EAAQF,GAAS7R,KACjB,MACJ,IAAK,OACD+R,EAAQF,GAAS7xB,KACjB,MACJ,IAAK,QACD+xB,EAAQF,GAAS37B,MACjB,MACJ,IAAK,SACD67B,EAAQF,GAASI,OACjB,MACJ,QACI,MAAM,IAAIx9B,MAAM,qCAAuCq9B,GAE/D,OAAOC,CACX,CACAj8B,gBAAgBi8B,GAEZ,MADe,CAAC,MAAO,QAAS,QAAS,OAAQ,OAAQ,QAAS,UACpDA,EAClB,EAcJ,SAASG,GAAkB3gB,GACvB,OAAKA,EAGE,GAAGA,EAAE1c,MAAQ,UAAgBG,IAAXuc,EAAEzc,KAAqB,GAAK,IAAIyc,EAAEzc,KAAO,WAFvD,EAGf,CAhBA+8B,GAASG,IAAM,EACfH,GAAS7pB,MAAQ,EACjB6pB,GAASpQ,MAAQ,EACjBoQ,GAAS7R,KAAO,EAChB6R,GAAS7xB,KAAO,EAChB6xB,GAAS37B,MAAQ,EACjB27B,GAASI,OAAS,EAgBX,MAAME,GACTz9B,cACIS,KAAKi9B,UAAY,GACjBj9B,KAAKk9B,KAAO,GACZl9B,KAAKwK,SAAW,EACpB,CACA2yB,eACI,MAAO,CAACn9B,KAAKk9B,KAAKn9B,QAAQ,OAAQ,IAAKC,KAAKwK,SAChD,CACA4yB,QACIp9B,KAAKk9B,KAAO,GACZl9B,KAAKwK,SAAW,EACpB,CAMA6yB,YAAYV,EAAUW,GAClB,MAAMV,EAAQF,GAASa,MAAMZ,GAC7B38B,KAAKi9B,UAAUp7B,KAAK,CAAE+6B,QAAOU,YACjC,CAKAE,eAAeF,GACXt9B,KAAKi9B,UAAYj9B,KAAKi9B,UAAUpoB,QAAQ4oB,GAAMA,EAAEH,WAAaA,GACjE,CAKAzqB,MAAM3R,EAASsJ,EAAW,MACtBxK,KAAK09B,MAAMhB,GAAS7pB,MAAO,GAAGsoB,EAAiBc,mBAAmBd,EAAiB1Q,QAAQsS,GAAkBvyB,KAAYtJ,IAAWsJ,EACxI,CAKA8hB,MAAMprB,EAASsJ,EAAW,MACtBxK,KAAK09B,MAAMhB,GAASpQ,MAAO,GAAG6O,EAAiBc,eAAed,EAAiB1Q,QAAQsS,GAAkBvyB,KAAYtJ,IAAWsJ,EACpI,CAKAqgB,KAAK3pB,EAASsJ,EAAW,MACrBxK,KAAK09B,MAAMhB,GAAS7R,KAAM,GAAGsQ,EAAiBc,OAAOd,EAAiBmB,WAAWnB,EAAiB1Q,QAAQsS,GAAkBvyB,KAAYtJ,IAAWsJ,EACvJ,CAKAK,KAAK3J,EAASsJ,EAAW,MACrBxK,KAAK09B,MAAMhB,GAAS7xB,KAAM,GAAGswB,EAAiBc,OAAOd,EAAiBiB,YAAYjB,EAAiB1Q,QAAQsS,GAAkBvyB,KAAYtJ,IAAWsJ,EACxJ,CAKAzJ,MAAMG,EAASsJ,EAAW,MAEtB,GAAItJ,aAAmB5B,OAAiC,iBAAjB4B,EAAQhB,KAAmB,CAG9D,OADcgB,EAAQhB,MAElB,IAAK,mBACL,IAAK,YACD,GAAIgB,aAAmB,IAAW,CAC9B,MAAMgL,EAAIhL,EACV,IAAIy8B,EAAMnzB,EAKV,OAJImzB,UACAA,EAAM,CAAEj+B,KAAMwM,EAAExM,KAAMC,KAAMuM,EAAEvM,MAAQ,EAAGa,YAAa,EAAGC,UAAW,SAExET,KAAK09B,MAAMhB,GAAS37B,MAAOmL,EAAEhL,QAASy8B,EAE1C,EAEZ,CACIz8B,aAAmB5B,QAEnB4B,EAAUA,EAAQA,SAEtBlB,KAAK09B,MAAMhB,GAAS37B,MAAO,GAAGo6B,EAAiBc,OAAOd,EAAiBgB,WAAWhB,EAAiB1Q,QAAQsS,GAAkBvyB,KAAYtJ,IAAWsJ,EACxJ,CAEAozB,aAAa78B,EAAO88B,GAEhB,OADU,IAAI,KAAiB98B,EAAO88B,EAE1C,CAKAf,OAAO57B,EAASsJ,EAAW,MACvBxK,KAAK09B,MAAMhB,GAASI,OAAQ,GAAG57B,IAAWsJ,EAC9C,CAEAqR,KAAK8gB,EAAUb,EAAatxB,EAAUuxB,EAAO,KAAMC,EAAiB,MAChE,MAAMv0B,EAAIi1B,GAASa,MAAMZ,GACzB38B,KAAK09B,MAAMj2B,EAAGq0B,EAAatxB,EAAUuxB,EAAMC,EAC/C,CAEA0B,MAAMd,EAAOd,EAAatxB,EAAUuxB,EAAO,KAAMC,EAAiB,MAC9D,MAAM8B,EAAW,KAEb,MAAMC,EAAU5C,EAAkCW,GAElD,IAAIkC,EAAQ,GACRlC,EAAY9vB,SAAS,QACrBgyB,GAAS,wEAWb,MARa,CACT5C,QAAS2C,EAAQ3C,QACjBU,YAAaiC,EAAQjC,YACrBE,eAAgBA,GAAkB+B,EAAQ/B,eAC1CD,KAAM,eAAeiC,OAAajC,GAAQgC,EAAQhC,MAAQ,SAC1Da,MAAOF,GAAShoB,SAASkoB,GACzBpyB,WAEO,EAGf,GAAIoyB,IAAUF,GAAS37B,MAAO,CAC1B,MAAMk9B,EAAOH,IACb99B,KAAKk9B,MAAQe,EAAK7C,QAAU,KACxB5wB,GAA8B,OAAlBxK,KAAKwK,WACjBxK,KAAKwK,SAAW,IAAIA,EAAS7K,QAAQ6K,EAAS9K,OAEtD,CAEA,IAAK,MAAM+9B,KAAKz9B,KAAKi9B,UACjB,GAAIQ,EAAEb,OAASA,EAAO,CAClB,MAAMqB,EAAOH,IACbL,EAAEH,SAASW,EACf,CAER,ECtMG,MAAMC,GAKT3+B,YAAY4+B,EAAUhsB,EAAKisB,EAAO,GAC9Bp+B,KAAKo+B,KAAOA,EACZp+B,KAAKq+B,WAAa,GAElBr+B,KAAK8Y,SAAW,CAAC,EACjB9Y,KAAK6C,WAAa,CACd,IAAKs7B,EAASt7B,WAAW,IACzB,IAAKs7B,EAASt7B,WAAW,IACzB,IAAKs7B,EAASt7B,WAAW,KAE7B7C,KAAKs+B,YAAc,EACnBt+B,KAAKoM,MAAQ,EACbpM,KAAKu+B,WAAa,EAClBv+B,KAAKw+B,OAAS,GACdx+B,KAAKy+B,YAAc,GACnBz+B,KAAK0+B,QAAU,GACf1+B,KAAK2+B,SAAW,GAChB3+B,KAAKwb,UAAYrJ,EAAIzP,QAErB1C,KAAKf,QAAUk/B,EAASl/B,QACxBe,KAAKkT,YAAcirB,EAASjrB,YAE5BlT,KAAKiP,SAAW,IAAKkvB,EAASlvB,UAC9BjP,KAAKyiB,YAAc,IAAK0b,EAASS,kBAEjC5+B,KAAKmS,IAAMA,EAEXnS,KAAKub,OAAS4iB,EAASvzB,YACvB5K,KAAKm+B,SAAWA,CACpB,CACAU,WACI7+B,KAAK6C,WAAW,GAAG,QAAU,EACjC,CACImZ,UACA,IAAIhH,EAAIhV,KAAK6C,WAAW,GAAG,QAE3B,OADAmS,EAAIA,EAAEjV,QAAQ,OAAQ,IACfiV,CACX,CAIA4H,MAAM3W,EAAMrE,EAAO+M,EAAMssB,EAAU,IAI/B,OAFAtsB,EAAKssB,QAAUA,EACftsB,EAAKmwB,WAAa9+B,KACXA,KAAKm+B,SAASY,QAAQ94B,EAAMrE,EAAO+M,EAC9C,CACA6N,eAAevW,EAAMrE,EAAO+M,EAAMssB,EAAU,IAIxC,OAFAtsB,EAAKssB,QAAUA,EACftsB,EAAKmwB,WAAa9+B,WACLA,KAAKm+B,SAASa,SAAS/4B,EAAMrE,EAAO+M,EACrD,CAKAswB,UAAUC,GACN,IAAInvB,EAAO,GAAGorB,EAAiBc,eAAed,EAAiB1Q,UAC3D0U,EAAO,EACPb,EAAc,EAClB,IAAK,MAAM52B,KAAKw3B,EACZ,IACIx3B,EAAErB,IACF0J,GAAQ,GAAGorB,EAAiBiB,SAASjB,EAAiB1Q,SAAS/iB,EAAEzH,SACjEk/B,GAKJ,CAHA,MAAOze,GACH3Q,GAAQ,GAAGorB,EAAiBgB,OAAOhB,EAAiB1Q,SAAS/iB,EAAEzH,SAASygB,EAAIxf,YAC5Eo9B,GACJ,CAGAvuB,GADAuuB,EAAc,EACN,GAAGnD,EAAiBiB,WAAW+C,MAAShE,EAAiBgB,SAASmC,KAGlE,GAAGnD,EAAiBiB,WAAW+C,KAE3Cn/B,KAAKs+B,YAAcA,EACnBt+B,KAAKub,OAAOuhB,OAAO/sB,EACvB,CAIAqvB,eAII,IAAK,MAAMC,KAASr/B,KAAKyiB,YAAa,CAClC,MAAM/b,EAAK1G,KAAKiP,SAASowB,GACrB34B,EAAG44B,SAAc54B,EAAG44B,QAAWh5B,IAC/BI,EAAG44B,QAAWh5B,GAAGtG,KAEzB,CACJ,CAIAyqB,QACIzqB,KAAKo/B,cACT,CACAG,UACIv/B,KAAKyqB,OACT,E,8DC/GJ,IACI,MAAO,CACHvqB,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WAEJ,GAGJ,IAAO,CACHpG,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKgtB,IAAIz8B,EACpB,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKitB,IAAI18B,EACpB,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKktB,IAAI38B,EACpB,GAEJ,OAAU,CACN7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKmtB,KAAK58B,EACrB,GAEJ,OAAU,CACN7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKotB,KAAK78B,EACrB,GAEJ,OAAU,CACN7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKqtB,KAAK98B,EACrB,GAEJ,MAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUiZ,EAAGD,GACb,OAAO9M,KAAKstB,MAAMvgB,EAAGD,EACzB,GAEJ,SAAU,CACNpf,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUy5B,GACV,OAAkC,IAA3BvtB,KAAKstB,MAAMC,EAAG,GAAIA,EAAG,IAAYvtB,KAAKkJ,EACjD,GAEJ,QAAW,CACPxb,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOA,EAAIyP,KAAKkJ,GAAK,GACzB,GAEJ,QAAW,CACPxb,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAQA,EAAI,IAAOyP,KAAKkJ,EAC5B,GAEJ,MAAO,CACHxb,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOA,EAAIyP,KAAKkJ,GAAK,GACzB,GAEJ,SAAU,CACNxb,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAQA,EAAI,IAAOyP,KAAKkJ,EAC5B,GAGJ,KAAQ,CACJxb,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAA0B,IAAlBmY,WAAWnY,GAAY,EAAKA,EAAI,EAAK,GAAK,CACtD,GAEJ,KAAM,CACF7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EAENrJ,GAAI,SAAUvD,EAAGwV,GACb,OAAOA,EAAIiB,OAAO,OAAQ,CAACzW,GAC/B,GAEJ,IAAO,CACH7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKwtB,IAAIx6B,EACpB,GAEJ,MAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKwtB,IAAIx6B,EACpB,GAEJ,IAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKytB,IAAIz6B,EACpB,GAEJ,MAAS,CACLtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAOoK,KAAK0tB,MAAM16B,EAAG4C,EACzB,GAEJ,KAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAOoK,KAAK0tB,MAAM16B,EAAG4C,EACzB,GAEJ,GAAM,CACFlI,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKwJ,IAAIxW,EACpB,GAEJ,IAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKwJ,IAAIxW,EACpB,GAEJ,KAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAU,IAAN5C,EACOgN,KAAK2tB,MAAQ3tB,KAAKwJ,IAAI5T,GAEvB,KAAN5C,EACOgN,KAAK4tB,OAAS5tB,KAAKwJ,IAAI5T,GAE3BoK,KAAKwJ,IAAI5T,GAAKoK,KAAKwJ,IAAIxW,EAClC,GAEJ,KAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOA,EAAI,CACf,GAEJ,OAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOA,EAAI,CACf,GAEJ,OAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAK6tB,MAAM76B,EACtB,GAEJ,KAAM,CACFtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAKC,MAAMD,KAAKE,SAAWlN,EACtC,GAEJ,OAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MAAO,CAAC,MAAO,MACvB2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,OAAQoK,KAAKC,MAAMD,KAAKE,UAAYtK,EAAI5C,EAAI,IAAMA,CACtD,GAEJ,KAAQ,CACJtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAK8tB,KAAK96B,EACrB,GAEJ,MAAO,CACHtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,OAAOgN,KAAK8tB,KAAK96B,EACrB,GAGJ,MAAS,CACLtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAK+tB,MAAMx9B,EACtB,GAEJ,OAAQ,CACJ7C,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAK+tB,MAAMx9B,EACtB,GAEJ,QAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,MAAMo4B,EAAOhuB,KAAK0J,IAAI,GAAI9T,GAC1B,OAAOoK,KAAKgP,KAAKhc,EAAIg7B,GAAQA,CACjC,GAEJ,QAAS,CACLtgC,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,MAAMo4B,EAAOhuB,KAAK0J,IAAI,GAAI9T,GAC1B,OAAOoK,KAAKC,MAAMjN,EAAIg7B,GAAQA,CAClC,GAEJ,UAAW,CACPtgC,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,MAAMo4B,EAAOhuB,KAAK0J,IAAI,GAAI9T,GAC1B,OAAOoK,KAAK+tB,MAAM/6B,EAAIg7B,GAAQA,CAClC,GAEJ,KAAQ,CACJtgC,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKgP,KAAKze,EACrB,GAEJ,KAAM,CACF7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKgP,KAAKze,EACrB,GAEJ,MAAS,CACL7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKC,MAAM1P,EACtB,GAEJ,KAAM,CACF7C,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUvD,GACV,OAAOyP,KAAKC,MAAM1P,EACtB,ICrUD,MAAM0K,GAAU,CACnB8oB,UAAW,IACXlJ,IAAK,QAMF,SAASzO,GAAM6hB,EAAKlK,QAEL12B,IAAd02B,IACAA,EAAY9oB,GAAQ8oB,WAOxBkK,GAFAA,GAFAA,GAAiB,MAEP1gC,QAAQ,aAAc,OAEtBA,QAAQ,OAAQ,IAAM,KAEhC,MACM2gC,EAAY,IAAIxoB,OADH,aAAeqe,EAAY,SAGxCoK,EAAW,SAAU59B,GAMvB,MALmB,iBAAR,GACHA,EAAE69B,OAAO,cAAgB,IACzB79B,EAAImY,WAAWnY,IAGhBA,CACX,EAEM0H,EAAM,GACZ,IAAIo2B,EAAQ,GACRtrB,EAAI,GACR,KAAe,KAARkrB,GAAY,CAGf,GADAlrB,EAAIkrB,EAAI/hB,OAAO,GACXnJ,IAAMghB,EAAW,CACjBkK,EAAMA,EAAIzmB,UAAU,GACpB6mB,EAAMh/B,KAAK,IACX,QACJ,CAEA,GAAU,OAAN0T,EAAY,CACZsrB,EAAMh/B,KAAK,IACX4I,EAAI5I,KAAKg/B,GACTA,EAAQ,GACRJ,EAAMA,EAAIzmB,UAAU,GACpB,QACJ,CAKA,GAFAzE,GADAkrB,EAAMA,EAAI1gC,QAAQ,OAAQ,KAClB2e,OAAO,GAEXnJ,IAAMghB,EAAW,CACjBxa,QAAQC,IAAI,aACZ6kB,EAAMh/B,KAAK,IACX4+B,EAAMA,EAAIzmB,UAAUuc,EAAUlxB,QAC9B,QACJ,CAEA,GAAU,MAANkQ,GAA+B,MAAlBkrB,EAAI/hB,OAAO,GAAY,CACpC+hB,EAAMA,EAAIzmB,UAAU,GACpB,QACJ,CAEA,GAAU,MAANzE,EAAW,CACX,MAAMoH,EAAI+jB,EAAUv/B,KAAKs/B,GACzB,IAAK9jB,EAAG,CACJkkB,EAAMh/B,KAAK8+B,EAASF,IACpBh2B,EAAI5I,KAAKg/B,GACTA,EAAQ,GACR,KACJ,CACa,OAATlkB,EAAE,IACFkkB,EAAMh/B,KAAK8+B,EAAShkB,EAAE,KACtBlS,EAAI5I,KAAKg/B,GACTA,EAAQ,IAEHlkB,EAAE,KAAO4Z,GACdsK,EAAMh/B,KAAK8+B,EAAShkB,EAAE,KAE1B8jB,EAAMA,EAAIzmB,UAAU2C,EAAE,GAAGtX,QACzB,QACJ,CAEA,GAA4B,OAAxBo7B,EAAIzmB,UAAU,EAAG,GAAa,CAC9B6mB,EAAMh/B,KAAK,IACX4+B,EAAMA,EAAIzmB,UAAU,GACpB,QACJ,CAEA,IAAIvS,EAAI,EACJuN,EAAI,GACR,KAAOvN,EAAIg5B,EAAIp7B,QAAQ,CACnB,MAAMgpB,EAAKoS,EAAI/hB,OAAOjX,GAChB+W,EAAKiiB,EAAI/hB,OAAOjX,EAAI,GAG1B,GAAW,MAAP4mB,GAAqB,MAAP7P,EAKlB,GAAW,MAAP6P,EAmBJrZ,GAAKqZ,EACL5mB,QApBA,CAEI,GADAA,IACI+W,IAAO+X,EAAW,CAClB9uB,IACAo5B,EAAMh/B,KAAK8+B,EAAS3rB,IACpBA,EAAI,GACJ,KACJ,CACA,GAAW,OAAPwJ,EAAa,CACb/W,IACAo5B,EAAMh/B,KAAK8+B,EAAS3rB,IACpBvK,EAAI5I,KAAKg/B,GACTA,EAAQ,GACR,KACJ,CAEAp5B,GAEJ,MAtBIA,GAAK,EACLuN,GAAK,GAwBb,CACAyrB,EAAMA,EAAIla,OAAO9e,EACrB,CAGA,OAFIo5B,EAAMx7B,OAAS,GACfoF,EAAI5I,KAAKg/B,GACNp2B,CACX,CACO,SAAS1F,GAAU8uB,EAAK0C,EAAuBlJ,QAEhCxtB,IAAd02B,IACAA,EAAY9oB,GAAQ8oB,gBAEZ12B,IAARwtB,IACAA,EAAM5f,GAAQ4f,KAElB,MAAMyT,EAyBV,SAA2BvK,GACvB,OAAO,SAAUvhB,GAEb,IAAI+rB,GAAQ,EAaZ,QAdA/rB,EAAI,GAAKA,GAEHzP,QAAQ,OAAS,GAAKyP,EAAEzP,QAAQ,OAAS,KAC3Cw7B,GAAQ,GAER/rB,EAAEzP,QAAQgxB,IAAc,IACxBwK,GAAQ,GAER/rB,EAAEzP,QAAQ,MAAQ,IAClBw7B,GAAQ,EACR/rB,EAAIA,EAAEjV,QAAQ,KAAM,OAEpBghC,IACA/rB,EAAI,IAAMA,EAAI,KACXA,CACX,CACJ,CA3CsBgsB,CAAkBzK,GACpC,QAAY12B,IAARg0B,EACA,MAAO,GACX,IAAI7kB,EAAI,GACR,IAAK,IAAIvH,EAAI,EAAGA,EAAIosB,EAAIxuB,OAAQoC,IAAK,CACjC,MAAMo5B,EAAQhN,EAAIpsB,GAClB,QAAc5H,IAAVghC,EAAJ,CAIA,IAAK,IAAIliB,EAAI,EAAGA,EAAIkiB,EAAMx7B,OAAQsZ,IAC9BkiB,EAAMliB,GAAKmiB,EAAUD,EAAMliB,IAE/B3P,GAAK6xB,EAAM90B,KAAKwqB,GAAalJ,CAJ7B,MAFIre,GAAKqe,CAOb,CAGA,OADAre,EAAIA,EAAEjP,QAAQ,gBAAiBstB,GACxBre,CACX,CC/GA,OA/CkB,CACd,MAAO,CACH9O,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,WAEJ,GAGJ,QAAS,CACLpG,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUuJ,GAEV,OADApC,GAAQ8oB,UAAY,IACb3X,GAAM/O,EACjB,GAEJ,QAAS,CACL3P,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUuJ,GAEV,OADApC,GAAQ8oB,UAAY,KACb3X,GAAM/O,EACjB,GAEJ,SAAU,CACN3P,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GAEV,OADAiI,GAAQ8oB,UAAY,IACbxxB,GAAUS,EACrB,GAEJ,SAAU,CACNtF,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GAEV,OADAiI,GAAQ8oB,UAAY,KACbxxB,GAAUS,EACrB,IC7CR,IACI,MAAO,CACHtF,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACW,MAAjBA,EAAI0oB,YACJ1oB,EAAI0oB,UAAY,CACZC,eAAgB,SAAUC,GAEtB,OADA5oB,EAAIE,KAAK,KAAO0oB,EACTA,CACX,GAGZ,GAGJ,IAAK,CAAEjhC,KAAM,QAAS4F,MAAO,IAE7B,KAAM,CACF5F,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU/kB,GACpB,OAAOA,EAAI0oB,UAAUC,eAAe,IAAI7gB,SAAQ,CAACC,EAASC,IAC/C+c,EAAShd,EAASC,KAEjC,EACAnR,aAAa,GAEjB,MAAO,CACHlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzB2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU6D,EAAS5oB,GAC7B,OAAOA,EAAI0oB,UAAUC,eAAeC,EAAQze,MAAM3a,IAC9CwQ,EAAIE,KAAK,MAAQ1Q,EACVu1B,EAASv1B,MAExB,EACAqH,aAAa,GAEjB,MAAO,CACHlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzB2I,MAAM,EACNrJ,GAAI,SAAU86B,EAAQD,EAAS5oB,GAC3B,OAAOA,EAAI0oB,UAAUC,eAAeC,EAAQze,MAAM3a,IAC9CwQ,EAAIE,KAAK,MAAQ1Q,EACVq5B,GAAO,EAAMr5B,EAAQwQ,MAC5B8oB,IACA9oB,EAAIE,KAAK,MAAQ4oB,EACVD,GAAO,EAAOC,EAAQ9oB,MAErC,EACAnJ,aAAa,GAEjB,MAAO,CACHlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzB2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU6D,EAAS5oB,GAC7B,OAAOA,EAAI0oB,UAAUC,eAAeC,EAAQte,OAAOnC,IAC/CnI,EAAIE,KAAK,MAAQiI,EACV4c,EAAS5c,MAExB,EACAtR,aAAa,GAEjB,MAAO,CACHlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzB2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU6D,EAAS5oB,GAC7B,OAAOA,EAAI0oB,UAAUC,eAAeC,EAAQG,SAAQ,IACzChE,MAEf,EACAluB,aAAa,GAEjB,IAAK,CACDlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,YAAaoI,GAEb,OADYA,EAAKzC,MACNg1B,UAAUC,eAAe7gB,QAAQwc,IAAInuB,GACpD,EACAU,aAAa,ICpFrB,IAEI,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,GACb,GAAI5C,IAAM4C,EACN,MAAM,IAAI9I,MAAM,WAAWkG,SAAS4C,KAExC,OAAO,CACX,GAEJ,QAAS,CACLlI,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChBA,EAAIiB,OAAO,UAAW,CAAChU,EAAG4C,EAAGmQ,GACjC,GAEJ,OAAQ,CACJrY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,MACf2I,MAAM,EACNrJ,GAAI,SAAUd,EAAG4C,EAAGmQ,GAChBA,EAAIiB,OAAO,UAAW,CAAChU,EAAG4C,EAAGmQ,GACjC,ICVR,MAAMgpB,GAAejiB,GAAMxa,KAAK8Z,MAAM9Z,KAAKC,UAAUua,IAE9C,SAASkiB,GAAmBC,EAAU,CAAC,GAS1C,MARuB,iBAAZA,IACPA,EAAU,CAAC,GAEfA,EAAQC,SAAWD,EAAQC,WAAY,EACvCD,EAAQ5kB,SAAW4kB,EAAQ5kB,WAAY,EACvC4kB,EAAQzkB,SAAWykB,EAAQzkB,WAAY,EACvCykB,EAAQxG,QAAUwG,EAAQxG,SAAW,GACrCwG,EAAQ3C,WAAa2C,EAAQ3C,YAAc,KACpC2C,CACX,CAEO,MAAME,GAITpiC,YAAYkO,QACQ5N,IAAZ4N,IACAA,EAAU,CAAEm0B,gBAAgB,IAGhC5hC,KAAK6C,WAAa,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,GAC5B7C,KAAK8Y,SAAW,CAAC,EACjB9Y,KAAKyC,OAASzC,KACdA,KAAK6hC,OAAS7hC,KAAK6C,WAAW,GAC9B7C,KAAKyY,KAAOzY,KAAK6C,WAAW,GAC5B7C,KAAK8hC,KAAO9hC,KAAK6C,WAAW,GAE5B7C,KAAKf,QAAU,aACfe,KAAKkT,YAAc,aACnBlT,KAAK+hC,UAAY,GACjB/hC,KAAKgiC,YAAc,KACnBhiC,KAAKiP,SAAW,CAAC,EACjBjP,KAAKiiC,eAAiB,CAAC,EACvBjiC,KAAK6mB,SAAW,CAAC,EACjB7mB,KAAKyiB,YAAc,CAAC,EACpBziB,KAAKkiC,YAAc,IAAI9/B,IACvBpC,KAAKgC,aAAe,CAAC,EACrBhC,KAAKmiC,UAAY,GACjBniC,KAAKoiC,eAAiB,CAAC,EACvBpiC,KAAKsE,YAAc,CAAEW,UAAU,EAAOE,SAAU,GAChDnF,KAAKub,OAAS,IAAIyhB,GAClBh9B,KAAKmnB,SAAW,aAOhBnnB,KAAKqiC,aAAe,CAAC,EACrBriC,KAAK+pB,UAAY,IAAI3nB,IACrBpC,KAAKs+B,YAAc,EACf7wB,EAAQm0B,gBACR5hC,KAAKsiC,kBAGTtiC,KAAKuiC,QAAUnN,EAAYoN,cAC3BxiC,KAAKyiC,OAAS,IAAI5Y,EAAW7pB,KAAKub,QAClCvb,KAAK0iC,MAAQ,IAAI9b,EAAU5mB,KAAKub,QAEhCvb,KAAK0iC,MAAM5b,YAAY9mB,KAAK6mB,SAChC,CAEA3gB,aACI,OAAOlG,KAAK0iC,MAAM1pB,OACtB,CACApO,YACI,OAAO5K,KAAKub,MAChB,CACAtZ,kBACI,OAAOjC,KAAKgC,YAChB,CACA+I,YAAY9K,GACR,OAAOD,KAAKgC,aAAa/B,EAC7B,CACA2+B,iBACI,OAAO5+B,KAAKyiB,WAChB,CAIA6f,kBACItiC,KAAK2G,gBAAgB,eAAgB,MACrC3G,KAAK2G,gBAAgB,aAAc,IACnC3G,KAAK2G,gBAAgB,gBAAiB,IACtC3G,KAAK2G,gBAAgB,eAAgB,IACrC3G,KAAK2G,gBAAgB,YAAa,GACtC,CAIAg8B,gBAEI,OADe3iC,KAAK0iC,MAAMnnB,OAASvb,KAAKyiC,OAAOlnB,OAASvb,KAAKub,OAAS,IAAIyhB,EAE9E,CAKAr8B,6BAA6BsmB,GACzB,MAAM2b,EAAoB,GAC1B,IAAK,IAAIn7B,EAAI,EAAGA,EAAI,EAAIwf,EAAO5hB,OAAQoC,IAEV,QAAnBwf,EAAOxf,GAAGvH,MACY,WAAvB+mB,EAAOxf,EAAI,GAAGvH,MAA4C,cAAvB+mB,EAAOxf,EAAI,GAAGvH,MAC1B,OAAxB+mB,EAAOxf,EAAI,GAAG3B,QAGlB88B,EAAkB/gC,KAAK,IAChBolB,EAAOxf,GACVo7B,MAAOp7B,EACP4gB,IAAK5gB,EAAI,EACT3B,MAAOmhB,EAAOxf,EAAI,GAAG3B,MAAQ,GAC7B0uB,WAAYvN,EAAOxf,GACnBq7B,UAAW7b,EAAOxf,EAAI,KAE1BA,GAAK,GAET,OAAOm7B,CACX,CAgBAG,kBAAkB98B,EAAMkhB,EAAU8T,EAAS+H,GACvC,MAAMX,EAAe,CAAC,EAChBlE,EAAW,IAAIwD,GAAa,CAAEC,gBAAgB,IAK9CqB,EAAS,CAACjY,EAAMkY,KAElB,MAAMxmB,EAAMsmB,EAAMG,OAAOnY,EAAKoY,SAAUpY,EAAKwJ,YAC7C0O,EAAMrhC,KAAK6a,EAAI2mB,KAAK3gB,MAAMjY,IACtB,MAAM64B,EAAc74B,IACpBzK,KAAK4G,cAAcokB,EAAKllB,MAAOklB,EAAKoY,SAAUE,GAAa,GAC3DjB,EAAarX,EAAKoY,UAAUvc,SAAWyc,EACvCjB,EAAarX,EAAKoY,UAAUx8B,cAAgB,KAAQ5G,KAAK4G,cAAcokB,EAAKllB,MAAOklB,EAAKoY,SAAUE,GAAa,EAAM,CAAG,IACzH,EAEDC,EAAY,CAACvY,EAAMkY,KAErB,MAAMM,EAAUR,EAAMS,UAAUzY,EAAKoY,SAAUpY,EAAKwJ,YAC9CkP,EAAgBz9B,IAIlB,MAAMkT,EAAUyN,EAAUQ,kBAAkB4D,EAAKoY,UACjDn9B,EAAO,IAAIkT,cAAoBA,eAAuBlT,EAAO,YAC7D,MAAMghB,EAASjnB,KAAK2jC,YAAY19B,EAAM,EAAG+kB,EAAKoY,UAC9Cf,EAAarX,EAAKoY,UAAUnc,OAASA,EACrC,MAAMJ,EAAW,CAAC,EAIlB,OAHAD,EAAUS,cAAcka,GAAYta,GAASjnB,KAAKub,OAAQsL,GAC1Dwb,EAAarX,EAAKoY,UAAUvc,SAAWA,EAEhC+c,EAAQ39B,EAAM+kB,EAAKoY,SAAU,GAAG,EAG3CF,EAAMrhC,KAAK2hC,EAAQH,KAAK3gB,MAAMjY,GAAQi5B,EAAaj5B,KAAM,EAEvDm5B,EAAU,CAAC39B,EAAMkhB,EAAU8T,KAC7B,MAAMiI,EAAQ,GAIRW,EAFOlC,GAAamC,sBAAsB3F,EAASwF,YAAY19B,EAAM,EAAGkhB,EAAU8T,IAE3Dn4B,KAAKC,IAAM,IAAMA,KAAMigC,EAAMe,YAAYhhC,EAAE+C,MAAO/C,EAAEyxB,WAAYrN,OAE7F,IAAK,MAAM6D,KAAQ6Y,EAGf,GAAIxB,EAAa9f,eAAeyI,EAAKoY,UACjCf,EAAarX,EAAKoY,UAAUY,MAAMr8B,IAAIqjB,EAAKllB,YAM/C,GADAu8B,EAAarX,EAAKoY,UAAY,CAAEnc,OAAQ,GAAI+c,MAAO,IAAI5hC,IAAI,CAAC4oB,EAAKllB,QAASc,cAAe,OAAWigB,SAAU,CAAC,GAC7F,OAAdmE,EAAK9qB,MAA+B,QAAd8qB,EAAK9qB,KAC3B+iC,EAAOjY,EAAMkY,OAEZ,IAAkB,UAAdlY,EAAK9qB,KAIV,MAAM,IAAI,KAAgB,QAAQ8qB,EAAKllB,uCAAwCklB,EAAKwJ,WAAW90B,KAAMsrB,EAAKwJ,WAAW70B,MAHrH4jC,EAAUvY,EAAMkY,EAIpB,CAEJ,GAAIA,EAAM79B,OAAS,EACf,OAAOgb,QAAQwc,IAAIqG,EAEP,EAEpB,IACI,MAAMn7B,EAAS67B,EAAQ39B,EAAMkhB,EAAU8T,GAYvC,YAVep7B,IAAXkI,GACAA,EAAO8a,OAAOnC,IAEV1gB,KAAKub,OAAOxa,MAAM2f,EAAIjhB,KACtBO,KAAKs+B,aAAa,IAK1Bt+B,KAAKqiC,aAAeA,EACbt6B,CAMX,CAJA,MAAO2Y,GAGH,MADA1gB,KAAKub,OAAOxa,MAAM,GAAK2f,GACjBA,CACV,CACJ,CASAijB,YAAY19B,EAAMtG,EAAMwnB,EAAU8T,EAAU,IACxC,IAAKh1B,EAAKg+B,WAAWhJ,GACjB,MAAM,IAAI37B,MAAM,gCAGpB,MAAM6Z,EAAUyN,EAAUQ,kBAAkBD,GACtCnO,EAAUhZ,KAAKkG,aACjB8S,EAAQzT,QAAQ4T,GAAW,GAC3BH,EAAQ4H,QAAQzH,GAGpB,MAAMugB,EAAe15B,KAAKuiC,QAAQ9M,QAAQxvB,GACpCi+B,EAA4B,IAAI1K,EAA4BvzB,EAAKZ,OAAQq0B,GACzEyK,EAAiC,IAAIlK,EAA4Bh0B,EAAM,GAAI,IAC3Em+B,EAAqB,IAAIxJ,EAAmB30B,GAElD,IAAIghB,EACJ,IACIA,EAASjnB,KAAK0iC,MAAM5Z,SAAS4Q,EAAa52B,KAAKC,GAAMA,EAAEgN,OAAMhE,KAAK,IAAKpM,EAAMwnB,EAWjF,CATA,MAAOzG,GACH,KAAMA,aAAe,MACjB,MAAMA,EAGV,MAAM2jB,EAAOF,EAA+BrhC,IAAIohC,EAA0BphC,IAAI4d,EAAIrgB,6BAA8B6jC,EAA0BphC,IAAI4d,EAAIpgB,4BAC5IX,EAA4B,OAArB0kC,EAAK7jC,YAAuBkgB,EAAI/gB,KAAOykC,EAAmBthC,IAAIuhC,EAAK7jC,aAAa,GAAOb,KAC9FmD,EAAMi4B,EAAiC,IAAKsJ,EAAM1kC,QAAQs7B,GAChE,MAAM,IAAI,KAAeva,EAAIjhB,IAAKqD,EAAItC,YAAasC,EAAIrC,UAAWqC,EAAInD,KAAMwnB,EAChF,CAgCA,OA9BAF,EAAS+R,EAAa/R,GAEtBA,EAASwQ,EAAYxQ,GAErBA,EAAS4P,EAAoB5P,GAE7BA,EZtRD,SAA6BA,GAUhC,MAAMkP,EAAQG,EAAYrP,EAAQ,OAC5BiQ,EAAe,GACrB,IAAIoN,GAAe,EACfvN,EAAe,EACfC,EAAiB,EACrB,MAAMC,EAAmBt3B,IAErBA,EAAKyQ,SAAS1I,IACK,MAAXA,EAAExH,MACF62B,IAEW,MAAXrvB,EAAExH,MACF62B,IAEW,MAAXrvB,EAAExH,MACF82B,IAEW,MAAXtvB,EAAExH,MACF82B,GACJ,GACF,EAEN,IAAK,IAAIvvB,EAAI,EAAGA,EAAI0uB,EAAM9wB,OAAQoC,IAAK,CACnC,MAAM9H,EAAOw2B,EAAM1uB,GAEnB,GAAIgvB,EAAY92B,GACZ,SAEJ,MAAMy3B,EAAYT,EAAch3B,GAEhC,GAAIo3B,EAAe,GAAKC,EAAiB,EAAG,CACxCC,EAAgBt3B,GAChB,QACJ,CAEA,GAAI2kC,GAAe,EAAG,CAClB,MAAMC,EAAanN,EAAUtnB,OAC7B,KAAOw0B,GAAeC,GAAY,CAC9B,MAAMC,EAASpN,EAWf,GATInB,EAAWuO,IAAYF,IAAgBC,IAKvCpO,EAAM1uB,EAAI,GAAG5F,KAAKk0B,EAAS,OAAQ,OAAQyO,IAC3CrO,EAAM1uB,EAAI,GAAG5F,KAAKk0B,EAAS,MAAO,KAAMyO,KAE5CtN,EAAajrB,QACTirB,EAAa7xB,OAAS,GAGrB,CACDi/B,GAAe,EACf,KACJ,CALIA,EAAcpN,EAAaA,EAAa7xB,OAAS,EAMzD,CACJ,CAGA,GADA4xB,EAAgBt3B,GACZo3B,EAAe,GAAKC,EAAiB,EACrC,SAGJ,MAAMyN,EAAQrO,EAAuBz2B,GAClB,MAAf8kC,EAAMvkC,OAENi2B,EAAM1uB,GAAK0uB,EAAM1uB,GAAGoN,QAAOnN,GAAKA,IAAM+8B,IACtCH,EAAcG,EAAM30B,OACpBonB,EAAar1B,KAAKyiC,GAE1B,CACA,GAAInO,EAAM9wB,OAAS,GAAK6xB,EAAa7xB,OAAS,EAAG,CAE7C,IAAIqC,EAAIuf,EAAO,GACf,IAAK,IAAIxf,EAAI0uB,EAAM9wB,OAAS,EAAGoC,GAAK,EAAGA,IAAK,CACxC,MAAM9H,EAAOw2B,EAAM1uB,GACnB,GAAI9H,EAAK0F,OAAS,EAAG,CACjBqC,EAAI/H,EAAKA,EAAK0F,OAAS,GACvB,KACJ,CACJ,CAEA,IAAK,IAAIoC,EAAI,EAAGA,EAAIyvB,EAAa7xB,OAAQoC,IACrC0uB,EAAMA,EAAM9wB,OAAS,GAAGxD,KAAKk0B,EAAS,OAAQ,OAAQruB,IACtDyuB,EAAMA,EAAM9wB,OAAS,GAAGxD,KAAKk0B,EAAS,MAAO,KAAMruB,GAE3D,CAKA,OAJewuB,EAAeC,EAKlC,CY+KiBuO,CAAoBzd,GAE7BA,EAASA,EAAOnkB,KAAK8oB,IACjB,MAAMyY,EAAOF,EAA+BrhC,IAAIohC,EAA0BphC,IAAI8oB,EAAMpC,wBAA0B,GAAI0a,EAA0BphC,KAAK8oB,EAAMpC,wBAA0B,IAAMoC,EAAMnC,wBAA0B,KACvN,IAAI9pB,EAAOisB,EAAMjsB,KACbylB,EAAS,EACb,GAAmB,QAAfwG,EAAM1rB,MAAqC,OAAnBmkC,EAAK5jC,UAAoB,CAGjD,MAAMsc,EAAMqnB,EAAmBthC,IAAIuhC,EAAK5jC,WAAW,GACnDd,EAAOod,EAAIpd,KACXylB,EAASrI,EAAIqI,MACjB,MACK,GAAyB,OAArBif,EAAK7jC,YAAsB,CAChC,MAAMuc,EAAMqnB,EAAmBthC,IAAIuhC,EAAK7jC,aAAa,GACrDb,EAAOod,EAAIpd,KACXylB,EAASrI,EAAIqI,MACjB,CACA,MAAO,IACAwG,KACAmP,EAAiC,CAAEp7B,OAAMylB,SAAQ5kB,YAAa6jC,EAAK7jC,YAAaC,UAAW4jC,EAAK5jC,WAAaw6B,GAChHzT,QAASoE,EAAM5kB,KAClB,IAEEigB,CACX,CAQA0d,aAAa1d,EAAQC,EAASC,GAE1B,OADYnnB,KAAK0iC,MAAM1b,cAAcC,EAAQC,EAASC,EAE1D,CAKAsD,MAAMhd,GACGA,IAAWA,EAAQm3B,mBAKpB5kC,KAAKo/B,eAQTp/B,KAAK6C,WAAa,CAAC7C,KAAK6C,WAAW,GAAI,CAAC,EAAG,CAAC,GAC5C7C,KAAKyY,KAAOzY,KAAK6C,WAAW,GAC5B7C,KAAK8hC,KAAO9hC,KAAK6C,WAAW,GAC5B7C,KAAK6hC,OAAS7hC,KAAK6C,WAAW,GAC9B7C,KAAK8Y,SAAW,CAAC,EAEjB9Y,KAAK6mB,SAAW,CAAC,EACjB,IAAK,MAAM5mB,KAAQiD,OAAOC,KAAKnD,KAAKyY,MAAO,CACvC,MAAMosB,EAAW7kC,KAAKiiC,eAAehiC,GAChC4kC,IAGL7kC,KAAK6mB,SAAS5mB,GAAQ6E,KAAK8Z,MAAM9Z,KAAKC,UAAU8/B,IACpD,CACA7kC,KAAK0iC,MAAM5b,YAAY9mB,KAAK6mB,UAC5B7mB,KAAKub,OAAO6hB,OAChB,CAUA0H,aAAa7+B,EAAMtG,EAAMwnB,EAAU3mB,GAE/B,IAAIymB,EAASjnB,KAAK2jC,YAAY19B,EAAMtG,EAAMwnB,EAAU,IAEpD,GAAoB,OAAhB3mB,EACA,IAAK,MAAMorB,KAAS3E,EAChB2E,EAAMprB,iBAAcX,EACpB+rB,EAAMnrB,eAAYZ,OAItB,IAAK,MAAM+rB,KAAS3E,OACUpnB,IAAtB+rB,EAAMprB,cACNorB,EAAMprB,aAAeA,QAEDX,IAApB+rB,EAAMnrB,YACNmrB,EAAMnrB,WAAaD,GAK/B,MAAMukC,EAAgB9d,EAAOpS,QAAQnN,GAAiB,iBAAXA,EAAExH,MAAsC,kBAAXwH,EAAExH,OACrE4C,KAAKC,IAAM,IAAMA,MAEtB,OADAkkB,EAASjnB,KAAK2kC,aAAa1d,GAAQ,EAAOE,GACnC,CAAEF,SAAQ8d,gBACrB,CAQAC,yBAAyB/d,EAAQge,EAAe,IAAI7iC,KAEhD,MAAM8iC,EAAgB,GACtB,IAAK,MAAMl2B,KAAK2yB,GAAamC,sBAAsB7c,GAAQ/H,UAAW,CAElE,GAAI+lB,EAAa76B,IAAI4E,EAAElJ,OAAQ,CAC3Bo/B,EAAcrjC,QAAQolB,EAAOlS,OAAQ/F,EAAE6zB,OAAS,GAAK7zB,EAAEqZ,KAAO,IAAMrZ,EAAE6zB,OAAS,KAC/E,QACJ,CACA,MAAMO,EAAWlgC,OAAOC,KAAKnD,KAAKqiC,cAAc8C,MAAM/+B,GAAQpG,KAAKqiC,aAAaj8B,GAAK49B,MAAM55B,IAAI4E,EAAElJ,SACjG,QAAiBjG,IAAbujC,EAAwB,CACxB,IAAKp0B,EAAEwlB,WACH,MAAM,IAAIl1B,MAAM,QAAQ0P,EAAElJ,sBAE9B,MAAM,IAAI,KAAe,QAAQkJ,EAAElJ,qBAAsBkJ,EAAEwlB,WAAWh0B,aAAe,EAAGwO,EAAEwlB,WAAW/zB,WAAa,EAAGuO,EAAEwlB,WAAW70B,KAAMqP,EAAEwlB,WAAW90B,KACzJ,CACAM,KAAKqiC,aAAae,GAAUx8B,gBAC5B,MAAMw+B,EAAW7D,GAAYvhC,KAAKqiC,aAAae,GAAUnc,QACzDge,EAAat9B,IAAIqH,EAAElJ,OACnBo/B,EAAcrjC,QAAQ7B,KAAKglC,yBAAyBI,EAAUH,IAC9DC,EAAcrjC,QAAQolB,EAAOlS,OAAO/F,EAAE6zB,OAAS,GAAI7zB,EAAEqZ,KAAO,IAAMrZ,EAAE6zB,OAAS,MAAOuC,GACxF,CACA,OAAOF,CACX,CAMAG,wBAAwBpe,GAEpB,MAAMie,EAAgB,GACtB,IAAK,MAAMl2B,KAAK2yB,GAAamC,sBAAsB7c,GAAQ/H,UAAW,CAElE,MAAMkkB,EAAWlgC,OAAOC,KAAKnD,KAAKqiC,cAAc8C,MAAM/+B,GAAQpG,KAAKqiC,aAAaj8B,GAAK49B,MAAM55B,IAAI4E,EAAElJ,cAChFjG,IAAbujC,GACApjC,KAAKqiC,aAAae,GAAUx8B,gBAGhCs+B,EAAcrjC,QAAQolB,EAAOlS,OAAO/F,EAAE6zB,OAAS,GAAI7zB,EAAEqZ,KAAO,IAAMrZ,EAAE6zB,OAAS,IACjF,CACA,OAAOqC,CACX,CAEAI,IAAIr/B,EAAMkhB,EAAW,aAAc8T,EAAU,GAAIsK,GAAqB,GAElE,IAAIte,EAASjnB,KAAK2jC,YAAY19B,EAAM,EAAGkhB,EAAU8T,GAEjD,MAAMuK,EAAyBD,EAAqBvlC,KAAKqlC,wBAAwBpe,GAAUjnB,KAAKglC,yBAAyB/d,OAAQpnB,GACjI,IAAK,MAAM6H,KAAK89B,EACG,SAAX99B,EAAExH,MAA8B,QAAXwH,EAAExH,OACvBwH,EAAExH,KAAO,WAGjB,GAAIslC,EAAuBngC,QAAU,EAEjC,IAAK,IAAIoC,EAAI,EAAGA,EAAI+9B,EAAuBngC,OAAQoC,GAAK,EAAG,CACvD,IAAI0R,EAAUqsB,EAAuB/9B,EAAI,GAAG3B,MAC5CqT,EAAUyN,EAAUQ,kBAAkBjO,GAClCnZ,KAAK0iC,MAAM1pB,QAAQzT,QAAQ4T,GAAW,GACtCnZ,KAAK0iC,MAAM1pB,QAAQnX,KAAKsX,EAEhC,CAGJ,MAAM4rB,EAAgB9d,EAAOpS,QAAQnN,GAAiB,iBAAXA,EAAExH,MAAsC,kBAAXwH,EAAExH,OACrE4C,KAAKC,IAAM,IAAMA,MACtBkkB,EAASjnB,KAAK2kC,aAAa1d,GAAQ,EAAME,GACzC,IAAK,IAAI1f,EAAI,EAAGA,EAAIwf,EAAO5hB,OAAQoC,IAC/B,GAAIwf,EAAOxf,IAAyB,SAAnBwf,EAAOxf,GAAGvH,KAAiB,CACxC,MAAMklC,EAAWplC,KAAK8kC,aAAa7d,EAAOxf,GAAG3B,MAAOmhB,EAAOxf,GAAG9H,KAAMwnB,EAAUF,EAAOxf,GAAGjH,aAAe,GACvGukC,EAAcljC,QAAQujC,EAASL,eAC/B9d,EAAOlS,OAAOtN,EAAG,KAAM29B,EAASne,QAChCxf,GACJ,CAGJ,OADAzH,KAAKub,OAAO1I,MAAM,gBAAkB/N,KAAKC,UAAUkiB,EAAQ,KAAM,IAC1D,CAAE8d,gBAAe9d,SAAQwe,cAAeD,EACnD,CAIA5mB,MAAM3Y,EAAMkhB,EAAU8T,EAAU,IAE5Bj7B,KAAK0iC,MAAM5b,YAAY9mB,KAAK6mB,UAC5B7mB,KAAKyiC,OAAO3b,YAAY9mB,KAAK6mB,UAE7B,MAAM6e,EAAc1lC,KAAKslC,IAAIr/B,EAAMkhB,EAAU8T,GAE7C,IAAI9zB,EACJ,IACInH,KAAKyiC,OAAO//B,QAAU,OACtByE,EAAMnH,KAAKyiC,OAAO7jB,MAAM8mB,EAAYze,OAAQE,EAOhD,CALA,MAAOzG,GACH,GAA+B,iBAApBA,EAAIlgB,YACX,MAAM,cAAyBkgB,EAAIxf,QAASwkC,EAAYze,OAAOjnB,KAAKyiC,OAAOvX,aAE/E,MAAMxK,CACV,CAKA,OAHA1gB,KAAK+pB,UAAY/pB,KAAKyiC,OAAO1Y,UAC7B/pB,KAAK2lC,oBACL3lC,KAAKub,OAAO1I,MAAM,gBAAkB/N,KAAKC,UAAUoC,EAAK,KAAM,IACvDA,CACX,CACAy+B,aAAaz+B,GACT,MAAM0+B,EAAQ,CAAC1+B,GAEf,IADAnH,KAAK+pB,UAAY,IAAI3nB,IACdyjC,EAAMxgC,OAAS,GAAG,CACrB,MAAMygC,EAAOD,EAAM55B,MACf65B,SAAsD,OAAfA,EAAKx+B,YAAiCzH,IAAfimC,EAAKx+B,OACnEtH,KAAK+lC,mBAAmBF,EAAO/gC,KAAK8Z,MAAM9Z,KAAKC,UAAU+gC,EAAKx+B,QAEtE,CACA,OAAOtH,KAAK2lC,mBAChB,CACAI,mBAAmBC,EAAUC,GACzB,KAAOA,EAAW5gC,OAAS,GAAG,CAC1B,MAAMiC,EAAQ2+B,EAAWh6B,MACrB3E,SACAtH,KAAKkmC,kBAAkB5+B,EAAO0+B,EAAUC,EAEhD,CACJ,CACAC,kBAAkB5+B,EAAO0+B,EAAUC,GAC3B,CAAC,OAAQ,gBAAgBj6B,SAAS1E,EAAMpH,OAAwB,OAAfoH,EAAMrH,WAAgCJ,IAAfyH,EAAMrH,MAC9ED,KAAK+pB,UAAUpiB,IAAIL,EAAMrH,MAE7B+lC,EAASnkC,KAAK,CAACyF,EAAOA,EAAMA,QAE5B2+B,EAAWpkC,KAAK8X,MAAMssB,EAAY,CAAC3+B,EAAMxB,OAAOuZ,OAAO/X,EAAMoH,MACjE,CACAi3B,oBACI,IAAK,MAAMx2B,KAAQnP,KAAK+pB,UACf/pB,KAAKkiC,YAAY93B,IAAI+E,IACtBnP,KAAK+pB,UAAUoc,OAAOh3B,GAG9B,OAAOnP,KAAK+pB,SAChB,CAQAqc,QAAQngC,EAAMkhB,EAAU5lB,GAAS,EAAO05B,EAAU,IAC9C,MAAMj1B,EAAMw7B,KACZx7B,EAAI07B,SAAWngC,EACfyE,EAAIi1B,QAAUA,EAEd,OADYj7B,KAAKqmC,gBAAgBpgC,EAAMkhB,EAAUnhB,GACtCoN,UACf,CAEAizB,gBAAgBpgC,EAAMkhB,EAAU1Z,GACX,KAAb0Z,IACAA,EAAW,mBAECtnB,IAAZ4N,IACAA,EAAU+zB,MAEd,IACQ/zB,EAAQoP,UACR7c,KAAKyqB,QAELhd,EAAQuP,UACRhd,KAAKo/B,eAGTp/B,KAAKmiC,UAAUttB,QAAOyB,GAAqB,gBAAhBA,EAAEgwB,YAA6BxjC,KAAIoJ,GAAKA,EAAEoxB,SAASr3B,KAE9E,MAAMkB,EAAMnH,KAAK4e,MAAM3Y,EAAMkhB,EAAU1Z,EAAQwtB,SAE/Cj7B,KAAKmiC,UAAUttB,QAAOyB,GAAqB,mBAAhBA,EAAEgwB,YAAgCxjC,KAAIoJ,GAAKA,EAAEoxB,SAASn2B,KAEjF,MAAMo/B,EAAUvmC,KAAKwmC,aAAar/B,EAAK,IAAI,KAAesG,EAAQi0B,WAGlE,OADA1hC,KAAKmiC,UAAUttB,QAAOyB,GAAqB,kBAAhBA,EAAEgwB,YAA+BxjC,KAAIoJ,GAAKA,EAAEoxB,SAASiJ,KACzEA,CAKX,CAHA,MAAOr6B,GAEH,MADAlM,KAAKub,OAAOxa,MAAMmL,GACZA,CACV,CACJ,CAMAs6B,aAAar/B,EAAKnB,GAEd,MAAM2L,EAAOxK,EAAIzE,SAAW,GAE5B,GAAa,SAATiP,EACA,OAAO,QAAW3R,KAAMmH,EAAKnB,GAGjC,GAAa,WAAT2L,EAEA,OADA3R,KAAKub,OAAO1Q,KAAK,gFACV,aAAsB7K,KAAMmH,EAAKnB,EAAIzE,QAGhD,MAAMklC,EAASzmC,KAAKoiC,eAAezwB,GACnC,IAAK80B,EACD,MAAM,IAAInnC,MAAM,cAAcqS,mBAElC,OAAO80B,EAAOC,SAAS1mC,KAAMmH,EAAKnB,EAAIzE,OAC1C,CAEAmW,iBAAiB/F,EAAM+K,GACnB1c,KAAKoiC,eAAezwB,GAAQ+K,CAChC,CASAF,WAAWvW,EAAMrE,EAAO+kC,EAASplC,EAAQ05B,EAAU,IAC/C,MAAMtsB,EAAO6yB,GAAmB,CAC5B3kB,SAAU8pB,EACV3pB,SAAU2pB,EACVjF,SAAUngC,EACV05B,YAEJ,OAAOj7B,KAAK4mC,OAAO3gC,EAAMrE,EAAO+M,EACpC,CAEAywB,eAEIp/B,KAAK+hC,UAAU3xB,SAASmI,IACpBA,EAAI1V,WAAW,GAAGwa,YAAa,EAC/B9E,EAAIkS,OAAO,IAEfzqB,KAAK+hC,UAAY,EACrB,CAMA8E,OAAO5gC,EAAM64B,GAET9+B,KAAKmiC,UAAUttB,QAAOyB,GAAqB,cAAhBA,EAAEgwB,YAA2BxjC,KAAIoJ,GAAKA,EAAEoxB,SAASwB,KAC5E9+B,KAAKgiC,YAAclD,EACnB9+B,KAAKgiC,YAAY3D,WAAap4B,EAC9B,IAEc,IAAIwW,SAASxW,GACrB0T,MAAMmlB,EAOZ,CALA,MAAOpe,GAIH,MAFAoe,EAAWR,cACXt+B,KAAK4K,YAAY7J,MAAM2f,GACjBA,CACV,CAEA1gB,KAAKmiC,UAAUttB,QAAOyB,GAAqB,WAAhBA,EAAEgwB,YAAwBxjC,KAAIoJ,GAAKA,EAAEoxB,SAASwB,IAC7E,CASAC,QAAQ94B,EAAMkhB,EAAU1Z,GAEpBA,EAAU+zB,GAAmB/zB,GAC7B,MAAMsP,EAAM/c,KAAKqmC,gBAAgBpgC,EAAMkhB,EAAU1Z,GAE3CqxB,EAAa9+B,KAAK8mC,cAAcr5B,EAASsP,EAAI5K,IAAKgV,GAGxD,OADAnnB,KAAK6mC,OAAO9pB,EAAI3J,WAAY0rB,GACrBA,CACX,CAQAtiB,eAAevW,EAAMkhB,EAAU1Z,GAE3BA,EAAU+zB,GAAmB/zB,GAC7B,MAAMsP,EAAM/c,KAAKqmC,gBAAgBpgC,EAAMkhB,EAAU1Z,GAE3CqxB,EAAa9+B,KAAK8mC,cAAcr5B,EAASsP,EAAI5K,IAAKgV,GAGxD,OADAnnB,KAAK6mC,OAAO9pB,EAAI3J,WAAY0rB,GACrBA,CACX,CACAgI,cAAcr5B,EAAS0E,EAAKgV,GAExB,IAAI3J,EAAI/P,EAAQqxB,WAehB,OAdKthB,IAGGA,EADAxd,KAAK+hC,UAAU18B,OAAS,IAA0B,IAArBoI,EAAQuP,WAA2C,IAArBvP,EAAQoP,SAC/D7c,KAAK+hC,UAAU/hC,KAAK+hC,UAAU18B,OAAS,GAGvC,IAAI64B,GAAWl+B,KAAMmS,EAAMnS,KAAK+hC,UAAU18B,OAAS,GAG3DmY,EAAE3a,WAAW,GAAG,QAAU+jB,EAAUQ,kBAAkBD,IAEtDnnB,KAAK+hC,UAAUx8B,QAAQiY,GAAK,GAC5Bxd,KAAK+hC,UAAUlgC,KAAK2b,GAEjBA,CACX,CAMA6f,YAAYiJ,EAAWhJ,GACnBt9B,KAAKmiC,UAAUtgC,KAAK,CAAEykC,YAAWhJ,YACrC,CAQA/4B,KAAK0B,EAAMrE,EAAOq5B,EAAU,GAAIyG,GAAW,GACvC,MAAMj0B,EAAU+zB,KAGhB,OAFA/zB,EAAQwtB,QAAUA,EAClBxtB,EAAQi0B,SAAWA,EACZ1hC,KAAK++B,QAAQ94B,EAAMrE,EAAO6L,EACrC,CAQAs5B,IAAI9gC,EAAMrE,EAAQ,aAAcq5B,EAAU,IACtC,MAAMxtB,EAAU+zB,KAEhB,OADA/zB,EAAQwtB,QAAUA,EACXj7B,KAAK++B,QAAQ94B,EAAMrE,EAAO6L,EACrC,CAOAu5B,kBAAkB/gC,EAAMkhB,EAAUnhB,EAAM,MACxB,OAARA,IACAA,EAAM,IAAI,MAEd,MAAMmB,EAAMnH,KAAK4e,MAAM3Y,EAAMkhB,GAC7B,OAAOnnB,KAAKwmC,aAAar/B,EAAKnB,GAAKqN,UACvC,CAMA5M,UAAUC,EAAIugC,GAAa,GAEvB,MAAMxuB,EAAOzY,KAAK6C,WAAW,QACXhD,IAAd4Y,EAAK7Q,OACL6Q,EAAK7Q,KAAO,CAAC,GAGjB,IAAK,MAAMxB,KAAOM,EAAI,CAClB,MAAM3D,EAAI2D,EAAGN,GAKb,GAJApG,KAAK6mB,SAASzgB,GAAOrD,EACjBkkC,IACAjnC,KAAKiiC,eAAe77B,GAAOtB,KAAK8Z,MAAM9Z,KAAKC,UAAUhC,KAE1C,SAAXA,EAAE7C,KACFuY,EAAKrS,GAAOrD,EAAEuD,OAEb,IAAe,UAAXvD,EAAE7C,MAA+B,QAAX6C,EAAE7C,KAQ7B,MADA6b,QAAQhb,MAAM,eAAgBgC,GACxB,IAAIzD,MAAM,iBAPhBmZ,EAAKrS,GAAOrD,EAAE+C,MACd2S,EAAK7Q,KAAKxB,GAAO,CACbhD,SAAsB,UAAXL,EAAE7C,KAMrB,CAEY,QAARkG,GAAyC,MAAxBA,EAAI4T,UAAU,EAAG,IAGtCha,KAAKkiC,YAAYv6B,IAAIvB,EACzB,CACJ,CAOAO,gBAAgBE,EAASH,EAAIugC,GAAa,GAItC,GAHAjnC,KAAKiP,SAASpI,GAAWH,EACzB1G,KAAKyiB,YAAY5b,GAAW,IAED,iBAAfH,EAAG,OAAsB,CACjC,MAAMmS,EAAMnS,EAAG,cACRA,EAAG,OAEVA,EADgB,IAAIG,SACNgS,CAClB,CAEA,GAAInS,EAAGkB,MAAQlB,EAAGkB,KAAK9B,OAA8B,iBAAbY,EAAO,KAAgB,CAC3D,MAAMkB,EAAOlB,EAAGkB,YACTlB,EAAGkB,KAGVlB,EADgB,KADGkB,EAAK9B,MAAMqS,YAActR,IACV9G,QAAQ,IAAK,OACjC6H,CAClB,CACA5H,KAAKyG,UAAUC,EAAIugC,EACvB,CAQArgC,cAAcC,EAASqgC,EAAOxgC,EAAIugC,GAAa,GAEvCpgC,EAAQtB,QAAQ,OAAS,IACzBsB,EAAUA,EAAQ9G,QAAQ,MAAO,MAErCC,KAAK2G,gBAAgBE,EAASH,EAAIugC,QACApnC,IAA9BG,KAAKyiB,YAAY5b,KACjB7G,KAAKyiB,YAAY5b,GAAWqgC,EAEpC,CASAngC,QAAQX,EAAKY,EAAMV,EAAI6gC,GAAa,EAAM5gC,GAAU,GAChDvG,KAAK6mB,SAASzgB,GAAO,CAAEY,OAAMV,KAAIpG,KAAM,OAAQkP,YAAa+3B,EAAY5gC,UAASoJ,MAAM,GACvF3P,KAAKiiC,eAAe77B,GAAOm7B,GAAYvhC,KAAK6mB,SAASzgB,IACrDpG,KAAK6C,WAAW,GAAGuD,GAAOE,CAC9B,CAIA8gC,QAAQhhC,EAAKY,EAAMV,EAAI6gC,GAAa,EAAM5gC,GAAU,GAChDvG,KAAK+G,QAAQX,EAAKY,EAAMV,EAAI6gC,EAAY5gC,EAC5C,CAMAU,QAAQb,GACJ,OAAOpG,KAAK6mB,SAASzgB,EACzB,CAIAwgC,OAAO3gC,EAAMkhB,EAAUxY,EAAMssB,EAAU,GAAI6D,GAMvC,OAJAnwB,EAAKssB,QAAUA,EACX6D,IACAnwB,EAAKmwB,WAAaA,GAEf9+B,KAAK++B,QAAQ94B,EAAMkhB,EAAUxY,EACxC,CAQAiO,MAAM3W,EAAMrE,EAAO+M,EAAMssB,EAAU,IAC/B,OAAOj7B,KAAK4mC,OAAO3gC,EAAMrE,EAAO+M,EAAMssB,EAC1C,CAOAze,eAAevW,EAAMrE,EAAQ,aAAcq5B,EAAU,IACjD,MAAMtsB,EAAO6yB,GAAmB,CAAExkB,UAAU,EAAMH,UAAU,IAC5D,OAAO7c,KAAK4mC,OAAO3gC,EAAMrE,EAAO+M,EAAMssB,EAC1C,EC74BJ,ICDA,IAEI,SAAU,CACN/6B,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,MACnB2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,OAAOA,EAAIiB,OAAO,aAAc,CAAC0J,EAAK3K,GAC1C,GAEJ,SAAU,CACNrY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,MACd2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,OAAOA,EAAIiB,OAAO,aAAc,CAAC0J,EAAK3K,GAC1C,GAEJ,UAAW,CACPrY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,MACrB2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAUpa,EAAK3K,GACzBA,EAAIiB,OAAO,UAAW,CAAC8jB,EAAUpa,EAAK3K,GAC1C,EACAnJ,aAAa,GAEjB,SAAU,CACNlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,MACnB2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,OAAOA,EAAIiB,OAAO,aAAc,CAAC0J,EAAK3K,GAC1C,GAEJ,UAAW,CACPrY,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,MAC1B2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAUpa,EAAK3K,GACzB,IAAI9K,EAAU8K,EAAIE,KAAK,aACP,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAExBC,MAAMpkB,EAAKzV,GAASiV,MAAKjY,GAEF,MAAfA,EAAI88B,OACGhvB,EAAIE,KAAK,gBAAgBhO,EAAI88B,QAEjC98B,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjButB,EAASvtB,EAAMwI,EAAI,IACpBsK,OAAMnC,IACLnI,EAAIE,KAAK,gBAAgBiI,EAAI,GAErC,EACAtR,aAAa,GAEjB,YAAa,CAAElP,KAAM,QAAS4F,MAAO,IACrC,cAAe,CACX5F,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAUkhC,EAAQjvB,GAClBA,EAAIE,KAAK,aAAe+uB,CAC5B,EACAp4B,aAAa,GAEjB,kBAAmB,CACflP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUmT,EAAQlB,GAClB,MACM9K,EAAU,CACZ45B,OAAQ,OACRI,QAAS,CACL,eAAgB,qCAEpB35B,KANayK,EAAIiB,OAAO,YAAa,CAACC,EAAQlB,KAQlDA,EAAIE,KAAK,aAAehL,CAC5B,EACA2B,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU/kB,GACpBA,EAAIE,KAAK,gBAAkB6kB,CAC/B,GAEJ,aAAc,CACVp9B,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,MACd2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,IAAI9K,EAAU8K,EAAIE,KAAK,aACP,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAExB,MAAM58B,QAAY68B,MAAMpkB,EAAKzV,GAE7B,aADkBhD,EAAIsF,MAE1B,EACAX,aAAa,GAEjB,cAAe,CACXlP,KAAM,OACN8G,KAAM,CAAC,CAAC,OACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,IAAI9K,EAAU8K,EAAIE,KAAK,aACP,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAExB,MAAM58B,QAAY68B,MAAMpkB,EAAKzV,GAE7B,aADkBhD,EAAIi9B,MAE1B,EACAt4B,aAAa,GAEjB,aAAc,CACVlP,KAAM,OACN8G,KAAM,CAAC,CAAC,OACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgB0G,EAAK3K,GACrB,IAAI9K,EAAU8K,EAAIE,KAAK,aACP,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAExB,MAAM58B,QAAY68B,MAAMpkB,EAAKzV,GAE7B,aADkBhD,EAAIk9B,MAE1B,EACAv4B,aAAa,GAGjB,SAAU,CACNlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,MAC1B2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAUpa,EAAK3K,GACzBA,EAAIiB,OAAO,UAAW,CAAC8jB,EAAUpa,EAAK3K,GAC1C,EACAnJ,aAAa,GAEjB,UAAW,CACPlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,KAAM,CAAC,MACjC2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAUpa,EAAKzJ,EAAQlB,GACjC,MAAMqvB,EAAWrvB,EAAIiB,OAAO,YAAa,CAACC,EAAQlB,IAQlD+uB,MAAMpkB,EAPU,CACZmkB,OAAQ,OACRI,QAAS,CACL,eAAgB,qCAEpB35B,KAAM85B,IAEUllB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjButB,EAASvtB,EAAK,IACf8S,OAAMnC,IACLnI,EAAIE,KAAK,gBAAgBiI,EAAI,GAErC,GAEJ,cAAe,CACXxgB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,KAAM,CAAC,MACjC2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAUpa,EAAKzJ,EAAQlB,GACjC,MAAMsvB,EAAK,IAAIC,SACf,IAAK,MAAM1hC,KAAOqT,EACdouB,EAAGE,IAAI3hC,EAAKqT,EAAOrT,IAMvBkhC,MAAMpkB,EAJU,CACZmkB,OAAQ,OACRv5B,KAAM+5B,IAEUnlB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjButB,EAASvtB,EAAK,IACf8S,OAAMnC,IACLnI,EAAIE,KAAK,gBAAgBiI,EAAI,GAErC,GAEJ,YAAa,CACTxgB,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAUmT,EAAQlB,GAClB,MAAMyvB,EAAQ,GACd,IAAK,MAAM5hC,KAAOqT,EAAQ,CACtB,MAAM1W,EAAI0W,EAAOrT,GACX+c,EAAKH,mBAAmB5c,GAAO,IAAM4c,mBAAmBjgB,GAC9DilC,EAAMnmC,KAAKshB,EACf,CACA,OAAO6kB,EAAMj8B,KAAK,IACtB,GAEJ,SAAU,CACN7L,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,OAAO,IAAI8H,SAAQ,CAACC,EAASC,KACzB,MAAMqnB,EAAWrvB,EAAIiB,OAAO,YAAa,CAACC,EAAQlB,IAQlD+uB,MAAMpkB,EAPU,CACZmkB,OAAQ,OACRI,QAAS,CACL,eAAgB,qCAEpB35B,KAAM85B,IAEUllB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJuQ,EAAQvQ,EAAK,IACd8S,OAAMnC,IACLH,EAAOG,EAAIxf,QAAQ,GACrB,GAEV,GAEJ,aAAc,CACVhB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNpJ,SAAS,EACTD,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,OAAO,IAAI8H,SAAQ,CAACC,EAASC,KACzB,MAAMsnB,EAAK,IAAIC,SACf,IAAK,MAAM1hC,KAAOqT,EACdouB,EAAGE,IAAI3hC,EAAKqT,EAAOrT,IAMvBkhC,MAAMpkB,EAJU,CACZmkB,OAAQ,OACRv5B,KAAM+5B,IAEUnlB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJuQ,EAAQvQ,EAAK,IACd8S,OAAMnC,IACLH,EAAOG,EAAIxf,QAAQ,GACrB,GAEV,GAGJ,WAAY,CACRhB,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,MACnB2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAK3K,GACf,IAAI9K,EAAU8K,EAAIE,KAAK,aAIvB,MAHgB,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAEjBC,MAAMpkB,EAAKzV,EACtB,EACA2B,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,MACnB2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAK3K,GACf,OAAOA,EAAIiB,OAAO,WAAY,CAAC0J,EAAK3K,GACxC,EACAnJ,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,MAAMqvB,EAAWrvB,EAAIiB,OAAO,YAAa,CAACC,EAAQlB,IAQlD,OAAO+uB,MAAMpkB,EAPG,CACZmkB,OAAQ,OACRI,QAAS,CACL,eAAgB,qCAEpB35B,KAAM85B,GAGd,EACAx4B,aAAa,GAEjB,eAAgB,CACZlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,MAAMsvB,EAAK,IAAIC,SACf,IAAK,MAAM1hC,KAAOqT,EACdouB,EAAGE,IAAI3hC,EAAKqT,EAAOrT,IAMvB,OAAOkhC,MAAMpkB,EAJG,CACZmkB,OAAQ,OACRv5B,KAAM+5B,GAGd,EACAz4B,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MAAO,CAAC,MAChB2I,MAAM,EACNrJ,GAAI,SAAUmE,EAAKvK,EAAMqY,GAErB,MAAa,UADbrY,EAAOA,EAAKwU,WAAWuJ,gBACS,SAAT/d,EACZuK,EAAIsF,OAEG,SAAT7P,EACEuK,EAAIi9B,OAEG,SAATxnC,EACEuK,EAAIk9B,OAEG,UAATznC,GAA6B,OAATA,EAClBuK,EAAIw9B,cAEG,SAAT/nC,GAA4B,OAATA,EACjBuK,EAAIqD,KAERrD,EAAIqD,MACf,EACAsB,aAAa,GAGjB,SAAU,CACNlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrB2I,MAAM,EACNrJ,GAAI,SAAU23B,EAAMxwB,GAIhB,OAHMwwB,aAAgBz2B,QAClBy2B,EAAO,CAACA,IAEL,IAAIiK,KAAKjK,EAAMxwB,EAC1B,GAGJ,WAAY,CACRvN,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,MACnB2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAK3K,GACf,IAAKA,EAAI+H,QACL,MAAM,IAAIhhB,MAAM,qCAEpBiZ,EAAI4vB,eACJ,MAAM7nB,EAAU/H,EAAI+H,QACdC,EAAShI,EAAIgI,OACnB,IAAI9S,EAAU8K,EAAIE,KAAK,aACP,KAAZhL,IACAA,EAAU,CAAE45B,OAAQ,QAExBC,MAAMpkB,EAAKzV,GAASiV,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjBuQ,GAAS,IACVuC,OAAMnC,IACLH,EAAOG,EAAIxf,QAAQ,GAE3B,EACAkO,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,KAAM,MACnB2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAK3K,GACf,IAAKA,EAAI+H,QACL,MAAM,IAAIhhB,MAAM,qCAEpBiZ,EAAIiB,OAAO,WAAY,CAAC0J,EAAK3K,GACjC,EACAnJ,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,IAAKA,EAAI+H,QACL,MAAM,IAAIhhB,MAAM,mCAEpBiZ,EAAI4vB,eACJ,MAAM7nB,EAAU/H,EAAI+H,QACdC,EAAShI,EAAIgI,OACbqnB,EAAWrvB,EAAIiB,OAAO,YAAa,CAACC,EAAQlB,IAQlD+uB,MAAMpkB,EAPU,CACZmkB,OAAQ,OACRI,QAAS,CACL,eAAgB,qCAEpB35B,KAAM85B,IAEUllB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjBuQ,EAAQvQ,EAAK,IACd8S,OAAMnC,IACLH,EAAOG,EAAIxf,QAAQ,GAE3B,EACAkO,aAAa,GAEjB,eAAgB,CACZlP,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1B2I,MAAM,EACNrJ,GAAI,SAAU4c,EAAKzJ,EAAQlB,GACvB,IAAKA,EAAI+H,QACL,MAAM,IAAIhhB,MAAM,yCAEpBiZ,EAAI4vB,eACJ,MAAM7nB,EAAU/H,EAAI+H,QACdC,EAAShI,EAAIgI,OACbsnB,EAAK,IAAIC,SACf,IAAK,MAAM1hC,KAAOqT,EACdouB,EAAGE,IAAI3hC,EAAKqT,EAAOrT,IAMvBkhC,MAAMpkB,EAJU,CACZmkB,OAAQ,OACRv5B,KAAM+5B,IAEUnlB,MAAKjY,GACdA,EAAIsF,SACZ2S,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjBuQ,EAAQvQ,EAAK,IACd8S,OAAMnC,IACLH,EAAOG,EAAIxf,QAAQ,GAE3B,EACAkO,aAAa,IClcrB,MAMMg5B,GAAwB,CAC1B,MAAO,CACHloC,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GAEU,oBAAT8vB,OACPA,KAAO,CAAC,GAEa,oBAAd7wB,YACPA,UAAY,CAAC,GAGjBe,EAAIE,KAAK,gBAAmBiI,IAAU3E,QAAQC,IAAI0E,EAAI,EAEtDnI,EAAIE,KAAK6vB,KAAOD,KAChB9vB,EAAIE,KAAK8vB,UAAY/wB,SACzB,IAxBa,CFLrB,CAEI,KAAM,CAAEtX,KAAM,QAAS4F,MAAO,QAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,WAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,QAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,QAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,OAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,UAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,SAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,SAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,UAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,QAC9B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,QAC9B,MAAO,CAAE5F,KAAM,QAAS4F,MAAO,QAC/B,KAAM,CAAE5F,KAAM,QAAS4F,MAAO,UAC9B,MAAO,CAAE5F,KAAM,QAAS4F,MAAO,UAC/B,QAAS,CAAE5F,KAAM,QAAS4F,MAAO,SACjC,QAAS,CAAE5F,KAAM,QAAS4F,MAAO,SACjC,UAAW,CAAE5F,KAAM,QAAS4F,MAAO,aACnC,IAAO,CACH5F,KAAM,OACN8G,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,IAAK,MAC3B2I,MAAM,EACNrJ,GAAI,SAAU0I,EAAGwO,EAAGpV,GAChB,MAAM0R,EAAM/W,IACR,MAAM0a,EAAK,KAAO1a,EAAE2R,SAAS,IAC7B,OAAO+I,EAAG8I,OAAO9I,EAAGpY,OAAS,EAAG,EAAE,EAEtC,MAAO,IAAMyU,EAAG9K,GAAK8K,EAAG0D,GAAK1D,EAAG1R,EACpC,EACAgH,aAAa,GAEjB,KAAM,CACFlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUd,GACV,MAAMsU,EAAM/W,IACR,MAAM0a,EAAK,KAAO1a,EAAE2R,SAAS,IAC7B,OAAO+I,EAAG8I,OAAO9I,EAAGpY,OAAS,EAAG,EAAE,EAEtC,IAAKG,EACD,MAAM,IAAIlG,MAAM,uBAEpB,GAAIkG,EAAEH,OAAS,EACX,MAAM,IAAI/F,MAAM,oCAEpB,MAAO,IAAMwa,EAAGtU,EAAE,IAAMsU,EAAGtU,EAAE,IAAMsU,EAAGtU,EAAE,GAC5C,EACA4J,aAAa,IE1CjB,GCPJ,CAEI,SAAU,CACNlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUyJ,GACV,OAAO9E,OAAO8E,GACThQ,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,OACvB,GAGJ,YAAa,CACTG,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgBzM,GAEhB,GAAIyH,UAAUgxB,UAEV,kBADMhxB,UAAUgxB,UAAUC,UAAU14B,GAIxC,MAAMoP,EAAMupB,SAASC,cAAc,OAC7BC,EAAMF,SAASC,cAAc,OACnCC,EAAI5K,MAAM6K,iBAAmB,OAC7BD,EAAI5K,MAAM8K,WAAa,OACvB3pB,EAAI4pB,YAAYH,GAAKI,YAAcj5B,EAEnCoP,EAAI6e,MAAMxzB,SAAW,QACrB2U,EAAI5O,MAAQ,OACZm4B,SAAS56B,KAAKi7B,YAAY5pB,GAC1BupB,SAASO,eAAeC,kBAAkB/pB,GAC1CupB,SAASS,YAAY,QACrBT,SAAS56B,KAAKs7B,YAAYjqB,EAC9B,EACA/P,aAAa,GAEjB,aAAc,CACVlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUD,EAAGkS,GAEb,IAAIf,UAAUgxB,UAWV,MAAM,IAAIlpC,MAAM,yBAVG,iBAAR,IACP+G,EAAIkS,EAAIe,WAAWjT,EAAG,eAEfmR,UAAUgxB,UAAUa,WAC5B3mB,MAAK3S,IACJwI,EAAIE,KAAK,MAAQ1I,EACjB1J,EAAEkS,EAAI,GAMlB,GAEJ,YAAa,CACTrY,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNpJ,SAAS,EACTD,GAAIkW,eAAgBjE,GAEhB,GAAIf,UAAUgxB,UAAW,CAErB,aADqBhxB,UAAUgxB,UAAUa,UAE7C,CAEI,MAAM,IAAI/pC,MAAM,wBAExB,IC5ER,CAEI,UAAW,CACPY,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU/kB,GACpBA,EAAIE,KAAK,aAAe6kB,CAC5B,EACAluB,aAAa,GAEjB,QAAS,CACLlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU/kB,GACpBA,EAAIE,KAAK,gBAAkB6kB,CAC/B,EACAluB,aAAa,GAEjB,WAAY,CACRlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAUg3B,EAAU/kB,GACpBA,EAAIE,KAAK,cAAgB6kB,CAC7B,EACAluB,aAAa,GAEjB,OAAQ,CACJlP,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,IAAK,MAClB2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACb,MAAM+wB,EAAK,IAAIC,UAAUv0B,GAsBzB,OArBAs0B,EAAGE,OAAS,KACR,MAAMC,EAASlxB,EAAIE,KAAK,aACpBgxB,GACAA,EAAOlxB,EACX,EAEJ+wB,EAAGI,QAAWhpB,IACV,MAAMipB,EAAUpxB,EAAIE,KAAK,cACrBkxB,GACAA,EAAQjpB,EAAKnI,GAEjBwD,QAAQC,IAAI,QAAS0E,EAAI,EAE7B4oB,EAAGM,UAAa19B,IACZqM,EAAIE,KAAK,MAAQvM,EAAE+xB,KACnB,MAAM4L,EAAQtxB,EAAIE,KAAK,gBACnBoxB,GACAA,EAAMtxB,EACV,EAEJA,EAAIE,KAAK,aAAe6wB,EACjBA,CACX,GAEJ,OAAQ,CACJppC,KAAM,OACN8G,KAAM,CAAC,CAAC,IAAK,MACb2I,MAAM,EACNrJ,GAAI,SAAU0O,EAAGuD,GACFA,EAAIE,KAAK,aACjBoD,KAAK7G,EACZ,GAEJ,OAAQ,CACJ9U,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACCA,EAAIE,KAAK,aACjBqxB,OACP,KF3CK15B,SAAS5K,IAClB,MAAM4C,EAAI,CAAC,EACXlF,OAAO0f,OAAOxa,EAAG5C,QACO,IAAb4C,EAAE,eACFA,EAAE,OAEblF,OAAO0f,OAAOwlB,GAAuBhgC,EAAE,IAE3C,UGmDA,OA3FqB,CACnB,MAAO,CACLlI,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACZA,EAAIE,KAAK6vB,KAAOD,MAAQ,CAAC,EACzB9vB,EAAIE,KAAK,OAAS4vB,MAAQ,CAAC,CAC7B,GAGF,SAAU,CAAEnoC,KAAM,QAAS4F,MAAO,IAClC,QAAS,CAAE5F,KAAM,QAAS4F,MAAO,IACjC,KAAQ,CAAE5F,KAAM,QAAS4F,MAAO,IAChC,MAAO,CAAE5F,KAAM,QAAS4F,MAAO,IAE/B,iBAAkB,CAChB5F,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU6I,EAAMoJ,GAClBpJ,EAAOoJ,EAAII,UAAUxJ,EAAM,MAC3BoJ,EAAI1V,WAAW,GAAG,uBAAyB,CAACo7B,EAAM/xB,KAChDqM,EAAIE,KAAK,SAAWwlB,EACpB1lB,EAAIE,KAAK,UAAYvM,EACdiD,EAAKjD,EAAGqM,GAEnB,EACAnJ,aAAa,GAEf,eAAgB,CACdlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU6I,EAAMoJ,GAClBpJ,EAAOoJ,EAAII,UAAUxJ,EAAM,MAC3Bk5B,KAAKuB,UAAa19B,IAChBqM,EAAIE,KAAK,SAAWvM,EAAE+xB,KACtB1lB,EAAIE,KAAK,UAAYvM,EACdiD,EAAKjD,EAAGqM,GAEnB,EACAnJ,aAAa,GAEf,gBAAiB,CACflP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU23B,EAAM1lB,GAKlBwxB,YAJY,CACV7pC,KAAM,OACN+9B,KAAMA,GAGV,EACA7uB,aAAa,GAEf,cAAe,CACblP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU7G,EAAK8Y,GACjBwxB,YAAYtqC,EACd,EACA2P,aAAa,GAEf,KAAM,CACJlP,KAAM,OACN8G,KAAM,CAAC,CAAC,MACR2I,MAAM,EACNrJ,GAAI,SAAU23B,EAAM1lB,GAKlBwxB,YAJY,CACV7pC,KAAM,SACN+9B,KAAMA,GAGV,EACA7uB,aAAa,GAEf,KAAM,CACJlP,KAAM,OACN8G,KAAM,GACN2I,MAAM,EACNrJ,GAAI,SAAUiS,GACZuxB,OACF,EACA16B,aAAa,ICjFjB,MAAM46B,WAA8BrI,GAClCpiC,cACEO,QACAE,KAAK6C,WAAW,GAAG,UAAY,UAC/B7C,KAAK6C,WAAW,GAAG,uBAAyB,CAACo7B,EAAMgM,KACjD,MAAM,IAAI3qC,MAAM,6BAA4B,CAEhD,EAKF,GAA2B,iBAAhB,WAA4B+oC,MAAQA,gBAAgB6B,kBAAmB,CAEhF,MAAMC,EAAgB3yB,UAAUC,MAAQ,IAAIuyB,GAE5C,IAAII,EAAcD,EAElBA,EAAcxjC,gBAAgB,wBAAyB,IACvDwjC,EAAcxjC,gBAAgB,eAAgB,IAE9CwjC,EAAcv/B,YAAYyyB,YAAY,SAAS,SAAU3gB,GACvD2rB,KAAK0B,YAAY,CACf7pC,KAAM,QACN+9B,KAAMvhB,GAEV,IAAG,GAEH2rB,KAAKuB,UAAaK,IAChB,MAAMhM,EAAOgM,EAAMhM,MAAQ,CAAE/9B,KAAM,GAAI+9B,KAAM,IACvC/9B,EAAO+9B,EAAK/9B,MAAQ,GACpB4F,EAAQm4B,EAAKA,MAAQ,GAC3B,OAAQ/9B,GACN,IAAK,QACHiqC,EAAc1f,QACd,MACF,IAAK,QACH4d,KAAKyB,QACL,MACF,IAAK,MACHM,EAAcA,EAAYxtB,MAAM9W,EAAO,mBAAoB,CAAE+W,UAAU,EAAOC,UAAU,IACxF,MACF,IAAK,QACHhX,EAAMsK,SAAQkG,IACG,SAAXA,EAAEpW,MACJiqC,EAAcnoC,aAAasU,EAAErW,MAAQqW,EAAEktB,QAAQ57B,KAC/CuiC,EAActjB,SAASvQ,EAAErW,MAAQqW,EAAEktB,QAAQr0B,KAC3Cg7B,EAActnC,WAAW,GAAGyT,EAAErW,MAAQ,QAClB,QAAXqW,EAAEpW,OACXiqC,EAActnC,WAAW,GAAGyT,EAAErW,MAAQqW,EAAEktB,QAC1C,IAEF,MACF,IAAK,OACC4G,EAAYvnC,WAAW,GAAG,wBAC5BunC,EAAYvnC,WAAW,GAAG,uBAAuB8W,MAAMywB,EAAa,CAACtkC,EAAOmkC,IAGlF,CAEJ,C","sources":["webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_gen_async.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_in_worker.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_worker.mjs","webpack://nadesiko3/./src/wnako3webworker.mjs"],"sourcesContent":["// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst coreVersion = {\n    version: '3.4.13',\n    major: 3,\n    minor: 4,\n    patch: 13\n};\nexport default coreVersion;\n","/**\n * なでしこ言語が投げる全てのエラーが継承するクラス\n */\nexport class NakoError extends Error {\n    constructor(tag, msg, file = undefined, line = undefined) {\n        // エラー位置を分かりやすく日本語に変換\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\n        // 親のErrorを呼ぶ\n        super(`[${tag}]${positionJa}${msg}`);\n        // エラーの種類を設定\n        this.name = 'NakoError';\n        this.type = 'NakoError';\n        this.tag = '[' + tag + ']';\n        this.positionJa = positionJa;\n        this.msg = msg;\n    }\n}\nexport class NakoIndentError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} line\n     * @param {string} file\n     */\n    constructor(msg, line, file) {\n        super('インデントエラー', msg, file, line);\n        this.type = 'NakoIndentError';\n        this.line = line;\n        this.file = file;\n    }\n}\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\nexport class InternalLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} preprocessedCodeStartOffset\n     * @param {number} preprocessedCodeEndOffset\n     * @param {number | undefined} [line]\n     * @param {string | undefined} [file]\n     */\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\n        super('字句解析エラー（内部エラー）', msg, file, line);\n        this.type = 'InternalLexerError';\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | null} startOffset\n     * @param {number | null} endOffset,\n     * @param {number | undefined} line\n     * @param {string | undefined} file\n     */\n    constructor(msg, startOffset, endOffset, line, file) {\n        super('字句解析エラー', msg, file, line);\n        this.type = 'NakoLexerError';\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoSyntaxError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | undefined} line\n     * @param {number | undefined} startOffset\n     * @param {number | undefined} endOffset\n     * @param {string | undefined} file\n     */\n    constructor(msg, line, startOffset, endOffset, file) {\n        super('文法エラー', msg, file, line);\n        this.type = 'NakoSyntaxError';\n        this.file = file;\n        this.line = line;\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n    }\n    /**\n     * @param {string} msg\n     * @param {Ast} first\n     * @param {Ast} [last]\n     */\n    static fromNode(msg, first, last = undefined) {\n        if (!first) {\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\n        }\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\n        const endOffset = (last && typeof last.endOffset === 'number')\n            ? last.endOffset\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\n    }\n}\nexport class NakoRuntimeError extends NakoError {\n    /**\n     * @param error エラー\n     * @param lineNo 発生行\n     */\n    constructor(error, lineNo) {\n        let msg = 'unknown';\n        if (typeof error === 'string') {\n            msg = error;\n        }\n        else {\n            if (error instanceof NakoRuntimeError) {\n                msg = error.msg;\n            }\n            else if (error instanceof NakoError) {\n                msg = error.msg;\n            }\n            else if (error instanceof Error) {\n                if (error.name === 'Error') {\n                    msg = error.message;\n                }\n                else {\n                    msg = `${error.name}: ${error.message}`;\n                }\n            }\n        }\n        // 行番号を表す文字列をパースする。\n        let line;\n        let file;\n        let matches;\n        if (lineNo === undefined) {\n            line = undefined;\n            file = undefined;\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = matches[2];\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = 'main.nako3';\n        }\n        else {\n            line = 0;\n            file = lineNo;\n        }\n        super('実行時エラー', msg, file, line);\n        this.type = 'NakoRuntimeError';\n        this.lineNo = lineNo;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoImportError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     */\n    constructor(msg, file, line) {\n        super('取り込みエラー', msg, file, line);\n        this.file = file;\n        this.line = line;\n    }\n}\n","/**\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお速度優先で忠実にJavaScriptのコードを生成する。\n */\nimport { NakoSyntaxError } from './nako_errors.mjs';\n// なでしこで定義した関数の開始コードと終了コード\nconst topOfFunction = '(function(){\\n';\nconst endOfFunction = '})';\nconst topOfFunctionAsync = '(async function(){\\n';\n/** コード生成オプション */\nexport class NakoGenOptions {\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\n        this.isTest = isTest;\n        this.codeStandalone = codeStandalone;\n        this.codeEnv = convEnv;\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\n        for (const fname of importFiles) {\n            this.importFiles.push(fname);\n        }\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGen {\n    /** constructor\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         */\n        this.nakoTestFuncs = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         */\n        this.loopId = 1;\n        /**\n         * 非同関数を何回使ったか\n         */\n        this.numAsyncFn = 0;\n        /**\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\n         */\n        this.usedAsyncFn = false;\n        /** 変換中の処理が、ループの中かどうかを判定する */\n        this.flagLoop = false;\n        this.__self = com;\n        /** コードジェネレータの種類 */\n        this.genMode = 'sync';\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\n        this.lastLineNo = null;\n        /** スタック */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /** スタックトップ */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0,\n            mumeiId: 0\n        };\n        /**\n         * 未定義の変数の警告を行う\n         */\n        this.warnUndefinedVar = true;\n        this.constPools = [];\n        // 暫定変数\n        this.warnUndefinedReturnUserFunc = 1;\n        this.warnUndefinedCallingUserFunc = 1;\n        this.warnUndefinedCallingSystemFunc = 1;\n        this.warnUndefinedCalledUserFuncArgs = 1;\n        this.debugOption = com.debugOption;\n    }\n    static isValidIdentifier(name) {\n        // TODO: いらなそうな部分は削る\n        // https://stackoverflow.com/a/9337047\n        // eslint-disable-next-line no-misleading-character-class\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\n    }\n    /**\n     * 改行を埋め込む\n     */\n    convLineno(node, forceUpdate = false, incLine = 0) {\n        // スピードモードでは行番号を埋め込まない\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        const lineNo = node.line + incLine;\n        let lineNoStr;\n        if (typeof node.line !== 'number') {\n            lineNoStr = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNoStr = `l${lineNo}`;\n        }\n        else {\n            lineNoStr = `l${lineNo}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNoStr === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNoStr;\n        }\n        // 実行行のデータ\n        const lineDataJSON = JSON.stringify(lineNoStr);\n        // デバッグ実行か\n        let debugCode = '';\n        if (this.debugOption.useDebug) {\n            // messageAction\n            if (this.debugOption.messageAction) {\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\n                    `line: ${lineDataJSON}});`;\n            }\n            // waitTime\n            if (lineNo >= 1) {\n                if (this.debugOption.waitTime > 0) {\n                    debugCode += `await __v0['秒待'](${this.debugOption.waitTime},__self);`;\n                }\n                // breakpoints\n                this.numAsyncFn += 1;\n                this.usedAsyncFn = true;\n                debugCode += `await __v0['__DEBUG_BP_WAIT'](${lineNo}, __self);`;\n            }\n            // end\n            debugCode += 'if(__v0.forceClose){return-1};';\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${lineDataJSON};` + debugCode;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * @param {string} name\n     */\n    varname(name) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__varslist[${2}][${JSON.stringify(name)}]`;\n        }\n        else {\n            // 関数内\n            if (NakoGen.isValidIdentifier(name)) {\n                return name;\n            }\n            else {\n                return `__vars[${JSON.stringify(name)}]`;\n            }\n        }\n    }\n    /**\n     * @param {string} name\n     * @returns {string}\n    */\n    static getFuncName(name) {\n        if (name.indexOf('__') >= 0) { // スコープがある場合\n            const a = name.split('__');\n            const scope = a[0];\n            const name3 = NakoGen.getFuncName(a[1]);\n            return `${scope}__${name3}`;\n        }\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\n        if (name2 === '') {\n            name2 = name;\n        }\n        return name2;\n    }\n    /** @param {Ast} node */\n    static convPrint(node) {\n        return `__print(${node});`;\n    }\n    /** @param {Ast} node */\n    convRequire(node) {\n        const moduleName = node.value;\n        return this.convLineno(node, false) +\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param com\n     * @param opt\n     */\n    getDefFuncCode(com, opt) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\n        code += 'const __self = self;\\n';\n        code += 'self.__self = self;\\n';\n        code += 'const __varslist = self.__varslist;\\n';\n        code += 'const __module = self.__module;\\n';\n        code += 'const __v0 = self.__v0 = self.__varslist[0];\\n';\n        code += 'const __v1 = self.__v1 = self.__varslist[1];\\n';\n        code += 'const __vars = self.__vars = self.__varslist[2];\\n';\n        code += `const __modList = self.__modList = ${JSON.stringify(com.getModList())}\\n`;\n        code += '__v0.line = 0;\\n';\n        code += '__v0.forceClose = false;\\n';\n        code += `__v0.useDebug = ${this.debugOption.useDebug};\\n`;\n        // 定数を埋め込む\n        code += 'self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            const isAsync = this.nakoFuncList[key].asyncFn ? 'true' : 'false';\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\n                `self.__varslist[1][\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // テストの定義を行う\n        if (opt.isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestFuncs) {\n                const f = this.nakoTestFuncs[key].fn;\n                testCode += `${f};\\n;`;\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        /** 関数一覧 */\n        const funcList = [];\n        // なでしこ関数を定義して this.nako_func[name] に定義する\n        const registFunc = (node) => {\n            if (!node.block) {\n                return;\n            }\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\n            for (let i = 0; i < blockList.length; i++) {\n                const t = blockList[i];\n                if (t.type === 'def_func') {\n                    if (!t.name) {\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\n                    }\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.varslistSet[1].names.add(name); // global\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\n                    this.nakoFuncList[name] = {\n                        josi: meta.josi,\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        fn: () => { },\n                        type: 'func',\n                        asyncFn: t.asyncFn\n                    };\n                    funcList.push({ name, node: t });\n                    // eslint-disable-next-line brace-style\n                }\n                // 実行速度優先 などのオプションが付いている場合の処理\n                else if (t.type === 'speed_mode') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        // 関数の登録\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param node\n     * @param opt\n     */\n    convGen(node, opt) {\n        const result = this.convLineno(node, false) + this._convGen(node, true);\n        if (opt.isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        if (!node) {\n            return '';\n        }\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            case 'nop':\n                break;\n            case 'block':\n                if (!node.block) {\n                    return code;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\n                for (let i = 0; i < blocks.length; i++) {\n                    const b = blocks[i];\n                    code += this._convGen(b, false);\n                }\n                break;\n            case 'comment':\n            case 'eol':\n                code += this.convComment(node);\n                break;\n            case 'break':\n                code += this.convCheckLoop(node, 'break');\n                break;\n            case 'continue':\n                code += this.convCheckLoop(node, 'continue');\n                break;\n            case 'end':\n                code += '__v0[\\'終\\'](__self);';\n                break;\n            case 'number':\n                code += node.value;\n                break;\n            case 'string':\n                code += this.convString(node);\n                break;\n            case 'def_local_var':\n                code += this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.convDefLocalVarlist(node);\n                break;\n            case 'let':\n                code += this.convLet(node);\n                break;\n            case 'inc':\n                code += this.convInc(node);\n                break;\n            case 'word':\n            case 'variable':\n                code += this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                code += this.convOp(node);\n                break;\n            case 'renbun':\n                code += this.convRenbun(node);\n                break;\n            case 'not':\n                code += '((' + this._convGen(node.value, true) + ')?0:1)';\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                code += this.convCallFunc(node, isExpression);\n                break;\n            case 'if':\n                code += this.convIf(node);\n                break;\n            case 'tikuji':\n                code += this.convTikuji(node);\n                break;\n            case 'for':\n                code += this.convFor(node);\n                break;\n            case 'foreach':\n                code += this.convForeach(node);\n                break;\n            case 'repeat_times':\n                code += this.convRepeatTimes(node);\n                break;\n            case 'speed_mode':\n                code += this.convSpeedMode(node, isExpression);\n                break;\n            case 'performance_monitor':\n                code += this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'while':\n                code += this.convWhile(node);\n                break;\n            case 'atohantei':\n                code += this.convAtohantei(node);\n                break;\n            case 'switch':\n                code += this.convSwitch(node);\n                break;\n            case 'let_array':\n                code += this.convLetArray(node);\n                break;\n            case '配列参照':\n                code += this.convRefArray(node);\n                break;\n            case 'json_array':\n                code += this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                code += this.convJsonObj(node);\n                break;\n            case 'func_obj':\n                code += this.convFuncObj(node);\n                break;\n            case 'bool':\n                code += (node.value) ? 'true' : 'false';\n                break;\n            case 'null':\n                code += 'null';\n                break;\n            case 'def_test':\n                code += this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.convDefFunc(node);\n                break;\n            case 'return':\n                code += this.convReturn(node);\n                break;\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    /** 変数を検索 */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: this.varname(name) };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\n                // それ以外の変数は、必ず__varslistに入っている。\n                return { i, name, isTop: false, js: `__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                if (this.warnUndefinedVar) {\n                    // main__は省略して表示するように。 #1223\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\n                }\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getNakoFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi || pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        return this.genVar(name, node);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        const lno = this.convLineno(node, false);\n        let value;\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        else if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        else {\n            return lno + 'return;';\n        }\n        if (this.warnUndefinedReturnUserFunc === 0) {\n            return lno + `return ${value};`;\n        }\n        else {\n            const poolIndex = this.constPools.length;\n            this.constPools.push({\n                msg: 'ユーザ関数からundefinedが返されています',\n                file: node.file,\n                line: node.line\n            });\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\n        }\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        return this.convLineno(node) + cmd + ';';\n    }\n    convDefFuncCommon(node, name) {\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\n        let performanceMonitorInjectAtStart = '';\n        let performanceMonitorInjectAtEnd = '';\n        if (this.performanceMonitor.userFunction !== 0) {\n            let key = name;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\n                'const uf_start = performance.now() * 1000;\\n' +\n                'return function () {\\n' +\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\n                `}};})('${key}', 'user');` +\n                'try {\\n';\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\n        }\n        let variableDeclarations = '';\n        const popStack = '';\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        variableDeclarations += '  var 引数 = arguments;\\n';\n        // ローカル変数を生成\n        variableDeclarations += '  var __vars = {};\\n';\n        // 宣言済みの名前を保存\n        const varsDeclared = Array.from(this.varsSet.names.values());\n        let code = '';\n        // 引数をローカル変数に設定\n        const meta = (!name) ? node.meta : node.name.meta;\n        for (let i = 0; i < meta.varnames.length; i++) {\n            const word = meta.varnames[i];\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\n                code += `  ${this.varname(word)} = arguments[${i}];\\n`;\n            }\n            else if (name) {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('ユーザ関数(${name})の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            else {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('匿名関数の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            this.varsSet.names.add(word);\n        }\n        // 関数定義は、グローバル領域で。\n        if (name) {\n            this.usedFuncSet.add(name);\n            this.varslistSet[1].names.add(name);\n            if (this.nakoFuncList[name] === undefined) {\n                // 既に generate で作成済みのはず(念のため)\n                this.nakoFuncList[name] = {\n                    josi: node.name.meta.josi,\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    fn: () => { },\n                    type: 'func',\n                    asyncFn: false\n                };\n            }\n        }\n        // ブロックを解析\n        const oldUsedAsyncFn = this.usedAsyncFn;\n        this.usedAsyncFn = false || this.debugOption.useDebug;\n        const block = this._convGen(node.block, false);\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\n        // 関数の最後に、変数「それ」をreturnするようにする\n        if (this.speedMode.invalidSore === 0) {\n            code += `  return (${this.varname('それ')});\\n`;\n        }\n        // パフォーマンスモニタ:ユーザ関数のinject\n        code += performanceMonitorInjectAtEnd;\n        // ブロックでasyncFnを使ったか\n        if (name && this.usedAsyncFn) {\n            this.nakoFuncList[name].asyncFn = true;\n        }\n        // 関数の末尾に、ローカル変数をPOP\n        // 関数内で定義されたローカル変数の宣言\n        for (const name of Array.from(this.varsSet.names.values())) {\n            if (!varsDeclared.includes(name)) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    variableDeclarations += `  var ${name};\\n`;\n                }\n            }\n        }\n        if (this.speedMode.invalidSore === 0) {\n            if (NakoGen.isValidIdentifier('それ')) {\n                variableDeclarations += '  var それ = \\'\\';\\n';\n            }\n            else {\n                variableDeclarations += `  ${this.varname('それ')} = '';`;\n            }\n        }\n        // usedAsyncFnの値に応じて関数定義の方法を変更\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\n        // 関数コード全体を構築\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\n        code = tof + performanceMonitorInjectAtStart + variableDeclarations + lineInfo + code + popStack;\n        code += endOfFunction;\n        // 名前があれば、関数を登録する\n        if (name) {\n            this.nakoFuncList[name].fn = code;\n            this.nakoFuncList[name].asyncFn = this.usedAsyncFn;\n            meta.asyncFn = this.usedAsyncFn;\n        }\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        if (name) {\n            this.__self.__varslist[1][name] = code;\n        }\n        return code;\n    }\n    convDefTest(node) {\n        const name = node.name.value;\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\n        // ブロックを解析\n        const block = this._convGen(node.block, false);\n        code += `   ${block}\\n` +\n            '}});';\n        this.nakoTestFuncs[name] = {\n            josi: node.name.meta.josi,\n            fn: code,\n            type: 'test_func'\n        };\n        // ★この時点ではテストコードを生成しない★\n        // プログラム冒頭でコード生成時にテストの定義を行う\n        return '';\n    }\n    convDefFunc(node) {\n        // ※ [関数定義のメモ]\n        // ※ 関数の定義はプログラムの冒頭に移される。\n        // ※ そのため、生成されたコードはここでは返さない\n        // ※ registerFunction を参照\n        if (!node.name) {\n            return '';\n        }\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            const key = this._convGen(e.key, true);\n            const val = this._convGen(e.value, true);\n            return `${key}:${val}`;\n        });\n        return '{' + codelist.join(',') + '}';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            return this._convGen(e, true);\n        });\n        return '[' + codelist.join(',') + ']';\n    }\n    convRefArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index;\n        let code = name;\n        if (!list) {\n            return code;\n        }\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        return code;\n    }\n    convLetArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index || [];\n        let codeInit = '';\n        let code = name;\n        let codeArray = '';\n        // codeInit?\n        if (node.checkInit) {\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\n            codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${name} = ${arrayDefCode}; /*console.log('初期化:${name}')*/ };`;\n            for (let i = 0; i < list.length - 1; i++) {\n                const idx = this._convGen(list[i], true);\n                codeArray += `[${idx}]`;\n                codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; };`;\n                // codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; console.log('初期化:${i}:${name}${codeArray}',JSON.stringify(${name})) }; `\n            }\n            codeInit += '\\n';\n        }\n        // array\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        // value\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        code += ' = ' + value + ';\\n';\n        // generate code\n        const src = this.convLineno(node, false) + codeInit + code;\n        return src;\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value; // todo: Forの最初のパラメータが Token か Astか確認\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const idLoop = this.loopId++;\n        const varI = `$nako_i${idLoop}`;\n        // ループ条件を確認\n        const kara = this._convGen(node.from, true);\n        const made = this._convGen(node.to, true);\n        const flagDown = node.flagDown;\n        let inc = '1';\n        if (node.inc && node.inc !== 'null') {\n            inc = this._convGen(node.inc, true);\n        }\n        // ループ内のブロック内容を得る\n        const block = this.convGenLoop(node.block);\n        // ループ条件を変数に入れる用\n        const varFrom = `$nako_from${idLoop}`;\n        const varTo = `$nako_to${idLoop}`;\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `\\n//[FOR id=${idLoop}]\\n` +\n            `const ${varFrom} = ${kara};\\n` +\n            `const ${varTo} = ${made};\\n` +\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\n            `    ${sorePrefex}${word} = ${varI};\\n` +\n            `    ${block}\\n` +\n            '  };\\n' +\n            '} else { // down\\n' +\n            `  if (${flagDown}) {` +\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\n            `      ${sorePrefex}${word} = ${varI};` + '\\n' +\n            `      ${block}\\n` +\n            '    }\\n' +\n            '  };\\n' +\n            `};\\n//[/FOR id=${idLoop}]\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convForeach(node) {\n        let target;\n        if (node.target === null) {\n            if (this.speedMode.invalidSore === 0) {\n                target = this.varname('それ');\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n            }\n        }\n        else {\n            target = this._convGen(node.target, true);\n        }\n        // blockより早く変数を定義する必要がある\n        let nameS = '__v0[\"対象\"]';\n        if (node.name) {\n            nameS = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        const block = this.convGenLoop(node.block);\n        const id = this.loopId++;\n        const key = '__v0[\"対象キー\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_foreach_v${id}=${target};\\n` +\n            `for (let $nako_i${id} in $nako_foreach_v${id})` + '{\\n' +\n            `  if ($nako_foreach_v${id}.hasOwnProperty($nako_i${id})) {\\n` +\n            `    ${nameS} = ${sorePrefex}$nako_foreach_v${id}[$nako_i${id}];` + '\\n' +\n            `    ${key} = $nako_i${id};\\n` +\n            `    ${block}\\n` +\n            '  }\\n' +\n            '};\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convRepeatTimes(node) {\n        const id = this.loopId++;\n        const value = this._convGen(node.value, true);\n        const block = this.convGenLoop(node.block);\n        const kaisu = '__v0[\"回数\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_times_v${id} = ${value};\\n` +\n            `for(var $nako_i${id} = 1; $nako_i${id} <= $nako_times_v${id}; $nako_i${id}++)` + '{\\n' +\n            `  ${sorePrefex}${kaisu} = $nako_i${id};` + '\\n' +\n            '  ' + block + '\\n}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convSpeedMode(node, isExpression) {\n        if (!node.options) {\n            return '';\n        }\n        const prev = { ...this.speedMode };\n        if (node.options['行番号無し']) {\n            this.speedMode.lineNumbers++;\n        }\n        if (node.options['暗黙の型変換無し']) {\n            this.speedMode.implicitTypeCasting++;\n        }\n        if (node.options['強制ピュア']) {\n            this.speedMode.forcePure++;\n        }\n        if (node.options['それ無効']) {\n            this.speedMode.invalidSore++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.speedMode = prev;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (!node.options) {\n            return '';\n        }\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.performanceMonitor = prev;\n        }\n    }\n    convWhile(node) {\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = `while (${cond})` + '{\\n' +\n            `  ${block}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convAtohantei(node) {\n        const id = this.loopId++;\n        const varId = `$nako_i${id}`;\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = 'for(;;) {\\n' +\n            `  ${block}\\n` +\n            `  let ${varId} = ${cond};\\n` +\n            `  if (${varId}) { continue } else { break }\\n` +\n            '}\\n\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convSwitch(node) {\n        const value = this._convGen(node.value, true);\n        const cases = node.cases || [];\n        let body = '';\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            const cblock = this.convGenLoop(cases[i][1]);\n            if (cvalue.type === '違えば') {\n                body += '  default:\\n';\n            }\n            else {\n                const cvalueCode = this._convGen(cvalue, true);\n                body += `  case ${cvalueCode}:\\n`;\n            }\n            body += `    ${cblock}\\n` +\n                '    break\\n';\n        }\n        const code = `switch (${value})` + '{\\n' +\n            `${body}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convIf(node) {\n        const expr = this._convGen(node.expr, true);\n        const block = this._convGen(node.block, false);\n        const falseBlock = (node.false_block === null)\n            ? ''\n            : 'else {' + this._convGen(node.false_block, false) + '};\\n';\n        return this.convLineno(node, false) +\n            `if (${expr}) {\\n  ${block}\\n}` + falseBlock + ';\\n';\n    }\n    convTikuji(node) {\n        // #1164 により「逐次実行」構文は近いうちに廃止する\n        const pid = this.loopId++;\n        // gen tikuji blocks\n        const curName = `__tikuji${pid}`;\n        let code = `const ${curName} = []\\n`;\n        const blocks = (node.blocks) ? node.blocks : [];\n        for (let i = 0; i < blocks.length; i++) {\n            const block = this._convGen(blocks[i], false).replace(/\\s+$/, '') + '\\n';\n            const blockLineNo = this.convLineno(blocks[i], true);\n            const blockCode = `${curName}.push(async function(resolve, reject) {\\n` +\n                '  __self.resolve = resolve;\\n' +\n                '  __self.reject = reject;\\n' +\n                '  __self.resolveCount = 0;\\n' +\n                `  ${blockLineNo}\\n` +\n                `  ${block}` +\n                '  if (__self.resolveCount === 0) resolve();\\n' +\n                // eslint-disable-next-line no-template-curly-in-string\n                '}); // end of tikuji__${pid}[{$i}]\\n';\n            code += blockCode;\n        }\n        code += `// end of ${curName} \\n`;\n        // gen error block\n        let errorCode = `  ${curName}.splice(0);\\n` + // clear\n            '  __v0[\"エラーメッセージ\"]=errMsg;\\n';\n        if (node.errorBlock != null) {\n            const errBlock = this._convGen(node.errorBlock, false).replace(/\\s+$/, '') + '\\n';\n            errorCode += errBlock;\n        }\n        code += `const ${curName}__reject = function(errMsg){\\n${errorCode}};\\n`;\n        // gen run block\n        code += '__self.resolve = undefined;\\n';\n        code += `const ${curName}__resolve = function(){\\n`;\n        code += '  setTimeout(async function(){\\n';\n        code += `    if (${curName}.length == 0) {return}\\n`;\n        code += `    const f = ${curName}.shift()\\n`;\n        code += `    await f(${curName}__resolve, ${curName}__reject);\\n`;\n        code += '  }, 0);\\n';\n        code += '};\\n';\n        code += `${curName}__resolve()\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convFuncGetArgsCalcType(_funcName, _func, node) {\n        const args = [];\n        const opts = {};\n        const nodeArgs = (node.args) ? node.args : [];\n        for (let i = 0; i < nodeArgs.length; i++) {\n            const arg = nodeArgs[i];\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\n                args.push(this.varname('それ'));\n                opts.sore = true;\n            }\n            else {\n                args.push(this._convGen(arg, true));\n            }\n        }\n        return [args, opts];\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convCallFunc(node, isExpression) {\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        // どの関数を呼び出すのか関数を特定する\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (!func) {\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\n            }\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\n        const args = argsInfo[0];\n        const argsOpts = argsInfo[1];\n        // function\n        this.usedFuncSet.add(funcName);\n        if (funcName === '名前空間設定') {\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__varslist[0]['名前空間設定'](${args[0]}, __self);__self.__modName=${args[0]};\\n`;\n        }\n        else if (funcName === 'プラグイン名設定') {\n            return `\\n__varslist[0]['プラグイン名設定'](${args[0]}, __self);\\n`;\n        }\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\n        args.push('__self');\n        let funcDef = 'function';\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\n            // 展開されたローカル変数の列挙\n            const localVars = [];\n            for (const name of Array.from(this.varsSet.names.values())) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    localVars.push({ str: JSON.stringify(name), js: this.varname(name) });\n                }\n            }\n            // --- 実行前 ---\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\n            funcBegin += '__self.__locals = __vars;\\n';\n            // 全ての展開されたローカル変数を __self.__locals に保存する\n            for (const v of localVars) {\n                funcBegin += `__self.__locals[${v.str}] = ${v.js};\\n`;\n            }\n            // --- 実行後 ---\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\n            for (const v of localVars) {\n                if (v.js !== 'それ') {\n                    funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\n                }\n            }\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        const indent = (text, n) => {\n            let result = '';\n            for (const line of text.split('\\n')) {\n                if (line !== '') {\n                    result += '  '.repeat(n) + line + '\\n';\n                }\n            }\n            return result;\n        };\n        // 引数チェックの例外 #1260\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\n        // 関数呼び出しコードの構築\n        let argsCode;\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\n            argsCode = args.join(',');\n        }\n        else {\n            const argsA = [];\n            args.forEach((arg) => {\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\n                    argsA.push(`${arg}`);\n                }\n                else {\n                    // 引数のundefinedチェックのコードを入れる\n                    const poolIndex = this.constPools.length;\n                    if (res.i === 0) {\n                        this.constPools.push({\n                            msg: `命令『${funcName}』の引数にundefinedを渡しています。`,\n                            file: node.file,\n                            line: node.line\n                        });\n                    }\n                    else {\n                        this.constPools.push({\n                            msg: `ユーザ関数『『${funcName}』の引数にundefinedを渡しています。`,\n                            file: node.file,\n                            line: node.line\n                        });\n                    }\n                    // argが空になる対策 #1315\n                    const argStr = (arg === '') ? '\"\"' : arg;\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\n                }\n            });\n            argsCode = argsA.join(', ');\n        }\n        let funcCall = `${res.js}(${argsCode})`;\n        if (func.asyncFn) {\n            funcDef = `async ${funcDef}`;\n            funcCall = `await ${funcCall}`;\n            this.numAsyncFn++;\n            this.usedAsyncFn = true;\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\n            let key = funcName;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            funcCall = `(${funcDef} (key, type) {\\n` +\n                'const sbf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + funcCall + ';\\n' +\n                '} finally {\\n' +\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\n                `}}})('${funcName}_body', 'sysbody')\\n`;\n        }\n        let code = '';\n        if (func.return_none) {\n            // 戻り値のない関数の場合\n            if (funcEnd === '') {\n                if (funcBegin === '') {\n                    code = `${funcCall};\\n`;\n                }\n                else {\n                    code = `${funcBegin} ${funcCall};\\n`;\n                }\n            }\n            else {\n                code = `${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\n            }\n        }\n        else {\n            // 戻り値のある関数の場合\n            let sorePrefex = '';\n            if (this.speedMode.invalidSore === 0) {\n                sorePrefex = `${this.varname('それ')} = `;\n            }\n            if (funcBegin === '' && funcEnd === '') {\n                code = `(${sorePrefex}${funcCall})`;\n            }\n            else {\n                if (funcEnd === '') {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin};\\nreturn ${sorePrefex} ${funcCall}`, 1)}}).call(this)`;\n                }\n                else {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\n                }\n            }\n            // ...して\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\n                code += ';\\n';\n            }\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\n            code = '(function (key, type) {\\n' +\n                'const sf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + code + ';\\n' +\n                '} finally {\\n' +\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\n                `}}})('${funcName}_sys', 'system')\\n`;\n        }\n        return code;\n    }\n    convRenbun(node) {\n        const right = this._convGen(node.right, true);\n        const left = this._convGen(node.left, false);\n        this.numAsyncFn++;\n        this.usedAsyncFn = true;\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\n    }\n    convOp(node) {\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        let op = node.operator || ''; // 演算子\n        let right = this._convGen(node.right, true);\n        let left = this._convGen(node.left, true);\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\n            if (node.left && node.left.type !== 'number') {\n                left = `parseFloat(${left})`;\n            }\n            if (node.right && node.right.type !== 'number') {\n                right = `parseFloat(${right})`;\n            }\n        }\n        // 階乗\n        if (op === '^' || op === '**') {\n            return `(Math.pow(${left}, ${right}))`;\n        }\n        // 整数の割り算 #1152\n        if (op === '÷÷') {\n            return `(Math.floor(${left} / ${right}))`;\n        }\n        // 一般的なオペレータに変換\n        if (OP_TBL[op]) {\n            op = OP_TBL[op];\n        }\n        //\n        return `(${left} ${op} ${right})`;\n    }\n    convInc(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\n        }\n        // 配列への代入か(core#86)\n        let code = '';\n        let jsName;\n        const nodeName = node.name;\n        if (nodeName.type === '配列参照') {\n            jsName = this.convRefArray(nodeName);\n        }\n        else {\n            // 変数名\n            const name = nodeName.value;\n            let res = this.findVar(name);\n            if (res === null) {\n                this.varsSet.names.add(name);\n                res = this.findVar(name);\n                if (!res) {\n                    throw new Error('『増』または『減』で変数が見当たりません。');\n                }\n            }\n            jsName = res.js;\n        }\n        // 自動初期化するか\n        code += `if (typeof(${jsName}) === 'undefined') { ${jsName} = 0; }`;\n        code += `${jsName} += ${value}`;\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convLet(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        let code = '';\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)} = ${value};`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js} = ${value};`;\n        }\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convDefLocalVar(node) {\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        //\n        this.varsSet.names.add(name);\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        const code = `${this.varname(name)}=${value};\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        let code = '';\n        const vtype = node.vartype; // 変数 or 定数\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        this.loopId++;\n        const varI = `$nako_i${this.loopId}`;\n        code += `${varI}=${value}\\n`;\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\n        const names = (node.names) ? node.names : [];\n        for (let i = 0; i < names.length; i++) {\n            const nameObj = names[i];\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                // 複数変数文では、二重定義も許容する #1027\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\n            }\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            code += `${vname}=${varI}[${i}];\\n`;\n        }\n        return this.convLineno(node, false) + code;\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            const rf = (a, name) => {\n                return '\"+' + this.genVar(name, node) + '+\"';\n            };\n            value = value.replace(/\\{(.+?)\\}/g, rf);\n            value = value.replace(/｛(.+?)｝/g, rf);\n        }\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const block = this._convGen(node.block, false);\n        const errBlock = this._convGen(node.errBlock, false);\n        return this.convLineno(node, false) +\n            `try {\\n${block}\\n} catch (e) {\\n` +\n            '  __v0[\"エラーメッセージ\"] = e.message;\\n' +\n            ';\\n' +\n            `${errBlock}}\\n`;\n    }\n    getUsedFuncSet() {\n        return this.usedFuncSet;\n    }\n    getPluginInitCode() {\n        // プラグインの初期化関数を実行する\n        let code = '';\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'l0:プラグインの初期化\\';\\n' + pluginCode;\n        }\n        return code;\n    }\n}\n/**\n * @param com\n * @param ast\n * @param opt\n */\nexport function generateJS(com, ast, opt) {\n    // NakoGenのインスタンスを作成\n    const gen = new NakoGen(com);\n    // ※ [関数定義に関するコード生成のヒント]\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\n    // (1) ユーザー定義関数をシステムに登録する\n    gen.registerFunction(ast);\n    // (2) JSコードを生成する\n    let js = gen.convGen(ast, opt);\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\n    const jsInit = gen.getDefFuncCode(com, opt);\n    // ランダムな関数名を生成\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\n    // テストの実行\n    if (js && opt.isTest) {\n        js += '\\n__self._runTests(__tests);\\n';\n    }\n    // async method\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\nasync function ${asyncMain}(self) {\n${jsInit}\n${js}\n} // end of ${asyncMain}\n${asyncMain}.call(self, self)\n.then(() => {\n  // ok\n})\n.catch(err => {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  // send errors to logger\n  let rterr = self.logger.runtimeError(err, self.__v0.line)\n  self.logger.error(rterr)\n})\n// </nadesiko3::gen::async id=\"${funcID}\">\n// --------------------------------------------------\n`;\n    }\n    else {\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::syncMode>\nfunction ${syncMain}(self) {\ntry {\n  ${jsInit}\n  ${js}\n} catch (err) {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  throw self.logger.runtimeError(err, self.__v0.line)\n}\n} // end of ${syncMain}\n${syncMain}(self)\n// </nadesiko3::gen::syncMode>\n// --------------------------------------------------\n`;\n    }\n    // デバッグメッセージ\n    com.getLogger().trace('--- generate ---\\n' + js);\n    let codeImportFiles = '';\n    const importNames = [];\n    for (const f of opt.importFiles) {\n        if (f === 'nako_errors.mjs') {\n            continue;\n        }\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\n        importNames.push(ff);\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\n    }\n    const standaloneJSCode = `\\\n// <standaloneCode>\nimport path from 'path'\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\n${codeImportFiles}\nconst self = {}\nself.coreVersion = '${com.coreVersion}'\nself.version = '${com.version}'\nself.logger = {\n  error: (message) => { console.error(message) },\n  warn: (message) => { console.warn(message) },\n  send: (level, message) => { console.log(message) },\n};\nself.__varslist = [{}, {}, {}]\nself.__v0 = self.__varslist[0]\nself.initFuncList = []\nself.clearFuncList = []\n// Copy module functions\nfor (const mod of [${importNames.join(', ')}]) {\n  for (const funcName in mod) {\n    if (funcName === '初期化') {\n      self.initFuncList.push(mod[funcName].fn)\n      continue\n    }\n    if (funcName === '!クリア') {\n      self.clearFuncList.push(mod[funcName].fn)\n      continue\n    }\n    self.__varslist[0][funcName] = mod[funcName].fn\n  }\n}\nself.__vars = self.__varslist[2];\nself.__module = {};\nself.__locals = {};\nself.__genMode = 'sync';\n\n// プラグインの初期化コードを実行\nself.initFuncList.map(f => f(self))\n\ntry {\n${opt.codeStandalone}\n// <JS:standalone>\n${js}\n// </JS:standalone>\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\n  self.clearFuncList.map(f => f(self))\n} catch (err) {\n  self.logger.error(err);\n  throw err;\n}\n// </standaloneCode>\n`;\n    // ---\n    const initCode = gen.getPluginInitCode();\n    const runtimeEnvCode = `\n// <runtimeEnvCode>\nconst self = this\n${opt.codeEnv}\n${jsInit}\n${initCode}\n${js}\n// </runtimeEnvCode>\n`;\n    return {\n        // なでしこの実行環境ありの場合(thisが有効)\n        runtimeEnv: runtimeEnvCode,\n        // JavaScript単体で動かす場合\n        standalone: standaloneJSCode,\n        // コード生成に使ったNakoGenのインスタンス\n        gen\n    };\n}\n","/**\n * file: nako_gen_async\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお、扱いやすさ優先で、なでしこの一文を一つの関数として生成し、非同期実行する。\n */\nimport { NakoSyntaxError, NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport nakoVersion from './nako_core_version.mjs';\nimport { NakoGen } from './nako_gen.mjs';\n/**\n * なでしこのインタプリタコード\n */\nconst NakoCodeNop = 'NOP';\nconst NakoCodeLabel = 'LBL';\nconst NakoCodeEOL = 'EOL';\nconst NakoCodeJump = 'JMP'; // JUMP addr\nconst NakoCodeJumpIfTrue = 'JMP_T'; // pop and jump addr\nconst NakoCodeJumpIfFalse = 'JMP_F'; // pop and jump addr\nconst NakoCodeCall = 'CALL'; // call addr\nconst NakoCodeCallObj = 'CALL_OBJ'; // call addr\nconst NakoCodeReturn = 'RET';\nconst NakoCodeTry = 'TRY';\nconst NakoCodeCode = 'CODE';\nconst NakoCodeTagIsFuncpoint = 0x0F;\n/**\n * なでしこのインタプリタが用いる簡易コードを表現するクラス\n */\nclass NakoCode {\n    /**\n     * @param type\n     * @param value\n     */\n    constructor(type, value) {\n        /** Codeのタイプ\n         * @type {string}\n         */\n        this.type = type;\n        /** Codeの値 / ラベルならラベル名\n         * @type {string}\n         */\n        this.value = value;\n        /** ラベルならジャンプ先\n         * @type {number}\n         */\n        this.no = -1;\n        /** タグ\n         * @type {number}\n         */\n        this.tag = 0;\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGenASync {\n    /**\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        this.com = com;\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         * @type {Record<string, { josi: string[][], fn: string, type: 'test_func' }>}\n         */\n        this.nakoTestList = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         * @type {Set<string>}\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         * @type {number}\n         */\n        this.loopId = 1;\n        /**\n         * 変換中の処理が、ループの中かどうかを判定する\n         * @type {boolean}\n         */\n        this.flagLoop = false;\n        /**\n         * 変換後のコード管理番号\n         * @type {number}\n         */\n        this.codeId = 0;\n        /**\n         * 変換後のコードを保持する配列\n         * @type {Array<NakoCode>}\n         */\n        this.codeArray = [];\n        /** @type {NakoCode | null} */\n        this.labelContinue = null;\n        /** @type {NakoCode | null} */\n        this.labelBreak = null;\n        /**\n         * ジャンプ先を表現するラベル\n         * @type {Object<string, number>}\n         */\n        this.labels = {};\n        // コンパイラのインスタンス\n        this.__self = com;\n        /**\n         * コードジェネレータの種類\n         * @type {string}\n         */\n        this.genMode = '非同期モード';\n        /**\n         * 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。\n         * @type {string | null}\n         */\n        this.lastLineNo = null;\n        /**\n         * スタック\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }[]}\n         */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /**\n         * スタックトップ\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }}\n         */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0 // システム関数(呼び出しコードを除く)\n        };\n    }\n    /**\n     * @param com\n     * @param {Ast} ast\n     * @param {boolean | string} isTest 文字列なら1つのテストだけを実行する\n     */\n    static generate(com, ast, isTest) {\n        const gen = new NakoGenASync(com);\n        // ユーザー定義関数をシステムに登録する\n        gen.registerFunction(ast);\n        // JSコードを生成する\n        let js = gen.convGen(ast, !!isTest);\n        // JSコードを実行するための事前ヘッダ部分の生成\n        js = gen.getDefFuncCode(isTest) + js;\n        com.getLogger().trace('--- generate(非同期モード) ---\\n' + js);\n        // テストの実行\n        if (js && isTest) {\n            js += '\\n__self._runTests(__tests);\\n';\n        }\n        return {\n            // なでしこの実行環境ありの場合\n            runtimeEnv: js,\n            // JavaScript単体で動かす場合\n            standalone: `\\\nconst nakoVersion = ${JSON.stringify(nakoVersion)};\n${NakoError.toString()}\n${NakoRuntimeError.toString()}\nthis.logger = {\n  error(message) { console.error(message) },\n  send(level, message) { console.log(message) },\n};\nthis.__varslist = [{}, {}, {}];\nthis.__vars = this.__varslist[2];\nthis.__module = {};\nthis.__locals = {};\nthis.__labels = {};\nthis.__code = [];\nthis.__callstack = [];\nthis.__stack = [];\nthis.__genMode = '非同期モード';\ntry {\n  ${gen.getVarsCode()}\n  ${js}\n} catch (err) {\n  if (!(err instanceof NakoRuntimeError)) {\n    err = new NakoRuntimeError(err, this.__varslist[0].line);\n  }\n  this.logger.error(err);\n  throw err;\n}`,\n            gen // コード生成に使ったNakoGenのインスタンス\n        };\n    }\n    /**\n     * @param {import(\"./nako3\").Ast} node\n     * @param {boolean} forceUpdate\n     */\n    convLineno(node, forceUpdate) {\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        /** @type {string} */\n        let lineNo;\n        if (typeof node.line !== 'number') {\n            lineNo = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNo = `l${node.line}`;\n        }\n        else {\n            lineNo = `l${node.line}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNo === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNo;\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${JSON.stringify(lineNo)};`;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * 基本的に取得のために利用\n     * @param {string} name\n     */\n    varname(name) {\n        const keys = JSON.stringify(name);\n        return `sys.__vars[${keys}]`;\n    }\n    /**\n     * プログラムの実行に必要な関数を書き出す(システム領域)\n     * @returns {string}\n     */\n    getVarsCode() {\n        let code = '';\n        // プログラム中で使った関数を列挙して書き出す\n        for (const key of Array.from(this.usedFuncSet.values())) {\n            const f = this.__self.__varslist[0][key];\n            const name = `this.__varslist[0][\"${key}\"]`;\n            if (typeof (f) === 'function') {\n                code += name + '=' + f.toString() + ';\\n';\n            }\n            else {\n                code += name + '=' + JSON.stringify(f) + ';\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param {boolean | string} isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @returns {string}\n     */\n    getDefFuncCode(isTest) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += 'const __self = this.__self = this;\\n';\n        code += 'const __varslist = this.__varslist;\\n';\n        code += 'const __module = this.__module;\\n';\n        code += 'const __v0 = this.__v0 = this.__varslist[0];\\n';\n        code += 'const __v1 = this.__v1 = this.__varslist[1];\\n';\n        code += 'const __vars = this.__vars = this.__varslist[2];\\n';\n        code += 'const __code = this.__code;\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}']\\n` +\n                `__v1[\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // プラグインの初期化関数を実行する\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'プラグインの初期化\\';\\n' + pluginCode;\n        }\n        // テストの定義を行う\n        if (isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestList) {\n                if (isTest === true || (typeof isTest === 'string' && isTest === key)) {\n                    const f = this.nakoTestList[key].fn;\n                    testCode += `${f};\\n;`;\n                }\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        const registFunc = (node) => {\n            for (let i = 0; i < node.block.length; i++) {\n                const t = node.block[i];\n                if (t.type === 'def_func') {\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.nakoFuncList[name] = {\n                        josi: t.name.meta.josi,\n                        fn: '',\n                        type: 'func'\n                    };\n                }\n                else if (t.type === 'speed_mode') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map(v => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isTest\n     */\n    convGen(node, isTest) {\n        // convert\n        this._convGen(node, true);\n        // ラベルアドレスの解決が必要なコード一覧\n        const needToFixAddr = new Set([\n            NakoCodeJump, NakoCodeJumpIfTrue, NakoCodeJumpIfFalse, NakoCodeCall, NakoCodeTry\n        ]);\n        // コードの最適化をするか?\n        const optimization = true;\n        let codes = this.codeArray;\n        //\n        if (optimization) {\n            // NOPを削除\n            codes = codes.filter((code) => {\n                return code.type !== NakoCodeNop;\n            });\n            // 未参照のラベルを探す - ただし関数呼び出しは削除しない\n            const usedLabels = new Set();\n            codes.forEach((code) => {\n                if (needToFixAddr.has(code.type)) {\n                    usedLabels.add(code.value);\n                }\n            });\n            // 未参照のラベルを削除\n            codes = codes.filter((code) => {\n                if (code.type !== NakoCodeLabel) {\n                    return true;\n                }\n                if (code.tag === NakoCodeTagIsFuncpoint) {\n                    return true;\n                }\n                return usedLabels.has(code.value);\n            });\n            // EOLが連続していたら削除する\n            let i = 0;\n            while (i < codes.length - 1) {\n                if (codes[i].type === NakoCodeEOL && codes[i + 1].type === NakoCodeEOL) {\n                    codes.splice(i + 1, 1);\n                    continue;\n                }\n                i++;\n            }\n            this.codeArray = codes;\n        }\n        // ラベルアドレスの解決\n        codes.forEach((code, index) => {\n            if (code.type === NakoCodeLabel) {\n                this.labels[code.value] = index;\n            }\n        });\n        codes.forEach((code) => {\n            if (needToFixAddr.has(code.type)) {\n                if (code.no < 0) {\n                    code.no = this.labels[code.value];\n                }\n            }\n        });\n        let result = '';\n        // コードの生成\n        codes.forEach((code, index) => {\n            switch (code.type) {\n                case NakoCodeNop:\n                    result += `case ${index}: break; // [NOP] ${code.value}\\n`;\n                    break;\n                case NakoCodeLabel:\n                    result += `case ${index}: break; // [LABEL] ${code.value}\\n`;\n                    break;\n                case NakoCodeEOL:\n                    result += `case ${index}: ${code.value}; break; // [EOL]\\n`;\n                    break;\n                case NakoCodeJump:\n                    result += `case ${index}: sys.nextIndex = ${code.no}; break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfTrue:\n                    result += `case ${index}: if (sys.__stack.pop()) { sys.nextIndex = ${code.no};} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfFalse:\n                    result += `case ${index}: if (!sys.__stack.pop()) { sys.nextIndex = ${code.no}} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeReturn:\n                    result += `case ${index}: sys.__return(sys); break;\\n`;\n                    break;\n                case NakoCodeCall:\n                    result += `case ${index}: sys.__call(${code.no}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeCallObj:\n                    result += `case ${index}: sys.__callObj('${code.value}', ${index}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeTry:\n                    result += `case ${index}: sys.tryIndex = ${code.no}; break; // TRY \\n`;\n                    break;\n                case NakoCodeCode:\n                    {\n                        // trim last\n                        const s = code.value.replace(/\\s+$/, '');\n                        result += `case ${index}: {\\n${s}\\n};break;\\n`;\n                        break;\n                    }\n                default:\n                    throw new Error('invalid code type');\n            }\n        });\n        result = `\n    //-------------------------\n    // main_code\n    this.__labels = ${JSON.stringify(this.labels)};\n    this.nextAsync = (sys) => {\n      if (sys.index >= sys.codeSize || sys.index < 0) {return}\n      const __v0 = sys.__v0\n      try {\n        sys.inLoop = true\n        while (sys.index < sys.codeSize && sys.index >= 0) {\n          // console.log('@@[run]', sys.index)\n          switch (sys.index) {\n            // --- CODE.BEGIN ---\n            ${result}\n            // --- CODE.END ---\n            default:\n              sys.inLoop = false\n              console.log(sys.index, sys.__stack)\n              throw new Error('Invalid sys.index:' + sys.index)\n              break\n          }\n          // check next\n          if (sys.nextIndex >= 0) {\n            sys.index = sys.nextIndex\n            sys.nextIndex = -1\n          } else {\n            sys.index++\n          }\n          if (sys.async) {\n            sys.__saveSysenv(sys)\n            sys.async = false\n            break\n          }\n        } // end of while\n        sys.inLoop = false\n      } catch (e) {\n        sys.__errorAsync(e, sys)\n      }\n    }\n    this.__errorAsync = (e, sys) => { // エラーが起きた時呼び出す\n      sys.__v0[\"エラーメッセージ\"] = e.message;\n      if (e.message == '__終わる__') {\n        sys.__stopAsync(sys)\n        return\n      }\n      if (sys.tryIndex >= 0) {\n        sys.index = sys.tryIndex;\n        setTimeout(() => {sys.nextAsync(sys)}, 1)\n      } else {\n        throw e\n      }\n    }\n    this.__call = (no, sys) => {\n      const info = {lastVars:sys.__vars, backNo: this.index + 1}\n      sys.__callstack.push(info);\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.nextIndex = no;\n    }\n    this.__return = sys => {\n      if (sys.__callstack.length === 0) {\n        sys.__destroySysenv(sys, sys.curSysenv.envid)\n        sys.index = -2\n        sys.nextIndex = -1\n        return\n      }\n      const sore = sys.__vars['それ'];\n      sys.__varslist.pop();\n      const info = sys.__callstack.pop();\n      sys.nextIndex = info.backNo;\n      sys.__vars = info.lastVars;\n      sys.__vars['それ'] = sore\n      sys.__stack.push(sore);\n    }\n    this.__resetAsync = sys => {\n      sys.index = 0\n      sys.codeSize = ${codes.length};\n      sys.async = false\n      sys.nextIndex = -1\n      sys.tryIndex = -1\n    }\n    this.__stopAsync = sys => {\n      sys.__resetAsync(sys)\n      sys.index = -1 // force stop!!\n    }\n    this.__callNakoCode = (no, backNo, sys) => {\n      this.__call(backNo, sys)\n      sys.nextIndex = no\n      const sysenv = sys.setAsync(sys)\n      setTimeout(() => {\n        // console.log('//__callNakoCode, back=', backNo, 'no=', no)\n        sys.compAsync(sys, sysenv)\n      } ,1)\n    }\n    this.__callNakoCodeEntry = (no, sys) => {\n      sys.__saveSysenv(sys)\n      sys.curSysenv = sys.__generateSysenv(sys)\n      sys.__restoreSysenv(sys)\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.index = no;\n      sys.nextAsync(sys)\n    }\n    this.__callObj = (vname, curNo, sys) => {\n      if (sys.__vars[vname]) {\n        const fname = sys.__vars[vname]\n        // console.log(sys.__labels)\n        if (fname && sys.__labels[fname]) {\n          const no = sys.__labels[fname]\n          sys.__call(no, sys)\n          return\n        } else {\n          console.log('vname=', vname, 'label=', fname)\n        }\n      }\n      throw new Error('async error in __callObj::', vname)\n    }\n    this.__generateSysenv = sys => {\n      sys.envid = ( sys.envid == null ? 0 : sys.envid ) + 1\n      const sysenv = {\n        callstack: [],\n        varstack: [],\n        varslist: [sys.__varslist[0], sys.__varslist[1], sys.__varslist[2]],\n        index: -1,\n        nextIndex: -1,\n        tryIndex: -1,\n        envid: sys.envid\n      }\n      sysenv.vars = sysenv.varslist[2]\n      if (sys.sysenvs == null) { sys.sysenvs={} }\n      sys.sysenvs[sys.envid] = sysenv\n      // console.log('generete envid '+sys.envid)\n      return sysenv\n    }\n    this.__destroySysenv = (sys, envid) => {\n      delete sys.sysenvs[envid]\n      // console.log('destroy envid '+envid)\n    }\n    this.__saveSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sysenv.callstack = sys.__callstack\n      sysenv.varstack = sys.__stack\n      sysenv.varslist = sys.__varslist\n      sysenv.vars = sys.__vars\n      sysenv.index = sys.index\n      sysenv.nextIndex = sys.nextIndex\n      sysenv.tryIndex = sys.tryIndex\n    }\n    this.__restoreSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sys.__callstack = sysenv.callstack\n      sys.__stack = sysenv.varstack\n      sys.__varslist = sysenv.varslist\n      sys.__vars = sysenv.vars\n      ___vars = sys.__vars\n      sys.index = sysenv.index\n      sys.nextIndex = sysenv.nextIndex\n      sys.tryIndex = sysenv.tryIndex\n    }\n    this.setAsync = sys => {\n      sys.async = true\n      return sys.curSysenv\n    }\n    this.compAsync = (sys,sysenv) => {\n      if (sys.async && sys.curSysenv != null && sysenv != null && sys.curSysenv.envid === sysenv.envid) {\n        sys.async = false\n      } else {\n        if (sys.curSysenv == null || sysenv == null || sys.curSysenv.envid !== sysenv.envid) {\n          sys.__saveSysenv(sys)\n          const envid = sys.curSysenv.envid\n          sys.curSysenv = sysenv\n          sys.__restoreSysenv(sys)\n          // console.log('switch envid '+envid+' to '+sys.curSysenv.envid)\n        }\n        sys.nextAsync(sys)\n      }\n    }\n\n    this.__resetAsync(this)\n    this.curSysenv = this.__generateSysenv(this)\n    this.nextAsync(this)\n    //-------------------------\n    `;\n        if (isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            // === NOP ===\n            case 'nop':\n                break;\n            case 'comment':\n                if (!node.value) {\n                    node.value = '';\n                }\n                this.addCode(new NakoCode(NakoCodeNop, node.value));\n                break;\n            case 'eol':\n                this.addCode(new NakoCode(NakoCodeEOL, this.convLineno(node, true)));\n                break;\n            // === 単純なコード変換 ===\n            case 'number':\n                this.addCodeStr(`sys.__stack.push(${node.value});//number`);\n                break;\n            case 'string':\n                this.convString(node);\n                break;\n            case 'word':\n            case 'variable':\n                this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                this.convOp(node);\n                break;\n            case 'renbun':\n                this.convRenbun(node);\n                break;\n            case 'not':\n                this._convGen(node.value, true);\n                this.addCodeStr('if (sys.__stack.length==0) throw new Error(\\'NOTでスタックに値がありません\\');' +\n                    'sys.__stack[sys.__stack.length-1] = (sys.__stack[sys.__stack.length-1]) ? 0:1');\n                break;\n            case '配列参照':\n                this.convRefArray(node);\n                break;\n            case 'json_array':\n                this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                this.convJsonObj(node);\n                break;\n            case 'bool':\n                {\n                    const b = (node.value) ? 'true' : 'false';\n                    this.addCodeStr(`sys.__stack.push(${b})`);\n                    break;\n                }\n            case 'null':\n                this.addCodeStr('sys.__stack.push(null)');\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                this.convFunc(node, isExpression); // 関数の呼び出し\n                break;\n            // === 文の変換 ===\n            case 'let':\n                this.convLet(node);\n                break;\n            case 'let_array':\n                this.convLetArray(node);\n                break;\n            case 'block':\n                for (let i = 0; i < node.block.length; i++) {\n                    const b = node.block[i];\n                    this._convGen(b, false);\n                }\n                break;\n            case 'if':\n                this.convIf(node);\n                break;\n            case 'repeat_times':\n                this.convRepeatTimes(node);\n                break;\n            case 'break':\n                this.addCodeStr(this.convCheckLoop(node, 'break'));\n                break;\n            case 'continue':\n                this.addCodeStr(this.convCheckLoop(node, 'continue'));\n                break;\n            case 'for':\n                this.convFor(node);\n                break;\n            case 'foreach':\n                this.convForeach(node);\n                break;\n            case 'while':\n                this.convWhile(node);\n                break;\n            case 'switch':\n                this.convSwitch(node);\n                break;\n            case 'return':\n                this.convReturn(node);\n                break;\n            case 'end':\n                code += this.addCodeStr('__varslist[0][\\'終\\']();');\n                break;\n            case 'def_local_var':\n                this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.addCodeStr(this.convDefLocalVarlist(node));\n                break;\n            case 'tikuji':\n                throw NakoSyntaxError.fromNode('「逐次実行」構文は「!非同期モード」では使えません。', node);\n            case 'speed_mode':\n                throw NakoSyntaxError.fromNode('「速度有線」構文は「!非同期モード」では使えません。', node);\n            case 'performance_monitor':\n                this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'func_obj':\n                this.convFuncObj(node);\n                break;\n            case 'def_test':\n                this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.addCodeStr(this.convDefFunc(node));\n                break;\n            // TODO\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    convRequire(node) {\n        const gen = new NakoGen(this.com);\n        this.addCodeStr(gen.convRequire(node));\n        return '';\n    }\n    /**\n     * add code to array\n     * @param {string} codeStr\n     * @returns {string}\n     */\n    addCodeStr(codeStr) {\n        if (codeStr === '') {\n            return '';\n        }\n        const a = codeStr.split('\\n');\n        const a2 = a.map((row) => '  ' + row.replace(/\\s+$/, ''));\n        const c = new NakoCode(NakoCodeCode, a2.join('\\n'));\n        return this.addCode(c);\n    }\n    /**\n     * add code to array\n     * @param {NakoCode} code\n     * @returns {string}\n     */\n    addCode(code) {\n        this.codeArray[this.codeId] = code;\n        this.codeId++;\n        return '';\n    }\n    /**\n     * make label for jump\n     * @param {string} name\n     * @returns {NakoCode}\n     */\n    makeLabel(name) {\n        const uniqLabel = name + '_' + (this.loopId++);\n        return this.makeLabelDirectly(uniqLabel);\n    }\n    /**\n     * make label for function\n     * @param {string} labelName\n     * @returns {NakoCode}\n     */\n    makeLabelDirectly(labelName) {\n        const c = new NakoCode(NakoCodeLabel, labelName);\n        this.labels[labelName] = -1;\n        return c;\n    }\n    /**\n     * make Jump\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJump(label) {\n        return new NakoCode(NakoCodeJump, label.value);\n    }\n    /**\n     * make Jump if true\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfTrue(label) {\n        return new NakoCode(NakoCodeJumpIfTrue, label.value);\n    }\n    /**\n     * make Jump if false\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfFalse(label) {\n        return new NakoCode(NakoCodeJumpIfFalse, label.value);\n    }\n    /**\n     * @param {Ast} node\n     */\n    convIf(node) {\n        const labelBegin = this.makeLabel('もし:ここから');\n        const labelEnd = this.makeLabel('もし:ここまで');\n        const labelIfFalse = this.makeLabel('もし:違えば');\n        //\n        this.addCode(labelBegin);\n        this._convGen(node.expr, true);\n        this.addCode(this.makeJumpIfFalse(labelIfFalse));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelIfFalse);\n        if (node.falseBlock) {\n            this._convGen(node.falseBlock, false);\n        }\n        this.addCode(labelEnd);\n        return '';\n    }\n    convRepeatTimes(node) {\n        this.flagLoop = true;\n        this.varsSet.names.add('回数');\n        this.varsSet.readonly.add('回数');\n        // ループ管理変数を作成\n        const loopVar = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        // ループ回数を取得\n        const loopCount = `sys.__tmp_count${this.loopId}`;\n        this.loopId++;\n        this._convGen(node.value, true);\n        this.addCodeStr(`${loopCount} = sys.__stack.pop(); ${loopVar} = 0;`);\n        const labelCheck = this.makeLabel('回:条件チェック');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('回:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelCheck;\n        // 繰り返し判定\n        const kaisu = 'sys.__vars[\"回数\"]';\n        const cond = `${kaisu} = ++${loopVar}\\n` +\n            `sys.__stack.push(${loopVar} > ${loopCount})\\n`;\n        this.addCodeStr(cond);\n        this.addCode(this.makeJumpIfTrue(labelEnd));\n        this.convGenLoop(node.block); // read block\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {string} name\n     * @returns {{i: number, name: string, isTop: boolean, js: string} | null}\n     */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: `sys.__vars[${JSON.stringify(name)}]` };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                return { i, name, isTop: false, js: `sys.__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー' || name === '回数') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                this.__self.getLogger().warn(`変数『${name}』は定義されていません。`, position);\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi) {\n                    throw new Error('[System Error]');\n                }\n                if (pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        let varName = `sys.__vars[${JSON.stringify(name)}]`;\n        const o = this.findVar(name);\n        if (o != null) {\n            varName = o.js;\n        }\n        this.addCodeStr(`sys.__stack.push(${varName});`);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        if (node.value) {\n            this._convGen(node.value, true);\n            this.addCodeStr('sys.__vars[\"それ\"] = sys.__stack.pop()');\n        }\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        return '';\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        if (cmd === 'continue') {\n            if (this.labelContinue) {\n                this.addCode(this.makeJump(this.labelContinue));\n            }\n        }\n        else {\n            if (this.labelBreak) {\n                this.addCode(this.makeJump(this.labelBreak));\n            }\n        }\n        return '';\n    }\n    convDefFuncCommon(node, name) {\n        // deffunc_code\n        const isMumeiFunc = (name === '');\n        let funcName = name;\n        if (isMumeiFunc) {\n            funcName = `無名関数:${this.loopId++}`;\n        }\n        const labelEnd = this.makeLabel(`関数「${funcName}」:ここまで`);\n        this.addCode(this.makeJump(labelEnd));\n        const labelBegin = this.makeLabelDirectly(funcName);\n        labelBegin.tag = NakoCodeTagIsFuncpoint; // 削除対象からはずすため\n        this.addCode(labelBegin);\n        //\n        const initialNames = new Set();\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        this.varsSet.names.add('それ');\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        const meta = isMumeiFunc ? node.meta : node.name.meta;\n        let code = '';\n        let codeCall = '';\n        code += `//関数『${funcName}』の初期化処理\\n`;\n        // 宣言済みの名前を保存\n        // const varsDeclared = Array.from(this.varsSet.names.values())\n        // 引数をローカル変数に設定 (スタックの末尾から取得する必要があるので、逆順に値を得る)\n        code += '// 引数をローカル変数として登録\\n';\n        for (let i = meta.varnames.length - 1; i >= 0; i--) {\n            const word = meta.varnames[i];\n            code += `  ${this.varname(word)} = sys.__stack.pop();\\n`;\n            this.varsSet.names.add(word);\n            codeCall += ''; //  sys.__stack.push(arguments[${i}]);\\n\n        }\n        code += '// ここまで:引数をローカル変数として登録\\n';\n        this.addCodeStr(code);\n        // 関数定義は、グローバル領域で。\n        this.usedFuncSet.add(funcName);\n        this.varslistSet[1].names.add(funcName);\n        this.nakoFuncList[funcName] = {\n            josi: meta.josi,\n            fn: '(function(){\\n' +\n                '  const sys = (arguments.length > 0) ? arguments[arguments.length-1] : {}; \\n' +\n                '  if (sys.newenv) { \\n' +\n                '    sys.newenv = false\\n' +\n                `    sys.__callNakoCodeEntry(sys.__labels['${funcName}'], sys);` + '\\n' +\n                '  } else {\\n' +\n                '  ' + codeCall + '\\n' +\n                `    sys.__callNakoCode(sys.__labels['${funcName}'], sys.nextIndex, sys);` + '\\n' +\n                '    if (!sys.inLoop) { sys.nextAsync(sys) }\\n' +\n                '  }  })',\n            type: 'func'\n        };\n        // ブロックを解析\n        this._convGen(node.block, false);\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.__self.__varslist[1][funcName] = function () { };\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        this.addCode(labelEnd);\n        // 無名関数の定義であれば無名関数をPUSH\n        if (!name) {\n            this.addCodeStr(`sys.__stack.push('${funcName}')`);\n        }\n        return '';\n    }\n    convDefTest(node) {\n        throw NakoSyntaxError.fromNode('テスト構文は!非同期モードでは使えません。', node);\n    }\n    convDefFunc(node) {\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        // ★この時点では関数のコードを生成しない★\n        // プログラム冒頭でコード生成時に関数定義を行う\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const objName = `sys.__tmp_obj${this.loopId++}`;\n        this.addCodeStr(objName + '={}; // convJsonObj::ここから');\n        list.forEach((e) => {\n            this._convGen(e.value, true);\n            this._convGen(e.key, true);\n            this.addCodeStr(`${objName}[sys.__stack.pop()]=sys.__stack.pop()`);\n        });\n        this.addCodeStr(`this.__stack.push(${objName}); delete $objName; // convJsonObj::ここまで`);\n        return '';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        this.addCode(this.makeLabel('convJsonArray::ここから'));\n        list.forEach((e) => this._convGen(e, true));\n        const size = list.length;\n        this.addCodeStr(`sys.__stack.push(sys.__stack.splice(sys.__stack.length-${size},${size}))`);\n        return '';\n    }\n    convRefArray(node) {\n        // 名前をPUSH\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            // push index\n            this._convGen(list[i], true);\n            // pop index & push value\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convLetArray(node) {\n        // 代入する値をPUSH\n        this._convGen(node.value, true);\n        // 変数を取得\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            this._convGen(list[i], true);\n            if (i === list.length - 1) { // 代入\n                this.addCodeStr('const idx = this.__stack.pop();' +\n                    'const obj = this.__stack.pop();' +\n                    'const val = this.__stack.pop();' +\n                    'obj[idx]=val;');\n                break;\n            }\n            // index アクセス\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        this.flagLoop = true;\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value;\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const sore = this.varname('それ');\n        const idLoop = this.loopId++;\n        const varI = `sys.__tmp__i${idLoop}`;\n        // ループ条件を変数に入れる用\n        const varTo = `sys.__tmp__to${idLoop}`;\n        // ループ条件を確認\n        this._convGen(node.from, true);\n        this._convGen(node.to, true);\n        this.addCodeStr(`${varTo}=sys.__stack.pop();${varI}=sys.__stack.pop();`);\n        // ループ変数を初期化\n        this.addCodeStr(`${sore} = ${word} = ${varI}`);\n        // 繰り返し判定\n        const labelCheck = this.makeLabel('繰返:条件確認');\n        const labelInc = this.makeLabel('繰返:加算');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('繰返:ここまで');\n        this.addCodeStr(`sys.__stack.push(${word} <= ${varTo})`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        this.labelContinue = labelInc;\n        this.labelBreak = labelEnd;\n        // ループ内のブロック内容を得る\n        this.convGenLoop(node.block); // block\n        this.addCode(labelInc);\n        this.addCodeStr(`${sore} = ++${word};`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varI};delete ${varTo};//繰返:掃除`);\n        this.flagLoop = false;\n        return '';\n    }\n    convForeach(node) {\n        this.flagLoop = true;\n        // 対象を用意する\n        let taisyo = '__v0[\"対象\"]';\n        const taisyoKey = '__v0[\"対象キー\"]';\n        if (node.name) {\n            taisyo = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        // 反復対象を調べる\n        const target = node.target;\n        if (target === null) {\n            throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n        }\n        const sore = this.varname('それ');\n        const targetArray = `sys.__tmp__target${this.loopId++}`;\n        const targetKeys = `sys.__tmp__keys${this.loopId++}`;\n        const loopVar = `sys.__tmp__i${this.loopId++}`;\n        const loopCount = `sys.__tmp__count${this.loopId++}`;\n        // 反復対象を評価\n        this._convGen(node.target, true);\n        // どのように反復するか判定\n        const initCode = '// 反復: 初期化\\n' +\n            `${targetArray} = sys.__stack.pop();\\n` +\n            `${loopVar} = 0;\\n` +\n            // 文字列や数値なら反復できるように配列に入れる\n            `if (typeof(${targetArray}) == 'string' || typeof(${targetArray}) == 'number') { ${targetArray} = [${targetArray}]; }\\n` +\n            // Objectならキー一覧を得る\n            `if (${targetArray} instanceof Array) { ${loopCount} = ${targetArray}.length; }\\n` +\n            'else { // キーの一覧を得る\\n' +\n            `  ${targetKeys} = Object.keys(${targetArray}); \\n` +\n            '  // hasOwnPropertyがfalseならばkeyを消す処理\\n' +\n            `  ${targetKeys} = ${targetKeys}.filter((key)=>{ return ${targetArray}.hasOwnProperty(key) })\\n` +\n            `  ${loopCount} = ${targetKeys}.length;\\n` +\n            '}\\n';\n        this.addCodeStr(initCode);\n        const labelCheck = this.makeLabel('反復:条件確認');\n        const labelInc = this.makeLabel('反復:加算');\n        const labelEnd = this.makeLabel('反復:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelInc;\n        this.addCode(labelCheck);\n        const setTarget = `if (${targetArray} instanceof Array) {\\n` +\n            // eslint-disable-next-line no-irregular-whitespace\n            `  ${taisyo} = ${sore} = ${targetArray}[${loopVar}];　${taisyoKey} = ${loopVar};\\n` +\n            '} else {\\n' +\n            `  ${taisyoKey} = ${targetKeys}[${loopVar}]; ${taisyo} = ${sore} = ${targetArray}[${taisyoKey}];\\n` +\n            '}\\n';\n        this.addCodeStr(`${setTarget}\\nsys.__stack.push(${loopVar} < ${loopCount});`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // 反復ブロックを定義\n        this.convGenLoop(node.block); // block\n        // 加算\n        this.addCode(labelInc);\n        this.addCodeStr(`${loopVar}++`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    convWhile(node) {\n        this.flagLoop = true;\n        const labelBegin = this.makeLabel('間:ここから');\n        const labelEnd = this.makeLabel('間:ここまで');\n        this.labelContinue = labelBegin;\n        this.labelBreak = labelEnd;\n        this.addCode(labelBegin);\n        // 条件をスタックに\n        this._convGen(node.cond, true);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // ブロックを追加\n        this.convGenLoop(node.block);\n        this.addCode(this.makeJump(labelBegin));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {Ast} _node\n     * @param {boolean} _isExpression\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    convSpeedMode(_node, _isExpression) {\n        return '';\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        this._convGen(node.block, isExpression);\n        this.performanceMonitor = prev;\n    }\n    convSwitch(node) {\n        // 値をPUSH\n        this._convGen(node.value, true);\n        const varValue = `sys.__tmp__i${this.loopId++}`;\n        this.addCodeStr(`${varValue} = sys.__stack.pop()`);\n        const labelEnd = this.makeLabel('条件分岐:ここまで');\n        const cases = node.cases;\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            if (cvalue.type === '違えば') {\n                this.convGenLoop(cases[i][1]);\n            }\n            else {\n                const nextLabel = this.makeLabel('条件分岐:次');\n                this._convGen(cvalue, true);\n                this.addCodeStr(`sys.__stack.push(sys.__stack.pop() == ${varValue})`);\n                this.addCode(this.makeJumpIfFalse(nextLabel));\n                this.convGenLoop(cases[i][1]);\n                this.addCode(this.makeJump(labelEnd));\n                this.addCode(nextLabel);\n            }\n        }\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varValue}//条件分岐:掃除`);\n        return '';\n    }\n    convFuncGetArgsCalcType(funcName, func, node) {\n        const opts = {};\n        for (let i = 0; i < node.args.length; i++) {\n            const arg = node.args[i];\n            if (i === 0 && arg === null) {\n                this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n                opts.sore = true;\n            }\n            else {\n                // 関数の引数を評価\n                this._convGen(arg, true);\n            }\n        }\n        return opts;\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convFunc(node, isExpression) {\n        let isJSFunc = false;\n        let isMumeiFunc = false;\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n            isJSFunc = true;\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                isMumeiFunc = true;\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsOpts = this.convFuncGetArgsCalcType(funcName, func, node);\n        // function\n        this.usedFuncSet.add(funcName);\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        // 引数をスタックに積む\n        const arcCount = node.args.length;\n        // 必要な引数分だけスタックから下ろして呼び出す\n        let code = '';\n        if (isJSFunc) {\n            code += funcBegin;\n            code += `const args = sys.__stack.splice(sys.__stack.length - ${arcCount}, ${arcCount});\\n`;\n            // code += `console.log(\"call:${funcName}\", args, 'sys');\\n`\n            code += 'args.push(sys);\\n';\n            code += `const ret = ${res.js}.apply(sys, args);\\n`;\n            if (!func.return_none) {\n                code += 'sys.__vars[\\'それ\\'] = ret;\\n';\n                if (isExpression) {\n                    code += 'sys.__stack.push(ret);\\n';\n                }\n            }\n            code += funcEnd;\n            this.addCodeStr(code);\n        }\n        else {\n            if (isMumeiFunc) {\n                this.addCode(new NakoCode(NakoCodeCallObj, funcName));\n            }\n            else {\n                this.addCode(new NakoCode(NakoCodeCall, funcName));\n            }\n            if (!isExpression) {\n                this.addCodeStr('sys.__stack.pop();// 戻り値を利用しない関数呼出');\n            }\n        }\n    }\n    convRenbun(node) {\n        this._convGen(node.left, false);\n        this._convGen(node.right, true);\n    }\n    convOp(node) {\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        const op = node.operator; // 演算子\n        // 値はスタックに載せられる\n        // left\n        this._convGen(node.left, true);\n        // right\n        this._convGen(node.right, true);\n        // calc\n        let code = 'const rv = sys.__stack.pop();\\n' +\n            'const lv = sys.__stack.pop();\\n';\n        if (op === '^') {\n            code += 'const v = (Math.pow(lv, rv))\\n';\n        }\n        else {\n            const op2 = OP_TBL[op] || op;\n            code += `const v = ((lv) ${op2} (rv));\\n`;\n        }\n        // code += `if (isNaN(v) && '${op}' != '&') { console.log('ERROR:${op}', lv, rv) }\\n`\n        code += `sys.__stack.push(v); //op:${op}\\n`;\n        this.addCodeStr(code);\n    }\n    convLet(node) {\n        let code = '';\n        // 値をスタックに載せる\n        if (node.value === null) {\n            // 値が省略されたら「それ」を載せる\n            this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n        }\n        else {\n            // 値がある場合\n            this._convGen(node.value, true);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)}=sys.__stack.pop();`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js}=sys.__stack.pop();`;\n        }\n        this.addCodeStr(code + '//let');\n    }\n    convDefLocalVar(node) {\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        this.varsSet.names.add(name);\n        // 定数?\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        this.addCodeStr(`${this.varname(name)}=sys.__stack.pop()`);\n        return '';\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        const vtype = node.vartype; // 変数 or 定数\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const varI = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        this.addCodeStr(`${varI}=sys.__stack.pop();if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }`);\n        for (const nameObj of node.names) {\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n            }\n            //\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            this.addCodeStr(`${vname}=${varI}.pop()`);\n        }\n        this.addCodeStr(`delete ${varI}//複数代入:掃除`);\n        return '';\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            throw new Error('[システムエラー] ジェネレーターでの文字列の展開はサポートしていません');\n        }\n        this.addCodeStr(`sys.__stack.push(\"${value}\")//string`);\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const labelExcept = this.makeLabel('エラー監視:ならば');\n        const labelEnd = this.makeLabel('エラー監視:ここまで');\n        // エラーをひっかけるように設定\n        this.addCode(new NakoCode(NakoCodeTry, labelExcept.value));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelExcept);\n        this._convGen(node.errBlock, false);\n        this.addCode(labelEnd);\n    }\n}\n// ブラウザに登録する\nif (typeof (navigator) === 'object' && typeof (navigator.nako3) === 'object') {\n    // Webブラウザの場合\n    const nako3 = navigator.nako3;\n    if (nako3.addCodeGenerator) {\n        nako3.addCodeGenerator('非同期モード', NakoGenASync);\n    }\n}\n","/**\n * 助詞の一覧\n */\nexport const josiList = [\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\n];\n// 「もし」文で使う助詞\nexport const tararebaJosiList = [\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\n];\n// 意味のない助詞(削除する) #936 #939 #974\nexport const removeJosiList = [\n    'こと', 'である', 'です', 'します', 'でした'\n];\n/**\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\n */\nexport const tararebaMap = {};\ntararebaJosiList.forEach(josi => {\n    josiList.push(josi);\n    tararebaMap[josi] = true;\n});\n/**\n * 意味のない助詞(削除する)をマップに変換したもの\n */\nexport const removeJosiMap = {};\nremoveJosiList.forEach(josi => {\n    josiList.push(josi);\n    removeJosiMap[josi] = true;\n});\n// 文字数の長い順に並び替え\njosiList.sort((a, b) => b.length - a.length);\n// 正規表現で助詞をマッチできるようにする\nexport const josiRE = new RegExp('^[\\\\t ]*(' + josiList.join('|') + ')');\n","/** 予約語 */\nconst reserved = {\n    '回': '回',\n    '回繰返': '回',\n    '間': '間',\n    '間繰返': '間',\n    '繰返': '繰返',\n    '増繰返': '増繰返',\n    '減繰返': '減繰返',\n    '後判定': '後判定',\n    '反復': '反復',\n    '抜': '抜ける',\n    '続': '続ける',\n    '戻': '戻る',\n    '先': '先に',\n    '次': '次に',\n    '代入': '代入',\n    '実行速度優先': '実行速度優先',\n    'パフォーマンスモニタ適用': 'パフォーマンスモニタ適用',\n    '定': '定める',\n    '逐次実行': '逐次実行',\n    '条件分岐': '条件分岐',\n    '増': '増',\n    '減': '減',\n    '変数': '変数',\n    '定数': '定数',\n    'エラー監視': 'エラー監視',\n    'エラー': 'エラー',\n    'それ': 'word',\n    'そう': 'word',\n    '関数': 'def_func',\n    'インデント構文': 'インデント構文',\n    '非同期モード': '非同期モード',\n    'DNCLモード': 'DNCLモード',\n    'モード設定': 'モード設定',\n    '取込': '取込'\n};\nexport default reserved;\n","import { NakoRuntimeError } from './nako_errors.mjs';\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_system',\n            pluginVersion: '3.4.5',\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'],\n            nakoVersion: '^3.4.5' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // 言語バージョンを設定\n            sys.isDebug = false;\n            sys.__v0['ナデシコバージョン'] = sys.version;\n            sys.__v0['ナデシコ言語バージョン'] = sys.coreVersion;\n            sys.__namespaceList = [];\n            // なでしこの関数や変数を探して返す\n            sys.__findVar = function (nameStr, def) {\n                if (typeof nameStr === 'function') {\n                    return nameStr;\n                }\n                if (sys.__locals[nameStr]) {\n                    return sys.__locals[nameStr];\n                }\n                // 名前空間が指定されている場合\n                if (nameStr.indexOf('__') >= 0) {\n                    for (let i = 2; i >= 0; i--) {\n                        const varScope = sys.__varslist[i];\n                        if (varScope[nameStr]) {\n                            return varScope[nameStr];\n                        }\n                    }\n                    return def;\n                }\n                // 名前空間を参照して関数・変数名を解決する\n                const modList = sys.__modList ? sys.__modList : [sys.__modName];\n                for (const modName of modList) {\n                    const gname = modName + '__' + nameStr;\n                    for (let i = 2; i >= 0; i--) {\n                        const scope = sys.__varslist[i];\n                        if (scope[gname]) {\n                            return scope[gname];\n                        }\n                    }\n                }\n                return def;\n            };\n            // 文字列から関数を探す\n            sys.__findFunc = function (nameStr, parentFunc) {\n                const f = sys.__findVar(nameStr);\n                if (typeof f === 'function') {\n                    return f;\n                }\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\n            };\n            // システム関数を実行\n            sys.__exec = function (func, params) {\n                // システム命令を優先\n                const f0 = sys.__v0[func];\n                if (f0) {\n                    return f0.apply(this, params);\n                }\n                // グローバル・ローカルを探す\n                const f = sys.__findVar(func);\n                if (!f) {\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\n                }\n                return f.apply(this, params);\n            };\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\n            sys.__timeout = [];\n            sys.__interval = [];\n            // 日付処理などに使う\n            const z2 = sys.__zero2 = (s) => {\n                s = '00' + s;\n                return s.substring(s.length - 2);\n            };\n            sys.__zero = (s, keta) => {\n                let zeroS = '';\n                for (let i = 0; i < keta; i++) {\n                    zeroS += '0';\n                }\n                s = zeroS + s;\n                return s.substring(s.length - keta);\n            };\n            sys.__formatDate = (t) => {\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n            };\n            sys.__formatTime = (t) => {\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\n            };\n            sys.__formatDateTime = (t, fmt) => {\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\n                    return dateStr + ' ' + timeStr;\n                }\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\n                    return dateStr;\n                }\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\n                    return timeStr;\n                }\n                return dateStr + ' ' + timeStr;\n            };\n            sys.__str2date = (s) => {\n                // trim\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\n                // is unix time\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\n                    return new Date(parseFloat(s) * 1000);\n                }\n                // is time ?\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\n                    const t = new Date();\n                    const a = (s + ':0').split(':');\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\n                }\n                // replace splitter to '/'\n                s = s.replace(/[\\s:-]/g, '/');\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\n                const a = s.split('/');\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\n            };\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\n            sys.__printPool = '';\n            // undefinedチェック\n            sys.chk = (value, constId) => {\n                if (typeof value === 'undefined') {\n                    const cp = sys.constPools[constId];\n                    sys.logger.warn(cp.msg, { file: cp.file, line: cp.line });\n                }\n                return value;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            if (sys.__exec) {\n                sys.__exec('全タイマー停止', [sys]);\n            }\n            if (sys.__genMode === '非同期モード') {\n                sys.__stopAsync(sys);\n            }\n            sys.__v0['表示ログ'] = '';\n        }\n    },\n    // @システム定数\n    'ナデシコバージョン': { type: 'const', value: '?' },\n    'ナデシコ言語バージョン': { type: 'const', value: '?' },\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' },\n    'ナデシコ種類': { type: 'const', value: '?' },\n    'はい': { type: 'const', value: 1 },\n    'いいえ': { type: 'const', value: 0 },\n    '真': { type: 'const', value: 1 },\n    '偽': { type: 'const', value: 0 },\n    '永遠': { type: 'const', value: 1 },\n    'オン': { type: 'const', value: 1 },\n    'オフ': { type: 'const', value: 0 },\n    '改行': { type: 'const', value: '\\n' },\n    'タブ': { type: 'const', value: '\\t' },\n    'カッコ': { type: 'const', value: '「' },\n    'カッコ閉': { type: 'const', value: '」' },\n    '波カッコ': { type: 'const', value: '{' },\n    '波カッコ閉': { type: 'const', value: '}' },\n    'OK': { type: 'const', value: true },\n    'NG': { type: 'const', value: false },\n    'キャンセル': { type: 'const', value: 0 },\n    'TRUE': { type: 'const', value: true },\n    'FALSE': { type: 'const', value: false },\n    'PI': { type: 'const', value: Math.PI },\n    '空': { type: 'const', value: '' },\n    'NULL': { type: 'const', value: null },\n    'undefined': { type: 'const', value: undefined },\n    '未定義': { type: 'const', value: undefined },\n    'エラーメッセージ': { type: 'const', value: '' },\n    '対象': { type: 'const', value: '' },\n    '対象キー': { type: 'const', value: '' },\n    '回数': { type: 'const', value: '' },\n    'CR': { type: 'const', value: '\\r' },\n    'LF': { type: 'const', value: '\\n' },\n    '非数': { type: 'const', value: NaN },\n    '無限大': { type: 'const', value: Infinity },\n    '空配列': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return [];\n        }\n    },\n    '空辞書': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空ハッシュ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空オブジェクト': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            return sys.__exec('空ハッシュ', [sys]);\n        }\n    },\n    // @標準出力\n    '表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            // 継続表示の一時プールを出力\n            s = sys.__printPool + s;\n            sys.__printPool = '';\n            //\n            sys.__varslist[0]['表示ログ'] += (s + '\\n');\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    '継続表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__printPool += s;\n        },\n        return_none: true\n    },\n    '連続表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '連続無改行表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('継続表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '表示ログ': { type: 'const', value: '' },\n    '表示ログクリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__varslist[0]['表示ログ'] = '';\n        },\n        return_none: true\n    },\n    '言': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    'コンソール表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s) {\n            console.log(s);\n        },\n        return_none: true\n    },\n    // @四則演算\n    '足': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        isVariableJosi: false,\n        pure: true,\n        fn: function (a, b) {\n            return a + b;\n        }\n    },\n    '引': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            return a - b;\n        }\n    },\n    '掛': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            // 数値の掛け算\n            if (typeof a === 'number') {\n                return a * b;\n            }\n            // 文字列の掛け算(文字列の繰り返し)\n            if (typeof a === 'string') {\n                let s = '';\n                for (let i = 0; i < parseInt(b); i++) {\n                    s += a;\n                }\n                return s;\n            }\n            // 配列の繰り返し\n            if (a instanceof Array) {\n                const aa = [];\n                for (let i = 0; i < parseInt(b); i++) {\n                    aa.push(...a);\n                }\n                return aa;\n            }\n            return a * b;\n        }\n    },\n    '倍': {\n        type: 'func',\n        josi: [['の', 'を'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a * b;\n        }\n    },\n    '割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a / b;\n        }\n    },\n    '割余': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a % b;\n        }\n    },\n    '偶数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 0);\n        }\n    },\n    '奇数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 1);\n        }\n    },\n    '二乗': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            return a * a;\n        }\n    },\n    'べき乗': {\n        type: 'func',\n        josi: [['の'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.pow(a, b);\n        }\n    },\n    '以上': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a >= b;\n        }\n    },\n    '以下': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a <= b;\n        }\n    },\n    '未満': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a < b;\n        }\n    },\n    '超': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a > b;\n        }\n    },\n    '等': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a === b;\n        }\n    },\n    '等無': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a !== b;\n        }\n    },\n    '一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA === jsonB;\n            }\n            return a === b;\n        }\n    },\n    '不一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA !== jsonB;\n            }\n            return a !== b;\n        }\n    },\n    '範囲内': {\n        type: 'func',\n        josi: [['が'], ['から'], ['の', 'までの']],\n        pure: true,\n        fn: function (v, a, b) {\n            return (a <= v) && (v <= b);\n        }\n    },\n    '連続加算': {\n        type: 'func',\n        josi: [['を'], ['に', 'と']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (b, ...a) {\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\n            a.push(b);\n            return a.reduce((p, c) => p + c);\n        }\n    },\n    // @敬語\n    'ください': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'お願': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'です': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    '拝啓': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu = 0;\n        },\n        return_none: true\n    },\n    '敬具': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu += 100; // bonus point\n        },\n        return_none: true\n    },\n    '礼節レベル取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            return sys.__reisetu;\n        }\n    },\n    // @特殊命令\n    'JS実行': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fn: function (src, sys) {\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\n            // https://github.com/kujirahand/nadesiko3/issues/1237\n            return eval(src); // eslint-disable-line\n        }\n    },\n    'JSオブジェクト取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (name, sys) {\n            return sys.__findVar(name, null);\n        }\n    },\n    'JS関数実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        fn: function (name, args) {\n            // nameが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof name === 'string') {\n                name = eval(name);\n            }\n            if (typeof name !== 'function') {\n                throw new Error('JS関数取得で実行できません。');\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            // eslint-disable-next-line prefer-spread\n            return name.apply(null, args);\n        }\n    },\n    'ASYNC': {\n        type: 'func',\n        josi: [],\n        asyncFn: true,\n        fn: async function () {\n            // empty\n        },\n        return_none: true\n    },\n    'AWAIT実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        asyncFn: true,\n        fn: async function (f, args, sys) {\n            // nameが文字列ならevalして関数を得る\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, 'AWAIT実行');\n            }\n            if (!(f instanceof Function)) {\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\n            }\n            // 実行\n            return await f(...args);\n        }\n    },\n    'JSメソッド実行': {\n        type: 'func',\n        josi: [['の'], ['を'], ['で']],\n        fn: function (obj, m, args) {\n            // objが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof obj === 'string') {\n                obj = eval(obj);\n            }\n            if (typeof obj !== 'object') {\n                throw new Error('JSオブジェクトを取得できませんでした。');\n            }\n            // method を求める\n            if (typeof m !== 'function') {\n                m = obj[m];\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            return m.apply(obj, args);\n        }\n    },\n    'ナデシコ': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: false,\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\n            }\n            sys.__varslist[0]['表示ログ'] = '';\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    'ナデシコ続': {\n        type: 'func',\n        josi: [['を', 'で']],\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\n            }\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    '実行': {\n        type: 'func',\n        josi: [['を', 'に', 'で']],\n        pure: false,\n        fn: function (f, sys) {\n            // #938 の規則に従って処理\n            // 引数が関数なら実行\n            if (typeof f === 'function') {\n                return f(sys);\n            }\n            // 文字列なら関数に変換できるか判定して実行\n            if (typeof f === 'string') {\n                const tf = sys.__findFunc(f, '実行');\n                if (typeof tf === 'function') {\n                    return tf(sys);\n                }\n            }\n            // それ以外ならそのまま値を返す\n            return f;\n        }\n    },\n    '実行時間計測': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (f, sys) {\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '実行時間計測');\n            }\n            //\n            if (performance && performance.now) {\n                const t1 = performance.now();\n                f(sys);\n                const t2 = performance.now();\n                return (t2 - t1);\n            }\n            else {\n                const t1 = Date.now();\n                f(sys);\n                const t2 = Date.now();\n                return (t2 - t1);\n            }\n        }\n    },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            sys.__v0.forceClose = true;\n            if (!sys.__v0.useDebug) {\n                throw new Error('__終わる__');\n            }\n        }\n    },\n    // @型変換\n    '変数型確認': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    'TYPEOF': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    '文字列変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    'TOSTR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    '整数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'TOINT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    '実数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'TOFLOAT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'INT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'FLOAT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'NAN判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return isNaN(v);\n        }\n    },\n    '非数判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n            return Number.isNaN(v);\n        }\n    },\n    'HEX': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return parseInt(a).toString(16);\n        }\n    },\n    '進数変換': {\n        type: 'func',\n        josi: [['を', 'の'], ['']],\n        pure: true,\n        fn: function (v, n) {\n            return parseInt(v).toString(n);\n        }\n    },\n    '二進': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v).toString(2);\n        }\n    },\n    '二進表示': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v, sys) {\n            const s = parseInt(v).toString(2);\n            sys.__exec('表示', [s, sys]);\n        }\n    },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['の'], ['で']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + (parseInt('' + v).toString(16));\n                return v2.substring(v2.length - 2, v2.length);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        }\n    },\n    // @論理演算\n    '論理OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a || b);\n        }\n    },\n    '論理AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a && b);\n        }\n    },\n    '論理NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (!v) ? 1 : 0;\n        }\n    },\n    // @ビット演算\n    'OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a | b);\n        }\n    },\n    'AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a & b);\n        }\n    },\n    'XOR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a ^ b);\n        }\n    },\n    'NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (~v);\n        }\n    },\n    'SHIFT_L': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a << b);\n        }\n    },\n    'SHIFT_R': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >> b);\n        }\n    },\n    'SHIFT_UR': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >>> b);\n        }\n    },\n    // @文字列処理\n    '文字数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).length;\n            }\n            return Array.from(v).length;\n        }\n    },\n    '何文字目': {\n        type: 'func',\n        josi: [['で', 'の'], ['が']],\n        pure: true,\n        fn: function (s, a) {\n            return String(s).indexOf(a) + 1;\n        }\n    },\n    'CHR': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.fromCodePoint) {\n                return String.fromCharCode(v);\n            }\n            return String.fromCodePoint(v);\n        }\n    },\n    'ASC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.prototype.codePointAt) {\n                return String(v).charCodeAt(0);\n            }\n            return String(v).codePointAt(0);\n        }\n    },\n    '文字挿入': {\n        type: 'func',\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, i, a) {\n            if (i <= 0) {\n                i = 1;\n            }\n            const ss = String(s);\n            const mae = ss.substring(0, i - 1);\n            const usi = ss.substring(i - 1);\n            return mae + a + usi;\n        }\n    },\n    '文字検索': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, b) {\n            let str = String(s);\n            str = str.substring(a);\n            const res = str.indexOf(b);\n            if (res === -1) {\n                return 0;\n            }\n            return res + 1 + a;\n        }\n    },\n    '追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a);\n        }\n    },\n    '一行追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a) + '\\n';\n        }\n    },\n    '文字列分解': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).split('');\n            }\n            return Array.from(v);\n        }\n    },\n    'リフレイン': {\n        type: 'func',\n        josi: [['を', 'の'], ['で']],\n        pure: true,\n        fn: function (v, cnt) {\n            let s = '';\n            for (let i = 0; i < cnt; i++) {\n                s += String(v);\n            }\n            return s;\n        }\n    },\n    '出現回数': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            return s.split(a).length - 1;\n        }\n    },\n    'MID': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    '文字抜出': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を', '']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    'LEFT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    '文字左部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    'RIGHT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '文字右部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '区切': {\n        type: 'func',\n        josi: [['の', 'を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            return ('' + s).split('' + a);\n        }\n    },\n    '文字列分割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            const i = s.indexOf(a);\n            if (i < 0) {\n                return [s];\n            }\n            return [s.substring(0, i), s.substring(i + a.length)];\n        }\n    },\n    '切取': {\n        type: 'func',\n        josi: [['から', 'の'], ['まで', 'を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            s = String(s);\n            const i = s.indexOf(a);\n            if (i < 0) {\n                sys.__v0['対象'] = '';\n                return s;\n            }\n            sys.__v0['対象'] = s.substring(i + a.length);\n            return s.substring(0, i);\n        }\n    },\n    '文字削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\n        pure: true,\n        fn: function (s, a, b) {\n            s = '' + s;\n            const mae = s.substring(0, a - 1);\n            const usi = s.substring((a - 1 + b));\n            return mae + usi;\n        }\n    },\n    // @置換・トリム\n    '置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            return String(s).split(a).join(b);\n        }\n    },\n    '単置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            // replaceは最初の一度だけ置換する\n            return String(s).replace(a, b);\n        }\n    },\n    'トリム': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    '空白除去': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    // @文字変換\n    '大文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toUpperCase();\n        }\n    },\n    '小文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toLowerCase();\n        }\n    },\n    '平仮名変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const kanaToHira = (str) => {\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\n                    const chr = m.charCodeAt(0) - 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return kanaToHira('' + s);\n        }\n    },\n    'カタカナ変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const hiraToKana = (str) => {\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\n                    const chr = m.charCodeAt(0) + 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return hiraToKana('' + s);\n        }\n    },\n    '英数全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    '英数記号全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数記号半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    'カタカナ全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            let str = '';\n            let i = 0;\n            while (i < s.length) {\n                // 濁点の変換\n                const c2 = s.substring(i, i + 2);\n                const n2 = han2.indexOf(c2);\n                if (n2 >= 0) {\n                    str += zen2.charAt(n2 / 2);\n                    i += 2;\n                    continue;\n                }\n                // 濁点以外の変換\n                const c = s.charAt(i);\n                const n = han1.indexOf(c);\n                if (n >= 0) {\n                    str += zen1.charAt(n);\n                    i++;\n                    continue;\n                }\n                str += c;\n                i++;\n            }\n            return str;\n        }\n    },\n    'カタカナ半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            return s.split('').map((c) => {\n                const i = zen1.indexOf(c);\n                if (i >= 0) {\n                    return han1.charAt(i);\n                }\n                const j = zen2.indexOf(c);\n                if (j >= 0) {\n                    return han2.substring(j * 2, j * 2 + 2);\n                }\n                return c;\n            }).join('');\n        }\n    },\n    '全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\n            result = sys.__exec('英数記号全角変換', [result, sys]);\n            return result;\n        }\n    },\n    '半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\n            result = sys.__exec('英数記号半角変換', [result, sys]);\n            return result;\n        }\n    },\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' },\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' },\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' },\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' },\n    // @JSON\n    'JSONエンコード': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v);\n        }\n    },\n    'JSONエンコード整形': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v, null, 2);\n        }\n    },\n    'JSONデコード': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (s) {\n            return JSON.parse(s);\n        }\n    },\n    // @正規表現\n    '正規表現マッチ': {\n        type: 'func',\n        josi: [['を', 'が'], ['で', 'に']],\n        pure: true,\n        fn: function (a, b, sys) {\n            let re;\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\n            // パターンがない場合\n            if (f === null) {\n                re = new RegExp(b, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            const sa = sys.__varslist[0]['抽出文字列'] = [];\n            const m = String(a).match(re);\n            let result = m;\n            if (re.global) {\n                // no groups\n            }\n            else if (m) {\n                // has group?\n                if (m.length > 0) {\n                    result = m[0];\n                    for (let i = 1; i < m.length; i++) {\n                        sa[i - 1] = m[i];\n                    }\n                }\n            }\n            return result;\n        }\n    },\n    '抽出文字列': { type: 'const', value: [] },\n    '正規表現置換': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).replace(re, b);\n        }\n    },\n    '正規表現区切': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).split(re);\n        }\n    },\n    // @指定形式\n    '通貨形式': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        }\n    },\n    'ゼロ埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = '0';\n            for (let i = 0; i < a; i++) {\n                z += '0';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    '空白埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = ' ';\n            for (let i = 0; i < a; i++) {\n                z += ' ';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    // @文字種類\n    'かなか判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x3041 && c <= 0x309F);\n        }\n    },\n    'カタカナ判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x30A1 && c <= 0x30FA);\n        }\n    },\n    '数字判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charAt(0);\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\n        }\n    },\n    '数列判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\n            return String(s).match(checkerRE) !== null;\n        }\n    },\n    // @配列操作\n    '配列結合': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, s) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.join('' + s);\n            }\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\n            return a2.join('' + s);\n        }\n    },\n    '配列検索': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, s) {\n            if (a instanceof Array) {\n                return a.indexOf(s);\n            } // 配列ならOK\n            return -1;\n        }\n    },\n    '配列要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.length;\n            } // 配列ならOK\n            if (a instanceof Object) {\n                return Object.keys(a).length;\n            }\n            return 1;\n        }\n    },\n    '要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    '配列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (a instanceof Array) {\n                return a.splice(i, 0, s);\n            } // 配列ならOK\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列一括挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, b) {\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\n                for (let j = 0; j < b.length; j++) {\n                    a.splice(i + j, 0, b[j]);\n                }\n                return a;\n            }\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.sort();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列数値ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.sort((a, b) => {\n                    return parseFloat(a) - parseFloat(b);\n                });\n            }\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列カスタムソート': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: false,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\n            }\n            if (a instanceof Array) {\n                return a.sort(ufunc);\n            }\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\n        }\n    },\n    '配列逆順': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.reverse();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列シャッフル': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) { // 配列ならOK\n                for (let i = a.length - 1; i > 0; i--) {\n                    const r = Math.floor(Math.random() * (i + 1));\n                    const tmp = a[i];\n                    a[i] = a[r];\n                    a[r] = tmp;\n                }\n                return a;\n            }\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\n        }\n    },\n    '配列削除': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: false,\n        fn: function (a, i, sys) {\n            return sys.__exec('配列切取', [a, i, sys]);\n        }\n    },\n    '配列切取': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            // 配列変数のとき\n            if (a instanceof Array) {\n                const b = a.splice(i, 1);\n                if (b instanceof Array) {\n                    return b[0];\n                } // 切り取った戻り値は必ずArrayになるので。\n                return null;\n            }\n            // 辞書型変数のとき\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\n                if (a[i]) {\n                    const old = a[i];\n                    delete a[i];\n                    return old;\n                }\n                return undefined;\n            }\n            throw new Error('『配列切取』で配列以外を指定。');\n        }\n    },\n    '配列取出': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, i, cnt) {\n            if (a instanceof Array) {\n                return a.splice(i, cnt);\n            }\n            throw new Error('『配列取出』で配列以外を指定。');\n        }\n    },\n    '配列ポップ': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.pop();\n            }\n            throw new Error('『配列ポップ』で配列以外の処理。');\n        }\n    },\n    '配列プッシュ': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b, sys) {\n            return sys.__exec('配列追加', [a, b, sys]);\n        }\n    },\n    '配列追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) { // 配列ならOK\n                a.push(b);\n                return a;\n            }\n            throw new Error('『配列追加』で配列以外の処理。');\n        }\n    },\n    '配列複製': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列足': {\n        type: 'func',\n        josi: [['に', 'へ', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) {\n                return a.concat(b);\n            }\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列最大値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.max(x, y));\n        }\n    },\n    '配列最小値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.min(x, y));\n        }\n    },\n    '配列合計': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                let v = 0;\n                a.forEach((n) => {\n                    const nn = parseFloat(n);\n                    if (isNaN(nn)) {\n                        return;\n                    }\n                    v += nn;\n                });\n                return v;\n            }\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\n        }\n    },\n    '配列入替': {\n        type: 'func',\n        josi: [['の'], ['と'], ['を']],\n        pure: true,\n        fn: function (a, i, j) {\n            if (!(a instanceof Array)) {\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\n            }\n            const tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n            return a;\n        }\n    },\n    '配列連番作成': {\n        type: 'func',\n        josi: [['から'], ['までの', 'まで', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = a; i <= b; i++) {\n                result.push(i);\n            }\n            return result;\n        }\n    },\n    '配列要素作成': {\n        type: 'func',\n        josi: [['を'], ['だけ']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = 0; i < b; i++) {\n                result.push(a);\n            }\n            return result;\n        }\n    },\n    '配列関数適用': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列関数適用');\n            }\n            const result = [];\n            for (const e of a) {\n                result.push(ufunc(e));\n            }\n            return result;\n        }\n    },\n    '配列マップ': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            return sys.__exec('配列関数適用', [f, a, sys]);\n        }\n    },\n    '配列フィルタ': {\n        type: 'func',\n        josi: [['で', 'の'], ['を', 'について']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列フィルタ');\n            }\n            const result = [];\n            for (const e of a) {\n                if (ufunc(e)) {\n                    result.push(e);\n                }\n            }\n            return result;\n        }\n    },\n    // @二次元配列処理\n    '表ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                if (ns === ms) {\n                    return 0;\n                }\n                else if (ns < ms) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n            });\n            return a;\n        }\n    },\n    '表数値ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                return ns - ms;\n            });\n            return a;\n        }\n    },\n    '表ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\n        }\n    },\n    '表完全一致ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => row[no] === s);\n        }\n    },\n    '表検索': {\n        type: 'func',\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, row, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表検索』には配列を指定する必要があります。');\n            }\n            for (let i = row; i < a.length; i++) {\n                if (a[i][col] === s) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表列数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列数』には配列を指定する必要があります。');\n            }\n            let cols = 1;\n            for (let i = 0; i < a.length; i++) {\n                if (a[i].length > cols) {\n                    cols = a[i].length;\n                }\n            }\n            return cols;\n        }\n    },\n    '表行数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行数』には配列を指定する必要があります。');\n            }\n            return a.length;\n        }\n    },\n    '表行列交換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\n                }\n            }\n            return res;\n        }\n    },\n    '表右回転': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表右回転』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = a[rows - c - 1][r];\n                }\n            }\n            return res;\n        }\n    },\n    '表重複削除': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            const keys = {};\n            for (let n = 0; n < a.length; n++) {\n                const k = a[n][i];\n                if (undefined === keys[k]) {\n                    keys[k] = true;\n                    res.push(a[n]);\n                }\n            }\n            return res;\n        }\n    },\n    '表列取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列取得』には配列を指定する必要があります。');\n            }\n            const res = a.map(row => row[i]);\n            return res;\n        }\n    },\n    '表列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row, idx) => {\n                let nr = [];\n                if (i > 0) {\n                    nr = nr.concat(row.slice(0, i));\n                }\n                nr.push(s[idx]);\n                nr = nr.concat(row.slice(i));\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列削除': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row) => {\n                const nr = row.slice(0);\n                nr.splice(i, 1);\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列合計': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列合計』には配列を指定する必要があります。');\n            }\n            let sum = 0;\n            a.forEach((row) => { sum += row[i]; });\n            return sum;\n        }\n    },\n    '表曖昧検索': {\n        type: 'func',\n        josi: [['の'], ['から'], ['で'], ['を']],\n        pure: true,\n        fn: function (a, row, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            for (let i = row; i < a.length; i++) {\n                const line = a[i];\n                if (re.test(line[col])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表正規表現ピックアップ': {\n        type: 'func',\n        josi: [['の', 'で'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            const res = [];\n            for (let i = 0; i < a.length; i++) {\n                const row = a[i];\n                if (re.test(row[col])) {\n                    res.push(row.slice(0));\n                }\n            }\n            return res;\n        }\n    },\n    // @辞書型変数の操作\n    '辞書キー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const keys = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    keys.push(key);\n                }\n                return keys;\n            }\n            if (a instanceof Array) { // 配列なら数字を返す\n                for (let i = 0; i < a.length; i++) {\n                    keys.push(i);\n                }\n                return keys;\n            }\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: true,\n        fn: function (a, key) {\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                if (key in a) {\n                    delete a[key];\n                }\n                return a;\n            }\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @ハッシュ\n    'ハッシュキー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('辞書キー列挙', [a, sys]);\n        }\n    },\n    'ハッシュ内容列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const body = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    body.push(a[key]);\n                }\n                return body;\n            }\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    'ハッシュキー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: false,\n        fn: function (a, key, sys) {\n            return sys.__exec('辞書キー削除', [a, key, sys]);\n        }\n    },\n    'ハッシュキー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @タイマー\n    '秒待': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: function (n, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    // タイマーを仕掛ける\n                    const timerId = setTimeout(() => {\n                        // タイマー使用中リストに追加したIDを削除\n                        const i = sys.__timeout.indexOf(timerId);\n                        if (i >= 0) {\n                            sys.__timeout.splice(i, 1);\n                        }\n                        // Promiseを終了\n                        resolve();\n                    }, parseFloat(n) * 1000);\n                    // タイマー使用中リストに追加\n                    sys.__timeout.push(timerId);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        },\n        return_none: true\n    },\n    '秒待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒逐次待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒後': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒後');\n            }\n            // 1回限りのタイマーをセット\n            const timerId = setTimeout(() => {\n                // 使用中リストに追加したIDを削除\n                const i = sys.__timeout.indexOf(timerId);\n                if (i >= 0) {\n                    sys.__timeout.splice(i, 1);\n                }\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                try {\n                    f(timerId, sys);\n                }\n                catch (e) {\n                    let err = e;\n                    if (!(e instanceof NakoRuntimeError)) {\n                        err = new NakoRuntimeError(e, sys.__varslist[0].line);\n                    }\n                    sys.logger.error(err);\n                }\n            }, parseFloat(n) * 1000);\n            sys.__timeout.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒毎': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒毎');\n            }\n            // タイマーをセット\n            const timerId = setInterval(() => {\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                f(timerId, sys);\n            }, parseFloat(n) * 1000);\n            // タイマーIDを追加\n            sys.__interval.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒タイマー開始時': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            return sys.__exec('秒毎', [f, n, sys]);\n        }\n    },\n    'タイマー停止': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (timerId, sys) {\n            const i = sys.__interval.indexOf(timerId);\n            if (i >= 0) {\n                sys.__interval.splice(i, 1);\n                clearInterval(timerId);\n                return true;\n            }\n            const j = sys.__timeout.indexOf(timerId);\n            if (j >= 0) {\n                sys.__timeout.splice(j, 1);\n                clearTimeout(timerId);\n                return true;\n            }\n            return false;\n        },\n        return_none: false\n    },\n    '全タイマー停止': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // clearInterval\n            for (let i = 0; i < sys.__interval.length; i++) {\n                const timerId = sys.__interval[i];\n                clearInterval(timerId);\n            }\n            sys.__interval = [];\n            // clearTimeout\n            for (let i = 0; i < sys.__timeout.length; i++) {\n                const timerId = sys.__timeout[i];\n                clearTimeout(timerId);\n            }\n            sys.__timeout = [];\n        },\n        return_none: true\n    },\n    // @日時処理(簡易)\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] },\n    '今': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const z2 = (n) => {\n                n = '00' + n;\n                return n.substring(n.length - 2, n.length);\n            };\n            const t = new Date();\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n        }\n    },\n    'システム時間': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return Math.floor(now.getTime() / 1000);\n        }\n    },\n    'システム時間ミリ秒': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return now.getTime();\n        }\n    },\n    '今日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            return sys.__formatDate(new Date());\n        }\n    },\n    '明日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() + (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '昨日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() - (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '今年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear();\n        }\n    },\n    '来年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() + 1;\n        }\n    },\n    '去年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() - 1;\n        }\n    },\n    '今月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 1;\n        }\n    },\n    '来月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 2;\n        }\n    },\n    '先月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth();\n        }\n    },\n    '曜日': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return '日月火水木金土'.charAt(d.getDay() % 7);\n        }\n    },\n    '曜日番号取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s) {\n            const a = s.split('/');\n            const t = new Date(a[0], a[1] - 1, a[2]);\n            return t.getDay();\n        }\n    },\n    'UNIXTIME変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    'UNIX時間変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    '日時変換': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (tm, sys) {\n            const t = tm * 1000;\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\n        }\n    },\n    '日時書式変換': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (tm, fmt, sys) {\n            const t = sys.__str2date(tm);\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\n                switch (m) {\n                    case 'YYYY': return t.getFullYear();\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\n                    case 'DD': return sys.__zero2(t.getDate());\n                    case 'M': return (t.getMonth() + 1);\n                    case 'D': return (t.getDate());\n                    case 'HH': return sys.__zero2(t.getHours());\n                    case 'mm': return sys.__zero2(t.getMinutes());\n                    case 'ss': return sys.__zero2(t.getSeconds());\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\n                    case 'H': return (t.getHours());\n                    case 'm': return (t.getMinutes());\n                    case 's': return (t.getSeconds());\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\n                }\n                return m;\n            });\n            return fmt;\n        }\n    },\n    '和暦変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            const t = d.getTime();\n            for (const era of sys.__v0['元号データ']) {\n                const gengo = era['元号'];\n                const d2 = sys.__str2date(era['改元日']);\n                const t2 = d2.getTime();\n                if (t2 <= t) {\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\n                    if (y === 1) {\n                        y = '元';\n                    }\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\n                }\n            }\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\n        }\n    },\n    '年数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return (t2.getFullYear() - t1.getFullYear());\n        }\n    },\n    '月数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\n                (t1.getFullYear() * 12 + t1.getMonth()));\n        }\n    },\n    '日数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\n            return days;\n        }\n    },\n    '時間差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\n            return hours;\n        }\n    },\n    '分差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const min = Math.ceil((t2 - t1) / (60));\n            return min;\n        }\n    },\n    '秒差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const sec = Math.ceil((t2 - t1));\n            return sec;\n        }\n    },\n    '日時差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\n        pure: true,\n        fn: function (a, b, unit, sys) {\n            switch (unit) {\n                case '年': return sys.__exec('年数差', [a, b, sys]);\n                case '月': return sys.__exec('月数差', [a, b, sys]);\n                case '日': return sys.__exec('日数差', [a, b, sys]);\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\n                case '分': return sys.__exec('分差', [a, b, sys]);\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\n            }\n            throw new Error('『日時差』で不明な単位です。');\n        }\n    },\n    '時間加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const op = a.charAt(0);\n            if (op === '-' || op === '+') {\n                a = a.substring(1);\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + ':0:0').split(':');\n            let sec = parseInt(aa[0]) * 60 * 60 +\n                parseInt(aa[1]) * 60 +\n                parseInt(aa[2]);\n            if (op === '-') {\n                sec *= -1;\n            }\n            const rd = new Date(d.getTime() + (sec * 1000));\n            return sys.__formatDateTime(rd, s);\n        }\n    },\n    '日付加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            let op = 1;\n            const opc = a.charAt(0);\n            if (opc === '-' || opc === '+') {\n                a = a.substring(1);\n                if (opc === '-') {\n                    op *= -1;\n                }\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + '/0/0').split('/');\n            const addY = parseInt(aa[0]) * op;\n            const addM = parseInt(aa[1]) * op;\n            const addD = parseInt(aa[2]) * op;\n            d.setFullYear(d.getFullYear() + addY);\n            d.setMonth(d.getMonth() + addM);\n            d.setDate(d.getDate() + addD);\n            return sys.__formatDateTime(d, s);\n        }\n    },\n    '日時加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\n            if (!r) {\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\n            }\n            switch (r[3]) {\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\n            }\n        }\n    },\n    '時間ミリ秒取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            if (performance && performance.now) {\n                return performance.now();\n            }\n            else if (Date.now) {\n                return Date.now();\n            }\n            else {\n                const now = new Date();\n                return now.getTime();\n            }\n        }\n    },\n    // @デバッグ支援\n    'エラー発生': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s) {\n            throw new Error(s);\n        }\n    },\n    '__DEBUG': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.isDebug = true;\n            console.log(sys);\n        }\n    },\n    '__DEBUG強制待機': { type: 'const', value: 0 },\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] },\n    '__DEBUG待機フラグ': { type: 'const', value: 0 },\n    '__DEBUG_BP_WAIT': {\n        type: 'func',\n        josi: [['で']],\n        pure: true,\n        asyncFn: true,\n        fn: function (curLine, sys) {\n            return new Promise((resolve) => {\n                const breakpoints = sys.__v0['__DEBUGブレイクポイント一覧'];\n                const forceLine = sys.__v0['__DEBUG強制待機'];\n                sys.__v0['__DEBUG強制待機'] = 0;\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\n                    console.log('@STOP!!!! cur=', curLine);\n                    const timerId = setInterval(() => {\n                        if (sys.__v0['__DEBUG待機フラグ'] === 1) {\n                            sys.__v0['__DEBUG待機フラグ'] = 0;\n                            clearInterval(timerId);\n                            resolve(curLine);\n                        }\n                    }, 500);\n                }\n                else {\n                    resolve(curLine);\n                }\n            });\n        }\n    },\n    'グローバル関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[1];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[0];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数存在': {\n        type: 'func',\n        josi: [['が', 'の']],\n        pure: true,\n        fn: function (fname, sys) {\n            return (typeof sys.__v0[fname] !== 'undefined');\n        }\n    },\n    'プラグイン一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.pluginfiles) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    'モジュール一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.__module) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    '助詞一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            return new Promise((resolve, reject) => {\n                import('./nako_josi_list.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    resolve(obj.josiList);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    '予約語一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            // const words = require('./nako_reserved_words.mjs')\n            return new Promise((resolve, reject) => {\n                import('./nako_reserved_words.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    const w = [];\n                    for (const key in obj.default) {\n                        w.push(key);\n                    }\n                    resolve(w);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    // @プラグイン管理\n    'プラグイン名': { type: 'const', value: 'メイン' },\n    'プラグイン名設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__v0['プラグイン名'] = s;\n        },\n        return_none: true\n    },\n    '名前空間': { type: 'const', value: '' },\n    '名前空間設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            // push namespace\n            sys.__namespaceList.push([sys.__v0['名前空間'], sys.__v0['プラグイン名']]);\n            sys.__v0['名前空間'] = s;\n        },\n        return_none: true\n    },\n    '名前空間ポップ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // pop namespace\n            const a = sys.__namespaceList.pop();\n            if (a) {\n                sys.__v0['名前空間'] = a[0];\n                sys.__v0['プラグイン名'] = a[1];\n            }\n        },\n        return_none: true\n    },\n    // @URLエンコードとパラメータ\n    'URLエンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            return encodeURIComponent(text);\n        }\n    },\n    'URLデコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            return decodeURIComponent(text);\n        }\n    },\n    'URLパラメータ解析': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const res = {};\n            if (typeof url !== 'string') {\n                return res;\n            }\n            const p = url.split('?');\n            if (p.length <= 1) {\n                return res;\n            }\n            const params = p[1].split('&');\n            for (const line of params) {\n                const line2 = line + '=';\n                const kv = line2.split('=');\n                const k = sys.__exec('URLデコード', [kv[0]]);\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\n            }\n            return res;\n        }\n    },\n    // @BASE64\n    'BASE64エンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            // browser?\n            if (typeof (window) !== 'undefined' && window.btoa) {\n                const u8a = new TextEncoder().encode(text);\n                const utf8str = String.fromCharCode.apply(null, u8a);\n                return btoa(utf8str);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text).toString('base64');\n            }\n            throw new Error('『BASE64エンコード』は利用できません。');\n        }\n    },\n    'BASE64デコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            if (typeof (window) !== 'undefined' && window.atob) {\n                const decodedUtf8str = atob(text);\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\n                const decodedArray = new Uint8Array(dec);\n                return new TextDecoder('UTF-8').decode(decodedArray);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text, 'base64').toString();\n            }\n            throw new Error('『BASE64デコード』は利用できません。');\n        }\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\nexport const opPriority = {\n    // and or\n    'and': 1,\n    'or': 1,\n    // compare\n    'eq': 2,\n    'noteq': 2,\n    '===': 2,\n    '!==': 2,\n    'gt': 2,\n    'gteq': 2,\n    'lt': 2,\n    'lteq': 2,\n    '&': 3,\n    // + - << >> >>>\n    '+': 4,\n    '-': 4,\n    'shift_l': 4,\n    'shift_r': 4,\n    'shift_r0': 4,\n    // * /\n    '*': 5,\n    '/': 5,\n    '÷': 5,\n    '÷÷': 5,\n    '%': 5,\n    // ^\n    '^': 6,\n    '**': 6\n};\nexport const RenbunJosi = [\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\n];\nexport const operatorList = [];\nfor (const key in opPriority) {\n    operatorList.push(key);\n}\n","/**\n * なでしこ3 の TypeScript のための型定義\n */\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\n    return {\n        type,\n        value,\n        indent,\n        line,\n        column: 0,\n        file,\n        josi: ''\n    };\n}\n","/**\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\n */\nexport function isIndentChars(ch) {\n    const code = ch.charCodeAt(0);\n    // 特別なコード\n    if (ch === '\\t') {\n        return 4;\n    }\n    if (ch === ' ' || ch === '|') {\n        return 1;\n    }\n    if (ch === '・' || ch === '　') {\n        return 2;\n    }\n    if (ch === '⏋' || ch === '⏌') {\n        return 2;\n    } // 0x23CB, 0x23CC\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\n    if (code >= 0x2500 && code <= 0x257F) {\n        return 2;\n    }\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\n        (code >= 0x23B8 && code <= 0x23BF)) {\n        return 2;\n    }\n    return 0;\n}\n","/**\n * なでしこ3字句解析のためのルール\n */\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\nconst hira = /^[ぁ-ん]/;\nconst allHiragana = /^[ぁ-ん]+$/;\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\nconst wordSpecial = /^(かつ|または)/;\nconst errorRead = (ch) => {\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\n};\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\n/** トークンに区切るルールの一覧 */\nexport const rules = [\n    // 上から順にマッチさせていく\n    { name: 'ここまで', pattern: /^;;;/ },\n    { name: 'eol', pattern: /^\\n/ },\n    { name: 'eol', pattern: /^;/ },\n    // eslint-disable-next-line no-control-regex\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ },\n    { name: 'comma', pattern: /^,/ },\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\n    { name: 'def_test', pattern: /^●テスト:/ },\n    { name: 'def_func', pattern: /^●/ },\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'ここから', pattern: /^(ここから),?/ },\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\n    { name: 'もし', pattern: /^もしも?/ },\n    // 「ならば」は助詞として定義している\n    { name: '違えば', pattern: /^違(えば)?/ },\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\n    // @see nako_reserved_words.js\n    { name: 'shift_r0', pattern: /^>>>/ },\n    { name: 'shift_r', pattern: /^>>/ },\n    { name: 'shift_l', pattern: /^<</ },\n    { name: '===', pattern: /^===/ },\n    { name: '!==', pattern: /^!==/ },\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\n    { name: '←', pattern: /^(←|<--)/ },\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\n    { name: 'eq', pattern: /^(=|🟰)/ },\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ },\n    { name: 'not', pattern: /^(!|💡)/ },\n    { name: 'gt', pattern: /^>/ },\n    { name: 'lt', pattern: /^</ },\n    { name: 'and', pattern: /^(かつ|&&)/ },\n    { name: 'or', pattern: /^(または|或いは|あるいは|\\|\\|)/ },\n    { name: '@', pattern: /^@/ },\n    { name: '+', pattern: /^\\+/ },\n    { name: '-', pattern: /^-/ },\n    { name: '**', pattern: /^(××|\\*\\*)/ },\n    { name: '*', pattern: /^(×|\\*)/ },\n    { name: '÷÷', pattern: /^÷÷/ },\n    { name: '÷', pattern: /^(÷|\\/)/ },\n    { name: '%', pattern: /^%/ },\n    { name: '^', pattern: /^\\^/ },\n    { name: '&', pattern: /^&/ },\n    { name: '[', pattern: /^\\[/ },\n    { name: ']', pattern: /^]/, readJosi: true },\n    { name: '(', pattern: /^\\(/ },\n    { name: ')', pattern: /^\\)/, readJosi: true },\n    { name: '|', pattern: /^\\|/ },\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') },\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') },\n    { name: 'func', pattern: /^\\{関数\\},?/ },\n    { name: '{', pattern: /^\\{/ },\n    { name: '}', pattern: /^\\}/, readJosi: true },\n    { name: ':', pattern: /^:/ },\n    { name: '_eol', pattern: /^_\\s*\\n/ },\n    { name: 'dec_lineno', pattern: /^‰/ },\n    // 絵文字変数 = (絵文字)英数字*\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^《.+?》/, readJosi: true },\n    // 単語句\n    {\n        name: 'word',\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\n        cbParser: cbWordParser\n    }\n];\nexport function trimOkurigana(s) {\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\n    if (!hira.test(s)) {\n        return s.replace(/[ぁ-ん]+/g, '');\n    }\n    // 全てひらがな？ (例) どうぞ\n    if (allHiragana.test(s)) {\n        return s;\n    }\n    // 末尾のひらがなのみ (例)お願いします →お願\n    return s.replace(/[ぁ-ん]+$/g, '');\n}\n// Utility for Rule\nfunction cbRangeComment(src) {\n    let res = '';\n    const josi = '';\n    let numEOL = 0;\n    src = src.substring(2); // skip /*\n    const i = src.indexOf('*/');\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + 2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\n    return { src, res, josi, numEOL };\n}\n/**\n * @param {string} src\n */\nfunction cbWordParser(src, isTrimOkurigana = true) {\n    /*\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\n      hiragana = [ぁ-ん]\n      katakana = [ァ-ヶー]\n      emoji    = [\\u1F60-\\u1F6F]\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\n      alphabet = [_a-zA-Z]\n      numchars = [0-9]\n    */\n    let res = '';\n    let josi = '';\n    while (src !== '') {\n        // 1文字以上のとき\n        if (res.length > 0) {\n            // 「かつ」「または」なら分割する (#1379 core#84)\n            const jsw = wordSpecial.exec(src);\n            if (jsw) {\n                break;\n            }\n            // 助詞の判定\n            const j = josiRE.exec(src);\n            if (j) {\n                josi = j[0].replace(/^\\s+/, '');\n                src = src.substring(j[0].length);\n                // 助詞の直後にある「,」を飛ばす #877\n                if (src.charAt(0) === ',') {\n                    src = src.substr(1);\n                }\n                break;\n            }\n        }\n        // カタカナ漢字英数字か？\n        const m = kanakanji.exec(src);\n        if (m) {\n            res += m[0];\n            src = src.substring(m[0].length);\n            continue;\n        }\n        // ひらがな？\n        const h = hira.test(src);\n        if (h) {\n            res += src.charAt(0);\n            src = src.substring(1);\n            continue;\n        }\n        break; // other chars\n    }\n    // --- 単語分割における特殊ルール ---\n    // 「間」の特殊ルール (#831)\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\n    if (/[ぁ-ん]間$/.test(res)) {\n        src = res.charAt(res.length - 1) + src;\n        res = res.slice(0, -1);\n    }\n    // 「以上」「以下」「超」「未満」 #918\n    const ii = wordHasIjoIka.exec(res);\n    if (ii) {\n        src = ii[1] + josi + src;\n        josi = '';\n        res = res.substring(0, res.length - ii[1].length);\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 送り仮名の省略ルール\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\n    if (isTrimOkurigana) {\n        res = trimOkurigana(res);\n    }\n    // 助詞だけの語句の場合\n    if (res === '' && josi !== '') {\n        res = josi;\n        josi = '';\n    }\n    return { src, res, josi, numEOL: 0 };\n}\nfunction cbString(beginTag, closeTag, src) {\n    let res = '';\n    let josi = '';\n    let numEOL = 0;\n    src = src.substr(beginTag.length); // skip beginTag\n    const i = src.indexOf(closeTag);\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substr(0, i);\n        src = src.substr(i + closeTag.length);\n        // res の中に beginTag があればエラーにする #953\n        if (res.indexOf(beginTag) >= 0) {\n            if (beginTag === '『') {\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\n            }\n            else {\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\n            }\n        }\n    }\n    // 文字列直後の助詞を取得\n    const j = josiRE.exec(src);\n    if (j) {\n        josi = j[0].replace(/^\\s+/, '');\n        src = src.substr(j[0].length);\n        // 助詞の後のカンマ #877\n        if (src.charAt(0) === ',') {\n            src = src.substr(1);\n        }\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    return { src, res, josi, numEOL };\n}\nfunction parseNumber(n) {\n    return Number(n.replace(/_/g, ''));\n}\n","// なでしこの字句解析を行う\n// 既に全角半角を揃えたコードに対して字句解析を行う\nimport { opPriority } from './nako_parser_const.mjs';\n// 予約語句\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\n/** @types {Record<string, string>} */\nimport reservedWords from './nako_reserved_words.mjs';\nimport { isIndentChars } from './nako_indent_chars.mjs';\n// 助詞の一覧\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\n// 字句解析ルールの一覧\nimport { rules, unitRE } from './nako_lex_rules.mjs';\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\nexport class NakoLexer {\n    /**\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\n        this.funclist = {};\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\n        this.result = [];\n        this.modName = 'main.nako3'; // モジュール名\n    }\n    /** 関数一覧をセット */\n    setFuncList(listObj) {\n        this.funclist = listObj;\n    }\n    /**\n     * @param tokens\n     * @param {boolean} isFirst\n     * @param {string} filename\n     */\n    replaceTokens(tokens, isFirst, filename) {\n        this.result = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        // 関数の定義があれば funclist を更新\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist);\n        this._replaceWord(this.result);\n        if (isFirst) {\n            if (this.result.length > 0) {\n                const eof = this.result[this.result.length - 1];\n                this.result.push({\n                    type: 'eol',\n                    line: eof.line,\n                    column: 0,\n                    indent: -1,\n                    file: eof.file,\n                    josi: '',\n                    value: '---',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: eof.line,\n                    indent: -1,\n                    column: 0,\n                    file: eof.file,\n                    josi: '',\n                    value: '',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n            else {\n                this.result.push({\n                    type: 'eol',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '---',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n        }\n        return this.result;\n    }\n    /**\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\n     */\n    static preDefineFunc(tokens, logger, funclist) {\n        // 関数を先読みして定義\n        let i = 0;\n        let isFuncPointer = false;\n        const readArgs = () => {\n            const args = [];\n            const keys = {};\n            if (tokens[i].type !== '(') {\n                return [];\n            }\n            i++;\n            while (tokens[i]) {\n                const t = tokens[i];\n                i++;\n                if (t.type === ')') {\n                    break;\n                }\n                if (t.type === 'func') {\n                    isFuncPointer = true;\n                }\n                else if (t.type !== '|' && t.type !== 'comma') {\n                    if (isFuncPointer) {\n                        t.funcPointer = true;\n                        isFuncPointer = false;\n                    }\n                    args.push(t);\n                    if (!keys[t.value]) {\n                        keys[t.value] = [];\n                    }\n                    keys[t.value].push(t.josi);\n                }\n            }\n            const varnames = [];\n            const funcPointers = [];\n            const result = [];\n            const already = {};\n            for (const arg of args) {\n                if (!already[arg.value]) {\n                    const josi = keys[arg.value];\n                    result.push(josi);\n                    varnames.push(arg.value);\n                    if (arg.funcPointer) {\n                        funcPointers.push(arg.value);\n                    }\n                    else {\n                        funcPointers.push(null);\n                    }\n                    already[arg.value] = true;\n                }\n            }\n            return [result, varnames, funcPointers];\n        };\n        // トークンを一つずつ確認\n        while (i < tokens.length) {\n            // タイプの置換\n            const t = tokens[i];\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\n                t.josi = 'には';\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\n                i++;\n                continue;\n            }\n            // N回をN|回に置換\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\n                if (t.value.match(/回$/)) {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    // N回を挿入\n                    if (!t.endOffset) {\n                        t.endOffset = 1;\n                    }\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\n                    tokens.splice(i + 1, 0, kai);\n                    t.endOffset--;\n                    i++;\n                }\n            }\n            // 予約語の置換\n            if (t.type === 'word' && reservedWords[t.value]) {\n                t.type = reservedWords[t.value];\n                if (t.value === 'そう') {\n                    t.value = 'それ';\n                }\n            }\n            // 関数定義の確認\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\n                i++;\n                continue;\n            }\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\n            let isMumei = true;\n            let prevToken = { type: 'eol' };\n            if (i >= 1) {\n                prevToken = tokens[i - 1];\n            }\n            if (prevToken.type === 'eol') {\n                isMumei = false;\n            }\n            // 関数名や引数を得る\n            const defToken = t;\n            i++; // skip \"●\" or \"関数\"\n            let josi = [];\n            let varnames = [];\n            let funcPointers = [];\n            let funcName = '';\n            let funcNameToken = null;\n            // 関数名の前に引数定義\n            if (tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 関数名を得る\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\n                funcNameToken = tokens[i++];\n                funcName = funcNameToken.value;\n            }\n            // 関数名の後で引数定義\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\n            // 無名関数は登録しないように気をつける\n            if (funcName !== '' && funcNameToken) {\n                const modName = NakoLexer.filenameToModName(t.file);\n                funcName = modName + '__' + funcName;\n                if (funcName in funclist) { // 関数の二重定義を警告\n                    // main__は省略 #1223\n                    const dispName = funcName.replace(/^main__/, '');\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\n                }\n                funcNameToken.value = funcName;\n                funclist[funcName] = {\n                    type: 'func',\n                    josi,\n                    fn: null,\n                    asyncFn: false,\n                    varnames,\n                    funcPointers\n                };\n            }\n            // 無名関数のために\n            defToken.meta = {\n                type: 'func',\n                josi,\n                varnames,\n                funcPointers\n            };\n        }\n    }\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\n    splitStringEx(code) {\n        /** @type {string[]} */\n        const list = [];\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\n        const arr = code.split(/[{｛]/);\n        list.push(arr[0]);\n        for (const s of arr.slice(1)) {\n            const end = s.replace('｝', '}').indexOf('}');\n            if (end === -1) {\n                return null;\n            }\n            list.push(s.slice(0, end), s.slice(end + 1));\n        }\n        return list;\n    }\n    _replaceWord(tokens) {\n        let comment = [];\n        let i = 0;\n        const getLastType = () => {\n            if (i <= 0) {\n                return 'eol';\n            }\n            return tokens[i - 1].type;\n        };\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main.nako3';\n        while (i < tokens.length) {\n            const t = tokens[i];\n            // モジュール名の変更に対応\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\n                modSelf = tokens[i - 1].value;\n            }\n            // 関数を強制的に置換( word => func )\n            if (t.type === 'word' && t.value !== 'それ') {\n                // 関数を変換\n                const funcName = t.value;\n                if (funcName.indexOf('__') < 0) {\n                    // 自身のモジュール名を検索\n                    const gname1 = `${modSelf}__${funcName}`;\n                    const gfo1 = this.funclist[gname1];\n                    if (gfo1 && gfo1.type === 'func') {\n                        t.type = 'func';\n                        t.meta = gfo1;\n                        t.value = gname1;\n                        continue;\n                    }\n                    // モジュール関数を置換\n                    for (const mod of this.modList) {\n                        const gname = `${mod}__${funcName}`;\n                        const gfo = this.funclist[gname];\n                        if (gfo && gfo.type === 'func') {\n                            t.type = 'func';\n                            t.meta = gfo;\n                            t.value = gname;\n                            break;\n                        }\n                    }\n                    if (t.type === 'func') {\n                        continue;\n                    }\n                }\n                const fo = this.funclist[funcName];\n                if (fo && fo.type === 'func') {\n                    t.type = 'func';\n                    t.meta = fo;\n                }\n            }\n            // 数字につくマイナス記号を判定\n            // (ng) 5 - 3 || word - 3\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\n            if (t.type === '-' && tokens[i + 1] && tokens[i + 1].type === 'number') {\n                // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\n                const ltype = getLastType();\n                if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\n                    tokens.splice(i, 1); // remove '-'\n                    tokens[i].value *= -1;\n                }\n            }\n            // 助詞の「は」を = に展開\n            if (t.josi === undefined) {\n                t.josi = '';\n            }\n            if (t.josi === 'は') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'eq',\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                i += 2;\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                continue;\n            }\n            // 「とは」を一つの単語にする\n            if (t.josi === 'とは') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: t.josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // 助詞のならばをトークンとする\n            if (tararebaMap[t.josi]) {\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\n                if (!t.rawJosi) {\n                    t.rawJosi = josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'ならば',\n                    value: josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: ''\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\n            if (t.type === '_eol') {\n                tokens.splice(i, 1);\n                continue;\n            }\n            // コメントを飛ばす\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\n                comment.push(t.value);\n                tokens.splice(i, 1);\n                continue;\n            }\n            // 改行にコメントを埋め込む\n            if (t.type === 'eol') {\n                t.value = comment.join('/');\n                comment = [];\n            }\n            i++;\n        }\n    }\n    /**\n     * インデントの個数を数える\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\n     */\n    countIndent(src) {\n        let indent = 0;\n        for (let i = 0; i < src.length; i++) {\n            const c = src.charAt(i);\n            const n = isIndentChars(c);\n            if (n === 0) {\n                return [indent, i];\n            }\n            indent += n;\n        }\n        return [indent, src.length];\n    }\n    /**\n     * ソースコードをトークンに分割する\n     * @param src なでしこのソースコード\n     * @param line 先頭行の行番号\n     * @param filename ファイル名\n     */\n    tokenize(src, line, filename) {\n        const srcLength = src.length;\n        const result = [];\n        let columnCurrent;\n        let lineCurrent;\n        let column = 1;\n        let isDefTest = false;\n        let indent = 0;\n        // 最初にインデントを数える\n        const ia = this.countIndent(src);\n        indent = ia[0]; // インデント数\n        src = src.substring(ia[1]); // 読み飛ばす文字数\n        column += ia[1];\n        while (src !== '') {\n            let ok = false;\n            // 各ルールについて\n            for (const rule of rules) {\n                // 正規表現でマッチ\n                const m = rule.pattern.exec(src);\n                if (!m) {\n                    continue;\n                }\n                ok = true;\n                // 空白ならスキップ\n                if (rule.name === 'space') {\n                    column += m[0].length;\n                    src = src.substring(m[0].length);\n                    continue;\n                }\n                // マッチしたルールがコールバックを持つなら\n                if (rule.cbParser) {\n                    // コールバックを呼ぶ\n                    let rp;\n                    if (isDefTest && rule.name === 'word') {\n                        rp = rule.cbParser(src, false);\n                    }\n                    else {\n                        try {\n                            rp = rule.cbParser(src);\n                        }\n                        catch (e) {\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\n                        }\n                    }\n                    if (rule.name === 'string_ex') {\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\n                        const list = this.splitStringEx(rp.res);\n                        if (list === null) {\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\n                        }\n                        let offset = 0;\n                        for (let i = 0; i < list.length; i++) {\n                            const josi = (i === list.length - 1) ? rp.josi : '';\n                            if (i % 2 === 0) {\n                                result.push({\n                                    type: 'string',\n                                    value: list[i],\n                                    file: filename,\n                                    josi,\n                                    indent,\n                                    line,\n                                    column,\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\n                                });\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\n                                offset += list[i].length + 2;\n                            }\n                            else {\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                offset += list[i].length;\n                            }\n                        }\n                        line += rp.numEOL;\n                        column += src.length - rp.src.length;\n                        src = rp.src;\n                        if (rp.numEOL > 0) {\n                            column = 1;\n                        }\n                        break;\n                    }\n                    columnCurrent = column;\n                    column += src.length - rp.src.length;\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\n                    src = rp.src;\n                    line += rp.numEOL;\n                    if (rp.numEOL > 0) {\n                        column = 1;\n                    }\n                    break;\n                }\n                // ソースを進める前に位置を計算\n                const srcOffset = srcLength - src.length;\n                // 値を変換する必要があるか？\n                let value = m[0];\n                if (rule.cb) {\n                    value = rule.cb(value);\n                }\n                // ソースを進める\n                columnCurrent = column;\n                lineCurrent = line;\n                column += m[0].length;\n                src = src.substring(m[0].length);\n                // 改行の時の処理\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\n                    value = line++;\n                    column = 1;\n                }\n                // 数値なら単位を持つか？ --- #994\n                if (rule.name === 'number') {\n                    // 単位があれば読み飛ばす\n                    const um = unitRE.exec(src);\n                    if (um) {\n                        src = src.substring(um[0].length);\n                        column += m[0].length;\n                    }\n                }\n                let josi = '';\n                if (rule.readJosi) {\n                    const j = josiRE.exec(src);\n                    if (j) {\n                        josi = j[0].replace(/^\\s+/, '');\n                        column += j[0].length;\n                        src = src.substring(j[0].length);\n                        // 助詞の直後にあるカンマを無視 #877\n                        if (src.charAt(0) === ',') {\n                            src = src.substring(1);\n                        }\n                        // 「＊＊である」なら削除 #939 #974\n                        if (removeJosiMap[josi]) {\n                            josi = '';\n                        }\n                    }\n                }\n                switch (rule.name) {\n                    case 'def_test': {\n                        isDefTest = true;\n                        break;\n                    }\n                    case 'eol': { // eolの処理はほかに↑と↓にある\n                        isDefTest = false;\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n                // ここまで‰(#682) を処理\n                if (rule.name === 'dec_lineno') {\n                    line--;\n                    continue;\n                }\n                result.push({\n                    type: rule.name,\n                    value,\n                    indent,\n                    line: lineCurrent,\n                    column: columnCurrent,\n                    file: filename,\n                    josi,\n                    preprocessedCodeOffset: srcOffset,\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\n                });\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\n                if (rule.name === 'eol' && column === 1) {\n                    const ia = this.countIndent(src);\n                    indent = ia[0];\n                    column += ia[1];\n                    src = src.substring(ia[1]); // インデントを飛ばす\n                }\n                break;\n            }\n            if (!ok) {\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\n            }\n        }\n        return result;\n    }\n    // トークン配列をtype文字列に変換\n    static tokensToTypeStr(tokens, sep) {\n        const a = tokens.map((v) => {\n            return v.type;\n        });\n        return a.join(sep);\n    }\n    /**\n     * ファイル名からモジュール名へ変換\n     * @param {string} filename\n     * @returns {string}\n     */\n    static filenameToModName(filename) {\n        if (!filename) {\n            return 'main';\n        }\n        // パスがあればパスを削除\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\n        if (filename.indexOf('/') >= 0) {\n            const a = filename.split('/');\n            filename = a[a.length - 1];\n        }\n        filename = filename.replace(/\\.nako3?$/, '');\n        return filename;\n    }\n}\n","/**\n * nadesiko v3 parser\n */\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\nimport { NakoParserBase } from './nako_parser_base.mjs';\nimport { NakoSyntaxError } from './nako_errors.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * 構文解析を行うクラス\n */\nexport class NakoParser extends NakoParserBase {\n    /**\n     * 構文解析を実行する\n     */\n    parse(tokens, filename) {\n        this.reset();\n        this.tokens = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        this.modList.push(this.modName);\n        // 解析開始\n        return this.startParser();\n    }\n    /** パーサーの一番最初に呼び出す構文規則 */\n    startParser() {\n        const b = this.ySentenceList();\n        const c = this.get();\n        if (c && c.type !== 'eof') {\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\n        }\n        return b;\n    }\n    /** 複数文を返す */\n    ySentenceList() {\n        const blocks = [];\n        let line = -1;\n        const map = this.peekSourceMap();\n        while (!this.isEOF()) {\n            const n = this.ySentence();\n            if (!n) {\n                break;\n            }\n            blocks.push(n);\n            if (line < 0) {\n                line = n.line;\n            }\n        }\n        if (blocks.length === 0) {\n            const token = this.peek() || this.tokens[0];\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\n    }\n    /** 余剰スタックのレポートを作る */\n    makeStackBalanceReport() {\n        const words = [];\n        this.stack.forEach((t) => {\n            let w = this.nodeToStr(t, { depth: 1 }, false);\n            if (t.josi) {\n                w += t.josi;\n            }\n            words.push(w);\n        });\n        const desc = words.join(',');\n        // 最近使った関数の使い方レポートを作る #1093\n        let descFunc = '';\n        const chA = 'A'.charCodeAt(0);\n        for (const f of this.recentlyCalledFunc) {\n            descFunc += ' - ';\n            let no = 0;\n            const josiA = f.josi;\n            if (josiA) {\n                for (const arg of josiA) {\n                    const ch = String.fromCharCode(chA + no);\n                    descFunc += ch;\n                    if (arg.length === 1) {\n                        descFunc += arg[0];\n                    }\n                    else {\n                        descFunc += `(${arg.join('|')})`;\n                    }\n                    no++;\n                }\n            }\n            descFunc += f.name + '\\n';\n        }\n        this.recentlyCalledFunc = [];\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\n    }\n    yEOL() {\n        // 行末のチェック #1009\n        const eol = this.get();\n        if (!eol) {\n            return null;\n        }\n        // 余剰スタックの確認\n        if (this.stack.length > 0) {\n            const report = this.makeStackBalanceReport();\n            throw NakoSyntaxError.fromNode(report, eol);\n        }\n        this.recentlyCalledFunc = [];\n        return eol; // Token to Ast\n    }\n    /** @returns {Ast | null} */\n    ySentence() {\n        const map = this.peekSourceMap();\n        // 最初の語句が決まっている構文\n        if (this.check('eol')) {\n            return this.yEOL();\n        }\n        if (this.check('もし')) {\n            return this.yIF();\n        }\n        if (this.check('後判定')) {\n            return this.yAtohantei();\n        }\n        if (this.check('エラー監視')) {\n            return this.yTryExcept();\n        }\n        if (this.check('逐次実行')) {\n            return this.yTikuji();\n        }\n        if (this.accept(['抜ける'])) {\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['続ける'])) {\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['require', 'string', '取込'])) {\n            return this.yRequire();\n        }\n        if (this.accept(['not', '非同期モード'])) {\n            return this.yASyncMode();\n        }\n        if (this.accept(['DNCLモード'])) {\n            return this.yDNCLMode(1);\n        }\n        if (this.accept(['DNCL2モード'])) {\n            return this.yDNCLMode(2);\n        }\n        if (this.accept(['not', 'string', 'モード設定'])) {\n            return this.ySetGenMode(this.y[1].value);\n        }\n        // 関数呼び出し演算子\n        if (this.check2(['func', '←'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数代入演算子『←』は廃止されました。『${word.value}←』の部分。`, word);\n        }\n        if (this.check2(['func', 'eq'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\n        }\n        // 先読みして初めて確定する構文\n        if (this.accept([this.ySpeedMode])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yPerformanceMonitor])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yLet])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefTest])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefFunc])) {\n            return this.y[0];\n        }\n        // 関数呼び出しの他、各種構文の実装\n        if (this.accept([this.yCall])) {\n            const c1 = this.y[0];\n            if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\n                    const report = this.makeStackBalanceReport();\n                    throw NakoSyntaxError.fromNode(report, c1);\n                }\n                const c2 = this.ySentence();\n                if (c2 !== null) {\n                    return {\n                        type: 'block',\n                        block: [c1, c2],\n                        josi: c2.josi,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n            }\n            return c1;\n        }\n        return null;\n    }\n    /** @returns {Ast} */\n    yASyncMode() {\n        const map = this.peekSourceMap();\n        this.genMode = '非同期モード';\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** set DNCL mode */\n    yDNCLMode(ver) {\n        const map = this.peekSourceMap();\n        if (ver === 1) {\n            // 配列インデックスは1から\n            this.arrayIndexFrom = 1;\n            // 配列アクセスをJSと逆順で指定する\n            this.flagReverseArrayIndex = true;\n        }\n        else {\n            // ver2はPythonに近いとのこと\n        }\n        // 配列代入時自動で初期化チェックする\n        this.flagCheckArrayInit = true;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    ySetGenMode(mode) {\n        const map = this.peekSourceMap();\n        this.genMode = mode;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yRequire() {\n        const nameToken = this.y[1];\n        const filename = nameToken.value;\n        const modName = NakoLexer.filenameToModName(filename);\n        if (this.modList.indexOf(modName) < 0) {\n            // 優先度が最も高いのは modList[0]\n            // [memo] モジュールの検索優先度は、下に書くほど高くなる\n            const modSelf = this.modList.shift();\n            if (modSelf) {\n                this.modList.unshift(modName);\n                this.modList.unshift(modSelf);\n            }\n        }\n        return {\n            type: 'require',\n            value: filename,\n            josi: '',\n            ...this.peekSourceMap(),\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast} */\n    yBlock() {\n        const map = this.peekSourceMap();\n        const blocks = [];\n        if (this.check('ここから')) {\n            this.get();\n        }\n        while (!this.isEOF()) {\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\n                break;\n            }\n            if (!this.accept([this.ySentence])) {\n                break;\n            }\n            blocks.push(this.y[0]);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\n    }\n    yDefFuncReadArgs() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const a = [];\n        this.get(); // skip '('\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                this.get(); // skip ''\n                break;\n            }\n            const t = this.get();\n            if (t) {\n                a.push(t);\n            } // Token to Ast\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    yDefTest() {\n        return this.yDef('def_test');\n    }\n    yDefFunc() {\n        return this.yDef('def_func');\n    }\n    /** ユーザー関数の定義 */\n    yDef(type) {\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\n            return null;\n        }\n        const map = this.peekSourceMap();\n        const def = this.get(); // ●\n        if (!def) {\n            return null;\n        }\n        let defArgs = [];\n        if (this.check('(')) {\n            defArgs = this.yDefFuncReadArgs() || [];\n        } // // lexerでも解析しているが再度詳しく\n        const funcName = this.get();\n        if (!funcName || funcName.type !== 'func') {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\n        }\n        if (this.check('(')) {\n            // 関数引数の二重定義\n            if (defArgs.length > 0) {\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n            }\n            defArgs = this.yDefFuncReadArgs() || [];\n        }\n        if (this.check('とは')) {\n            this.get();\n        }\n        let block = null;\n        let multiline = false;\n        let asyncFn = false;\n        if (this.check('ここから')) {\n            multiline = true;\n        }\n        if (this.check('eol')) {\n            multiline = true;\n        }\n        try {\n            this.funcLevel++;\n            this.usedAsyncFn = false;\n            // ローカル変数を生成\n            const backupLocalvars = this.localvars;\n            this.localvars = { 'それ': { type: 'var', value: '' } };\n            if (multiline) {\n                this.saveStack();\n                // 関数の引数をローカル変数として登録する\n                for (const arg of defArgs) {\n                    const fnName = (arg.value) ? arg.value + '' : '';\n                    this.localvars[fnName] = { 'type': 'var', 'value': '' };\n                }\n                block = this.yBlock();\n                if (this.check('ここまで')) {\n                    this.get();\n                }\n                else {\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\n                }\n                this.loadStack();\n            }\n            else {\n                this.saveStack();\n                block = this.ySentence();\n                this.loadStack();\n            }\n            this.funcLevel--;\n            asyncFn = this.usedAsyncFn;\n            this.localvars = backupLocalvars;\n        }\n        catch (err) {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n        }\n        return {\n            type,\n            name: funcName,\n            args: defArgs,\n            block: block || [],\n            asyncFn,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yIFCond() {\n        const map = this.peekSourceMap();\n        let a = this.yGetArg();\n        if (!a) {\n            return null;\n        }\n        // console.log('@@yIFCond=', a)\n        // チェック : Aならば\n        if (a.josi === 'ならば') {\n            return a;\n        }\n        if (a.josi === 'でなければ') {\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\n            return a;\n        }\n        // チェック : AがBならば --- 「関数B(A)」のとき\n        if ((a.josi !== '') && (this.check('func'))) {\n            // もし文で関数呼び出しがある場合\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        else \n        // チェック : AがBならば --- 「A = B」のとき\n        if (a.josi === 'が') {\n            const tmpI = this.index;\n            const b = this.yGetArg();\n            if (!b) {\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\n            }\n            if (this.check('ならば')) {\n                const naraba = this.get() || { 'value': 'ならば' };\n                b.josi = naraba.value;\n            }\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\n                return {\n                    type: 'op',\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\n                    left: a,\n                    right: b,\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            this.index = tmpI;\n        }\n        // もし文で追加の関数呼び出しがある場合\n        if (!this.check('ならば')) {\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        // (ならば|でなければ)を確認\n        if (!this.check('ならば')) {\n            const smap = a || { type: '?', ...map };\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n        }\n        const naraba = this.get();\n        // 否定形のチェック\n        if (naraba && naraba.value === 'でなければ') {\n            a = {\n                type: 'not',\n                value: a,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yIF() {\n        const map = this.peekSourceMap();\n        if (!this.check('もし')) {\n            return null;\n        }\n        const mosi = this.get(); // skip もし\n        if (mosi == null) {\n            return null;\n        }\n        while (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let cond = null;\n        try {\n            cond = this.yIFCond();\n        }\n        catch (err) {\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\n        }\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\n        }\n        let trueBlock = null;\n        let falseBlock = null;\n        let tanbun = false;\n        // True Block\n        if (this.check('eol')) {\n            trueBlock = this.yBlock();\n        }\n        else {\n            trueBlock = this.ySentence();\n            tanbun = true;\n        }\n        // skip EOL\n        while (this.check('eol')) {\n            this.get();\n        }\n        // Flase Block\n        if (this.check('違えば')) {\n            this.get(); // skip 違えば\n            while (this.check('comma')) {\n                this.get();\n            }\n            if (this.check('eol')) {\n                falseBlock = this.yBlock();\n            }\n            else {\n                falseBlock = this.ySentence();\n                tanbun = true;\n            }\n        }\n        if (tanbun === false) {\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', mosi);\n            }\n        }\n        return {\n            type: 'if',\n            expr: cond || [],\n            block: trueBlock || [],\n            false_block: falseBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    ySpeedMode() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', '実行速度優先'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        this.get();\n        let val = '';\n        if (optionNode && optionNode.value) {\n            val = optionNode.value;\n        }\n        else {\n            return null;\n        }\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\n        for (const name of val.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'speed_mode',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    yPerformanceMonitor() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        if (!optionNode) {\n            return null;\n        }\n        this.get();\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\n        for (const name of optionNode.value.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'performance_monitor',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    /** (非推奨) 「逐次実行」構文 @returns {Ast | null} */\n    yTikuji() {\n        const map = this.peekSourceMap();\n        if (!this.check('逐次実行')) {\n            return null;\n        }\n        const tikuji = this.getCur(); // skip 逐次実行\n        this.logger.warn('『逐次実行』構文の使用は非推奨になりました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\n        const blocks = [];\n        let errorBlock = null;\n        if (!tikuji || !this.check('eol')) {\n            throw NakoSyntaxError.fromNode('『逐次実行』の直後は改行が必要です。', tikuji);\n        }\n        // ブロックを読む\n        for (;;) {\n            if (this.check('ここまで')) {\n                break;\n            }\n            if (this.check('eol')) {\n                this.get(); // skip EOL\n                continue;\n            }\n            if (this.check2(['エラー', 'ならば'])) {\n                this.get(); // skip エラー\n                this.get(); // skip ならば\n                errorBlock = this.yBlock();\n                break;\n            }\n            let block = null;\n            // 「先に」「次に」句はブロック宣言 #717 (ただしブロック以外も可能)\n            if (this.check('先に') || this.check('次に')) {\n                const tugini = this.get(); // skip 先に | 次に\n                if (this.check('comma')) {\n                    this.get();\n                }\n                if (this.check('eol')) { // block\n                    block = this.yBlock();\n                    if (!this.check('ここまで')) {\n                        let tuginiType = '次に';\n                        if (tugini != null) {\n                            tuginiType = tugini.type;\n                        }\n                        throw NakoSyntaxError.fromNode(`『${tuginiType}』...『ここまで』を対応させてください。`, map);\n                    }\n                    this.get(); // skip 'ここまで'\n                }\n                else { // line\n                    block = this.ySentence();\n                }\n            }\n            else {\n                block = this.ySentence();\n            }\n            // add block\n            if (block != null) {\n                blocks.push(block);\n            }\n        }\n        if (!this.check('ここまで')) {\n            console.log(blocks, this.peek());\n            throw NakoSyntaxError.fromNode('『逐次実行』...『ここまで』を対応させてください。', tikuji);\n        }\n        this.get(); // skip 'ここまで'\n        return {\n            type: 'tikuji',\n            blocks: blocks || [],\n            errorBlock: errorBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /**\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\n     * @param {Ast} firstValue\n     */\n    yGetArgOperator(firstValue) {\n        const args = [firstValue];\n        while (!this.isEOF()) {\n            // 演算子がある？\n            let op = this.peek();\n            if (op && opPriority[op.type]) {\n                op = this.getCur();\n                args.push(op); // Token to Ast\n                // 演算子後の値を取得\n                const v = this.yValue();\n                if (v === null) {\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\n                }\n                args.push(v);\n                continue;\n            }\n            break;\n        }\n        if (args.length === 0) {\n            return null;\n        }\n        if (args.length === 1) {\n            return args[0];\n        }\n        return this.infixToAST(args);\n    }\n    yGetArg() {\n        // 値を一つ読む\n        const value1 = this.yValue();\n        if (value1 === null) {\n            return null;\n        }\n        // 計算式がある場合を考慮\n        return this.yGetArgOperator(value1);\n    }\n    infixToPolish(list) {\n        // 中間記法から逆ポーランドに変換\n        const priority = (t) => {\n            if (opPriority[t.type]) {\n                return opPriority[t.type];\n            }\n            return 10;\n        };\n        const stack = [];\n        const polish = [];\n        while (list.length > 0) {\n            const t = list.shift();\n            if (!t) {\n                break;\n            }\n            while (stack.length > 0) { // 優先順位を見て移動する\n                const sTop = stack[stack.length - 1];\n                if (priority(t) > priority(sTop)) {\n                    break;\n                }\n                const tpop = stack.pop();\n                if (!tpop) {\n                    this.logger.error('計算式に間違いがあります。', t);\n                    break;\n                }\n                polish.push(tpop);\n            }\n            stack.push(t);\n        }\n        // 残った要素を積み替える\n        while (stack.length > 0) {\n            const t = stack.pop();\n            if (t) {\n                polish.push(t);\n            }\n        }\n        return polish;\n    }\n    /** @returns {Ast | null} */\n    infixToAST(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        // 逆ポーランドを構文木に\n        const josi = list[list.length - 1].josi;\n        const node = list[list.length - 1];\n        const polish = this.infixToPolish(list);\n        /** @type {Ast[]} */\n        const stack = [];\n        for (const t of polish) {\n            if (!opPriority[t.type]) { // 演算子ではない\n                stack.push(t);\n                continue;\n            }\n            const b = stack.pop();\n            const a = stack.pop();\n            if (a === undefined || b === undefined) {\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\n            }\n            /** @type {Ast} */\n            const op = {\n                type: 'op',\n                operator: t.type,\n                left: a,\n                right: b,\n                josi,\n                startOffset: a.startOffset,\n                endOffset: a.endOffset,\n                line: a.line,\n                column: a.column,\n                file: a.file\n            };\n            stack.push(op);\n        }\n        const ans = stack.pop();\n        if (!ans) {\n            return null;\n        }\n        return ans;\n    }\n    yGetArgParen(y) {\n        let isClose = false;\n        const si = this.stack.length;\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                isClose = true;\n                break;\n            }\n            const v = this.yGetArg();\n            if (v) {\n                this.pushStack(v);\n                if (this.check('comma')) {\n                    this.get();\n                }\n                continue;\n            }\n            break;\n        }\n        if (!isClose) {\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\n        }\n        const a = [];\n        while (si < this.stack.length) {\n            const v = this.popStack();\n            if (v) {\n                a.unshift(v);\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yRepeatTime() {\n        const map = this.peekSourceMap();\n        if (!this.check('回')) {\n            return null;\n        }\n        this.get(); // skip '回'\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 'N回、繰り返す' (#924)\n        let num = this.popStack([]);\n        let multiline = false;\n        let block = null;\n        if (num === null) {\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) { // multiline\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            // singleline\n            block = this.ySentence();\n        }\n        return {\n            type: 'repeat_times',\n            value: num,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yWhile() {\n        const map = this.peekSourceMap();\n        if (!this.check('間')) {\n            return null;\n        }\n        this.get(); // skip '間'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        if (this.check('繰返')) {\n            this.get();\n        } // skip '繰り返す' #927\n        const cond = this.popStack();\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (!this.checkTypes(['ここから', 'eol'])) {\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        return {\n            type: 'while',\n            cond,\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yAtohantei() {\n        const map = this.peekSourceMap();\n        if (this.check('後判定')) {\n            this.get();\n        } // skip 後判定\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 繰り返す\n        if (this.check('ここから')) {\n            this.get();\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        let cond = this.yGetArg(); // 条件\n        let bUntil = false;\n        const t = this.peek();\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\n            this.get(); // skip なるまで\n            bUntil = true;\n        }\n        if (this.check('間')) {\n            this.get();\n        } // skip 間\n        if (bUntil) { // 条件を反転する\n            cond = {\n                type: 'not',\n                value: cond,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return {\n            type: 'atohantei',\n            cond: cond || [],\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yFor() {\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\n        const map = this.peekSourceMap();\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n            // pass\n        }\n        else {\n            return null;\n        }\n        const kurikaesu = this.getCur(); // skip 繰り返す\n        // スタックに(増や|減ら)してがある？\n        const incdec = this.stack.pop();\n        if (incdec) {\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\n                if (incdec.value === '増') {\n                    flagDown = false;\n                }\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\n            }\n            else {\n                // 普通の繰り返しの場合\n                this.stack.push(incdec); // 違ったので改めて追加\n            }\n        }\n        let vInc = null;\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\n            vInc = this.popStack(['ずつ']);\n            if (kurikaesu.type === '増繰返') {\n                flagDown = false;\n            }\n        }\n        const vTo = this.popStack(['まで']);\n        const vFrom = this.popStack(['から']);\n        const word = this.popStack(['を', 'で']);\n        if (vFrom === null || vTo === null) {\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\n        }\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n            this.get();\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'for',\n            from: vFrom,\n            to: vTo,\n            inc: vInc,\n            flagDown,\n            word,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yReturn() {\n        const map = this.peekSourceMap();\n        if (!this.check('戻る')) {\n            return null;\n        }\n        this.get(); // skip '戻る'\n        const v = this.popStack(['で', 'を']);\n        if (this.stack.length > 0) {\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\n        }\n        return {\n            type: 'return',\n            value: v,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yForEach() {\n        const map = this.peekSourceMap();\n        if (!this.check('反復')) {\n            return null;\n        }\n        this.get(); // skip '反復'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        const target = this.popStack(['を']);\n        const name = this.popStack(['で']);\n        let block = null;\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'foreach',\n            name,\n            target,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 条件分岐構文 */\n    ySwitch() {\n        const map = this.peekSourceMap();\n        if (!this.check('条件分岐')) {\n            return null;\n        }\n        const joukenbunki = this.get(); // skip '条件分岐'\n        if (!joukenbunki) {\n            return null;\n        }\n        const eol = this.get(); // skip 'eol'\n        if (!eol) {\n            return null;\n        }\n        const value = this.popStack(['で']);\n        if (!value) {\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\n        }\n        if (eol.type !== 'eol') {\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\n        }\n        let isDefaultClause = false; // 「違えば」内かどうか\n        let skippedKokomade = false;\n        const cases = [];\n        while (!this.isEOF()) {\n            if (this.check('ここまで')) {\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                this.get(); // skip ここまで\n                break;\n            }\n            if (this.check('eol')) {\n                this.get();\n                continue;\n            }\n            if (isDefaultClause) {\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\n            }\n            // 違えば？\n            let cond = null;\n            const condToken = this.peek();\n            if (condToken && condToken.type === '違えば') {\n                // 違えば\n                skippedKokomade = false;\n                isDefaultClause = true;\n                cond = this.get(); // skip 違えば // Token to Ast\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            else {\n                // ＊＊＊ならば\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 「＊＊ならば」を得る\n                cond = this.yValue();\n                if (!cond) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                const naraba = this.get(); // skip ならば\n                if (!naraba || naraba.type !== 'ならば') {\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\n                }\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            // 条件にあったときに実行すること\n            const condBlock = this.yBlock();\n            const kokomade = this.peek();\n            if (kokomade && kokomade.type === 'ここまで') {\n                this.get(); // skip ここまで\n            }\n            else {\n                if (isDefaultClause) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\n                skippedKokomade = true;\n            }\n            cases.push([cond, condBlock]);\n        }\n        return {\n            type: 'switch',\n            value,\n            cases: cases || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 無名関数 */\n    yMumeiFunc() {\n        const map = this.peekSourceMap();\n        if (!this.check('def_func')) {\n            return null;\n        }\n        const def = this.get();\n        if (!def) {\n            return null;\n        }\n        let args = [];\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // 関数の引数定義は省略できる\n        if (this.check('(')) {\n            args = this.yDefFuncReadArgs() || [];\n        }\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // ブロックを読む\n        this.funcLevel++;\n        this.saveStack();\n        const block = this.yBlock();\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\n        if (!this.check('ここまで')) {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\n        }\n        this.get(); // skip ここまで\n        this.loadStack();\n        this.funcLevel--;\n        return {\n            type: 'func_obj',\n            args,\n            block,\n            meta: def.meta,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 代入構文 */\n    yDainyu() {\n        const map = this.peekSourceMap();\n        const dainyu = this.get(); // 代入\n        if (dainyu === null) {\n            return null;\n        }\n        const value = this.popStack(['を']);\n        const word = this.popStack(['へ', 'に']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\n        }\n        // 配列への代入\n        if (word.type === '配列参照') {\n            return {\n                type: 'let_array',\n                name: word.name,\n                index: word.index,\n                value,\n                josi: '',\n                checkInit: this.flagCheckArrayInit,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 一般的な変数への代入\n        const word2 = this.getVarName(word);\n        return {\n            type: 'let',\n            name: word2,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 定める構文 */\n    ySadameru() {\n        const map = this.peekSourceMap();\n        const sadameru = this.get(); // 定める\n        if (sadameru === null) {\n            return null;\n        }\n        const word = this.popStack(['を']);\n        const value = this.popStack(['へ', 'に', 'と']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\n        }\n        // 変数を生成する\n        const nameToken = this.createVar(word, true);\n        return {\n            type: 'def_local_var',\n            name: nameToken,\n            vartype: '定数',\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yIncDec() {\n        const map = this.peekSourceMap();\n        const action = this.get(); // (増やす|減らす)\n        if (action === null) {\n            return null;\n        }\n        // 『Nずつ増やして繰り返す』文か？\n        if (this.check('繰返')) {\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\n            return this.yFor();\n        }\n        // スタックから引数をポップ\n        let value = this.popStack(['だけ', '']);\n        if (!value) {\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\n        }\n        const word = this.popStack(['を']);\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\n        }\n        // 減らすなら-1かける\n        if (action.value === '減') {\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\n        }\n        return {\n            type: 'inc',\n            name: word,\n            value,\n            josi: action.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yCall() {\n        if (this.isEOF()) {\n            return null;\n        }\n        // スタックに積んでいく\n        while (!this.isEOF()) {\n            if (this.check('ここから')) {\n                this.get();\n            }\n            // 代入\n            if (this.check('代入')) {\n                return this.yDainyu();\n            }\n            if (this.check('定める')) {\n                return this.ySadameru();\n            }\n            // 制御構文\n            if (this.check('回')) {\n                return this.yRepeatTime();\n            }\n            if (this.check('間')) {\n                return this.yWhile();\n            }\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n                return this.yFor();\n            }\n            if (this.check('反復')) {\n                return this.yForEach();\n            }\n            if (this.check('条件分岐')) {\n                return this.ySwitch();\n            }\n            if (this.check('戻る')) {\n                return this.yReturn();\n            }\n            if (this.check('増') || this.check('減')) {\n                return this.yIncDec();\n            }\n            // C言語風関数\n            if (this.check2([['func', 'word'], '('])) { // C言語風\n                const cur = this.peek();\n                if (cur && cur.josi === '') {\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\n                    if (t) {\n                        const josi = t.josi || '';\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\n                            t.josi = '';\n                            return t; // 関数なら値とする\n                        }\n                        this.pushStack(t);\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    }\n                    continue;\n                }\n            }\n            // なでしこ式関数\n            if (this.check('func')) {\n                const r = this.yCallFunc();\n                if (r === null) {\n                    continue;\n                }\n                // 「〜する間」の形ならスタックに積む。\n                if (this.check('間')) {\n                    this.pushStack(r);\n                    continue;\n                }\n                // 関数呼び出しの直後に、四則演算があるか?\n                if (!this.checkTypes(operatorList)) {\n                    return r;\n                } // なければ関数呼び出しを戻す\n                // 四則演算があった場合、計算してスタックに載せる\n                this.pushStack(this.yGetArgOperator(r));\n                continue;\n            }\n            // 値のとき → スタックに載せる\n            const t = this.yGetArg();\n            if (t) {\n                this.pushStack(t);\n                continue;\n            }\n            break;\n        } // end of while\n        // 助詞が余ってしまった場合\n        if (this.stack.length > 0) {\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\n            // 各ノードについて、更に詳細な情報があるなら表示\n            for (const n of this.stack) {\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\n                if (d0 !== d1) {\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\n                    msg += `${d0}は${d1}として使われています。`;\n                }\n            }\n            const first = this.stack[0];\n            const last = this.stack[this.stack.length - 1];\n            this.logger.debug(msgDebug, first);\n            throw NakoSyntaxError.fromNode(msg, first, last);\n        }\n        return this.popStack([]);\n    }\n    /** @returns {Ast | null} */\n    yCallFunc() {\n        const map = this.peekSourceMap();\n        const t = this.get();\n        if (!t) {\n            return null;\n        }\n        const f = t.meta;\n        const funcName = t.value;\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\n        let funcObj = null;\n        if (t.josi === 'には') {\n            try {\n                funcObj = this.yMumeiFunc();\n            }\n            catch (err) {\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\n            }\n            if (funcObj === null) {\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\n            }\n        }\n        if (!f || typeof f.josi === 'undefined') {\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\n        }\n        // 最近使った関数を記録\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\n        if (f && f.asyncFn) {\n            this.usedAsyncFn = true;\n        }\n        // 関数の引数を取り出す処理\n        const args = [];\n        let nullCount = 0;\n        let valueCount = 0;\n        for (let i = f.josi.length - 1; i >= 0; i--) {\n            while (true) {\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\n                let popArg = this.popStack(f.josi[i]);\n                if (popArg !== null) {\n                    valueCount++;\n                }\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    nullCount++;\n                    popArg = funcObj;\n                }\n                else {\n                    break;\n                }\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\n                        popArg.type = 'func_pointer';\n                    }\n                    else {\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\n                    }\n                }\n                args.unshift(popArg);\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    break;\n                }\n            }\n        }\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\n        }\n        this.usedFuncs.add(t.value);\n        // 関数呼び出しのAstを構築\n        const funcNode = {\n            type: 'func',\n            name: t.value,\n            args,\n            josi: t.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\n        if (funcNode.name === 'プラグイン名設定') {\n            if (args.length > 0 && args[0]) {\n                let fname = '' + args[0].value;\n                if (fname === 'メイン') {\n                    fname = '' + args[0].file;\n                }\n                this.namespaceStack.push(this.modName);\n                this.modName = NakoLexer.filenameToModName(fname);\n                this.modList.push(this.modName);\n            }\n        }\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\n            const space = this.namespaceStack.pop();\n            if (space) {\n                this.modName = space;\n            }\n        }\n        // 言い切りならそこで一度切る\n        if (t.josi === '') {\n            return funcNode;\n        }\n        // 「**して、**」の場合も一度切る\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\n            funcNode.josi = 'して';\n            return funcNode;\n        }\n        // 続き\n        funcNode.meta = f;\n        this.pushStack(funcNode);\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLet() {\n        const map = this.peekSourceMap();\n        // 通常の変数\n        if (this.check2(['word', 'eq'])) {\n            const word = this.peek();\n            let threw = false;\n            try {\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\n                    if (this.y[2].type === 'eol') {\n                        throw new Error('値が空です。');\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    } // skip comma (ex) name1=val1, name2=val2\n                    const nameToken = this.getVarName(this.y[0]);\n                    const valueToken = this.y[2];\n                    return {\n                        type: 'let',\n                        name: nameToken,\n                        value: valueToken,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n                else {\n                    threw = true;\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\n                }\n            }\n            catch (err) {\n                if (threw) {\n                    throw err;\n                }\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\n            }\n        }\n        // let_array ?\n        if (this.check2(['word', '@'])) {\n            const la = this.yLetArrayAt(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (la) {\n                la.checkInit = this.flagCheckArrayInit;\n                return la;\n            }\n        }\n        if (this.check2(['word', '['])) {\n            const lb = this.yLetArrayBracket(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (lb) {\n                lb.checkInit = this.flagCheckArrayInit;\n                return lb;\n            }\n        }\n        // ローカル変数定義\n        if (this.accept(['word', 'とは'])) {\n            const wordToken = this.y[0];\n            if (!this.checkTypes(['変数', '定数'])) {\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n            }\n            const vtype = this.getCur(); // 変数 or 定数\n            const word = this.createVar(wordToken, vtype.type === '定数');\n            // 初期値がある？\n            let value = null;\n            if (this.check('eq')) {\n                this.get();\n                value = this.yCalc();\n            }\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: vtype.type,\n                value,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // ローカル変数定義（その２）\n        if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], false);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], true);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数定数への代入 #563\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, true);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, false);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.check2(['word', 'comma', 'word'])) {\n            // 2 word\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[4],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 3 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 4 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[8],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 5 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[10],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 配列のインデックスが1から始まる場合を考慮するか\n     * @param {Ast} node\n     * @returns\n     */\n    checkArrayIndex(node) {\n        // 配列が0から始まるのであればそのまま返す\n        if (this.arrayIndexFrom === 0) {\n            return node;\n        }\n        // 配列が1から始まるのであれば演算を加えて返す\n        return {\n            ...node,\n            'type': 'op',\n            'operator': '-',\n            'left': node,\n            'right': {\n                ...node,\n                'type': 'number',\n                'value': this.arrayIndexFrom\n            }\n        };\n    }\n    /**\n     * 配列のインデックスを逆順にするのを考慮するか\n     * @param {Ast[]| null} ary\n     */\n    checkArrayReverse(ary) {\n        if (!ary) {\n            return [];\n        }\n        if (!this.flagReverseArrayIndex) {\n            return ary;\n        }\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\n        if (ary.length <= 1) {\n            return ary;\n        }\n        return ary.reverse();\n    }\n    /** @returns {Ast | null} */\n    yLetArrayAt(map) {\n        // 一次元配列\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[4],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLetArrayBracket(map) {\n        // 一次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[5],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\n                value: this.y[8],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[7],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\n                value: this.y[11],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[9],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yCalc() {\n        const map = this.peekSourceMap();\n        if (this.check('eol')) {\n            return null;\n        }\n        // 値を一つ読む\n        const t = this.yGetArg();\n        if (!t) {\n            return null;\n        }\n        // 助詞がある？ つまり、関数呼び出しがある？\n        if (t.josi === '') {\n            return t;\n        } // 値だけの場合\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\n        this.pushStack(t);\n        const t1 = this.yCall();\n        if (!t1) {\n            return this.popStack();\n        }\n        // それが連文か確認\n        if (RenbunJosi.indexOf(t1.josi || '') < 0) {\n            return t1;\n        } // 連文ではない\n        // 連文なら右側を読んで左側とくっつける\n        const t2 = this.yCalc();\n        if (!t2) {\n            return t1;\n        }\n        return {\n            type: 'renbun',\n            left: t1,\n            right: t2,\n            josi: t2.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yValueKakko() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const t = this.get(); // skip '('\n        if (!t) {\n            throw new Error('[System Error] check したのに get できない');\n        }\n        this.saveStack();\n        const v = this.yCalc() || this.ySentence();\n        if (v === null) {\n            const v2 = this.get();\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\n        }\n        if (!this.check(')')) {\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\n        }\n        const closeParent = this.get(); // skip ')'\n        this.loadStack();\n        if (closeParent) {\n            v.josi = closeParent.josi;\n        }\n        return v;\n    }\n    /** @returns {Ast | null} */\n    yValue() {\n        const map = this.peekSourceMap();\n        // カンマなら飛ばす #877\n        if (this.check('comma')) {\n            this.get();\n        }\n        // プリミティブな値\n        if (this.checkTypes(['number', 'string'])) {\n            return this.getCur();\n        } // Token To Ast\n        // 丸括弧\n        if (this.check('(')) {\n            return this.yValueKakko();\n        }\n        // マイナス記号\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\n            const m = this.get(); // skip '-'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            const line = (m && m.line) ? m.line : 0;\n            return {\n                type: 'op',\n                operator: '*',\n                left: { type: 'number', value: -1, line },\n                right: v || [],\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // NOT\n        if (this.check('not')) {\n            this.get(); // skip '!'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            return {\n                type: 'not',\n                value: v,\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // JSON object\n        const a = this.yJSONArray();\n        if (a) {\n            return a;\n        }\n        const o = this.yJSONObject();\n        if (o) {\n            return o;\n        }\n        // 一語関数\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\n        if (this.check2(['func', splitType])) {\n            const tt = this.get();\n            if (!tt) {\n                throw new Error('[System Error] 正しく値が取れませんでした。');\n            }\n            const f = this.getVarNameRef(tt);\n            this.usedFuncs.add(f.value);\n            // 引数の個数をチェック\n            const meta = f.meta;\n            const args = [];\n            if (!meta) {\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\n            }\n            if (meta.josi && meta.josi.length === 1) {\n                args.push({ type: 'word', value: 'それ' });\n            }\n            else if (meta.josi && meta.josi.length >= 2) {\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\n            }\n            return {\n                type: 'func',\n                name: f.value,\n                args,\n                josi: f.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // C風関数呼び出し FUNC(...)\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\n            const f = this.peek();\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\n                const ff = this.getVarNameRef(this.y[0]);\n                const args = this.y[2];\n                const funcName = ff.value;\n                this.usedFuncs.add(funcName);\n                // 引数の個数をチェック\n                const meta = ff.meta;\n                if (meta && meta.josi) {\n                    // 引数の個数が異なる場合\n                    if (meta.josi.length === args.length) {\n                        // ok\n                    }\n                    else if (meta.isVariableJosi) {\n                        // ok\n                    }\n                    else { // 引数の個数が違う\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\n                    }\n                }\n                return {\n                    type: 'func',\n                    name: funcName,\n                    args,\n                    josi: this.y[3].josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\n        }\n        // 関数呼び出し演算子(core #83)で廃止\n        if (this.check2(['func', '←'])) {\n            throw new Error('関数呼び出し演算子は廃止されました。');\n        }\n        // 無名関数(関数オブジェクト)\n        if (this.check('def_func')) {\n            return this.yMumeiFunc();\n        }\n        // 変数\n        const word = this.yValueWord();\n        if (word) {\n            return word;\n        }\n        // その他\n        return null;\n    }\n    yValueWordGetIndex(ast) {\n        if (!ast.index) {\n            ast.index = [];\n        }\n        // word @ a, b, c\n        if (this.check('@')) {\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index.push(this.checkArrayIndex(this.y[5]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[5].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[3].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[1].josi;\n                return true;\n            }\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, ']'])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[2].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[4].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3]),\n                    this.checkArrayIndex(this.y[5])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[6].josi;\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @returns {Ast | null} */\n    yValueWord() {\n        const map = this.peekSourceMap();\n        if (this.check('word')) {\n            const t = this.getCur();\n            const word = this.getVarNameRef(t);\n            // word[n] || word@n\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\n                const ast = {\n                    type: '配列参照',\n                    name: word,\n                    index: [],\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n                while (!this.isEOF()) {\n                    if (!this.yValueWordGetIndex(ast)) {\n                        break;\n                    }\n                }\n                if (ast.index && ast.index.length === 0) {\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\n                }\n                return ast;\n            }\n            return word; // Token to Ast\n        }\n        return null;\n    }\n    /** 変数を生成 */\n    createVar(word, isConst) {\n        let gname = word.value;\n        const typeName = isConst ? 'const' : 'var';\n        if (this.funcLevel === 0) {\n            // global ?\n            if (gname.indexOf('__') < 0) {\n                gname = this.modName + '__' + gname;\n            }\n            this.funclist[gname] = { type: typeName, value: '' };\n            word.value = gname;\n            return word;\n        }\n        else {\n            // local\n            this.localvars[gname] = { type: typeName, value: '' };\n            return word;\n        }\n    }\n    /** 変数名を検索して解決する\n     * @param {Ast|Token} word\n     * @return {Ast|Token}\n     */\n    getVarName(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (f) {\n            if (f && f.scope === 'global') {\n                word.value = f.name;\n            }\n            return word;\n        }\n        // 変数が見つからない\n        this.createVar(word, false);\n        return word;\n    }\n    /** 変数名を検索して解決する */\n    getVarNameRef(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (!f) { // 変数が見つからない\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\n                word.value = this.modName + '__' + word.value;\n            }\n        }\n        else if (f && f.scope === 'global') {\n            word.value = f.name;\n        }\n        return word;\n    }\n    /** 複数の変数名を検索して解決する */\n    createVarList(words, isConst) {\n        for (let i = 0; i < words.length; i++) {\n            words[i] = this.createVar(words[i], isConst);\n        }\n        return words;\n    }\n    yJSONObjectValue() {\n        const a = [];\n        const firstToken = this.peek();\n        if (!firstToken) {\n            return null;\n        }\n        while (!this.isEOF()) {\n            while (this.check('eol')) {\n                this.get();\n            }\n            if (this.check('}')) {\n                break;\n            }\n            if (this.accept(['word', ':', this.yCalc])) {\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.accept(['string', ':', this.yCalc])) {\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.check('word')) {\n                const w = this.getCur();\n                w.type = 'string';\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else if (this.checkTypes(['string', 'number'])) {\n                const w = this.getCur();\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else {\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONObject() {\n        const map = this.peekSourceMap();\n        if (this.accept(['{', '}'])) {\n            return {\n                type: 'json_obj',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\n            return {\n                type: 'json_obj',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['{', this.yJSONObjectValue])) {\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    yJSONArrayValue() {\n        if (this.check('eol')) {\n            this.get();\n        }\n        const v1 = this.yCalc();\n        if (v1 === null) {\n            return null;\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        const a = [v1];\n        while (!this.isEOF()) {\n            if (this.check('eol')) {\n                this.get();\n            }\n            if (this.check(']')) {\n                break;\n            }\n            const v2 = this.yCalc();\n            if (v2 === null) {\n                break;\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n            a.push(v2);\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONArray() {\n        const map = this.peekSourceMap();\n        if (this.accept(['[', ']'])) {\n            return {\n                type: 'json_array',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\n            return {\n                type: 'json_array',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['[', this.yJSONArrayValue])) {\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    /** エラー監視構文 */\n    yTryExcept() {\n        const map = this.peekSourceMap();\n        if (!this.check('エラー監視')) {\n            return null;\n        }\n        const kansi = this.getCur(); // skip エラー監視\n        const block = this.yBlock();\n        if (!this.check2(['エラー', 'ならば'])) {\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\n        }\n        this.get(); // skip エラー\n        this.get(); // skip ならば\n        const errBlock = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'try_except',\n            block,\n            errBlock: errBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n}\n","import { NewEmptyToken } from './nako_types.mjs';\n/**\n * なでしこの構文解析のためのユーティリティクラス\n */\nexport class NakoParserBase {\n    constructor(logger) {\n        this.logger = logger;\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\n        this.tokens = [];\n        this.usedFuncs = new Set();\n        /** @type {import('./nako3.mjs').Ast[]} */\n        this.stack = [];\n        this.index = 0;\n        /** トークン出現チェック(accept関数)に利用する\n         * @type {import('./nako3.mjs').Ast[]}\n         */\n        this.y = [];\n        /** モジュル名 @type {string} */\n        this.modName = 'inline';\n        this.namespaceStack = [];\n        /**\n         * 利用するモジュールの名前一覧\n         * @type {Array<string>}\n         */\n        this.modList = [];\n        /** グローバル変数・関数の確認用 */\n        this.funclist = {};\n        this.funcLevel = 0;\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\n        /**\n         * ローカル変数の確認用\n         * @type {Object.<string,Object>}\n         */\n        this.localvars = { 'それ': { type: 'var', value: '' } };\n        /** コード生成器の名前 @type {string} */\n        this.genMode = 'sync'; // #637\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\n        this.arrayIndexFrom = 0;\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\n        this.flagReverseArrayIndex = false;\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\n        this.flagCheckArrayInit = false;\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\n        this.recentlyCalledFunc = [];\n        this.init();\n    }\n    init() {\n        this.funclist = {}; // 関数の一覧\n        this.reset();\n    }\n    reset() {\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\n        this.genMode = 'sync'; // #637, #1056\n    }\n    setFuncList(funclist) {\n        this.funclist = funclist;\n    }\n    /**\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\n     * @param {string[]} josiList 下ろしたい助詞の配列\n     */\n    popStack(josiList = undefined) {\n        if (!josiList) {\n            const t = this.stack.pop();\n            if (t) {\n                return t;\n            }\n            return null;\n        }\n        // josiList にマッチする助詞を探す\n        for (let i = this.stack.length - 1; i >= 0; i--) {\n            const t = this.stack[i];\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\n                this.stack.splice(i, 1); // remove stack\n                this.logger.trace('POP :' + JSON.stringify(t));\n                return t;\n            }\n        }\n        // 該当する助詞が見つからなかった場合\n        return null;\n    }\n    /**\n     * saveStack と loadStack は対で使う。\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\n     */\n    saveStack() {\n        this.stackList.push(this.stack);\n        this.stack = [];\n    }\n    loadStack() {\n        this.stack = this.stackList.pop();\n    }\n    /** 変数名を探す\n     * @param {string} name\n     * @returns {any}変数名の情報\n     */\n    findVar(name) {\n        // ローカル変数？\n        if (this.localvars[name]) {\n            return {\n                name,\n                scope: 'local',\n                info: this.localvars[name]\n            };\n        }\n        // モジュール名を含んでいる?\n        if (name.indexOf('__') >= 0) {\n            if (this.funclist[name]) {\n                return {\n                    name,\n                    scope: 'global',\n                    info: this.funclist[name]\n                };\n            }\n            else {\n                return undefined;\n            }\n        }\n        // グローバル変数（自身）？\n        const gnameSelf = `${this.modName}__${name}`;\n        if (this.funclist[gnameSelf]) {\n            return {\n                name: gnameSelf,\n                scope: 'global',\n                info: this.funclist[gnameSelf]\n            };\n        }\n        // グローバル変数（モジュールを検索）？\n        for (const mod of this.modList) {\n            const gname = `${mod}__${name}`;\n            if (this.funclist[gname]) {\n                return {\n                    name: gname,\n                    scope: 'global',\n                    info: this.funclist[gname]\n                };\n            }\n        }\n        // システム変数 (funclistを普通に検索)\n        if (this.funclist[name]) {\n            return {\n                name,\n                scope: 'system',\n                info: this.funclist[name]\n            };\n        }\n        return undefined;\n    }\n    /**\n     * 計算用に要素をスタックに積む\n     */\n    pushStack(item) {\n        this.logger.trace('PUSH:' + JSON.stringify(item));\n        this.stack.push(item);\n    }\n    /**\n     * トークンの末尾に達したか\n     */\n    isEOF() {\n        return (this.index >= this.tokens.length);\n    }\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * カーソル位置にある単語の型を確かめる\n     */\n    check(ttype) {\n        return (this.tokens[this.index].type === ttype);\n    }\n    /**\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\n     * @param a [単語1の型, 単語2の型, ... ]\n     */\n    check2(a) {\n        for (let i = 0; i < a.length; i++) {\n            const idx = i + this.index;\n            if (this.tokens.length <= idx) {\n                return false;\n            }\n            if (a[i] === '*') {\n                continue;\n            } // ワイルドカード(どんなタイプも許容)\n            const t = this.tokens[idx];\n            if (a[i] instanceof Array) {\n                if (a[i].indexOf(t.type) < 0) {\n                    return false;\n                }\n                continue;\n            }\n            if (t.type !== a[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\n     */\n    checkTypes(a) {\n        const type = this.tokens[this.index].type;\n        return (a.indexOf(type) >= 0);\n    }\n    /**\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\n     */\n    accept(types) {\n        const y = [];\n        const tmpIndex = this.index;\n        const rollback = () => {\n            this.index = tmpIndex;\n            return false;\n        };\n        for (let i = 0; i < types.length; i++) {\n            if (this.isEOF()) {\n                return rollback();\n            }\n            const type = types[i];\n            if (type == null) {\n                return rollback();\n            }\n            if (typeof type === 'string') {\n                const token = this.get();\n                if (token && token.type !== type) {\n                    return rollback();\n                }\n                y[i] = token;\n                continue;\n            }\n            if (typeof type === 'function') {\n                const f = type.bind(this);\n                const r = f(y);\n                if (r === null) {\n                    return rollback();\n                }\n                y[i] = r;\n                continue;\n            }\n            if (type instanceof Array) {\n                if (!this.checkTypes(type)) {\n                    return rollback();\n                }\n                y[i] = this.get();\n                continue;\n            }\n            throw new Error('System Error : accept broken : ' + typeof type);\n        }\n        this.y = y;\n        return true;\n    }\n    /**\n     * カーソル語句を取得して、カーソルを後ろに移動する\n     */\n    get() {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index++];\n    }\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\n    getCur() {\n        if (this.isEOF()) {\n            throw new Error('トークンが取得できません。');\n        }\n        const t = this.tokens[this.index++];\n        if (!t) {\n            throw new Error('トークンが取得できません。');\n        }\n        return t;\n    }\n    unget() {\n        if (this.index > 0) {\n            this.index--;\n        }\n    }\n    /** 解析中のトークンを返す */\n    peek(i = 0) {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index + i];\n    }\n    /** 解析中のトークンを返す、無理なら def を返す */\n    peekDef(def = null) {\n        if (this.isEOF()) {\n            if (!def) {\n                def = NewEmptyToken();\n            }\n            return def;\n        }\n        return this.tokens[this.index];\n    }\n    /**\n     * 現在のカーソル語句のソースコード上の位置を取得する。\n     */\n    peekSourceMap() {\n        const token = this.peek();\n        if (token === null) {\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\n        }\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\n    }\n    /**\n     * depth: 表示する深さ\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\n     * @param {{ depth: number, typeName?: string }} opts\n     * @param {boolean} debugMode\n     */\n    nodeToStr(node, opts, debugMode) {\n        const depth = opts.depth - 1;\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\n        if (!node) {\n            return '(NULL)';\n        }\n        switch (node.type) {\n            case 'not':\n                if (depth >= 0) {\n                    const subNode = node.value;\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『not』`;\n                }\n            case 'op': {\n                const node2 = node;\n                let operator = node2.operator || '';\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\n                if (operator in table) {\n                    operator = table[operator];\n                }\n                if (depth >= 0) {\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\n                    if (node2.operator === 'eq') {\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\n                    }\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『${operator}${debug}』`;\n                }\n            }\n            case 'number':\n                return `${typeName('数値')}${node.value}`;\n            case 'string':\n                return `${typeName('文字列')}『${node.value}${debug}』`;\n            case 'word':\n                return `${typeName('単語')}『${node.value}${debug}』`;\n            case 'func':\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\n            case 'eol':\n                return '行の末尾';\n            case 'eof':\n                return 'ファイルの末尾';\n            default: {\n                let name = node.name;\n                if (name) {\n                    name = node.value;\n                }\n                if (typeof name !== 'string') {\n                    name = node.type;\n                }\n                return `${typeName('')}『${name}${debug}』`;\n            }\n        }\n    }\n}\n","/**\n * nako_prepare.js\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\n */\nclass ReplaceHistory {\n    constructor(from, to, index) {\n        this.from = from;\n        this.to = to;\n        this.index = index;\n    }\n}\nclass ConvertResult {\n    constructor(text, sourcePosition) {\n        this.text = text;\n        this.sourcePosition = sourcePosition;\n    }\n}\n/**\n * 置換後の位置から置換前の位置へマッピングできる文字列\n */\nexport class Replace {\n    constructor(code) {\n        this.history = [];\n        this.code = code;\n    }\n    getText() {\n        return this.code;\n    }\n    replaceAll(from, to) {\n        while (true) {\n            const index = this.getText().indexOf(from);\n            if (index === -1) {\n                break;\n            }\n            if (from.length !== to.length) {\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\n            }\n            this.code = this.code.replace(from, to);\n        }\n    }\n    getSourcePosition(i) {\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\n        for (const item of this.history) {\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\n                i += item.from - item.to;\n            }\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\n                if (item.to >= 2 && i === item.index + item.to - 1) {\n                    i = item.index + item.from - 1;\n                }\n                else {\n                    i = item.index;\n                }\n            }\n        }\n        return i;\n    }\n}\n/**\n * 字句解析を行う前に全角文字を半角に揃える\n *    [memo]\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\n *    for https://github.com/kujirahand/nadesiko3/issues/94\n */\nexport class NakoPrepare {\n    constructor() {\n        // 単純な変換テーブル\n        this.convertTable = new Map([\n            // ハイフンへの変換\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\n            // 0x2d: true, // ASCIIのハイフン\n            [0x2010, '-'],\n            [0x2011, '-'],\n            [0x2013, '-'],\n            [0x2014, '-'],\n            [0x2015, '-'],\n            [0x2212, '-'],\n            // チルダの変換\n            // 0x7e: true,\n            [0x02dc, '~'],\n            [0x02F7, '~'],\n            [0x2053, '~'],\n            [0x223c, '~'],\n            [0x301c, '~'],\n            [0xFF5E, '~'],\n            // スペースの変換\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\n            // 0x20: true,\n            [0x2000, ' '],\n            [0x2002, ' '],\n            [0x2003, ' '],\n            [0x2004, ' '],\n            [0x2005, ' '],\n            [0x2006, ' '],\n            [0x2007, ' '],\n            [0x2009, ' '],\n            [0x200A, ' '],\n            [0x200B, ' '],\n            [0x202F, ' '],\n            [0x205F, ' '],\n            [0x3000, ' '],\n            [0x3164, ' '],\n            // その他の変換\n            // [0x09, ' '], // TAB --> SPC\n            [0x203B, '#'],\n            [0x3002, ';'],\n            [0x3010, '['],\n            [0x3011, ']'],\n            // 読点は「,」に変換する (#877)\n            [0x3001, ','],\n            [0xFF0C, ','],\n            [0x2716, '*'],\n            [0x2795, '+'],\n            [0x2796, '-'],\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\n        ]);\n    }\n    /** 唯一のインスタンスを返す */\n    static getInstance() {\n        if (!NakoPrepare._instance) {\n            NakoPrepare._instance = new NakoPrepare();\n        }\n        return NakoPrepare._instance;\n    }\n    // 一文字だけ変換\n    /**\n     * @param {string} ch\n     */\n    convert1ch(ch) {\n        if (!ch) {\n            return '';\n        }\n        const c = ch.codePointAt(0) || 0;\n        // テーブルによる変換\n        const c2 = this.convertTable.get(c) || '';\n        if (c2) {\n            return c2;\n        }\n        // ASCIIエリア\n        if (c < 0x7F) {\n            return ch;\n        }\n        // 全角半角単純変換可能 --- '！' - '～'\n        if (c >= 0xFF01 && c <= 0xFF5E) {\n            const c2 = c - 0xFEE0;\n            return String.fromCodePoint(c2);\n        }\n        return ch;\n    }\n    /** convert code */\n    convert(code) {\n        if (!code) {\n            return [];\n        }\n        const src = new Replace(code);\n        // 改行コードを統一\n        src.replaceAll('\\r\\n', '\\n');\n        src.replaceAll('\\r', '\\n');\n        let flagStr = false; // 文字列リテラル内かどうか\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\n        const res = [];\n        let left = 0; // 現在処理中の部分文字列の左端の位置\n        let str = ''; // 文字列リテラルの値\n        // 一文字ずつ全角を半角に置換する\n        let i = 0;\n        while (i < src.getText().length) {\n            const c = src.getText().charAt(i);\n            const ch2 = src.getText().substr(i, 2);\n            // 文字列のとき\n            if (flagStr) {\n                if (c === endOfStr) {\n                    flagStr = false;\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i++;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 絵文字制御による文字列のとき\n            if (flagStr2) {\n                if (ch2 === endOfStr) {\n                    flagStr2 = false;\n                    if (endOfStr === '＊／') {\n                        endOfStr = '*/';\n                    } // 強制変換\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i += 2;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 文字列判定\n            if (c === '「') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '」';\n                str = '';\n                continue;\n            }\n            if (c === '『') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '』';\n                str = '';\n                continue;\n            }\n            if (c === '“') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '”';\n                str = '';\n                continue;\n            }\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\n            if (ch2 === '🌴' || ch2 === '🌿') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = ch2;\n                str = '';\n                continue;\n            }\n            const c1 = this.convert1ch(c);\n            if (c1 === '\"' || c1 === '\\'') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = c;\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす (#725)\n            if (c1 === '#') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true; // 本当はコメントだけど便宜上\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす\n            if (ch2 === '//' || ch2 === '／／') {\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\n                i += 2;\n                left = i;\n                flagStr = true;\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす\n            if (ch2 === '／＊') {\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '＊／';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす (#731)\n            if (ch2 === '/*') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '*/';\n                str = '';\n                continue;\n            }\n            // 変換したものを追加\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n            i++;\n            left = i;\n        }\n        if (flagStr || flagStr2) {\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n        }\n        return res;\n    }\n}\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\nexport function checkNakoMode(code, modeNames) {\n    // 先頭の256文字について調べる\n    code = code.substring(0, 256);\n    // 全角半角の揺れを吸収\n    code = code.replace(/(！|💡)/, '!');\n    // 範囲コメントを削除\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\n    // 毎文調べる\n    const lines = code.split(/[;。\\n]/, 30);\n    for (let line of lines) {\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\n        if (modeNames.indexOf(line) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * よく使う処理をまとめたもの\n */\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * トークンの内容をデバッグ出力する関数\n * @param tokens トークンの一覧\n * @returns 文字列\n */\nexport function debugTokens(tokens) {\n    const result = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const ftype = t.type;\n        const fvalue = t.value;\n        let s = `[${ftype}:${fvalue}]`;\n        if (ftype === fvalue) {\n            s = ftype;\n        }\n        if (ftype === 'comma') {\n            s = ',';\n        }\n        if (ftype === 'string') {\n            s = `\"${fvalue}\"`;\n        }\n        if (ftype === 'number') {\n            s = `(${fvalue})`;\n        }\n        if (ftype === 'word') {\n            s = `[word:${fvalue}]`;\n        }\n        if (!result[t.line]) {\n            result[t.line] = makeIndent(t.indent);\n        }\n        result[t.line] += s + t.josi + '|';\n    }\n    return result.join('\\n');\n}\nexport function makeIndent(n) {\n    let s = '';\n    for (let i = 0; i < n; i++) {\n        s += ' ';\n    }\n    return s;\n}\nlet lastTokenInfo = NewEmptyToken();\nexport function newToken(type, value, templateToken = undefined) {\n    if (templateToken) {\n        lastTokenInfo = templateToken;\n    }\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\n    return t;\n}\n","/** インデント構文を処理するモジュール */\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { NakoIndentError } from '../src/nako_errors.mjs';\nimport { debugTokens, newToken } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nfunction isSkipWord(t) {\n    if (t.type === '違えば') {\n        return true;\n    }\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\n        return true;\n    }\n    return false;\n}\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\nexport function convertInlineIndent(tokens) {\n    //\n    // 0:もし、A=0ならば:\n    // 2:  もし、B=0ならば:\n    // 4:    「A=0,B=0」を表示。\n    // 2:  違えば:\n    // 4:    「A=0,B!=0」を表示。\n    // 5:違えば:\n    // 6:  「A!=0」を表示。\n    //\n    const lines = splitTokens(tokens, 'eol');\n    const blockIndents = [];\n    let checkICount = -1;\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        // JSONの途中であればブロックの変更は行わない\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        // インデントの終了を確認する必要があるか？\n        if (checkICount >= 0) {\n            const lineICount = leftToken.indent;\n            while (checkICount >= lineICount) {\n                const tFirst = leftToken;\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\n                }\n                else {\n                    // ここまでを挿入する\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    checkICount = blockIndents[blockIndents.length - 1];\n                }\n                else {\n                    checkICount = -1;\n                    break;\n                }\n            }\n        }\n        // JSONの途中であればブロックの変更は行わない\n        checkJsonSyntax(line);\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            continue;\n        }\n        // 末尾の「:」をチェック\n        const tLast = getLastTokenWithoutEOL(line);\n        if (tLast.type === ':') {\n            // 末尾の「:」を削除\n            lines[i] = lines[i].filter(t => t !== tLast);\n            checkICount = tLast.indent;\n            blockIndents.push(checkICount);\n        }\n    }\n    if (lines.length > 0 && blockIndents.length > 0) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        // ここまでを差し込む\n        for (let i = 0; i < blockIndents.length; i++) {\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\n        }\n    }\n    const result = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('###', debugTokens(result));\n    }\n    return result;\n}\n/** 行ごとに分割していたトークンをくっつける */\nexport function joinTokenLines(lines) {\n    const r = [];\n    for (const line of lines) {\n        for (const t of line) {\n            r.push(t);\n        }\n    }\n    return r;\n}\nfunction getLastTokenWithoutEOL(line) {\n    const len = line.length;\n    if (len === 0) {\n        return NewEmptyToken('?');\n    }\n    let res = line[len - 1];\n    if (res.type === 'eol') {\n        if (len >= 2) {\n            res = line[len - 2];\n        }\n    }\n    return res;\n}\nexport function splitTokens(tokens, delimiter) {\n    const result = [];\n    let line = [];\n    let kakko = 0;\n    for (const t of tokens) {\n        line.push(t);\n        if (t.type === '{') {\n            kakko++;\n        }\n        else if (t.type === '}') {\n            kakko--;\n        }\n        else if (kakko === 0 && t.type === delimiter) {\n            result.push(line);\n            line = [];\n        }\n    }\n    if (line.length > 0) {\n        result.push(line);\n    }\n    return result;\n}\n/** トークン行が空かどうか調べる */\nfunction IsEmptyLine(line) {\n    if (line.length === 0) {\n        return true;\n    }\n    for (let j = 0; j < line.length; j++) {\n        const ty = line[j].type;\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/** コメントを除去した最初のトークンを返す */\nfunction GetLeftTokens(line) {\n    for (let i = 0; i < line.length; i++) {\n        const t = line[i].type;\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\n            continue;\n        }\n        return line[i];\n    }\n    return line[0];\n}\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\nexport function convertIndentSyntax(tokens) {\n    // インデント構文の変換が必要か?\n    if (!useIndentSynax(tokens)) {\n        return tokens;\n    }\n    // 『ここまで』があったらエラーを出す\n    for (const t of tokens) {\n        if (t.type === 'ここまで') {\n            // エラーを出す\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\n        }\n    }\n    // JSON構文のチェック\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    // 行ごとにトークンを分割\n    const blockIndents = [];\n    const lines = splitTokens(tokens, 'eol');\n    let lastI = 0;\n    // 各行を確認する\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        // JSON構文のチェック\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        const curI = leftToken.indent;\n        if (curI === lastI) {\n            continue;\n        }\n        // ブロックの終了?\n        // 0: 3回\n        // 2:   もし、1 > 1ならば\n        // 4:     1を表示\n        // 2:   違えば\n        // 4:     2を表示\n        // 0:\n        // ブロックの終了?\n        if (lastI >= 0) {\n            while (lastI > curI) {\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\n                }\n                else {\n                    const t = lines[i - 1][0];\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\n                    lines[i - 1].push(newToken('eol', '\\n', t));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    lastI = blockIndents[blockIndents.length - 1][0];\n                }\n                else {\n                    lastI = 0;\n                    break;\n                }\n            }\n        }\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            continue;\n        }\n        // JSON構文のチェック\n        checkJsonSyntax(line);\n        // ブロックの開始？\n        if (curI > lastI) {\n            blockIndents.push([curI, lastI]);\n            // console.log('@@@push', curI)\n            lastI = curI;\n            continue;\n        }\n    }\n    // 末尾に「ここまで」を追加する\n    for (let i = 0; i < blockIndents.length; i++) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\n    }\n    const result = joinTokenLines(lines);\n    // console.log('###', debugTokens(result))\n    return result;\n}\nfunction useIndentSynax(tokens) {\n    // インデント構文が必要かチェック (最初の100個をチェック)\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * DNCLに対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\n// DNCLモードのキーワード\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:を実行': ['ここまで', 'ここまで'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL(tokens) {\n    if (!useDNCLmode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // 行頭の | はただのインデント\n        for (let j = 0; j < line.length; j++) {\n            if (line[j].type === '|') {\n                line[j].type = 'range_comment';\n                continue;\n            }\n            break;\n        }\n        // 後判定の繰り返しの実装のため\n        const t = line[0];\n        if (t.type === 'word' && t.value === '繰返') {\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\n        }\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\n        if (fi > 0) {\n            replaceAtohantei(line, fi);\n        }\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\n        if (fi2 > 0) {\n            replaceAtohantei(line, fi2);\n        }\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // を繰り返す → ここまで\n        for (;;) {\n            const ni = findTokens(line, ['word:を繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'ここまで';\n            fu.value = 'ここまで';\n            fu.josi = '';\n        }\n        // 'のすべての要素を0にする'\n        // 'のすべての要素に0を代入する'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 'のすべての値を0にする'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    return tokens;\n}\nfunction replaceAllElementV(line, ni) {\n    //\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\n    //\n    const t = line[ni];\n    line[ni - 1].josi = '';\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\n    end.josi = 'に';\n    const val = line[ni + 2];\n    val.josi = '';\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\n    times.josi = 'を';\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\n}\nfunction replaceAtohantei(tokens, fi) {\n    // `ここまで、(${r[1]})になるまでの間`\n    const wo = findTokens(tokens, ['word:を']);\n    if (wo >= 0) {\n        tokens[wo].type = 'ここまで';\n        tokens[wo].value = 'ここまで';\n    }\n    const ga = findTokens(tokens, ['word:が']);\n    if (ga >= 0) {\n        tokens[ga].type = 'ここまで';\n        tokens[ga].value = 'ここまで';\n    }\n    // なる:まで(fi) 実行(fi+1)\n    tokens[fi + 1].value = '間';\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCLmode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCLモード';\n            return true;\n        }\n    }\n    return false;\n}\nexport const NakoDncl = {\n    convert: convertDNCL\n};\n","/**\n * DNCL ver2 に対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\nimport { newToken, debugTokens } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nconst DNCL_ARRAY_INIT_COUNT = 30;\n// DNCL2モードのキーワード\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:and': ['and', 'かつ'],\n    'word:or': ['or', 'または'],\n    'word:not': ['not', '!'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL2(tokens) {\n    if (!useDNCL2mode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // --- 制御構文の変換 ---\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // そうでなければ(そう|でなければ) → 違えば\n        for (let ni = 0; ni < line.length; ni++) {\n            const t = line[ni];\n            if (t.value === 'そう' && t.josi === 'でなければ') {\n                t.type = '違えば';\n                t.value = '違えば';\n                t.josi = '';\n            }\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // --- 配列変数周りの変換 ---\n        for (let i = 0; i < line.length; i++) {\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                const valToken = line[i + 4];\n                valToken.josi = '';\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n                i += 6; // skip\n            }\n            // Hensuの|すべての|(要素を|値を)|0に|する\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\n                const varToken = line[i];\n                varToken.josi = '';\n                const valToken = line[i + 3];\n                valToken.josi = '';\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n            // 配列変数 | xxを | 初期化する\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n        }\n        // --- その他の変換 ---\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('@@@---DNCL:tokens---');\n        console.log(debugTokens(tokens));\n        console.log('@@@/---DNCL:tokens---');\n    }\n    return tokens;\n}\n/**\n * トークンが合致するかを確認する\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\n * @param lines 差し替え\n * @param fromIndex 検索場所\n * @returns 合致したかどうか\n */\nfunction tokenEq(typeValues, lines, fromIndex) {\n    const check = (pattern, t) => {\n        if (pattern instanceof Array) {\n            for (let i = 0; i < pattern.length; i++) {\n                if (check(pattern[i], t)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (pattern === '*') {\n            return true;\n        }\n        if (pattern.indexOf(':') < 0) {\n            if (pattern === t.type) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const tv = `${t.type}:${t.value}`;\n        if (pattern === tv) {\n            return true;\n        }\n        return false;\n    };\n    for (let i = 0; i < typeValues.length; i++) {\n        const idx = i + fromIndex;\n        if (idx >= lines.length) {\n            return false;\n        }\n        const pat = typeValues[i];\n        const t = lines[idx];\n        if (!check(pat, t)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCL2mode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCL2モード';\n            return true;\n        }\n    }\n    return false;\n}\n","/** prepareとtokenizeのソースマッピング */\nexport class SourceMappingOfTokenization {\n    /**\n       * @param {number} sourceCodeLength\n       * @param {PreprocessItem[]} preprocessed\n       */\n    constructor(sourceCodeLength, preprocessed) {\n        /** @private @readonly */\n        this.sourceCodeLength = sourceCodeLength;\n        /** @private @readonly */\n        this.preprocessed = preprocessed;\n        let i = 0;\n        /** @private @readonly @type {number[]} */\n        this.cumulativeSum = [];\n        for (const el of preprocessed) {\n            this.cumulativeSum.push(i);\n            i += el.text.length;\n        }\n        /** @private */\n        this.lastIndex = 0;\n        /** @private */\n        this.lastPreprocessedCodePosition = 0;\n    }\n    /**\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    map(preprocessedCodePosition) {\n        const i = this.findIndex(preprocessedCodePosition);\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\n    }\n    /**\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    findIndex(preprocessedCodePosition) {\n        // 連続アクセスに対する高速化\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\n            this.lastIndex = 0;\n        }\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\n                this.lastIndex = i;\n                return i;\n            }\n        }\n        this.lastIndex = this.preprocessed.length - 1;\n        return this.preprocessed.length - 1;\n    }\n}\nexport class SourceMappingOfIndentSyntax {\n    /**\n       * @param {string} codeAfterProcessingIndentationSyntax\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\n       */\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\n        /** @private @type {{ offset: number, len: number }[]} */\n        this.lines = [];\n        /** @private @readonly */\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\n        /** @private @readonly */\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\n        let offset = 0;\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\n            this.lines.push({ offset, len: line.length });\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number | null} startOffset\n       * @param {number | null} endOffset\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\n       */\n    map(startOffset, endOffset) {\n        if (startOffset === null) {\n            return { startOffset, endOffset };\n        }\n        // 何行目かを判定\n        const tokenLine = this.getLineNumber(startOffset);\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\n            if (tokenLine === insertedLine) {\n                startOffset = null;\n                endOffset = null;\n                break;\n            }\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\n            if (tokenLine > insertedLine) {\n                // \"\\n\"の分1足す\n                startOffset -= this.lines[insertedLine].len + 1;\n                if (endOffset !== null) {\n                    endOffset -= this.lines[insertedLine].len + 1;\n                }\n            }\n        }\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\n            if (tokenLine >= deletedLine.lineNumber) {\n                // \"\\n\"の分1足す\n                if (startOffset !== null) {\n                    startOffset += deletedLine.len + 1;\n                }\n                if (endOffset !== null) {\n                    endOffset += deletedLine.len + 1;\n                }\n            }\n        }\n        return { startOffset, endOffset };\n    }\n    /**\n       * @param {number} offset\n       * @returns {number}\n       * @private\n       */\n    getLineNumber(offset) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\n            if (offset < this.lines[i + 1].offset) {\n                this.lastLineNumber = i;\n                return i;\n            }\n        }\n        this.lastLineNumber = this.lines.length - 1;\n        return this.lines.length - 1;\n    }\n}\n/** offsetから (line, column) へ変換する。 */\nexport class OffsetToLineColumn {\n    /**\n       * @param {string} code\n       */\n    constructor(code) {\n        /** @private @type {number[]} */\n        this.lineOffsets = [];\n        // 各行の先頭位置を先に計算しておく\n        let offset = 0;\n        for (const line of code.split('\\n')) {\n            this.lineOffsets.push(offset);\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number} offset\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\n       * @returns {{ line: number, column: number }}\n       */\n    map(offset, oneBasedLineNumber) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\n            if (offset < this.lineOffsets[i + 1]) {\n                this.lastLineNumber = i;\n                return {\n                    line: i + (oneBasedLineNumber ? 1 : 0),\n                    column: offset - this.lineOffsets[i]\n                };\n            }\n        }\n        this.lastLineNumber = this.lineOffsets.length - 1;\n        return {\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\n        };\n    }\n}\n/**\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\n */\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\n    // offsetは単純に引くだけでよい\n    if (typeof sourceMap.startOffset === 'number') {\n        sourceMap.startOffset -= preCode.length;\n    }\n    if (typeof sourceMap.endOffset === 'number') {\n        sourceMap.endOffset -= preCode.length;\n    }\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\n    if (preCode !== '') {\n        const lines = preCode.split('\\n');\n        if (typeof sourceMap.line === 'number') {\n            sourceMap.line -= lines.length - 1;\n        }\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\n            sourceMap.column -= lines[lines.length - 1].length;\n        }\n    }\n    return sourceMap;\n}\n","/**\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\n */\n/**\n * ANSI escape code の一部\n */\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\n// 30 ~ 37\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\n/** @param {string} t */\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n/**\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\n * @param {string} text\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\n */\nconst convertColorTextFormat = (text) => {\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\n    // eslint-disable-next-line no-control-regex\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\n    // nodeConsoleからbrowserConsoleを作る\n    /** @type {string[]} */\n    const browserConsoleStyles = [];\n    let consoleColor = 'inherit'; // 文字色\n    let consoleFontWeight = 'inherit'; // 文字の太さ\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\n    const browserConsoleText = text === noColor\n        ? noColor\n        // eslint-disable-next-line no-control-regex\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n            const m1 = +m1str;\n            if (m1 === 0) {\n                consoleColor = 'inherit';\n                consoleFontWeight = 'inherit';\n            }\n            if (m1 === 1) {\n                consoleFontWeight = 'bold';\n            }\n            if (m1 >= 30 && m1 <= 37) {\n                consoleColor = colorNames[m1 - 30];\n            }\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\n            return '%c';\n        });\n    // nodeConsoleからhtmlを作る\n    let htmlColor = 'inherit'; // 文字色\n    let htmlFontWeight = 'inherit'; // 文字の太さ\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\n    // eslint-disable-next-line multiline-ternary\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\n        // eslint-disable-next-line no-control-regex\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n        const m1 = +m1str;\n        if (m1 === 0) { // リセット\n            htmlColor = 'inherit';\n            htmlFontWeight = 'inherit';\n        }\n        if (m1 === 1) { // 太字化\n            htmlFontWeight = 'bold';\n        }\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\n            htmlColor = colorNames[m1 - 30];\n        }\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\n    }) + '</span>');\n    // 各表現を返す。\n    return {\n        noColor,\n        nodeConsole: text === noColor\n            ? noColor // textが色の情報を含まないならnoColorを返す。\n            : text + '\\x1b[0m',\n        html,\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\n    };\n};\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\n","/** NakoLogger */\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport { NakoColors } from './nako_colors.mjs';\n/** ログレベル - 数字が高いほど優先度が高い。 */\nexport class LogLevel {\n    // string to level no\n    static fromS(levelStr) {\n        let level = LogLevel.trace;\n        switch (levelStr) {\n            case 'all':\n                level = LogLevel.all;\n                break;\n            case 'trace':\n                level = LogLevel.trace;\n                break;\n            case 'debug':\n                level = LogLevel.debug;\n                break;\n            case 'info':\n                level = LogLevel.info;\n                break;\n            case 'warn':\n                level = LogLevel.warn;\n                break;\n            case 'error':\n                level = LogLevel.error;\n                break;\n            case 'stdout':\n                level = LogLevel.stdout;\n                break;\n            default:\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\n        }\n        return level;\n    }\n    static toString(level) {\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\n        return levels[level];\n    }\n}\n// level no\nLogLevel.all = 0;\nLogLevel.trace = 1;\nLogLevel.debug = 2;\nLogLevel.info = 3;\nLogLevel.warn = 4;\nLogLevel.error = 5;\nLogLevel.stdout = 6;\n/**\n * エラー位置を日本語で表示する。\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\n */\nfunction stringifyPosition(p) {\n    if (!p) {\n        return '';\n    }\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\n}\n/**\n * コンパイラのログ情報を出力するためのクラス。\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\n */\nexport class NakoLogger {\n    constructor() {\n        this.listeners = [];\n        this.logs = '';\n        this.position = '';\n    }\n    getErrorLogs() {\n        return [this.logs.replace(/\\s+$/, ''), this.position];\n    }\n    clear() {\n        this.logs = '';\n        this.position = '';\n    }\n    /**\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\n     * @param levelStr\n     * @param callback\n     */\n    addListener(levelStr, callback) {\n        const level = LogLevel.fromS(levelStr);\n        this.listeners.push({ level, callback });\n    }\n    /**\n     * addListenerメソッドで設定したコールバックを取り外す。\n     * @param {LogListener} callback\n     */\n    removeListener(callback) {\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\n    }\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    trace(message, position = null) {\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** 本体開発時のデバッグ情報\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    debug(message, position = null) {\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    info(message, position = null) {\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（重要なもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    warn(message, position = null) {\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** エラーメッセージ\n     * @param {string | Error} message\n     * @param {Position | null} position\n     */\n    error(message, position = null) {\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\n        if (message instanceof Error && typeof message.type === 'string') {\n            // NakoErrorか\n            const etype = message.type;\n            switch (etype) {\n                case 'NakoRuntimeError':\n                case 'NakoError':\n                    if (message instanceof NakoError) {\n                        const e = message;\n                        let pos = position;\n                        if (pos === null || pos === undefined) {\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\n                        }\n                        this.sendI(LogLevel.error, e.message, pos);\n                        return;\n                    }\n            }\n        }\n        if (message instanceof Error) {\n            // 一般のエラーの場合は、messageのみ取得できる。\n            message = message.message;\n        }\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** RuntimeErrorを生成する */\n    runtimeError(error, posStr) {\n        const e = new NakoRuntimeError(error, posStr);\n        return e;\n    }\n    /** ユーザープログラムのデバッグ情報（すべて)\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    stdout(message, position = null) {\n        this.sendI(LogLevel.stdout, `${message}`, position);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\n        const i = LogLevel.fromS(levelStr);\n        this.sendI(i, nodeConsole, position, html, browserConsole);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\n        const makeData = () => {\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\n            let style = '';\n            if (nodeConsole.includes('\\n')) {\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\n            }\n            // 各イベントリスナーが受け取るデータ\n            const data = {\n                noColor: formats.noColor,\n                nodeConsole: formats.nodeConsole,\n                browserConsole: browserConsole || formats.browserConsole,\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>',\n                level: LogLevel.toString(level),\n                position\n            };\n            return data;\n        };\n        // エラーならログに追加\n        if (level === LogLevel.error) {\n            const data = makeData();\n            this.logs += data.noColor + '\\n';\n            if (position && this.position !== null) {\n                this.position = `l${position.line}:${position.file}`;\n            }\n        }\n        // 登録したリスナーに通知する\n        for (const l of this.listeners) {\n            if (l.level <= level) {\n                const data = makeData();\n                l.callback(data);\n            }\n        }\n    }\n}\n","import { NakoColors } from './nako_colors.mjs';\n/**\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\n */\nexport class NakoGlobal {\n    /**\n     * @param compiler\n     * @param gen\n     */\n    constructor(compiler, gen, guid = 0) {\n        this.guid = guid;\n        this.lastJSCode = '';\n        // ユーザーのプログラムから編集される変数\n        this.__locals = {};\n        this.__varslist = [\n            { ...compiler.__varslist[0] },\n            { ...compiler.__varslist[1] },\n            { ...compiler.__varslist[2] } // local [2][3][4][5] ...\n        ];\n        this.numFailures = 0;\n        this.index = 0;\n        this.nextIndex = -1;\n        this.__code = [];\n        this.__callstack = [];\n        this.__stack = [];\n        this.__labels = [];\n        this.__genMode = gen.genMode;\n        // バージョン情報の引き継ぎ\n        this.version = compiler.version;\n        this.coreVersion = compiler.coreVersion;\n        // PluginSystemとdestroy()から参照するため\n        this.__module = { ...compiler.__module }; // shallow copy\n        this.pluginfiles = { ...compiler.getPluginfiles() };\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\n        this.gen = gen;\n        // 以下のメソッドで使うため\n        this.logger = compiler.getLogger();\n        this.compiler = compiler;\n    }\n    clearLog() {\n        this.__varslist[0]['表示ログ'] = '';\n    }\n    get log() {\n        let s = this.__varslist[0]['表示ログ'];\n        s = s.replace(/\\s+$/, '');\n        return s;\n    }\n    /**\n     * 「ナデシコ」命令のためのメソッド\n     */\n    runEx(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return this.compiler.runSync(code, fname, opts);\n    }\n    async runAsync(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return await this.compiler.runAsync(code, fname, opts);\n    }\n    /**\n     * テスト実行のためのメソッド\n     * @param {{ name: string, f: () => void }[]} tests\n     */\n    _runTests(tests) {\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\n        let pass = 0;\n        let numFailures = 0;\n        for (const t of tests) {\n            try {\n                t.f();\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\n                pass++;\n            }\n            catch (err) {\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\n                numFailures++;\n            }\n        }\n        if (numFailures > 0) {\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\n        }\n        else {\n            text += `${NakoColors.color.green}成功 ${pass}件`;\n        }\n        this.numFailures = numFailures;\n        this.logger.stdout(text);\n    }\n    /**\n     * 毎プラグインの「!クリア」関数を実行\n     */\n    clearPlugins() {\n        // 実行している関数をすべて終了させる\n        // プラグインのクリア関数を呼び出す\n        const clearName = '!クリア';\n        for (const pname in this.pluginfiles) {\n            const po = this.__module[pname];\n            if (po[clearName] && po[clearName].fn) {\n                po[clearName].fn(this);\n            }\n        }\n    }\n    /**\n     * 各種リセット処理\n     */\n    reset() {\n        this.clearPlugins();\n    }\n    destroy() {\n        this.reset();\n    }\n}\n","/** plugin_math */\nexport default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @三角関数\n    'SIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.sin(v);\n        }\n    },\n    'COS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.cos(v);\n        }\n    },\n    'TAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.tan(v);\n        }\n    },\n    'ARCSIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.asin(v);\n        }\n    },\n    'ARCCOS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.acos(v);\n        }\n    },\n    'ARCTAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.atan(v);\n        }\n    },\n    'ATAN2': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (y, x) {\n            return Math.atan2(y, x);\n        }\n    },\n    '座標角度計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (XY) {\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\n        }\n    },\n    'RAD2DEG': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'DEG2RAD': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    '度変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'ラジアン変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    // @算術関数\n    'SIGN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\n        }\n    },\n    '符号': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        fn: function (v, sys) {\n            return sys.__exec('SIGN', [v]);\n        }\n    },\n    'ABS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    '絶対値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    'EXP': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.exp(a);\n        }\n    },\n    'HYPOT': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    '斜辺': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    'LN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOG': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOGN': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            if (a === 2) {\n                return Math.LOG2E * Math.log(b);\n            }\n            if (a === 10) {\n                return Math.LOG10E * Math.log(b);\n            }\n            return Math.log(b) / Math.log(a);\n        }\n    },\n    'FRAC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '小数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '整数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.trunc(a);\n        }\n    },\n    '乱数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.floor(Math.random() * a);\n        }\n    },\n    '乱数範囲': {\n        type: 'func',\n        josi: [['から'], ['までの', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\n        }\n    },\n    'SQRT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    '平方根': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    // @数値切上切捨丸め\n    'ROUND': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '四捨五入': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '小数点切上': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.ceil(a * base) / base;\n        }\n    },\n    '小数点切下': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.floor(a * base) / base;\n        }\n    },\n    '小数点四捨五入': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.round(a * base) / base;\n        }\n    },\n    'CEIL': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    '切上': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    'FLOOR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    },\n    '切捨': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    }\n};\n","export const options = {\n    delimiter: ',',\n    eol: '\\r\\n'\n};\nexport function resetEnv() {\n    options.delimiter = ',';\n    options.eol = '\\r\\n';\n}\nexport function parse(txt, delimiter = undefined) {\n    // delimiter\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    // check txt\n    txt = '' + txt + '\\n';\n    // convert CRLF to LF, and CR to LF\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\n    // trim right\n    txt = txt.replace(/\\s+$/, '') + '\\n';\n    // set pattern\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\n    const reToDelim = new RegExp(patToDelim);\n    // if value is number then convert to float\n    const convType = function (v) {\n        if (typeof (v) === 'string') {\n            if (v.search(/^[0-9.]+$/) >= 0) {\n                v = parseFloat(v); // convert number\n            }\n        }\n        return v;\n    };\n    // parse txt\n    const res = [];\n    let cells = [];\n    let c = '';\n    while (txt !== '') {\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\n        c = txt.charAt(0);\n        if (c === delimiter) {\n            txt = txt.substring(1);\n            cells.push('');\n            continue;\n        }\n        // second check LF (#7)\n        if (c === '\\n') {\n            cells.push('');\n            res.push(cells);\n            cells = [];\n            txt = txt.substring(1);\n            continue;\n        }\n        // trim white space\n        txt = txt.replace(/^\\s+/, '');\n        c = txt.charAt(0);\n        // no data\n        if (c === delimiter) {\n            console.log('delimiter');\n            cells.push('');\n            txt = txt.substring(delimiter.length);\n            continue;\n        }\n        // written using the dialect of Excel\n        if (c === '=' && txt.charAt(1) === '\"') {\n            txt = txt.substring(1);\n            continue;\n        }\n        // number or simple string\n        if (c !== '\"') { // number or simple str\n            const m = reToDelim.exec(txt);\n            if (!m) {\n                cells.push(convType(txt));\n                res.push(cells);\n                cells = [];\n                break;\n            }\n            if (m[2] === '\\n') {\n                cells.push(convType(m[1]));\n                res.push(cells);\n                cells = [];\n            }\n            else if (m[2] === delimiter) {\n                cells.push(convType(m[1]));\n            }\n            txt = txt.substring(m[0].length);\n            continue;\n        }\n        // \"\" ... blank data\n        if (txt.substring(0, 2) === '\"\"') {\n            cells.push('');\n            txt = txt.substring(2);\n            continue;\n        }\n        // \"...\"\n        let i = 1;\n        let s = '';\n        while (i < txt.length) {\n            const c1 = txt.charAt(i);\n            const c2 = txt.charAt(i + 1);\n            // console.log(\"@\" + c1 + c2);\n            // 2quote => 1quote char\n            if (c1 === '\"' && c2 === '\"') {\n                i += 2;\n                s += '\"';\n                continue;\n            }\n            if (c1 === '\"') {\n                i++;\n                if (c2 === delimiter) {\n                    i++;\n                    cells.push(convType(s));\n                    s = '';\n                    break;\n                }\n                if (c2 === '\\n') {\n                    i++;\n                    cells.push(convType(s));\n                    res.push(cells);\n                    cells = [];\n                    break;\n                }\n                // if (c2 === \" \" || c2 === \"\\t\") {\n                i++;\n                continue;\n            }\n            s += c1;\n            i++;\n        }\n        txt = txt.substr(i);\n    }\n    if (cells.length > 0)\n        res.push(cells);\n    return res;\n}\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\n    // check arguments\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    if (eol === undefined) {\n        eol = options.eol;\n    }\n    const valueConv = genValueConverter(delimiter);\n    if (ary === undefined)\n        return '';\n    let r = '';\n    for (let i = 0; i < ary.length; i++) {\n        const cells = ary[i];\n        if (cells === undefined) {\n            r += eol;\n            continue;\n        }\n        for (let j = 0; j < cells.length; j++) {\n            cells[j] = valueConv(cells[j]);\n        }\n        r += cells.join(delimiter) + eol;\n    }\n    // replace return code\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\n    return r;\n}\nexport function replaceEolMark(eol) {\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\n    eol = eol.replace(/\\r/g, '[CR]');\n    eol = eol.replace(/\\n/g, '[LF]');\n    return eol;\n}\nfunction genValueConverter(delimiter) {\n    return function (s) {\n        s = '' + s;\n        let fQuot = false;\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf(delimiter) >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf('\"') >= 0) {\n            fQuot = true;\n            s = s.replace(/\"/g, '\"\"');\n        }\n        if (fQuot)\n            s = '\"' + s + '\"';\n        return s;\n    };\n}\n","import { options, parse, stringify } from './nako_csv.mjs';\nconst PluginCSV = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 基本的に初期化不要\n        }\n    },\n    // @CSV操作\n    'CSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = ',';\n            return parse(str);\n        }\n    },\n    'TSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = '\\t';\n            return parse(str);\n        }\n    },\n    '表CSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = ',';\n            return stringify(a);\n        }\n    },\n    '表TSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = '\\t';\n            return stringify(a);\n        }\n    }\n};\nexport default PluginCSV;\n","export default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (sys.__promise == null) {\n                sys.__promise = {\n                    setLastPromise: function (promise) {\n                        sys.__v0['そ'] = promise;\n                        return promise;\n                    }\n                };\n            }\n        }\n    },\n    // @非同期処理の保証の定数\n    'そ': { type: 'const', value: '' },\n    // @非同期処理の保証\n    '動時': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (callback, sys) {\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\n                return callback(resolve, reject);\n            }));\n        },\n        return_none: false\n    },\n    '成功時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return callback(result);\n            }));\n        },\n        return_none: false\n    },\n    '処理時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (cbFunc, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return cbFunc(true, result, sys);\n            }, (reason) => {\n                sys.__v0['対象'] = reason;\n                return cbFunc(false, reason, sys);\n            }));\n        },\n        return_none: false\n    },\n    '失敗時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.catch((err) => {\n                sys.__v0['対象'] = err;\n                return callback(err);\n            }));\n        },\n        return_none: false\n    },\n    '終了時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.finally(() => {\n                return callback();\n            }));\n        },\n        return_none: false\n    },\n    '束': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (...args) {\n            const sys = args.pop();\n            return sys.__promise.setLastPromise(Promise.all(args));\n        },\n        return_none: false\n    }\n};\n","/**\n * file: plugin_test.js\n * テスト実行用プラグイン\n */\nexport default {\n    // @テスト\n    'ASSERT等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: true,\n        fn: function (a, b) {\n            if (a !== b) {\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\n            }\n            return true;\n        }\n    },\n    'テスト実行': {\n        type: 'func',\n        josi: [['と'], ['で']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    },\n    'テスト等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    }\n};\n","// parser / lexer\nimport { NakoParser } from './nako_parser3.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NakoPrepare } from './nako_prepare.mjs';\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\nimport { NakoGenASync } from './nako_gen_async.mjs';\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\nimport { convertDNCL } from './nako_from_dncl.mjs';\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\nimport { NakoLogger } from './nako_logger.mjs';\nimport { NakoGlobal } from './nako_global.mjs';\n// version info\nimport coreVersion from './nako_core_version.mjs';\n// basic plugins\nimport PluginSystem from './plugin_system.mjs';\nimport PluginMath from './plugin_math.mjs';\nimport PluginCSV from './plugin_csv.mjs';\nimport PluginPromise from './plugin_promise.mjs';\nimport PluginTest from './plugin_test.mjs';\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\n/** コンパイラ実行オプションを生成 */\nexport function newCompilerOptions(initObj = {}) {\n    if (typeof initObj !== 'object') {\n        initObj = {};\n    }\n    initObj.testOnly = initObj.testOnly || false;\n    initObj.resetEnv = initObj.resetEnv || false;\n    initObj.resetAll = initObj.resetAll || false;\n    initObj.preCode = initObj.preCode || '';\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\n    return initObj;\n}\n/** なでしこコンパイラ */\nexport class NakoCompiler {\n    /**\n     * @param {undefined | {'useBasicPlugin':true|false}} options\n     */\n    constructor(options = undefined) {\n        if (options === undefined) {\n            options = { useBasicPlugin: true };\n        }\n        // 環境のリセット\n        this.__varslist = [{}, {}, {}]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\n        this.__locals = {}; // ローカル変数\n        this.__self = this;\n        this.__vars = this.__varslist[2];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        // バージョンを設定\n        this.version = coreVersion.version;\n        this.coreVersion = coreVersion.version;\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\n        this.__globalObj = null;\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\n        this.pluginFunclist = {}; // プラグインで定義された関数\n        this.funclist = {}; // プラグインで定義された関数 + ユーザーが定義した関数\n        this.pluginfiles = {}; // 取り込んだファイル一覧\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\n        this.nakoFuncList = {}; // __v1に配置するJavaScriptのコードで定義された関数\n        this.eventList = []; // 実行前に環境を変更するためのイベント\n        this.codeGenerateor = {}; // コードジェネレータ\n        this.debugOption = { useDebug: false, waitTime: 0 };\n        this.logger = new NakoLogger();\n        this.filename = 'main.nako3';\n        /**\n         * 取り込み文を置換するためのオブジェクト。\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\n         */\n        this.dependencies = {};\n        this.usedFuncs = new Set();\n        this.numFailures = 0;\n        if (options.useBasicPlugin) {\n            this.addBasicPlugins();\n        }\n        // 必要なオブジェクトを覚えておく\n        this.prepare = NakoPrepare.getInstance();\n        this.parser = new NakoParser(this.logger);\n        this.lexer = new NakoLexer(this.logger);\n        // 関数一覧を設定\n        this.lexer.setFuncList(this.funclist);\n    }\n    /** モジュール(名前空間)の一覧を取得する */\n    getModList() {\n        return this.lexer.modList;\n    }\n    getLogger() {\n        return this.logger;\n    }\n    getNakoFuncList() {\n        return this.nakoFuncList;\n    }\n    getNakoFunc(name) {\n        return this.nakoFuncList[name];\n    }\n    getPluginfiles() {\n        return this.pluginfiles;\n    }\n    /**\n     * 基本的なプラグインを追加する\n     */\n    addBasicPlugins() {\n        this.addPluginObject('PluginSystem', PluginSystem);\n        this.addPluginObject('PluginMath', PluginMath);\n        this.addPluginObject('PluginPromise', PluginPromise);\n        this.addPluginObject('PluginAssert', PluginTest);\n        this.addPluginObject('PluginCSV', PluginCSV);\n    }\n    /**\n     * loggerを新しいインスタンスで置き換える。\n     */\n    replaceLogger() {\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\n        return logger;\n    }\n    /**\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\n     * @param {Token[]} tokens rawtokenizeの出力\n     */\n    static listRequireStatements(tokens) {\n        const requireStatements = [];\n        for (let i = 0; i + 2 < tokens.length; i++) {\n            // not (string|string_ex) '取り込み'\n            if (!(tokens[i].type === 'not' &&\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\n                tokens[i + 2].value === '取込')) {\n                continue;\n            }\n            requireStatements.push({\n                ...tokens[i],\n                start: i,\n                end: i + 3,\n                value: tokens[i + 1].value + '',\n                firstToken: tokens[i],\n                lastToken: tokens[i + 2]\n            });\n            i += 2;\n        }\n        return requireStatements;\n    }\n    /**\n     * プログラムが依存するファイルを再帰的に取得する。\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\n     *\n     * @param {string} code\n     * @param {string} filename\n     * @param {string} preCode\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\n     *  - readNako3は指定されたファイルの中身を返す関数。\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\n     * @returns {Promise<unknown> | void}\n     * @protected\n     */\n    _loadDependencies(code, filename, preCode, tools) {\n        const dependencies = {};\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\n        /**\n         * @param {any} item\n         * @param {any} tasks\n         */\n        const loadJS = (item, tasks) => {\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\n            const obj = tools.readJs(item.filePath, item.firstToken);\n            tasks.push(obj.task.then((res) => {\n                const pluginFuncs = res();\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\n                dependencies[item.filePath].funclist = pluginFuncs;\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\n            }));\n        };\n        const loadNako3 = (item, tasks) => {\n            // nako3ならファイルを読んでdependenciesに保存する。\n            const content = tools.readNako3(item.filePath, item.firstToken);\n            const registerFile = (code) => {\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\n                // 「プラグイン名設定」を行う (#956)\n                const modName = NakoLexer.filenameToModName(item.filePath);\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\n                const tokens = this.rawtokenize(code, 0, item.filePath);\n                dependencies[item.filePath].tokens = tokens;\n                const funclist = {};\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist);\n                dependencies[item.filePath].funclist = funclist;\n                // 再帰\n                return loadRec(code, item.filePath, '');\n            };\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\n            tasks.push(content.task.then((res) => registerFile(res)));\n        };\n        const loadRec = (code, filename, preCode) => {\n            const tasks = [];\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\n            // パスを解決する\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\n            // 取り込み開始\n            for (const item of tagsResolvePath) {\n                // 2回目以降の読み込み\n                // eslint-disable-next-line no-prototype-builtins\n                if (dependencies.hasOwnProperty(item.filePath)) {\n                    dependencies[item.filePath].alias.add(item.value);\n                    continue;\n                }\n                // 初回の読み込み\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {} };\n                if (item.type === 'js' || item.type === 'mjs') {\n                    loadJS(item, tasks);\n                }\n                else if (item.type === 'nako3') {\n                    loadNako3(item, tasks);\n                }\n                else {\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\n                }\n            }\n            if (tasks.length > 0) {\n                return Promise.all(tasks);\n            }\n            return undefined;\n        };\n        try {\n            const result = loadRec(code, filename, preCode);\n            // 非同期な場合のエラーハンドリング\n            if (result !== undefined) {\n                result.catch((err) => {\n                    // 読み込みに失敗したら処理を中断する\n                    this.logger.error(err.msg);\n                    this.numFailures++;\n                });\n            }\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\n            // loadDependencies() が並列実行されるときに正しく動作しない。\n            this.dependencies = dependencies;\n            return result;\n        }\n        catch (err) {\n            // 同期処理では素直に例外を投げる\n            this.logger.error('' + err);\n            throw err;\n        }\n    }\n    /**\n     * コードを単語に分割する\n     * @param code なでしこのプログラム\n     * @param line なでしこのプログラムの行番号\n     * @param filename\n     * @param preCode\n     * @returns トークンのリスト\n     */\n    rawtokenize(code, line, filename, preCode = '') {\n        if (!code.startsWith(preCode)) {\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\n        }\n        // 名前空間のモジュールリストに自身を追加\n        const modName = NakoLexer.filenameToModName(filename);\n        const modList = this.getModList();\n        if (modList.indexOf(modName) < 0) {\n            modList.unshift(modName);\n        }\n        // 全角半角の統一処理\n        const preprocessed = this.prepare.convert(code);\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        // トークン分割\n        let tokens;\n        try {\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\n        }\n        catch (err) {\n            if (!(err instanceof InternalLexerError)) {\n                throw err;\n            }\n            // エラー位置をソースコード上の位置に変換して返す\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\n        }\n        // DNCL ver2 (core #41)\n        tokens = convertDNCL2(tokens);\n        // DNCL ver1 (#1140)\n        tokens = convertDNCL(tokens);\n        // インデント構文を変換 #596\n        tokens = convertIndentSyntax(tokens);\n        // インラインインデントを変換 #1215\n        tokens = convertInlineIndent(tokens);\n        // ソースコード上の位置に変換\n        tokens = tokens.map((token) => {\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\n            let line = token.line;\n            let column = 0;\n            if (token.type === 'eol' && dest.endOffset !== null) {\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\n                // 行末のeolのlineは次の行の行数を表す必要がある。\n                const out = offsetToLineColumn.map(dest.endOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            else if (dest.startOffset !== null) {\n                const out = offsetToLineColumn.map(dest.startOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            return {\n                ...token,\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\n                rawJosi: token.josi\n            };\n        });\n        return tokens;\n    }\n    /**\n     * 単語の属性を構文解析に先立ち補正する\n     * @param {Token[]} tokens トークンのリスト\n     * @param {boolean} isFirst 最初の呼び出しかどうか\n     * @param {string} filename\n     * @returns コード (なでしこ)\n     */\n    converttoken(tokens, isFirst, filename) {\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\n        return tok;\n    }\n    /**\n     * 環境のリセット\n     * {NakoResetOption|undefined}\n     */\n    reset(options = undefined) {\n        if (!options || options.needToClearPlugin) {\n            // (メモ) #1245\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\n            this.clearPlugins();\n        }\n        /**\n         * なでしこのローカル変数をスタックで管理\n         * __varslist[0] プラグイン領域\n         * __varslist[1] なでしこグローバル領域\n         * __varslist[2] 最初のローカル変数 ( == __vars }\n         */\n        this.__varslist = [this.__varslist[0], {}, {}];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        this.__vars = this.__varslist[2];\n        this.__locals = {};\n        // プラグイン命令以外を削除する。\n        this.funclist = {};\n        for (const name of Object.keys(this.__v0)) {\n            const original = this.pluginFunclist[name];\n            if (!original) {\n                continue;\n            }\n            this.funclist[name] = JSON.parse(JSON.stringify(original));\n        }\n        this.lexer.setFuncList(this.funclist);\n        this.logger.clear();\n    }\n    /**\n     * typeがcodeのトークンを単語に分割するための処理\n     * @param {string} code\n     * @param {number} line\n     * @param {string} filename\n     * @param {number | null} startOffset\n     * @returns\n     * @private\n     */\n    lexCodeToken(code, line, filename, startOffset) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, line, filename, '');\n        // 文字列内位置からファイル内位置へ変換\n        if (startOffset === null) {\n            for (const token of tokens) {\n                token.startOffset = undefined;\n                token.endOffset = undefined;\n            }\n        }\n        else {\n            for (const token of tokens) {\n                if (token.startOffset !== undefined) {\n                    token.startOffset += startOffset;\n                }\n                if (token.endOffset !== undefined) {\n                    token.endOffset += startOffset;\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, false, filename);\n        return { tokens, commentTokens };\n    }\n    /**\n     * 再帰的にrequire文を置換する。\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\n     * @param {TokenWithSourceMap[]} tokens\n     * @param {Set<string>} [includeGuard]\n     * @returns {Token[]} 削除された取り込み文のトークン\n     */\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\n            if (includeGuard.has(r.value)) {\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\n                continue;\n            }\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath === undefined) {\n                if (!r.firstToken) {\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\n                }\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\n            }\n            this.dependencies[filePath].addPluginFile();\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\n            includeGuard.add(r.value);\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\n        }\n        return deletedTokens;\n    }\n    /**\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\n     * @param {TokenWithSourceMap[]} tokens\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\n     */\n    removeRequireStatements(tokens) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath !== undefined) {\n                this.dependencies[filePath].addPluginFile();\n            }\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\n        }\n        return deletedTokens;\n    }\n    /** 字句解析を行う */\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\n        // require文を再帰的に置換する\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\n        for (const t of requireStatementTokens) {\n            if (t.type === 'word' || t.type === 'not') {\n                t.type = 'require';\n            }\n        }\n        if (requireStatementTokens.length >= 3) {\n            // modList を更新\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\n                let modName = requireStatementTokens[i + 1].value;\n                modName = NakoLexer.filenameToModName(modName);\n                if (this.lexer.modList.indexOf(modName) < 0) {\n                    this.lexer.modList.push(modName);\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, true, filename);\n        for (let i = 0; i < tokens.length; i++) {\n            if (tokens[i] && tokens[i].type === 'code') {\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\n                commentTokens.push(...children.commentTokens);\n                tokens.splice(i, 1, ...children.tokens);\n                i--;\n            }\n        }\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\n    }\n    /**\n     * コードをパースしてASTにする\n     */\n    parse(code, filename, preCode = '') {\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setFuncList(this.funclist);\n        this.parser.setFuncList(this.funclist);\n        // 字句解析を行う\n        const lexerOutput = this.lex(code, filename, preCode);\n        // 構文木を作成\n        let ast;\n        try {\n            this.parser.genMode = 'sync'; // set default\n            ast = this.parser.parse(lexerOutput.tokens, filename);\n        }\n        catch (err) {\n            if (typeof err.startOffset !== 'number') {\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\n            }\n            throw err;\n        }\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\n        return ast;\n    }\n    getUsedFuncs(ast) {\n        const queue = [ast];\n        this.usedFuncs = new Set();\n        while (queue.length > 0) {\n            const ast_ = queue.pop();\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\n            }\n        }\n        return this.deleteUnNakoFuncs();\n    }\n    getUsedAndDefFuncs(astQueue, blockQueue) {\n        while (blockQueue.length > 0) {\n            const block = blockQueue.pop();\n            if (block !== null && block !== undefined) {\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\n            }\n        }\n    }\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\n            this.usedFuncs.add(block.name);\n        }\n        astQueue.push([block, block.block]);\n        // eslint-disable-next-line prefer-spread\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\n    }\n    deleteUnNakoFuncs() {\n        for (const func of this.usedFuncs) {\n            if (!this.commandlist.has(func)) {\n                this.usedFuncs.delete(func);\n            }\n        }\n        return this.usedFuncs;\n    }\n    /**\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\n     * @param code コード (なでしこ)\n     * @param filename\n     * @param isTest テストかどうか\n     * @param preCode\n     */\n    compile(code, filename, isTest = false, preCode = '') {\n        const opt = newCompilerOptions();\n        opt.testOnly = isTest;\n        opt.preCode = preCode;\n        const res = this.compileFromCode(code, filename, opt);\n        return res.runtimeEnv;\n    }\n    /** parse & generate  */\n    compileFromCode(code, filename, options = undefined) {\n        if (filename === '') {\n            filename = 'main.nako3';\n        }\n        if (options === undefined) {\n            options = newCompilerOptions();\n        }\n        try {\n            if (options.resetEnv) {\n                this.reset();\n            }\n            if (options.resetAll) {\n                this.clearPlugins();\n            }\n            // onBeforeParse\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\n            // parse\n            const ast = this.parse(code, filename, options.preCode);\n            // onBeforeGenerate\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\n            // generate\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\n            // onAfterGenerate\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\n            return outCode;\n        }\n        catch (e) {\n            this.logger.error(e);\n            throw e;\n        }\n    }\n    /**\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\n     * @param ast\n     * @param opt テストかどうか\n     */\n    generateCode(ast, opt) {\n        // Select Code Generator #637\n        const mode = ast.genMode || '';\n        // normal mode\n        if (mode === 'sync') {\n            return generateJS(this, ast, opt);\n        }\n        // 非推奨の非同期モード #1164\n        if (mode === '非同期モード') {\n            this.logger.warn('『!非同期モード』の利用は非推奨です。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\n            return NakoGenASync.generate(this, ast, opt.isTest);\n        }\n        // その他のコードジェネレータ(PHPなど)\n        const genObj = this.codeGenerateor[mode];\n        if (!genObj) {\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\n        }\n        return genObj.generate(this, ast, opt.isTest);\n    }\n    /** コードジェネレータを追加する */\n    addCodeGenerator(mode, obj) {\n        this.codeGenerateor[mode] = obj;\n    }\n    /** (非推奨)\n     * @param code\n     * @param fname\n     * @param isReset\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    async _run(code, fname, isReset, isTest, preCode = '') {\n        const opts = newCompilerOptions({\n            resetEnv: isReset,\n            resetAll: isReset,\n            testOnly: isTest,\n            preCode\n        });\n        return this._runEx(code, fname, opts);\n    }\n    /** 各プラグインをリセットする */\n    clearPlugins() {\n        // 他に実行している「なでしこ」があればクリアする\n        this.__globals.forEach((sys) => {\n            sys.__varslist[0].forceClose = true; // core #56\n            sys.reset();\n        });\n        this.__globals = []; // clear\n    }\n    /**\n     * 環境を指定してJavaScriptのコードを実行する\n     * @param code JavaScriptのコード\n     * @param nakoGlobal 実行環境\n     */\n    evalJS(code, nakoGlobal) {\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\n        this.__globalObj.lastJSCode = code;\n        try {\n            // eslint-disable-next-line no-new-func\n            const f = new Function(code);\n            f.apply(nakoGlobal);\n        }\n        catch (err) {\n            // なでしこコードのエラーは抑止してログにのみ記録\n            nakoGlobal.numFailures++;\n            this.getLogger().error(err);\n            throw err;\n        }\n        // 実行後に終了イベントを実行(finish)\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\n    }\n    /**\n     * 同期的になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runSync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    /**\n     * 非同期になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     */\n    async runAsync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    getNakoGlobal(options, gen, filename) {\n        // オプションを参照\n        let g = options.nakoGlobal;\n        if (!g) {\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\n                g = this.__globals[this.__globals.length - 1];\n            }\n            else {\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\n            }\n            // 名前空間を設定\n            g.__varslist[0]['名前空間'] = NakoLexer.filenameToModName(filename);\n        }\n        if (this.__globals.indexOf(g) < 0) {\n            this.__globals.push(g);\n        }\n        return g;\n    }\n    /**\n     * イベントを登録する\n     * @param eventName イベント名\n     * @param callback コールバック関数\n     */\n    addListener(eventName, callback) {\n        this.eventList.push({ eventName, callback });\n    }\n    /**\n     * テストを実行する\n     * @param code\n     * @param fname\n     * @param preCode\n     * @param testOnly\n     */\n    test(code, fname, preCode = '', testOnly = false) {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        options.testOnly = testOnly;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\n     * @param code\n     * @param fname\n     * @param [preCode]\n     * @deprecated 代わりに runAsync を使ってください。\n     */\n    run(code, fname = 'main.nako3', preCode = '') {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * JavaScriptのみで動くコードを取得する場合\n     * @param code\n     * @param filename\n     * @param opt\n     */\n    compileStandalone(code, filename, opt = null) {\n        if (opt === null) {\n            opt = new NakoGenOptions();\n        }\n        const ast = this.parse(code, filename);\n        return this.generateCode(ast, opt).standalone;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPlugin(po, persistent = true) {\n        // 変数のメタ情報を確認\n        const __v0 = this.__varslist[0];\n        if (__v0.meta === undefined) {\n            __v0.meta = {};\n        }\n        // プラグインの値をオブジェクトにコピー\n        for (const key in po) {\n            const v = po[key];\n            this.funclist[key] = v;\n            if (persistent) {\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\n            }\n            if (v.type === 'func') {\n                __v0[key] = v.fn;\n            }\n            else if (v.type === 'const' || v.type === 'var') {\n                __v0[key] = v.value;\n                __v0.meta[key] = {\n                    readonly: (v.type === 'const')\n                };\n            }\n            else {\n                console.error('[プラグイン追加エラー]', v);\n                throw new Error('プラグインの追加でエラー。');\n            }\n            // コマンドを登録するか?\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\n                continue;\n            }\n            this.commandlist.add(key);\n        }\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param objName オブジェクト名\n     * @param po 関数リスト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginObject(objName, po, persistent = true) {\n        this.__module[objName] = po;\n        this.pluginfiles[objName] = '*';\n        // 初期化をチェック\n        if (typeof (po['初期化']) === 'object') {\n            const def = po['初期化'];\n            delete po['初期化'];\n            const initKey = `!${objName}:初期化`;\n            po[initKey] = def;\n        }\n        // メタ情報をチェック (#1034)\n        if (po.meta && po.meta.value && typeof (po.meta) === 'object') {\n            const meta = po.meta;\n            delete po.meta;\n            const pluginName = meta.value.pluginName || objName;\n            const metaKey = `__${pluginName}`.replace('-', '__');\n            po[metaKey] = meta;\n        }\n        this.addPlugin(po, persistent);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param fpath ファイルパス\n     * @param po 登録するオブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginFile(objName, fpath, po, persistent = true) {\n        // Windowsのパスがあると、JSファイル書き出しでエラーになるので、置換する\n        if (objName.indexOf('\\\\') >= 0) {\n            objName = objName.replace(/\\\\/g, '/');\n        }\n        this.addPluginObject(objName, po, persistent);\n        if (this.pluginfiles[objName] === undefined) {\n            this.pluginfiles[objName] = fpath;\n        }\n    }\n    /**\n     * 関数を追加する\n     * @param {string} key 関数名\n     * @param {string[][]} josi 助詞\n     * @param {Function} fn 関数\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\n     */\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.funclist[key] = { josi, fn, type: 'func', return_none: returnNone, asyncFn, pure: true };\n        this.pluginFunclist[key] = cloneAsJSON(this.funclist[key]);\n        this.__varslist[0][key] = fn;\n    }\n    /** (非推奨) 互換性のため ... 関数を追加する\n     * @deprecated 代わりにaddFuncを使ってください\n    */\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.funclist[key];\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\n        // コンパイル\n        opts.preCode = preCode;\n        if (nakoGlobal) {\n            opts.nakoGlobal = nakoGlobal;\n        }\n        return this.runSync(code, filename, opts);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @param code\n     * @param fname\n     * @param opts\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runEx(code, fname, opts, preCode = '') {\n        return this._runEx(code, fname, opts, preCode);\n    }\n    /**\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\n     * @param code\n     * @param fname\n     * @param [preCode]\n     */\n    async runReset(code, fname = 'main.nako3', preCode = '') {\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\n        return this._runEx(code, fname, opts, preCode);\n    }\n}\n","// @ts-nocheck\nexport default {\n    // @色定数\n    '水色': { type: 'const', value: 'aqua' },\n    '紫色': { type: 'const', value: 'fuchsia' },\n    '緑色': { type: 'const', value: 'lime' },\n    '青色': { type: 'const', value: 'blue' },\n    '赤色': { type: 'const', value: 'red' },\n    '黄色': { type: 'const', value: 'yellow' },\n    '黒色': { type: 'const', value: 'black' },\n    '白色': { type: 'const', value: 'white' },\n    '茶色': { type: 'const', value: 'maroon' },\n    '灰色': { type: 'const', value: 'gray' },\n    '金色': { type: 'const', value: 'gold' },\n    '黄金色': { type: 'const', value: 'gold' },\n    '銀色': { type: 'const', value: 'silver' },\n    '白金色': { type: 'const', value: 'silver' },\n    'オリーブ色': { type: 'const', value: 'olive' },\n    'ベージュ色': { type: 'const', value: 'beige' },\n    'アリスブルー色': { type: 'const', value: 'aliceblue' },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['と'], ['で', 'の']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        },\n        return_none: false\n    },\n    '色混': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            if (!a) {\n                throw new Error('『色混ぜる』の引数には配列を指定します');\n            }\n            if (a.length < 3) {\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\n            }\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\n        },\n        return_none: false\n    }\n};\n","export default {\n    // @HTTPとAJAX\n    'HTTP取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信時': {\n        type: 'func',\n        josi: [['で'], ['から', 'を']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'AJAX送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\n                if (res.status !== 200) {\n                    return sys.__v0['AJAX:ONERROR'](res.status);\n                }\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text, sys);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        },\n        return_none: true\n    },\n    'AJAXオプション': { type: 'const', value: '' },\n    'AJAXオプション設定': {\n        type: 'func',\n        josi: [['に', 'へ', 'と']],\n        pure: true,\n        fn: function (option, sys) {\n            sys.__v0['AJAXオプション'] = option;\n        },\n        return_none: true\n    },\n    'AJAXオプションPOST設定': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            sys.__v0['AJAXオプション'] = options;\n        },\n        return_none: true\n    },\n    'AJAX失敗時': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['AJAX:ONERROR'] = callback;\n        }\n    },\n    'AJAXテキスト取得': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.text();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAX_JSON取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.json();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAXバイナリ取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const bin = await res.blob();\n            return bin;\n        },\n        return_none: false\n    },\n    // @GETとPOST\n    'GET送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: false,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'POST送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        fn: function (callback, url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTフォーム送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTデータ生成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (params, sys) {\n            const flist = [];\n            for (const key in params) {\n                const v = params[key];\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\n                flist.push(kv);\n            }\n            return flist.join('&');\n        }\n    },\n    'POST送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: bodyData\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    'POSTフォーム送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const fd = new FormData();\n                for (const key in params) {\n                    fd.set(key, params[key]);\n                }\n                const options = {\n                    method: 'POST',\n                    body: fd\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    // @HTTPとAJAX(保証)\n    'AJAX保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'HTTP保障取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            return sys.__exec('AJAX保障送信', [url, sys]);\n        },\n        return_none: false\n    },\n    'POST保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'POSTフォーム保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'AJAX内容取得': {\n        type: 'func',\n        josi: [['から'], ['で']],\n        pure: true,\n        fn: function (res, type, sys) {\n            type = type.toString().toUpperCase();\n            if (type === 'TEXT' || type === 'テキスト') {\n                return res.text();\n            }\n            else if (type === 'JSON') {\n                return res.json();\n            }\n            else if (type === 'BLOB') {\n                return res.blob();\n            }\n            else if (type === 'ARRAY' || type === '配列') {\n                return res.arrayBuffer();\n            }\n            else if (type === 'BODY' || type === '本体') {\n                return res.body;\n            }\n            return res.body();\n        },\n        return_none: false\n    },\n    // @Blob\n    'BLOB作成': {\n        type: 'func',\n        josi: [['を', 'から'], ['で']],\n        pure: true,\n        fn: function (data, options) {\n            if (!(data instanceof Array)) {\n                data = [data];\n            }\n            return new Blob(data, options);\n        }\n    },\n    // @HTTPとAJAX(非推奨)\n    'AJAX逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve();\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'HTTP逐次取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: false,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.__exec('AJAX逐次送信', [url, sys]);\n        },\n        return_none: true\n    },\n    'POST逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'POSTフォーム逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\n// plugin_browser_in_worker.js\nimport PartBrowserColor from './plugin_browser_color.mjs';\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\nimport PartBrowserHtml from './plugin_browser_html.mjs';\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\nconst BrowserParts = [\n    PartBrowserColor,\n    PartBrowserAjax,\n    PartBrowserHtml,\n    PartBrowserWebsocket\n];\nconst PluginBrowserInWorker = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            /* eslint no-global-assign: 0 */\n            if (typeof self === 'undefined') {\n                self = {};\n            }\n            if (typeof navigator === 'undefined') {\n                navigator = {};\n            }\n            // 定数を初期化\n            sys.__v0['AJAX:ONERROR'] = (err) => { console.log(err); };\n            // オブジェクトを初期化\n            sys.__v0.SELF = self;\n            sys.__v0.NAVIGATOR = navigator;\n        }\n    }\n};\nBrowserParts.forEach((a) => {\n    const b = {};\n    Object.assign(b, a);\n    if (typeof b['初期化'] !== 'undefined') {\n        delete b['初期化'];\n    }\n    Object.assign(PluginBrowserInWorker, b);\n});\nexport default PluginBrowserInWorker;\n","// @ts-nocheck\nexport default {\n    // @HTML操作\n    'HTML変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (text) {\n            return String(text)\n                .replace(/&/g, '&amp;')\n                .replace(/>/g, '&gt;')\n                .replace(/</g, '&lt;');\n        }\n    },\n    // @クリップボード\n    'クリップボード設定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (text) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                await navigator.clipboard.writeText(text);\n                return;\n            }\n            // Clipboard APIをサポートしていない場合\n            const tmp = document.createElement('div');\n            const pre = document.createElement('pre');\n            pre.style.webkitUserSelect = 'auto';\n            pre.style.userSelect = 'auto';\n            tmp.appendChild(pre).textContent = text;\n            // 画面外へ表示する\n            tmp.style.position = 'fixed';\n            tmp.right = '200%';\n            document.body.appendChild(tmp);\n            document.getSelection().selectAllChildren(tmp);\n            document.execCommand('copy');\n            document.body.removeChild(tmp);\n        },\n        return_none: true\n    },\n    'クリップボード取得時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (f, sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                if (typeof (f) === 'string') {\n                    f = sys.__findFunc(f, 'クリップボード取得時');\n                }\n                const pm = navigator.clipboard.readText();\n                pm.then(text => {\n                    sys.__v0['対象'] = text;\n                    f(sys);\n                });\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    },\n    'クリップボード取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: async function (sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                const result = await navigator.clipboard.readText();\n                return result;\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @WebSocket\n    'WS接続完了時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONOPEN'] = callback;\n        },\n        return_none: true\n    },\n    'WS受信時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONMESSAGE'] = callback;\n        },\n        return_none: true\n    },\n    'WSエラー発生時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONERROR'] = callback;\n        },\n        return_none: true\n    },\n    'WS接続': {\n        type: 'func',\n        josi: [['に', 'へ', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = new WebSocket(s);\n            ws.onopen = () => {\n                const cbOpen = sys.__v0['WS:ONOPEN'];\n                if (cbOpen) {\n                    cbOpen(sys);\n                }\n            };\n            ws.onerror = (err) => {\n                const cbError = sys.__v0['WS:ONERROR'];\n                if (cbError) {\n                    cbError(err, sys);\n                }\n                console.log('WSエラー', err);\n            };\n            ws.onmessage = (e) => {\n                sys.__v0['対象'] = e.data;\n                const cbMsg = sys.__v0['WS:ONMESSAGE'];\n                if (cbMsg) {\n                    cbMsg(sys);\n                }\n            };\n            sys.__v0['WS:SOCKET'] = ws;\n            return ws;\n        }\n    },\n    'WS送信': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.send(s);\n        }\n    },\n    'WS切断': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.close();\n        }\n    }\n};\n","// @ts-nocheck\nconst PluginWorker = {\n  '初期化': {\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      sys.__v0.SELF = self || {}\n      sys.__v0['依頼主'] = self || {}\n    }\n  },\n\n  '対象イベント': { type: 'const', value: '' }, // @たいしょういべんと\n  '受信データ': { type: 'const', value: '' }, // @たいしょういべんと\n  'SELF': { type: 'const', value: '' }, // @SELF\n  '依頼主': { type: 'const', value: '' }, // @SELF\n\n  'NAKOワーカーデータ受信時': { // @無名関数Fでなでしこv3エンジンに対してワーカーメッセージによりデータを受信した時に実行するイベントを設定。『受信データ』に受信したデータM。『対象イベント』にイベント引数。 // @NAKOわーかーでーたじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      sys.__varslist[0]['PluginWorker:ondata'] = (data, e) => {\n        sys.__v0['受信データ'] = data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      }\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ受信時': { // @無名関数Fでselfに対してメッセージを受信した時に実行するイベントを設定。『受信データ』に受信したデータ。『対象イベント』にイベント引数。 // @わーかーめっせーじじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      self.onmessage = (e) => {\n        sys.__v0['受信データ'] = e.data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      }\n    },\n    return_none: true\n  },\n  'NAKOワーカーデータ送信': { // @起動もとに固有の形式でデータを送信する。 // @NAKOわーかーでーたへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'data',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ送信': { // @起動もとにメッセージを送信する。 // @わーかーめっせーじへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (msg, sys) {\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '表示': { // @メインスレッドに固有の形式で表示データを送信する。 // @ひょうじ\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'output',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '終了': { // @ワーカーを終了する。 // @しゅうりょう\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      close()\n    },\n    return_none: true\n  }\n}\n\n// module.exports = PluginWorker\nexport default PluginWorker\n\n\n","// nadesiko for web browser worker\n// wwnako3.js\nimport { NakoCompiler } from '../core/src/nako3.mjs'\nimport PluginBrowserInWorker from './plugin_browser_in_worker.mjs'\nimport PluginWorker from './plugin_worker.mjs'\n\nclass WebWorkerNakoCompiler extends NakoCompiler {\n  constructor () {\n    super()\n    this.__varslist[0]['ナデシコ種類'] = 'wwnako3'\n    this.__varslist[0]['PluginWorker:ondata'] = (data, event) => {\n      throw new Error('『NAKOワーカーデータ受信時』が呼ばれていません。')\n    }\n  }\n}\n\n// ブラウザワーカーなら navigator.nako3 になでしこを登録\n// eslint-disable-next-line no-undef\nif (typeof (navigator) === 'object' && self && self instanceof WorkerGlobalScope) {\n  /** @type {WebWorkerNakoCompiler} */\n  const nako3Compiler = navigator.nako3 = new WebWorkerNakoCompiler()\n  /** @type {WebWorkerNakoCompiler | import('./nako_global')} */\n  let nako3Global = nako3Compiler\n  \n  nako3Compiler.addPluginObject('PluginBrowserInWorker', PluginBrowserInWorker)\n  nako3Compiler.addPluginObject('PluginWorker', PluginWorker)\n\n  nako3Compiler.getLogger().addListener('error', function (obj) {\n    self.postMessage({\n      type: 'error',\n      data: obj\n    })\n  }, false)\n\n  self.onmessage = (event) => {\n    const data = event.data || { type: '', data: '' }\n    const type = data.type || ''\n    const value = data.data || ''\n    switch (type) {\n      case 'reset':\n        nako3Compiler.reset()\n        break\n      case 'close':\n        self.close()\n        break\n      case 'run':\n        nako3Global = nako3Global.runEx(value, '_webworker.nako3', { resetEnv: false, resetLog: false })\n        break\n      case 'trans':\n        value.forEach(o => {\n          if (o.type === 'func') {\n            nako3Compiler.nakoFuncList[o.name] = o.content.meta\n            nako3Compiler.funclist[o.name] = o.content.func\n            nako3Compiler.__varslist[1][o.name] = () => {}\n          } else if (o.type === 'val') {\n            nako3Compiler.__varslist[2][o.name] = o.content\n          }\n        })\n        break\n      case 'data':\n        if (nako3Global.__varslist[0]['PluginWorker:ondata']) {\n          nako3Global.__varslist[0]['PluginWorker:ondata'].apply(nako3Global, [value, event])\n        }\n        break\n    }\n  }\n}\n\n"],"names":["version","major","minor","patch","NakoError","Error","constructor","tag","msg","file","line","positionJa","undefined","super","replace","this","name","type","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","static","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","fname","push","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","Set","loopId","numAsyncFn","usedAsyncFn","flagLoop","__self","genMode","lastLineNo","varslistSet","__varslist","map","v","isFunction","names","Object","keys","readonly","varsSet","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","constPools","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","test","convLineno","node","forceUpdate","incLine","lineNoStr","lineDataJSON","JSON","stringify","debugCode","useDebug","messageAction","waitTime","varname","length","isValidIdentifier","indexOf","a","split","getFuncName","name2","convRequire","moduleName","value","getDefFuncCode","opt","code","getModList","nakoFuncCode","key","f","fn","asyncFn","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","josi","getFunc","registerFunction","ast","funcList","registFunc","block","blockList","Array","i","t","add","meta","initialNames","convGen","result","_convGen","isExpression","n","blocks","b","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convTikuji","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","findVar","has","isTop","js","genVar","position","res","lno","dispName","getLogger","warn","pv","getNakoFunc","commentSrc","String","poolIndex","cmd","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","from","values","varnames","word","oldUsedAsyncFn","join","includes","pop","e","list","index","codeInit","codeArray","checkInit","arrayDefCode","convGenLoop","tmpflag","varName","idLoop","varI","kara","made","to","flagDown","inc","varFrom","varTo","sorePrefex","target","nameS","id","options","prev","cond","varId","cases","body","cvalue","cblock","expr","falseBlock","false_block","curName","errorCode","errorBlock","convFuncGetArgsCalcType","_funcName","_func","args","opts","nodeArgs","arg","sore","getPluginList","r","__module","funcName","func","return_none","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","pure","localVars","str","indent","text","repeat","noCheckFuncs","argsCode","argsA","forEach","argStr","funcCall","right","left","OP_TBL","eq","noteq","gt","lt","gteq","lteq","and","or","shift_l","shift_r","shift_r0","op","operator","jsName","nodeName","vtype","vartype","mode","rf","errBlock","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","generateJS","gen","jsInit","funcID","Date","getTime","Math","floor","random","asyncMain","syncMain","trace","codeImportFiles","importNames","ff","standaloneJSCode","coreVersion","initCode","runtimeEnv","standalone","NakoCodeNop","NakoCodeLabel","NakoCodeEOL","NakoCodeJump","NakoCodeJumpIfTrue","NakoCodeJumpIfFalse","NakoCodeCall","NakoCodeCallObj","NakoCodeReturn","NakoCodeTry","NakoCodeCode","NakoCode","no","NakoGenASync","nakoTestList","codeId","labelContinue","labelBreak","labels","getVarsCode","toString","needToFixAddr","codes","filter","usedLabels","splice","s","addCode","addCodeStr","convFunc","codeStr","a2","row","c","makeLabel","uniqLabel","makeLabelDirectly","labelName","makeJump","label","makeJumpIfTrue","makeJumpIfFalse","labelBegin","labelEnd","labelIfFalse","loopVar","loopCount","labelCheck","o","isMumeiFunc","codeCall","size","labelInc","taisyo","targetArray","targetKeys","setTarget","_node","_isExpression","varValue","nextLabel","isJSFunc","arcCount","nameObj","vname","labelExcept","navigator","nako3","addCodeGenerator","josiList","tararebaJosiList","removeJosiList","tararebaMap","removeJosiMap","sort","josiRE","RegExp","pluginName","pluginVersion","nakoRuntime","nakoVersion","sys","isDebug","__v0","__namespaceList","__findVar","nameStr","def","__locals","varScope","modList","__modList","__modName","modName","gname","scope","__findFunc","parentFunc","__exec","params","f0","apply","__timeout","__interval","z2","__zero2","substring","__zero","keta","zeroS","__formatDate","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","parseFloat","__printPool","chk","constId","cp","logger","__genMode","__stopAsync","PI","NaN","Infinity","send","isVariableJosi","console","log","aa","pow","reduce","p","__reisetu","src","eval","async","Function","obj","m","runEx","resetEnv","resetLog","out","resetAll","tf","performance","now","t1","forceClose","isNaN","Number","g","v2","fromCodePoint","fromCharCode","prototype","codePointAt","charCodeAt","ss","cnt","toUpperCase","toLowerCase","chr","zen1","han1","zen2","han2","c2","n2","charAt","j","parse","re","sa","global","z","ufunc","reverse","tmp","old","concat","x","y","max","min","nn","ns","ms","col","cols","rows","k","idx","nr","slice","sum","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","d","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","hasOwnProperty","call","pluginfiles","then","mod","assign","catch","w","default","encodeURIComponent","decodeURIComponent","url","kv","window","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","defineProperty","enumerable","get","prop","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","column","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","substr","ii","trimOkurigana","beginTag","closeTag","NakoLexer","funclist","setFuncList","listObj","replaceTokens","tokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","isFuncPointer","readArgs","funcPointer","funcPointers","already","kai","isMumei","prevToken","defToken","funcNameToken","splitStringEx","arr","end","comment","modSelf","gname1","gfo1","gfo","fo","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","sep","NakoParser","stackList","usedFuncs","stack","namespaceStack","funcLevel","localvars","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","init","reset","popStack","saveStack","loadStack","info","gnameSelf","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","debugMode","depth","typeName","debug","subNode","node2","table","not","startParser","ySentenceList","ySentence","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yTikuji","yRequire","yASyncMode","yDNCLMode","ySetGenMode","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","ver","shift","yBlock","yDefFuncReadArgs","yDef","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","tanbun","optionNode","val","tikuji","tugini","tuginiType","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","kurikaesu","incdec","vInc","vTo","vFrom","yReturn","yForEach","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","getVarName","ySadameru","sadameru","createVar","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","funcObj","nullCount","valueCount","popArg","funcNode","space","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","yJSONArray","createVarList","checkArrayIndex","checkArrayReverse","ary","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","yValueWord","yValueWordGetIndex","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","convertTable","Map","_instance","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","lastTokenInfo","newToken","templateToken","isSkipWord","joinTokenLines","lines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","pat","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","findIndex","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","clear","addListener","callback","fromS","removeListener","l","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","pname","clearName","destroy","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__vars","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","getInstance","parser","lexer","replaceLogger","requireStatements","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","listRequireStatements","resolvePath","alias","startsWith","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","find","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","delete","compile","compileFromCode","eventName","outCode","generateCode","genObj","generate","isReset","_runEx","evalJS","getNakoGlobal","run","compileStandalone","persistent","fpath","returnNone","setFunc","method","fetch","status","option","headers","json","blob","bodyData","fd","FormData","set","flist","arrayBuffer","Blob","resolveCount","PluginBrowserInWorker","self","SELF","NAVIGATOR","clipboard","writeText","document","createElement","pre","webkitUserSelect","userSelect","appendChild","textContent","getSelection","selectAllChildren","execCommand","removeChild","readText","ws","WebSocket","onopen","cbOpen","onerror","cbError","onmessage","cbMsg","close","postMessage","WebWorkerNakoCompiler","event","WorkerGlobalScope","nako3Compiler","nako3Global"],"sourceRoot":""}