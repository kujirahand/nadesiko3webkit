{"version":3,"file":"wnako3webworker.js","mappings":"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","sources":["webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_gen_async.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_in_worker.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_worker.mjs","webpack://nadesiko3/./src/wnako3webworker.mjs"],"sourcesContent":["// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst coreVersion = {\n    version: '3.4.21',\n    major: 3,\n    minor: 4,\n    patch: 21\n};\nexport default coreVersion;\n","/**\n * なでしこ言語が投げる全てのエラーが継承するクラス\n */\nexport class NakoError extends Error {\n    constructor(tag, msg, file = undefined, line = undefined) {\n        // エラー位置を分かりやすく日本語に変換\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\n        // 親のErrorを呼ぶ\n        super(`[${tag}]${positionJa}${msg}`);\n        // エラーの種類を設定\n        this.name = 'NakoError';\n        this.type = 'NakoError';\n        this.tag = '[' + tag + ']';\n        this.positionJa = positionJa;\n        this.msg = msg;\n    }\n}\nexport class NakoIndentError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} line\n     * @param {string} file\n     */\n    constructor(msg, line, file) {\n        super('インデントエラー', msg, file, line);\n        this.type = 'NakoIndentError';\n        this.line = line;\n        this.file = file;\n    }\n}\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\nexport class InternalLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} preprocessedCodeStartOffset\n     * @param {number} preprocessedCodeEndOffset\n     * @param {number | undefined} [line]\n     * @param {string | undefined} [file]\n     */\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\n        super('字句解析エラー（内部エラー）', msg, file, line);\n        this.type = 'InternalLexerError';\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | null} startOffset\n     * @param {number | null} endOffset,\n     * @param {number | undefined} line\n     * @param {string | undefined} file\n     */\n    constructor(msg, startOffset, endOffset, line, file) {\n        super('字句解析エラー', msg, file, line);\n        this.type = 'NakoLexerError';\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoSyntaxError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {Ast} first\n     * @param {Ast} [last]\n     */\n    static fromNode(msg, first, last = undefined) {\n        if (!first) {\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\n        }\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\n        const endOffset = (last && typeof last.endOffset === 'number')\n            ? last.endOffset\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\n    }\n    /**\n     * @param {string} msg\n     * @param {number | undefined} line\n     * @param {number | undefined} startOffset\n     * @param {number | undefined} endOffset\n     * @param {string | undefined} file\n     */\n    constructor(msg, line, startOffset, endOffset, file) {\n        super('文法エラー', msg, file, line);\n        this.type = 'NakoSyntaxError';\n        this.file = file;\n        this.line = line;\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n    }\n}\nexport class NakoRuntimeError extends NakoError {\n    /**\n     * @param error エラー\n     * @param lineNo 発生行\n     */\n    constructor(error, lineNo) {\n        let msg = 'unknown';\n        if (typeof error === 'string') {\n            msg = error;\n        }\n        else {\n            if (error instanceof NakoRuntimeError) {\n                msg = error.msg;\n            }\n            else if (error instanceof NakoError) {\n                msg = error.msg;\n            }\n            else if (error instanceof Error) {\n                if (error.name === 'Error') {\n                    msg = error.message;\n                }\n                else {\n                    msg = `${error.name}: ${error.message}`;\n                }\n            }\n        }\n        // 行番号を表す文字列をパースする。\n        let line;\n        let file;\n        let matches;\n        if (lineNo === undefined) {\n            line = undefined;\n            file = undefined;\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = matches[2];\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = 'main.nako3';\n        }\n        else {\n            line = 0;\n            file = lineNo;\n        }\n        super('実行時エラー', msg, file, line);\n        this.type = 'NakoRuntimeError';\n        this.lineNo = lineNo;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoImportError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     */\n    constructor(msg, file, line) {\n        super('取り込みエラー', msg, file, line);\n        this.file = file;\n        this.line = line;\n    }\n}\n","/**\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお速度優先で忠実にJavaScriptのコードを生成する。\n */\nimport { NakoSyntaxError } from './nako_errors.mjs';\n// なでしこで定義した関数の開始コードと終了コード\nconst topOfFunction = '(function(){\\n';\nconst endOfFunction = '})';\nconst topOfFunctionAsync = '(async function(){\\n';\n/** コード生成オプション */\nexport class NakoGenOptions {\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\n        this.isTest = isTest;\n        this.codeStandalone = codeStandalone;\n        this.codeEnv = convEnv;\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\n        for (const fname of importFiles) {\n            this.importFiles.push(fname);\n        }\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGen {\n    /** constructor\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         */\n        this.nakoTestFuncs = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         */\n        this.loopId = 1;\n        /**\n         * 非同関数を何回使ったか\n         */\n        this.numAsyncFn = 0;\n        /**\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\n         */\n        this.usedAsyncFn = false;\n        /** 変換中の処理が、ループの中かどうかを判定する */\n        this.flagLoop = false;\n        this.__self = com;\n        /** コードジェネレータの種類 */\n        this.genMode = 'sync';\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\n        this.lastLineNo = null;\n        /** スタック */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /** スタックトップ */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0,\n            mumeiId: 0\n        };\n        /**\n         * 未定義の変数の警告を行う\n         */\n        this.warnUndefinedVar = true;\n        this.constPools = [];\n        this.constPoolsTemplate = [];\n        // 暫定変数\n        this.warnUndefinedReturnUserFunc = 1;\n        this.warnUndefinedCallingUserFunc = 1;\n        this.warnUndefinedCallingSystemFunc = 1;\n        this.warnUndefinedCalledUserFuncArgs = 1;\n        this.debugOption = com.debugOption;\n    }\n    static isValidIdentifier(name) {\n        // TODO: いらなそうな部分は削る\n        // https://stackoverflow.com/a/9337047\n        // eslint-disable-next-line no-misleading-character-class\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\n    }\n    /**\n     * 改行を埋め込む\n     */\n    convLineno(node, forceUpdate = false, incLine = 0) {\n        // スピードモードでは行番号を埋め込まない\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        const lineNo = node.line + incLine;\n        let lineNoStr;\n        if (typeof node.line !== 'number') {\n            lineNoStr = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNoStr = `l${lineNo}`;\n        }\n        else {\n            lineNoStr = `l${lineNo}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNoStr === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNoStr;\n        }\n        // 実行行のデータ\n        const lineDataJSON = JSON.stringify(lineNoStr);\n        // デバッグ実行か\n        let debugCode = '';\n        if (this.debugOption.useDebug) {\n            // messageAction\n            if (this.debugOption.messageAction) {\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\n                    `line: ${lineDataJSON}});`;\n            }\n            // waitTime\n            if (lineNo >= 1) {\n                if (this.debugOption.waitTime > 0) {\n                    debugCode += `await __v0['秒待'](${this.debugOption.waitTime},__self);`;\n                }\n                // breakpoints\n                this.numAsyncFn += 1;\n                this.usedAsyncFn = true;\n                debugCode += `await __v0['__DEBUG_BP_WAIT'](${lineNo}, __self);`;\n            }\n            // end\n            debugCode += 'if(__v0.forceClose){return-1};';\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${lineDataJSON};` + debugCode;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * @param {string} name\n     */\n    varname(name) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__varslist[${2}][${JSON.stringify(name)}]`;\n        }\n        else {\n            // 関数内\n            if (NakoGen.isValidIdentifier(name)) {\n                return name;\n            }\n            else {\n                return `__vars[${JSON.stringify(name)}]`;\n            }\n        }\n    }\n    /**\n     * @param {string} name\n     * @returns {string}\n    */\n    static getFuncName(name) {\n        if (name.indexOf('__') >= 0) { // スコープがある場合\n            const a = name.split('__');\n            const scope = a[0];\n            const name3 = NakoGen.getFuncName(a[1]);\n            return `${scope}__${name3}`;\n        }\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\n        if (name2 === '') {\n            name2 = name;\n        }\n        return name2;\n    }\n    /** @param {Ast} node */\n    static convPrint(node) {\n        return `__print(${node});`;\n    }\n    /** @param {Ast} node */\n    convRequire(node) {\n        const moduleName = node.value;\n        return this.convLineno(node, false) +\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param com\n     * @param opt\n     */\n    getDefFuncCode(com, opt) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\n        code += 'const __self = self;\\n';\n        code += 'self.__self = self;\\n';\n        code += 'const __varslist = self.__varslist;\\n';\n        code += 'const __module = self.__module;\\n';\n        code += 'const __v0 = self.__v0 = self.__varslist[0];\\n';\n        code += 'const __v1 = self.__v1 = self.__varslist[1];\\n';\n        code += 'const __vars = self.__vars = self.__varslist[2];\\n';\n        code += `const __modList = self.__modList = ${JSON.stringify(com.getModList())}\\n`;\n        code += '__v0.line = 0;\\n';\n        code += '__v0.forceClose = false;\\n';\n        code += `__v0.useDebug = ${this.debugOption.useDebug};\\n`;\n        // 定数を埋め込む\n        code += 'self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\n        code += 'self.constPoolsTemplate = ' + JSON.stringify(this.constPoolsTemplate) + ';\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            const isAsync = this.nakoFuncList[key].asyncFn ? 'true' : 'false';\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\n                `self.__varslist[1][\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // テストの定義を行う\n        if (opt.isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestFuncs) {\n                const f = this.nakoTestFuncs[key].fn;\n                testCode += `${f};\\n;`;\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        /** 関数一覧 */\n        const funcList = [];\n        // なでしこ関数を定義して this.nako_func[name] に定義する\n        const registFunc = (node) => {\n            if (!node.block) {\n                return;\n            }\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\n            for (let i = 0; i < blockList.length; i++) {\n                const t = blockList[i];\n                if (t.type === 'def_func') {\n                    if (!t.name) {\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\n                    }\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.varslistSet[1].names.add(name); // global\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\n                    this.nakoFuncList[name] = {\n                        josi: meta.josi,\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        fn: () => { },\n                        type: 'func',\n                        asyncFn: t.asyncFn,\n                        isExport: t.isExport\n                    };\n                    funcList.push({ name, node: t });\n                    // eslint-disable-next-line brace-style\n                }\n                // 実行速度優先 などのオプションが付いている場合の処理\n                else if (t.type === 'speed_mode') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        // 関数の登録\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param node\n     * @param opt\n     */\n    convGen(node, opt) {\n        const result = this.convLineno(node, false) + this._convGen(node, true);\n        if (opt.isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        if (!node) {\n            return '';\n        }\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            case 'nop':\n                break;\n            case 'block':\n                if (!node.block) {\n                    return code;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\n                for (let i = 0; i < blocks.length; i++) {\n                    const b = blocks[i];\n                    code += this._convGen(b, false);\n                }\n                break;\n            case 'comment':\n            case 'eol':\n                code += this.convComment(node);\n                break;\n            case 'break':\n                code += this.convCheckLoop(node, 'break');\n                break;\n            case 'continue':\n                code += this.convCheckLoop(node, 'continue');\n                break;\n            case 'end':\n                code += '__v0[\\'終\\'](__self);';\n                break;\n            case 'number':\n                code += node.value;\n                break;\n            case 'bigint':\n                code += node.value;\n                break;\n            case 'string':\n                code += this.convString(node);\n                break;\n            case 'def_local_var':\n                code += this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.convDefLocalVarlist(node);\n                break;\n            case 'let':\n                code += this.convLet(node);\n                break;\n            case 'inc':\n                code += this.convInc(node);\n                break;\n            case 'word':\n            case 'variable':\n                code += this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                code += this.convOp(node);\n                break;\n            case 'renbun':\n                code += this.convRenbun(node);\n                break;\n            case 'not':\n                code += '((' + this._convGen(node.value, true) + ')?false:true)';\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                code += this.convCallFunc(node, isExpression);\n                break;\n            case 'if':\n                code += this.convIf(node);\n                break;\n            case 'tikuji':\n                code += this.convTikuji(node);\n                break;\n            case 'for':\n                code += this.convFor(node);\n                break;\n            case 'foreach':\n                code += this.convForeach(node);\n                break;\n            case 'repeat_times':\n                code += this.convRepeatTimes(node);\n                break;\n            case 'speed_mode':\n                code += this.convSpeedMode(node, isExpression);\n                break;\n            case 'performance_monitor':\n                code += this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'while':\n                code += this.convWhile(node);\n                break;\n            case 'atohantei':\n                code += this.convAtohantei(node);\n                break;\n            case 'switch':\n                code += this.convSwitch(node);\n                break;\n            case 'let_array':\n                code += this.convLetArray(node);\n                break;\n            case '配列参照':\n                code += this.convRefArray(node);\n                break;\n            case 'json_array':\n                code += this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                code += this.convJsonObj(node);\n                break;\n            case 'func_obj':\n                code += this.convFuncObj(node);\n                break;\n            case 'bool':\n                code += (node.value) ? 'true' : 'false';\n                break;\n            case 'null':\n                code += 'null';\n                break;\n            case 'def_test':\n                code += this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.convDefFunc(node);\n                break;\n            case 'return':\n                code += this.convReturn(node);\n                break;\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    /** 変数を検索 */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: this.varname(name) };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\n                // それ以外の変数は、必ず__varslistに入っている。\n                return { i, name, isTop: false, js: `__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                if (this.warnUndefinedVar) {\n                    // main__は省略して表示するように。 #1223\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\n                }\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getNakoFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi || pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        return this.genVar(name, node);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        const lno = this.convLineno(node, false);\n        let value;\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        else if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        else {\n            return lno + 'return;';\n        }\n        if (this.warnUndefinedReturnUserFunc === 0) {\n            return lno + `return ${value};`;\n        }\n        else {\n            const poolIndex = this.addConstPool('ユーザ関数からundefinedが返されています', [], node.file, node.line);\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\n        }\n    }\n    getConstPoolsTemplateId(msg) {\n        let id = this.constPoolsTemplate.indexOf(msg);\n        if (id < 0) {\n            id = this.constPoolsTemplate.length;\n            this.constPoolsTemplate[id] = msg;\n        }\n        return id;\n    }\n    addConstPool(msg, args, file, line) {\n        // file\n        file = '' + file;\n        const fileNo = this.getConstPoolsTemplateId(file);\n        // msg\n        const msgNo = this.getConstPoolsTemplateId(msg);\n        // args\n        const args2 = [];\n        for (const i in args) {\n            const arg = '' + args[i];\n            const argNo = this.getConstPoolsTemplateId(arg);\n            args2.push(argNo);\n        }\n        const poolIndex = this.constPools.length;\n        this.constPools.push([msgNo, args2, fileNo, line]);\n        return poolIndex;\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        return this.convLineno(node) + cmd + ';';\n    }\n    convDefFuncCommon(node, name) {\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\n        let performanceMonitorInjectAtStart = '';\n        let performanceMonitorInjectAtEnd = '';\n        if (this.performanceMonitor.userFunction !== 0) {\n            let key = name;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\n                'const uf_start = performance.now() * 1000;\\n' +\n                'return function () {\\n' +\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\n                `}};})('${key}', 'user');` +\n                'try {\\n';\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\n        }\n        let variableDeclarations = '';\n        const popStack = '';\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        variableDeclarations += '  var 引数 = arguments;\\n';\n        // ローカル変数を生成\n        variableDeclarations += '  var __vars = {};\\n';\n        // 宣言済みの名前を保存\n        const varsDeclared = Array.from(this.varsSet.names.values());\n        let code = '';\n        // 引数をローカル変数に設定\n        const meta = (!name) ? node.meta : node.name.meta;\n        for (let i = 0; i < meta.varnames.length; i++) {\n            const word = meta.varnames[i];\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\n                code += `  ${this.varname(word)} = arguments[${i}];\\n`;\n            }\n            else if (name) {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('ユーザ関数(${name})の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            else {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('匿名関数の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            this.varsSet.names.add(word);\n        }\n        // 関数定義は、グローバル領域で。\n        if (name) {\n            this.usedFuncSet.add(name);\n            this.varslistSet[1].names.add(name);\n            if (this.nakoFuncList[name] === undefined) {\n                // 既に generate で作成済みのはず(念のため)\n                this.nakoFuncList[name] = {\n                    josi: node.name.meta.josi,\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    fn: () => { },\n                    type: 'func',\n                    asyncFn: false,\n                    isExport: null\n                };\n                this.__self.getLogger().warn(`generateで未定義の状態の関数『${name}』が動的に登録されています。`);\n            }\n        }\n        // ブロックを解析\n        const oldUsedAsyncFn = this.usedAsyncFn;\n        this.usedAsyncFn = false || this.debugOption.useDebug;\n        const block = this._convGen(node.block, false);\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\n        // 関数の最後に、変数「それ」をreturnするようにする\n        if (this.speedMode.invalidSore === 0) {\n            code += `  return (${this.varname('それ')});\\n`;\n        }\n        // パフォーマンスモニタ:ユーザ関数のinject\n        code += performanceMonitorInjectAtEnd;\n        // ブロックでasyncFnを使ったか\n        if (name && this.usedAsyncFn) {\n            this.nakoFuncList[name].asyncFn = true;\n        }\n        // 関数の末尾に、ローカル変数をPOP\n        // 関数内で定義されたローカル変数の宣言\n        for (const name of Array.from(this.varsSet.names.values())) {\n            if (!varsDeclared.includes(name)) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    variableDeclarations += `  var ${name};\\n`;\n                }\n            }\n        }\n        if (this.speedMode.invalidSore === 0) {\n            if (NakoGen.isValidIdentifier('それ')) {\n                variableDeclarations += '  var それ = \\'\\';\\n';\n            }\n            else {\n                variableDeclarations += `  ${this.varname('それ')} = '';`;\n            }\n        }\n        // usedAsyncFnの値に応じて関数定義の方法を変更\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\n        // 関数コード全体を構築\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\n        code = tof + performanceMonitorInjectAtStart + variableDeclarations + lineInfo + code + popStack;\n        code += endOfFunction;\n        // 名前があれば、関数を登録する\n        if (name) {\n            this.nakoFuncList[name].fn = code;\n            this.nakoFuncList[name].asyncFn = this.usedAsyncFn;\n            meta.asyncFn = this.usedAsyncFn;\n        }\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        if (name) {\n            this.__self.__varslist[1][name] = code;\n        }\n        return code;\n    }\n    convDefTest(node) {\n        const name = node.name.value;\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\n        // ブロックを解析\n        const block = this._convGen(node.block, false);\n        code += `   ${block}\\n` +\n            '}});';\n        this.nakoTestFuncs[name] = {\n            josi: node.name.meta.josi,\n            fn: code,\n            type: 'test_func'\n        };\n        // ★この時点ではテストコードを生成しない★\n        // プログラム冒頭でコード生成時にテストの定義を行う\n        return '';\n    }\n    convDefFunc(node) {\n        // ※ [関数定義のメモ]\n        // ※ 関数の定義はプログラムの冒頭に移される。\n        // ※ そのため、生成されたコードはここでは返さない\n        // ※ registerFunction を参照\n        if (!node.name) {\n            return '';\n        }\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            const key = this._convGen(e.key, true);\n            const val = this._convGen(e.value, true);\n            return `${key}:${val}`;\n        });\n        return '{' + codelist.join(',') + '}';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            return this._convGen(e, true);\n        });\n        return '[' + codelist.join(',') + ']';\n    }\n    convRefArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index;\n        let code = name;\n        if (!list) {\n            return code;\n        }\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        return code;\n    }\n    convLetArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index || [];\n        let codeInit = '';\n        let code = name;\n        let codeArray = '';\n        // codeInit?\n        if (node.checkInit) {\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\n            codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${name} = ${arrayDefCode}; /*console.log('初期化:${name}')*/ };`;\n            for (let i = 0; i < list.length - 1; i++) {\n                const idx = this._convGen(list[i], true);\n                codeArray += `[${idx}]`;\n                codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; };`;\n                // codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; console.log('初期化:${i}:${name}${codeArray}',JSON.stringify(${name})) }; `\n            }\n            codeInit += '\\n';\n        }\n        // array\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        // value\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        code += ' = ' + value + ';\\n';\n        // generate code\n        const src = this.convLineno(node, false) + codeInit + code;\n        return src;\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value; // todo: Forの最初のパラメータが Token か Astか確認\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const idLoop = this.loopId++;\n        const varI = `$nako_i${idLoop}`;\n        // ループ条件を確認\n        const kara = this._convGen(node.from, true);\n        const made = this._convGen(node.to, true);\n        const flagDown = node.flagDown;\n        let inc = '1';\n        if (node.inc && node.inc !== 'null') {\n            inc = this._convGen(node.inc, true);\n        }\n        // ループ内のブロック内容を得る\n        const block = this.convGenLoop(node.block);\n        // ループ条件を変数に入れる用\n        const varFrom = `$nako_from${idLoop}`;\n        const varTo = `$nako_to${idLoop}`;\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `\\n//[FOR id=${idLoop}]\\n` +\n            `const ${varFrom} = ${kara};\\n` +\n            `const ${varTo} = ${made};\\n` +\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\n            `    ${sorePrefex}${word} = ${varI};\\n` +\n            `    ${block}\\n` +\n            '  };\\n' +\n            '} else { // down\\n' +\n            `  if (${flagDown}) {` +\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\n            `      ${sorePrefex}${word} = ${varI};` + '\\n' +\n            `      ${block}\\n` +\n            '    }\\n' +\n            '  };\\n' +\n            `};\\n//[/FOR id=${idLoop}]\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convForeach(node) {\n        let target;\n        if (node.target === null) {\n            if (this.speedMode.invalidSore === 0) {\n                target = this.varname('それ');\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n            }\n        }\n        else {\n            target = this._convGen(node.target, true);\n        }\n        // blockより早く変数を定義する必要がある\n        let nameS = '__v0[\"対象\"]';\n        if (node.name) {\n            nameS = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        const block = this.convGenLoop(node.block);\n        const id = this.loopId++;\n        const key = '__v0[\"対象キー\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_foreach_v${id}=${target};\\n` +\n            `for (let $nako_i${id} in $nako_foreach_v${id})` + '{\\n' +\n            `  if ($nako_foreach_v${id}.hasOwnProperty($nako_i${id})) {\\n` +\n            `    ${nameS} = ${sorePrefex}$nako_foreach_v${id}[$nako_i${id}];` + '\\n' +\n            `    ${key} = $nako_i${id};\\n` +\n            `    ${block}\\n` +\n            '  }\\n' +\n            '};\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convRepeatTimes(node) {\n        const id = this.loopId++;\n        const value = this._convGen(node.value, true);\n        const block = this.convGenLoop(node.block);\n        const kaisu = '__v0[\"回数\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_times_v${id} = ${value};\\n` +\n            `for(var $nako_i${id} = 1; $nako_i${id} <= $nako_times_v${id}; $nako_i${id}++)` + '{\\n' +\n            `  ${sorePrefex}${kaisu} = $nako_i${id};` + '\\n' +\n            '  ' + block + '\\n}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convSpeedMode(node, isExpression) {\n        if (!node.options) {\n            return '';\n        }\n        const prev = { ...this.speedMode };\n        if (node.options['行番号無し']) {\n            this.speedMode.lineNumbers++;\n        }\n        if (node.options['暗黙の型変換無し']) {\n            this.speedMode.implicitTypeCasting++;\n        }\n        if (node.options['強制ピュア']) {\n            this.speedMode.forcePure++;\n        }\n        if (node.options['それ無効']) {\n            this.speedMode.invalidSore++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.speedMode = prev;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (!node.options) {\n            return '';\n        }\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.performanceMonitor = prev;\n        }\n    }\n    convWhile(node) {\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = `while (${cond})` + '{\\n' +\n            `  ${block}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convAtohantei(node) {\n        const id = this.loopId++;\n        const varId = `$nako_i${id}`;\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = 'for(;;) {\\n' +\n            `  ${block}\\n` +\n            `  let ${varId} = ${cond};\\n` +\n            `  if (${varId}) { continue } else { break }\\n` +\n            '}\\n\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convSwitch(node) {\n        const value = this._convGen(node.value, true);\n        const cases = node.cases || [];\n        let body = '';\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            const cblock = this.convGenLoop(cases[i][1]);\n            if (cvalue.type === '違えば') {\n                body += '  default:\\n';\n            }\n            else {\n                const cvalueCode = this._convGen(cvalue, true);\n                body += `  case ${cvalueCode}:\\n`;\n            }\n            body += `    ${cblock}\\n` +\n                '    break\\n';\n        }\n        const code = `switch (${value})` + '{\\n' +\n            `${body}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convIf(node) {\n        const expr = this._convGen(node.expr, true);\n        const block = this._convGen(node.block, false);\n        const falseBlock = (node.false_block === null)\n            ? ''\n            : 'else {' + this._convGen(node.false_block, false) + '};\\n';\n        return this.convLineno(node, false) +\n            `if (${expr}) {\\n  ${block}\\n}` + falseBlock + ';\\n';\n    }\n    convTikuji(node) {\n        // #1164 により「逐次実行」構文は近いうちに廃止する\n        const pid = this.loopId++;\n        // gen tikuji blocks\n        const curName = `__tikuji${pid}`;\n        let code = `const ${curName} = []\\n`;\n        const blocks = (node.blocks) ? node.blocks : [];\n        for (let i = 0; i < blocks.length; i++) {\n            const block = this._convGen(blocks[i], false).replace(/\\s+$/, '') + '\\n';\n            const blockLineNo = this.convLineno(blocks[i], true);\n            const blockCode = `${curName}.push(async function(resolve, reject) {\\n` +\n                '  __self.resolve = resolve;\\n' +\n                '  __self.reject = reject;\\n' +\n                '  __self.resolveCount = 0;\\n' +\n                `  ${blockLineNo}\\n` +\n                `  ${block}` +\n                '  if (__self.resolveCount === 0) resolve();\\n' +\n                // eslint-disable-next-line no-template-curly-in-string\n                '}); // end of tikuji__${pid}[{$i}]\\n';\n            code += blockCode;\n        }\n        code += `// end of ${curName} \\n`;\n        // gen error block\n        let errorCode = `  ${curName}.splice(0);\\n` + // clear\n            '  __v0[\"エラーメッセージ\"]=errMsg;\\n';\n        if (node.errorBlock != null) {\n            const errBlock = this._convGen(node.errorBlock, false).replace(/\\s+$/, '') + '\\n';\n            errorCode += errBlock;\n        }\n        code += `const ${curName}__reject = function(errMsg){\\n${errorCode}};\\n`;\n        // gen run block\n        code += '__self.resolve = undefined;\\n';\n        code += `const ${curName}__resolve = function(){\\n`;\n        code += '  setTimeout(async function(){\\n';\n        code += `    if (${curName}.length == 0) {return}\\n`;\n        code += `    const f = ${curName}.shift()\\n`;\n        code += `    await f(${curName}__resolve, ${curName}__reject);\\n`;\n        code += '  }, 0);\\n';\n        code += '};\\n';\n        code += `${curName}__resolve()\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convFuncGetArgsCalcType(_funcName, _func, node) {\n        const args = [];\n        const opts = {};\n        const nodeArgs = (node.args) ? node.args : [];\n        for (let i = 0; i < nodeArgs.length; i++) {\n            const arg = nodeArgs[i];\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\n                args.push(this.varname('それ'));\n                opts.sore = true;\n            }\n            else {\n                args.push(this._convGen(arg, true));\n            }\n        }\n        return [args, opts];\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convCallFunc(node, isExpression) {\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        // どの関数を呼び出すのか関数を特定する\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (!func) {\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\n            }\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\n        const args = argsInfo[0];\n        const argsOpts = argsInfo[1];\n        // function\n        this.usedFuncSet.add(funcName);\n        if (funcName === '名前空間設定') {\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__varslist[0]['名前空間設定'](${args[0]}, __self);__self.__modName=${args[0]};\\n`;\n        }\n        else if (funcName === 'プラグイン名設定') {\n            return `\\n__varslist[0]['プラグイン名設定'](${args[0]}, __self);\\n`;\n        }\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\n        args.push('__self');\n        let funcDef = 'function';\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\n            // 展開されたローカル変数の列挙\n            const localVars = [];\n            for (const name of Array.from(this.varsSet.names.values())) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    localVars.push({ str: JSON.stringify(name), js: this.varname(name) });\n                }\n            }\n            // --- 実行前 ---\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\n            funcBegin += '__self.__locals = __vars;\\n';\n            // 全ての展開されたローカル変数を __self.__locals に保存する\n            for (const v of localVars) {\n                funcBegin += `__self.__locals[${v.str}] = ${v.js};\\n`;\n            }\n            // --- 実行後 ---\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\n            for (const v of localVars) {\n                if (v.js !== 'それ') {\n                    funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\n                }\n            }\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        const indent = (text, n) => {\n            let result = '';\n            for (const line of text.split('\\n')) {\n                if (line !== '') {\n                    result += '  '.repeat(n) + line + '\\n';\n                }\n            }\n            return result;\n        };\n        // 引数チェックの例外 #1260\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\n        // 関数呼び出しコードの構築\n        let argsCode;\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\n            argsCode = args.join(',');\n        }\n        else {\n            const argsA = [];\n            args.forEach((arg) => {\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\n                    argsA.push(`${arg}`);\n                }\n                else {\n                    // 引数のundefinedチェックのコードを入れる\n                    const msg = (res.i === 0) ? '命令『$0』の引数にundefinedを渡しています。' : 'ユーザ命令『$0』の引数にundefinedを渡しています。';\n                    const poolIndex = this.addConstPool(msg, [funcName], node.file, node.line);\n                    // argが空になる対策 #1315\n                    const argStr = (arg === '') ? '\"\"' : arg;\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\n                }\n            });\n            argsCode = argsA.join(', ');\n        }\n        let funcCall = `${res.js}(${argsCode})`;\n        if (func.asyncFn) {\n            funcDef = `async ${funcDef}`;\n            funcCall = `await ${funcCall}`;\n            this.numAsyncFn++;\n            this.usedAsyncFn = true;\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\n            let key = funcName;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            funcCall = `(${funcDef} (key, type) {\\n` +\n                'const sbf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + funcCall + ';\\n' +\n                '} finally {\\n' +\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\n                `}}})('${funcName}_body', 'sysbody')\\n`;\n        }\n        let code = '';\n        if (func.return_none) {\n            // 戻り値のない関数の場合\n            if (funcEnd === '') {\n                if (funcBegin === '') {\n                    code = `${funcCall};\\n`;\n                }\n                else {\n                    code = `${funcBegin} ${funcCall};\\n`;\n                }\n            }\n            else {\n                code = `${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\n            }\n        }\n        else {\n            // 戻り値のある関数の場合\n            let sorePrefex = '';\n            if (this.speedMode.invalidSore === 0) {\n                sorePrefex = `${this.varname('それ')} = `;\n            }\n            if (funcBegin === '' && funcEnd === '') {\n                code = `(${sorePrefex}${funcCall})`;\n            }\n            else {\n                if (funcEnd === '') {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin};\\nreturn ${sorePrefex} ${funcCall}`, 1)}}).call(this)`;\n                }\n                else {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\n                }\n            }\n            // ...して\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\n                code += ';\\n';\n            }\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\n            code = '(function (key, type) {\\n' +\n                'const sf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + code + ';\\n' +\n                '} finally {\\n' +\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\n                `}}})('${funcName}_sys', 'system')\\n`;\n        }\n        return code;\n    }\n    convRenbun(node) {\n        const right = this._convGen(node.right, true);\n        const left = this._convGen(node.left, false);\n        this.numAsyncFn++;\n        this.usedAsyncFn = true;\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\n    }\n    convOp(node) {\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        let op = node.operator || ''; // 演算子\n        let right = this._convGen(node.right, true);\n        let left = this._convGen(node.left, true);\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\n            if (node.left && node.left.type !== 'number' && node.left.type !== 'bigint') {\n                left = `self.__parseFloatOrBigint(${left})`;\n            }\n            if (node.right && node.right.type !== 'number' && node.right.type !== 'bigint') {\n                right = `self.__parseFloatOrBigint(${right})`;\n            }\n        }\n        // 階乗\n        if (op === '^' || op === '**') {\n            return `((${left}) ** (${right}))`;\n        }\n        // 整数の割り算 #1152\n        if (op === '÷÷') {\n            return `(Math.floor(${left} / ${right}))`;\n        }\n        // 一般的なオペレータに変換\n        if (OP_TBL[op]) {\n            op = OP_TBL[op];\n        }\n        //\n        return `(${left} ${op} ${right})`;\n    }\n    convInc(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\n        }\n        // 配列への代入か(core#86)\n        let code = '';\n        let jsName;\n        const nodeName = node.name;\n        if (nodeName.type === '配列参照') {\n            jsName = this.convRefArray(nodeName);\n        }\n        else {\n            // 変数名\n            const name = nodeName.value;\n            let res = this.findVar(name);\n            if (res === null) {\n                this.varsSet.names.add(name);\n                res = this.findVar(name);\n                if (!res) {\n                    throw new Error('『増』または『減』で変数が見当たりません。');\n                }\n            }\n            jsName = res.js;\n        }\n        // 自動初期化するか\n        code += `if (typeof(${jsName}) === 'undefined') { ${jsName} = 0; }`;\n        code += `${jsName} += ${value}`;\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convLet(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        let code = '';\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)} = ${value};`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js} = ${value};`;\n        }\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convDefLocalVar(node) {\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        //\n        this.varsSet.names.add(name);\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        const code = `${this.varname(name)}=${value};\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        let code = '';\n        const vtype = node.vartype; // 変数 or 定数\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const id = this.loopId++;\n        const varI = `$nako_i${id}`;\n        code += `const ${varI}=${value}\\n`;\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\n        const names = (node.names) ? node.names : [];\n        for (let i = 0; i < names.length; i++) {\n            const nameObj = names[i];\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                // 複数変数文では、二重定義も許容する #1027\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\n            }\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            code += `${vname}=${varI}[${i}];\\n`;\n        }\n        return this.convLineno(node, false) + code;\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            const rf = (a, name) => {\n                return '\"+' + this.genVar(name, node) + '+\"';\n            };\n            value = value.replace(/\\{(.+?)\\}/g, rf);\n            value = value.replace(/｛(.+?)｝/g, rf);\n        }\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const block = this._convGen(node.block, false);\n        const errBlock = this._convGen(node.errBlock, false);\n        return this.convLineno(node, false) +\n            `try {\\n${block}\\n} catch (e) {\\n` +\n            '  __v0[\"エラーメッセージ\"] = e.message;\\n' +\n            ';\\n' +\n            `${errBlock}}\\n`;\n    }\n    getUsedFuncSet() {\n        return this.usedFuncSet;\n    }\n    getPluginInitCode() {\n        // プラグインの初期化関数を実行する\n        let code = '';\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'l0:プラグインの初期化\\';\\n' + pluginCode;\n        }\n        return code;\n    }\n}\n/** template of standalone js code */\nconst STANDALONE_CODE = `\n// === generated by nadesiko3 ===\n// <nadesiko3standalone>\n// --- import\nimport path from 'path'\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\n__codeImportFiles__\n// --- init global self\nconst self = {}\nself.coreVersion = '__coreVersion__'\nself.version = '__version__'\nself.logger = {\n  error: (message) => { console.error(message) },\n  warn: (message) => { console.warn(message) },\n  send: (level, message) => { console.log(message) },\n  runtimeError: (message, lineInfo) => { console.error(message, lineInfo) }\n};\nself.__varslist = [{}, {}, {}]\nself.__v0 = self.__varslist[0]\nself.initFuncList = []\nself.clearFuncList = []\n// --- jsInit ---\n__jsInit__\n// --- Copy module functions ---\nfor (const mod of __importNames__) {\n  for (const funcName in mod) {\n    // プラグインの初期化とクリア関数を登録\n    if (funcName === '初期化') {\n      self.initFuncList.push(mod[funcName].fn)\n      continue\n    }\n    if (funcName === '!クリア') {\n      self.clearFuncList.push(mod[funcName].fn)\n      continue\n    }\n    // 関数や定数を登録\n    const f = mod[funcName]\n    if (f.type === 'func') { // 関数\n      self.__varslist[0][funcName] = f.fn\n    } else { // 定数\n      self.__varslist[0][funcName] = f.value\n    }\n  }\n}\nself.__vars = self.__varslist[2];\nself.__module = {};\nself.__locals = {};\nself.__genMode = 'sync';\n// プラグインの初期化コードを実行\nself.initFuncList.map(f => f(self))\ntry {\n// ---------------------------\n// <prepareMainCode>\n__codeStandalone__\n// </prepareMainCode>\n// ---------------------------\n// <mainCode>\n__codeJS__\n// </mainCode>\n// ---------------------------\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\n  self.clearFuncList.map(f => f(self))\n} catch (err) {\n  self.logger.error(err);\n  throw err;\n}\n// </nadesiko3standalone>\n`;\n/**\n * @param com\n * @param ast\n * @param opt\n */\nexport function generateJS(com, ast, opt) {\n    // NakoGenのインスタンスを作成\n    const gen = new NakoGen(com);\n    // ※ [関数定義に関するコード生成のヒント]\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\n    // (1) ユーザー定義関数をシステムに登録する\n    gen.registerFunction(ast);\n    // (2) JSコードを生成する\n    let js = gen.convGen(ast, opt);\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\n    const jsInit = gen.getDefFuncCode(com, opt);\n    // ランダムな関数名を生成\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\n    // テストの実行\n    if (js && opt.isTest) {\n        js += '\\n__self._runTests(__tests);\\n';\n    }\n    // async method\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\nasync function ${asyncMain}(self) {\n  // --- code_begin ---\n${js}\n  // --- code_end ---\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} // end of ${asyncMain}\n${asyncMain}.call(self, self)\n.then(() => {\n  // ok\n})\n.catch(err => {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  // send errors to logger\n  let rterr = self.logger.runtimeError(err, self.__v0.line)\n  self.logger.error(rterr)\n})\n// </nadesiko3::gen::async id=\"${funcID}\">\n// --------------------------------------------------\n`;\n    }\n    else {\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::syncMode>\nfunction ${syncMain}(self) {\ntry {\n  ${js}\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} catch (err) {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  throw self.logger.runtimeError(err, self.__v0.line)\n}\n} // end of ${syncMain}\n${syncMain}(self)\n// </nadesiko3::gen::syncMode>\n// --------------------------------------------------\n`;\n    }\n    // デバッグメッセージ\n    com.getLogger().trace('--- generate ---\\n' + js);\n    let codeImportFiles = '';\n    const importNames = [];\n    for (const f of opt.importFiles) {\n        if (f === 'nako_errors.mjs') {\n            continue;\n        }\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\n        importNames.push(ff);\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\n    }\n    // ---\n    const initCode = gen.getPluginInitCode();\n    const runtimeEnvCode = `\n// <runtimeEnvCode>\nconst self = this\n${opt.codeEnv}\n${jsInit}\n${initCode}\n${js}\n// </runtimeEnvCode>\n`;\n    return {\n        // なでしこの実行環境ありの場合(thisが有効)\n        runtimeEnv: runtimeEnvCode,\n        // JavaScript単体で動かす場合\n        standalone: replaceTemplateCode(STANDALONE_CODE, {\n            codeImportFiles,\n            'coreVersion': com.coreVersion,\n            'version': com.version,\n            'importNames': ('[' + importNames.join(', ') + ']'),\n            'codeStandalone': opt.codeStandalone,\n            'codeJS': js,\n            jsInit\n        }),\n        // コード生成に使ったNakoGenのインスタンス\n        gen\n    };\n}\n// template\nfunction replaceTemplateCode(template, values) {\n    for (const key in values) {\n        const pat = `__${key}__`;\n        const val = values[key];\n        template = template.split(pat).join(val);\n    }\n    return template;\n}\n","/**\n * file: nako_gen_async\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお、扱いやすさ優先で、なでしこの一文を一つの関数として生成し、非同期実行する。\n */\nimport { NakoSyntaxError, NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport nakoVersion from './nako_core_version.mjs';\nimport { NakoGen } from './nako_gen.mjs';\n/**\n * なでしこのインタプリタコード\n */\nconst NakoCodeNop = 'NOP';\nconst NakoCodeLabel = 'LBL';\nconst NakoCodeEOL = 'EOL';\nconst NakoCodeJump = 'JMP'; // JUMP addr\nconst NakoCodeJumpIfTrue = 'JMP_T'; // pop and jump addr\nconst NakoCodeJumpIfFalse = 'JMP_F'; // pop and jump addr\nconst NakoCodeCall = 'CALL'; // call addr\nconst NakoCodeCallObj = 'CALL_OBJ'; // call addr\nconst NakoCodeReturn = 'RET';\nconst NakoCodeTry = 'TRY';\nconst NakoCodeCode = 'CODE';\nconst NakoCodeTagIsFuncpoint = 0x0F;\n/**\n * なでしこのインタプリタが用いる簡易コードを表現するクラス\n */\nclass NakoCode {\n    /**\n     * @param type\n     * @param value\n     */\n    constructor(type, value) {\n        /** Codeのタイプ\n         * @type {string}\n         */\n        this.type = type;\n        /** Codeの値 / ラベルならラベル名\n         * @type {string}\n         */\n        this.value = value;\n        /** ラベルならジャンプ先\n         * @type {number}\n         */\n        this.no = -1;\n        /** タグ\n         * @type {number}\n         */\n        this.tag = 0;\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGenASync {\n    /**\n     * @param com\n     * @param {Ast} ast\n     * @param {boolean | string} isTest 文字列なら1つのテストだけを実行する\n     */\n    static generate(com, ast, isTest) {\n        const gen = new NakoGenASync(com);\n        // ユーザー定義関数をシステムに登録する\n        gen.registerFunction(ast);\n        // JSコードを生成する\n        let js = gen.convGen(ast, !!isTest);\n        // JSコードを実行するための事前ヘッダ部分の生成\n        js = gen.getDefFuncCode(isTest) + js;\n        com.getLogger().trace('--- generate(非同期モード) ---\\n' + js);\n        // テストの実行\n        if (js && isTest) {\n            js += '\\n__self._runTests(__tests);\\n';\n        }\n        return {\n            // なでしこの実行環境ありの場合\n            runtimeEnv: js,\n            // JavaScript単体で動かす場合\n            standalone: `\\\nconst nakoVersion = ${JSON.stringify(nakoVersion)};\n${NakoError.toString()}\n${NakoRuntimeError.toString()}\nthis.logger = {\n  error(message) { console.error(message) },\n  send(level, message) { console.log(message) },\n};\nthis.__varslist = [{}, {}, {}];\nthis.__vars = this.__varslist[2];\nthis.__module = {};\nthis.__locals = {};\nthis.__labels = {};\nthis.__code = [];\nthis.__callstack = [];\nthis.__stack = [];\nthis.__genMode = '非同期モード';\ntry {\n  ${gen.getVarsCode()}\n  ${js}\n} catch (err) {\n  if (!(err instanceof NakoRuntimeError)) {\n    err = new NakoRuntimeError(err, this.__varslist[0].line);\n  }\n  this.logger.error(err);\n  throw err;\n}`,\n            gen // コード生成に使ったNakoGenのインスタンス\n        };\n    }\n    /**\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        this.com = com;\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         * @type {Record<string, { josi: string[][], fn: string, type: 'test_func' }>}\n         */\n        this.nakoTestList = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         * @type {Set<string>}\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         * @type {number}\n         */\n        this.loopId = 1;\n        /**\n         * 変換中の処理が、ループの中かどうかを判定する\n         * @type {boolean}\n         */\n        this.flagLoop = false;\n        /**\n         * 変換後のコード管理番号\n         * @type {number}\n         */\n        this.codeId = 0;\n        /**\n         * 変換後のコードを保持する配列\n         * @type {Array<NakoCode>}\n         */\n        this.codeArray = [];\n        /** @type {NakoCode | null} */\n        this.labelContinue = null;\n        /** @type {NakoCode | null} */\n        this.labelBreak = null;\n        /**\n         * ジャンプ先を表現するラベル\n         * @type {Object<string, number>}\n         */\n        this.labels = {};\n        // コンパイラのインスタンス\n        this.__self = com;\n        /**\n         * コードジェネレータの種類\n         * @type {string}\n         */\n        this.genMode = '非同期モード';\n        /**\n         * 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。\n         * @type {string | null}\n         */\n        this.lastLineNo = null;\n        /**\n         * スタック\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }[]}\n         */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /**\n         * スタックトップ\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }}\n         */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0 // システム関数(呼び出しコードを除く)\n        };\n    }\n    /**\n     * @param {import(\"./nako3\").Ast} node\n     * @param {boolean} forceUpdate\n     */\n    convLineno(node, forceUpdate) {\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        /** @type {string} */\n        let lineNo;\n        if (typeof node.line !== 'number') {\n            lineNo = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNo = `l${node.line}`;\n        }\n        else {\n            lineNo = `l${node.line}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNo === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNo;\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${JSON.stringify(lineNo)};`;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * 基本的に取得のために利用\n     * @param {string} name\n     */\n    varname(name) {\n        const keys = JSON.stringify(name);\n        return `sys.__vars[${keys}]`;\n    }\n    /**\n     * プログラムの実行に必要な関数を書き出す(システム領域)\n     * @returns {string}\n     */\n    getVarsCode() {\n        let code = '';\n        // プログラム中で使った関数を列挙して書き出す\n        for (const key of Array.from(this.usedFuncSet.values())) {\n            const f = this.__self.__varslist[0][key];\n            const name = `this.__varslist[0][\"${key}\"]`;\n            if (typeof (f) === 'function') {\n                code += name + '=' + f.toString() + ';\\n';\n            }\n            else {\n                code += name + '=' + JSON.stringify(f) + ';\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param {boolean | string} isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @returns {string}\n     */\n    getDefFuncCode(isTest) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += 'const __self = this.__self = this;\\n';\n        code += 'const __varslist = this.__varslist;\\n';\n        code += 'const __module = this.__module;\\n';\n        code += 'const __v0 = this.__v0 = this.__varslist[0];\\n';\n        code += 'const __v1 = this.__v1 = this.__varslist[1];\\n';\n        code += 'const __vars = this.__vars = this.__varslist[2];\\n';\n        code += 'const __code = this.__code;\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}']\\n` +\n                `__v1[\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // プラグインの初期化関数を実行する\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'プラグインの初期化\\';\\n' + pluginCode;\n        }\n        // テストの定義を行う\n        if (isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestList) {\n                if (isTest === true || (typeof isTest === 'string' && isTest === key)) {\n                    const f = this.nakoTestList[key].fn;\n                    testCode += `${f};\\n;`;\n                }\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        const registFunc = (node) => {\n            for (let i = 0; i < node.block.length; i++) {\n                const t = node.block[i];\n                if (t.type === 'def_func') {\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.nakoFuncList[name] = {\n                        josi: t.name.meta.josi,\n                        fn: '',\n                        type: 'func'\n                    };\n                }\n                else if (t.type === 'speed_mode') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map(v => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isTest\n     */\n    convGen(node, isTest) {\n        // convert\n        this._convGen(node, true);\n        // ラベルアドレスの解決が必要なコード一覧\n        const needToFixAddr = new Set([\n            NakoCodeJump, NakoCodeJumpIfTrue, NakoCodeJumpIfFalse, NakoCodeCall, NakoCodeTry\n        ]);\n        // コードの最適化をするか?\n        const optimization = true;\n        let codes = this.codeArray;\n        //\n        if (optimization) {\n            // NOPを削除\n            codes = codes.filter((code) => {\n                return code.type !== NakoCodeNop;\n            });\n            // 未参照のラベルを探す - ただし関数呼び出しは削除しない\n            const usedLabels = new Set();\n            codes.forEach((code) => {\n                if (needToFixAddr.has(code.type)) {\n                    usedLabels.add(code.value);\n                }\n            });\n            // 未参照のラベルを削除\n            codes = codes.filter((code) => {\n                if (code.type !== NakoCodeLabel) {\n                    return true;\n                }\n                if (code.tag === NakoCodeTagIsFuncpoint) {\n                    return true;\n                }\n                return usedLabels.has(code.value);\n            });\n            // EOLが連続していたら削除する\n            let i = 0;\n            while (i < codes.length - 1) {\n                if (codes[i].type === NakoCodeEOL && codes[i + 1].type === NakoCodeEOL) {\n                    codes.splice(i + 1, 1);\n                    continue;\n                }\n                i++;\n            }\n            this.codeArray = codes;\n        }\n        // ラベルアドレスの解決\n        codes.forEach((code, index) => {\n            if (code.type === NakoCodeLabel) {\n                this.labels[code.value] = index;\n            }\n        });\n        codes.forEach((code) => {\n            if (needToFixAddr.has(code.type)) {\n                if (code.no < 0) {\n                    code.no = this.labels[code.value];\n                }\n            }\n        });\n        let result = '';\n        // コードの生成\n        codes.forEach((code, index) => {\n            switch (code.type) {\n                case NakoCodeNop:\n                    result += `case ${index}: break; // [NOP] ${code.value}\\n`;\n                    break;\n                case NakoCodeLabel:\n                    result += `case ${index}: break; // [LABEL] ${code.value}\\n`;\n                    break;\n                case NakoCodeEOL:\n                    result += `case ${index}: ${code.value}; break; // [EOL]\\n`;\n                    break;\n                case NakoCodeJump:\n                    result += `case ${index}: sys.nextIndex = ${code.no}; break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfTrue:\n                    result += `case ${index}: if (sys.__stack.pop()) { sys.nextIndex = ${code.no};} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfFalse:\n                    result += `case ${index}: if (!sys.__stack.pop()) { sys.nextIndex = ${code.no}} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeReturn:\n                    result += `case ${index}: sys.__return(sys); break;\\n`;\n                    break;\n                case NakoCodeCall:\n                    result += `case ${index}: sys.__call(${code.no}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeCallObj:\n                    result += `case ${index}: sys.__callObj('${code.value}', ${index}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeTry:\n                    result += `case ${index}: sys.tryIndex = ${code.no}; break; // TRY \\n`;\n                    break;\n                case NakoCodeCode:\n                    {\n                        // trim last\n                        const s = code.value.replace(/\\s+$/, '');\n                        result += `case ${index}: {\\n${s}\\n};break;\\n`;\n                        break;\n                    }\n                default:\n                    throw new Error('invalid code type');\n            }\n        });\n        result = `\n    //-------------------------\n    // main_code\n    this.__labels = ${JSON.stringify(this.labels)};\n    this.nextAsync = (sys) => {\n      if (sys.index >= sys.codeSize || sys.index < 0) {return}\n      const __v0 = sys.__v0\n      try {\n        sys.inLoop = true\n        while (sys.index < sys.codeSize && sys.index >= 0) {\n          // console.log('@@[run]', sys.index)\n          switch (sys.index) {\n            // --- CODE.BEGIN ---\n            ${result}\n            // --- CODE.END ---\n            default:\n              sys.inLoop = false\n              console.log(sys.index, sys.__stack)\n              throw new Error('Invalid sys.index:' + sys.index)\n              break\n          }\n          // check next\n          if (sys.nextIndex >= 0) {\n            sys.index = sys.nextIndex\n            sys.nextIndex = -1\n          } else {\n            sys.index++\n          }\n          if (sys.async) {\n            sys.__saveSysenv(sys)\n            sys.async = false\n            break\n          }\n        } // end of while\n        sys.inLoop = false\n      } catch (e) {\n        sys.__errorAsync(e, sys)\n      }\n    }\n    this.__errorAsync = (e, sys) => { // エラーが起きた時呼び出す\n      sys.__v0[\"エラーメッセージ\"] = e.message;\n      if (e.message == '__終わる__') {\n        sys.__stopAsync(sys)\n        return\n      }\n      if (sys.tryIndex >= 0) {\n        sys.index = sys.tryIndex;\n        setTimeout(() => {sys.nextAsync(sys)}, 1)\n      } else {\n        throw e\n      }\n    }\n    this.__call = (no, sys) => {\n      const info = {lastVars:sys.__vars, backNo: this.index + 1}\n      sys.__callstack.push(info);\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.nextIndex = no;\n    }\n    this.__return = sys => {\n      if (sys.__callstack.length === 0) {\n        sys.__destroySysenv(sys, sys.curSysenv.envid)\n        sys.index = -2\n        sys.nextIndex = -1\n        return\n      }\n      const sore = sys.__vars['それ'];\n      sys.__varslist.pop();\n      const info = sys.__callstack.pop();\n      sys.nextIndex = info.backNo;\n      sys.__vars = info.lastVars;\n      sys.__vars['それ'] = sore\n      sys.__stack.push(sore);\n    }\n    this.__resetAsync = sys => {\n      sys.index = 0\n      sys.codeSize = ${codes.length};\n      sys.async = false\n      sys.nextIndex = -1\n      sys.tryIndex = -1\n    }\n    this.__stopAsync = sys => {\n      sys.__resetAsync(sys)\n      sys.index = -1 // force stop!!\n    }\n    this.__callNakoCode = (no, backNo, sys) => {\n      this.__call(backNo, sys)\n      sys.nextIndex = no\n      const sysenv = sys.setAsync(sys)\n      setTimeout(() => {\n        // console.log('//__callNakoCode, back=', backNo, 'no=', no)\n        sys.compAsync(sys, sysenv)\n      } ,1)\n    }\n    this.__callNakoCodeEntry = (no, sys) => {\n      sys.__saveSysenv(sys)\n      sys.curSysenv = sys.__generateSysenv(sys)\n      sys.__restoreSysenv(sys)\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.index = no;\n      sys.nextAsync(sys)\n    }\n    this.__callObj = (vname, curNo, sys) => {\n      if (sys.__vars[vname]) {\n        const fname = sys.__vars[vname]\n        // console.log(sys.__labels)\n        if (fname && sys.__labels[fname]) {\n          const no = sys.__labels[fname]\n          sys.__call(no, sys)\n          return\n        } else {\n          console.log('vname=', vname, 'label=', fname)\n        }\n      }\n      throw new Error('async error in __callObj::', vname)\n    }\n    this.__generateSysenv = sys => {\n      sys.envid = ( sys.envid == null ? 0 : sys.envid ) + 1\n      const sysenv = {\n        callstack: [],\n        varstack: [],\n        varslist: [sys.__varslist[0], sys.__varslist[1], sys.__varslist[2]],\n        index: -1,\n        nextIndex: -1,\n        tryIndex: -1,\n        envid: sys.envid\n      }\n      sysenv.vars = sysenv.varslist[2]\n      if (sys.sysenvs == null) { sys.sysenvs={} }\n      sys.sysenvs[sys.envid] = sysenv\n      // console.log('generete envid '+sys.envid)\n      return sysenv\n    }\n    this.__destroySysenv = (sys, envid) => {\n      delete sys.sysenvs[envid]\n      // console.log('destroy envid '+envid)\n    }\n    this.__saveSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sysenv.callstack = sys.__callstack\n      sysenv.varstack = sys.__stack\n      sysenv.varslist = sys.__varslist\n      sysenv.vars = sys.__vars\n      sysenv.index = sys.index\n      sysenv.nextIndex = sys.nextIndex\n      sysenv.tryIndex = sys.tryIndex\n    }\n    this.__restoreSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sys.__callstack = sysenv.callstack\n      sys.__stack = sysenv.varstack\n      sys.__varslist = sysenv.varslist\n      sys.__vars = sysenv.vars\n      ___vars = sys.__vars\n      sys.index = sysenv.index\n      sys.nextIndex = sysenv.nextIndex\n      sys.tryIndex = sysenv.tryIndex\n    }\n    this.setAsync = sys => {\n      sys.async = true\n      return sys.curSysenv\n    }\n    this.compAsync = (sys,sysenv) => {\n      if (sys.async && sys.curSysenv != null && sysenv != null && sys.curSysenv.envid === sysenv.envid) {\n        sys.async = false\n      } else {\n        if (sys.curSysenv == null || sysenv == null || sys.curSysenv.envid !== sysenv.envid) {\n          sys.__saveSysenv(sys)\n          const envid = sys.curSysenv.envid\n          sys.curSysenv = sysenv\n          sys.__restoreSysenv(sys)\n          // console.log('switch envid '+envid+' to '+sys.curSysenv.envid)\n        }\n        sys.nextAsync(sys)\n      }\n    }\n\n    this.__resetAsync(this)\n    this.curSysenv = this.__generateSysenv(this)\n    this.nextAsync(this)\n    //-------------------------\n    `;\n        if (isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            // === NOP ===\n            case 'nop':\n                break;\n            case 'comment':\n                if (!node.value) {\n                    node.value = '';\n                }\n                this.addCode(new NakoCode(NakoCodeNop, node.value));\n                break;\n            case 'eol':\n                this.addCode(new NakoCode(NakoCodeEOL, this.convLineno(node, true)));\n                break;\n            // === 単純なコード変換 ===\n            case 'number':\n                this.addCodeStr(`sys.__stack.push(${node.value});//number`);\n                break;\n            case 'string':\n                this.convString(node);\n                break;\n            case 'word':\n            case 'variable':\n                this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                this.convOp(node);\n                break;\n            case 'renbun':\n                this.convRenbun(node);\n                break;\n            case 'not':\n                this._convGen(node.value, true);\n                this.addCodeStr('if (sys.__stack.length==0) throw new Error(\\'NOTでスタックに値がありません\\');' +\n                    'sys.__stack[sys.__stack.length-1] = (sys.__stack[sys.__stack.length-1]) ? 0:1');\n                break;\n            case '配列参照':\n                this.convRefArray(node);\n                break;\n            case 'json_array':\n                this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                this.convJsonObj(node);\n                break;\n            case 'bool':\n                {\n                    const b = (node.value) ? 'true' : 'false';\n                    this.addCodeStr(`sys.__stack.push(${b})`);\n                    break;\n                }\n            case 'null':\n                this.addCodeStr('sys.__stack.push(null)');\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                this.convFunc(node, isExpression); // 関数の呼び出し\n                break;\n            // === 文の変換 ===\n            case 'let':\n                this.convLet(node);\n                break;\n            case 'let_array':\n                this.convLetArray(node);\n                break;\n            case 'block':\n                for (let i = 0; i < node.block.length; i++) {\n                    const b = node.block[i];\n                    this._convGen(b, false);\n                }\n                break;\n            case 'if':\n                this.convIf(node);\n                break;\n            case 'repeat_times':\n                this.convRepeatTimes(node);\n                break;\n            case 'break':\n                this.addCodeStr(this.convCheckLoop(node, 'break'));\n                break;\n            case 'continue':\n                this.addCodeStr(this.convCheckLoop(node, 'continue'));\n                break;\n            case 'for':\n                this.convFor(node);\n                break;\n            case 'foreach':\n                this.convForeach(node);\n                break;\n            case 'while':\n                this.convWhile(node);\n                break;\n            case 'switch':\n                this.convSwitch(node);\n                break;\n            case 'return':\n                this.convReturn(node);\n                break;\n            case 'end':\n                code += this.addCodeStr('__varslist[0][\\'終\\']();');\n                break;\n            case 'def_local_var':\n                this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.addCodeStr(this.convDefLocalVarlist(node));\n                break;\n            case 'tikuji':\n                throw NakoSyntaxError.fromNode('「逐次実行」構文は「!非同期モード」では使えません。', node);\n            case 'speed_mode':\n                throw NakoSyntaxError.fromNode('「速度有線」構文は「!非同期モード」では使えません。', node);\n            case 'performance_monitor':\n                this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'func_obj':\n                this.convFuncObj(node);\n                break;\n            case 'def_test':\n                this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.addCodeStr(this.convDefFunc(node));\n                break;\n            // TODO\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    convRequire(node) {\n        const gen = new NakoGen(this.com);\n        this.addCodeStr(gen.convRequire(node));\n        return '';\n    }\n    /**\n     * add code to array\n     * @param {string} codeStr\n     * @returns {string}\n     */\n    addCodeStr(codeStr) {\n        if (codeStr === '') {\n            return '';\n        }\n        const a = codeStr.split('\\n');\n        const a2 = a.map((row) => '  ' + row.replace(/\\s+$/, ''));\n        const c = new NakoCode(NakoCodeCode, a2.join('\\n'));\n        return this.addCode(c);\n    }\n    /**\n     * add code to array\n     * @param {NakoCode} code\n     * @returns {string}\n     */\n    addCode(code) {\n        this.codeArray[this.codeId] = code;\n        this.codeId++;\n        return '';\n    }\n    /**\n     * make label for jump\n     * @param {string} name\n     * @returns {NakoCode}\n     */\n    makeLabel(name) {\n        const uniqLabel = name + '_' + (this.loopId++);\n        return this.makeLabelDirectly(uniqLabel);\n    }\n    /**\n     * make label for function\n     * @param {string} labelName\n     * @returns {NakoCode}\n     */\n    makeLabelDirectly(labelName) {\n        const c = new NakoCode(NakoCodeLabel, labelName);\n        this.labels[labelName] = -1;\n        return c;\n    }\n    /**\n     * make Jump\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJump(label) {\n        return new NakoCode(NakoCodeJump, label.value);\n    }\n    /**\n     * make Jump if true\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfTrue(label) {\n        return new NakoCode(NakoCodeJumpIfTrue, label.value);\n    }\n    /**\n     * make Jump if false\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfFalse(label) {\n        return new NakoCode(NakoCodeJumpIfFalse, label.value);\n    }\n    /**\n     * @param {Ast} node\n     */\n    convIf(node) {\n        const labelBegin = this.makeLabel('もし:ここから');\n        const labelEnd = this.makeLabel('もし:ここまで');\n        const labelIfFalse = this.makeLabel('もし:違えば');\n        //\n        this.addCode(labelBegin);\n        this._convGen(node.expr, true);\n        this.addCode(this.makeJumpIfFalse(labelIfFalse));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelIfFalse);\n        if (node.falseBlock) {\n            this._convGen(node.falseBlock, false);\n        }\n        this.addCode(labelEnd);\n        return '';\n    }\n    convRepeatTimes(node) {\n        this.flagLoop = true;\n        this.varsSet.names.add('回数');\n        this.varsSet.readonly.add('回数');\n        // ループ管理変数を作成\n        const loopVar = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        // ループ回数を取得\n        const loopCount = `sys.__tmp_count${this.loopId}`;\n        this.loopId++;\n        this._convGen(node.value, true);\n        this.addCodeStr(`${loopCount} = sys.__stack.pop(); ${loopVar} = 0;`);\n        const labelCheck = this.makeLabel('回:条件チェック');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('回:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelCheck;\n        // 繰り返し判定\n        const kaisu = 'sys.__vars[\"回数\"]';\n        const cond = `${kaisu} = ++${loopVar}\\n` +\n            `sys.__stack.push(${loopVar} > ${loopCount})\\n`;\n        this.addCodeStr(cond);\n        this.addCode(this.makeJumpIfTrue(labelEnd));\n        this.convGenLoop(node.block); // read block\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {string} name\n     * @returns {{i: number, name: string, isTop: boolean, js: string} | null}\n     */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: `sys.__vars[${JSON.stringify(name)}]` };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                return { i, name, isTop: false, js: `sys.__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー' || name === '回数') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                this.__self.getLogger().warn(`変数『${name}』は定義されていません。`, position);\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi) {\n                    throw new Error('[System Error]');\n                }\n                if (pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        let varName = `sys.__vars[${JSON.stringify(name)}]`;\n        const o = this.findVar(name);\n        if (o != null) {\n            varName = o.js;\n        }\n        this.addCodeStr(`sys.__stack.push(${varName});`);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        if (node.value) {\n            this._convGen(node.value, true);\n            this.addCodeStr('sys.__vars[\"それ\"] = sys.__stack.pop()');\n        }\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        return '';\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        if (cmd === 'continue') {\n            if (this.labelContinue) {\n                this.addCode(this.makeJump(this.labelContinue));\n            }\n        }\n        else {\n            if (this.labelBreak) {\n                this.addCode(this.makeJump(this.labelBreak));\n            }\n        }\n        return '';\n    }\n    convDefFuncCommon(node, name) {\n        // deffunc_code\n        const isMumeiFunc = (name === '');\n        let funcName = name;\n        if (isMumeiFunc) {\n            funcName = `無名関数:${this.loopId++}`;\n        }\n        const labelEnd = this.makeLabel(`関数「${funcName}」:ここまで`);\n        this.addCode(this.makeJump(labelEnd));\n        const labelBegin = this.makeLabelDirectly(funcName);\n        labelBegin.tag = NakoCodeTagIsFuncpoint; // 削除対象からはずすため\n        this.addCode(labelBegin);\n        //\n        const initialNames = new Set();\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        this.varsSet.names.add('それ');\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        const meta = isMumeiFunc ? node.meta : node.name.meta;\n        let code = '';\n        let codeCall = '';\n        code += `//関数『${funcName}』の初期化処理\\n`;\n        // 宣言済みの名前を保存\n        // const varsDeclared = Array.from(this.varsSet.names.values())\n        // 引数をローカル変数に設定 (スタックの末尾から取得する必要があるので、逆順に値を得る)\n        code += '// 引数をローカル変数として登録\\n';\n        for (let i = meta.varnames.length - 1; i >= 0; i--) {\n            const word = meta.varnames[i];\n            code += `  ${this.varname(word)} = sys.__stack.pop();\\n`;\n            this.varsSet.names.add(word);\n            codeCall += ''; //  sys.__stack.push(arguments[${i}]);\\n\n        }\n        code += '// ここまで:引数をローカル変数として登録\\n';\n        this.addCodeStr(code);\n        // 関数定義は、グローバル領域で。\n        this.usedFuncSet.add(funcName);\n        this.varslistSet[1].names.add(funcName);\n        this.nakoFuncList[funcName] = {\n            josi: meta.josi,\n            fn: '(function(){\\n' +\n                '  const sys = (arguments.length > 0) ? arguments[arguments.length-1] : {}; \\n' +\n                '  if (sys.newenv) { \\n' +\n                '    sys.newenv = false\\n' +\n                `    sys.__callNakoCodeEntry(sys.__labels['${funcName}'], sys);` + '\\n' +\n                '  } else {\\n' +\n                '  ' + codeCall + '\\n' +\n                `    sys.__callNakoCode(sys.__labels['${funcName}'], sys.nextIndex, sys);` + '\\n' +\n                '    if (!sys.inLoop) { sys.nextAsync(sys) }\\n' +\n                '  }  })',\n            type: 'func'\n        };\n        // ブロックを解析\n        this._convGen(node.block, false);\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.__self.__varslist[1][funcName] = function () { };\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        this.addCode(labelEnd);\n        // 無名関数の定義であれば無名関数をPUSH\n        if (!name) {\n            this.addCodeStr(`sys.__stack.push('${funcName}')`);\n        }\n        return '';\n    }\n    convDefTest(node) {\n        throw NakoSyntaxError.fromNode('テスト構文は!非同期モードでは使えません。', node);\n    }\n    convDefFunc(node) {\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        // ★この時点では関数のコードを生成しない★\n        // プログラム冒頭でコード生成時に関数定義を行う\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const objName = `sys.__tmp_obj${this.loopId++}`;\n        this.addCodeStr(objName + '={}; // convJsonObj::ここから');\n        list.forEach((e) => {\n            this._convGen(e.value, true);\n            this._convGen(e.key, true);\n            this.addCodeStr(`${objName}[sys.__stack.pop()]=sys.__stack.pop()`);\n        });\n        this.addCodeStr(`this.__stack.push(${objName}); delete $objName; // convJsonObj::ここまで`);\n        return '';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        this.addCode(this.makeLabel('convJsonArray::ここから'));\n        list.forEach((e) => this._convGen(e, true));\n        const size = list.length;\n        this.addCodeStr(`sys.__stack.push(sys.__stack.splice(sys.__stack.length-${size},${size}))`);\n        return '';\n    }\n    convRefArray(node) {\n        // 名前をPUSH\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            // push index\n            this._convGen(list[i], true);\n            // pop index & push value\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convLetArray(node) {\n        // 代入する値をPUSH\n        this._convGen(node.value, true);\n        // 変数を取得\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            this._convGen(list[i], true);\n            if (i === list.length - 1) { // 代入\n                this.addCodeStr('const idx = this.__stack.pop();' +\n                    'const obj = this.__stack.pop();' +\n                    'const val = this.__stack.pop();' +\n                    'obj[idx]=val;');\n                break;\n            }\n            // index アクセス\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        this.flagLoop = true;\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value;\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const sore = this.varname('それ');\n        const idLoop = this.loopId++;\n        const varI = `sys.__tmp__i${idLoop}`;\n        // ループ条件を変数に入れる用\n        const varTo = `sys.__tmp__to${idLoop}`;\n        // ループ条件を確認\n        this._convGen(node.from, true);\n        this._convGen(node.to, true);\n        this.addCodeStr(`${varTo}=sys.__stack.pop();${varI}=sys.__stack.pop();`);\n        // ループ変数を初期化\n        this.addCodeStr(`${sore} = ${word} = ${varI}`);\n        // 繰り返し判定\n        const labelCheck = this.makeLabel('繰返:条件確認');\n        const labelInc = this.makeLabel('繰返:加算');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('繰返:ここまで');\n        this.addCodeStr(`sys.__stack.push(${word} <= ${varTo})`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        this.labelContinue = labelInc;\n        this.labelBreak = labelEnd;\n        // ループ内のブロック内容を得る\n        this.convGenLoop(node.block); // block\n        this.addCode(labelInc);\n        this.addCodeStr(`${sore} = ++${word};`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varI};delete ${varTo};//繰返:掃除`);\n        this.flagLoop = false;\n        return '';\n    }\n    convForeach(node) {\n        this.flagLoop = true;\n        // 対象を用意する\n        let taisyo = '__v0[\"対象\"]';\n        const taisyoKey = '__v0[\"対象キー\"]';\n        if (node.name) {\n            taisyo = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        // 反復対象を調べる\n        const target = node.target;\n        if (target === null) {\n            throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n        }\n        const sore = this.varname('それ');\n        const targetArray = `sys.__tmp__target${this.loopId++}`;\n        const targetKeys = `sys.__tmp__keys${this.loopId++}`;\n        const loopVar = `sys.__tmp__i${this.loopId++}`;\n        const loopCount = `sys.__tmp__count${this.loopId++}`;\n        // 反復対象を評価\n        this._convGen(node.target, true);\n        // どのように反復するか判定\n        const initCode = '// 反復: 初期化\\n' +\n            `${targetArray} = sys.__stack.pop();\\n` +\n            `${loopVar} = 0;\\n` +\n            // 文字列や数値なら反復できるように配列に入れる\n            `if (typeof(${targetArray}) == 'string' || typeof(${targetArray}) == 'number') { ${targetArray} = [${targetArray}]; }\\n` +\n            // Objectならキー一覧を得る\n            `if (${targetArray} instanceof Array) { ${loopCount} = ${targetArray}.length; }\\n` +\n            'else { // キーの一覧を得る\\n' +\n            `  ${targetKeys} = Object.keys(${targetArray}); \\n` +\n            '  // hasOwnPropertyがfalseならばkeyを消す処理\\n' +\n            `  ${targetKeys} = ${targetKeys}.filter((key)=>{ return ${targetArray}.hasOwnProperty(key) })\\n` +\n            `  ${loopCount} = ${targetKeys}.length;\\n` +\n            '}\\n';\n        this.addCodeStr(initCode);\n        const labelCheck = this.makeLabel('反復:条件確認');\n        const labelInc = this.makeLabel('反復:加算');\n        const labelEnd = this.makeLabel('反復:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelInc;\n        this.addCode(labelCheck);\n        const setTarget = `if (${targetArray} instanceof Array) {\\n` +\n            // eslint-disable-next-line no-irregular-whitespace\n            `  ${taisyo} = ${sore} = ${targetArray}[${loopVar}];　${taisyoKey} = ${loopVar};\\n` +\n            '} else {\\n' +\n            `  ${taisyoKey} = ${targetKeys}[${loopVar}]; ${taisyo} = ${sore} = ${targetArray}[${taisyoKey}];\\n` +\n            '}\\n';\n        this.addCodeStr(`${setTarget}\\nsys.__stack.push(${loopVar} < ${loopCount});`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // 反復ブロックを定義\n        this.convGenLoop(node.block); // block\n        // 加算\n        this.addCode(labelInc);\n        this.addCodeStr(`${loopVar}++`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    convWhile(node) {\n        this.flagLoop = true;\n        const labelBegin = this.makeLabel('間:ここから');\n        const labelEnd = this.makeLabel('間:ここまで');\n        this.labelContinue = labelBegin;\n        this.labelBreak = labelEnd;\n        this.addCode(labelBegin);\n        // 条件をスタックに\n        this._convGen(node.cond, true);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // ブロックを追加\n        this.convGenLoop(node.block);\n        this.addCode(this.makeJump(labelBegin));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {Ast} _node\n     * @param {boolean} _isExpression\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    convSpeedMode(_node, _isExpression) {\n        return '';\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        this._convGen(node.block, isExpression);\n        this.performanceMonitor = prev;\n    }\n    convSwitch(node) {\n        // 値をPUSH\n        this._convGen(node.value, true);\n        const varValue = `sys.__tmp__i${this.loopId++}`;\n        this.addCodeStr(`${varValue} = sys.__stack.pop()`);\n        const labelEnd = this.makeLabel('条件分岐:ここまで');\n        const cases = node.cases;\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            if (cvalue.type === '違えば') {\n                this.convGenLoop(cases[i][1]);\n            }\n            else {\n                const nextLabel = this.makeLabel('条件分岐:次');\n                this._convGen(cvalue, true);\n                this.addCodeStr(`sys.__stack.push(sys.__stack.pop() == ${varValue})`);\n                this.addCode(this.makeJumpIfFalse(nextLabel));\n                this.convGenLoop(cases[i][1]);\n                this.addCode(this.makeJump(labelEnd));\n                this.addCode(nextLabel);\n            }\n        }\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varValue}//条件分岐:掃除`);\n        return '';\n    }\n    convFuncGetArgsCalcType(funcName, func, node) {\n        const opts = {};\n        for (let i = 0; i < node.args.length; i++) {\n            const arg = node.args[i];\n            if (i === 0 && arg === null) {\n                this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n                opts.sore = true;\n            }\n            else {\n                // 関数の引数を評価\n                this._convGen(arg, true);\n            }\n        }\n        return opts;\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convFunc(node, isExpression) {\n        let isJSFunc = false;\n        let isMumeiFunc = false;\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n            isJSFunc = true;\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                isMumeiFunc = true;\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsOpts = this.convFuncGetArgsCalcType(funcName, func, node);\n        // function\n        this.usedFuncSet.add(funcName);\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        // 引数をスタックに積む\n        const arcCount = node.args.length;\n        // 必要な引数分だけスタックから下ろして呼び出す\n        let code = '';\n        if (isJSFunc) {\n            code += funcBegin;\n            code += `const args = sys.__stack.splice(sys.__stack.length - ${arcCount}, ${arcCount});\\n`;\n            // code += `console.log(\"call:${funcName}\", args, 'sys');\\n`\n            code += 'args.push(sys);\\n';\n            code += `const ret = ${res.js}.apply(sys, args);\\n`;\n            if (!func.return_none) {\n                code += 'sys.__vars[\\'それ\\'] = ret;\\n';\n                if (isExpression) {\n                    code += 'sys.__stack.push(ret);\\n';\n                }\n            }\n            code += funcEnd;\n            this.addCodeStr(code);\n        }\n        else {\n            if (isMumeiFunc) {\n                this.addCode(new NakoCode(NakoCodeCallObj, funcName));\n            }\n            else {\n                this.addCode(new NakoCode(NakoCodeCall, funcName));\n            }\n            if (!isExpression) {\n                this.addCodeStr('sys.__stack.pop();// 戻り値を利用しない関数呼出');\n            }\n        }\n    }\n    convRenbun(node) {\n        this._convGen(node.left, false);\n        this._convGen(node.right, true);\n    }\n    convOp(node) {\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        const op = node.operator; // 演算子\n        // 値はスタックに載せられる\n        // left\n        this._convGen(node.left, true);\n        // right\n        this._convGen(node.right, true);\n        // calc\n        let code = 'const rv = sys.__stack.pop();\\n' +\n            'const lv = sys.__stack.pop();\\n';\n        if (op === '^') {\n            code += 'const v = (Math.pow(lv, rv))\\n';\n        }\n        else {\n            const op2 = OP_TBL[op] || op;\n            code += `const v = ((lv) ${op2} (rv));\\n`;\n        }\n        // code += `if (isNaN(v) && '${op}' != '&') { console.log('ERROR:${op}', lv, rv) }\\n`\n        code += `sys.__stack.push(v); //op:${op}\\n`;\n        this.addCodeStr(code);\n    }\n    convLet(node) {\n        let code = '';\n        // 値をスタックに載せる\n        if (node.value === null) {\n            // 値が省略されたら「それ」を載せる\n            this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n        }\n        else {\n            // 値がある場合\n            this._convGen(node.value, true);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)}=sys.__stack.pop();`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js}=sys.__stack.pop();`;\n        }\n        this.addCodeStr(code + '//let');\n    }\n    convDefLocalVar(node) {\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        this.varsSet.names.add(name);\n        // 定数?\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        this.addCodeStr(`${this.varname(name)}=sys.__stack.pop()`);\n        return '';\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        const vtype = node.vartype; // 変数 or 定数\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const varI = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        this.addCodeStr(`${varI}=sys.__stack.pop();if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }`);\n        for (const nameObj of node.names) {\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n            }\n            //\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            this.addCodeStr(`${vname}=${varI}.pop()`);\n        }\n        this.addCodeStr(`delete ${varI}//複数代入:掃除`);\n        return '';\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            throw new Error('[システムエラー] ジェネレーターでの文字列の展開はサポートしていません');\n        }\n        this.addCodeStr(`sys.__stack.push(\"${value}\")//string`);\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const labelExcept = this.makeLabel('エラー監視:ならば');\n        const labelEnd = this.makeLabel('エラー監視:ここまで');\n        // エラーをひっかけるように設定\n        this.addCode(new NakoCode(NakoCodeTry, labelExcept.value));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelExcept);\n        this._convGen(node.errBlock, false);\n        this.addCode(labelEnd);\n    }\n}\n// ブラウザに登録する\nif (typeof (navigator) === 'object' && typeof (navigator.nako3) === 'object') {\n    // Webブラウザの場合\n    const nako3 = navigator.nako3;\n    if (nako3.addCodeGenerator) {\n        nako3.addCodeGenerator('非同期モード', NakoGenASync);\n    }\n}\n","/**\n * 助詞の一覧\n */\nexport const josiList = [\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\n];\n// 「もし」文で使う助詞\nexport const tararebaJosiList = [\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\n];\n// 意味のない助詞(削除する) #936 #939 #974\nexport const removeJosiList = [\n    'こと', 'である', 'です', 'します', 'でした'\n];\n/**\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\n */\nexport const tararebaMap = {};\ntararebaJosiList.forEach(josi => {\n    josiList.push(josi);\n    tararebaMap[josi] = true;\n});\n/**\n * 意味のない助詞(削除する)をマップに変換したもの\n */\nexport const removeJosiMap = {};\nremoveJosiList.forEach(josi => {\n    josiList.push(josi);\n    removeJosiMap[josi] = true;\n});\n// 文字数の長い順に並び替え\njosiList.sort((a, b) => b.length - a.length);\n// 正規表現で助詞をマッチできるようにする\nexport const josiRE = new RegExp('^[\\\\t ]*(' + josiList.join('|') + ')');\n","/** 予約語 */\nconst reserved = {\n    '回': '回',\n    '回繰返': '回',\n    '間': '間',\n    '間繰返': '間',\n    '繰返': '繰返',\n    '増繰返': '増繰返',\n    '減繰返': '減繰返',\n    '後判定': '後判定',\n    '反復': '反復',\n    '抜': '抜ける',\n    '続': '続ける',\n    '戻': '戻る',\n    '先': '先に',\n    '次': '次に',\n    '代入': '代入',\n    '実行速度優先': '実行速度優先',\n    'パフォーマンスモニタ適用': 'パフォーマンスモニタ適用',\n    '定': '定める',\n    '逐次実行': '逐次実行',\n    '条件分岐': '条件分岐',\n    '増': '増',\n    '減': '減',\n    '変数': '変数',\n    '定数': '定数',\n    'エラー監視': 'エラー監視',\n    'エラー': 'エラー',\n    'それ': 'word',\n    'そう': 'word',\n    '関数': 'def_func',\n    'インデント構文': 'インデント構文',\n    '非同期モード': '非同期モード',\n    'DNCLモード': 'DNCLモード',\n    'モード設定': 'モード設定',\n    '取込': '取込',\n    'モジュール公開既定値': 'モジュール公開既定値'\n};\nexport default reserved;\n","import { NakoRuntimeError } from './nako_errors.mjs';\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_system',\n            pluginVersion: '3.4.5',\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'],\n            nakoVersion: '^3.4.5' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // 言語バージョンを設定\n            sys.isDebug = false;\n            sys.__v0['ナデシコバージョン'] = sys.version;\n            sys.__v0['ナデシコ言語バージョン'] = sys.coreVersion;\n            sys.__namespaceList = [];\n            // なでしこの関数や変数を探して返す\n            sys.__findVar = function (nameStr, def) {\n                if (typeof nameStr === 'function') {\n                    return nameStr;\n                }\n                if (sys.__locals[nameStr]) {\n                    return sys.__locals[nameStr];\n                }\n                // 名前空間が指定されている場合\n                if (nameStr.indexOf('__') >= 0) {\n                    for (let i = 2; i >= 0; i--) {\n                        const varScope = sys.__varslist[i];\n                        if (varScope[nameStr]) {\n                            return varScope[nameStr];\n                        }\n                    }\n                    return def;\n                }\n                // 名前空間を参照して関数・変数名を解決する\n                const modList = sys.__modList ? sys.__modList : [sys.__modName];\n                for (const modName of modList) {\n                    const gname = modName + '__' + nameStr;\n                    for (let i = 2; i >= 0; i--) {\n                        const scope = sys.__varslist[i];\n                        if (scope[gname]) {\n                            return scope[gname];\n                        }\n                    }\n                }\n                return def;\n            };\n            // 文字列から関数を探す\n            sys.__findFunc = function (nameStr, parentFunc) {\n                const f = sys.__findVar(nameStr);\n                if (typeof f === 'function') {\n                    return f;\n                }\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\n            };\n            // システム関数を実行\n            sys.__exec = function (func, params) {\n                // システム命令を優先\n                const f0 = sys.__v0[func];\n                if (f0) {\n                    return f0.apply(this, params);\n                }\n                // グローバル・ローカルを探す\n                const f = sys.__findVar(func);\n                if (!f) {\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\n                }\n                return f.apply(this, params);\n            };\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\n            sys.__timeout = [];\n            sys.__interval = [];\n            // 日付処理などに使う\n            const z2 = sys.__zero2 = (s) => {\n                s = '00' + s;\n                return s.substring(s.length - 2);\n            };\n            sys.__zero = (s, keta) => {\n                let zeroS = '';\n                for (let i = 0; i < keta; i++) {\n                    zeroS += '0';\n                }\n                s = zeroS + s;\n                return s.substring(s.length - keta);\n            };\n            sys.__formatDate = (t) => {\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n            };\n            sys.__formatTime = (t) => {\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\n            };\n            sys.__formatDateTime = (t, fmt) => {\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\n                    return dateStr + ' ' + timeStr;\n                }\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\n                    return dateStr;\n                }\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\n                    return timeStr;\n                }\n                return dateStr + ' ' + timeStr;\n            };\n            sys.__str2date = (s) => {\n                // trim\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\n                // is unix time\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\n                    return new Date(parseFloat(s) * 1000);\n                }\n                // is time ?\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\n                    const t = new Date();\n                    const a = (s + ':0').split(':');\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\n                }\n                // replace splitter to '/'\n                s = s.replace(/[\\s:-]/g, '/');\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\n                const a = s.split('/');\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\n            };\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\n            sys.__printPool = '';\n            // 暗黙の型変換で足し算を行うときに使用。bigint はそのまま、その他は number に自動変換\n            sys.__parseFloatOrBigint = (v) => {\n                return (typeof v) === 'bigint' ? v : parseFloat(v);\n            };\n            // undefinedチェック\n            sys.chk = (value, constId) => {\n                if (typeof value === 'undefined') {\n                    const cp = sys.constPools[constId];\n                    const { msgNo, msgArgs, fileNo, lineNo } = cp;\n                    let msg = sys.constPoolsTemplate[msgNo];\n                    for (const i in msgArgs) {\n                        const arg = sys.constPoolsTemplate[msgArgs[i]];\n                        msg = msg.split(`$${i}`).join(arg);\n                    }\n                    const fileStr = sys.constPoolsTemplate[fileNo];\n                    sys.logger.warn(msg, { file: fileStr, line: lineNo });\n                }\n                return value;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            if (sys.__exec) {\n                sys.__exec('全タイマー停止', [sys]);\n            }\n            if (sys.__genMode === '非同期モード') {\n                sys.__stopAsync(sys);\n            }\n            sys.__v0['表示ログ'] = '';\n        }\n    },\n    // @システム定数\n    'ナデシコバージョン': { type: 'const', value: '?' },\n    'ナデシコ言語バージョン': { type: 'const', value: '?' },\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' },\n    'ナデシコ種類': { type: 'const', value: '?' },\n    'はい': { type: 'const', value: 1 },\n    'いいえ': { type: 'const', value: 0 },\n    '真': { type: 'const', value: 1 },\n    '偽': { type: 'const', value: 0 },\n    '永遠': { type: 'const', value: 1 },\n    'オン': { type: 'const', value: 1 },\n    'オフ': { type: 'const', value: 0 },\n    '改行': { type: 'const', value: '\\n' },\n    'タブ': { type: 'const', value: '\\t' },\n    'カッコ': { type: 'const', value: '「' },\n    'カッコ閉': { type: 'const', value: '」' },\n    '波カッコ': { type: 'const', value: '{' },\n    '波カッコ閉': { type: 'const', value: '}' },\n    'OK': { type: 'const', value: true },\n    'NG': { type: 'const', value: false },\n    'キャンセル': { type: 'const', value: 0 },\n    'TRUE': { type: 'const', value: true },\n    'FALSE': { type: 'const', value: false },\n    'true': { type: 'const', value: true },\n    'false': { type: 'const', value: false },\n    'PI': { type: 'const', value: Math.PI },\n    '空': { type: 'const', value: '' },\n    'NULL': { type: 'const', value: null },\n    'undefined': { type: 'const', value: undefined },\n    '未定義': { type: 'const', value: undefined },\n    'エラーメッセージ': { type: 'const', value: '' },\n    '対象': { type: 'const', value: '' },\n    '対象キー': { type: 'const', value: '' },\n    '回数': { type: 'const', value: '' },\n    'CR': { type: 'const', value: '\\r' },\n    'LF': { type: 'const', value: '\\n' },\n    '非数': { type: 'const', value: NaN },\n    '無限大': { type: 'const', value: Infinity },\n    '空配列': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return [];\n        }\n    },\n    '空辞書': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空ハッシュ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空オブジェクト': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            return sys.__exec('空ハッシュ', [sys]);\n        }\n    },\n    // @標準出力\n    '表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            // 継続表示の一時プールを出力\n            s = sys.__printPool + s;\n            sys.__printPool = '';\n            //\n            sys.__varslist[0]['表示ログ'] += (s + '\\n');\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    '継続表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__printPool += s;\n        },\n        return_none: true\n    },\n    '連続表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '連続無改行表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('継続表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '表示ログ': { type: 'const', value: '' },\n    '表示ログクリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__varslist[0]['表示ログ'] = '';\n        },\n        return_none: true\n    },\n    '言': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    'コンソール表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s) {\n            console.log(s);\n        },\n        return_none: true\n    },\n    // @四則演算\n    '足': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        isVariableJosi: false,\n        pure: true,\n        fn: function (a, b) {\n            return a + b;\n        }\n    },\n    '引': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            return a - b;\n        }\n    },\n    '掛': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            // 数値の掛け算\n            if (typeof a === 'number') {\n                return a * b;\n            }\n            // 文字列の掛け算(文字列の繰り返し)\n            if (typeof a === 'string') {\n                let s = '';\n                for (let i = 0; i < parseInt(b); i++) {\n                    s += a;\n                }\n                return s;\n            }\n            // 配列の繰り返し\n            if (a instanceof Array) {\n                const aa = [];\n                for (let i = 0; i < parseInt(b); i++) {\n                    aa.push(...a);\n                }\n                return aa;\n            }\n            return a * b;\n        }\n    },\n    '倍': {\n        type: 'func',\n        josi: [['の', 'を'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a * b;\n        }\n    },\n    '割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a / b;\n        }\n    },\n    '割余': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a % b;\n        }\n    },\n    '偶数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 0);\n        }\n    },\n    '奇数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 1);\n        }\n    },\n    '二乗': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            return a * a;\n        }\n    },\n    'べき乗': {\n        type: 'func',\n        josi: [['の'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.pow(a, b);\n        }\n    },\n    '以上': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a >= b;\n        }\n    },\n    '以下': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a <= b;\n        }\n    },\n    '未満': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a < b;\n        }\n    },\n    '超': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a > b;\n        }\n    },\n    '等': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a === b;\n        }\n    },\n    '等無': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a !== b;\n        }\n    },\n    '一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA === jsonB;\n            }\n            return a === b;\n        }\n    },\n    '不一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA !== jsonB;\n            }\n            return a !== b;\n        }\n    },\n    '範囲内': {\n        type: 'func',\n        josi: [['が'], ['から'], ['の', 'までの']],\n        pure: true,\n        fn: function (v, a, b) {\n            return (a <= v) && (v <= b);\n        }\n    },\n    '連続加算': {\n        type: 'func',\n        josi: [['を'], ['に', 'と']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (b, ...a) {\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\n            a.push(b);\n            return a.reduce((p, c) => p + c);\n        }\n    },\n    // @敬語\n    'ください': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'お願': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'です': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    '拝啓': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu = 0;\n        },\n        return_none: true\n    },\n    '敬具': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu += 100; // bonus point\n        },\n        return_none: true\n    },\n    '礼節レベル取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            return sys.__reisetu;\n        }\n    },\n    // @特殊命令\n    'JS実行': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fn: function (src, sys) {\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\n            // https://github.com/kujirahand/nadesiko3/issues/1237\n            return eval(src); // eslint-disable-line\n        }\n    },\n    'JSオブジェクト取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (name, sys) {\n            return sys.__findVar(name, null);\n        }\n    },\n    'JS関数実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        fn: function (name, args) {\n            // nameが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof name === 'string') {\n                name = eval(name);\n            }\n            if (typeof name !== 'function') {\n                throw new Error('JS関数取得で実行できません。');\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            // eslint-disable-next-line prefer-spread\n            return name.apply(null, args);\n        }\n    },\n    'ASYNC': {\n        type: 'func',\n        josi: [],\n        asyncFn: true,\n        fn: async function () {\n            // empty\n        },\n        return_none: true\n    },\n    'AWAIT実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        asyncFn: true,\n        fn: async function (f, args, sys) {\n            // nameが文字列ならevalして関数を得る\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, 'AWAIT実行');\n            }\n            if (!(f instanceof Function)) {\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\n            }\n            // 実行\n            return await f(...args);\n        }\n    },\n    'JSメソッド実行': {\n        type: 'func',\n        josi: [['の'], ['を'], ['で']],\n        fn: function (obj, m, args) {\n            // objが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof obj === 'string') {\n                obj = eval(obj);\n            }\n            if (typeof obj !== 'object') {\n                throw new Error('JSオブジェクトを取得できませんでした。');\n            }\n            // method を求める\n            if (typeof m !== 'function') {\n                m = obj[m];\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            return m.apply(obj, args);\n        }\n    },\n    'ナデシコ': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: false,\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\n            }\n            sys.__varslist[0]['表示ログ'] = '';\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    'ナデシコ続': {\n        type: 'func',\n        josi: [['を', 'で']],\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\n            }\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    '実行': {\n        type: 'func',\n        josi: [['を', 'に', 'で']],\n        pure: false,\n        fn: function (f, sys) {\n            // #938 の規則に従って処理\n            // 引数が関数なら実行\n            if (typeof f === 'function') {\n                return f(sys);\n            }\n            // 文字列なら関数に変換できるか判定して実行\n            if (typeof f === 'string') {\n                const tf = sys.__findFunc(f, '実行');\n                if (typeof tf === 'function') {\n                    return tf(sys);\n                }\n            }\n            // それ以外ならそのまま値を返す\n            return f;\n        }\n    },\n    '実行時間計測': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (f, sys) {\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '実行時間計測');\n            }\n            //\n            if (performance && performance.now) {\n                const t1 = performance.now();\n                f(sys);\n                const t2 = performance.now();\n                return (t2 - t1);\n            }\n            else {\n                const t1 = Date.now();\n                f(sys);\n                const t2 = Date.now();\n                return (t2 - t1);\n            }\n        }\n    },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            sys.__v0.forceClose = true;\n            if (!sys.__v0.useDebug) {\n                throw new Error('__終わる__');\n            }\n        }\n    },\n    // @型変換\n    '変数型確認': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    'TYPEOF': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    '文字列変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    'TOSTR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    '整数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'TOINT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    '実数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'TOFLOAT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'INT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'FLOAT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'NAN判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return isNaN(v);\n        }\n    },\n    '非数判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n            return Number.isNaN(v);\n        }\n    },\n    'HEX': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return parseInt(a).toString(16);\n        }\n    },\n    '進数変換': {\n        type: 'func',\n        josi: [['を', 'の'], ['']],\n        pure: true,\n        fn: function (v, n) {\n            return parseInt(v).toString(n);\n        }\n    },\n    '二進': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v).toString(2);\n        }\n    },\n    '二進表示': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v, sys) {\n            const s = parseInt(v).toString(2);\n            sys.__exec('表示', [s, sys]);\n        }\n    },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['の'], ['で']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + (parseInt('' + v).toString(16));\n                return v2.substring(v2.length - 2, v2.length);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        }\n    },\n    // @論理演算\n    '論理OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a || b);\n        }\n    },\n    '論理AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a && b);\n        }\n    },\n    '論理NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (!v) ? 1 : 0;\n        }\n    },\n    // @ビット演算\n    'OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a | b);\n        }\n    },\n    'AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a & b);\n        }\n    },\n    'XOR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a ^ b);\n        }\n    },\n    'NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (~v);\n        }\n    },\n    'SHIFT_L': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a << b);\n        }\n    },\n    'SHIFT_R': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >> b);\n        }\n    },\n    'SHIFT_UR': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >>> b);\n        }\n    },\n    // @文字列処理\n    '文字数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).length;\n            }\n            return Array.from(v).length;\n        }\n    },\n    '何文字目': {\n        type: 'func',\n        josi: [['で', 'の'], ['が']],\n        pure: true,\n        fn: function (s, a) {\n            return String(s).indexOf(a) + 1;\n        }\n    },\n    'CHR': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.fromCodePoint) {\n                return String.fromCharCode(v);\n            }\n            return String.fromCodePoint(v);\n        }\n    },\n    'ASC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.prototype.codePointAt) {\n                return String(v).charCodeAt(0);\n            }\n            return String(v).codePointAt(0);\n        }\n    },\n    '文字挿入': {\n        type: 'func',\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, i, a) {\n            if (i <= 0) {\n                i = 1;\n            }\n            const ss = String(s);\n            const mae = ss.substring(0, i - 1);\n            const usi = ss.substring(i - 1);\n            return mae + a + usi;\n        }\n    },\n    '文字検索': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, b) {\n            let str = String(s);\n            str = str.substring(a);\n            const res = str.indexOf(b);\n            if (res === -1) {\n                return 0;\n            }\n            return res + 1 + a;\n        }\n    },\n    '追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a);\n        }\n    },\n    '一行追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a) + '\\n';\n        }\n    },\n    '文字列分解': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).split('');\n            }\n            return Array.from(v);\n        }\n    },\n    'リフレイン': {\n        type: 'func',\n        josi: [['を', 'の'], ['で']],\n        pure: true,\n        fn: function (v, cnt) {\n            let s = '';\n            for (let i = 0; i < cnt; i++) {\n                s += String(v);\n            }\n            return s;\n        }\n    },\n    '出現回数': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            return s.split(a).length - 1;\n        }\n    },\n    'MID': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    '文字抜出': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を', '']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    'LEFT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    '文字左部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    'RIGHT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '文字右部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '区切': {\n        type: 'func',\n        josi: [['の', 'を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            return ('' + s).split('' + a);\n        }\n    },\n    '文字列分割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            const i = s.indexOf(a);\n            if (i < 0) {\n                return [s];\n            }\n            return [s.substring(0, i), s.substring(i + a.length)];\n        }\n    },\n    '切取': {\n        type: 'func',\n        josi: [['から', 'の'], ['まで', 'を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            s = String(s);\n            const i = s.indexOf(a);\n            if (i < 0) {\n                sys.__v0['対象'] = '';\n                return s;\n            }\n            sys.__v0['対象'] = s.substring(i + a.length);\n            return s.substring(0, i);\n        }\n    },\n    '文字削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\n        pure: true,\n        fn: function (s, a, b) {\n            s = '' + s;\n            const mae = s.substring(0, a - 1);\n            const usi = s.substring((a - 1 + b));\n            return mae + usi;\n        }\n    },\n    // @置換・トリム\n    '置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            return String(s).split(a).join(b);\n        }\n    },\n    '単置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            // replaceは最初の一度だけ置換する\n            return String(s).replace(a, b);\n        }\n    },\n    'トリム': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    '空白除去': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    // @文字変換\n    '大文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toUpperCase();\n        }\n    },\n    '小文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toLowerCase();\n        }\n    },\n    '平仮名変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const kanaToHira = (str) => {\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\n                    const chr = m.charCodeAt(0) - 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return kanaToHira('' + s);\n        }\n    },\n    'カタカナ変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const hiraToKana = (str) => {\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\n                    const chr = m.charCodeAt(0) + 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return hiraToKana('' + s);\n        }\n    },\n    '英数全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    '英数記号全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数記号半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    'カタカナ全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            let str = '';\n            let i = 0;\n            while (i < s.length) {\n                // 濁点の変換\n                const c2 = s.substring(i, i + 2);\n                const n2 = han2.indexOf(c2);\n                if (n2 >= 0) {\n                    str += zen2.charAt(n2 / 2);\n                    i += 2;\n                    continue;\n                }\n                // 濁点以外の変換\n                const c = s.charAt(i);\n                const n = han1.indexOf(c);\n                if (n >= 0) {\n                    str += zen1.charAt(n);\n                    i++;\n                    continue;\n                }\n                str += c;\n                i++;\n            }\n            return str;\n        }\n    },\n    'カタカナ半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            return s.split('').map((c) => {\n                const i = zen1.indexOf(c);\n                if (i >= 0) {\n                    return han1.charAt(i);\n                }\n                const j = zen2.indexOf(c);\n                if (j >= 0) {\n                    return han2.substring(j * 2, j * 2 + 2);\n                }\n                return c;\n            }).join('');\n        }\n    },\n    '全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\n            result = sys.__exec('英数記号全角変換', [result, sys]);\n            return result;\n        }\n    },\n    '半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\n            result = sys.__exec('英数記号半角変換', [result, sys]);\n            return result;\n        }\n    },\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' },\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' },\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' },\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' },\n    // @JSON\n    'JSONエンコード': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v);\n        }\n    },\n    'JSONエンコード整形': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v, null, 2);\n        }\n    },\n    'JSONデコード': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (s) {\n            return JSON.parse(s);\n        }\n    },\n    // @正規表現\n    '正規表現マッチ': {\n        type: 'func',\n        josi: [['を', 'が'], ['で', 'に']],\n        pure: true,\n        fn: function (a, b, sys) {\n            let re;\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\n            // パターンがない場合\n            if (f === null) {\n                re = new RegExp(b, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            const sa = sys.__varslist[0]['抽出文字列'] = [];\n            const m = String(a).match(re);\n            let result = m;\n            if (re.global) {\n                // no groups\n            }\n            else if (m) {\n                // has group?\n                if (m.length > 0) {\n                    result = m[0];\n                    for (let i = 1; i < m.length; i++) {\n                        sa[i - 1] = m[i];\n                    }\n                }\n            }\n            return result;\n        }\n    },\n    '抽出文字列': { type: 'const', value: [] },\n    '正規表現置換': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).replace(re, b);\n        }\n    },\n    '正規表現区切': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).split(re);\n        }\n    },\n    // @指定形式\n    '通貨形式': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        }\n    },\n    'ゼロ埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = '0';\n            for (let i = 0; i < a; i++) {\n                z += '0';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    '空白埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = ' ';\n            for (let i = 0; i < a; i++) {\n                z += ' ';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    // @文字種類\n    'かなか判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x3041 && c <= 0x309F);\n        }\n    },\n    'カタカナ判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x30A1 && c <= 0x30FA);\n        }\n    },\n    '数字判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charAt(0);\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\n        }\n    },\n    '数列判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\n            return String(s).match(checkerRE) !== null;\n        }\n    },\n    // @配列操作\n    '配列結合': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, s) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.join('' + s);\n            }\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\n            return a2.join('' + s);\n        }\n    },\n    '配列検索': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, s) {\n            if (a instanceof Array) {\n                return a.indexOf(s);\n            } // 配列ならOK\n            return -1;\n        }\n    },\n    '配列要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.length;\n            } // 配列ならOK\n            if (a instanceof Object) {\n                return Object.keys(a).length;\n            }\n            return 1;\n        }\n    },\n    '要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    '配列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (a instanceof Array) {\n                return a.splice(i, 0, s);\n            } // 配列ならOK\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列一括挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, b) {\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\n                for (let j = 0; j < b.length; j++) {\n                    a.splice(i + j, 0, b[j]);\n                }\n                return a;\n            }\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.sort();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列数値変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                for (let i = 0; i < a.length; i++) {\n                    a[i] = parseFloat(a[i]);\n                }\n                return a;\n            }\n            throw new Error('『配列数値変換』で配列以外が指定されました。');\n        }\n    },\n    '配列数値ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.sort((a, b) => {\n                    return parseFloat(a) - parseFloat(b);\n                });\n            }\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列カスタムソート': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: false,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\n            }\n            if (a instanceof Array) {\n                return a.sort(ufunc);\n            }\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\n        }\n    },\n    '配列逆順': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.reverse();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列シャッフル': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) { // 配列ならOK\n                for (let i = a.length - 1; i > 0; i--) {\n                    const r = Math.floor(Math.random() * (i + 1));\n                    const tmp = a[i];\n                    a[i] = a[r];\n                    a[r] = tmp;\n                }\n                return a;\n            }\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\n        }\n    },\n    '配列削除': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: false,\n        fn: function (a, i, sys) {\n            return sys.__exec('配列切取', [a, i, sys]);\n        }\n    },\n    '配列切取': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            // 配列変数のとき\n            if (a instanceof Array) {\n                const b = a.splice(i, 1);\n                if (b instanceof Array) {\n                    return b[0];\n                } // 切り取った戻り値は必ずArrayになるので。\n                return null;\n            }\n            // 辞書型変数のとき\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\n                if (a[i]) {\n                    const old = a[i];\n                    delete a[i];\n                    return old;\n                }\n                return undefined;\n            }\n            throw new Error('『配列切取』で配列以外を指定。');\n        }\n    },\n    '配列取出': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, i, cnt) {\n            if (a instanceof Array) {\n                return a.splice(i, cnt);\n            }\n            throw new Error('『配列取出』で配列以外を指定。');\n        }\n    },\n    '配列ポップ': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.pop();\n            }\n            throw new Error('『配列ポップ』で配列以外の処理。');\n        }\n    },\n    '配列プッシュ': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b, sys) {\n            return sys.__exec('配列追加', [a, b, sys]);\n        }\n    },\n    '配列追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) { // 配列ならOK\n                a.push(b);\n                return a;\n            }\n            throw new Error('『配列追加』で配列以外の処理。');\n        }\n    },\n    '配列複製': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列足': {\n        type: 'func',\n        josi: [['に', 'へ', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) {\n                return a.concat(b);\n            }\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列最大値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.max(x, y));\n        }\n    },\n    '配列最小値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.min(x, y));\n        }\n    },\n    '配列合計': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                let v = 0;\n                a.forEach((n) => {\n                    const nn = parseFloat(n);\n                    if (isNaN(nn)) {\n                        return;\n                    }\n                    v += nn;\n                });\n                return v;\n            }\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\n        }\n    },\n    '配列入替': {\n        type: 'func',\n        josi: [['の'], ['と'], ['を']],\n        pure: true,\n        fn: function (a, i, j) {\n            if (!(a instanceof Array)) {\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\n            }\n            const tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n            return a;\n        }\n    },\n    '配列連番作成': {\n        type: 'func',\n        josi: [['から'], ['までの', 'まで', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = a; i <= b; i++) {\n                result.push(i);\n            }\n            return result;\n        }\n    },\n    '配列要素作成': {\n        type: 'func',\n        josi: [['を'], ['だけ']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = 0; i < b; i++) {\n                result.push(a);\n            }\n            return result;\n        }\n    },\n    '配列関数適用': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列関数適用');\n            }\n            const result = [];\n            for (const e of a) {\n                result.push(ufunc(e));\n            }\n            return result;\n        }\n    },\n    '配列マップ': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            return sys.__exec('配列関数適用', [f, a, sys]);\n        }\n    },\n    '配列フィルタ': {\n        type: 'func',\n        josi: [['で', 'の'], ['を', 'について']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列フィルタ');\n            }\n            const result = [];\n            for (const e of a) {\n                if (ufunc(e)) {\n                    result.push(e);\n                }\n            }\n            return result;\n        }\n    },\n    // @二次元配列処理\n    '表ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                if (ns === ms) {\n                    return 0;\n                }\n                else if (ns < ms) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n            });\n            return a;\n        }\n    },\n    '表数値ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                return ns - ms;\n            });\n            return a;\n        }\n    },\n    '表ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\n        }\n    },\n    '表完全一致ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => row[no] === s);\n        }\n    },\n    '表検索': {\n        type: 'func',\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, row, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表検索』には配列を指定する必要があります。');\n            }\n            for (let i = row; i < a.length; i++) {\n                if (a[i][col] === s) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表列数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列数』には配列を指定する必要があります。');\n            }\n            let cols = 1;\n            for (let i = 0; i < a.length; i++) {\n                if (a[i].length > cols) {\n                    cols = a[i].length;\n                }\n            }\n            return cols;\n        }\n    },\n    '表行数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行数』には配列を指定する必要があります。');\n            }\n            return a.length;\n        }\n    },\n    '表行列交換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\n                }\n            }\n            return res;\n        }\n    },\n    '表右回転': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表右回転』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = a[rows - c - 1][r];\n                }\n            }\n            return res;\n        }\n    },\n    '表重複削除': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            const keys = {};\n            for (let n = 0; n < a.length; n++) {\n                const k = a[n][i];\n                if (undefined === keys[k]) {\n                    keys[k] = true;\n                    res.push(a[n]);\n                }\n            }\n            return res;\n        }\n    },\n    '表列取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列取得』には配列を指定する必要があります。');\n            }\n            const res = a.map(row => row[i]);\n            return res;\n        }\n    },\n    '表列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row, idx) => {\n                let nr = [];\n                if (i > 0) {\n                    nr = nr.concat(row.slice(0, i));\n                }\n                nr.push(s[idx]);\n                nr = nr.concat(row.slice(i));\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列削除': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row) => {\n                const nr = row.slice(0);\n                nr.splice(i, 1);\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列合計': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列合計』には配列を指定する必要があります。');\n            }\n            let sum = 0;\n            a.forEach((row) => { sum += row[i]; });\n            return sum;\n        }\n    },\n    '表曖昧検索': {\n        type: 'func',\n        josi: [['の'], ['から'], ['で'], ['を']],\n        pure: true,\n        fn: function (a, row, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            for (let i = row; i < a.length; i++) {\n                const line = a[i];\n                if (re.test(line[col])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表正規表現ピックアップ': {\n        type: 'func',\n        josi: [['の', 'で'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            const res = [];\n            for (let i = 0; i < a.length; i++) {\n                const row = a[i];\n                if (re.test(row[col])) {\n                    res.push(row.slice(0));\n                }\n            }\n            return res;\n        }\n    },\n    // @辞書型変数の操作\n    '辞書キー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const keys = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    keys.push(key);\n                }\n                return keys;\n            }\n            if (a instanceof Array) { // 配列なら数字を返す\n                for (let i = 0; i < a.length; i++) {\n                    keys.push(i);\n                }\n                return keys;\n            }\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: true,\n        fn: function (a, key) {\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                if (key in a) {\n                    delete a[key];\n                }\n                return a;\n            }\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @ハッシュ\n    'ハッシュキー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('辞書キー列挙', [a, sys]);\n        }\n    },\n    'ハッシュ内容列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const body = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    body.push(a[key]);\n                }\n                return body;\n            }\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    'ハッシュキー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: false,\n        fn: function (a, key, sys) {\n            return sys.__exec('辞書キー削除', [a, key, sys]);\n        }\n    },\n    'ハッシュキー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @タイマー\n    '秒待': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: function (n, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    // タイマーを仕掛ける\n                    const timerId = setTimeout(() => {\n                        // タイマー使用中リストに追加したIDを削除\n                        const i = sys.__timeout.indexOf(timerId);\n                        if (i >= 0) {\n                            sys.__timeout.splice(i, 1);\n                        }\n                        // Promiseを終了\n                        resolve();\n                    }, parseFloat(n) * 1000);\n                    // タイマー使用中リストに追加\n                    sys.__timeout.push(timerId);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        },\n        return_none: true\n    },\n    '秒待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒逐次待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒後': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: true,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒後');\n            }\n            // 1回限りのタイマーをセット\n            const timerId = setTimeout(() => {\n                // 使用中リストに追加したIDを削除\n                const i = sys.__timeout.indexOf(timerId);\n                if (i >= 0) {\n                    sys.__timeout.splice(i, 1);\n                }\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                try {\n                    f(timerId, sys);\n                }\n                catch (e) {\n                    let err = e;\n                    if (!(e instanceof NakoRuntimeError)) {\n                        err = new NakoRuntimeError(e, sys.__varslist[0].line);\n                    }\n                    sys.logger.error(err);\n                }\n            }, parseFloat(n) * 1000);\n            sys.__timeout.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒毎': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒毎');\n            }\n            // タイマーをセット\n            const timerId = setInterval(() => {\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                f(timerId, sys);\n            }, parseFloat(n) * 1000);\n            // タイマーIDを追加\n            sys.__interval.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒タイマー開始時': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            return sys.__exec('秒毎', [f, n, sys]);\n        }\n    },\n    'タイマー停止': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (timerId, sys) {\n            const i = sys.__interval.indexOf(timerId);\n            if (i >= 0) {\n                sys.__interval.splice(i, 1);\n                clearInterval(timerId);\n                return true;\n            }\n            const j = sys.__timeout.indexOf(timerId);\n            if (j >= 0) {\n                sys.__timeout.splice(j, 1);\n                clearTimeout(timerId);\n                return true;\n            }\n            return false;\n        },\n        return_none: false\n    },\n    '全タイマー停止': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // clearInterval\n            for (let i = 0; i < sys.__interval.length; i++) {\n                const timerId = sys.__interval[i];\n                clearInterval(timerId);\n            }\n            sys.__interval = [];\n            // clearTimeout\n            for (let i = 0; i < sys.__timeout.length; i++) {\n                const timerId = sys.__timeout[i];\n                clearTimeout(timerId);\n            }\n            sys.__timeout = [];\n        },\n        return_none: true\n    },\n    // @日時処理(簡易)\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] },\n    '今': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const z2 = (n) => {\n                n = '00' + n;\n                return n.substring(n.length - 2, n.length);\n            };\n            const t = new Date();\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n        }\n    },\n    'システム時間': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return Math.floor(now.getTime() / 1000);\n        }\n    },\n    'システム時間ミリ秒': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return now.getTime();\n        }\n    },\n    '今日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            return sys.__formatDate(new Date());\n        }\n    },\n    '明日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() + (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '昨日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() - (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '今年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear();\n        }\n    },\n    '来年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() + 1;\n        }\n    },\n    '去年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() - 1;\n        }\n    },\n    '今月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 1;\n        }\n    },\n    '来月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 2;\n        }\n    },\n    '先月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth();\n        }\n    },\n    '曜日': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return '日月火水木金土'.charAt(d.getDay() % 7);\n        }\n    },\n    '曜日番号取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s) {\n            const a = s.split('/');\n            const t = new Date(a[0], a[1] - 1, a[2]);\n            return t.getDay();\n        }\n    },\n    'UNIXTIME変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    'UNIX時間変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    '日時変換': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (tm, sys) {\n            const t = tm * 1000;\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\n        }\n    },\n    '日時書式変換': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (tm, fmt, sys) {\n            const t = sys.__str2date(tm);\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\n                switch (m) {\n                    case 'YYYY': return t.getFullYear();\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\n                    case 'DD': return sys.__zero2(t.getDate());\n                    case 'M': return (t.getMonth() + 1);\n                    case 'D': return (t.getDate());\n                    case 'HH': return sys.__zero2(t.getHours());\n                    case 'mm': return sys.__zero2(t.getMinutes());\n                    case 'ss': return sys.__zero2(t.getSeconds());\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\n                    case 'H': return (t.getHours());\n                    case 'm': return (t.getMinutes());\n                    case 's': return (t.getSeconds());\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\n                }\n                return m;\n            });\n            return fmt;\n        }\n    },\n    '和暦変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            const t = d.getTime();\n            for (const era of sys.__v0['元号データ']) {\n                const gengo = era['元号'];\n                const d2 = sys.__str2date(era['改元日']);\n                const t2 = d2.getTime();\n                if (t2 <= t) {\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\n                    if (y === 1) {\n                        y = '元';\n                    }\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\n                }\n            }\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\n        }\n    },\n    '年数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return (t2.getFullYear() - t1.getFullYear());\n        }\n    },\n    '月数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\n                (t1.getFullYear() * 12 + t1.getMonth()));\n        }\n    },\n    '日数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\n            return days;\n        }\n    },\n    '時間差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\n            return hours;\n        }\n    },\n    '分差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const min = Math.ceil((t2 - t1) / (60));\n            return min;\n        }\n    },\n    '秒差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const sec = Math.ceil((t2 - t1));\n            return sec;\n        }\n    },\n    '日時差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\n        pure: true,\n        fn: function (a, b, unit, sys) {\n            switch (unit) {\n                case '年': return sys.__exec('年数差', [a, b, sys]);\n                case '月': return sys.__exec('月数差', [a, b, sys]);\n                case '日': return sys.__exec('日数差', [a, b, sys]);\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\n                case '分': return sys.__exec('分差', [a, b, sys]);\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\n            }\n            throw new Error('『日時差』で不明な単位です。');\n        }\n    },\n    '時間加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const op = a.charAt(0);\n            if (op === '-' || op === '+') {\n                a = a.substring(1);\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + ':0:0').split(':');\n            let sec = parseInt(aa[0]) * 60 * 60 +\n                parseInt(aa[1]) * 60 +\n                parseInt(aa[2]);\n            if (op === '-') {\n                sec *= -1;\n            }\n            const rd = new Date(d.getTime() + (sec * 1000));\n            return sys.__formatDateTime(rd, s);\n        }\n    },\n    '日付加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            let op = 1;\n            const opc = a.charAt(0);\n            if (opc === '-' || opc === '+') {\n                a = a.substring(1);\n                if (opc === '-') {\n                    op *= -1;\n                }\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + '/0/0').split('/');\n            const addY = parseInt(aa[0]) * op;\n            const addM = parseInt(aa[1]) * op;\n            const addD = parseInt(aa[2]) * op;\n            d.setFullYear(d.getFullYear() + addY);\n            d.setMonth(d.getMonth() + addM);\n            d.setDate(d.getDate() + addD);\n            return sys.__formatDateTime(d, s);\n        }\n    },\n    '日時加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\n            if (!r) {\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\n            }\n            switch (r[3]) {\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\n            }\n        }\n    },\n    '時間ミリ秒取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            if (performance && performance.now) {\n                return performance.now();\n            }\n            else if (Date.now) {\n                return Date.now();\n            }\n            else {\n                const now = new Date();\n                return now.getTime();\n            }\n        }\n    },\n    // @デバッグ支援\n    'エラー発生': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s) {\n            throw new Error(s);\n        }\n    },\n    '__DEBUG': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.isDebug = true;\n            console.log(sys);\n        }\n    },\n    '__DEBUG強制待機': { type: 'const', value: 0 },\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] },\n    '__DEBUG待機フラグ': { type: 'const', value: 0 },\n    '__DEBUG_BP_WAIT': {\n        type: 'func',\n        josi: [['で']],\n        pure: true,\n        asyncFn: true,\n        fn: function (curLine, sys) {\n            return new Promise((resolve) => {\n                const breakpoints = sys.__v0['__DEBUGブレイクポイント一覧'];\n                const forceLine = sys.__v0['__DEBUG強制待機'];\n                sys.__v0['__DEBUG強制待機'] = 0;\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\n                    if (sys.__v0['プラグイン名'] !== 'メイン') {\n                        return;\n                    } // 現状メインのみデバッグする\n                    console.log(`@__DEBUG_BP_WAIT(${curLine})`);\n                    const timerId = setInterval(() => {\n                        if (sys.__v0['__DEBUG待機フラグ'] === 1) {\n                            sys.__v0['__DEBUG待機フラグ'] = 0;\n                            clearInterval(timerId);\n                            resolve(curLine);\n                        }\n                    }, 500);\n                }\n                else {\n                    resolve(curLine);\n                }\n            });\n        }\n    },\n    'グローバル関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[1];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[0];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数存在': {\n        type: 'func',\n        josi: [['が', 'の']],\n        pure: true,\n        fn: function (fname, sys) {\n            return (typeof sys.__v0[fname] !== 'undefined');\n        }\n    },\n    'プラグイン一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.pluginfiles) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    'モジュール一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.__module) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    '助詞一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            return new Promise((resolve, reject) => {\n                import('./nako_josi_list.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    resolve(obj.josiList);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    '予約語一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            // const words = require('./nako_reserved_words.mjs')\n            return new Promise((resolve, reject) => {\n                import('./nako_reserved_words.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    const w = [];\n                    for (const key in obj.default) {\n                        w.push(key);\n                    }\n                    resolve(w);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    // @プラグイン管理\n    'プラグイン名': { type: 'const', value: 'メイン' },\n    'プラグイン名設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__v0['プラグイン名'] = s;\n        },\n        return_none: true\n    },\n    '名前空間': { type: 'const', value: '' },\n    '名前空間設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            // push namespace\n            sys.__namespaceList.push([sys.__v0['名前空間'], sys.__v0['プラグイン名']]);\n            sys.__v0['名前空間'] = s;\n        },\n        return_none: true\n    },\n    '名前空間ポップ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // pop namespace\n            const a = sys.__namespaceList.pop();\n            if (a) {\n                sys.__v0['名前空間'] = a[0];\n                sys.__v0['プラグイン名'] = a[1];\n            }\n        },\n        return_none: true\n    },\n    // @URLエンコードとパラメータ\n    'URLエンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            return encodeURIComponent(text);\n        }\n    },\n    'URLデコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            return decodeURIComponent(text);\n        }\n    },\n    'URLパラメータ解析': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const res = {};\n            if (typeof url !== 'string') {\n                return res;\n            }\n            const p = url.split('?');\n            if (p.length <= 1) {\n                return res;\n            }\n            const params = p[1].split('&');\n            for (const line of params) {\n                const line2 = line + '=';\n                const kv = line2.split('=');\n                const k = sys.__exec('URLデコード', [kv[0]]);\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\n            }\n            return res;\n        }\n    },\n    // @BASE64\n    'BASE64エンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            // browser?\n            if (typeof (window) !== 'undefined' && window.btoa) {\n                const u8a = new TextEncoder().encode(text);\n                const utf8str = String.fromCharCode.apply(null, u8a);\n                return btoa(utf8str);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text).toString('base64');\n            }\n            throw new Error('『BASE64エンコード』は利用できません。');\n        }\n    },\n    'BASE64デコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            if (typeof (window) !== 'undefined' && window.atob) {\n                const decodedUtf8str = atob(text);\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\n                const decodedArray = new Uint8Array(dec);\n                return new TextDecoder('UTF-8').decode(decodedArray);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text, 'base64').toString();\n            }\n            throw new Error('『BASE64デコード』は利用できません。');\n        }\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\nexport const opPriority = {\n    // and or\n    'and': 1,\n    'or': 1,\n    // compare\n    'eq': 2,\n    'noteq': 2,\n    '===': 2,\n    '!==': 2,\n    'gt': 2,\n    'gteq': 2,\n    'lt': 2,\n    'lteq': 2,\n    '&': 3,\n    // + - << >> >>>\n    '+': 4,\n    '-': 4,\n    'shift_l': 4,\n    'shift_r': 4,\n    'shift_r0': 4,\n    // * /\n    '*': 5,\n    '/': 5,\n    '÷': 5,\n    '÷÷': 5,\n    '%': 5,\n    // ^\n    '^': 6,\n    '**': 6\n};\nexport const RenbunJosi = [\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\n];\nexport const operatorList = [];\nfor (const key in opPriority) {\n    operatorList.push(key);\n}\n","/**\n * なでしこ3 の TypeScript のための型定義\n */\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\n    return {\n        type,\n        value,\n        indent,\n        line,\n        column: 0,\n        file,\n        josi: ''\n    };\n}\n","/**\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\n */\nexport function isIndentChars(ch) {\n    const code = ch.charCodeAt(0);\n    // 特別なコード\n    if (ch === '\\t') {\n        return 4;\n    }\n    if (ch === ' ' || ch === '|') {\n        return 1;\n    }\n    if (ch === '・' || ch === '　') {\n        return 2;\n    }\n    if (ch === '⏋' || ch === '⏌') {\n        return 2;\n    } // 0x23CB, 0x23CC\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\n    if (code >= 0x2500 && code <= 0x257F) {\n        return 2;\n    }\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\n        (code >= 0x23B8 && code <= 0x23BF)) {\n        return 2;\n    }\n    return 0;\n}\n","/**\n * なでしこ3字句解析のためのルール\n */\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\nconst hira = /^[ぁ-ん]/;\nconst allHiragana = /^[ぁ-ん]+$/;\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\nconst wordSpecial = /^(かつ|または)/;\nconst errorRead = (ch) => {\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\n};\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\n/** トークンに区切るルールの一覧 */\nexport const rules = [\n    // 上から順にマッチさせていく\n    { name: 'ここまで', pattern: /^;;;/ },\n    { name: 'eol', pattern: /^\\n/ },\n    { name: 'eol', pattern: /^;/ },\n    // eslint-disable-next-line no-control-regex\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ },\n    { name: 'comma', pattern: /^,/ },\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\n    { name: 'def_test', pattern: /^●テスト:/ },\n    { name: 'def_func', pattern: /^●/ },\n    // 多倍長整数リテラルの判定。整数の末尾に「n」がついているだけな為、数値判定より上に書かないとただの整数にされる\n    { name: 'bigint', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[oO][0-7]+(_[0-7]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[bB][0-1]+(_[0-1]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^\\d+(_\\d+)*?n/, readJosi: true },\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'ここから', pattern: /^(ここから),?/ },\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\n    { name: 'もし', pattern: /^もしも?/ },\n    // 「ならば」は助詞として定義している\n    { name: '違えば', pattern: /^違(えば)?/ },\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\n    // @see nako_reserved_words.js\n    { name: 'shift_r0', pattern: /^>>>/ },\n    { name: 'shift_r', pattern: /^>>/ },\n    { name: 'shift_l', pattern: /^<</ },\n    { name: '===', pattern: /^===/ },\n    { name: '!==', pattern: /^!==/ },\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\n    { name: '←', pattern: /^(←|<--)/ },\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\n    { name: 'eq', pattern: /^(=|🟰)/ },\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ },\n    { name: 'not', pattern: /^(!|💡)/ },\n    { name: 'gt', pattern: /^>/ },\n    { name: 'lt', pattern: /^</ },\n    { name: 'and', pattern: /^(かつ|&&|and\\s)/ },\n    { name: 'or', pattern: /^(または|或いは|あるいは|or\\s|\\|\\|)/ },\n    { name: '@', pattern: /^@/ },\n    { name: '+', pattern: /^\\+/ },\n    { name: '-', pattern: /^-/ },\n    { name: '**', pattern: /^(××|\\*\\*)/ },\n    { name: '*', pattern: /^(×|\\*)/ },\n    { name: '÷÷', pattern: /^÷÷/ },\n    { name: '÷', pattern: /^(÷|\\/)/ },\n    { name: '%', pattern: /^%/ },\n    { name: '^', pattern: /^\\^/ },\n    { name: '&', pattern: /^&/ },\n    { name: '[', pattern: /^\\[/ },\n    { name: ']', pattern: /^]/, readJosi: true },\n    { name: '(', pattern: /^\\(/ },\n    { name: ')', pattern: /^\\)/, readJosi: true },\n    { name: '|', pattern: /^\\|/ },\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') },\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') },\n    { name: 'func', pattern: /^\\{関数\\},?/ },\n    { name: '{', pattern: /^\\{/ },\n    { name: '}', pattern: /^\\}/, readJosi: true },\n    { name: ':', pattern: /^:/ },\n    { name: '_eol', pattern: /^_\\s*\\n/ },\n    { name: 'dec_lineno', pattern: /^‰/ },\n    // 絵文字変数 = (絵文字)英数字*\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^《.+?》/, readJosi: true },\n    // 単語句\n    {\n        name: 'word',\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\n        cbParser: cbWordParser\n    }\n];\nexport function trimOkurigana(s) {\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\n    if (!hira.test(s)) {\n        return s.replace(/[ぁ-ん]+/g, '');\n    }\n    // 全てひらがな？ (例) どうぞ\n    if (allHiragana.test(s)) {\n        return s;\n    }\n    // 末尾のひらがなのみ (例)お願いします →お願\n    return s.replace(/[ぁ-ん]+$/g, '');\n}\n// Utility for Rule\nfunction cbRangeComment(src) {\n    let res = '';\n    const josi = '';\n    let numEOL = 0;\n    src = src.substring(2); // skip /*\n    const i = src.indexOf('*/');\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + 2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\n    return { src, res, josi, numEOL };\n}\n/**\n * @param {string} src\n */\nfunction cbWordParser(src, isTrimOkurigana = true) {\n    /*\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\n      hiragana = [ぁ-ん]\n      katakana = [ァ-ヶー]\n      emoji    = [\\u1F60-\\u1F6F]\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\n      alphabet = [_a-zA-Z]\n      numchars = [0-9]\n    */\n    let res = '';\n    let josi = '';\n    while (src !== '') {\n        // 1文字以上のとき\n        if (res.length > 0) {\n            // 「かつ」「または」なら分割する (#1379 core#84)\n            const jsw = wordSpecial.exec(src);\n            if (jsw) {\n                break;\n            }\n            // 助詞の判定\n            const j = josiRE.exec(src);\n            if (j) {\n                josi = j[0].replace(/^\\s+/, '');\n                src = src.substring(j[0].length);\n                // 助詞の直後にある「,」を飛ばす #877\n                if (src.charAt(0) === ',') {\n                    src = src.substr(1);\n                }\n                break;\n            }\n        }\n        // カタカナ漢字英数字か？\n        const m = kanakanji.exec(src);\n        if (m) {\n            res += m[0];\n            src = src.substring(m[0].length);\n            continue;\n        }\n        // ひらがな？\n        const h = hira.test(src);\n        if (h) {\n            res += src.charAt(0);\n            src = src.substring(1);\n            continue;\n        }\n        break; // other chars\n    }\n    // --- 単語分割における特殊ルール ---\n    // 「間」の特殊ルール (#831)\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\n    if (/[ぁ-ん]間$/.test(res)) {\n        src = res.charAt(res.length - 1) + src;\n        res = res.slice(0, -1);\n    }\n    // 「以上」「以下」「超」「未満」 #918\n    const ii = wordHasIjoIka.exec(res);\n    if (ii) {\n        src = ii[1] + josi + src;\n        josi = '';\n        res = res.substring(0, res.length - ii[1].length);\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 送り仮名の省略ルール\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\n    if (isTrimOkurigana) {\n        res = trimOkurigana(res);\n    }\n    // 助詞だけの語句の場合\n    if (res === '' && josi !== '') {\n        res = josi;\n        josi = '';\n    }\n    return { src, res, josi, numEOL: 0 };\n}\nfunction cbString(beginTag, closeTag, src) {\n    let res = '';\n    let josi = '';\n    let numEOL = 0;\n    src = src.substr(beginTag.length); // skip beginTag\n    const i = src.indexOf(closeTag);\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substr(0, i);\n        src = src.substr(i + closeTag.length);\n        // res の中に beginTag があればエラーにする #953\n        if (res.indexOf(beginTag) >= 0) {\n            if (beginTag === '『') {\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\n            }\n            else {\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\n            }\n        }\n    }\n    // 文字列直後の助詞を取得\n    const j = josiRE.exec(src);\n    if (j) {\n        josi = j[0].replace(/^\\s+/, '');\n        src = src.substr(j[0].length);\n        // 助詞の後のカンマ #877\n        if (src.charAt(0) === ',') {\n            src = src.substr(1);\n        }\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    return { src, res, josi, numEOL };\n}\nfunction parseNumber(n) {\n    return Number(n.replace(/_/g, ''));\n}\n","// なでしこの字句解析を行う\n// 既に全角半角を揃えたコードに対して字句解析を行う\nimport { opPriority } from './nako_parser_const.mjs';\n// 予約語句\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\n/** @types {Record<string, string>} */\nimport reservedWords from './nako_reserved_words.mjs';\nimport { isIndentChars } from './nako_indent_chars.mjs';\n// 助詞の一覧\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\n// 字句解析ルールの一覧\nimport { rules, unitRE } from './nako_lex_rules.mjs';\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\nexport class NakoLexer {\n    /**\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\n        this.funclist = {};\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\n        this.result = [];\n        this.modName = 'main.nako3'; // モジュール名\n        this.moduleExport = {};\n    }\n    /** 関数一覧をセット */\n    setFuncList(listObj) {\n        this.funclist = listObj;\n    }\n    /** モジュール公開既定値一覧をセット */\n    setModuleExport(exportObj) {\n        this.moduleExport = exportObj;\n    }\n    /**\n     * @param tokens\n     * @param {boolean} isFirst\n     * @param {string} filename\n     */\n    replaceTokens(tokens, isFirst, filename) {\n        this.result = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        // 関数の定義があれば funclist を更新\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist, this.moduleExport);\n        this._replaceWord(this.result);\n        if (isFirst) {\n            if (this.result.length > 0) {\n                const eof = this.result[this.result.length - 1];\n                this.result.push({\n                    type: 'eol',\n                    line: eof.line,\n                    column: 0,\n                    indent: -1,\n                    file: eof.file,\n                    josi: '',\n                    value: '---',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: eof.line,\n                    indent: -1,\n                    column: 0,\n                    file: eof.file,\n                    josi: '',\n                    value: '',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n            else {\n                this.result.push({\n                    type: 'eol',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '---',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n        }\n        return this.result;\n    }\n    /**\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\n     */\n    static preDefineFunc(tokens, logger, funclist, moduleexport) {\n        // 関数を先読みして定義\n        let i = 0;\n        let isFuncPointer = false;\n        const readArgs = () => {\n            const args = [];\n            const keys = {};\n            if (tokens[i].type !== '(') {\n                return [];\n            }\n            i++;\n            while (tokens[i]) {\n                const t = tokens[i];\n                i++;\n                if (t.type === ')') {\n                    break;\n                }\n                if (t.type === 'func') {\n                    isFuncPointer = true;\n                }\n                else if (t.type !== '|' && t.type !== 'comma') {\n                    if (isFuncPointer) {\n                        t.funcPointer = true;\n                        isFuncPointer = false;\n                    }\n                    args.push(t);\n                    if (!keys[t.value]) {\n                        keys[t.value] = [];\n                    }\n                    keys[t.value].push(t.josi);\n                }\n            }\n            const varnames = [];\n            const funcPointers = [];\n            const result = [];\n            const already = {};\n            for (const arg of args) {\n                if (!already[arg.value]) {\n                    const josi = keys[arg.value];\n                    result.push(josi);\n                    varnames.push(arg.value);\n                    if (arg.funcPointer) {\n                        funcPointers.push(arg.value);\n                    }\n                    else {\n                        funcPointers.push(null);\n                    }\n                    already[arg.value] = true;\n                }\n            }\n            return [result, varnames, funcPointers];\n        };\n        // トークンを一つずつ確認\n        while (i < tokens.length) {\n            // タイプの置換\n            const t = tokens[i];\n            if (t.type === 'not' && tokens.length - i > 3) {\n                let prevToken = { type: 'eol' };\n                if (i >= 1) {\n                    prevToken = tokens[i - 1];\n                }\n                if (prevToken.type === 'eol') {\n                    let nextToken = tokens[i + 1];\n                    if (nextToken.type === 'word' && nextToken.value === 'モジュール公開既定値') {\n                        nextToken.type = 'モジュール公開既定値';\n                        nextToken = tokens[i + 2];\n                        if (nextToken.type === 'string' && nextToken.value === '非公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport[modName] = false;\n                            i += 3;\n                            continue;\n                        }\n                        else if (nextToken.type === 'string' && nextToken.value === '公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport[modName] = true;\n                            i += 3;\n                            continue;\n                        }\n                    }\n                }\n            }\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\n                t.josi = 'には';\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\n                i++;\n                continue;\n            }\n            // N回をN|回に置換\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\n                if (t.value.match(/回$/)) {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    // N回を挿入\n                    if (!t.endOffset) {\n                        t.endOffset = 1;\n                    }\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\n                    tokens.splice(i + 1, 0, kai);\n                    t.endOffset--;\n                    i++;\n                }\n            }\n            // 予約語の置換\n            if (t.type === 'word' && reservedWords[t.value]) {\n                t.type = reservedWords[t.value];\n                if (t.value === 'そう') {\n                    t.value = 'それ';\n                }\n            }\n            // 関数定義の確認\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\n                i++;\n                continue;\n            }\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\n            let isMumei = true;\n            let prevToken = { type: 'eol' };\n            if (i >= 1) {\n                prevToken = tokens[i - 1];\n            }\n            if (prevToken.type === 'eol') {\n                isMumei = false;\n            }\n            // 関数名や引数を得る\n            const defToken = t;\n            i++; // skip \"●\" or \"関数\"\n            let josi = [];\n            let varnames = [];\n            let funcPointers = [];\n            let funcName = '';\n            let funcNameToken = null;\n            let isExport = null;\n            // 関数の属性指定\n            if (tokens[i] && tokens[i].type === '{') {\n                i++;\n                const attr = tokens[i] && tokens[i].type === 'word' ? tokens[i].value : '';\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    logger.warn(`不明な関数属性『${attr}』が指定されています。`);\n                }\n                i++;\n                if (tokens[i] && tokens[i].type === '}') {\n                    i++;\n                }\n            }\n            // 関数名の前に引数定義\n            if (tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 関数名を得る\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\n                funcNameToken = tokens[i++];\n                funcName = funcNameToken.value;\n            }\n            // 関数名の後で引数定義\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\n            // 無名関数は登録しないように気をつける\n            if (funcName !== '' && funcNameToken) {\n                const modName = NakoLexer.filenameToModName(t.file);\n                funcName = modName + '__' + funcName;\n                if (funcName in funclist) { // 関数の二重定義を警告\n                    // main__は省略 #1223\n                    const dispName = funcName.replace(/^main__/, '');\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\n                }\n                funcNameToken.value = funcName;\n                funclist[funcName] = {\n                    type: 'func',\n                    josi,\n                    fn: null,\n                    asyncFn: false,\n                    isExport,\n                    varnames,\n                    funcPointers\n                };\n            }\n            // 無名関数のために\n            defToken.meta = {\n                type: 'func',\n                josi,\n                varnames,\n                funcPointers\n            };\n        }\n    }\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\n    splitStringEx(code) {\n        /** @type {string[]} */\n        const list = [];\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\n        const arr = code.split(/[{｛]/);\n        list.push(arr[0]);\n        for (const s of arr.slice(1)) {\n            const end = s.replace('｝', '}').indexOf('}');\n            if (end === -1) {\n                return null;\n            }\n            list.push(s.slice(0, end), s.slice(end + 1));\n        }\n        return list;\n    }\n    _replaceWord(tokens) {\n        let comment = [];\n        let i = 0;\n        const namespaceStack = [];\n        const getLastType = () => {\n            if (i <= 0) {\n                return 'eol';\n            }\n            return tokens[i - 1].type;\n        };\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main';\n        while (i < tokens.length) {\n            const t = tokens[i];\n            // モジュール名の変更に対応\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\n                namespaceStack.push(modSelf);\n                modSelf = tokens[i - 1].value;\n            }\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間ポップ') {\n                const space = namespaceStack.pop();\n                if (space) {\n                    modSelf = space;\n                }\n            }\n            // 関数を強制的に置換( word => func )\n            if (t.type === 'word' && t.value !== 'それ') {\n                // 関数を変換\n                const funcName = t.value;\n                if (funcName.indexOf('__') < 0) {\n                    // 自身のモジュール名を検索\n                    const gname1 = `${modSelf}__${funcName}`;\n                    const gfo1 = this.funclist[gname1];\n                    if (gfo1 && gfo1.type === 'func') {\n                        t.type = 'func';\n                        t.meta = gfo1;\n                        t.value = gname1;\n                        continue;\n                    }\n                    // モジュール関数を置換\n                    for (const mod of this.modList) {\n                        const gname = `${mod}__${funcName}`;\n                        const gfo = this.funclist[gname];\n                        const exportDefault = this.moduleExport[mod];\n                        if (gfo && gfo.type === 'func' && (gfo.isExport === true || (gfo.isExport !== false && exportDefault !== false))) {\n                            t.type = 'func';\n                            t.meta = gfo;\n                            t.value = gname;\n                            break;\n                        }\n                    }\n                    if (t.type === 'func') {\n                        continue;\n                    }\n                }\n                const fo = this.funclist[funcName];\n                if (fo && fo.type === 'func') {\n                    t.type = 'func';\n                    t.meta = fo;\n                }\n            }\n            // 数字につくマイナス記号を判定\n            // (ng) 5 - 3 || word - 3\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\n            if (t.type === '-' && tokens[i + 1]) {\n                const tokenType = tokens[i + 1].type;\n                if (tokenType === 'number' || tokenType === 'bigint') {\n                    // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\n                    const ltype = getLastType();\n                    if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\n                        tokens.splice(i, 1); // remove '-'\n                        if (tokenType === 'number') {\n                            tokens[i].value *= -1;\n                        }\n                        else {\n                            tokens[i].value = '-' + tokens[i].value;\n                        }\n                    }\n                }\n            }\n            // 助詞の「は」を = に展開\n            if (t.josi === undefined) {\n                t.josi = '';\n            }\n            if (t.josi === 'は') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'eq',\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                i += 2;\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                continue;\n            }\n            // 「とは」を一つの単語にする\n            if (t.josi === 'とは') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: t.josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // 助詞のならばをトークンとする\n            if (tararebaMap[t.josi]) {\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\n                if (!t.rawJosi) {\n                    t.rawJosi = josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'ならば',\n                    value: josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: ''\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\n            if (t.type === '_eol') {\n                tokens.splice(i, 1);\n                continue;\n            }\n            // コメントを飛ばす\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\n                comment.push(t.value);\n                tokens.splice(i, 1);\n                continue;\n            }\n            // 改行にコメントを埋め込む\n            if (t.type === 'eol') {\n                t.value = comment.join('/');\n                comment = [];\n            }\n            i++;\n        }\n    }\n    /**\n     * インデントの個数を数える\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\n     */\n    countIndent(src) {\n        let indent = 0;\n        for (let i = 0; i < src.length; i++) {\n            const c = src.charAt(i);\n            const n = isIndentChars(c);\n            if (n === 0) {\n                return [indent, i];\n            }\n            indent += n;\n        }\n        return [indent, src.length];\n    }\n    /**\n     * ソースコードをトークンに分割する\n     * @param src なでしこのソースコード\n     * @param line 先頭行の行番号\n     * @param filename ファイル名\n     */\n    tokenize(src, line, filename) {\n        const srcLength = src.length;\n        const result = [];\n        let columnCurrent;\n        let lineCurrent;\n        let column = 1;\n        let isDefTest = false;\n        let indent = 0;\n        // 最初にインデントを数える\n        const ia = this.countIndent(src);\n        indent = ia[0]; // インデント数\n        src = src.substring(ia[1]); // 読み飛ばす文字数\n        column += ia[1];\n        while (src !== '') {\n            let ok = false;\n            // 各ルールについて\n            for (const rule of rules) {\n                // 正規表現でマッチ\n                const m = rule.pattern.exec(src);\n                if (!m) {\n                    continue;\n                }\n                ok = true;\n                // 空白ならスキップ\n                if (rule.name === 'space') {\n                    column += m[0].length;\n                    src = src.substring(m[0].length);\n                    continue;\n                }\n                // マッチしたルールがコールバックを持つなら\n                if (rule.cbParser) {\n                    // コールバックを呼ぶ\n                    let rp;\n                    if (isDefTest && rule.name === 'word') {\n                        rp = rule.cbParser(src, false);\n                    }\n                    else {\n                        try {\n                            rp = rule.cbParser(src);\n                        }\n                        catch (e) {\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\n                        }\n                    }\n                    if (rule.name === 'string_ex') {\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\n                        const list = this.splitStringEx(rp.res);\n                        if (list === null) {\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\n                        }\n                        let offset = 0;\n                        for (let i = 0; i < list.length; i++) {\n                            const josi = (i === list.length - 1) ? rp.josi : '';\n                            if (i % 2 === 0) {\n                                result.push({\n                                    type: 'string',\n                                    value: list[i],\n                                    file: filename,\n                                    josi,\n                                    indent,\n                                    line,\n                                    column,\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\n                                });\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\n                                offset += list[i].length + 2;\n                            }\n                            else {\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                offset += list[i].length;\n                            }\n                        }\n                        line += rp.numEOL;\n                        column += src.length - rp.src.length;\n                        src = rp.src;\n                        if (rp.numEOL > 0) {\n                            column = 1;\n                        }\n                        break;\n                    }\n                    columnCurrent = column;\n                    column += src.length - rp.src.length;\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\n                    src = rp.src;\n                    line += rp.numEOL;\n                    if (rp.numEOL > 0) {\n                        column = 1;\n                    }\n                    break;\n                }\n                // ソースを進める前に位置を計算\n                const srcOffset = srcLength - src.length;\n                // 値を変換する必要があるか？\n                let value = m[0];\n                if (rule.cb) {\n                    value = rule.cb(value);\n                }\n                // ソースを進める\n                columnCurrent = column;\n                lineCurrent = line;\n                column += m[0].length;\n                src = src.substring(m[0].length);\n                // 改行の時の処理\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\n                    value = line++;\n                    column = 1;\n                }\n                // 数値なら単位を持つか？ --- #994\n                if (rule.name === 'number') {\n                    // 単位があれば読み飛ばす\n                    const um = unitRE.exec(src);\n                    if (um) {\n                        src = src.substring(um[0].length);\n                        column += m[0].length;\n                    }\n                }\n                let josi = '';\n                if (rule.readJosi) {\n                    const j = josiRE.exec(src);\n                    if (j) {\n                        josi = j[0].replace(/^\\s+/, '');\n                        column += j[0].length;\n                        src = src.substring(j[0].length);\n                        // 助詞の直後にあるカンマを無視 #877\n                        if (src.charAt(0) === ',') {\n                            src = src.substring(1);\n                        }\n                        // 「＊＊である」なら削除 #939 #974\n                        if (removeJosiMap[josi]) {\n                            josi = '';\n                        }\n                    }\n                }\n                switch (rule.name) {\n                    case 'def_test': {\n                        isDefTest = true;\n                        break;\n                    }\n                    case 'eol': { // eolの処理はほかに↑と↓にある\n                        isDefTest = false;\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n                // ここまで‰(#682) を処理\n                if (rule.name === 'dec_lineno') {\n                    line--;\n                    continue;\n                }\n                result.push({\n                    type: rule.name,\n                    value,\n                    indent,\n                    line: lineCurrent,\n                    column: columnCurrent,\n                    file: filename,\n                    josi,\n                    preprocessedCodeOffset: srcOffset,\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\n                });\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\n                if (rule.name === 'eol' && column === 1) {\n                    const ia = this.countIndent(src);\n                    indent = ia[0];\n                    column += ia[1];\n                    src = src.substring(ia[1]); // インデントを飛ばす\n                }\n                break;\n            }\n            if (!ok) {\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\n            }\n        }\n        return result;\n    }\n    // トークン配列をtype文字列に変換\n    static tokensToTypeStr(tokens, sep) {\n        const a = tokens.map((v) => {\n            return v.type;\n        });\n        return a.join(sep);\n    }\n    /**\n     * ファイル名からモジュール名へ変換\n     * @param {string} filename\n     * @returns {string}\n     */\n    static filenameToModName(filename) {\n        if (!filename) {\n            return 'main';\n        }\n        // パスがあればパスを削除\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\n        if (filename.indexOf('/') >= 0) {\n            const a = filename.split('/');\n            filename = a[a.length - 1];\n        }\n        filename = filename.replace(/\\.nako3?$/, '');\n        return filename;\n    }\n}\n","/**\n * nadesiko v3 parser\n */\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\nimport { NakoParserBase } from './nako_parser_base.mjs';\nimport { NakoSyntaxError } from './nako_errors.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * 構文解析を行うクラス\n */\nexport class NakoParser extends NakoParserBase {\n    /**\n     * 構文解析を実行する\n     */\n    parse(tokens, filename) {\n        this.reset();\n        this.tokens = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        this.modList.push(this.modName);\n        // 解析開始\n        return this.startParser();\n    }\n    /** パーサーの一番最初に呼び出す構文規則 */\n    startParser() {\n        const b = this.ySentenceList();\n        const c = this.get();\n        if (c && c.type !== 'eof') {\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\n        }\n        return b;\n    }\n    /** 複数文を返す */\n    ySentenceList() {\n        const blocks = [];\n        let line = -1;\n        const map = this.peekSourceMap();\n        while (!this.isEOF()) {\n            const n = this.ySentence();\n            if (!n) {\n                break;\n            }\n            blocks.push(n);\n            if (line < 0) {\n                line = n.line;\n            }\n        }\n        if (blocks.length === 0) {\n            const token = this.peek() || this.tokens[0];\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\n    }\n    /** 余剰スタックのレポートを作る */\n    makeStackBalanceReport() {\n        const words = [];\n        this.stack.forEach((t) => {\n            let w = this.nodeToStr(t, { depth: 1 }, false);\n            if (t.josi) {\n                w += t.josi;\n            }\n            words.push(w);\n        });\n        const desc = words.join(',');\n        // 最近使った関数の使い方レポートを作る #1093\n        let descFunc = '';\n        const chA = 'A'.charCodeAt(0);\n        for (const f of this.recentlyCalledFunc) {\n            descFunc += ' - ';\n            let no = 0;\n            const josiA = f.josi;\n            if (josiA) {\n                for (const arg of josiA) {\n                    const ch = String.fromCharCode(chA + no);\n                    descFunc += ch;\n                    if (arg.length === 1) {\n                        descFunc += arg[0];\n                    }\n                    else {\n                        descFunc += `(${arg.join('|')})`;\n                    }\n                    no++;\n                }\n            }\n            descFunc += f.name + '\\n';\n        }\n        this.recentlyCalledFunc = [];\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\n    }\n    yEOL() {\n        // 行末のチェック #1009\n        const eol = this.get();\n        if (!eol) {\n            return null;\n        }\n        // 余剰スタックの確認\n        if (this.stack.length > 0) {\n            const report = this.makeStackBalanceReport();\n            throw NakoSyntaxError.fromNode(report, eol);\n        }\n        this.recentlyCalledFunc = [];\n        return eol; // Token to Ast\n    }\n    /** @returns {Ast | null} */\n    ySentence() {\n        const map = this.peekSourceMap();\n        // 最初の語句が決まっている構文\n        if (this.check('eol')) {\n            return this.yEOL();\n        }\n        if (this.check('もし')) {\n            return this.yIF();\n        }\n        if (this.check('後判定')) {\n            return this.yAtohantei();\n        }\n        if (this.check('エラー監視')) {\n            return this.yTryExcept();\n        }\n        if (this.check('逐次実行')) {\n            return this.yTikuji();\n        }\n        if (this.accept(['抜ける'])) {\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['続ける'])) {\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['require', 'string', '取込'])) {\n            return this.yRequire();\n        }\n        if (this.accept(['not', '非同期モード'])) {\n            return this.yASyncMode();\n        }\n        if (this.accept(['DNCLモード'])) {\n            return this.yDNCLMode(1);\n        }\n        if (this.accept(['DNCL2モード'])) {\n            return this.yDNCLMode(2);\n        }\n        if (this.accept(['not', 'string', 'モード設定'])) {\n            return this.ySetGenMode(this.y[1].value);\n        }\n        if (this.accept(['not', 'モジュール公開既定値', 'eq', 'string'])) {\n            return this.yExportDefault(this.y[3].value);\n        }\n        // 関数呼び出し演算子\n        if (this.check2(['func', '←'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数代入演算子『←』は廃止されました。『${word.value}←』の部分。`, word);\n        }\n        if (this.check2(['func', 'eq'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\n        }\n        // 先読みして初めて確定する構文\n        if (this.accept([this.ySpeedMode])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yPerformanceMonitor])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yLet])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefTest])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefFunc])) {\n            return this.y[0];\n        }\n        // 関数呼び出しの他、各種構文の実装\n        if (this.accept([this.yCall])) {\n            const c1 = this.y[0];\n            if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\n                    const report = this.makeStackBalanceReport();\n                    throw NakoSyntaxError.fromNode(report, c1);\n                }\n                const c2 = this.ySentence();\n                if (c2 !== null) {\n                    return {\n                        type: 'block',\n                        block: [c1, c2],\n                        josi: c2.josi,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n            }\n            return c1;\n        }\n        return null;\n    }\n    /** @returns {Ast} */\n    yASyncMode() {\n        const map = this.peekSourceMap();\n        this.genMode = '非同期モード';\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** set DNCL mode */\n    yDNCLMode(ver) {\n        const map = this.peekSourceMap();\n        if (ver === 1) {\n            // 配列インデックスは1から\n            this.arrayIndexFrom = 1;\n            // 配列アクセスをJSと逆順で指定する\n            this.flagReverseArrayIndex = true;\n        }\n        else {\n            // ver2はPythonに近いとのこと\n        }\n        // 配列代入時自動で初期化チェックする\n        this.flagCheckArrayInit = true;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    ySetGenMode(mode) {\n        const map = this.peekSourceMap();\n        this.genMode = mode;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yExportDefault(mode) {\n        const map = this.peekSourceMap();\n        this.isExportDefault = mode === '公開' ? true : false;\n        this.moduleExport[this.modName] = this.isExportDefault;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yRequire() {\n        const nameToken = this.y[1];\n        const filename = nameToken.value;\n        const modName = NakoLexer.filenameToModName(filename);\n        if (this.modList.indexOf(modName) < 0) {\n            // 優先度が最も高いのは modList[0]\n            // [memo] モジュールの検索優先度は、下に書くほど高くなる\n            const modSelf = this.modList.shift();\n            if (modSelf) {\n                this.modList.unshift(modName);\n                this.modList.unshift(modSelf);\n            }\n        }\n        return {\n            type: 'require',\n            value: filename,\n            josi: '',\n            ...this.peekSourceMap(),\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast} */\n    yBlock() {\n        const map = this.peekSourceMap();\n        const blocks = [];\n        if (this.check('ここから')) {\n            this.get();\n        }\n        while (!this.isEOF()) {\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\n                break;\n            }\n            if (!this.accept([this.ySentence])) {\n                break;\n            }\n            blocks.push(this.y[0]);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\n    }\n    yDefFuncReadArgs() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const a = [];\n        this.get(); // skip '('\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                this.get(); // skip ''\n                break;\n            }\n            const t = this.get();\n            if (t) {\n                a.push(t);\n            } // Token to Ast\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    yDefTest() {\n        return this.yDef('def_test');\n    }\n    yDefFunc() {\n        return this.yDef('def_func');\n    }\n    /** ユーザー関数の定義 */\n    yDef(type) {\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\n            return null;\n        }\n        const map = this.peekSourceMap();\n        const def = this.get(); // ●\n        if (!def) {\n            return null;\n        }\n        let isExport = this.isExportDefault;\n        if (this.check('{')) {\n            this.get();\n            const funcAttribute = this.get();\n            if (this.check('}')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('関数の属性の指定が正しくありません。『{』と『}』で囲む必要があります。', def);\n            }\n            if (funcAttribute != null) {\n                if (funcAttribute.value === '公開') {\n                    isExport = true;\n                }\n                if (funcAttribute.value === '非公開') {\n                    isExport = false;\n                }\n                if (funcAttribute.value === 'エクスポート') {\n                    isExport = true;\n                }\n            }\n        }\n        let defArgs = [];\n        if (this.check('(')) {\n            defArgs = this.yDefFuncReadArgs() || [];\n        } // // lexerでも解析しているが再度詳しく\n        const funcName = this.get();\n        if (!funcName || funcName.type !== 'func') {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\n        }\n        if (this.check('(')) {\n            // 関数引数の二重定義\n            if (defArgs.length > 0) {\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n            }\n            defArgs = this.yDefFuncReadArgs() || [];\n        }\n        if (this.check('とは')) {\n            this.get();\n        }\n        let block = null;\n        let multiline = false;\n        let asyncFn = false;\n        if (this.check('ここから')) {\n            multiline = true;\n        }\n        if (this.check('eol')) {\n            multiline = true;\n        }\n        try {\n            this.funcLevel++;\n            this.usedAsyncFn = false;\n            // ローカル変数を生成\n            const backupLocalvars = this.localvars;\n            this.localvars = { 'それ': { type: 'var', value: '' } };\n            if (multiline) {\n                this.saveStack();\n                // 関数の引数をローカル変数として登録する\n                for (const arg of defArgs) {\n                    const fnName = (arg.value) ? arg.value + '' : '';\n                    this.localvars[fnName] = { 'type': 'var', 'value': '' };\n                }\n                block = this.yBlock();\n                if (this.check('ここまで')) {\n                    this.get();\n                }\n                else {\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\n                }\n                this.loadStack();\n            }\n            else {\n                this.saveStack();\n                block = this.ySentence();\n                this.loadStack();\n            }\n            this.funcLevel--;\n            asyncFn = this.usedAsyncFn;\n            this.localvars = backupLocalvars;\n        }\n        catch (err) {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n        }\n        return {\n            type,\n            name: funcName,\n            args: defArgs,\n            block: block || [],\n            asyncFn,\n            isExport,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yIFCond() {\n        const map = this.peekSourceMap();\n        let a = this.yGetArg();\n        if (!a) {\n            return null;\n        }\n        // console.log('@@yIFCond=', a)\n        // チェック : Aならば\n        if (a.josi === 'ならば') {\n            return a;\n        }\n        if (a.josi === 'でなければ') {\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\n            return a;\n        }\n        // チェック : AがBならば --- 「関数B(A)」のとき\n        if ((a.josi !== '') && (this.check('func'))) {\n            // もし文で関数呼び出しがある場合\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        else \n        // チェック : AがBならば --- 「A = B」のとき\n        if (a.josi === 'が') {\n            const tmpI = this.index;\n            const b = this.yGetArg();\n            if (!b) {\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\n            }\n            if (this.check('ならば')) {\n                const naraba = this.get() || { 'value': 'ならば' };\n                b.josi = naraba.value;\n            }\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\n                return {\n                    type: 'op',\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\n                    left: a,\n                    right: b,\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            this.index = tmpI;\n        }\n        // もし文で追加の関数呼び出しがある場合\n        if (!this.check('ならば')) {\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        // (ならば|でなければ)を確認\n        if (!this.check('ならば')) {\n            const smap = a || { type: '?', ...map };\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n        }\n        const naraba = this.get();\n        // 否定形のチェック\n        if (naraba && naraba.value === 'でなければ') {\n            a = {\n                type: 'not',\n                value: a,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yIF() {\n        const map = this.peekSourceMap();\n        if (!this.check('もし')) {\n            return null;\n        }\n        const mosi = this.get(); // skip もし\n        if (mosi == null) {\n            return null;\n        }\n        while (this.check('comma')) {\n            this.get();\n        } // skip commafffff\n        let cond = null;\n        try {\n            cond = this.yIFCond();\n        }\n        catch (err) {\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\n        }\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\n        }\n        let trueBlock = null;\n        let falseBlock = null;\n        let tanbun = false;\n        // True Block\n        if (this.check('eol')) {\n            trueBlock = this.yBlock();\n        }\n        else {\n            trueBlock = this.ySentence();\n            tanbun = true;\n        }\n        // skip EOL\n        while (this.check('eol')) {\n            this.get();\n        }\n        // Flase Block\n        if (this.check('違えば')) {\n            this.get(); // skip 違えば\n            while (this.check('comma')) {\n                this.get();\n            }\n            if (this.check('eol')) {\n                falseBlock = this.yBlock();\n            }\n            else {\n                falseBlock = this.ySentence();\n                tanbun = true;\n            }\n        }\n        if (tanbun === false) {\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', mosi);\n            }\n        }\n        return {\n            type: 'if',\n            expr: cond || [],\n            block: trueBlock || [],\n            false_block: falseBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    ySpeedMode() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', '実行速度優先'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        this.get();\n        let val = '';\n        if (optionNode && optionNode.value) {\n            val = optionNode.value;\n        }\n        else {\n            return null;\n        }\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\n        for (const name of val.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'speed_mode',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    yPerformanceMonitor() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        if (!optionNode) {\n            return null;\n        }\n        this.get();\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\n        for (const name of optionNode.value.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'performance_monitor',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    /** (非推奨) 「逐次実行」構文 @returns {Ast | null} */\n    yTikuji() {\n        const map = this.peekSourceMap();\n        if (!this.check('逐次実行')) {\n            return null;\n        }\n        const tikuji = this.getCur(); // skip 逐次実行\n        this.logger.warn('『逐次実行』構文の使用は非推奨になりました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\n        const blocks = [];\n        let errorBlock = null;\n        if (!tikuji || !this.check('eol')) {\n            throw NakoSyntaxError.fromNode('『逐次実行』の直後は改行が必要です。', tikuji);\n        }\n        // ブロックを読む\n        for (;;) {\n            if (this.check('ここまで')) {\n                break;\n            }\n            if (this.check('eol')) {\n                this.get(); // skip EOL\n                continue;\n            }\n            if (this.check2(['エラー', 'ならば'])) {\n                this.get(); // skip エラー\n                this.get(); // skip ならば\n                errorBlock = this.yBlock();\n                break;\n            }\n            let block = null;\n            // 「先に」「次に」句はブロック宣言 #717 (ただしブロック以外も可能)\n            if (this.check('先に') || this.check('次に')) {\n                const tugini = this.get(); // skip 先に | 次に\n                if (this.check('comma')) {\n                    this.get();\n                }\n                if (this.check('eol')) { // block\n                    block = this.yBlock();\n                    if (!this.check('ここまで')) {\n                        let tuginiType = '次に';\n                        if (tugini != null) {\n                            tuginiType = tugini.type;\n                        }\n                        throw NakoSyntaxError.fromNode(`『${tuginiType}』...『ここまで』を対応させてください。`, map);\n                    }\n                    this.get(); // skip 'ここまで'\n                }\n                else { // line\n                    block = this.ySentence();\n                }\n            }\n            else {\n                block = this.ySentence();\n            }\n            // add block\n            if (block != null) {\n                blocks.push(block);\n            }\n        }\n        if (!this.check('ここまで')) {\n            console.log(blocks, this.peek());\n            throw NakoSyntaxError.fromNode('『逐次実行』...『ここまで』を対応させてください。', tikuji);\n        }\n        this.get(); // skip 'ここまで'\n        return {\n            type: 'tikuji',\n            blocks: blocks || [],\n            errorBlock: errorBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /**\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\n     * @param {Ast} firstValue\n     */\n    yGetArgOperator(firstValue) {\n        const args = [firstValue];\n        while (!this.isEOF()) {\n            // 演算子がある？\n            let op = this.peek();\n            if (op && opPriority[op.type]) {\n                op = this.getCur();\n                args.push(op); // Token to Ast\n                // 演算子後の値を取得\n                const v = this.yValue();\n                if (v === null) {\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\n                }\n                args.push(v);\n                continue;\n            }\n            break;\n        }\n        if (args.length === 0) {\n            return null;\n        }\n        if (args.length === 1) {\n            return args[0];\n        }\n        return this.infixToAST(args);\n    }\n    yGetArg() {\n        // 値を一つ読む\n        const value1 = this.yValue();\n        if (value1 === null) {\n            return null;\n        }\n        // 計算式がある場合を考慮\n        return this.yGetArgOperator(value1);\n    }\n    infixToPolish(list) {\n        // 中間記法から逆ポーランドに変換\n        const priority = (t) => {\n            if (opPriority[t.type]) {\n                return opPriority[t.type];\n            }\n            return 10;\n        };\n        const stack = [];\n        const polish = [];\n        while (list.length > 0) {\n            const t = list.shift();\n            if (!t) {\n                break;\n            }\n            while (stack.length > 0) { // 優先順位を見て移動する\n                const sTop = stack[stack.length - 1];\n                if (priority(t) > priority(sTop)) {\n                    break;\n                }\n                const tpop = stack.pop();\n                if (!tpop) {\n                    this.logger.error('計算式に間違いがあります。', t);\n                    break;\n                }\n                polish.push(tpop);\n            }\n            stack.push(t);\n        }\n        // 残った要素を積み替える\n        while (stack.length > 0) {\n            const t = stack.pop();\n            if (t) {\n                polish.push(t);\n            }\n        }\n        return polish;\n    }\n    /** @returns {Ast | null} */\n    infixToAST(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        // 逆ポーランドを構文木に\n        const josi = list[list.length - 1].josi;\n        const node = list[list.length - 1];\n        const polish = this.infixToPolish(list);\n        /** @type {Ast[]} */\n        const stack = [];\n        for (const t of polish) {\n            if (!opPriority[t.type]) { // 演算子ではない\n                stack.push(t);\n                continue;\n            }\n            const b = stack.pop();\n            const a = stack.pop();\n            if (a === undefined || b === undefined) {\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\n            }\n            /** @type {Ast} */\n            const op = {\n                type: 'op',\n                operator: t.type,\n                left: a,\n                right: b,\n                josi,\n                startOffset: a.startOffset,\n                endOffset: a.endOffset,\n                line: a.line,\n                column: a.column,\n                file: a.file\n            };\n            stack.push(op);\n        }\n        const ans = stack.pop();\n        if (!ans) {\n            return null;\n        }\n        return ans;\n    }\n    yGetArgParen(y) {\n        let isClose = false;\n        const si = this.stack.length;\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                isClose = true;\n                break;\n            }\n            const v = this.yGetArg();\n            if (v) {\n                this.pushStack(v);\n                if (this.check('comma')) {\n                    this.get();\n                }\n                continue;\n            }\n            break;\n        }\n        if (!isClose) {\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\n        }\n        const a = [];\n        while (si < this.stack.length) {\n            const v = this.popStack();\n            if (v) {\n                a.unshift(v);\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yRepeatTime() {\n        const map = this.peekSourceMap();\n        if (!this.check('回')) {\n            return null;\n        }\n        this.get(); // skip '回'\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 'N回、繰り返す' (#924)\n        let num = this.popStack([]);\n        let multiline = false;\n        let block = null;\n        if (num === null) {\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) { // multiline\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            // singleline\n            block = this.ySentence();\n        }\n        return {\n            type: 'repeat_times',\n            value: num,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yWhile() {\n        const map = this.peekSourceMap();\n        if (!this.check('間')) {\n            return null;\n        }\n        this.get(); // skip '間'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        if (this.check('繰返')) {\n            this.get();\n        } // skip '繰り返す' #927\n        const cond = this.popStack();\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (!this.checkTypes(['ここから', 'eol'])) {\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        return {\n            type: 'while',\n            cond,\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yAtohantei() {\n        const map = this.peekSourceMap();\n        if (this.check('後判定')) {\n            this.get();\n        } // skip 後判定\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 繰り返す\n        if (this.check('ここから')) {\n            this.get();\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        let cond = this.yGetArg(); // 条件\n        let bUntil = false;\n        const t = this.peek();\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\n            this.get(); // skip なるまで\n            bUntil = true;\n        }\n        if (this.check('間')) {\n            this.get();\n        } // skip 間\n        if (bUntil) { // 条件を反転する\n            cond = {\n                type: 'not',\n                value: cond,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return {\n            type: 'atohantei',\n            cond: cond || [],\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yFor() {\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\n        const map = this.peekSourceMap();\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n            // pass\n        }\n        else {\n            return null;\n        }\n        const kurikaesu = this.getCur(); // skip 繰り返す\n        // スタックに(増や|減ら)してがある？\n        const incdec = this.stack.pop();\n        if (incdec) {\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\n                if (incdec.value === '増') {\n                    flagDown = false;\n                }\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\n            }\n            else {\n                // 普通の繰り返しの場合\n                this.stack.push(incdec); // 違ったので改めて追加\n            }\n        }\n        let vInc = null;\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\n            vInc = this.popStack(['ずつ']);\n            if (kurikaesu.type === '増繰返') {\n                flagDown = false;\n            }\n        }\n        const vTo = this.popStack(['まで']);\n        const vFrom = this.popStack(['から']);\n        const word = this.popStack(['を', 'で']);\n        if (vFrom === null || vTo === null) {\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\n        }\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n            this.get();\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'for',\n            from: vFrom,\n            to: vTo,\n            inc: vInc,\n            flagDown,\n            word,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yReturn() {\n        const map = this.peekSourceMap();\n        if (!this.check('戻る')) {\n            return null;\n        }\n        this.get(); // skip '戻る'\n        const v = this.popStack(['で', 'を']);\n        if (this.stack.length > 0) {\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\n        }\n        return {\n            type: 'return',\n            value: v,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yForEach() {\n        const map = this.peekSourceMap();\n        if (!this.check('反復')) {\n            return null;\n        }\n        this.get(); // skip '反復'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        const target = this.popStack(['を']);\n        const name = this.popStack(['で']);\n        let block = null;\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'foreach',\n            name,\n            target,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 条件分岐構文 */\n    ySwitch() {\n        const map = this.peekSourceMap();\n        if (!this.check('条件分岐')) {\n            return null;\n        }\n        const joukenbunki = this.get(); // skip '条件分岐'\n        if (!joukenbunki) {\n            return null;\n        }\n        const eol = this.get(); // skip 'eol'\n        if (!eol) {\n            return null;\n        }\n        const value = this.popStack(['で']);\n        if (!value) {\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\n        }\n        if (eol.type !== 'eol') {\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\n        }\n        let isDefaultClause = false; // 「違えば」内かどうか\n        let skippedKokomade = false;\n        const cases = [];\n        while (!this.isEOF()) {\n            if (this.check('ここまで')) {\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                this.get(); // skip ここまで\n                break;\n            }\n            if (this.check('eol')) {\n                this.get();\n                continue;\n            }\n            if (isDefaultClause) {\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\n            }\n            // 違えば？\n            let cond = null;\n            const condToken = this.peek();\n            if (condToken && condToken.type === '違えば') {\n                // 違えば\n                skippedKokomade = false;\n                isDefaultClause = true;\n                cond = this.get(); // skip 違えば // Token to Ast\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            else {\n                // ＊＊＊ならば\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 「＊＊ならば」を得る\n                cond = this.yValue();\n                if (!cond) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                const naraba = this.get(); // skip ならば\n                if (!naraba || naraba.type !== 'ならば') {\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\n                }\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            // 条件にあったときに実行すること\n            const condBlock = this.yBlock();\n            const kokomade = this.peek();\n            if (kokomade && kokomade.type === 'ここまで') {\n                this.get(); // skip ここまで\n            }\n            else {\n                if (isDefaultClause) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\n                skippedKokomade = true;\n            }\n            cases.push([cond, condBlock]);\n        }\n        return {\n            type: 'switch',\n            value,\n            cases: cases || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 無名関数 */\n    yMumeiFunc() {\n        const map = this.peekSourceMap();\n        if (!this.check('def_func')) {\n            return null;\n        }\n        const def = this.get();\n        if (!def) {\n            return null;\n        }\n        let args = [];\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // 関数の引数定義は省略できる\n        if (this.check('(')) {\n            args = this.yDefFuncReadArgs() || [];\n        }\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // ブロックを読む\n        this.funcLevel++;\n        this.saveStack();\n        const block = this.yBlock();\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\n        if (!this.check('ここまで')) {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\n        }\n        this.get(); // skip ここまで\n        this.loadStack();\n        this.funcLevel--;\n        return {\n            type: 'func_obj',\n            args,\n            block,\n            meta: def.meta,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 代入構文 */\n    yDainyu() {\n        const map = this.peekSourceMap();\n        const dainyu = this.get(); // 代入\n        if (dainyu === null) {\n            return null;\n        }\n        const value = this.popStack(['を']);\n        const word = this.popStack(['へ', 'に']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\n        }\n        // 配列への代入\n        if (word.type === '配列参照') {\n            return {\n                type: 'let_array',\n                name: word.name,\n                index: word.index,\n                value,\n                josi: '',\n                checkInit: this.flagCheckArrayInit,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 一般的な変数への代入\n        const word2 = this.getVarName(word);\n        return {\n            type: 'let',\n            name: word2,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 定める構文 */\n    ySadameru() {\n        const map = this.peekSourceMap();\n        const sadameru = this.get(); // 定める\n        if (sadameru === null) {\n            return null;\n        }\n        const word = this.popStack(['を']);\n        const value = this.popStack(['へ', 'に', 'と']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\n        }\n        let isExport = this.isExportDefault;\n        if (this.check2(['{', 'word', '}'])) {\n            this.get();\n            const attrNode = this.get();\n            if (attrNode === null) {\n                throw NakoSyntaxError.fromNode('定める『' + word.value + '』の定義エラー', word);\n            }\n            const attr = attrNode.value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n            }\n            this.get();\n        }\n        // 変数を生成する\n        const nameToken = this.createVar(word, true, isExport);\n        return {\n            type: 'def_local_var',\n            name: nameToken,\n            vartype: '定数',\n            isExport,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yIncDec() {\n        const map = this.peekSourceMap();\n        const action = this.get(); // (増やす|減らす)\n        if (action === null) {\n            return null;\n        }\n        // 『Nずつ増やして繰り返す』文か？\n        if (this.check('繰返')) {\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\n            return this.yFor();\n        }\n        // スタックから引数をポップ\n        let value = this.popStack(['だけ', '']);\n        if (!value) {\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\n        }\n        const word = this.popStack(['を']);\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\n        }\n        // 減らすなら-1かける\n        if (action.value === '減') {\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\n        }\n        return {\n            type: 'inc',\n            name: word,\n            value,\n            josi: action.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yCall() {\n        if (this.isEOF()) {\n            return null;\n        }\n        // スタックに積んでいく\n        while (!this.isEOF()) {\n            if (this.check('ここから')) {\n                this.get();\n            }\n            // 代入\n            if (this.check('代入')) {\n                return this.yDainyu();\n            }\n            if (this.check('定める')) {\n                return this.ySadameru();\n            }\n            // 制御構文\n            if (this.check('回')) {\n                return this.yRepeatTime();\n            }\n            if (this.check('間')) {\n                return this.yWhile();\n            }\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n                return this.yFor();\n            }\n            if (this.check('反復')) {\n                return this.yForEach();\n            }\n            if (this.check('条件分岐')) {\n                return this.ySwitch();\n            }\n            if (this.check('戻る')) {\n                return this.yReturn();\n            }\n            if (this.check('増') || this.check('減')) {\n                return this.yIncDec();\n            }\n            // C言語風関数\n            if (this.check2([['func', 'word'], '('])) { // C言語風\n                const cur = this.peek();\n                if (cur && cur.josi === '') {\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\n                    if (t) {\n                        const josi = t.josi || '';\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\n                            t.josi = '';\n                            return t; // 関数なら値とする\n                        }\n                        this.pushStack(t);\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    }\n                    continue;\n                }\n            }\n            // なでしこ式関数\n            if (this.check('func')) {\n                const r = this.yCallFunc();\n                if (r === null) {\n                    continue;\n                }\n                // 「〜する間」の形ならスタックに積む。\n                if (this.check('間')) {\n                    this.pushStack(r);\n                    continue;\n                }\n                // 関数呼び出しの直後に、四則演算があるか?\n                if (!this.checkTypes(operatorList)) {\n                    return r; // 関数呼び出しの後に演算子がないのでそのまま関数呼び出しを戻す\n                }\n                // 四則演算があった場合、計算してスタックに載せる\n                const s = this.yGetArgOperator(r);\n                this.pushStack(s);\n                continue;\n            }\n            // 値のとき → スタックに載せる\n            const t = this.yGetArg();\n            if (t) {\n                this.pushStack(t);\n                continue;\n            }\n            break;\n        } // end of while\n        // 助詞が余ってしまった場合\n        if (this.stack.length > 0) {\n            if (this.isReadingCalc) {\n                return this.popStack();\n            }\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\n            // 各ノードについて、更に詳細な情報があるなら表示\n            for (const n of this.stack) {\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\n                if (d0 !== d1) {\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\n                    msg += `${d0}は${d1}として使われています。`;\n                }\n            }\n            const first = this.stack[0];\n            const last = this.stack[this.stack.length - 1];\n            this.logger.debug(msgDebug, first);\n            throw NakoSyntaxError.fromNode(msg, first, last);\n        }\n        return this.popStack([]);\n    }\n    /** @returns {Ast | null} */\n    yCallFunc() {\n        const map = this.peekSourceMap();\n        const t = this.get();\n        if (!t) {\n            return null;\n        }\n        const f = t.meta;\n        const funcName = t.value;\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\n        let funcObj = null;\n        if (t.josi === 'には') {\n            try {\n                funcObj = this.yMumeiFunc();\n            }\n            catch (err) {\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\n            }\n            if (funcObj === null) {\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\n            }\n        }\n        if (!f || typeof f.josi === 'undefined') {\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\n        }\n        // 最近使った関数を記録\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\n        if (f && f.asyncFn) {\n            this.usedAsyncFn = true;\n        }\n        // 関数の引数を取り出す処理\n        const args = [];\n        let nullCount = 0;\n        let valueCount = 0;\n        for (let i = f.josi.length - 1; i >= 0; i--) {\n            while (true) {\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\n                let popArg = this.popStack(f.josi[i]);\n                if (popArg !== null) {\n                    valueCount++;\n                }\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    nullCount++;\n                    popArg = funcObj;\n                }\n                else {\n                    break;\n                }\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\n                        popArg.type = 'func_pointer';\n                    }\n                    else {\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\n                    }\n                }\n                args.unshift(popArg);\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    break;\n                }\n            }\n        }\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\n        }\n        this.usedFuncs.add(t.value);\n        // 関数呼び出しのAstを構築\n        const funcNode = {\n            type: 'func',\n            name: t.value,\n            args,\n            josi: t.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\n        if (funcNode.name === 'プラグイン名設定') {\n            if (args.length > 0 && args[0]) {\n                let fname = '' + args[0].value;\n                if (fname === 'メイン') {\n                    fname = '' + args[0].file;\n                }\n                this.namespaceStack.push(this.modName);\n                this.isExportStack.push(this.isExportDefault);\n                this.modName = NakoLexer.filenameToModName(fname);\n                this.modList.push(this.modName);\n            }\n        }\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\n            const space = this.namespaceStack.pop();\n            if (space) {\n                this.modName = space;\n            }\n            const isexport = this.isExportStack.pop();\n            if (isexport != null) {\n                this.isExportDefault = isexport;\n            }\n        }\n        // 言い切りならそこで一度切る\n        if (t.josi === '') {\n            return funcNode;\n        }\n        // 「**して、**」の場合も一度切る\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\n            funcNode.josi = 'して';\n            return funcNode;\n        }\n        // 続き\n        funcNode.meta = f;\n        this.pushStack(funcNode);\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLet() {\n        const map = this.peekSourceMap();\n        // 通常の変数\n        if (this.check2(['word', 'eq'])) {\n            const word = this.peek();\n            let threw = false;\n            try {\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\n                    if (this.y[2].type === 'eol') {\n                        throw new Error('値が空です。');\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    } // skip comma (ex) name1=val1, name2=val2\n                    const nameToken = this.getVarName(this.y[0]);\n                    const valueToken = this.y[2];\n                    return {\n                        type: 'let',\n                        name: nameToken,\n                        value: valueToken,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n                else {\n                    threw = true;\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\n                }\n            }\n            catch (err) {\n                if (threw) {\n                    throw err;\n                }\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\n            }\n        }\n        // let_array ?\n        if (this.check2(['word', '@'])) {\n            const la = this.yLetArrayAt(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (la) {\n                la.checkInit = this.flagCheckArrayInit;\n                return la;\n            }\n        }\n        if (this.check2(['word', '['])) {\n            const lb = this.yLetArrayBracket(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (lb) {\n                lb.checkInit = this.flagCheckArrayInit;\n                return lb;\n            }\n        }\n        // ローカル変数定義\n        if (this.accept(['word', 'とは'])) {\n            const wordToken = this.y[0];\n            if (!this.checkTypes(['変数', '定数'])) {\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n            }\n            const vtype = this.getCur(); // 変数 or 定数\n            let isExport = this.isExportDefault;\n            if (this.check2(['{', 'word', '}'])) {\n                this.get();\n                const attrNode = this.get();\n                if (attrNode === null) {\n                    throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n                }\n                const attr = attrNode.value;\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n                }\n                this.get();\n            }\n            const word = this.createVar(wordToken, vtype.type === '定数', isExport);\n            // 初期値がある？\n            let value = null;\n            if (this.check('eq')) {\n                this.get();\n                value = this.yCalc();\n            }\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: vtype.type,\n                isExport,\n                value,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // ローカル変数定義（その２）\n        if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], false, this.isExportDefault);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['変数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n            let isExport = this.isExportDefault;\n            const attr = this.y[3].value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n            }\n            const word = this.createVar(this.y[1], false, isExport);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '変数',\n                isExport,\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], true, this.isExportDefault);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n            let isExport = this.isExportDefault;\n            const attr = this.y[3].value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な定数属性『${attr}』が指定されています。`);\n            }\n            const word = this.createVar(this.y[1], true, isExport);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                isExport,\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数定数への代入 #563\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, true, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, false, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.check2(['word', 'comma', 'word'])) {\n            // 2 word\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[4],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 3 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 4 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[8],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 5 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[10],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 配列のインデックスが1から始まる場合を考慮するか\n     * @param {Ast} node\n     * @returns\n     */\n    checkArrayIndex(node) {\n        // 配列が0から始まるのであればそのまま返す\n        if (this.arrayIndexFrom === 0) {\n            return node;\n        }\n        // 配列が1から始まるのであれば演算を加えて返す\n        return {\n            ...node,\n            'type': 'op',\n            'operator': '-',\n            'left': node,\n            'right': {\n                ...node,\n                'type': 'number',\n                'value': this.arrayIndexFrom\n            }\n        };\n    }\n    /**\n     * 配列のインデックスを逆順にするのを考慮するか\n     * @param {Ast[]| null} ary\n     */\n    checkArrayReverse(ary) {\n        if (!ary) {\n            return [];\n        }\n        if (!this.flagReverseArrayIndex) {\n            return ary;\n        }\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\n        if (ary.length <= 1) {\n            return ary;\n        }\n        return ary.reverse();\n    }\n    /** @returns {Ast | null} */\n    yLetArrayAt(map) {\n        // 一次元配列\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[4],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLetArrayBracket(map) {\n        // 一次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[5],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\n                value: this.y[8],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[7],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\n                value: this.y[11],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[9],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yCalc() {\n        const map = this.peekSourceMap();\n        if (this.check('eol')) {\n            return null;\n        }\n        // 値を一つ読む\n        const t = this.yGetArg();\n        if (!t) {\n            return null;\n        }\n        // 助詞がある？ つまり、関数呼び出しがある？\n        if (t.josi === '') {\n            return t;\n        } // 値だけの場合\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\n        const tmpReadingCalc = this.isReadingCalc;\n        this.isReadingCalc = true;\n        this.pushStack(t);\n        const t1 = this.yCall();\n        this.isReadingCalc = tmpReadingCalc;\n        if (!t1) {\n            // 関数がなければ、先ほど積んだ値をスタックから取り出して返す\n            return this.popStack();\n        }\n        // 計算式をfCalcとする\n        let fCalc = t1;\n        // それが連文か助詞を読んで確認\n        if (RenbunJosi.indexOf(t1.josi || '') >= 0) {\n            // 連文なら右側を読んで左側とくっつける\n            const t2 = this.yCalc();\n            if (t2) {\n                fCalc = {\n                    type: 'renbun',\n                    left: t1,\n                    right: t2,\n                    josi: t2.josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        // 演算子があれば続ける\n        const op = this.peek();\n        if (!op) {\n            return fCalc;\n        }\n        if (opPriority[op.type]) {\n            return this.yGetArgOperator(fCalc);\n        }\n        return fCalc;\n    }\n    /** @returns {Ast | null} */\n    yValueKakko() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const t = this.get(); // skip '('\n        if (!t) {\n            throw new Error('[System Error] check したのに get できない');\n        }\n        this.saveStack();\n        const v = this.yCalc() || this.ySentence();\n        if (v === null) {\n            const v2 = this.get();\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\n        }\n        if (!this.check(')')) {\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\n        }\n        const closeParent = this.get(); // skip ')'\n        this.loadStack();\n        if (closeParent) {\n            v.josi = closeParent.josi;\n        }\n        return v;\n    }\n    /** @returns {Ast | null} */\n    yValue() {\n        const map = this.peekSourceMap();\n        // カンマなら飛ばす #877\n        if (this.check('comma')) {\n            this.get();\n        }\n        // プリミティブな値\n        if (this.checkTypes(['number', 'bigint', 'string'])) {\n            return this.getCur();\n        } // Token To Ast\n        // 丸括弧\n        if (this.check('(')) {\n            return this.yValueKakko();\n        }\n        // マイナス記号\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\n            const m = this.get(); // skip '-'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            const line = (m && m.line) ? m.line : 0;\n            return {\n                type: 'op',\n                operator: '*',\n                left: { type: 'number', value: -1, line },\n                right: v || [],\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // NOT\n        if (this.check('not')) {\n            this.get(); // skip '!'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            return {\n                type: 'not',\n                value: v,\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // JSON object\n        const a = this.yJSONArray();\n        if (a) {\n            return a;\n        }\n        const o = this.yJSONObject();\n        if (o) {\n            return o;\n        }\n        // 一語関数\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\n        if (this.check2(['func', splitType])) {\n            const tt = this.get();\n            if (!tt) {\n                throw new Error('[System Error] 正しく値が取れませんでした。');\n            }\n            const f = this.getVarNameRef(tt);\n            this.usedFuncs.add(f.value);\n            // 引数の個数をチェック\n            const meta = f.meta;\n            const args = [];\n            if (!meta) {\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\n            }\n            if (meta.josi && meta.josi.length === 1) {\n                args.push({ type: 'word', value: 'それ' });\n            }\n            else if (meta.josi && meta.josi.length >= 2) {\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\n            }\n            return {\n                type: 'func',\n                name: f.value,\n                args,\n                josi: f.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // C風関数呼び出し FUNC(...)\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\n            const f = this.peek();\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\n                const ff = this.getVarNameRef(this.y[0]);\n                const args = this.y[2];\n                const funcName = ff.value;\n                this.usedFuncs.add(funcName);\n                // 引数の個数をチェック\n                const meta = ff.meta;\n                if (meta && meta.josi) {\n                    // 引数の個数が異なる場合\n                    if (meta.josi.length === args.length) {\n                        // ok\n                    }\n                    else if (meta.isVariableJosi) {\n                        // ok\n                    }\n                    else { // 引数の個数が違う\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\n                    }\n                }\n                return {\n                    type: 'func',\n                    name: funcName,\n                    args,\n                    josi: this.y[3].josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\n        }\n        // 関数呼び出し演算子(core #83)で廃止\n        if (this.check2(['func', '←'])) {\n            throw new Error('関数呼び出し演算子は廃止されました。');\n        }\n        // 無名関数(関数オブジェクト)\n        if (this.check('def_func')) {\n            return this.yMumeiFunc();\n        }\n        // 変数\n        const word = this.yValueWord();\n        if (word) {\n            return word;\n        }\n        // その他\n        return null;\n    }\n    yValueWordGetIndex(ast) {\n        if (!ast.index) {\n            ast.index = [];\n        }\n        // word @ a, b, c\n        if (this.check('@')) {\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index.push(this.checkArrayIndex(this.y[5]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[5].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[3].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[1].josi;\n                return true;\n            }\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, ']'])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[2].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[4].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3]),\n                    this.checkArrayIndex(this.y[5])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[6].josi;\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @returns {Ast | null} */\n    yValueWord() {\n        const map = this.peekSourceMap();\n        if (this.check('word')) {\n            const t = this.getCur();\n            const word = this.getVarNameRef(t);\n            // word[n] || word@n\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\n                const ast = {\n                    type: '配列参照',\n                    name: word,\n                    index: [],\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n                while (!this.isEOF()) {\n                    if (!this.yValueWordGetIndex(ast)) {\n                        break;\n                    }\n                }\n                if (ast.index && ast.index.length === 0) {\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\n                }\n                return ast;\n            }\n            return word; // Token to Ast\n        }\n        return null;\n    }\n    /** 変数を生成 */\n    createVar(word, isConst, isExport) {\n        let gname = word.value;\n        const typeName = isConst ? 'const' : 'var';\n        if (this.funcLevel === 0) {\n            // global ?\n            if (gname.indexOf('__') < 0) {\n                gname = this.modName + '__' + gname;\n            }\n            this.funclist[gname] = { type: typeName, value: '', isExport };\n            word.value = gname;\n            return word;\n        }\n        else {\n            // local\n            this.localvars[gname] = { type: typeName, value: '' };\n            return word;\n        }\n    }\n    /** 変数名を検索して解決する\n     * @param {Ast|Token} word\n     * @return {Ast|Token}\n     */\n    getVarName(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (f) {\n            if (f && f.scope === 'global') {\n                word.value = f.name;\n            }\n            return word;\n        }\n        // 変数が見つからない\n        this.createVar(word, false, this.isExportDefault);\n        return word;\n    }\n    /** 変数名を検索して解決する */\n    getVarNameRef(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (!f) { // 変数が見つからない\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\n                word.value = this.modName + '__' + word.value;\n            }\n        }\n        else if (f && f.scope === 'global') {\n            word.value = f.name;\n        }\n        return word;\n    }\n    /** 複数の変数名を検索して解決する */\n    createVarList(words, isConst, isExport) {\n        for (let i = 0; i < words.length; i++) {\n            words[i] = this.createVar(words[i], isConst, isExport);\n        }\n        return words;\n    }\n    yJSONObjectValue() {\n        const a = [];\n        const firstToken = this.peek();\n        if (!firstToken) {\n            return null;\n        }\n        while (!this.isEOF()) {\n            while (this.check('eol')) {\n                this.get();\n            }\n            if (this.check('}')) {\n                break;\n            }\n            if (this.accept(['word', ':', this.yCalc])) {\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.accept(['string', ':', this.yCalc])) {\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.check('word')) {\n                const w = this.getCur();\n                w.type = 'string';\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else if (this.checkTypes(['string', 'number'])) {\n                const w = this.getCur();\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else {\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONObject() {\n        const map = this.peekSourceMap();\n        if (this.accept(['{', '}'])) {\n            return {\n                type: 'json_obj',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\n            return {\n                type: 'json_obj',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['{', this.yJSONObjectValue])) {\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    yJSONArrayValue() {\n        if (this.check('eol')) {\n            this.get();\n        }\n        const v1 = this.yCalc();\n        if (v1 === null) {\n            return null;\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        const a = [v1];\n        while (!this.isEOF()) {\n            if (this.check('eol')) {\n                this.get();\n            }\n            if (this.check(']')) {\n                break;\n            }\n            const v2 = this.yCalc();\n            if (v2 === null) {\n                break;\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n            a.push(v2);\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONArray() {\n        const map = this.peekSourceMap();\n        if (this.accept(['[', ']'])) {\n            return {\n                type: 'json_array',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\n            return {\n                type: 'json_array',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['[', this.yJSONArrayValue])) {\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    /** エラー監視構文 */\n    yTryExcept() {\n        const map = this.peekSourceMap();\n        if (!this.check('エラー監視')) {\n            return null;\n        }\n        const kansi = this.getCur(); // skip エラー監視\n        const block = this.yBlock();\n        if (!this.check2(['エラー', 'ならば'])) {\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\n        }\n        this.get(); // skip エラー\n        this.get(); // skip ならば\n        const errBlock = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'try_except',\n            block,\n            errBlock: errBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n}\n","import { NewEmptyToken } from './nako_types.mjs';\n/**\n * なでしこの構文解析のためのユーティリティクラス\n */\nexport class NakoParserBase {\n    constructor(logger) {\n        this.logger = logger;\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\n        this.tokens = [];\n        this.usedFuncs = new Set();\n        /** @type {import('./nako3.mjs').Ast[]} */\n        this.stack = [];\n        this.index = 0;\n        /** トークン出現チェック(accept関数)に利用する\n         * @type {import('./nako3.mjs').Ast[]}\n         */\n        this.y = [];\n        /** モジュル名 @type {string} */\n        this.modName = 'inline';\n        this.namespaceStack = [];\n        /**\n         * 利用するモジュールの名前一覧\n         * @type {Array<string>}\n         */\n        this.modList = [];\n        /** グローバル変数・関数の確認用 */\n        this.funclist = {};\n        this.funcLevel = 0;\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\n        /**\n         * ローカル変数の確認用\n         * @type {Object.<string,Object>}\n         */\n        this.localvars = { 'それ': { type: 'var', value: '' } };\n        /** コード生成器の名前 @type {string} */\n        this.genMode = 'sync'; // #637\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\n        this.arrayIndexFrom = 0;\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\n        this.flagReverseArrayIndex = false;\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\n        this.flagCheckArrayInit = false;\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\n        this.recentlyCalledFunc = [];\n        // 構文解析に利用する - 現在計算式を読んでいるかどうか\n        this.isReadingCalc = false;\n        // エクスポート設定が未設定の関数・変数に対する既定値\n        this.isExportDefault = true;\n        this.isExportStack = [];\n        this.moduleExport = {};\n        this.init();\n    }\n    init() {\n        this.funclist = {}; // 関数の一覧\n        this.moduleExport = {};\n        this.reset();\n    }\n    reset() {\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\n        this.genMode = 'sync'; // #637, #1056\n    }\n    setFuncList(funclist) {\n        this.funclist = funclist;\n    }\n    setModuleExport(moduleexport) {\n        this.moduleExport = moduleexport;\n    }\n    /**\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\n     * @param {string[]} josiList 下ろしたい助詞の配列\n     */\n    popStack(josiList = undefined) {\n        if (!josiList) {\n            const t = this.stack.pop();\n            if (t) {\n                return t;\n            }\n            return null;\n        }\n        // josiList にマッチする助詞を探す\n        for (let i = this.stack.length - 1; i >= 0; i--) {\n            const t = this.stack[i];\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\n                this.stack.splice(i, 1); // remove stack\n                this.logger.trace('POP :' + JSON.stringify(t));\n                return t;\n            }\n        }\n        // 該当する助詞が見つからなかった場合\n        return null;\n    }\n    /**\n     * saveStack と loadStack は対で使う。\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\n     */\n    saveStack() {\n        this.stackList.push(this.stack);\n        this.stack = [];\n    }\n    loadStack() {\n        this.stack = this.stackList.pop();\n    }\n    /** 変数名を探す\n     * @param {string} name\n     * @returns {any}変数名の情報\n     */\n    findVar(name) {\n        // ローカル変数？\n        if (this.localvars[name]) {\n            return {\n                name,\n                scope: 'local',\n                info: this.localvars[name]\n            };\n        }\n        // モジュール名を含んでいる?\n        if (name.indexOf('__') >= 0) {\n            if (this.funclist[name]) {\n                return {\n                    name,\n                    scope: 'global',\n                    info: this.funclist[name]\n                };\n            }\n            else {\n                return undefined;\n            }\n        }\n        // グローバル変数（自身）？\n        const gnameSelf = `${this.modName}__${name}`;\n        if (this.funclist[gnameSelf]) {\n            return {\n                name: gnameSelf,\n                scope: 'global',\n                info: this.funclist[gnameSelf]\n            };\n        }\n        // グローバル変数（モジュールを検索）？\n        for (const mod of this.modList) {\n            const gname = `${mod}__${name}`;\n            const exportDefault = this.moduleExport[mod];\n            if (this.funclist[gname] && (this.funclist[gname].isExport === true || (this.funclist[gname].isExport !== false && exportDefault !== false))) {\n                return {\n                    name: gname,\n                    scope: 'global',\n                    info: this.funclist[gname]\n                };\n            }\n        }\n        // システム変数 (funclistを普通に検索)\n        if (this.funclist[name]) {\n            return {\n                name,\n                scope: 'system',\n                info: this.funclist[name]\n            };\n        }\n        return undefined;\n    }\n    /**\n     * 計算用に要素をスタックに積む\n     */\n    pushStack(item) {\n        this.logger.trace('PUSH:' + JSON.stringify(item));\n        this.stack.push(item);\n    }\n    /**\n     * トークンの末尾に達したか\n     */\n    isEOF() {\n        return (this.index >= this.tokens.length);\n    }\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * カーソル位置にある単語の型を確かめる\n     */\n    check(ttype) {\n        return (this.tokens[this.index].type === ttype);\n    }\n    /**\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\n     * @param a [単語1の型, 単語2の型, ... ]\n     */\n    check2(a) {\n        for (let i = 0; i < a.length; i++) {\n            const idx = i + this.index;\n            if (this.tokens.length <= idx) {\n                return false;\n            }\n            if (a[i] === '*') {\n                continue;\n            } // ワイルドカード(どんなタイプも許容)\n            const t = this.tokens[idx];\n            if (a[i] instanceof Array) {\n                if (a[i].indexOf(t.type) < 0) {\n                    return false;\n                }\n                continue;\n            }\n            if (t.type !== a[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\n     */\n    checkTypes(a) {\n        const type = this.tokens[this.index].type;\n        return (a.indexOf(type) >= 0);\n    }\n    /**\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\n     */\n    accept(types) {\n        const y = [];\n        const tmpIndex = this.index;\n        const rollback = () => {\n            this.index = tmpIndex;\n            return false;\n        };\n        for (let i = 0; i < types.length; i++) {\n            if (this.isEOF()) {\n                return rollback();\n            }\n            const type = types[i];\n            if (type == null) {\n                return rollback();\n            }\n            if (typeof type === 'string') {\n                const token = this.get();\n                if (token && token.type !== type) {\n                    return rollback();\n                }\n                y[i] = token;\n                continue;\n            }\n            if (typeof type === 'function') {\n                const f = type.bind(this);\n                const r = f(y);\n                if (r === null) {\n                    return rollback();\n                }\n                y[i] = r;\n                continue;\n            }\n            if (type instanceof Array) {\n                if (!this.checkTypes(type)) {\n                    return rollback();\n                }\n                y[i] = this.get();\n                continue;\n            }\n            throw new Error('System Error : accept broken : ' + typeof type);\n        }\n        this.y = y;\n        return true;\n    }\n    /**\n     * カーソル語句を取得して、カーソルを後ろに移動する\n     */\n    get() {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index++];\n    }\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\n    getCur() {\n        if (this.isEOF()) {\n            throw new Error('トークンが取得できません。');\n        }\n        const t = this.tokens[this.index++];\n        if (!t) {\n            throw new Error('トークンが取得できません。');\n        }\n        return t;\n    }\n    unget() {\n        if (this.index > 0) {\n            this.index--;\n        }\n    }\n    /** 解析中のトークンを返す */\n    peek(i = 0) {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index + i];\n    }\n    /** 解析中のトークンを返す、無理なら def を返す */\n    peekDef(def = null) {\n        if (this.isEOF()) {\n            if (!def) {\n                def = NewEmptyToken();\n            }\n            return def;\n        }\n        return this.tokens[this.index];\n    }\n    /**\n     * 現在のカーソル語句のソースコード上の位置を取得する。\n     */\n    peekSourceMap() {\n        const token = this.peek();\n        if (token === null) {\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\n        }\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\n    }\n    /**\n     * depth: 表示する深さ\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\n     * @param {{ depth: number, typeName?: string }} opts\n     * @param {boolean} debugMode\n     */\n    nodeToStr(node, opts, debugMode) {\n        const depth = opts.depth - 1;\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\n        if (!node) {\n            return '(NULL)';\n        }\n        switch (node.type) {\n            case 'not':\n                if (depth >= 0) {\n                    const subNode = node.value;\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『not』`;\n                }\n            case 'op': {\n                const node2 = node;\n                let operator = node2.operator || '';\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\n                if (operator in table) {\n                    operator = table[operator];\n                }\n                if (depth >= 0) {\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\n                    if (node2.operator === 'eq') {\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\n                    }\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『${operator}${debug}』`;\n                }\n            }\n            case 'number':\n                return `${typeName('数値')}${node.value}`;\n            case 'bigint':\n                return `${typeName('巨大整数')}${node.value}`;\n            case 'string':\n                return `${typeName('文字列')}『${node.value}${debug}』`;\n            case 'word':\n                return `${typeName('単語')}『${node.value}${debug}』`;\n            case 'func':\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\n            case 'eol':\n                return '行の末尾';\n            case 'eof':\n                return 'ファイルの末尾';\n            default: {\n                let name = node.name;\n                if (name) {\n                    name = node.value;\n                }\n                if (typeof name !== 'string') {\n                    name = node.type;\n                }\n                return `${typeName('')}『${name}${debug}』`;\n            }\n        }\n    }\n}\n","/**\n * nako_prepare.js\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\n */\nclass ReplaceHistory {\n    constructor(from, to, index) {\n        this.from = from;\n        this.to = to;\n        this.index = index;\n    }\n}\nclass ConvertResult {\n    constructor(text, sourcePosition) {\n        this.text = text;\n        this.sourcePosition = sourcePosition;\n    }\n}\n/**\n * 置換後の位置から置換前の位置へマッピングできる文字列\n */\nexport class Replace {\n    constructor(code) {\n        this.history = [];\n        this.code = code;\n    }\n    getText() {\n        return this.code;\n    }\n    replaceAll(from, to) {\n        while (true) {\n            const index = this.getText().indexOf(from);\n            if (index === -1) {\n                break;\n            }\n            if (from.length !== to.length) {\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\n            }\n            this.code = this.code.replace(from, to);\n        }\n    }\n    getSourcePosition(i) {\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\n        for (const item of this.history) {\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\n                i += item.from - item.to;\n            }\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\n                if (item.to >= 2 && i === item.index + item.to - 1) {\n                    i = item.index + item.from - 1;\n                }\n                else {\n                    i = item.index;\n                }\n            }\n        }\n        return i;\n    }\n}\n/**\n * 字句解析を行う前に全角文字を半角に揃える\n *    [memo]\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\n *    for https://github.com/kujirahand/nadesiko3/issues/94\n */\nexport class NakoPrepare {\n    /** 唯一のインスタンスを返す */\n    static getInstance() {\n        if (!NakoPrepare._instance) {\n            NakoPrepare._instance = new NakoPrepare();\n        }\n        return NakoPrepare._instance;\n    }\n    constructor() {\n        // 単純な変換テーブル\n        this.convertTable = new Map([\n            // ハイフンへの変換\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\n            // 0x2d: true, // ASCIIのハイフン\n            [0x2010, '-'],\n            [0x2011, '-'],\n            [0x2013, '-'],\n            [0x2014, '-'],\n            [0x2015, '-'],\n            [0x2212, '-'],\n            // チルダの変換\n            // 0x7e: true,\n            [0x02dc, '~'],\n            [0x02F7, '~'],\n            [0x2053, '~'],\n            [0x223c, '~'],\n            [0x301c, '~'],\n            [0xFF5E, '~'],\n            // スペースの変換\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\n            // 0x20: true,\n            [0x2000, ' '],\n            [0x2002, ' '],\n            [0x2003, ' '],\n            [0x2004, ' '],\n            [0x2005, ' '],\n            [0x2006, ' '],\n            [0x2007, ' '],\n            [0x2009, ' '],\n            [0x200A, ' '],\n            [0x200B, ' '],\n            [0x202F, ' '],\n            [0x205F, ' '],\n            [0x3000, ' '],\n            [0x3164, ' '],\n            // その他の変換\n            // [0x09, ' '], // TAB --> SPC\n            [0x203B, '#'],\n            [0x3002, ';'],\n            [0x3010, '['],\n            [0x3011, ']'],\n            // 読点は「,」に変換する (#877)\n            [0x3001, ','],\n            [0xFF0C, ','],\n            [0x2716, '*'],\n            [0x2795, '+'],\n            [0x2796, '-'],\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\n        ]);\n    }\n    // 一文字だけ変換\n    /**\n     * @param {string} ch\n     */\n    convert1ch(ch) {\n        if (!ch) {\n            return '';\n        }\n        const c = ch.codePointAt(0) || 0;\n        // テーブルによる変換\n        const c2 = this.convertTable.get(c) || '';\n        if (c2) {\n            return c2;\n        }\n        // ASCIIエリア\n        if (c < 0x7F) {\n            return ch;\n        }\n        // 全角半角単純変換可能 --- '！' - '～'\n        if (c >= 0xFF01 && c <= 0xFF5E) {\n            const c2 = c - 0xFEE0;\n            return String.fromCodePoint(c2);\n        }\n        return ch;\n    }\n    /** convert code */\n    convert(code) {\n        if (!code) {\n            return [];\n        }\n        const src = new Replace(code);\n        // 改行コードを統一\n        src.replaceAll('\\r\\n', '\\n');\n        src.replaceAll('\\r', '\\n');\n        let flagStr = false; // 文字列リテラル内かどうか\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\n        const res = [];\n        let left = 0; // 現在処理中の部分文字列の左端の位置\n        let str = ''; // 文字列リテラルの値\n        // 一文字ずつ全角を半角に置換する\n        let i = 0;\n        while (i < src.getText().length) {\n            const c = src.getText().charAt(i);\n            const ch2 = src.getText().substr(i, 2);\n            // 文字列のとき\n            if (flagStr) {\n                if (c === endOfStr) {\n                    flagStr = false;\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i++;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 絵文字制御による文字列のとき\n            if (flagStr2) {\n                if (ch2 === endOfStr) {\n                    flagStr2 = false;\n                    if (endOfStr === '＊／') {\n                        endOfStr = '*/';\n                    } // 強制変換\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i += 2;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 文字列判定\n            if (c === '「') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '」';\n                str = '';\n                continue;\n            }\n            if (c === '『') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '』';\n                str = '';\n                continue;\n            }\n            if (c === '“') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '”';\n                str = '';\n                continue;\n            }\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\n            if (ch2 === '🌴' || ch2 === '🌿') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = ch2;\n                str = '';\n                continue;\n            }\n            const c1 = this.convert1ch(c);\n            if (c1 === '\"' || c1 === '\\'') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = c;\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす (#725)\n            if (c1 === '#') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true; // 本当はコメントだけど便宜上\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす\n            if (ch2 === '//' || ch2 === '／／') {\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\n                i += 2;\n                left = i;\n                flagStr = true;\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす\n            if (ch2 === '／＊') {\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '＊／';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす (#731)\n            if (ch2 === '/*') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '*/';\n                str = '';\n                continue;\n            }\n            // 変換したものを追加\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n            i++;\n            left = i;\n        }\n        if (flagStr || flagStr2) {\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n        }\n        return res;\n    }\n}\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\nexport function checkNakoMode(code, modeNames) {\n    // 先頭の256文字について調べる\n    code = code.substring(0, 256);\n    // 全角半角の揺れを吸収\n    code = code.replace(/(！|💡)/, '!');\n    // 範囲コメントを削除\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\n    // 毎文調べる\n    const lines = code.split(/[;。\\n]/, 30);\n    for (let line of lines) {\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\n        if (modeNames.indexOf(line) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * よく使う処理をまとめたもの\n */\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * トークンの内容をデバッグ出力する関数\n * @param tokens トークンの一覧\n * @returns 文字列\n */\nexport function debugTokens(tokens) {\n    const result = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const ftype = t.type;\n        const fvalue = t.value;\n        let s = `[${ftype}:${fvalue}]`;\n        if (ftype === fvalue) {\n            s = ftype;\n        }\n        if (ftype === 'comma') {\n            s = ',';\n        }\n        if (ftype === 'string') {\n            s = `\"${fvalue}\"`;\n        }\n        if (ftype === 'number') {\n            s = `(${fvalue})`;\n        }\n        if (ftype === 'word') {\n            s = `[word:${fvalue}]`;\n        }\n        if (!result[t.line]) {\n            result[t.line] = makeIndent(t.indent);\n        }\n        result[t.line] += s + t.josi + '|';\n    }\n    return result.join('\\n');\n}\nexport function makeIndent(n) {\n    let s = '';\n    for (let i = 0; i < n; i++) {\n        s += ' ';\n    }\n    return s;\n}\nlet lastTokenInfo = NewEmptyToken();\nexport function newToken(type, value, templateToken = undefined) {\n    if (templateToken) {\n        lastTokenInfo = templateToken;\n    }\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\n    return t;\n}\n","/** インデント構文を処理するモジュール */\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { NakoIndentError } from '../src/nako_errors.mjs';\nimport { debugTokens, newToken } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nfunction isSkipWord(t) {\n    if (t.type === '違えば') {\n        return true;\n    }\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\n        return true;\n    }\n    return false;\n}\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\nexport function convertInlineIndent(tokens) {\n    //\n    // 0:もし、A=0ならば:\n    // 2:  もし、B=0ならば:\n    // 4:    「A=0,B=0」を表示。\n    // 2:  違えば:\n    // 4:    「A=0,B!=0」を表示。\n    // 5:違えば:\n    // 6:  「A!=0」を表示。\n    //\n    const lines = splitTokens(tokens, 'eol');\n    const blockIndents = [];\n    let checkICount = -1;\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        // JSONの途中であればブロックの変更は行わない\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        // インデントの終了を確認する必要があるか？\n        if (checkICount >= 0) {\n            const lineICount = leftToken.indent;\n            while (checkICount >= lineICount) {\n                const tFirst = leftToken;\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\n                }\n                else {\n                    // ここまでを挿入する\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    checkICount = blockIndents[blockIndents.length - 1];\n                }\n                else {\n                    checkICount = -1;\n                    break;\n                }\n            }\n        }\n        // JSONの途中であればブロックの変更は行わない\n        checkJsonSyntax(line);\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            continue;\n        }\n        // 末尾の「:」をチェック\n        const tLast = getLastTokenWithoutEOL(line);\n        if (tLast.type === ':') {\n            // 末尾の「:」を削除\n            lines[i] = lines[i].filter(t => t !== tLast);\n            checkICount = tLast.indent;\n            blockIndents.push(checkICount);\n        }\n    }\n    if (lines.length > 0 && blockIndents.length > 0) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        // ここまでを差し込む\n        for (let i = 0; i < blockIndents.length; i++) {\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\n        }\n    }\n    const result = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('###', debugTokens(result));\n    }\n    return result;\n}\n/** 行ごとに分割していたトークンをくっつける */\nexport function joinTokenLines(lines) {\n    const r = [];\n    for (const line of lines) {\n        for (const t of line) {\n            r.push(t);\n        }\n    }\n    return r;\n}\nfunction getLastTokenWithoutEOL(line) {\n    const len = line.length;\n    if (len === 0) {\n        return NewEmptyToken('?');\n    }\n    let res = line[len - 1];\n    if (res.type === 'eol') {\n        if (len >= 2) {\n            res = line[len - 2];\n        }\n    }\n    return res;\n}\nexport function splitTokens(tokens, delimiter) {\n    const result = [];\n    let line = [];\n    let kakko = 0;\n    for (const t of tokens) {\n        line.push(t);\n        if (t.type === '{') {\n            kakko++;\n        }\n        else if (t.type === '}') {\n            kakko--;\n        }\n        else if (kakko === 0 && t.type === delimiter) {\n            result.push(line);\n            line = [];\n        }\n    }\n    if (line.length > 0) {\n        result.push(line);\n    }\n    return result;\n}\n/** トークン行が空かどうか調べる */\nfunction IsEmptyLine(line) {\n    if (line.length === 0) {\n        return true;\n    }\n    for (let j = 0; j < line.length; j++) {\n        const ty = line[j].type;\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/** コメントを除去した最初のトークンを返す */\nfunction GetLeftTokens(line) {\n    for (let i = 0; i < line.length; i++) {\n        const t = line[i].type;\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\n            continue;\n        }\n        return line[i];\n    }\n    return line[0];\n}\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\nexport function convertIndentSyntax(tokens) {\n    // インデント構文の変換が必要か?\n    if (!useIndentSynax(tokens)) {\n        return tokens;\n    }\n    // 『ここまで』があったらエラーを出す\n    for (const t of tokens) {\n        if (t.type === 'ここまで') {\n            // エラーを出す\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\n        }\n    }\n    // JSON構文のチェック\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    // 行ごとにトークンを分割\n    const blockIndents = [];\n    const lines = splitTokens(tokens, 'eol');\n    let lastI = 0;\n    // 各行を確認する\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        // JSON構文のチェック\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        const curI = leftToken.indent;\n        if (curI === lastI) {\n            continue;\n        }\n        // ブロックの終了?\n        // 0: 3回\n        // 2:   もし、1 > 1ならば\n        // 4:     1を表示\n        // 2:   違えば\n        // 4:     2を表示\n        // 0:\n        // ブロックの終了?\n        if (lastI >= 0) {\n            while (lastI > curI) {\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\n                }\n                else {\n                    const t = lines[i - 1][0];\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\n                    lines[i - 1].push(newToken('eol', '\\n', t));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    lastI = blockIndents[blockIndents.length - 1][0];\n                }\n                else {\n                    lastI = 0;\n                    break;\n                }\n            }\n        }\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            continue;\n        }\n        // JSON構文のチェック\n        checkJsonSyntax(line);\n        // ブロックの開始？\n        if (curI > lastI) {\n            blockIndents.push([curI, lastI]);\n            // console.log('@@@push', curI)\n            lastI = curI;\n            continue;\n        }\n    }\n    // 末尾に「ここまで」を追加する\n    for (let i = 0; i < blockIndents.length; i++) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\n    }\n    const result = joinTokenLines(lines);\n    // console.log('###', debugTokens(result))\n    return result;\n}\nfunction useIndentSynax(tokens) {\n    // インデント構文が必要かチェック (最初の100個をチェック)\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * DNCLに対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\n// DNCLモードのキーワード\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:を実行': ['ここまで', 'ここまで'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL(tokens) {\n    if (!useDNCLmode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // 行頭の | はただのインデント\n        for (let j = 0; j < line.length; j++) {\n            if (line[j].type === '|') {\n                line[j].type = 'range_comment';\n                continue;\n            }\n            break;\n        }\n        // 後判定の繰り返しの実装のため\n        const t = line[0];\n        if (t.type === 'word' && t.value === '繰返') {\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\n        }\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\n        if (fi > 0) {\n            replaceAtohantei(line, fi);\n        }\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\n        if (fi2 > 0) {\n            replaceAtohantei(line, fi2);\n        }\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // を繰り返す → ここまで\n        for (;;) {\n            const ni = findTokens(line, ['word:を繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'ここまで';\n            fu.value = 'ここまで';\n            fu.josi = '';\n        }\n        // 'のすべての要素を0にする'\n        // 'のすべての要素に0を代入する'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 'のすべての値を0にする'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    return tokens;\n}\nfunction replaceAllElementV(line, ni) {\n    //\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\n    //\n    const t = line[ni];\n    line[ni - 1].josi = '';\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\n    end.josi = 'に';\n    const val = line[ni + 2];\n    val.josi = '';\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\n    times.josi = 'を';\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\n}\nfunction replaceAtohantei(tokens, fi) {\n    // `ここまで、(${r[1]})になるまでの間`\n    const wo = findTokens(tokens, ['word:を']);\n    if (wo >= 0) {\n        tokens[wo].type = 'ここまで';\n        tokens[wo].value = 'ここまで';\n    }\n    const ga = findTokens(tokens, ['word:が']);\n    if (ga >= 0) {\n        tokens[ga].type = 'ここまで';\n        tokens[ga].value = 'ここまで';\n    }\n    // なる:まで(fi) 実行(fi+1)\n    tokens[fi + 1].value = '間';\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCLmode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCLモード';\n            return true;\n        }\n    }\n    return false;\n}\nexport const NakoDncl = {\n    convert: convertDNCL\n};\n","/**\n * DNCL ver2 に対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\nimport { newToken, debugTokens } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nconst DNCL_ARRAY_INIT_COUNT = 30;\n// DNCL2モードのキーワード\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    // 'word:and': ['and', 'かつ'],\n    // 'word:or': ['or', 'または'],\n    'word:not': ['not', '!'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL2(tokens) {\n    if (!useDNCL2mode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // --- 制御構文の変換 ---\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // そうでなければ(そう|でなければ) or そうでなく → 違えば\n        for (let ni = 0; ni < line.length; ni++) {\n            const t = line[ni];\n            if ((t.value === 'そう' || t.value === 'それ') && (t.josi === 'でなければ' || t.josi === 'でなく')) {\n                t.type = '違えば';\n                t.value = '違えば';\n                t.josi = '';\n            }\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // 'そうでなく': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なく']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            if (sou.josi === 'で') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni + 1, 1);\n                // console.log('@@@', line.map(v => v.value).join('|'))\n                continue;\n            }\n            break;\n        }\n        // 'そうでなくもし': '違えば,もし'\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なくもし']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            const nakumosi = line[ni + 1];\n            sou.type = '違えば';\n            sou.value = '違えば';\n            sou.josi = '';\n            nakumosi.type = 'もし';\n            nakumosi.value = 'もし';\n            nakumosi.josi = '';\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // --- 配列変数周りの変換 ---\n        for (let i = 0; i < line.length; i++) {\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                const valToken = line[i + 4];\n                valToken.josi = '';\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n                i += 6; // skip\n            }\n            // Hensuの|すべての|(要素を|値を)|0に|する\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\n                const varToken = line[i];\n                varToken.josi = '';\n                const valToken = line[i + 3];\n                valToken.josi = '';\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n            // 配列変数 | xxを | 初期化する\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n        }\n        // --- その他の変換 ---\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('@@@---DNCL:tokens---');\n        console.log(debugTokens(tokens));\n        console.log('@@@/---DNCL:tokens---');\n    }\n    return tokens;\n}\n/**\n * トークンが合致するかを確認する\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\n * @param lines 差し替え\n * @param fromIndex 検索場所\n * @returns 合致したかどうか\n */\nfunction tokenEq(typeValues, lines, fromIndex) {\n    const check = (pattern, t) => {\n        if (pattern instanceof Array) {\n            for (let i = 0; i < pattern.length; i++) {\n                if (check(pattern[i], t)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (pattern === '*') {\n            return true;\n        }\n        if (pattern.indexOf(':') < 0) {\n            if (pattern === t.type) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const tv = `${t.type}:${t.value}`;\n        if (pattern === tv) {\n            return true;\n        }\n        return false;\n    };\n    for (let i = 0; i < typeValues.length; i++) {\n        const idx = i + fromIndex;\n        if (idx >= lines.length) {\n            return false;\n        }\n        const pat = typeValues[i];\n        const t = lines[idx];\n        if (!check(pat, t)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCL2mode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCL2モード';\n            return true;\n        }\n    }\n    return false;\n}\n","/** prepareとtokenizeのソースマッピング */\nexport class SourceMappingOfTokenization {\n    /**\n       * @param {number} sourceCodeLength\n       * @param {PreprocessItem[]} preprocessed\n       */\n    constructor(sourceCodeLength, preprocessed) {\n        /** @private @readonly */\n        this.sourceCodeLength = sourceCodeLength;\n        /** @private @readonly */\n        this.preprocessed = preprocessed;\n        let i = 0;\n        /** @private @readonly @type {number[]} */\n        this.cumulativeSum = [];\n        for (const el of preprocessed) {\n            this.cumulativeSum.push(i);\n            i += el.text.length;\n        }\n        /** @private */\n        this.lastIndex = 0;\n        /** @private */\n        this.lastPreprocessedCodePosition = 0;\n    }\n    /**\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    map(preprocessedCodePosition) {\n        const i = this.findIndex(preprocessedCodePosition);\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\n    }\n    /**\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    findIndex(preprocessedCodePosition) {\n        // 連続アクセスに対する高速化\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\n            this.lastIndex = 0;\n        }\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\n                this.lastIndex = i;\n                return i;\n            }\n        }\n        this.lastIndex = this.preprocessed.length - 1;\n        return this.preprocessed.length - 1;\n    }\n}\nexport class SourceMappingOfIndentSyntax {\n    /**\n       * @param {string} codeAfterProcessingIndentationSyntax\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\n       */\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\n        /** @private @type {{ offset: number, len: number }[]} */\n        this.lines = [];\n        /** @private @readonly */\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\n        /** @private @readonly */\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\n        let offset = 0;\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\n            this.lines.push({ offset, len: line.length });\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number | null} startOffset\n       * @param {number | null} endOffset\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\n       */\n    map(startOffset, endOffset) {\n        if (startOffset === null) {\n            return { startOffset, endOffset };\n        }\n        // 何行目かを判定\n        const tokenLine = this.getLineNumber(startOffset);\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\n            if (tokenLine === insertedLine) {\n                startOffset = null;\n                endOffset = null;\n                break;\n            }\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\n            if (tokenLine > insertedLine) {\n                // \"\\n\"の分1足す\n                startOffset -= this.lines[insertedLine].len + 1;\n                if (endOffset !== null) {\n                    endOffset -= this.lines[insertedLine].len + 1;\n                }\n            }\n        }\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\n            if (tokenLine >= deletedLine.lineNumber) {\n                // \"\\n\"の分1足す\n                if (startOffset !== null) {\n                    startOffset += deletedLine.len + 1;\n                }\n                if (endOffset !== null) {\n                    endOffset += deletedLine.len + 1;\n                }\n            }\n        }\n        return { startOffset, endOffset };\n    }\n    /**\n       * @param {number} offset\n       * @returns {number}\n       * @private\n       */\n    getLineNumber(offset) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\n            if (offset < this.lines[i + 1].offset) {\n                this.lastLineNumber = i;\n                return i;\n            }\n        }\n        this.lastLineNumber = this.lines.length - 1;\n        return this.lines.length - 1;\n    }\n}\n/** offsetから (line, column) へ変換する。 */\nexport class OffsetToLineColumn {\n    /**\n       * @param {string} code\n       */\n    constructor(code) {\n        /** @private @type {number[]} */\n        this.lineOffsets = [];\n        // 各行の先頭位置を先に計算しておく\n        let offset = 0;\n        for (const line of code.split('\\n')) {\n            this.lineOffsets.push(offset);\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number} offset\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\n       * @returns {{ line: number, column: number }}\n       */\n    map(offset, oneBasedLineNumber) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\n            if (offset < this.lineOffsets[i + 1]) {\n                this.lastLineNumber = i;\n                return {\n                    line: i + (oneBasedLineNumber ? 1 : 0),\n                    column: offset - this.lineOffsets[i]\n                };\n            }\n        }\n        this.lastLineNumber = this.lineOffsets.length - 1;\n        return {\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\n        };\n    }\n}\n/**\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\n */\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\n    // offsetは単純に引くだけでよい\n    if (typeof sourceMap.startOffset === 'number') {\n        sourceMap.startOffset -= preCode.length;\n    }\n    if (typeof sourceMap.endOffset === 'number') {\n        sourceMap.endOffset -= preCode.length;\n    }\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\n    if (preCode !== '') {\n        const lines = preCode.split('\\n');\n        if (typeof sourceMap.line === 'number') {\n            sourceMap.line -= lines.length - 1;\n        }\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\n            sourceMap.column -= lines[lines.length - 1].length;\n        }\n    }\n    return sourceMap;\n}\n","/**\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\n */\n/**\n * ANSI escape code の一部\n */\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\n// 30 ~ 37\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\n/** @param {string} t */\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n/**\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\n * @param {string} text\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\n */\nconst convertColorTextFormat = (text) => {\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\n    // eslint-disable-next-line no-control-regex\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\n    // nodeConsoleからbrowserConsoleを作る\n    /** @type {string[]} */\n    const browserConsoleStyles = [];\n    let consoleColor = 'inherit'; // 文字色\n    let consoleFontWeight = 'inherit'; // 文字の太さ\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\n    const browserConsoleText = text === noColor\n        ? noColor\n        // eslint-disable-next-line no-control-regex\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n            const m1 = +m1str;\n            if (m1 === 0) {\n                consoleColor = 'inherit';\n                consoleFontWeight = 'inherit';\n            }\n            if (m1 === 1) {\n                consoleFontWeight = 'bold';\n            }\n            if (m1 >= 30 && m1 <= 37) {\n                consoleColor = colorNames[m1 - 30];\n            }\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\n            return '%c';\n        });\n    // nodeConsoleからhtmlを作る\n    let htmlColor = 'inherit'; // 文字色\n    let htmlFontWeight = 'inherit'; // 文字の太さ\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\n    // eslint-disable-next-line multiline-ternary\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\n        // eslint-disable-next-line no-control-regex\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n        const m1 = +m1str;\n        if (m1 === 0) { // リセット\n            htmlColor = 'inherit';\n            htmlFontWeight = 'inherit';\n        }\n        if (m1 === 1) { // 太字化\n            htmlFontWeight = 'bold';\n        }\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\n            htmlColor = colorNames[m1 - 30];\n        }\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\n    }) + '</span>');\n    // 各表現を返す。\n    return {\n        noColor,\n        nodeConsole: text === noColor\n            ? noColor // textが色の情報を含まないならnoColorを返す。\n            : text + '\\x1b[0m',\n        html,\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\n    };\n};\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\n","/** NakoLogger */\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport { NakoColors } from './nako_colors.mjs';\n/**\n * ログレベル - 数字が高いほど優先度が高い。\n */\nclass LogLevel {\n    // string to level no\n    static fromS(levelStr) {\n        let level = LogLevel.trace;\n        switch (levelStr) {\n            case 'all':\n                level = LogLevel.all;\n                break;\n            case 'trace':\n                level = LogLevel.trace;\n                break;\n            case 'debug':\n                level = LogLevel.debug;\n                break;\n            case 'info':\n                level = LogLevel.info;\n                break;\n            case 'warn':\n                level = LogLevel.warn;\n                break;\n            case 'error':\n                level = LogLevel.error;\n                break;\n            case 'stdout':\n                level = LogLevel.stdout;\n                break;\n            default:\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\n        }\n        return level;\n    }\n    static toString(level) {\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\n        return levels[level];\n    }\n}\n// level no\nLogLevel.all = 0;\nLogLevel.trace = 1;\nLogLevel.debug = 2;\nLogLevel.info = 3;\nLogLevel.warn = 4;\nLogLevel.error = 5;\nLogLevel.stdout = 6;\nexport { LogLevel };\n/**\n * エラー位置を日本語で表示する。\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\n */\nfunction stringifyPosition(p) {\n    if (!p) {\n        return '';\n    }\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\n}\n/**\n * コンパイラのログ情報を出力するためのクラス。\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\n */\nexport class NakoLogger {\n    constructor() {\n        this.listeners = [];\n        this.logs = '';\n        this.position = '';\n    }\n    getErrorLogs() {\n        return [this.logs.replace(/\\s+$/, ''), this.position];\n    }\n    clear() {\n        this.logs = '';\n        this.position = '';\n    }\n    /**\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\n     * @param levelStr\n     * @param callback\n     */\n    addListener(levelStr, callback) {\n        const level = LogLevel.fromS(levelStr);\n        this.listeners.push({ level, callback });\n    }\n    /**\n     * addListenerメソッドで設定したコールバックを取り外す。\n     * @param {LogListener} callback\n     */\n    removeListener(callback) {\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\n    }\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    trace(message, position = null) {\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** 本体開発時のデバッグ情報\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    debug(message, position = null) {\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    info(message, position = null) {\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（重要なもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    warn(message, position = null) {\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** エラーメッセージ\n     * @param {string | Error} message\n     * @param {Position | null} position\n     */\n    error(message, position = null) {\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\n        if (message instanceof Error && typeof message.type === 'string') {\n            // NakoErrorか\n            const etype = message.type;\n            switch (etype) {\n                case 'NakoRuntimeError':\n                case 'NakoError':\n                    if (message instanceof NakoError) {\n                        const e = message;\n                        let pos = position;\n                        if (pos === null || pos === undefined) {\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\n                        }\n                        this.sendI(LogLevel.error, e.message, pos);\n                        return;\n                    }\n            }\n        }\n        if (message instanceof Error) {\n            // 一般のエラーの場合は、messageのみ取得できる。\n            message = message.message;\n        }\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** RuntimeErrorを生成する */\n    runtimeError(error, posStr) {\n        const e = new NakoRuntimeError(error, posStr);\n        return e;\n    }\n    /** ユーザープログラムのデバッグ情報（すべて)\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    stdout(message, position = null) {\n        this.sendI(LogLevel.stdout, `${message}`, position);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\n        const i = LogLevel.fromS(levelStr);\n        this.sendI(i, nodeConsole, position, html, browserConsole);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\n        const makeData = () => {\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\n            let style = '';\n            if (nodeConsole.includes('\\n')) {\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\n            }\n            // 各イベントリスナーが受け取るデータ\n            const data = {\n                noColor: formats.noColor,\n                nodeConsole: formats.nodeConsole,\n                browserConsole: browserConsole || formats.browserConsole,\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>',\n                level: LogLevel.toString(level),\n                position\n            };\n            return data;\n        };\n        // エラーならログに追加\n        if (level === LogLevel.error) {\n            const data = makeData();\n            this.logs += data.noColor + '\\n';\n            if (position && this.position !== null) {\n                this.position = `l${position.line}:${position.file}`;\n            }\n        }\n        // 登録したリスナーに通知する\n        for (const l of this.listeners) {\n            if (l.level <= level) {\n                const data = makeData();\n                l.callback(data);\n            }\n        }\n    }\n}\n","import { NakoColors } from './nako_colors.mjs';\n/**\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\n */\nexport class NakoGlobal {\n    /**\n     * @param compiler\n     * @param gen\n     */\n    constructor(compiler, gen, guid = 0) {\n        this.guid = guid;\n        this.lastJSCode = '';\n        // ユーザーのプログラムから編集される変数\n        this.__locals = {};\n        this.__varslist = [\n            { ...compiler.__varslist[0] },\n            { ...compiler.__varslist[1] },\n            { ...compiler.__varslist[2] } // local [2][3][4][5] ...\n        ];\n        this.numFailures = 0;\n        this.index = 0;\n        this.nextIndex = -1;\n        this.__code = [];\n        this.__callstack = [];\n        this.__stack = [];\n        this.__labels = [];\n        this.__genMode = gen.genMode;\n        // バージョン情報の引き継ぎ\n        this.version = compiler.version;\n        this.coreVersion = compiler.coreVersion;\n        // PluginSystemとdestroy()から参照するため\n        this.__module = { ...compiler.__module }; // shallow copy\n        this.pluginfiles = { ...compiler.getPluginfiles() };\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\n        this.gen = gen;\n        // 以下のメソッドで使うため\n        this.logger = compiler.getLogger();\n        this.compiler = compiler;\n    }\n    clearLog() {\n        this.__varslist[0]['表示ログ'] = '';\n    }\n    get log() {\n        let s = this.__varslist[0]['表示ログ'];\n        s = s.replace(/\\s+$/, '');\n        return s;\n    }\n    /**\n     * 「ナデシコ」命令のためのメソッド\n     */\n    runEx(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return this.compiler.runSync(code, fname, opts);\n    }\n    async runAsync(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return await this.compiler.runAsync(code, fname, opts);\n    }\n    /**\n     * テスト実行のためのメソッド\n     * @param {{ name: string, f: () => void }[]} tests\n     */\n    _runTests(tests) {\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\n        let pass = 0;\n        let numFailures = 0;\n        for (const t of tests) {\n            try {\n                t.f();\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\n                pass++;\n            }\n            catch (err) {\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\n                numFailures++;\n            }\n        }\n        if (numFailures > 0) {\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\n        }\n        else {\n            text += `${NakoColors.color.green}成功 ${pass}件`;\n        }\n        this.numFailures = numFailures;\n        this.logger.stdout(text);\n    }\n    /**\n     * 毎プラグインの「!クリア」関数を実行\n     */\n    clearPlugins() {\n        // 実行している関数をすべて終了させる\n        // プラグインのクリア関数を呼び出す\n        const clearName = '!クリア';\n        for (const pname in this.pluginfiles) {\n            const po = this.__module[pname];\n            if (po[clearName] && po[clearName].fn) {\n                po[clearName].fn(this);\n            }\n        }\n    }\n    /**\n     * 各種リセット処理\n     */\n    reset() {\n        this.clearPlugins();\n    }\n    destroy() {\n        this.reset();\n    }\n}\n","/** plugin_math */\nexport default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @三角関数\n    'SIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.sin(v);\n        }\n    },\n    'COS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.cos(v);\n        }\n    },\n    'TAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.tan(v);\n        }\n    },\n    'ARCSIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.asin(v);\n        }\n    },\n    'ARCCOS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.acos(v);\n        }\n    },\n    'ARCTAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.atan(v);\n        }\n    },\n    'ATAN2': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (y, x) {\n            return Math.atan2(y, x);\n        }\n    },\n    '座標角度計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (XY) {\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\n        }\n    },\n    'RAD2DEG': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'DEG2RAD': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    '度変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'ラジアン変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    // @算術関数\n    'SIGN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\n        }\n    },\n    '符号': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        fn: function (v, sys) {\n            return sys.__exec('SIGN', [v]);\n        }\n    },\n    'ABS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    '絶対値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    'EXP': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.exp(a);\n        }\n    },\n    'HYPOT': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    '斜辺': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    'LN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOG': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOGN': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            if (a === 2) {\n                return Math.LOG2E * Math.log(b);\n            }\n            if (a === 10) {\n                return Math.LOG10E * Math.log(b);\n            }\n            return Math.log(b) / Math.log(a);\n        }\n    },\n    'FRAC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '小数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '整数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.trunc(a);\n        }\n    },\n    '乱数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.floor(Math.random() * a);\n        }\n    },\n    '乱数範囲': {\n        type: 'func',\n        josi: [['から'], ['までの', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\n        }\n    },\n    'SQRT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    '平方根': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    // @数値切上切捨丸め\n    'ROUND': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '四捨五入': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '小数点切上': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.ceil(a * base) / base;\n        }\n    },\n    '小数点切下': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.floor(a * base) / base;\n        }\n    },\n    '小数点四捨五入': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.round(a * base) / base;\n        }\n    },\n    'CEIL': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    '切上': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    'FLOOR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    },\n    '切捨': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    }\n};\n","export const options = {\n    delimiter: ',',\n    eol: '\\r\\n'\n};\nexport function resetEnv() {\n    options.delimiter = ',';\n    options.eol = '\\r\\n';\n}\nexport function parse(txt, delimiter = undefined) {\n    // delimiter\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    // check txt\n    txt = '' + txt + '\\n';\n    // convert CRLF to LF, and CR to LF\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\n    // trim right\n    txt = txt.replace(/\\s+$/, '') + '\\n';\n    // set pattern\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\n    const reToDelim = new RegExp(patToDelim);\n    // if value is number then convert to float\n    const convType = function (v) {\n        if (typeof (v) === 'string') {\n            if (v.search(/^[0-9.]+$/) >= 0) {\n                v = parseFloat(v); // convert number\n            }\n        }\n        return v;\n    };\n    // parse txt\n    const res = [];\n    let cells = [];\n    let c = '';\n    while (txt !== '') {\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\n        c = txt.charAt(0);\n        if (c === delimiter) {\n            txt = txt.substring(1);\n            cells.push('');\n            continue;\n        }\n        // second check LF (#7)\n        if (c === '\\n') {\n            cells.push('');\n            res.push(cells);\n            cells = [];\n            txt = txt.substring(1);\n            continue;\n        }\n        // trim white space\n        txt = txt.replace(/^\\s+/, '');\n        c = txt.charAt(0);\n        // no data\n        if (c === delimiter) {\n            console.log('delimiter');\n            cells.push('');\n            txt = txt.substring(delimiter.length);\n            continue;\n        }\n        // written using the dialect of Excel\n        if (c === '=' && txt.charAt(1) === '\"') {\n            txt = txt.substring(1);\n            continue;\n        }\n        // number or simple string\n        if (c !== '\"') { // number or simple str\n            const m = reToDelim.exec(txt);\n            if (!m) {\n                cells.push(convType(txt));\n                res.push(cells);\n                cells = [];\n                break;\n            }\n            if (m[2] === '\\n') {\n                cells.push(convType(m[1]));\n                res.push(cells);\n                cells = [];\n            }\n            else if (m[2] === delimiter) {\n                cells.push(convType(m[1]));\n            }\n            txt = txt.substring(m[0].length);\n            continue;\n        }\n        // \"\" ... blank data\n        if (txt.substring(0, 2) === '\"\"') {\n            cells.push('');\n            txt = txt.substring(2);\n            continue;\n        }\n        // \"...\"\n        let i = 1;\n        let s = '';\n        while (i < txt.length) {\n            const c1 = txt.charAt(i);\n            const c2 = txt.charAt(i + 1);\n            // console.log(\"@\" + c1 + c2);\n            // 2quote => 1quote char\n            if (c1 === '\"' && c2 === '\"') {\n                i += 2;\n                s += '\"';\n                continue;\n            }\n            if (c1 === '\"') {\n                i++;\n                if (c2 === delimiter) {\n                    i++;\n                    cells.push(convType(s));\n                    s = '';\n                    break;\n                }\n                if (c2 === '\\n') {\n                    i++;\n                    cells.push(convType(s));\n                    res.push(cells);\n                    cells = [];\n                    break;\n                }\n                // if (c2 === \" \" || c2 === \"\\t\") {\n                i++;\n                continue;\n            }\n            s += c1;\n            i++;\n        }\n        txt = txt.substr(i);\n    }\n    if (cells.length > 0)\n        res.push(cells);\n    return res;\n}\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\n    // check arguments\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    if (eol === undefined) {\n        eol = options.eol;\n    }\n    const valueConv = genValueConverter(delimiter);\n    if (ary === undefined)\n        return '';\n    let r = '';\n    for (let i = 0; i < ary.length; i++) {\n        const cells = ary[i];\n        if (cells === undefined) {\n            r += eol;\n            continue;\n        }\n        for (let j = 0; j < cells.length; j++) {\n            cells[j] = valueConv(cells[j]);\n        }\n        r += cells.join(delimiter) + eol;\n    }\n    // replace return code\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\n    return r;\n}\nexport function replaceEolMark(eol) {\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\n    eol = eol.replace(/\\r/g, '[CR]');\n    eol = eol.replace(/\\n/g, '[LF]');\n    return eol;\n}\nfunction genValueConverter(delimiter) {\n    return function (s) {\n        s = '' + s;\n        let fQuot = false;\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf(delimiter) >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf('\"') >= 0) {\n            fQuot = true;\n            s = s.replace(/\"/g, '\"\"');\n        }\n        if (fQuot)\n            s = '\"' + s + '\"';\n        return s;\n    };\n}\n","import { options, parse, stringify } from './nako_csv.mjs';\nconst PluginCSV = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 基本的に初期化不要\n        }\n    },\n    // @CSV操作\n    'CSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = ',';\n            return parse(str);\n        }\n    },\n    'TSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = '\\t';\n            return parse(str);\n        }\n    },\n    '表CSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = ',';\n            return stringify(a);\n        }\n    },\n    '表TSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = '\\t';\n            return stringify(a);\n        }\n    }\n};\nexport default PluginCSV;\n","export default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (sys.__promise == null) {\n                sys.__promise = {\n                    setLastPromise: function (promise) {\n                        sys.__v0['そ'] = promise;\n                        return promise;\n                    }\n                };\n            }\n        }\n    },\n    // @非同期処理の保証の定数\n    'そ': { type: 'const', value: '' },\n    // @非同期処理の保証\n    '動時': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (callback, sys) {\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\n                return callback(resolve, reject);\n            }));\n        },\n        return_none: false\n    },\n    '成功時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return callback(result);\n            }));\n        },\n        return_none: false\n    },\n    '処理時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (cbFunc, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return cbFunc(true, result, sys);\n            }, (reason) => {\n                sys.__v0['対象'] = reason;\n                return cbFunc(false, reason, sys);\n            }));\n        },\n        return_none: false\n    },\n    '失敗時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.catch((err) => {\n                sys.__v0['対象'] = err;\n                return callback(err);\n            }));\n        },\n        return_none: false\n    },\n    '終了時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.finally(() => {\n                return callback();\n            }));\n        },\n        return_none: false\n    },\n    '束': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (...args) {\n            const sys = args.pop();\n            return sys.__promise.setLastPromise(Promise.all(args));\n        },\n        return_none: false\n    }\n};\n","/**\n * file: plugin_test.js\n * テスト実行用プラグイン\n */\nexport default {\n    // @テスト\n    'ASSERT等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: true,\n        fn: function (a, b) {\n            if (a !== b) {\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\n            }\n            return true;\n        }\n    },\n    'テスト実行': {\n        type: 'func',\n        josi: [['と'], ['で']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    },\n    'テスト等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    }\n};\n","// parser / lexer\nimport { NakoParser } from './nako_parser3.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NakoPrepare } from './nako_prepare.mjs';\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\nimport { NakoGenASync } from './nako_gen_async.mjs';\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\nimport { convertDNCL } from './nako_from_dncl.mjs';\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\nimport { NakoLogger } from './nako_logger.mjs';\nimport { NakoGlobal } from './nako_global.mjs';\n// version info\nimport coreVersion from './nako_core_version.mjs';\n// basic plugins\nimport PluginSystem from './plugin_system.mjs';\nimport PluginMath from './plugin_math.mjs';\nimport PluginCSV from './plugin_csv.mjs';\nimport PluginPromise from './plugin_promise.mjs';\nimport PluginTest from './plugin_test.mjs';\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\n/** コンパイラ実行オプションを生成 */\nexport function newCompilerOptions(initObj = {}) {\n    if (typeof initObj !== 'object') {\n        initObj = {};\n    }\n    initObj.testOnly = initObj.testOnly || false;\n    initObj.resetEnv = initObj.resetEnv || false;\n    initObj.resetAll = initObj.resetAll || false;\n    initObj.preCode = initObj.preCode || '';\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\n    return initObj;\n}\n/** なでしこコンパイラ */\nexport class NakoCompiler {\n    /**\n     * @param {undefined | {'useBasicPlugin':true|false}} options\n     */\n    constructor(options = undefined) {\n        if (options === undefined) {\n            options = { useBasicPlugin: true };\n        }\n        // 環境のリセット\n        this.__varslist = [{}, {}, {}]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\n        this.__locals = {}; // ローカル変数\n        this.__self = this;\n        this.__vars = this.__varslist[2];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        // バージョンを設定\n        this.version = coreVersion.version;\n        this.coreVersion = coreVersion.version;\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\n        this.__globalObj = null;\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\n        this.pluginFunclist = {}; // プラグインで定義された関数\n        this.funclist = {}; // プラグインで定義された関数 + ユーザーが定義した関数\n        this.moduleExport = {};\n        this.pluginfiles = {}; // 取り込んだファイル一覧\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\n        this.nakoFuncList = {}; // __v1に配置するJavaScriptのコードで定義された関数\n        this.eventList = []; // 実行前に環境を変更するためのイベント\n        this.codeGenerateor = {}; // コードジェネレータ\n        this.debugOption = { useDebug: false, waitTime: 0 };\n        this.logger = new NakoLogger();\n        this.filename = 'main.nako3';\n        /**\n         * 取り込み文を置換するためのオブジェクト。\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\n         */\n        this.dependencies = {};\n        this.usedFuncs = new Set();\n        this.numFailures = 0;\n        if (options.useBasicPlugin) {\n            this.addBasicPlugins();\n        }\n        // 必要なオブジェクトを覚えておく\n        this.prepare = NakoPrepare.getInstance();\n        this.parser = new NakoParser(this.logger);\n        this.lexer = new NakoLexer(this.logger);\n        // 関数一覧を設定\n        this.lexer.setFuncList(this.funclist);\n        this.lexer.setModuleExport(this.moduleExport);\n    }\n    /** モジュール(名前空間)の一覧を取得する */\n    getModList() {\n        return this.lexer.modList;\n    }\n    getLogger() {\n        return this.logger;\n    }\n    getNakoFuncList() {\n        return this.nakoFuncList;\n    }\n    getNakoFunc(name) {\n        return this.nakoFuncList[name];\n    }\n    getPluginfiles() {\n        return this.pluginfiles;\n    }\n    /**\n     * 基本的なプラグインを追加する\n     */\n    addBasicPlugins() {\n        this.addPluginObject('PluginSystem', PluginSystem);\n        this.addPluginObject('PluginMath', PluginMath);\n        this.addPluginObject('PluginPromise', PluginPromise);\n        this.addPluginObject('PluginAssert', PluginTest);\n        this.addPluginObject('PluginCSV', PluginCSV);\n    }\n    /**\n     * loggerを新しいインスタンスで置き換える。\n     */\n    replaceLogger() {\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\n        return logger;\n    }\n    /**\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\n     * @param {Token[]} tokens rawtokenizeの出力\n     */\n    static listRequireStatements(tokens) {\n        const requireStatements = [];\n        for (let i = 0; i + 2 < tokens.length; i++) {\n            // not (string|string_ex) '取り込み'\n            if (!(tokens[i].type === 'not' &&\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\n                tokens[i + 2].value === '取込')) {\n                continue;\n            }\n            requireStatements.push({\n                ...tokens[i],\n                start: i,\n                end: i + 3,\n                value: tokens[i + 1].value + '',\n                firstToken: tokens[i],\n                lastToken: tokens[i + 2]\n            });\n            i += 2;\n        }\n        return requireStatements;\n    }\n    /**\n     * プログラムが依存するファイルを再帰的に取得する。\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\n     *\n     * @param {string} code\n     * @param {string} filename\n     * @param {string} preCode\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\n     *  - readNako3は指定されたファイルの中身を返す関数。\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\n     * @returns {Promise<unknown> | void}\n     * @protected\n     */\n    _loadDependencies(code, filename, preCode, tools) {\n        const dependencies = {};\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\n        /**\n         * @param {any} item\n         * @param {any} tasks\n         */\n        const loadJS = (item, tasks) => {\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\n            const obj = tools.readJs(item.filePath, item.firstToken);\n            tasks.push(obj.task.then((res) => {\n                const pluginFuncs = res();\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\n                dependencies[item.filePath].funclist = pluginFuncs;\n                dependencies[item.filePath].moduleExport = {};\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\n            }));\n        };\n        const loadNako3 = (item, tasks) => {\n            // nako3ならファイルを読んでdependenciesに保存する。\n            const content = tools.readNako3(item.filePath, item.firstToken);\n            const registerFile = (code) => {\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\n                // 「プラグイン名設定」を行う (#956)\n                const modName = NakoLexer.filenameToModName(item.filePath);\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\n                const tokens = this.rawtokenize(code, 0, item.filePath);\n                dependencies[item.filePath].tokens = tokens;\n                const funclist = {};\n                const moduleexport = {};\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist, moduleexport);\n                dependencies[item.filePath].funclist = funclist;\n                dependencies[item.filePath].moduleExport = moduleexport;\n                // 再帰\n                return loadRec(code, item.filePath, '');\n            };\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\n            tasks.push(content.task.then((res) => registerFile(res)));\n        };\n        const loadRec = (code, filename, preCode) => {\n            const tasks = [];\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\n            // パスを解決する\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\n            // 取り込み開始\n            for (const item of tagsResolvePath) {\n                // 2回目以降の読み込み\n                // eslint-disable-next-line no-prototype-builtins\n                if (dependencies.hasOwnProperty(item.filePath)) {\n                    dependencies[item.filePath].alias.add(item.value);\n                    continue;\n                }\n                // 初回の読み込み\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {}, moduleExport: {} };\n                if (item.type === 'js' || item.type === 'mjs') {\n                    loadJS(item, tasks);\n                }\n                else if (item.type === 'nako3') {\n                    loadNako3(item, tasks);\n                }\n                else {\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\n                }\n            }\n            if (tasks.length > 0) {\n                return Promise.all(tasks);\n            }\n            return undefined;\n        };\n        try {\n            const result = loadRec(code, filename, preCode);\n            // 非同期な場合のエラーハンドリング\n            if (result !== undefined) {\n                result.catch((err) => {\n                    // 読み込みに失敗したら処理を中断する\n                    this.logger.error(err.msg);\n                    this.numFailures++;\n                });\n            }\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\n            // loadDependencies() が並列実行されるときに正しく動作しない。\n            this.dependencies = dependencies;\n            return result;\n        }\n        catch (err) {\n            // 同期処理では素直に例外を投げる\n            this.logger.error('' + err);\n            throw err;\n        }\n    }\n    /**\n     * コードを単語に分割する\n     * @param code なでしこのプログラム\n     * @param line なでしこのプログラムの行番号\n     * @param filename\n     * @param preCode\n     * @returns トークンのリスト\n     */\n    rawtokenize(code, line, filename, preCode = '') {\n        if (!code.startsWith(preCode)) {\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\n        }\n        // 名前空間のモジュールリストに自身を追加\n        const modName = NakoLexer.filenameToModName(filename);\n        const modList = this.getModList();\n        if (modList.indexOf(modName) < 0) {\n            modList.unshift(modName);\n        }\n        // 全角半角の統一処理\n        const preprocessed = this.prepare.convert(code);\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        // トークン分割\n        let tokens;\n        try {\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\n        }\n        catch (err) {\n            if (!(err instanceof InternalLexerError)) {\n                throw err;\n            }\n            // エラー位置をソースコード上の位置に変換して返す\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\n        }\n        // DNCL ver2 (core #41)\n        tokens = convertDNCL2(tokens);\n        // DNCL ver1 (#1140)\n        tokens = convertDNCL(tokens);\n        // インデント構文を変換 #596\n        tokens = convertIndentSyntax(tokens);\n        // インラインインデントを変換 #1215\n        tokens = convertInlineIndent(tokens);\n        // ソースコード上の位置に変換\n        tokens = tokens.map((token) => {\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\n            let line = token.line;\n            let column = 0;\n            if (token.type === 'eol' && dest.endOffset !== null) {\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\n                // 行末のeolのlineは次の行の行数を表す必要がある。\n                const out = offsetToLineColumn.map(dest.endOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            else if (dest.startOffset !== null) {\n                const out = offsetToLineColumn.map(dest.startOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            return {\n                ...token,\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\n                rawJosi: token.josi\n            };\n        });\n        return tokens;\n    }\n    /**\n     * 単語の属性を構文解析に先立ち補正する\n     * @param {Token[]} tokens トークンのリスト\n     * @param {boolean} isFirst 最初の呼び出しかどうか\n     * @param {string} filename\n     * @returns コード (なでしこ)\n     */\n    converttoken(tokens, isFirst, filename) {\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\n        return tok;\n    }\n    /**\n     * 環境のリセット\n     * {NakoResetOption|undefined}\n     */\n    reset(options = undefined) {\n        if (!options || options.needToClearPlugin) {\n            // (メモ) #1245\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\n            this.clearPlugins();\n        }\n        /**\n         * なでしこのローカル変数をスタックで管理\n         * __varslist[0] プラグイン領域\n         * __varslist[1] なでしこグローバル領域\n         * __varslist[2] 最初のローカル変数 ( == __vars }\n         */\n        this.__varslist = [this.__varslist[0], {}, {}];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        this.__vars = this.__varslist[2];\n        this.__locals = {};\n        // プラグイン命令以外を削除する。\n        this.funclist = {};\n        for (const name of Object.keys(this.__v0)) {\n            const original = this.pluginFunclist[name];\n            if (!original) {\n                continue;\n            }\n            this.funclist[name] = JSON.parse(JSON.stringify(original));\n        }\n        this.lexer.setFuncList(this.funclist);\n        this.moduleExport = {};\n        this.lexer.setModuleExport(this.moduleExport);\n        this.logger.clear();\n    }\n    /**\n     * typeがcodeのトークンを単語に分割するための処理\n     * @param {string} code\n     * @param {number} line\n     * @param {string} filename\n     * @param {number | null} startOffset\n     * @returns\n     * @private\n     */\n    lexCodeToken(code, line, filename, startOffset) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, line, filename, '');\n        // 文字列内位置からファイル内位置へ変換\n        if (startOffset === null) {\n            for (const token of tokens) {\n                token.startOffset = undefined;\n                token.endOffset = undefined;\n            }\n        }\n        else {\n            for (const token of tokens) {\n                if (token.startOffset !== undefined) {\n                    token.startOffset += startOffset;\n                }\n                if (token.endOffset !== undefined) {\n                    token.endOffset += startOffset;\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, false, filename);\n        return { tokens, commentTokens };\n    }\n    /**\n     * 再帰的にrequire文を置換する。\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\n     * @param {TokenWithSourceMap[]} tokens\n     * @param {Set<string>} [includeGuard]\n     * @returns {Token[]} 削除された取り込み文のトークン\n     */\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\n            if (includeGuard.has(r.value)) {\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\n                continue;\n            }\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath === undefined) {\n                if (!r.firstToken) {\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\n                }\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\n            }\n            this.dependencies[filePath].addPluginFile();\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\n            includeGuard.add(r.value);\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\n        }\n        return deletedTokens;\n    }\n    /**\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\n     * @param {TokenWithSourceMap[]} tokens\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\n     */\n    removeRequireStatements(tokens) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath !== undefined) {\n                this.dependencies[filePath].addPluginFile();\n            }\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\n        }\n        return deletedTokens;\n    }\n    /** 字句解析を行う */\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\n        // require文を再帰的に置換する\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\n        for (const t of requireStatementTokens) {\n            if (t.type === 'word' || t.type === 'not') {\n                t.type = 'require';\n            }\n        }\n        if (requireStatementTokens.length >= 3) {\n            // modList を更新\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\n                let modName = requireStatementTokens[i + 1].value;\n                modName = NakoLexer.filenameToModName(modName);\n                if (this.lexer.modList.indexOf(modName) < 0) {\n                    this.lexer.modList.push(modName);\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, true, filename);\n        for (let i = 0; i < tokens.length; i++) {\n            if (tokens[i] && tokens[i].type === 'code') {\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\n                commentTokens.push(...children.commentTokens);\n                tokens.splice(i, 1, ...children.tokens);\n                i--;\n            }\n        }\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\n    }\n    /**\n     * コードをパースしてASTにする\n     */\n    parse(code, filename, preCode = '') {\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setFuncList(this.funclist);\n        this.parser.setFuncList(this.funclist);\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setModuleExport(this.moduleExport);\n        this.parser.setModuleExport(this.moduleExport);\n        // 字句解析を行う\n        const lexerOutput = this.lex(code, filename, preCode);\n        // 構文木を作成\n        let ast;\n        try {\n            this.parser.genMode = 'sync'; // set default\n            ast = this.parser.parse(lexerOutput.tokens, filename);\n        }\n        catch (err) {\n            if (typeof err.startOffset !== 'number') {\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\n            }\n            throw err;\n        }\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\n        return ast;\n    }\n    getUsedFuncs(ast) {\n        const queue = [ast];\n        this.usedFuncs = new Set();\n        while (queue.length > 0) {\n            const ast_ = queue.pop();\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\n            }\n        }\n        return this.deleteUnNakoFuncs();\n    }\n    getUsedAndDefFuncs(astQueue, blockQueue) {\n        while (blockQueue.length > 0) {\n            const block = blockQueue.pop();\n            if (block !== null && block !== undefined) {\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\n            }\n        }\n    }\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\n            this.usedFuncs.add(block.name);\n        }\n        astQueue.push([block, block.block]);\n        // eslint-disable-next-line prefer-spread\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\n    }\n    deleteUnNakoFuncs() {\n        for (const func of this.usedFuncs) {\n            if (!this.commandlist.has(func)) {\n                this.usedFuncs.delete(func);\n            }\n        }\n        return this.usedFuncs;\n    }\n    /**\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\n     * @param code コード (なでしこ)\n     * @param filename\n     * @param isTest テストかどうか\n     * @param preCode\n     */\n    compile(code, filename, isTest = false, preCode = '') {\n        const opt = newCompilerOptions();\n        opt.testOnly = isTest;\n        opt.preCode = preCode;\n        const res = this.compileFromCode(code, filename, opt);\n        return res.runtimeEnv;\n    }\n    /** parse & generate  */\n    compileFromCode(code, filename, options = undefined) {\n        if (filename === '') {\n            filename = 'main.nako3';\n        }\n        if (options === undefined) {\n            options = newCompilerOptions();\n        }\n        try {\n            if (options.resetEnv) {\n                this.reset();\n            }\n            if (options.resetAll) {\n                this.clearPlugins();\n            }\n            // onBeforeParse\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\n            // parse\n            const ast = this.parse(code, filename, options.preCode);\n            // onBeforeGenerate\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\n            // generate\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\n            // onAfterGenerate\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\n            return outCode;\n        }\n        catch (e) {\n            this.logger.error(e);\n            throw e;\n        }\n    }\n    /**\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\n     * @param ast\n     * @param opt テストかどうか\n     */\n    generateCode(ast, opt) {\n        // Select Code Generator #637\n        const mode = ast.genMode || '';\n        // normal mode\n        if (mode === 'sync') {\n            return generateJS(this, ast, opt);\n        }\n        // 非推奨の非同期モード #1164\n        if (mode === '非同期モード') {\n            this.logger.warn('『!非同期モード』の利用は非推奨です。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\n            return NakoGenASync.generate(this, ast, opt.isTest);\n        }\n        // その他のコードジェネレータ(PHPなど)\n        const genObj = this.codeGenerateor[mode];\n        if (!genObj) {\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\n        }\n        return genObj.generate(this, ast, opt.isTest);\n    }\n    /** コードジェネレータを追加する */\n    addCodeGenerator(mode, obj) {\n        this.codeGenerateor[mode] = obj;\n    }\n    /** (非推奨)\n     * @param code\n     * @param fname\n     * @param isReset\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    async _run(code, fname, isReset, isTest, preCode = '') {\n        const opts = newCompilerOptions({\n            resetEnv: isReset,\n            resetAll: isReset,\n            testOnly: isTest,\n            preCode\n        });\n        return this._runEx(code, fname, opts);\n    }\n    /** 各プラグインをリセットする */\n    clearPlugins() {\n        // 他に実行している「なでしこ」があればクリアする\n        this.__globals.forEach((sys) => {\n            sys.__varslist[0].forceClose = true; // core #56\n            sys.reset();\n        });\n        this.__globals = []; // clear\n    }\n    /**\n     * 環境を指定してJavaScriptのコードを実行する\n     * @param code JavaScriptのコード\n     * @param nakoGlobal 実行環境\n     */\n    evalJS(code, nakoGlobal) {\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\n        this.__globalObj.lastJSCode = code;\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\n        try {\n            // eslint-disable-next-line no-new-func\n            const f = new Function(nakoGlobal.lastJSCode);\n            f.apply(nakoGlobal);\n        }\n        catch (err) {\n            // なでしこコードのエラーは抑止してログにのみ記録\n            nakoGlobal.numFailures++;\n            this.getLogger().error(err);\n            throw err;\n        }\n        // 実行後に終了イベントを実行(finish)\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\n    }\n    /**\n     * 同期的になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runSync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    /**\n     * 非同期になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     */\n    async runAsync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    getNakoGlobal(options, gen, filename) {\n        // オプションを参照\n        let g = options.nakoGlobal;\n        if (!g) {\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\n                g = this.__globals[this.__globals.length - 1];\n            }\n            else {\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\n            }\n            // 名前空間を設定\n            g.__varslist[0]['名前空間'] = NakoLexer.filenameToModName(filename);\n        }\n        if (this.__globals.indexOf(g) < 0) {\n            this.__globals.push(g);\n        }\n        return g;\n    }\n    /**\n     * イベントを登録する\n     * @param eventName イベント名\n     * @param callback コールバック関数\n     */\n    addListener(eventName, callback) {\n        this.eventList.push({ eventName, callback });\n    }\n    /**\n     * テストを実行する\n     * @param code\n     * @param fname\n     * @param preCode\n     * @param testOnly\n     */\n    test(code, fname, preCode = '', testOnly = false) {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        options.testOnly = testOnly;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\n     * @param code\n     * @param fname\n     * @param [preCode]\n     * @deprecated 代わりに runAsync を使ってください。\n     */\n    run(code, fname = 'main.nako3', preCode = '') {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * JavaScriptのみで動くコードを取得する場合\n     * @param code\n     * @param filename\n     * @param opt\n     */\n    compileStandalone(code, filename, opt = null) {\n        if (opt === null) {\n            opt = new NakoGenOptions();\n        }\n        const ast = this.parse(code, filename);\n        return this.generateCode(ast, opt).standalone;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPlugin(po, persistent = true) {\n        // 変数のメタ情報を確認\n        const __v0 = this.__varslist[0];\n        if (__v0.meta === undefined) {\n            __v0.meta = {};\n        }\n        // プラグインの値をオブジェクトにコピー\n        for (const key in po) {\n            const v = po[key];\n            this.funclist[key] = v;\n            if (persistent) {\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\n            }\n            if (v.type === 'func') {\n                __v0[key] = v.fn;\n            }\n            else if (v.type === 'const' || v.type === 'var') {\n                __v0[key] = v.value;\n                __v0.meta[key] = {\n                    readonly: (v.type === 'const')\n                };\n            }\n            else {\n                console.error('[プラグイン追加エラー]', v);\n                throw new Error('プラグインの追加でエラー。');\n            }\n            // コマンドを登録するか?\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\n                continue;\n            }\n            this.commandlist.add(key);\n        }\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param objName オブジェクト名\n     * @param po 関数リスト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginObject(objName, po, persistent = true) {\n        this.__module[objName] = po;\n        this.pluginfiles[objName] = '*';\n        // 初期化をチェック\n        if (typeof (po['初期化']) === 'object') {\n            const def = po['初期化'];\n            delete po['初期化'];\n            const initKey = `!${objName}:初期化`;\n            po[initKey] = def;\n        }\n        // メタ情報をチェック (#1034)\n        if (po.meta && po.meta.value && typeof (po.meta) === 'object') {\n            const meta = po.meta;\n            delete po.meta;\n            const pluginName = meta.value.pluginName || objName;\n            const metaKey = `__${pluginName}`.replace('-', '__');\n            po[metaKey] = meta;\n        }\n        this.addPlugin(po, persistent);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param fpath ファイルパス\n     * @param po 登録するオブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginFile(objName, fpath, po, persistent = true) {\n        // Windowsのパスがあると、JSファイル書き出しでエラーになるので、置換する\n        if (objName.indexOf('\\\\') >= 0) {\n            objName = objName.replace(/\\\\/g, '/');\n        }\n        this.addPluginObject(objName, po, persistent);\n        if (this.pluginfiles[objName] === undefined) {\n            this.pluginfiles[objName] = fpath;\n        }\n    }\n    /**\n     * 関数を追加する\n     * @param {string} key 関数名\n     * @param {string[][]} josi 助詞\n     * @param {Function} fn 関数\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\n     */\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.funclist[key] = { josi, fn, type: 'func', return_none: returnNone, asyncFn, pure: true };\n        this.pluginFunclist[key] = cloneAsJSON(this.funclist[key]);\n        this.__varslist[0][key] = fn;\n    }\n    /** (非推奨) 互換性のため ... 関数を追加する\n     * @deprecated 代わりにaddFuncを使ってください\n    */\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.funclist[key];\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\n        // コンパイル\n        opts.preCode = preCode;\n        if (nakoGlobal) {\n            opts.nakoGlobal = nakoGlobal;\n        }\n        return this.runSync(code, filename, opts);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @param code\n     * @param fname\n     * @param opts\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runEx(code, fname, opts, preCode = '') {\n        return this._runEx(code, fname, opts, preCode);\n    }\n    /**\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\n     * @param code\n     * @param fname\n     * @param [preCode]\n     */\n    async runReset(code, fname = 'main.nako3', preCode = '') {\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\n        return this._runEx(code, fname, opts, preCode);\n    }\n}\n","// @ts-nocheck\nexport default {\n    // @色定数\n    '水色': { type: 'const', value: 'aqua' },\n    '紫色': { type: 'const', value: 'fuchsia' },\n    '緑色': { type: 'const', value: 'lime' },\n    '青色': { type: 'const', value: 'blue' },\n    '赤色': { type: 'const', value: 'red' },\n    '黄色': { type: 'const', value: 'yellow' },\n    '黒色': { type: 'const', value: 'black' },\n    '白色': { type: 'const', value: 'white' },\n    '茶色': { type: 'const', value: 'maroon' },\n    '灰色': { type: 'const', value: 'gray' },\n    '金色': { type: 'const', value: 'gold' },\n    '黄金色': { type: 'const', value: 'gold' },\n    '銀色': { type: 'const', value: 'silver' },\n    '白金色': { type: 'const', value: 'silver' },\n    'オリーブ色': { type: 'const', value: 'olive' },\n    'ベージュ色': { type: 'const', value: 'beige' },\n    'アリスブルー色': { type: 'const', value: 'aliceblue' },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['と'], ['で', 'の']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        },\n        return_none: false\n    },\n    '色混': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            if (!a) {\n                throw new Error('『色混ぜる』の引数には配列を指定します');\n            }\n            if (a.length < 3) {\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\n            }\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\n        },\n        return_none: false\n    }\n};\n","export default {\n    // @HTTPとAJAX\n    'HTTP取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信時': {\n        type: 'func',\n        josi: [['で'], ['から', 'を']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'AJAX送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\n                if (res.status !== 200) {\n                    return sys.__v0['AJAX:ONERROR'](res.status);\n                }\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text, sys);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        },\n        return_none: true\n    },\n    'AJAXオプション': { type: 'const', value: '' },\n    'AJAXオプション設定': {\n        type: 'func',\n        josi: [['に', 'へ', 'と']],\n        pure: true,\n        fn: function (option, sys) {\n            sys.__v0['AJAXオプション'] = option;\n        },\n        return_none: true\n    },\n    'AJAXオプションPOST設定': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            sys.__v0['AJAXオプション'] = options;\n        },\n        return_none: true\n    },\n    'AJAX失敗時': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['AJAX:ONERROR'] = callback;\n        }\n    },\n    'AJAXテキスト取得': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.text();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAX_JSON取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.json();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAXバイナリ取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const bin = await res.blob();\n            return bin;\n        },\n        return_none: false\n    },\n    // @GETとPOST\n    'GET送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'POST送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTフォーム送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTデータ生成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (params, sys) {\n            const flist = [];\n            for (const key in params) {\n                const v = params[key];\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\n                flist.push(kv);\n            }\n            return flist.join('&');\n        }\n    },\n    'POST送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: bodyData\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    'POSTフォーム送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const fd = new FormData();\n                for (const key in params) {\n                    fd.set(key, params[key]);\n                }\n                const options = {\n                    method: 'POST',\n                    body: fd\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    // @HTTPとAJAX(保証)\n    'AJAX保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'HTTP保障取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            return sys.__exec('AJAX保障送信', [url, sys]);\n        },\n        return_none: false\n    },\n    'POST保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'POSTフォーム保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'AJAX内容取得': {\n        type: 'func',\n        josi: [['から'], ['で']],\n        pure: true,\n        fn: function (res, type, sys) {\n            type = type.toString().toUpperCase();\n            if (type === 'TEXT' || type === 'テキスト') {\n                return res.text();\n            }\n            else if (type === 'JSON') {\n                return res.json();\n            }\n            else if (type === 'BLOB') {\n                return res.blob();\n            }\n            else if (type === 'ARRAY' || type === '配列') {\n                return res.arrayBuffer();\n            }\n            else if (type === 'BODY' || type === '本体') {\n                return res.body;\n            }\n            return res.body();\n        },\n        return_none: false\n    },\n    // @Blob\n    'BLOB作成': {\n        type: 'func',\n        josi: [['を', 'から'], ['で']],\n        pure: true,\n        fn: function (data, options) {\n            if (!(data instanceof Array)) {\n                data = [data];\n            }\n            return new Blob(data, options);\n        }\n    },\n    // @HTTPとAJAX(非推奨)\n    'AJAX逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve();\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'HTTP逐次取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.__exec('AJAX逐次送信', [url, sys]);\n        },\n        return_none: true\n    },\n    'POST逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'POSTフォーム逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\n// plugin_browser_in_worker.js\nimport PartBrowserColor from './plugin_browser_color.mjs';\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\nimport PartBrowserHtml from './plugin_browser_html.mjs';\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\nconst BrowserParts = [\n    PartBrowserColor,\n    PartBrowserAjax,\n    PartBrowserHtml,\n    PartBrowserWebsocket\n];\nconst PluginBrowserInWorker = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            /* eslint no-global-assign: 0 */\n            if (typeof self === 'undefined') {\n                self = {};\n            }\n            if (typeof navigator === 'undefined') {\n                navigator = {};\n            }\n            // 定数を初期化\n            sys.__v0['AJAX:ONERROR'] = (err) => { console.log(err); };\n            // オブジェクトを初期化\n            sys.__v0.SELF = self;\n            sys.__v0.NAVIGATOR = navigator;\n        }\n    }\n};\nBrowserParts.forEach((a) => {\n    const b = {};\n    Object.assign(b, a);\n    if (typeof b['初期化'] !== 'undefined') {\n        delete b['初期化'];\n    }\n    Object.assign(PluginBrowserInWorker, b);\n});\nexport default PluginBrowserInWorker;\n","// @ts-nocheck\nexport default {\n    // @HTML操作\n    'HTML変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (text) {\n            return String(text)\n                .replace(/&/g, '&amp;')\n                .replace(/>/g, '&gt;')\n                .replace(/</g, '&lt;');\n        }\n    },\n    // @クリップボード\n    'クリップボード設定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (text) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                await navigator.clipboard.writeText(text);\n                return;\n            }\n            // Clipboard APIをサポートしていない場合\n            const tmp = document.createElement('div');\n            const pre = document.createElement('pre');\n            pre.style.webkitUserSelect = 'auto';\n            pre.style.userSelect = 'auto';\n            tmp.appendChild(pre).textContent = text;\n            // 画面外へ表示する\n            tmp.style.position = 'fixed';\n            tmp.right = '200%';\n            document.body.appendChild(tmp);\n            document.getSelection().selectAllChildren(tmp);\n            document.execCommand('copy');\n            document.body.removeChild(tmp);\n        },\n        return_none: true\n    },\n    'クリップボード取得時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (f, sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                if (typeof (f) === 'string') {\n                    f = sys.__findFunc(f, 'クリップボード取得時');\n                }\n                const pm = navigator.clipboard.readText();\n                pm.then(text => {\n                    sys.__v0['対象'] = text;\n                    f(sys);\n                });\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    },\n    'クリップボード取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: async function (sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                const result = await navigator.clipboard.readText();\n                return result;\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @WebSocket\n    'WS接続完了時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONOPEN'] = callback;\n        },\n        return_none: true\n    },\n    'WS受信時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONMESSAGE'] = callback;\n        },\n        return_none: true\n    },\n    'WSエラー発生時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONERROR'] = callback;\n        },\n        return_none: true\n    },\n    'WS接続': {\n        type: 'func',\n        josi: [['に', 'へ', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = new WebSocket(s);\n            ws.onopen = () => {\n                const cbOpen = sys.__v0['WS:ONOPEN'];\n                if (cbOpen) {\n                    cbOpen(sys);\n                }\n            };\n            ws.onerror = (err) => {\n                const cbError = sys.__v0['WS:ONERROR'];\n                if (cbError) {\n                    cbError(err, sys);\n                }\n                console.log('WSエラー', err);\n            };\n            ws.onmessage = (e) => {\n                sys.__v0['対象'] = e.data;\n                const cbMsg = sys.__v0['WS:ONMESSAGE'];\n                if (cbMsg) {\n                    cbMsg(sys);\n                }\n            };\n            sys.__v0['WS:SOCKET'] = ws;\n            return ws;\n        }\n    },\n    'WS送信': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.send(s);\n        }\n    },\n    'WS切断': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.close();\n        }\n    }\n};\n","// @ts-nocheck\nconst PluginWorker = {\n  '初期化': {\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      sys.__v0.SELF = self || {}\n      sys.__v0['依頼主'] = self || {}\n    }\n  },\n\n  '対象イベント': { type: 'const', value: '' }, // @たいしょういべんと\n  '受信データ': { type: 'const', value: '' }, // @たいしょういべんと\n  'SELF': { type: 'const', value: '' }, // @SELF\n  '依頼主': { type: 'const', value: '' }, // @SELF\n\n  'NAKOワーカーデータ受信時': { // @無名関数Fでなでしこv3エンジンに対してワーカーメッセージによりデータを受信した時に実行するイベントを設定。『受信データ』に受信したデータM。『対象イベント』にイベント引数。 // @NAKOわーかーでーたじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      sys.__varslist[0]['PluginWorker:ondata'] = (data, e) => {\n        sys.__v0['受信データ'] = data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      }\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ受信時': { // @無名関数Fでselfに対してメッセージを受信した時に実行するイベントを設定。『受信データ』に受信したデータ。『対象イベント』にイベント引数。 // @わーかーめっせーじじゅしんしたとき\n    type: 'func',\n    josi: [['で']],\n    pure: false,\n    fn: function (func, sys) {\n      func = sys.__findVar(func, null) // 文字列指定なら関数に変換\n      self.onmessage = (e) => {\n        sys.__v0['受信データ'] = e.data\n        sys.__v0['対象イベント'] = e\n        return func(e, sys)\n      }\n    },\n    return_none: true\n  },\n  'NAKOワーカーデータ送信': { // @起動もとに固有の形式でデータを送信する。 // @NAKOわーかーでーたへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'data',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  'ワーカーメッセージ送信': { // @起動もとにメッセージを送信する。 // @わーかーめっせーじへんしん\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (msg, sys) {\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '表示': { // @メインスレッドに固有の形式で表示データを送信する。 // @ひょうじ\n    type: 'func',\n    josi: [['を']],\n    pure: true,\n    fn: function (data, sys) {\n      const msg = {\n        type: 'output',\n        data: data\n      }\n      postMessage(msg)\n    },\n    return_none: true\n  },\n  '終了': { // @ワーカーを終了する。 // @しゅうりょう\n    type: 'func',\n    josi: [],\n    pure: true,\n    fn: function (sys) {\n      close()\n    },\n    return_none: true\n  }\n}\n\n// module.exports = PluginWorker\nexport default PluginWorker\n\n\n","// nadesiko for web browser worker\n// wwnako3.js\nimport { NakoCompiler } from '../core/src/nako3.mjs'\nimport PluginBrowserInWorker from './plugin_browser_in_worker.mjs'\nimport PluginWorker from './plugin_worker.mjs'\n\nclass WebWorkerNakoCompiler extends NakoCompiler {\n  constructor () {\n    super()\n    this.__varslist[0]['ナデシコ種類'] = 'wwnako3'\n    this.__varslist[0]['PluginWorker:ondata'] = (data, event) => {\n      throw new Error('『NAKOワーカーデータ受信時』が呼ばれていません。')\n    }\n  }\n}\n\n// ブラウザワーカーなら navigator.nako3 になでしこを登録\n// eslint-disable-next-line no-undef\nif (typeof (navigator) === 'object' && self && self instanceof WorkerGlobalScope) {\n  /** @type {WebWorkerNakoCompiler} */\n  const nako3Compiler = navigator.nako3 = new WebWorkerNakoCompiler()\n  /** @type {WebWorkerNakoCompiler | import('./nako_global')} */\n  let nako3Global = nako3Compiler\n  \n  nako3Compiler.addPluginObject('PluginBrowserInWorker', PluginBrowserInWorker)\n  nako3Compiler.addPluginObject('PluginWorker', PluginWorker)\n\n  nako3Compiler.getLogger().addListener('error', function (obj) {\n    self.postMessage({\n      type: 'error',\n      data: obj\n    })\n  }, false)\n\n  self.onmessage = (event) => {\n    const data = event.data || { type: '', data: '' }\n    const type = data.type || ''\n    const value = data.data || ''\n    switch (type) {\n      case 'reset':\n        nako3Compiler.reset()\n        break\n      case 'close':\n        self.close()\n        break\n      case 'run':\n        nako3Global = nako3Global.runEx(value, '_webworker.nako3', { resetEnv: false, resetLog: false })\n        break\n      case 'trans':\n        value.forEach(o => {\n          if (o.type === 'func') {\n            nako3Compiler.nakoFuncList[o.name] = o.content.meta\n            nako3Compiler.funclist[o.name] = o.content.func\n            nako3Compiler.__varslist[1][o.name] = () => {}\n          } else if (o.type === 'val') {\n            nako3Compiler.__varslist[2][o.name] = o.content\n          }\n        })\n        break\n      case 'data':\n        if (nako3Global.__varslist[0]['PluginWorker:ondata']) {\n          nako3Global.__varslist[0]['PluginWorker:ondata'].apply(nako3Global, [value, event])\n        }\n        break\n    }\n  }\n}\n\n"],"names":["version","major","minor","patch","NakoError","Error","constructor","tag","msg","file","line","positionJa","undefined","super","replace","this","name","type","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","static","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","fname","push","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","Set","loopId","numAsyncFn","usedAsyncFn","flagLoop","__self","genMode","lastLineNo","varslistSet","__varslist","map","v","isFunction","names","Object","keys","readonly","varsSet","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","constPools","constPoolsTemplate","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","test","convLineno","node","forceUpdate","incLine","lineNoStr","lineDataJSON","JSON","stringify","debugCode","useDebug","messageAction","waitTime","varname","length","isValidIdentifier","indexOf","a","split","getFuncName","name2","convRequire","moduleName","value","getDefFuncCode","opt","code","getModList","nakoFuncCode","key","f","fn","asyncFn","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","josi","getFunc","registerFunction","ast","funcList","registFunc","block","blockList","Array","i","t","add","meta","isExport","initialNames","convGen","result","_convGen","isExpression","n","blocks","b","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convTikuji","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","findVar","has","isTop","js","genVar","position","res","lno","dispName","getLogger","warn","pv","getNakoFunc","commentSrc","String","addConstPool","getConstPoolsTemplateId","id","args","fileNo","msgNo","args2","arg","argNo","poolIndex","cmd","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","from","values","varnames","word","oldUsedAsyncFn","join","includes","pop","e","list","index","codeInit","codeArray","checkInit","arrayDefCode","convGenLoop","tmpflag","varName","idLoop","varI","kara","made","to","flagDown","inc","varFrom","varTo","sorePrefex","target","nameS","options","prev","cond","varId","cases","body","cvalue","cblock","expr","falseBlock","false_block","curName","errorCode","errorBlock","convFuncGetArgsCalcType","_funcName","_func","opts","nodeArgs","sore","getPluginList","r","__module","funcName","func","return_none","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","pure","localVars","str","indent","text","repeat","noCheckFuncs","argsCode","argsA","forEach","argStr","funcCall","right","left","OP_TBL","eq","noteq","gt","lt","gteq","lteq","and","or","shift_l","shift_r","shift_r0","op","operator","jsName","nodeName","vtype","vartype","mode","rf","errBlock","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","generateJS","gen","jsInit","funcID","Date","getTime","Math","floor","random","asyncMain","syncMain","trace","codeImportFiles","importNames","ff","initCode","runtimeEnv","standalone","replaceTemplateCode","coreVersion","template","pat","val","NakoCodeNop","NakoCodeLabel","NakoCodeEOL","NakoCodeJump","NakoCodeJumpIfTrue","NakoCodeJumpIfFalse","NakoCodeCall","NakoCodeCallObj","NakoCodeReturn","NakoCodeTry","NakoCodeCode","NakoCode","no","NakoGenASync","getVarsCode","nakoTestList","codeId","labelContinue","labelBreak","labels","toString","needToFixAddr","codes","filter","usedLabels","splice","s","addCode","addCodeStr","convFunc","codeStr","a2","row","c","makeLabel","uniqLabel","makeLabelDirectly","labelName","makeJump","label","makeJumpIfTrue","makeJumpIfFalse","labelBegin","labelEnd","labelIfFalse","loopVar","loopCount","labelCheck","o","isMumeiFunc","codeCall","size","labelInc","taisyo","targetArray","targetKeys","setTarget","_node","_isExpression","varValue","nextLabel","isJSFunc","arcCount","nameObj","vname","labelExcept","navigator","nako3","addCodeGenerator","josiList","tararebaJosiList","removeJosiList","tararebaMap","removeJosiMap","sort","josiRE","RegExp","pluginName","pluginVersion","nakoRuntime","nakoVersion","sys","isDebug","__v0","__namespaceList","__findVar","nameStr","def","__locals","varScope","modList","__modList","__modName","modName","gname","scope","__findFunc","parentFunc","__exec","params","f0","apply","__timeout","__interval","z2","__zero2","substring","__zero","keta","zeroS","__formatDate","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","parseFloat","__printPool","__parseFloatOrBigint","chk","constId","cp","msgArgs","fileStr","logger","__genMode","__stopAsync","PI","NaN","Infinity","send","isVariableJosi","console","log","aa","pow","reduce","p","__reisetu","src","eval","async","Function","obj","m","runEx","resetEnv","resetLog","out","resetAll","tf","performance","now","t1","forceClose","isNaN","Number","g","v2","fromCodePoint","fromCharCode","prototype","codePointAt","charCodeAt","ss","cnt","toUpperCase","toLowerCase","chr","zen1","han1","zen2","han2","c2","n2","charAt","j","parse","re","sa","global","z","ufunc","reverse","tmp","old","concat","x","y","max","min","nn","ns","ms","col","cols","rows","k","idx","nr","slice","sum","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","d","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","hasOwnProperty","call","pluginfiles","then","mod","assign","catch","w","default","encodeURIComponent","decodeURIComponent","url","kv","window","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","defineProperty","enumerable","get","prop","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","column","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","substr","ii","trimOkurigana","beginTag","closeTag","NakoLexer","funclist","moduleExport","setFuncList","listObj","setModuleExport","exportObj","replaceTokens","tokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","moduleexport","isFuncPointer","readArgs","funcPointer","funcPointers","already","prevToken","nextToken","kai","isMumei","defToken","funcNameToken","attr","splitStringEx","arr","end","comment","namespaceStack","modSelf","space","gname1","gfo1","gfo","exportDefault","fo","tokenType","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","sep","NakoParser","stackList","usedFuncs","stack","funcLevel","localvars","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","isReadingCalc","isExportDefault","isExportStack","init","reset","popStack","saveStack","loadStack","info","gnameSelf","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","debugMode","depth","typeName","debug","subNode","node2","table","not","startParser","ySentenceList","ySentence","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yTikuji","yRequire","yASyncMode","yDNCLMode","ySetGenMode","yExportDefault","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","ver","shift","yBlock","yDefFuncReadArgs","yDef","funcAttribute","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","tanbun","optionNode","tikuji","tugini","tuginiType","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","kurikaesu","incdec","vInc","vTo","vFrom","yReturn","yForEach","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","getVarName","ySadameru","sadameru","attrNode","createVar","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","funcObj","nullCount","valueCount","popArg","funcNode","isexport","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","yJSONArray","createVarList","checkArrayIndex","checkArrayReverse","ary","tmpReadingCalc","fCalc","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","yValueWord","yValueWordGetIndex","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","_instance","convertTable","Map","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","lastTokenInfo","newToken","templateToken","isSkipWord","joinTokenLines","lines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","findIndex","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","clear","addListener","callback","fromS","removeListener","l","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","pname","clearName","destroy","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__vars","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","getInstance","parser","lexer","replaceLogger","requireStatements","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","listRequireStatements","resolvePath","alias","startsWith","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","find","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","delete","compile","compileFromCode","eventName","outCode","generateCode","genObj","generate","isReset","_runEx","evalJS","getNakoGlobal","run","compileStandalone","persistent","fpath","returnNone","setFunc","method","fetch","status","option","headers","json","blob","bodyData","fd","FormData","set","flist","arrayBuffer","Blob","resolveCount","PluginBrowserInWorker","self","SELF","NAVIGATOR","clipboard","writeText","document","createElement","pre","webkitUserSelect","userSelect","appendChild","textContent","getSelection","selectAllChildren","execCommand","removeChild","readText","ws","WebSocket","onopen","cbOpen","onerror","cbError","onmessage","cbMsg","close","postMessage","WebWorkerNakoCompiler","event","WorkerGlobalScope","nako3Compiler","nako3Global"],"sourceRoot":""}