{"version":3,"file":"wnako3.js","mappings":"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","sources":["webpack://nadesiko3/./node_modules/hotkeys-js/dist/hotkeys.common.min.js","webpack://nadesiko3/./node_modules/hotkeys-js/index.js","webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./core/src/nako_indent.mjs","webpack://nadesiko3/./src/wnako3_editor.mjs","webpack://nadesiko3/./src/nako_version.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_system.mjs","webpack://nadesiko3/./src/plugin_browser_dialog.mjs","webpack://nadesiko3/./src/plugin_browser_location.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_dom_basic.mjs","webpack://nadesiko3/./src/plugin_browser_dom_event.mjs","webpack://nadesiko3/./src/plugin_browser_dom_parts.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_storage.mjs","webpack://nadesiko3/./src/plugin_browser_canvas.mjs","webpack://nadesiko3/./src/plugin_browser_geolocation.mjs","webpack://nadesiko3/./src/plugin_browser_speech.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_browser_audio.mjs","webpack://nadesiko3/./src/plugin_browser.mjs","webpack://nadesiko3/./src/plugin_browser_hotkey.mjs","webpack://nadesiko3/./src/plugin_browser_chart.mjs","webpack://nadesiko3/./src/plugin_browser_crypto.mjs","webpack://nadesiko3/./src/wnako3mod.mjs","webpack://nadesiko3/./src/wnako3.mjs"],"sourcesContent":["/*! hotkeys-js v3.13.7 | MIT © 2024 kenny wong <wowohoo@qq.com> https://jaywcjlove.github.io/hotkeys-js */\n\"use strict\";const isff=\"undefined\"!=typeof navigator&&0<navigator.userAgent.toLowerCase().indexOf(\"firefox\");function addEvent(e,t,n,o){e.addEventListener?e.addEventListener(t,n,o):e.attachEvent&&e.attachEvent(\"on\".concat(t),n)}function removeEvent(e,t,n,o){e.removeEventListener?e.removeEventListener(t,n,o):e.detachEvent&&e.detachEvent(\"on\".concat(t),n)}function getMods(t,e){var n=e.slice(0,e.length-1);for(let e=0;e<n.length;e++)n[e]=t[n[e].toLowerCase()];return n}function getKeys(e){var t=(e=(e=\"string\"!=typeof e?\"\":e).replace(/\\s/g,\"\")).split(\",\");let n=t.lastIndexOf(\"\");for(;0<=n;)t[n-1]+=\",\",t.splice(n,1),n=t.lastIndexOf(\"\");return t}function compareArray(e,t){var n=e.length<t.length?t:e,o=e.length<t.length?e:t;let s=!0;for(let e=0;e<n.length;e++)~o.indexOf(n[e])||(s=!1);return s}const _keyMap={backspace:8,\"\\u232b\":8,tab:9,clear:12,enter:13,\"\\u21a9\":13,return:13,esc:27,escape:27,space:32,left:37,up:38,right:39,down:40,del:46,delete:46,ins:45,insert:45,home:36,end:35,pageup:33,pagedown:34,capslock:20,num_0:96,num_1:97,num_2:98,num_3:99,num_4:100,num_5:101,num_6:102,num_7:103,num_8:104,num_9:105,num_multiply:106,num_add:107,num_enter:108,num_subtract:109,num_decimal:110,num_divide:111,\"\\u21ea\":20,\",\":188,\".\":190,\"/\":191,\"`\":192,\"-\":isff?173:189,\"=\":isff?61:187,\";\":isff?59:186,\"'\":222,\"[\":219,\"]\":221,\"\\\\\":220},_modifier={\"\\u21e7\":16,shift:16,\"\\u2325\":18,alt:18,option:18,\"\\u2303\":17,ctrl:17,control:17,\"\\u2318\":91,cmd:91,command:91},modifierMap={16:\"shiftKey\",18:\"altKey\",17:\"ctrlKey\",91:\"metaKey\",shiftKey:16,ctrlKey:17,altKey:18,metaKey:91},_mods={16:!1,18:!1,17:!1,91:!1},_handlers={};for(let e=1;e<20;e++)_keyMap[\"f\".concat(e)]=111+e;let _downKeys=[],winListendFocus=null,_scope=\"all\";const elementEventMap=new Map,code=e=>_keyMap[e.toLowerCase()]||_modifier[e.toLowerCase()]||e.toUpperCase().charCodeAt(0),getKey=t=>Object.keys(_keyMap).find(e=>_keyMap[e]===t),getModifier=t=>Object.keys(_modifier).find(e=>_modifier[e]===t);function setScope(e){_scope=e||\"all\"}function getScope(){return _scope||\"all\"}function getPressedKeyCodes(){return _downKeys.slice(0)}function getPressedKeyString(){return _downKeys.map(e=>getKey(e)||getModifier(e)||String.fromCharCode(e))}function getAllKeyCodes(){const s=[];return Object.keys(_handlers).forEach(e=>{_handlers[e].forEach(e=>{var{key:e,scope:t,mods:n,shortcut:o}=e;s.push({scope:t,shortcut:o,mods:n,keys:e.split(\"+\").map(e=>code(e))})})}),s}function filter(e){var e=e.target||e.srcElement,t=e[\"tagName\"];let n=!0;var o=\"INPUT\"===t&&![\"checkbox\",\"radio\",\"range\",\"button\",\"file\",\"reset\",\"submit\",\"color\"].includes(e.type);return n=!e.isContentEditable&&(!o&&\"TEXTAREA\"!==t&&\"SELECT\"!==t||e.readOnly)?n:!1}function isPressed(e){return\"string\"==typeof e&&(e=code(e)),!!~_downKeys.indexOf(e)}function deleteScope(e,t){var n;let o;e=e||getScope();for(const s in _handlers)if(Object.prototype.hasOwnProperty.call(_handlers,s))for(n=_handlers[s],o=0;o<n.length;)n[o].scope===e?n.splice(o,1).forEach(e=>{e=e.element;return removeKeyEvent(e)}):o++;getScope()===e&&setScope(t||\"all\")}function clearModifier(e){let t=e.keyCode||e.which||e.charCode;var n=_downKeys.indexOf(t);if(n<0||_downKeys.splice(n,1),e.key&&\"meta\"==e.key.toLowerCase()&&_downKeys.splice(0,_downKeys.length),(t=93!==t&&224!==t?t:91)in _mods){_mods[t]=!1;for(const o in _modifier)_modifier[o]===t&&(hotkeys[o]=!1)}}function unbind(n){if(void 0===n)Object.keys(_handlers).forEach(e=>{Array.isArray(_handlers[e])&&_handlers[e].forEach(e=>eachUnbind(e)),delete _handlers[e]}),removeKeyEvent(null);else if(Array.isArray(n))n.forEach(e=>{e.key&&eachUnbind(e)});else if(\"object\"==typeof n)n.key&&eachUnbind(n);else if(\"string\"==typeof n){for(var o=arguments.length,s=Array(1<o?o-1:0),r=1;r<o;r++)s[r-1]=arguments[r];let[e,t]=s;\"function\"==typeof e&&(t=e,e=\"\"),eachUnbind({key:n,scope:e,method:t,splitKey:\"+\"})}}const eachUnbind=e=>{let{key:t,scope:r,method:i,splitKey:d=\"+\"}=e;getKeys(t).forEach(e=>{var e=e.split(d),t=e.length,n=e[t-1],n=\"*\"===n?\"*\":code(n);if(_handlers[n]){r=r||getScope();const o=1<t?getMods(_modifier,e):[],s=[];_handlers[n]=_handlers[n].filter(e=>{var t=(!i||e.method===i)&&e.scope===r&&compareArray(e.mods,o);return t&&s.push(e.element),!t}),s.forEach(e=>removeKeyEvent(e))}})};function eventHandler(t,n,o,e){if(n.element===e){let e;if(n.scope===o||\"all\"===n.scope){e=0<n.mods.length;for(const s in _mods)Object.prototype.hasOwnProperty.call(_mods,s)&&(!_mods[s]&&~n.mods.indexOf(+s)||_mods[s]&&!~n.mods.indexOf(+s))&&(e=!1);(0!==n.mods.length||_mods[16]||_mods[18]||_mods[17]||_mods[91])&&!e&&\"*\"!==n.shortcut||(n.keys=[],n.keys=n.keys.concat(_downKeys),!1===n.method(t,n)&&(t.preventDefault?t.preventDefault():t.returnValue=!1,t.stopPropagation&&t.stopPropagation(),t.cancelBubble)&&(t.cancelBubble=!0))}}}function dispatch(n,t){var o=_handlers[\"*\"];let e=n.keyCode||n.which||n.charCode;if(hotkeys.filter.call(this,n)){if(93!==e&&224!==e||(e=91),~_downKeys.indexOf(e)||229===e||_downKeys.push(e),[\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\"].forEach(e=>{var t=modifierMap[e];n[e]&&!~_downKeys.indexOf(t)?_downKeys.push(t):!n[e]&&~_downKeys.indexOf(t)?_downKeys.splice(_downKeys.indexOf(t),1):\"metaKey\"!==e||!n[e]||3!==_downKeys.length||n.ctrlKey||n.shiftKey||n.altKey||(_downKeys=_downKeys.slice(_downKeys.indexOf(t)))}),e in _mods){_mods[e]=!0;for(const y in _modifier)_modifier[y]===e&&(hotkeys[y]=!0);if(!o)return}for(const p in _mods)Object.prototype.hasOwnProperty.call(_mods,p)&&(_mods[p]=n[modifierMap[p]]);n.getModifierState&&(!n.altKey||n.ctrlKey)&&n.getModifierState(\"AltGraph\")&&(~_downKeys.indexOf(17)||_downKeys.push(17),~_downKeys.indexOf(18)||_downKeys.push(18),_mods[17]=!0,_mods[18]=!0);var s=getScope();if(o)for(let e=0;e<o.length;e++)o[e].scope===s&&(\"keydown\"===n.type&&o[e].keydown||\"keyup\"===n.type&&o[e].keyup)&&eventHandler(n,o[e],s,t);if(e in _handlers){var r=_handlers[e],i=r.length;for(let e=0;e<i;e++)if((\"keydown\"===n.type&&r[e].keydown||\"keyup\"===n.type&&r[e].keyup)&&r[e].key){var d=r[e],a=d[\"splitKey\"],l=d.key.split(a),c=[];for(let e=0;e<l.length;e++)c.push(code(l[e]));c.sort().join(\"\")===_downKeys.sort().join(\"\")&&eventHandler(n,d,s,t)}}}}function hotkeys(e,t,n){_downKeys=[];var o,s=getKeys(e);let r=[],i=\"all\",d=document,a=0,l=!1,c=!0,y=\"+\",p=!1,f=!1;for(void 0===n&&\"function\"==typeof t&&(n=t),\"[object Object]\"===Object.prototype.toString.call(t)&&(t.scope&&(i=t.scope),t.element&&(d=t.element),t.keyup&&(l=t.keyup),void 0!==t.keydown&&(c=t.keydown),void 0!==t.capture&&(p=t.capture),\"string\"==typeof t.splitKey&&(y=t.splitKey),!0===t.single)&&(f=!0),\"string\"==typeof t&&(i=t),f&&unbind(e,i);a<s.length;a++)e=s[a].split(y),r=[],1<e.length&&(r=getMods(_modifier,e)),(e=\"*\"===(e=e[e.length-1])?\"*\":code(e))in _handlers||(_handlers[e]=[]),_handlers[e].push({keyup:l,keydown:c,scope:i,mods:r,shortcut:s[a],method:n,key:s[a],splitKey:y,element:d});void 0!==d&&window&&(elementEventMap.has(d)||(t=function(){return dispatch(0<arguments.length&&void 0!==arguments[0]?arguments[0]:window.event,d)},o=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:window.event;dispatch(e,d),clearModifier(e)},elementEventMap.set(d,{keydownListener:t,keyupListenr:o,capture:p}),addEvent(d,\"keydown\",t,p),addEvent(d,\"keyup\",o,p)),winListendFocus||(t=()=>{_downKeys=[]},winListendFocus={listener:t,capture:p},addEvent(window,\"focus\",t,p)))}function trigger(t){let n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"all\";Object.keys(_handlers).forEach(e=>{_handlers[e].filter(e=>e.scope===n&&e.shortcut===t).forEach(e=>{e&&e.method&&e.method()})})}function removeKeyEvent(t){var e,n,o,s=Object.values(_handlers).flat();s.findIndex(e=>{e=e.element;return e===t})<0&&({keydownListener:o,keyupListenr:n,capture:e}=elementEventMap.get(t)||{},o)&&n&&(removeEvent(t,\"keyup\",n,e),removeEvent(t,\"keydown\",o,e),elementEventMap.delete(t)),0<s.length&&0<elementEventMap.size||(Object.keys(elementEventMap).forEach(e=>{var{keydownListener:t,keyupListenr:n,capture:o}=elementEventMap.get(e)||{};t&&n&&(removeEvent(e,\"keyup\",n,o),removeEvent(e,\"keydown\",t,o),elementEventMap.delete(e))}),elementEventMap.clear(),Object.keys(_handlers).forEach(e=>delete _handlers[e]),winListendFocus&&({listener:n,capture:o}=winListendFocus,removeEvent(window,\"focus\",n,o),winListendFocus=null))}const _api={getPressedKeyString:getPressedKeyString,setScope:setScope,getScope:getScope,deleteScope:deleteScope,getPressedKeyCodes:getPressedKeyCodes,getAllKeyCodes:getAllKeyCodes,isPressed:isPressed,filter:filter,trigger:trigger,unbind:unbind,keyMap:_keyMap,modifier:_modifier,modifierMap:modifierMap};for(const L0 in _api)Object.prototype.hasOwnProperty.call(_api,L0)&&(hotkeys[L0]=_api[L0]);if(\"undefined\"!=typeof window){const M0=window.hotkeys;hotkeys.noConflict=e=>(e&&window.hotkeys===hotkeys&&(window.hotkeys=M0),hotkeys),window.hotkeys=hotkeys}module.exports=hotkeys;","if (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.min.js');\n} else {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.js');\n}\n","/**\n * なでしこ言語が投げる全てのエラーが継承するクラス\n */\nexport class NakoError extends Error {\n    constructor(tag, msg, file = undefined, line = undefined) {\n        // エラー位置を分かりやすく日本語に変換\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\n        // 親のErrorを呼ぶ\n        super(`[${tag}]${positionJa}${msg}`);\n        // エラーの種類を設定\n        this.name = 'NakoError';\n        this.type = 'NakoError';\n        this.tag = '[' + tag + ']';\n        this.positionJa = positionJa;\n        this.msg = msg;\n    }\n}\nexport class NakoIndentError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} line\n     * @param {string} file\n     */\n    constructor(msg, line, file) {\n        super('インデントエラー', msg, file, line);\n        this.type = 'NakoIndentError';\n        this.line = line;\n        this.file = file;\n    }\n}\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\nexport class InternalLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} preprocessedCodeStartOffset\n     * @param {number} preprocessedCodeEndOffset\n     * @param {number | undefined} [line]\n     * @param {string | undefined} [file]\n     */\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\n        super('字句解析エラー（内部エラー）', msg, file, line);\n        this.type = 'InternalLexerError';\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | null} startOffset\n     * @param {number | null} endOffset,\n     * @param {number | undefined} line\n     * @param {string | undefined} file\n     */\n    constructor(msg, startOffset, endOffset, line, file) {\n        super('字句解析エラー', msg, file, line);\n        this.type = 'NakoLexerError';\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoSyntaxError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {Ast} first\n     * @param {Ast} [last]\n     */\n    static fromNode(msg, first, last = undefined) {\n        if (!first) {\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\n        }\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\n        const endOffset = (last && typeof last.endOffset === 'number')\n            ? last.endOffset\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\n    }\n    /**\n     * @param {string} msg\n     * @param {number | undefined} line\n     * @param {number | undefined} startOffset\n     * @param {number | undefined} endOffset\n     * @param {string | undefined} file\n     */\n    constructor(msg, line, startOffset, endOffset, file) {\n        super('文法エラー', msg, file, line);\n        this.type = 'NakoSyntaxError';\n        this.file = file;\n        this.line = line;\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n    }\n}\nexport class NakoRuntimeError extends NakoError {\n    /**\n     * @param error エラー\n     * @param lineNo 発生行\n     */\n    constructor(error, lineNo) {\n        let msg = 'unknown';\n        if (typeof error === 'string') {\n            msg = error;\n        }\n        else {\n            if (error instanceof NakoRuntimeError) {\n                msg = error.msg;\n            }\n            else if (error instanceof NakoError) {\n                msg = error.msg;\n            }\n            else if (error instanceof Error) {\n                if (error.name === 'Error') {\n                    msg = error.message;\n                }\n                else {\n                    msg = `${error.name}: ${error.message}`;\n                }\n            }\n        }\n        // 行番号を表す文字列をパースする。\n        let line;\n        let file;\n        let matches;\n        if (lineNo === undefined) {\n            line = undefined;\n            file = undefined;\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = matches[2];\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = 'main.nako3';\n        }\n        else {\n            line = 0;\n            file = lineNo;\n        }\n        super('実行時エラー', msg, file, line);\n        this.type = 'NakoRuntimeError';\n        this.lineNo = lineNo;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoImportError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     */\n    constructor(msg, file, line) {\n        super('取り込みエラー', msg, file, line);\n        this.file = file;\n        this.line = line;\n    }\n}\n","/**\n * 助詞の一覧\n */\nexport const josiList = [\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\n];\n// 「もし」文で使う助詞\nexport const tararebaJosiList = [\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\n];\n// 意味のない助詞(削除する) #936 #939 #974\nexport const removeJosiList = [\n    'こと', 'である', 'です', 'します', 'でした'\n];\n/**\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\n */\nexport const tararebaMap = {};\ntararebaJosiList.forEach(josi => {\n    josiList.push(josi);\n    tararebaMap[josi] = true;\n});\n/**\n * 意味のない助詞(削除する)をマップに変換したもの\n */\nexport const removeJosiMap = {};\nremoveJosiList.forEach(josi => {\n    josiList.push(josi);\n    removeJosiMap[josi] = true;\n});\n// 「もの」構文 (#1614)\nconst josiListMono = [];\nfor (const jo of josiList) {\n    josiListMono.push('もの' + jo);\n    josiListMono.push(jo);\n}\n// 文字数の長い順に並び替え\njosiListMono.sort((a, b) => b.length - a.length);\n// 正規表現で助詞をマッチできるようにする\nconst pat = '^[\\\\t ]*(' + josiListMono.join('|') + ')';\nexport const josiRE = new RegExp(pat);\n","/** 予約語 */\nconst reserved = new Map([\n    ['回', '回'],\n    ['回繰返', '回'], // (#924)\n    ['間', '間'],\n    ['間繰返', '間'], // (#927)\n    ['繰返', '繰返'],\n    ['増繰返', '増繰返'], // (#1140)\n    ['減繰返', '減繰返'],\n    ['後判定', '後判定'], // (#1147)\n    ['反復', '反復'],\n    ['抜', '抜ける'],\n    ['続', '続ける'],\n    ['戻', '戻る'],\n    ['先', '先に'],\n    ['次', '次に'],\n    ['代入', '代入'],\n    ['実行速度優先', '実行速度優先'],\n    ['パフォーマンスモニタ適用', 'パフォーマンスモニタ適用'], // (#986)\n    ['定', '定める'],\n    ['逐次実行', '逐次実行'], // 廃止 #1611 ただし念のため残しておく\n    ['条件分岐', '条件分岐'],\n    ['増', '増'],\n    ['減', '減'],\n    ['変数', '変数'],\n    ['定数', '定数'],\n    ['エラー監視', 'エラー監視'], // 例外処理:エラーならばと対\n    ['エラー', 'エラー'],\n    ['それ', 'word'],\n    ['そう', 'word'], // 「それ」のエイリアス\n    ['関数', 'def_func'], // 無名関数の定義用\n    ['インデント構文', 'インデント構文'], // https://nadesi.com/v3/doc/go.php?949\n    ['非同期モード', '非同期モード'], // (#637)\n    ['DNCLモード', 'DNCLモード'], // (#1140)\n    ['モード設定', 'モード設定'], // (#1020)\n    ['取込', '取込'],\n    ['モジュール公開既定値', 'モジュール公開既定値']\n]);\nexport default reserved;\n","import { NakoRuntimeError } from './nako_errors.mjs';\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_system', // プラグインの名前\n            description: 'システム関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // システム変数の初期化\n            const system = sys;\n            sys.isDebug = false;\n            // システム変数にアクセスするための関数を定義\n            sys.__setSysVar = (name, value) => system.__v0.set(name, value);\n            sys.__getSysVar = (name, defaultValue = undefined) => {\n                const v = system.__v0.get(name);\n                if (v === undefined) {\n                    return defaultValue;\n                }\n                return v;\n            };\n            sys.__setSore = (v) => { sys.__vars.set('それ', v); return v; };\n            sys.__getSore = () => sys.__vars.get('それ');\n            sys.tags = {}; // タグ情報\n            // 言語バージョンを設定\n            sys.__setSysVar('ナデシコバージョン', sys.version);\n            sys.__setSysVar('ナデシコ言語バージョン', sys.coreVersion);\n            if (!system.__namespaceList) {\n                system.__namespaceList = [];\n            }\n            // なでしこの関数や変数を探して返す\n            sys.__findVar = function (nameStr, def) {\n                if (typeof nameStr === 'function') {\n                    return nameStr;\n                }\n                // ローカル変数を探す\n                const localVar = system.__locals.get(nameStr);\n                if (localVar) {\n                    return localVar;\n                }\n                // 名前空間が指定されている場合\n                if (nameStr.indexOf('__') >= 0) {\n                    for (let i = 2; i >= 0; i--) {\n                        const varScope = system.__varslist[i];\n                        const scopeValue = varScope.get(nameStr);\n                        if (scopeValue) {\n                            return scopeValue;\n                        }\n                    }\n                    return def;\n                }\n                // 名前空間を参照して関数・変数名を解決する\n                const modList = system.__modList ? system.__modList : [system.__modName];\n                for (const modName of modList) {\n                    const gname = modName + '__' + nameStr;\n                    for (let i = 2; i >= 0; i--) {\n                        const scope = system.__varslist[i];\n                        const scopeValue = scope.get(gname);\n                        if (scopeValue) {\n                            return scopeValue;\n                        }\n                    }\n                }\n                return def;\n            };\n            // 文字列から関数を探す\n            sys.__findFunc = function (nameStr, parentFunc) {\n                const f = sys.__findVar(nameStr);\n                if (typeof f === 'function') {\n                    return f;\n                }\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\n            };\n            // システム関数を実行\n            sys.__exec = function (func, params) {\n                // システム命令を優先\n                const f0 = sys.__getSysVar(func);\n                if (f0) {\n                    return f0.apply(this, params);\n                }\n                // グローバル・ローカルを探す\n                const f = sys.__findVar(func);\n                if (!f) {\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\n                }\n                return f.apply(this, params);\n            };\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\n            sys.__timeout = [];\n            sys.__interval = [];\n            // 日付処理などに使う\n            const z2 = sys.__zero2 = (s) => {\n                s = '00' + s;\n                return s.substring(s.length - 2);\n            };\n            sys.__zero = (s, keta) => {\n                let zeroS = '';\n                for (let i = 0; i < keta; i++) {\n                    zeroS += '0';\n                }\n                s = zeroS + s;\n                return s.substring(s.length - keta);\n            };\n            sys.__formatDate = (t) => {\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n            };\n            sys.__formatTime = (t) => {\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\n            };\n            sys.__formatDateTime = (t, fmt) => {\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\n                    return dateStr + ' ' + timeStr;\n                }\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\n                    return dateStr;\n                }\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\n                    return timeStr;\n                }\n                return dateStr + ' ' + timeStr;\n            };\n            sys.__str2date = (s) => {\n                // trim\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\n                // is unix time\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\n                    return new Date(parseFloat(s) * 1000);\n                }\n                // is time ?\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\n                    const t = new Date();\n                    const a = (s + ':0').split(':');\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\n                }\n                // replace splitter to '/'\n                s = s.replace(/[\\s:-]/g, '/');\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\n                const a = s.split('/');\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\n            };\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\n            sys.__printPool = '';\n            // 暗黙の型変換で足し算を行うときに使用。bigint はそのまま、その他は number に自動変換\n            sys.__parseFloatOrBigint = (v) => {\n                return (typeof v) === 'bigint' ? v : parseFloat(v);\n            };\n            // undefinedチェック\n            system.chk = (value, constId) => {\n                if (typeof value === 'undefined') {\n                    const cp = system.constPools[constId];\n                    const [msgNo, msgArgs, fileNo, lineNo] = cp;\n                    let msg = system.constPoolsTemplate[msgNo];\n                    for (const i in msgArgs) {\n                        const arg = system.constPoolsTemplate[msgArgs[i]];\n                        msg = msg.split(`$${i}`).join(arg);\n                    }\n                    const fileStr = system.constPoolsTemplate[fileNo];\n                    sys.logger.warn(msg, { file: fileStr, line: lineNo });\n                }\n                return value;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            if (sys.__exec) {\n                sys.__exec('全タイマー停止', [sys]);\n            }\n            sys.__setSysVar('表示ログ', '');\n        }\n    },\n    // @システム定数\n    'ナデシコバージョン': { type: 'const', value: '?' }, // @なでしこばーじょん\n    'ナデシコ言語バージョン': { type: 'const', value: '?' }, // @なでしこげんごばーじょん\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' }, // @なでしこえんじん\n    'ナデシコ種類': { type: 'const', value: '?' }, // @なでしこしゅるい\n    'はい': { type: 'const', value: 1 }, // @はい\n    'いいえ': { type: 'const', value: 0 }, // @いいえ\n    '真': { type: 'const', value: 1 }, // @しん\n    '偽': { type: 'const', value: 0 }, // @ぎ\n    '永遠': { type: 'const', value: 1 }, // @えいえん\n    'オン': { type: 'const', value: 1 }, // @おん\n    'オフ': { type: 'const', value: 0 }, // @おふ\n    '改行': { type: 'const', value: '\\n' }, // @かいぎょう\n    'タブ': { type: 'const', value: '\\t' }, // @たぶ\n    'カッコ': { type: 'const', value: '「' }, // @かっこ\n    'カッコ閉': { type: 'const', value: '」' }, // @かっことじ\n    '波カッコ': { type: 'const', value: '{' }, // @なみかっこ\n    '波カッコ閉': { type: 'const', value: '}' }, // @なみかっことじ\n    'OK': { type: 'const', value: true }, // @OK\n    'NG': { type: 'const', value: false }, // @NG\n    'キャンセル': { type: 'const', value: 0 }, // @きゃんせる\n    'TRUE': { type: 'const', value: true }, // @TRUE\n    'FALSE': { type: 'const', value: false }, // @FALSE\n    'true': { type: 'const', value: true }, // @true\n    'false': { type: 'const', value: false }, // @false\n    'PI': { type: 'const', value: Math.PI }, // @PI\n    '空': { type: 'const', value: '' }, // @から\n    'NULL': { type: 'const', value: null }, // @NULL\n    'undefined': { type: 'const', value: undefined }, // @undefined\n    '未定義': { type: 'const', value: undefined }, // @みていぎ\n    'エラーメッセージ': { type: 'const', value: '' }, // @えらーめっせーじ\n    '対象': { type: 'const', value: '' }, // @たいしょう\n    '対象キー': { type: 'const', value: '' }, // @たいしょうきー\n    '回数': { type: 'const', value: '' }, // @かいすう\n    'CR': { type: 'const', value: '\\r' }, // @CR\n    'LF': { type: 'const', value: '\\n' }, // @LF\n    '非数': { type: 'const', value: NaN }, // @ひすう\n    '無限大': { type: 'const', value: Infinity }, // @むげんだい\n    '空配列': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return [];\n        }\n    },\n    '空辞書': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空ハッシュ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空オブジェクト': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            return sys.__exec('空ハッシュ', [sys]);\n        }\n    },\n    // @標準出力\n    '表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            // 継続表示の一時プールを出力\n            s = sys.__printPool + s;\n            sys.__printPool = '';\n            //\n            sys.__setSysVar('表示ログ', sys.__getSysVar('表示ログ') + s + '\\n');\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    '継続表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__printPool += s;\n        },\n        return_none: true\n    },\n    '連続表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '連続無改行表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('継続表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '表示ログ': { type: 'const', value: '' }, // @ひょうじろぐ\n    '表示ログクリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__setSysVar('表示ログ', '');\n        },\n        return_none: true\n    },\n    '言': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    'コンソール表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s) {\n            console.log(s);\n        },\n        return_none: true\n    },\n    // @四則演算\n    '足': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        isVariableJosi: false,\n        pure: true,\n        fn: function (a, b) {\n            return a + b;\n        }\n    },\n    '引': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            return a - b;\n        }\n    },\n    '掛': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            // 数値の掛け算\n            if (typeof a === 'number') {\n                return a * b;\n            }\n            // 文字列の掛け算(文字列の繰り返し)\n            if (typeof a === 'string') {\n                let s = '';\n                for (let i = 0; i < parseInt(b); i++) {\n                    s += a;\n                }\n                return s;\n            }\n            // 配列の繰り返し\n            if (a instanceof Array) {\n                const aa = [];\n                for (let i = 0; i < parseInt(b); i++) {\n                    aa.push(...a);\n                }\n                return aa;\n            }\n            return a * b;\n        }\n    },\n    '倍': {\n        type: 'func',\n        josi: [['の', 'を'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a * b;\n        }\n    },\n    '割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a / b;\n        }\n    },\n    '割余': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a % b;\n        }\n    },\n    '偶数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 0);\n        }\n    },\n    '奇数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 1);\n        }\n    },\n    '二乗': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            return a * a;\n        }\n    },\n    'べき乗': {\n        type: 'func',\n        josi: [['の'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.pow(a, b);\n        }\n    },\n    '以上': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a >= b;\n        }\n    },\n    '以下': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a <= b;\n        }\n    },\n    '未満': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a < b;\n        }\n    },\n    '超': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a > b;\n        }\n    },\n    '等': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a === b;\n        }\n    },\n    '等無': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a !== b;\n        }\n    },\n    '一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA === jsonB;\n            }\n            return a === b;\n        }\n    },\n    '不一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA !== jsonB;\n            }\n            return a !== b;\n        }\n    },\n    '範囲内': {\n        type: 'func',\n        josi: [['が'], ['から'], ['の', 'までの']],\n        pure: true,\n        fn: function (v, a, b) {\n            return (a <= v) && (v <= b);\n        }\n    },\n    '連続加算': {\n        type: 'func',\n        josi: [['を'], ['に', 'と']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (b, ...a) {\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\n            a.push(b);\n            return a.reduce((p, c) => p + c);\n        }\n    },\n    // @敬語\n    'ください': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'お願': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'です': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    '拝啓': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu = 0;\n        },\n        return_none: true\n    },\n    '敬具': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu += 100; // bonus point\n        },\n        return_none: true\n    },\n    '礼節レベル取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            return sys.__reisetu;\n        }\n    },\n    // @特殊命令\n    'JS実行': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fn: function (src, sys) {\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\n            // https://github.com/kujirahand/nadesiko3/issues/1237\n            return eval(src); // eslint-disable-line\n        }\n    },\n    'JSオブジェクト取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (name, sys) {\n            return sys.__findVar(name, null);\n        }\n    },\n    'JS関数実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        fn: function (name, args) {\n            // nameが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof name === 'string') {\n                name = eval(name);\n            }\n            if (typeof name !== 'function') {\n                throw new Error('JS関数取得で実行できません。');\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            // eslint-disable-next-line prefer-spread\n            return name.apply(null, args);\n        }\n    },\n    'ASYNC': {\n        type: 'func',\n        josi: [],\n        asyncFn: true,\n        pure: true,\n        fn: async function () {\n            // empty\n        },\n        return_none: true\n    },\n    'AWAIT実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (f, args, sys) {\n            // nameが文字列ならevalして関数を得る\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, 'AWAIT実行');\n            }\n            if (!(f instanceof Function)) {\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\n            }\n            // 実行\n            return await f(...args);\n        }\n    },\n    'JSメソッド実行': {\n        type: 'func',\n        josi: [['の'], ['を'], ['で']],\n        fn: function (obj, m, args) {\n            // objが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof obj === 'string') {\n                obj = eval(obj);\n            }\n            if (typeof obj !== 'object') {\n                throw new Error('JSオブジェクトを取得できませんでした。');\n            }\n            // method を求める\n            if (typeof m !== 'function') {\n                m = obj[m];\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            return m.apply(obj, args);\n        }\n    },\n    'ナデシコ': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: false,\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\n            }\n            sys.__setSysVar('表示ログ', '');\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\n            const outLog = sys.__getSysVar('表示ログ') + '';\n            if (outLog) {\n                sys.logger.trace(outLog);\n            }\n            return outLog;\n        }\n    },\n    'ナデシコ続': {\n        type: 'func',\n        josi: [['を', 'で']],\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\n            }\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\n            const out = sys.__getSysVar('表示ログ') + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    '実行': {\n        type: 'func',\n        josi: [['を', 'に', 'で']],\n        pure: false,\n        fn: function (f, sys) {\n            // #938 の規則に従って処理\n            // 引数が関数なら実行\n            if (typeof f === 'function') {\n                return f(sys);\n            }\n            // 文字列なら関数に変換できるか判定して実行\n            if (typeof f === 'string') {\n                const tf = sys.__findFunc(f, '実行');\n                if (typeof tf === 'function') {\n                    return tf(sys);\n                }\n            }\n            // それ以外ならそのまま値を返す\n            return f;\n        }\n    },\n    '実行時間計測': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (f, sys) {\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '実行時間計測');\n            }\n            //\n            if (performance && performance.now) {\n                const t1 = performance.now();\n                f(sys);\n                const t2 = performance.now();\n                return (t2 - t1);\n            }\n            else {\n                const t1 = Date.now();\n                f(sys);\n                const t2 = Date.now();\n                return (t2 - t1);\n            }\n        }\n    },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            sys.__setSysVar('__forceClose', true);\n            if (!sys.__getSysVar('__useDebug')) {\n                throw new Error('__終わる__');\n            }\n        }\n    },\n    // @型変換\n    '変数型確認': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    'TYPEOF': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    '文字列変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    'TOSTR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    '整数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'TOINT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    '実数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'TOFLOAT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'INT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'FLOAT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'NAN判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return isNaN(v);\n        }\n    },\n    '非数判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n            return Number.isNaN(v);\n        }\n    },\n    'HEX': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return parseInt(a).toString(16);\n        }\n    },\n    '進数変換': {\n        type: 'func',\n        josi: [['を', 'の'], ['']],\n        pure: true,\n        fn: function (v, n) {\n            return parseInt(v).toString(n);\n        }\n    },\n    '二進': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v).toString(2);\n        }\n    },\n    '二進表示': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v, sys) {\n            const s = parseInt(v).toString(2);\n            sys.__exec('表示', [s, sys]);\n        }\n    },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['の'], ['で']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + (parseInt('' + v).toString(16));\n                return v2.substring(v2.length - 2, v2.length);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        }\n    },\n    // @論理演算\n    '論理OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a || b);\n        }\n    },\n    '論理AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a && b);\n        }\n    },\n    '論理NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (!v) ? 1 : 0;\n        }\n    },\n    // @ビット演算\n    'OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a | b);\n        }\n    },\n    'AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a & b);\n        }\n    },\n    'XOR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a ^ b);\n        }\n    },\n    'NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (~v);\n        }\n    },\n    'SHIFT_L': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a << b);\n        }\n    },\n    'SHIFT_R': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >> b);\n        }\n    },\n    'SHIFT_UR': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >>> b);\n        }\n    },\n    // @文字列処理\n    '文字数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).length;\n            }\n            return Array.from(v).length;\n        }\n    },\n    '何文字目': {\n        type: 'func',\n        josi: [['で', 'の'], ['が']],\n        pure: true,\n        fn: function (s, a) {\n            return String(s).indexOf(a) + 1;\n        }\n    },\n    'CHR': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.fromCodePoint) {\n                return String.fromCharCode(v);\n            }\n            return String.fromCodePoint(v);\n        }\n    },\n    'ASC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.prototype.codePointAt) {\n                return String(v).charCodeAt(0);\n            }\n            return String(v).codePointAt(0);\n        }\n    },\n    '文字挿入': {\n        type: 'func',\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, i, a) {\n            if (i <= 0) {\n                i = 1;\n            }\n            const ss = String(s);\n            const mae = ss.substring(0, i - 1);\n            const usi = ss.substring(i - 1);\n            return mae + a + usi;\n        }\n    },\n    '文字検索': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, b) {\n            let str = String(s);\n            str = str.substring(a);\n            const res = str.indexOf(b);\n            if (res === -1) {\n                return 0;\n            }\n            return res + 1 + a;\n        }\n    },\n    '追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a);\n        }\n    },\n    '一行追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a) + '\\n';\n        }\n    },\n    '文字列分解': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).split('');\n            }\n            return Array.from(v);\n        }\n    },\n    'リフレイン': {\n        type: 'func',\n        josi: [['を', 'の'], ['で']],\n        pure: true,\n        fn: function (v, cnt) {\n            let s = '';\n            for (let i = 0; i < cnt; i++) {\n                s += String(v);\n            }\n            return s;\n        }\n    },\n    '出現回数': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            return s.split(a).length - 1;\n        }\n    },\n    'MID': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    '文字抜出': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を', '']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    'LEFT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    '文字左部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    'RIGHT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '文字右部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '区切': {\n        type: 'func',\n        josi: [['の', 'を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            return ('' + s).split('' + a);\n        }\n    },\n    '文字列分割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            const i = s.indexOf(a);\n            if (i < 0) {\n                return [s];\n            }\n            return [s.substring(0, i), s.substring(i + a.length)];\n        }\n    },\n    '切取': {\n        type: 'func',\n        josi: [['から', 'の'], ['まで', 'を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            s = String(s);\n            const i = s.indexOf(a);\n            if (i < 0) {\n                sys.__setSysVar('対象', '');\n                return s;\n            }\n            sys.__setSysVar('対象', s.substring(i + a.length));\n            return s.substring(0, i);\n        }\n    },\n    '文字削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\n        pure: true,\n        fn: function (s, a, b) {\n            s = '' + s;\n            const mae = s.substring(0, a - 1);\n            const usi = s.substring((a - 1 + b));\n            return mae + usi;\n        }\n    },\n    // @置換・トリム\n    '置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            return String(s).split(a).join(b);\n        }\n    },\n    '単置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            // replaceは最初の一度だけ置換する\n            return String(s).replace(a, b);\n        }\n    },\n    'トリム': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    '空白除去': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    // @文字変換\n    '大文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toUpperCase();\n        }\n    },\n    '小文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toLowerCase();\n        }\n    },\n    '平仮名変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const kanaToHira = (str) => {\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\n                    const chr = m.charCodeAt(0) - 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return kanaToHira('' + s);\n        }\n    },\n    'カタカナ変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const hiraToKana = (str) => {\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\n                    const chr = m.charCodeAt(0) + 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return hiraToKana('' + s);\n        }\n    },\n    '英数全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    '英数記号全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数記号半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    'カタカナ全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__getSysVar('全角カナ一覧');\n            const han1 = sys.__getSysVar('半角カナ一覧');\n            const zen2 = sys.__getSysVar('全角カナ濁音一覧');\n            const han2 = sys.__getSysVar('半角カナ濁音一覧');\n            let str = '';\n            let i = 0;\n            while (i < s.length) {\n                // 濁点の変換\n                const c2 = s.substring(i, i + 2);\n                const n2 = han2.indexOf(c2);\n                if (n2 >= 0) {\n                    str += zen2.charAt(n2 / 2);\n                    i += 2;\n                    continue;\n                }\n                // 濁点以外の変換\n                const c = s.charAt(i);\n                const n = han1.indexOf(c);\n                if (n >= 0) {\n                    str += zen1.charAt(n);\n                    i++;\n                    continue;\n                }\n                str += c;\n                i++;\n            }\n            return str;\n        }\n    },\n    'カタカナ半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__getSysVar('全角カナ一覧');\n            const han1 = sys.__getSysVar('半角カナ一覧');\n            const zen2 = sys.__getSysVar('全角カナ濁音一覧');\n            const han2 = sys.__getSysVar('半角カナ濁音一覧');\n            return s.split('').map((c) => {\n                const i = zen1.indexOf(c);\n                if (i >= 0) {\n                    return han1.charAt(i);\n                }\n                const j = zen2.indexOf(c);\n                if (j >= 0) {\n                    return han2.substring(j * 2, j * 2 + 2);\n                }\n                return c;\n            }).join('');\n        }\n    },\n    '全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\n            result = sys.__exec('英数記号全角変換', [result, sys]);\n            return result;\n        }\n    },\n    '半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\n            result = sys.__exec('英数記号半角変換', [result, sys]);\n            return result;\n        }\n    },\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' }, // @ぜんかくかないちらん\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' }, // @ぜんかくかなだくおんいちらん\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' }, // @はんかくかないちらん\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' }, // @はんかくかなだくおんいちらん\n    // @JSON\n    'JSONエンコード': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v);\n        }\n    },\n    'JSONエンコード整形': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v, null, 2);\n        }\n    },\n    'JSONデコード': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (s) {\n            return JSON.parse(s);\n        }\n    },\n    // @正規表現\n    '正規表現マッチ': {\n        type: 'func',\n        josi: [['を', 'が'], ['で', 'に']],\n        pure: true,\n        fn: function (a, b, sys) {\n            let re;\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\n            // パターンがない場合\n            if (f === null) {\n                re = new RegExp(b, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            const sa = sys.__getSysVar('抽出文字列');\n            sa.splice(0, sa.length); // clear\n            const m = String(a).match(re);\n            let result = m;\n            if (re.global) {\n                // no groups\n            }\n            else if (m) {\n                // has group?\n                if (m.length > 0) {\n                    result = m[0];\n                    for (let i = 1; i < m.length; i++) {\n                        sa[i - 1] = m[i];\n                    }\n                }\n            }\n            return result;\n        }\n    },\n    '抽出文字列': { type: 'const', value: [] }, // @ちゅうしゅつもじれつ\n    '正規表現置換': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).replace(re, b);\n        }\n    },\n    '正規表現区切': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).split(re);\n        }\n    },\n    // @指定形式\n    '通貨形式': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        }\n    },\n    'ゼロ埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = '0';\n            for (let i = 0; i < a; i++) {\n                z += '0';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    '空白埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = ' ';\n            for (let i = 0; i < a; i++) {\n                z += ' ';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    // @文字種類\n    'かなか判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x3041 && c <= 0x309F);\n        }\n    },\n    'カタカナ判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x30A1 && c <= 0x30FA);\n        }\n    },\n    '数字判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charAt(0);\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\n        }\n    },\n    '数列判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\n            return String(s).match(checkerRE) !== null;\n        }\n    },\n    // @配列操作\n    '配列結合': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, s) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.join('' + s);\n            }\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\n            return a2.join('' + s);\n        }\n    },\n    '配列検索': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, s) {\n            if (a instanceof Array) {\n                return a.indexOf(s);\n            } // 配列ならOK\n            return -1;\n        }\n    },\n    '配列要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.length;\n            } // 配列ならOK\n            if (a instanceof Object) {\n                return Object.keys(a).length;\n            } // オブジェクト\n            if (typeof a === 'string') {\n                return String(a).length;\n            } // 文字列\n            return 1;\n        }\n    },\n    '要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    'LEN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    '配列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (a instanceof Array) {\n                return a.splice(i, 0, s);\n            } // 配列ならOK\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列一括挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, b) {\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\n                for (let j = 0; j < b.length; j++) {\n                    a.splice(i + j, 0, b[j]);\n                }\n                return a;\n            }\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.sort();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列数値変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                for (let i = 0; i < a.length; i++) {\n                    a[i] = parseFloat(a[i]);\n                }\n                return a;\n            }\n            throw new Error('『配列数値変換』で配列以外が指定されました。');\n        }\n    },\n    '配列数値ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.sort((a, b) => {\n                    return parseFloat(a) - parseFloat(b);\n                });\n            }\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列カスタムソート': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: false,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\n            }\n            if (a instanceof Array) {\n                return a.sort(ufunc);\n            }\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\n        }\n    },\n    '配列逆順': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.reverse();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列シャッフル': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) { // 配列ならOK\n                for (let i = a.length - 1; i > 0; i--) {\n                    const r = Math.floor(Math.random() * (i + 1));\n                    const tmp = a[i];\n                    a[i] = a[r];\n                    a[r] = tmp;\n                }\n                return a;\n            }\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\n        }\n    },\n    '配列削除': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: false,\n        fn: function (a, i, sys) {\n            return sys.__exec('配列切取', [a, i, sys]);\n        }\n    },\n    '配列切取': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            // 配列変数のとき\n            if (a instanceof Array) {\n                const b = a.splice(i, 1);\n                if (b instanceof Array) {\n                    return b[0];\n                } // 切り取った戻り値は必ずArrayになるので。\n                return null;\n            }\n            // 辞書型変数のとき\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\n                if (a[i]) {\n                    const old = a[i];\n                    delete a[i];\n                    return old;\n                }\n                return undefined;\n            }\n            throw new Error('『配列切取』で配列以外を指定。');\n        }\n    },\n    '配列取出': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, i, cnt) {\n            if (a instanceof Array) {\n                return a.splice(i, cnt);\n            }\n            throw new Error('『配列取出』で配列以外を指定。');\n        }\n    },\n    '配列ポップ': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.pop();\n            }\n            throw new Error('『配列ポップ』で配列以外の処理。');\n        }\n    },\n    '配列プッシュ': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b, sys) {\n            return sys.__exec('配列追加', [a, b, sys]);\n        }\n    },\n    '配列追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) { // 配列ならOK\n                a.push(b);\n                return a;\n            }\n            throw new Error('『配列追加』で配列以外の処理。');\n        }\n    },\n    '配列複製': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列足': {\n        type: 'func',\n        josi: [['に', 'へ', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) {\n                return a.concat(b);\n            }\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列最大値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.max(x, y));\n        }\n    },\n    '配列最小値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.min(x, y));\n        }\n    },\n    '配列合計': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                let v = 0;\n                a.forEach((n) => {\n                    const nn = parseFloat(n);\n                    if (isNaN(nn)) {\n                        return;\n                    }\n                    v += nn;\n                });\n                return v;\n            }\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\n        }\n    },\n    '配列入替': {\n        type: 'func',\n        josi: [['の'], ['と'], ['を']],\n        pure: true,\n        fn: function (a, i, j) {\n            if (!(a instanceof Array)) {\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\n            }\n            const tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n            return a;\n        }\n    },\n    '配列連番作成': {\n        type: 'func',\n        josi: [['から'], ['までの', 'まで', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = a; i <= b; i++) {\n                result.push(i);\n            }\n            return result;\n        }\n    },\n    '配列要素作成': {\n        type: 'func',\n        josi: [['を'], ['だけ']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = 0; i < b; i++) {\n                result.push(a);\n            }\n            return result;\n        }\n    },\n    '配列関数適用': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列関数適用');\n            }\n            const result = [];\n            for (const e of a) {\n                result.push(ufunc(e));\n            }\n            return result;\n        }\n    },\n    '配列マップ': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            return sys.__exec('配列関数適用', [f, a, sys]);\n        }\n    },\n    '配列フィルタ': {\n        type: 'func',\n        josi: [['で', 'の'], ['を', 'について']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列フィルタ');\n            }\n            const result = [];\n            for (const e of a) {\n                if (ufunc(e)) {\n                    result.push(e);\n                }\n            }\n            return result;\n        }\n    },\n    // @二次元配列処理\n    '表ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                if (ns === ms) {\n                    return 0;\n                }\n                else if (ns < ms) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n            });\n            return a;\n        }\n    },\n    '表数値ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                return ns - ms;\n            });\n            return a;\n        }\n    },\n    '表ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\n        }\n    },\n    '表完全一致ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => row[no] === s);\n        }\n    },\n    '表検索': {\n        type: 'func',\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, row, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表検索』には配列を指定する必要があります。');\n            }\n            for (let i = row; i < a.length; i++) {\n                if (a[i][col] === s) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表列数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列数』には配列を指定する必要があります。');\n            }\n            let cols = 1;\n            for (let i = 0; i < a.length; i++) {\n                if (a[i].length > cols) {\n                    cols = a[i].length;\n                }\n            }\n            return cols;\n        }\n    },\n    '表行数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行数』には配列を指定する必要があります。');\n            }\n            return a.length;\n        }\n    },\n    '表行列交換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\n                }\n            }\n            return res;\n        }\n    },\n    '表右回転': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表右回転』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = a[rows - c - 1][r];\n                }\n            }\n            return res;\n        }\n    },\n    '表重複削除': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            const keys = {};\n            for (let n = 0; n < a.length; n++) {\n                const k = a[n][i];\n                if (undefined === keys[k]) {\n                    keys[k] = true;\n                    res.push(a[n]);\n                }\n            }\n            return res;\n        }\n    },\n    '表列取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列取得』には配列を指定する必要があります。');\n            }\n            const res = a.map(row => row[i]);\n            return res;\n        }\n    },\n    '表列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row, idx) => {\n                let nr = [];\n                if (i > 0) {\n                    nr = nr.concat(row.slice(0, i));\n                }\n                nr.push(s[idx]);\n                nr = nr.concat(row.slice(i));\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列削除': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row) => {\n                const nr = row.slice(0);\n                nr.splice(i, 1);\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列合計': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列合計』には配列を指定する必要があります。');\n            }\n            let sum = 0;\n            a.forEach((row) => { sum += row[i]; });\n            return sum;\n        }\n    },\n    '表曖昧検索': {\n        type: 'func',\n        josi: [['の'], ['から'], ['で'], ['を']],\n        pure: true,\n        fn: function (a, row, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            for (let i = row; i < a.length; i++) {\n                const line = a[i];\n                if (re.test(line[col])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表正規表現ピックアップ': {\n        type: 'func',\n        josi: [['の', 'で'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            const res = [];\n            for (let i = 0; i < a.length; i++) {\n                const row = a[i];\n                if (re.test(row[col])) {\n                    res.push(row.slice(0));\n                }\n            }\n            return res;\n        }\n    },\n    // @辞書型変数の操作\n    '辞書キー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const keys = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    keys.push(key);\n                }\n                return keys;\n            }\n            if (a instanceof Array) { // 配列なら数字を返す\n                for (let i = 0; i < a.length; i++) {\n                    keys.push(i);\n                }\n                return keys;\n            }\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: true,\n        fn: function (a, key) {\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                if (key in a) {\n                    delete a[key];\n                }\n                return a;\n            }\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @ハッシュ\n    'ハッシュキー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('辞書キー列挙', [a, sys]);\n        }\n    },\n    'ハッシュ内容列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const body = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    body.push(a[key]);\n                }\n                return body;\n            }\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    'ハッシュキー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: false,\n        fn: function (a, key, sys) {\n            return sys.__exec('辞書キー削除', [a, key, sys]);\n        }\n    },\n    'ハッシュキー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @タイマー\n    '秒待': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: function (n, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    // タイマーを仕掛ける\n                    const timerId = setTimeout(() => {\n                        // タイマー使用中リストに追加したIDを削除\n                        const i = sys.__timeout.indexOf(timerId);\n                        if (i >= 0) {\n                            sys.__timeout.splice(i, 1);\n                        }\n                        // Promiseを終了\n                        resolve();\n                    }, parseFloat(n) * 1000);\n                    // タイマー使用中リストに追加\n                    sys.__timeout.push(timerId);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        },\n        return_none: true\n    },\n    '秒待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒逐次待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒後': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: true,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒後');\n            }\n            // 1回限りのタイマーをセット\n            const timerId = setTimeout(() => {\n                // 使用中リストに追加したIDを削除\n                const i = sys.__timeout.indexOf(timerId);\n                if (i >= 0) {\n                    sys.__timeout.splice(i, 1);\n                }\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                try {\n                    f(timerId, sys);\n                }\n                catch (e) {\n                    let err = e;\n                    if (!(e instanceof NakoRuntimeError)) {\n                        err = new NakoRuntimeError(e, sys.__getSysVar('__line'));\n                    }\n                    sys.logger.error(err);\n                }\n            }, parseFloat(n) * 1000);\n            sys.__timeout.unshift(timerId);\n            sys.__setSysVar('対象', timerId);\n            return timerId;\n        }\n    },\n    '秒毎': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒毎');\n            }\n            // タイマーをセット\n            const timerId = setInterval(() => {\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                f(timerId, sys);\n            }, parseFloat(n) * 1000);\n            // タイマーIDを追加\n            sys.__interval.unshift(timerId);\n            sys.__setSysVar('対象', timerId);\n            return timerId;\n        }\n    },\n    '秒タイマー開始時': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            return sys.__exec('秒毎', [f, n, sys]);\n        }\n    },\n    'タイマー停止': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (timerId, sys) {\n            const i = sys.__interval.indexOf(timerId);\n            if (i >= 0) {\n                sys.__interval.splice(i, 1);\n                clearInterval(timerId);\n                return true;\n            }\n            const j = sys.__timeout.indexOf(timerId);\n            if (j >= 0) {\n                sys.__timeout.splice(j, 1);\n                clearTimeout(timerId);\n                return true;\n            }\n            return false;\n        },\n        return_none: false\n    },\n    '全タイマー停止': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // clearInterval\n            for (let i = 0; i < sys.__interval.length; i++) {\n                const timerId = sys.__interval[i];\n                clearInterval(timerId);\n            }\n            sys.__interval = [];\n            // clearTimeout\n            for (let i = 0; i < sys.__timeout.length; i++) {\n                const timerId = sys.__timeout[i];\n                clearTimeout(timerId);\n            }\n            sys.__timeout = [];\n        },\n        return_none: true\n    },\n    // @日時処理(簡易)\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] }, // @げんごうでーた\n    '今': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const z2 = (n) => {\n                n = '00' + n;\n                return n.substring(n.length - 2, n.length);\n            };\n            const t = new Date();\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n        }\n    },\n    'システム時間': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return Math.floor(now.getTime() / 1000);\n        }\n    },\n    'システム時間ミリ秒': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return now.getTime();\n        }\n    },\n    '今日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            return sys.__formatDate(new Date());\n        }\n    },\n    '明日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() + (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '昨日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() - (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '今年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear();\n        }\n    },\n    '来年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() + 1;\n        }\n    },\n    '去年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() - 1;\n        }\n    },\n    '今月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 1;\n        }\n    },\n    '来月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 2;\n        }\n    },\n    '先月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth();\n        }\n    },\n    '曜日': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return '日月火水木金土'.charAt(d.getDay() % 7);\n        }\n    },\n    '曜日番号取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s) {\n            const a = s.split('/');\n            const t = new Date(a[0], a[1] - 1, a[2]);\n            return t.getDay();\n        }\n    },\n    'UNIXTIME変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    'UNIX時間変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    '日時変換': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (tm, sys) {\n            const t = tm * 1000;\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\n        }\n    },\n    '日時書式変換': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (tm, fmt, sys) {\n            const t = sys.__str2date(tm);\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\n                switch (m) {\n                    case 'YYYY': return t.getFullYear();\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\n                    case 'DD': return sys.__zero2(t.getDate());\n                    case 'M': return (t.getMonth() + 1);\n                    case 'D': return (t.getDate());\n                    case 'HH': return sys.__zero2(t.getHours());\n                    case 'mm': return sys.__zero2(t.getMinutes());\n                    case 'ss': return sys.__zero2(t.getSeconds());\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\n                    case 'H': return (t.getHours());\n                    case 'm': return (t.getMinutes());\n                    case 's': return (t.getSeconds());\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\n                }\n                return m;\n            });\n            return fmt;\n        }\n    },\n    '和暦変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            const t = d.getTime();\n            for (const era of sys.__getSysVar('元号データ')) {\n                const gengo = era['元号'];\n                const d2 = sys.__str2date(era['改元日']);\n                const t2 = d2.getTime();\n                if (t2 <= t) {\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\n                    if (y === 1) {\n                        y = '元';\n                    }\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\n                }\n            }\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\n        }\n    },\n    '年数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return (t2.getFullYear() - t1.getFullYear());\n        }\n    },\n    '月数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\n                (t1.getFullYear() * 12 + t1.getMonth()));\n        }\n    },\n    '日数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\n            return days;\n        }\n    },\n    '時間差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\n            return hours;\n        }\n    },\n    '分差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const min = Math.ceil((t2 - t1) / (60));\n            return min;\n        }\n    },\n    '秒差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const sec = Math.ceil((t2 - t1));\n            return sec;\n        }\n    },\n    '日時差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\n        pure: true,\n        fn: function (a, b, unit, sys) {\n            switch (unit) {\n                case '年': return sys.__exec('年数差', [a, b, sys]);\n                case '月': return sys.__exec('月数差', [a, b, sys]);\n                case '日': return sys.__exec('日数差', [a, b, sys]);\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\n                case '分': return sys.__exec('分差', [a, b, sys]);\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\n            }\n            throw new Error('『日時差』で不明な単位です。');\n        }\n    },\n    '時間加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const op = a.charAt(0);\n            if (op === '-' || op === '+') {\n                a = a.substring(1);\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + ':0:0').split(':');\n            let sec = parseInt(aa[0]) * 60 * 60 +\n                parseInt(aa[1]) * 60 +\n                parseInt(aa[2]);\n            if (op === '-') {\n                sec *= -1;\n            }\n            const rd = new Date(d.getTime() + (sec * 1000));\n            return sys.__formatDateTime(rd, s);\n        }\n    },\n    '日付加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            let op = 1;\n            const opc = a.charAt(0);\n            if (opc === '-' || opc === '+') {\n                a = a.substring(1);\n                if (opc === '-') {\n                    op *= -1;\n                }\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + '/0/0').split('/');\n            const addY = parseInt(aa[0]) * op;\n            const addM = parseInt(aa[1]) * op;\n            const addD = parseInt(aa[2]) * op;\n            d.setFullYear(d.getFullYear() + addY);\n            d.setMonth(d.getMonth() + addM);\n            d.setDate(d.getDate() + addD);\n            return sys.__formatDateTime(d, s);\n        }\n    },\n    '日時加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\n            if (!r) {\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\n            }\n            switch (r[3]) {\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\n            }\n        }\n    },\n    '時間ミリ秒取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            if (performance && performance.now) {\n                return performance.now();\n            }\n            else if (Date.now) {\n                return Date.now();\n            }\n            else {\n                const now = new Date();\n                return now.getTime();\n            }\n        }\n    },\n    // @デバッグ支援\n    'エラー発生': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s) {\n            throw new Error(s);\n        },\n        return_none: true\n    },\n    '__DEBUG': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.isDebug = true;\n            console.log(sys);\n        }\n    },\n    '__DEBUG強制待機': { type: 'const', value: 0 }, // @__DEBUGきょうせいたいき\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] }, // @__DEBUGぶれいくぽいんといちらん\n    '__DEBUG待機フラグ': { type: 'const', value: 0 }, // @__DEBUGたいきフラグ\n    '__DEBUG_BP_WAIT': {\n        type: 'func',\n        josi: [['で']],\n        pure: true,\n        asyncFn: true,\n        fn: function (curLine, sys) {\n            return new Promise((resolve) => {\n                const breakpoints = sys.__getSysVar('__DEBUGブレイクポイント一覧');\n                const forceLine = sys.__getSysVar('__DEBUG強制待機');\n                sys.__setSysVar('__DEBUG強制待機', 0);\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\n                    if (sys.__getSysVar('プラグイン名') !== 'メイン') {\n                        return;\n                    } // 現状メインのみデバッグする\n                    console.log(`@__DEBUG_BP_WAIT(${curLine})`);\n                    const timerId = setInterval(() => {\n                        if (sys.__getSysVar('__DEBUG待機フラグ') === 1) {\n                            sys.__setSysVar('__DEBUG待機フラグ', 0);\n                            clearInterval(timerId);\n                            resolve(curLine);\n                        }\n                    }, 500);\n                }\n                else {\n                    resolve(curLine);\n                }\n            });\n        }\n    },\n    'グローバル関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[1];\n            const res = [];\n            for (const key of vars.keys()) {\n                res.push(key);\n            }\n            return res;\n        }\n    },\n    'システム関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__v0;\n            const res = [];\n            for (const key of vars.keys()) {\n                if (key.startsWith('__') || key.startsWith('!') || key === 'meta') {\n                    continue;\n                }\n                res.push(key);\n            }\n            return res;\n        }\n    },\n    'システム関数存在': {\n        type: 'func',\n        josi: [['が', 'の']],\n        pure: true,\n        fn: function (fname, sys) {\n            return (typeof sys.__getSysVar(fname) !== 'undefined');\n        }\n    },\n    'プラグイン一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.pluginfiles) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    'モジュール一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.__module) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    '助詞一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            return new Promise((resolve, reject) => {\n                import('./nako_josi_list.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    resolve(obj.josiList);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    '予約語一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            // const words = require('./nako_reserved_words.mjs')\n            return new Promise((resolve, reject) => {\n                import('./nako_reserved_words.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    const w = [];\n                    for (const key in obj.default) {\n                        w.push(key);\n                    }\n                    resolve(w);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    // @プラグイン管理\n    'プラグイン名': { type: 'const', value: 'メイン' }, // @ぷらぐいんめい\n    'プラグイン名設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__setSysVar('プラグイン名', s);\n        },\n        return_none: true\n    },\n    '名前空間': { type: 'const', value: '' }, // @なまえくうかん\n    '名前空間設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            // push namespace\n            sys.__namespaceList.push([sys.__getSysVar('名前空間'), sys.__getSysVar('プラグイン名')]);\n            sys.__setSysVar('名前空間', s);\n        },\n        return_none: true\n    },\n    '名前空間ポップ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // pop namespace\n            const a = sys.__namespaceList.pop();\n            if (a) {\n                sys.__setSysVar('名前空間', a[0]);\n                sys.__setSysVar('プラグイン名', a[1]);\n            }\n        },\n        return_none: true\n    },\n    // @URLエンコードとパラメータ\n    'URLエンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            return encodeURIComponent(text);\n        }\n    },\n    'URLデコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            return decodeURIComponent(text);\n        }\n    },\n    'URLパラメータ解析': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const res = {};\n            if (typeof url !== 'string') {\n                return res;\n            }\n            const p = url.split('?');\n            if (p.length <= 1) {\n                return res;\n            }\n            const params = p[1].split('&');\n            for (const line of params) {\n                const line2 = line + '=';\n                const kv = line2.split('=');\n                const k = sys.__exec('URLデコード', [kv[0]]);\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\n            }\n            return res;\n        }\n    },\n    // @BASE64\n    'BASE64エンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            // browser?\n            if (typeof (window) !== 'undefined' && window.btoa) {\n                const u8a = new TextEncoder().encode(text);\n                const utf8str = String.fromCharCode.apply(null, u8a);\n                return btoa(utf8str);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text).toString('base64');\n            }\n            throw new Error('『BASE64エンコード』は利用できません。');\n        }\n    },\n    'BASE64デコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            if (typeof (window) !== 'undefined' && window.atob) {\n                const decodedUtf8str = atob(text);\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\n                const decodedArray = new Uint8Array(dec);\n                return new TextDecoder('UTF-8').decode(decodedArray);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text, 'base64').toString();\n            }\n            throw new Error('『BASE64デコード』は利用できません。');\n        }\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\nexport const opPriority = {\n    // and or\n    'and': 1,\n    'or': 1,\n    // compare\n    'eq': 2,\n    'noteq': 2,\n    '===': 2,\n    '!==': 2,\n    'gt': 2,\n    'gteq': 2,\n    'lt': 2,\n    'lteq': 2,\n    '&': 3,\n    // + - << >> >>>\n    '+': 4,\n    '-': 4,\n    'shift_l': 4,\n    'shift_r': 4,\n    'shift_r0': 4,\n    // * /\n    '*': 5,\n    '/': 5, // 一般的な割り算\n    '÷': 5, // 一般的な割り算\n    '÷÷': 5, // 整数の割り算\n    '%': 5,\n    // ^\n    '^': 6,\n    '**': 6\n};\nexport const RenbunJosi = [\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\n];\nexport const operatorList = [];\nfor (const key in opPriority) {\n    operatorList.push(key);\n}\n","/**\n * なでしこ3 の TypeScript のための型定義\n */\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\n    return {\n        type,\n        value,\n        indent,\n        line,\n        column: 0,\n        file,\n        josi: ''\n    };\n}\n","import { NewEmptyToken } from './nako_types.mjs';\n/**\n * なでしこの構文解析のためのユーティリティクラス\n */\nexport class NakoParserBase {\n    constructor(logger) {\n        this.logger = logger;\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\n        this.tokens = [];\n        this.usedFuncs = new Set();\n        /** @type {import('./nako3.mjs').Ast[]} */\n        this.stack = [];\n        this.index = 0;\n        /** トークン出現チェック(accept関数)に利用する\n         * @type {import('./nako3.mjs').Ast[]}\n         */\n        this.y = [];\n        /** モジュル名 @type {string} */\n        this.modName = 'inline';\n        this.namespaceStack = [];\n        /**\n         * 利用するモジュールの名前一覧\n         * @type {Array<string>}\n         */\n        this.modList = [];\n        /** グローバル変数・関数の確認用 */\n        this.funclist = new Map();\n        this.funcLevel = 0;\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\n        /**\n         * ローカル変数の確認用\n         * @type {Object.<string,Object>}\n         */\n        this.localvars = new Map([['それ', { type: 'var', value: '' }]]);\n        /** コード生成器の名前 @type {string} */\n        this.genMode = 'sync'; // #637\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\n        this.arrayIndexFrom = 0;\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\n        this.flagReverseArrayIndex = false;\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\n        this.flagCheckArrayInit = false;\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\n        this.recentlyCalledFunc = [];\n        // 構文解析に利用する - 現在計算式を読んでいるかどうか\n        this.isReadingCalc = false;\n        // エクスポート設定が未設定の関数・変数に対する既定値\n        this.isExportDefault = true;\n        this.isExportStack = [];\n        this.moduleExport = new Map();\n        this.init();\n    }\n    init() {\n        this.funclist = new Map(); // 関数の一覧\n        this.moduleExport = new Map();\n        this.reset();\n    }\n    reset() {\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\n        this.genMode = 'sync'; // #637, #1056\n    }\n    setFuncList(funclist) {\n        this.funclist = funclist;\n    }\n    setModuleExport(moduleexport) {\n        this.moduleExport = moduleexport;\n    }\n    /**\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\n     * @param {string[]} josiList 下ろしたい助詞の配列\n     */\n    popStack(josiList = undefined) {\n        if (!josiList) {\n            const t = this.stack.pop();\n            if (t) {\n                return t;\n            }\n            return null;\n        }\n        // josiList にマッチする助詞を探す\n        for (let i = this.stack.length - 1; i >= 0; i--) {\n            const t = this.stack[i];\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\n                this.stack.splice(i, 1); // remove stack\n                this.logger.trace('POP :' + JSON.stringify(t));\n                return t;\n            }\n        }\n        // 該当する助詞が見つからなかった場合\n        return null;\n    }\n    /**\n     * saveStack と loadStack は対で使う。\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\n     */\n    saveStack() {\n        this.stackList.push(this.stack);\n        this.stack = [];\n    }\n    loadStack() {\n        this.stack = this.stackList.pop();\n    }\n    /** 変数名を探す\n     * @param {string} name\n     * @returns {any}変数名の情報\n     */\n    findVar(name) {\n        // ローカル変数？\n        if (this.localvars.get(name)) {\n            return {\n                name,\n                scope: 'local',\n                info: this.localvars.get(name)\n            };\n        }\n        // モジュール名を含んでいる?\n        if (name.indexOf('__') >= 0) {\n            if (this.funclist.get(name)) {\n                return {\n                    name,\n                    scope: 'global',\n                    info: this.funclist.get(name)\n                };\n            }\n            else {\n                return undefined;\n            }\n        }\n        // グローバル変数（自身）？\n        const gnameSelf = `${this.modName}__${name}`;\n        if (this.funclist.get(gnameSelf)) {\n            return {\n                name: gnameSelf,\n                scope: 'global',\n                info: this.funclist.get(gnameSelf)\n            };\n        }\n        // グローバル変数（モジュールを検索）？\n        for (const mod of this.modList) {\n            const gname = `${mod}__${name}`;\n            const exportDefault = this.moduleExport.get(mod);\n            const funcObj = this.funclist.get(gname);\n            if (funcObj && (funcObj.isExport === true || (funcObj.isExport !== false && exportDefault !== false))) {\n                return {\n                    name: gname,\n                    scope: 'global',\n                    info: this.funclist.get(gname)\n                };\n            }\n        }\n        // システム変数 (funclistを普通に検索)\n        if (this.funclist.get(name)) {\n            return {\n                name,\n                scope: 'system',\n                info: this.funclist.get(name)\n            };\n        }\n        return undefined;\n    }\n    /**\n     * 計算用に要素をスタックに積む\n     */\n    pushStack(item) {\n        this.logger.trace('PUSH:' + JSON.stringify(item));\n        this.stack.push(item);\n    }\n    /**\n     * トークンの末尾に達したか\n     */\n    isEOF() {\n        return (this.index >= this.tokens.length);\n    }\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * カーソル位置にある単語の型を確かめる\n     */\n    check(ttype) {\n        return (this.tokens[this.index].type === ttype);\n    }\n    /**\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\n     * @param a [単語1の型, 単語2の型, ... ]\n     */\n    check2(a) {\n        for (let i = 0; i < a.length; i++) {\n            const idx = i + this.index;\n            if (this.tokens.length <= idx) {\n                return false;\n            }\n            if (a[i] === '*') {\n                continue;\n            } // ワイルドカード(どんなタイプも許容)\n            const t = this.tokens[idx];\n            if (a[i] instanceof Array) {\n                if (a[i].indexOf(t.type) < 0) {\n                    return false;\n                }\n                continue;\n            }\n            if (t.type !== a[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\n     */\n    checkTypes(a) {\n        const type = this.tokens[this.index].type;\n        return (a.indexOf(type) >= 0);\n    }\n    /**\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\n     */\n    accept(types) {\n        const y = [];\n        const tmpIndex = this.index;\n        const rollback = () => {\n            this.index = tmpIndex;\n            return false;\n        };\n        for (let i = 0; i < types.length; i++) {\n            if (this.isEOF()) {\n                return rollback();\n            }\n            const type = types[i];\n            if (type == null) {\n                return rollback();\n            }\n            if (typeof type === 'string') {\n                const token = this.get();\n                if (token && token.type !== type) {\n                    return rollback();\n                }\n                y[i] = token;\n                continue;\n            }\n            if (typeof type === 'function') {\n                const f = type.bind(this);\n                const r = f(y);\n                if (r === null) {\n                    return rollback();\n                }\n                y[i] = r;\n                continue;\n            }\n            if (type instanceof Array) {\n                if (!this.checkTypes(type)) {\n                    return rollback();\n                }\n                y[i] = this.get();\n                continue;\n            }\n            throw new Error('System Error : accept broken : ' + typeof type);\n        }\n        this.y = y;\n        return true;\n    }\n    /**\n     * カーソル語句を取得して、カーソルを後ろに移動する\n     */\n    get() {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index++];\n    }\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\n    getCur() {\n        if (this.isEOF()) {\n            throw new Error('トークンが取得できません。');\n        }\n        const t = this.tokens[this.index++];\n        if (!t) {\n            throw new Error('トークンが取得できません。');\n        }\n        return t;\n    }\n    unget() {\n        if (this.index > 0) {\n            this.index--;\n        }\n    }\n    /** 解析中のトークンを返す */\n    peek(i = 0) {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index + i];\n    }\n    /** 解析中のトークンを返す、無理なら def を返す */\n    peekDef(def = null) {\n        if (this.isEOF()) {\n            if (!def) {\n                def = NewEmptyToken();\n            }\n            return def;\n        }\n        return this.tokens[this.index];\n    }\n    /**\n     * 現在のカーソル語句のソースコード上の位置を取得する。\n     */\n    peekSourceMap() {\n        const token = this.peek();\n        if (token === null) {\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\n        }\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\n    }\n    /**\n     * depth: 表示する深さ\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\n     * @param {{ depth: number, typeName?: string }} opts\n     * @param {boolean} debugMode\n     */\n    nodeToStr(node, opts, debugMode) {\n        const depth = opts.depth - 1;\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\n        if (!node) {\n            return '(NULL)';\n        }\n        switch (node.type) {\n            case 'not':\n                if (depth >= 0) {\n                    const subNode = node.value;\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『not』`;\n                }\n            case 'op': {\n                const node2 = node;\n                let operator = node2.operator || '';\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\n                if (operator in table) {\n                    operator = table[operator];\n                }\n                if (depth >= 0) {\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\n                    if (node2.operator === 'eq') {\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\n                    }\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『${operator}${debug}』`;\n                }\n            }\n            case 'number':\n                return `${typeName('数値')}${node.value}`;\n            case 'bigint':\n                return `${typeName('巨大整数')}${node.value}`;\n            case 'string':\n                return `${typeName('文字列')}『${node.value}${debug}』`;\n            case 'word':\n                return `${typeName('単語')}『${node.value}${debug}』`;\n            case 'func':\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\n            case 'eol':\n                return '行の末尾';\n            case 'eof':\n                return 'ファイルの末尾';\n            default: {\n                let name = node.name;\n                if (name) {\n                    name = node.value;\n                }\n                if (typeof name !== 'string') {\n                    name = node.type;\n                }\n                return `${typeName('')}『${name}${debug}』`;\n            }\n        }\n    }\n}\n","/**\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\n */\nexport function isIndentChars(ch) {\n    const code = ch.charCodeAt(0);\n    // 特別なコード\n    if (ch === '\\t') {\n        return 4;\n    }\n    if (ch === ' ' || ch === '|') {\n        return 1;\n    }\n    if (ch === '・' || ch === '　') {\n        return 2;\n    }\n    if (ch === '⏋' || ch === '⏌') {\n        return 2;\n    } // 0x23CB, 0x23CC\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\n    if (code >= 0x2500 && code <= 0x257F) {\n        return 2;\n    }\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\n        (code >= 0x23B8 && code <= 0x23BF)) {\n        return 2;\n    }\n    return 0;\n}\n","/**\n * なでしこ3字句解析のためのルール\n */\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\nconst hira = /^[ぁ-ん]/;\nconst allHiragana = /^[ぁ-ん]+$/;\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\nconst wordSpecial = /^(かつ|または)/;\nconst errorRead = (ch) => {\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\n};\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\n/** トークンに区切るルールの一覧 */\nexport const rules = [\n    // 上から順にマッチさせていく\n    { name: 'ここまで', pattern: /^;;;/ }, // #925\n    { name: 'eol', pattern: /^\\n/ },\n    { name: 'eol', pattern: /^;/ },\n    // eslint-disable-next-line no-control-regex\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ }, // #877,#1015\n    { name: 'comma', pattern: /^,/ },\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\n    { name: 'def_test', pattern: /^●テスト:/ },\n    { name: 'def_func', pattern: /^●/ },\n    // 多倍長整数リテラルの判定。整数の末尾に「n」がついているだけな為、数値判定より上に書かないとただの整数にされる\n    { name: 'bigint', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[oO][0-7]+(_[0-7]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^0[bB][0-1]+(_[0-1]+)*n/, readJosi: true },\n    { name: 'bigint', pattern: /^\\d+(_\\d+)*?n/, readJosi: true },\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'ここから', pattern: /^(ここから),?/ },\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\n    { name: 'もし', pattern: /^もしも?/ },\n    // 「ならば」は助詞として定義している\n    { name: '違えば', pattern: /^違(えば)?/ },\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\n    // @see nako_reserved_words.js\n    { name: 'shift_r0', pattern: /^>>>/ },\n    { name: 'shift_r', pattern: /^>>/ },\n    { name: 'shift_l', pattern: /^<</ },\n    { name: '===', pattern: /^===/ }, // #999\n    { name: '!==', pattern: /^!==/ }, // #999\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\n    { name: '←', pattern: /^(←|<--)/ }, // 矢印 --- ただし(core#140)で廃止された演算子(#891,#899)\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\n    { name: 'eq', pattern: /^(=|🟰)/ },\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ }, // #1184\n    { name: 'not', pattern: /^(!|💡)/ }, // #1184 #1457\n    { name: 'gt', pattern: /^>/ },\n    { name: 'lt', pattern: /^</ },\n    { name: 'and', pattern: /^(かつ|&&|and\\s)/ },\n    { name: 'or', pattern: /^(または|或いは|あるいは|or\\s|\\|\\|)/ },\n    { name: '@', pattern: /^@/ },\n    { name: '+', pattern: /^\\+/ },\n    { name: '-', pattern: /^-/ },\n    { name: '**', pattern: /^(××|\\*\\*)/ }, // Python風べき乗演算子\n    { name: '*', pattern: /^(×|\\*)/ },\n    { name: '÷÷', pattern: /^÷÷/ }, // 整数の割り算\n    { name: '÷', pattern: /^(÷|\\/)/ }, // 普通の割り算\n    { name: '%', pattern: /^%/ },\n    { name: '^', pattern: /^\\^/ },\n    { name: '&', pattern: /^&/ },\n    { name: '[', pattern: /^\\[/ },\n    { name: ']', pattern: /^]/, readJosi: true },\n    { name: '(', pattern: /^\\(/ },\n    { name: ')', pattern: /^\\)/, readJosi: true },\n    { name: '|', pattern: /^\\|/ },\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') }, // error\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') }, // error\n    { name: 'func', pattern: /^\\{関数\\},?/ },\n    { name: '{', pattern: /^\\{/ },\n    { name: '}', pattern: /^\\}/, readJosi: true },\n    { name: ':', pattern: /^:/ },\n    { name: '_eol', pattern: /^_\\s*\\n/ },\n    { name: 'dec_lineno', pattern: /^‰/ },\n    // 絵文字変数 = (絵文字)英数字*\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true }, // 絵文字\n    { name: 'word', pattern: /^《.+?》/, readJosi: true }, // 《特別名前トークン》(#672)\n    // 単語句\n    {\n        name: 'word',\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\n        cbParser: cbWordParser\n    }\n];\nexport function trimOkurigana(s) {\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\n    if (!hira.test(s)) {\n        return s.replace(/[ぁ-ん]+/g, '');\n    }\n    // 全てひらがな？ (例) どうぞ\n    if (allHiragana.test(s)) {\n        return s;\n    }\n    // 末尾のひらがなのみ (例)お願いします →お願\n    return s.replace(/[ぁ-ん]+$/g, '');\n}\n// Utility for Rule\nfunction cbRangeComment(src) {\n    let res = '';\n    const josi = '';\n    let numEOL = 0;\n    src = src.substring(2); // skip /*\n    const i = src.indexOf('*/');\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + 2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\n    return { src, res, josi, numEOL };\n}\n/**\n * @param {string} src\n */\nfunction cbWordParser(src, isTrimOkurigana = true) {\n    /*\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\n      hiragana = [ぁ-ん]\n      katakana = [ァ-ヶー]\n      emoji    = [\\u1F60-\\u1F6F]\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\n      alphabet = [_a-zA-Z]\n      numchars = [0-9]\n    */\n    let res = '';\n    let josi = '';\n    while (src !== '') {\n        // 1文字以上のとき\n        if (res.length > 0) {\n            // 「かつ」「または」なら分割する (#1379 core#84)\n            const jsw = wordSpecial.exec(src);\n            if (jsw) {\n                break;\n            }\n            // 助詞の判定\n            const j = josiRE.exec(src);\n            if (j) {\n                josi = j[0].replace(/^\\s+/, '');\n                src = src.substring(j[0].length);\n                // 助詞の直後にある「,」を飛ばす #877\n                if (src.charAt(0) === ',') {\n                    src = src.substring(1);\n                }\n                break;\n            }\n        }\n        // カタカナ漢字英数字か？\n        const m = kanakanji.exec(src);\n        if (m) {\n            res += m[0];\n            src = src.substring(m[0].length);\n            continue;\n        }\n        // ひらがな？\n        const h = hira.test(src);\n        if (h) {\n            res += src.charAt(0);\n            src = src.substring(1);\n            continue;\n        }\n        break; // other chars\n    }\n    // --- 単語分割における特殊ルール ---\n    // 「間」の特殊ルール (#831)\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\n    if (/[ぁ-ん]間$/.test(res)) {\n        src = res.charAt(res.length - 1) + src;\n        res = res.slice(0, -1);\n    }\n    // 「以上」「以下」「超」「未満」 #918\n    const ii = wordHasIjoIka.exec(res);\n    if (ii) {\n        src = ii[1] + josi + src;\n        josi = '';\n        res = res.substring(0, res.length - ii[1].length);\n    }\n    // 「もの」構文 #1614\n    if (josi.substring(0, 2) === 'もの') {\n        josi = josi.substring(2);\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 送り仮名の省略ルール\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\n    if (isTrimOkurigana) {\n        res = trimOkurigana(res);\n    }\n    // 助詞だけの語句の場合\n    if (res === '' && josi !== '') {\n        res = josi;\n        josi = '';\n    }\n    return { src, res, josi, numEOL: 0 };\n}\nfunction cbString(beginTag, closeTag, src) {\n    let res = '';\n    let josi = '';\n    let numEOL = 0;\n    src = src.substring(beginTag.length); // skip beginTag\n    const i = src.indexOf(closeTag);\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + closeTag.length);\n        // res の中に beginTag があればエラーにする #953\n        if (res.indexOf(beginTag) >= 0) {\n            if (beginTag === '『') {\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\n            }\n            else {\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\n            }\n        }\n    }\n    // 文字列直後の助詞を取得\n    const j = josiRE.exec(src);\n    if (j) {\n        josi = j[0].replace(/^\\s+/, '');\n        src = src.substring(j[0].length);\n        // 助詞の後のカンマ #877\n        if (src.charAt(0) === ',') {\n            src = src.substring(1);\n        }\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 「もの」構文 (#1614)\n    if (josi.substring(0, 2) === 'もの') {\n        josi = josi.substring(2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    return { src, res, josi, numEOL };\n}\nfunction parseNumber(n) {\n    return Number(n.replace(/_/g, ''));\n}\n","// なでしこの字句解析を行う\n// 既に全角半角を揃えたコードに対して字句解析を行う\nimport { opPriority } from './nako_parser_const.mjs';\n// 予約語句\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\n/** @types {Record<string, string>} */\nimport reservedWords from './nako_reserved_words.mjs';\nimport { isIndentChars } from './nako_indent_chars.mjs';\n// 助詞の一覧\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\n// 字句解析ルールの一覧\nimport { rules, unitRE } from './nako_lex_rules.mjs';\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\nexport class NakoLexer {\n    /**\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\n        this.funclist = new Map();\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\n        this.result = [];\n        this.modName = 'main.nako3'; // モジュール名\n        this.moduleExport = new Map();\n    }\n    /** 関数一覧をセット */\n    setFuncList(listMap) {\n        this.funclist = listMap;\n    }\n    /** モジュール公開既定値一覧をセット */\n    setModuleExport(exportObj) {\n        this.moduleExport = exportObj;\n    }\n    /**\n     * @param tokens\n     * @param {boolean} isFirst\n     * @param {string} filename\n     */\n    replaceTokens(tokens, isFirst, filename) {\n        this.result = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        // 関数の定義があれば funclist を更新\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist, this.moduleExport);\n        this._replaceWord(this.result);\n        if (isFirst) {\n            if (this.result.length > 0) {\n                const eof = this.result[this.result.length - 1];\n                this.result.push({\n                    type: 'eol',\n                    line: eof.line,\n                    column: 0,\n                    indent: -1,\n                    file: eof.file,\n                    josi: '',\n                    value: '---',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: eof.line,\n                    indent: -1,\n                    column: 0,\n                    file: eof.file,\n                    josi: '',\n                    value: '',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n            else {\n                this.result.push({\n                    type: 'eol',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '---',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n        }\n        return this.result;\n    }\n    /**\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\n     */\n    static preDefineFunc(tokens, logger, funclist, moduleexport) {\n        // 関数を先読みして定義\n        let i = 0;\n        let isFuncPointer = false;\n        const readArgs = () => {\n            const args = [];\n            const keys = {};\n            if (tokens[i].type !== '(') {\n                return [];\n            }\n            i++;\n            while (tokens[i]) {\n                const t = tokens[i];\n                i++;\n                if (t.type === ')') {\n                    break;\n                }\n                if (t.type === 'func') {\n                    isFuncPointer = true;\n                }\n                else if (t.type !== '|' && t.type !== 'comma') {\n                    if (isFuncPointer) {\n                        t.funcPointer = true;\n                        isFuncPointer = false;\n                    }\n                    args.push(t);\n                    if (!keys[t.value]) {\n                        keys[t.value] = [];\n                    }\n                    keys[t.value].push(t.josi);\n                }\n            }\n            const varnames = [];\n            const funcPointers = [];\n            const result = [];\n            const already = {};\n            for (const arg of args) {\n                if (!already[arg.value]) {\n                    const josi = keys[arg.value];\n                    result.push(josi);\n                    varnames.push(arg.value);\n                    if (arg.funcPointer) {\n                        funcPointers.push(arg.value);\n                    }\n                    else {\n                        funcPointers.push(null);\n                    }\n                    already[arg.value] = true;\n                }\n            }\n            return [result, varnames, funcPointers];\n        };\n        // トークンを一つずつ確認\n        while (i < tokens.length) {\n            // タイプの置換\n            const t = tokens[i];\n            if (t.type === 'not' && tokens.length - i > 3) {\n                let prevToken = { type: 'eol' };\n                if (i >= 1) {\n                    prevToken = tokens[i - 1];\n                }\n                if (prevToken.type === 'eol') {\n                    let nextToken = tokens[i + 1];\n                    if (nextToken.type === 'word' && nextToken.value === 'モジュール公開既定値') {\n                        nextToken.type = 'モジュール公開既定値';\n                        nextToken = tokens[i + 2];\n                        if (nextToken.type === 'string' && nextToken.value === '非公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport.set(modName, false);\n                            i += 3;\n                            continue;\n                        }\n                        else if (nextToken.type === 'string' && nextToken.value === '公開') {\n                            const modName = NakoLexer.filenameToModName(t.file);\n                            moduleexport.set(modName, true);\n                            i += 3;\n                            continue;\n                        }\n                    }\n                }\n            }\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\n                t.josi = 'には';\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\n                i++;\n                continue;\n            }\n            // N回をN|回に置換\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\n                if (t.value.match(/回$/)) {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    // N回を挿入\n                    if (!t.endOffset) {\n                        t.endOffset = 1;\n                    }\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\n                    tokens.splice(i + 1, 0, kai);\n                    t.endOffset--;\n                    i++;\n                }\n            }\n            // 予約語の置換\n            if (t.type === 'word') {\n                const rtype = reservedWords.get(t.value);\n                if (rtype) {\n                    t.type = rtype;\n                }\n                if (t.value === 'そう') {\n                    t.value = 'それ';\n                }\n            }\n            // 関数定義の確認\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\n                i++;\n                continue;\n            }\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\n            let isMumei = true;\n            let prevToken = { type: 'eol' };\n            if (i >= 1) {\n                prevToken = tokens[i - 1];\n            }\n            if (prevToken.type === 'eol') {\n                isMumei = false;\n            }\n            // 関数名や引数を得る\n            const defToken = t;\n            i++; // skip \"●\" or \"関数\"\n            let josi = [];\n            let varnames = [];\n            let funcPointers = [];\n            let funcName = '';\n            let funcNameToken = null;\n            let isExport = null;\n            // 関数の属性指定\n            if (tokens[i] && tokens[i].type === '{') {\n                i++;\n                const attr = tokens[i] && tokens[i].type === 'word' ? tokens[i].value : '';\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    logger.warn(`不明な関数属性『${attr}』が指定されています。`);\n                }\n                i++;\n                if (tokens[i] && tokens[i].type === '}') {\n                    i++;\n                }\n            }\n            // 関数名の前に引数定義\n            if (tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 関数名を得る\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\n                funcNameToken = tokens[i++];\n                funcName = funcNameToken.value;\n            }\n            // 関数名の後で引数定義\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\n            // 無名関数は登録しないように気をつける\n            if (funcName !== '' && funcNameToken) {\n                const modName = NakoLexer.filenameToModName(t.file);\n                funcName = modName + '__' + funcName;\n                if (funclist.has(funcName)) { // 関数の二重定義を警告\n                    // main__は省略 #1223\n                    const dispName = funcName.replace(/^main__/, '');\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\n                }\n                funcNameToken.value = funcName;\n                funclist.set(funcName, {\n                    type: 'func',\n                    josi,\n                    fn: null,\n                    asyncFn: false,\n                    isExport,\n                    varnames,\n                    funcPointers\n                });\n            }\n            // 無名関数のために\n            const metaValue = {\n                'type': 'func',\n                josi,\n                varnames,\n                funcPointers\n            };\n            defToken.meta = metaValue;\n        }\n    }\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\n    splitStringEx(code) {\n        /** @type {string[]} */\n        const list = [];\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\n        const arr = code.split(/[{｛]/);\n        list.push(arr[0]);\n        for (const s of arr.slice(1)) {\n            const end = s.replace('｝', '}').indexOf('}');\n            if (end === -1) {\n                return null;\n            }\n            list.push(s.slice(0, end), s.slice(end + 1));\n        }\n        return list;\n    }\n    _replaceWord(tokens) {\n        let comment = [];\n        let i = 0;\n        let isFuncPointer = false;\n        const namespaceStack = [];\n        const getLastType = () => {\n            if (i <= 0) {\n                return 'eol';\n            }\n            return tokens[i - 1].type;\n        };\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main';\n        while (i < tokens.length) {\n            const t = tokens[i];\n            // モジュール名の変更に対応\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\n                if (isFuncPointer) {\n                    throw new InternalLexerError('名前空間設定の関数参照を取得することはできません。', t.startOffset === undefined ? 0 : t.startOffset, t.endOffset === undefined ? 0 : t.endOffset, t.line, t.file);\n                }\n                namespaceStack.push(modSelf);\n                modSelf = tokens[i - 1].value;\n            }\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間ポップ') {\n                if (isFuncPointer) {\n                    throw new InternalLexerError('名前空間ポップの関数参照を取得することはできません。', t.startOffset === undefined ? 0 : t.startOffset, t.endOffset === undefined ? 0 : t.endOffset, t.line, t.file);\n                }\n                const space = namespaceStack.pop();\n                if (space) {\n                    modSelf = space;\n                }\n            }\n            // 関数を強制的に置換( word => func )\n            if (t.type === 'word' && t.value !== 'それ') {\n                // 関数を変換\n                const funcName = t.value;\n                if (funcName.indexOf('__') < 0) {\n                    // 自身のモジュール名を検索\n                    const gname1 = `${modSelf}__${funcName}`;\n                    const gfo1 = this.funclist.get(gname1);\n                    if (gfo1 && gfo1.type === 'func') {\n                        t.type = isFuncPointer ? 'func_pointer' : 'func';\n                        t.meta = gfo1;\n                        t.value = gname1;\n                        if (isFuncPointer) {\n                            isFuncPointer = false;\n                            tokens.splice(i - 1, 1);\n                        }\n                        continue;\n                    }\n                    // モジュール関数を置換\n                    for (const mod of this.modList) {\n                        const gname = `${mod}__${funcName}`;\n                        const gfo = this.funclist.get(gname);\n                        const exportDefault = this.moduleExport.get(mod);\n                        if (gfo && gfo.type === 'func' && (gfo.isExport === true || (gfo.isExport !== false && exportDefault !== false))) {\n                            t.type = isFuncPointer ? 'func_pointer' : 'func';\n                            t.meta = gfo;\n                            t.value = gname;\n                            if (isFuncPointer) {\n                                isFuncPointer = false;\n                                tokens.splice(i - 1, 1);\n                            }\n                            break;\n                        }\n                    }\n                    if (t.type === 'func' || t.type === 'func_pointer') {\n                        continue;\n                    }\n                }\n                const fo = this.funclist.get(funcName);\n                if (fo && fo.type === 'func') {\n                    t.type = isFuncPointer ? 'func_pointer' : 'func';\n                    t.meta = fo;\n                    if (isFuncPointer) {\n                        isFuncPointer = false;\n                        tokens.splice(i - 1, 1);\n                        continue;\n                    }\n                }\n            }\n            // 関数ポインタの前置詞を検出\n            if (isFuncPointer) {\n                // 無効な関数参照の指定がある。\n            }\n            isFuncPointer = false;\n            if (t.type === 'func' && t.value === '{関数}') {\n                i++;\n                isFuncPointer = true;\n                continue;\n            }\n            // 数字につくマイナス記号を判定\n            // (ng) 5 - 3 || word - 3\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\n            if (t.type === '-' && tokens[i + 1]) {\n                const tokenType = tokens[i + 1].type;\n                if (tokenType === 'number' || tokenType === 'bigint') {\n                    // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\n                    const ltype = getLastType();\n                    if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\n                        tokens.splice(i, 1); // remove '-'\n                        if (tokenType === 'number') {\n                            tokens[i].value *= -1;\n                        }\n                        else {\n                            tokens[i].value = '-' + tokens[i].value;\n                        }\n                    }\n                }\n            }\n            // 助詞の「は」を = に展開\n            if (t.josi === undefined) {\n                t.josi = '';\n            }\n            if (t.josi === 'は') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'eq',\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                i += 2;\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                continue;\n            }\n            // 「とは」を一つの単語にする\n            if (t.josi === 'とは') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: t.josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // 助詞のならばをトークンとする\n            if (tararebaMap[t.josi]) {\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\n                if (!t.rawJosi) {\n                    t.rawJosi = josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'ならば',\n                    value: josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: ''\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\n            if (t.type === '_eol') {\n                tokens.splice(i, 1);\n                continue;\n            }\n            // コメントを飛ばす\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\n                comment.push(t.value);\n                tokens.splice(i, 1);\n                continue;\n            }\n            // 改行にコメントを埋め込む\n            if (t.type === 'eol') {\n                t.value = comment.join('/');\n                comment = [];\n            }\n            i++;\n        }\n    }\n    /**\n     * インデントの個数を数える\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\n     */\n    countIndent(src) {\n        let indent = 0;\n        for (let i = 0; i < src.length; i++) {\n            const c = src.charAt(i);\n            const n = isIndentChars(c);\n            if (n === 0) {\n                return [indent, i];\n            }\n            indent += n;\n        }\n        return [indent, src.length];\n    }\n    /**\n     * ソースコードをトークンに分割する\n     * @param src なでしこのソースコード\n     * @param line 先頭行の行番号\n     * @param filename ファイル名\n     */\n    tokenize(src, line, filename) {\n        const srcLength = src.length;\n        const result = [];\n        let columnCurrent;\n        let lineCurrent;\n        let column = 1;\n        let isDefTest = false;\n        let indent = 0;\n        // 最初にインデントを数える\n        const ia = this.countIndent(src);\n        indent = ia[0]; // インデント数\n        src = src.substring(ia[1]); // 読み飛ばす文字数\n        column += ia[1];\n        while (src !== '') {\n            let ok = false;\n            // 各ルールについて\n            for (const rule of rules) {\n                // 正規表現でマッチ\n                const m = rule.pattern.exec(src);\n                if (!m) {\n                    continue;\n                }\n                ok = true;\n                // 空白ならスキップ\n                if (rule.name === 'space') {\n                    column += m[0].length;\n                    src = src.substring(m[0].length);\n                    continue;\n                }\n                // マッチしたルールがコールバックを持つなら\n                if (rule.cbParser) {\n                    // コールバックを呼ぶ\n                    let rp;\n                    if (isDefTest && rule.name === 'word') {\n                        rp = rule.cbParser(src, false);\n                    }\n                    else {\n                        try {\n                            rp = rule.cbParser(src);\n                        }\n                        catch (e) {\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\n                        }\n                    }\n                    if (rule.name === 'string_ex') {\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\n                        const list = this.splitStringEx(rp.res);\n                        if (list === null) {\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\n                        }\n                        let offset = 0;\n                        for (let i = 0; i < list.length; i++) {\n                            const josi = (i === list.length - 1) ? rp.josi : '';\n                            if (i % 2 === 0) {\n                                result.push({\n                                    type: 'string',\n                                    value: list[i],\n                                    file: filename,\n                                    josi,\n                                    indent,\n                                    line,\n                                    column,\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\n                                });\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\n                                offset += list[i].length + 2;\n                            }\n                            else {\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                offset += list[i].length;\n                            }\n                        }\n                        line += rp.numEOL;\n                        column += src.length - rp.src.length;\n                        src = rp.src;\n                        if (rp.numEOL > 0) {\n                            column = 1;\n                        }\n                        break;\n                    }\n                    columnCurrent = column;\n                    column += src.length - rp.src.length;\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\n                    src = rp.src;\n                    line += rp.numEOL;\n                    if (rp.numEOL > 0) {\n                        column = 1;\n                    }\n                    break;\n                }\n                // ソースを進める前に位置を計算\n                const srcOffset = srcLength - src.length;\n                // 値を変換する必要があるか？\n                let value = m[0];\n                if (rule.cb) {\n                    value = rule.cb(value);\n                }\n                // ソースを進める\n                columnCurrent = column;\n                lineCurrent = line;\n                column += m[0].length;\n                src = src.substring(m[0].length);\n                // 改行の時の処理\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\n                    value = line++;\n                    column = 1;\n                }\n                // 数値なら単位を持つか？ --- #994\n                if (rule.name === 'number') {\n                    // 単位があれば読み飛ばす\n                    const um = unitRE.exec(src);\n                    if (um) {\n                        src = src.substring(um[0].length);\n                        column += m[0].length;\n                    }\n                }\n                let josi = '';\n                if (rule.readJosi) {\n                    // 正規表現で助詞があるか読み取る\n                    const j = josiRE.exec(src);\n                    if (j) {\n                        column += j[0].length;\n                        josi = j[0].replace(/^\\s+/, '');\n                        src = src.substring(j[0].length);\n                        // 助詞の直後にあるカンマを無視 #877\n                        if (src.charAt(0) === ',') {\n                            src = src.substring(1);\n                        }\n                        // 「＊＊である」なら削除 #939 #974\n                        if (removeJosiMap[josi]) {\n                            josi = '';\n                        }\n                        // 「もの」構文 (#1614)\n                        if (josi.substring(0, 2) === 'もの') {\n                            josi = josi.substring(2);\n                        }\n                    }\n                }\n                switch (rule.name) {\n                    case 'def_test': {\n                        isDefTest = true;\n                        break;\n                    }\n                    case 'eol': { // eolの処理はほかに↑と↓にある\n                        isDefTest = false;\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n                // ここまで‰(#682) を処理\n                if (rule.name === 'dec_lineno') {\n                    line--;\n                    continue;\n                }\n                result.push({\n                    type: rule.name,\n                    value,\n                    indent,\n                    line: lineCurrent,\n                    column: columnCurrent,\n                    file: filename,\n                    josi,\n                    preprocessedCodeOffset: srcOffset,\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\n                });\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\n                if (rule.name === 'eol' && column === 1) {\n                    const ia = this.countIndent(src);\n                    indent = ia[0];\n                    column += ia[1];\n                    src = src.substring(ia[1]); // インデントを飛ばす\n                }\n                break;\n            }\n            if (!ok) {\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\n            }\n        }\n        return result;\n    }\n    // トークン配列をtype文字列に変換\n    static tokensToTypeStr(tokens, sep) {\n        const a = tokens.map((v) => {\n            return v.type;\n        });\n        return a.join(sep);\n    }\n    /**\n     * ファイル名からモジュール名へ変換\n     * @param {string} filename\n     * @returns {string}\n     */\n    static filenameToModName(filename) {\n        if (!filename) {\n            return 'main';\n        }\n        // パスがあればパスを削除\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\n        if (filename.indexOf('/') >= 0) {\n            const a = filename.split('/');\n            filename = a[a.length - 1];\n        }\n        filename = filename.replace(/\\.nako3?$/, '');\n        return filename;\n    }\n}\n","/**\n * nadesiko v3 parser\n */\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\nimport { NakoParserBase } from './nako_parser_base.mjs';\nimport { NakoSyntaxError } from './nako_errors.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * 構文解析を行うクラス\n */\nexport class NakoParser extends NakoParserBase {\n    /**\n     * 構文解析を実行する\n     */\n    parse(tokens, filename) {\n        this.reset();\n        this.tokens = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        this.modList.push(this.modName);\n        // 解析開始\n        return this.startParser();\n    }\n    /** パーサーの一番最初に呼び出す構文規則 */\n    startParser() {\n        const b = this.ySentenceList();\n        const c = this.get();\n        if (c && c.type !== 'eof') {\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\n        }\n        return b;\n    }\n    /** 複数文を返す */\n    ySentenceList() {\n        const blocks = [];\n        let line = -1;\n        const map = this.peekSourceMap();\n        while (!this.isEOF()) {\n            const n = this.ySentence();\n            if (!n) {\n                break;\n            }\n            blocks.push(n);\n            if (line < 0) {\n                line = n.line;\n            }\n        }\n        if (blocks.length === 0) {\n            const token = this.peek() || this.tokens[0];\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\n    }\n    /** 余剰スタックのレポートを作る */\n    makeStackBalanceReport() {\n        const words = [];\n        this.stack.forEach((t) => {\n            let w = this.nodeToStr(t, { depth: 1 }, false);\n            if (t.josi) {\n                w += t.josi;\n            }\n            words.push(w);\n        });\n        const desc = words.join(',');\n        // 最近使った関数の使い方レポートを作る #1093\n        let descFunc = '';\n        const chA = 'A'.charCodeAt(0);\n        for (const f of this.recentlyCalledFunc) {\n            descFunc += ' - ';\n            let no = 0;\n            const josiA = f.josi;\n            if (josiA) {\n                for (const arg of josiA) {\n                    const ch = String.fromCharCode(chA + no);\n                    descFunc += ch;\n                    if (arg.length === 1) {\n                        descFunc += arg[0];\n                    }\n                    else {\n                        descFunc += `(${arg.join('|')})`;\n                    }\n                    no++;\n                }\n            }\n            descFunc += f.name + '\\n';\n        }\n        this.recentlyCalledFunc = [];\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\n    }\n    yEOL() {\n        // 行末のチェック #1009\n        const eol = this.get();\n        if (!eol) {\n            return null;\n        }\n        // 余剰スタックの確認\n        if (this.stack.length > 0) {\n            const report = this.makeStackBalanceReport();\n            throw NakoSyntaxError.fromNode(report, eol);\n        }\n        this.recentlyCalledFunc = [];\n        return eol; // Token to Ast\n    }\n    /** @returns {Ast | null} */\n    ySentence() {\n        const map = this.peekSourceMap();\n        // 最初の語句が決まっている構文\n        if (this.check('eol')) {\n            return this.yEOL();\n        }\n        if (this.check('もし')) {\n            return this.yIF();\n        }\n        if (this.check('後判定')) {\n            return this.yAtohantei();\n        }\n        if (this.check('エラー監視')) {\n            return this.yTryExcept();\n        }\n        if (this.accept(['抜ける'])) {\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['続ける'])) {\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['DNCLモード'])) {\n            return this.yDNCLMode(1);\n        }\n        if (this.accept(['DNCL2モード'])) {\n            return this.yDNCLMode(2);\n        }\n        if (this.accept(['not', 'string', 'モード設定'])) {\n            return this.ySetGenMode(this.y[1].value);\n        }\n        if (this.accept(['not', 'モジュール公開既定値', 'eq', 'string'])) {\n            return this.yExportDefault(this.y[3].value);\n        }\n        // (memo) 現状「取込」はプリプロセス段階(NakoCompiler.listRequireStatements)で処理される\n        // if (this.accept(['require', 'string', '取込'])) { return this.yRequire() }\n        // 廃止された構文 #1611\n        if (this.check('逐次実行')) {\n            return this.yTikuji();\n        }\n        if (this.accept(['not', '非同期モード'])) {\n            return this.yASyncMode();\n        }\n        if (this.check2(['func', 'eq'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\n        }\n        // 先読みして初めて確定する構文\n        if (this.accept([this.ySpeedMode])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yPerformanceMonitor])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yLet])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefTest])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefFunc])) {\n            return this.y[0];\n        }\n        // 関数呼び出しの他、各種構文の実装\n        if (this.accept([this.yCall])) {\n            const c1 = this.y[0];\n            const nextToken = this.peek();\n            if (nextToken && nextToken.type === 'ならば') {\n                const map = this.peekSourceMap();\n                const cond = c1;\n                this.get(); // skip ならば\n                // もし文の条件として関数呼び出しがある場合\n                return this.yIfThen(map, cond);\n            }\n            else if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\n                    const report = this.makeStackBalanceReport();\n                    throw NakoSyntaxError.fromNode(report, c1);\n                }\n                const c2 = this.ySentence();\n                if (c2 !== null) {\n                    return {\n                        type: 'block',\n                        block: [c1, c2],\n                        josi: c2.josi,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n            }\n            return c1;\n        }\n        return null;\n    }\n    /** [廃止] 非同期モード #11 @returns {Ast} */\n    yASyncMode() {\n        this.logger.error('『非同期モード』構文は廃止されました(https://nadesi.com/v3/doc/go.php?1028)。', this.peek());\n        const map = this.peekSourceMap();\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** set DNCL mode */\n    yDNCLMode(ver) {\n        const map = this.peekSourceMap();\n        if (ver === 1) {\n            // 配列インデックスは1から\n            this.arrayIndexFrom = 1;\n            // 配列アクセスをJSと逆順で指定する\n            this.flagReverseArrayIndex = true;\n        }\n        else {\n            // ver2はPythonに近いとのこと\n        }\n        // 配列代入時自動で初期化チェックする\n        this.flagCheckArrayInit = true;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    ySetGenMode(mode) {\n        const map = this.peekSourceMap();\n        this.genMode = mode;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yExportDefault(mode) {\n        const map = this.peekSourceMap();\n        this.isExportDefault = mode === '公開';\n        this.moduleExport.set(this.modName, this.isExportDefault);\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /*\n    // NakoCompiler.listRequireStatements で実装されているので不要\n    yRequire (): Ast {\n      console.log('@@@yRequire')\n      const nameToken = this.y[1]\n      const filename: string = nameToken.value\n      const modName = NakoLexer.filenameToModName(filename)\n      if (this.modList.indexOf(modName) < 0) {\n        // 優先度が最も高いのは modList[0]\n        // [memo] モジュールの検索優先度は、下に書くほど高くなる\n        const modSelf: string|undefined = this.modList.shift()\n        if (modSelf) {\n          this.modList.unshift(modName)\n          this.modList.unshift(modSelf)\n        }\n      }\n      return {\n        type: 'require',\n        value: filename,\n        josi: '',\n        ...this.peekSourceMap(),\n        end: this.peekSourceMap()\n      }\n    }\n    */\n    /** @returns {Ast} */\n    yBlock() {\n        const map = this.peekSourceMap();\n        const blocks = [];\n        if (this.check('ここから')) {\n            this.get();\n        }\n        while (!this.isEOF()) {\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\n                break;\n            }\n            if (!this.accept([this.ySentence])) {\n                break;\n            }\n            blocks.push(this.y[0]);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\n    }\n    yDefFuncReadArgs() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const a = [];\n        this.get(); // skip '('\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                this.get(); // skip ''\n                break;\n            }\n            const t = this.get();\n            if (t) {\n                a.push(t);\n            } // Token to Ast\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    yDefTest() {\n        return this.yDef('def_test');\n    }\n    yDefFunc() {\n        return this.yDef('def_func');\n    }\n    /** ユーザー関数の定義 */\n    yDef(type) {\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\n            return null;\n        }\n        const map = this.peekSourceMap();\n        const def = this.get(); // ●\n        if (!def) {\n            return null;\n        }\n        let isExport = this.isExportDefault;\n        if (this.check('{')) {\n            this.get();\n            const funcAttribute = this.get();\n            if (this.check('}')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('関数の属性の指定が正しくありません。『{』と『}』で囲む必要があります。', def);\n            }\n            if (funcAttribute != null) {\n                if (funcAttribute.value === '公開') {\n                    isExport = true;\n                }\n                if (funcAttribute.value === '非公開') {\n                    isExport = false;\n                }\n                if (funcAttribute.value === 'エクスポート') {\n                    isExport = true;\n                }\n            }\n        }\n        let defArgs = [];\n        if (this.check('(')) {\n            defArgs = this.yDefFuncReadArgs() || [];\n        } // // lexerでも解析しているが再度詳しく\n        const funcName = this.get();\n        if (!funcName || funcName.type !== 'func') {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\n        }\n        if (this.check('(')) {\n            // 関数引数の二重定義\n            if (defArgs.length > 0) {\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n            }\n            defArgs = this.yDefFuncReadArgs() || [];\n        }\n        if (this.check('とは')) {\n            this.get();\n        }\n        let block = null;\n        let multiline = false;\n        let asyncFn = false;\n        if (this.check('ここから')) {\n            multiline = true;\n        }\n        if (this.check('eol')) {\n            multiline = true;\n        }\n        try {\n            this.funcLevel++;\n            this.usedAsyncFn = false;\n            // ローカル変数を生成\n            const backupLocalvars = this.localvars;\n            this.localvars = new Map([['それ', { type: 'var', value: '' }]]);\n            if (multiline) {\n                this.saveStack();\n                // 関数の引数をローカル変数として登録する\n                for (const arg of defArgs) {\n                    const fnName = (arg.value) ? arg.value + '' : '';\n                    this.localvars.set(fnName, { 'type': 'var', 'value': '' });\n                }\n                block = this.yBlock();\n                if (this.check('ここまで')) {\n                    this.get();\n                }\n                else {\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\n                }\n                this.loadStack();\n            }\n            else {\n                this.saveStack();\n                block = this.ySentence();\n                this.loadStack();\n            }\n            this.funcLevel--;\n            asyncFn = this.usedAsyncFn;\n            this.localvars = backupLocalvars;\n        }\n        catch (err) {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n        }\n        return {\n            type,\n            name: funcName,\n            args: defArgs,\n            block: block || [],\n            asyncFn,\n            isExport,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yIFCond() {\n        const map = this.peekSourceMap();\n        let a = this.yGetArg();\n        if (!a) {\n            return null;\n        }\n        // console.log('@@yIFCond=', a)\n        // チェック : Aならば\n        if (a.josi === 'ならば') {\n            return a;\n        }\n        if (a.josi === 'でなければ') {\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\n            return a;\n        }\n        // チェック : AがBならば --- 「関数B(A)」のとき\n        if ((a.josi !== '') && (this.check('func'))) {\n            // もし文で関数呼び出しがある場合\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        else \n        // チェック : AがBならば --- 「A = B」のとき\n        if (a.josi === 'が') {\n            const tmpI = this.index;\n            const b = this.yGetArg();\n            if (!b) {\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\n            }\n            if (this.check('ならば')) {\n                const naraba = this.get() || { 'value': 'ならば' };\n                b.josi = naraba.value;\n            }\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\n                return {\n                    type: 'op',\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\n                    left: a,\n                    right: b,\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            this.index = tmpI;\n        }\n        // もし文で追加の関数呼び出しがある場合\n        if (!this.check('ならば')) {\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        // (ならば|でなければ)を確認\n        if (!this.check('ならば')) {\n            const smap = a || { type: '?', ...map };\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n        }\n        const naraba = this.get();\n        // 否定形のチェック\n        if (naraba && naraba.value === 'でなければ') {\n            a = {\n                type: 'not',\n                value: a,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yIF() {\n        const map = this.peekSourceMap();\n        if (!this.check('もし')) {\n            return null;\n        }\n        const mosi = this.get(); // skip もし\n        if (mosi == null) {\n            return null;\n        }\n        while (this.check('comma')) {\n            this.get();\n        } // skip commafffff\n        let cond = null;\n        try {\n            cond = this.yIFCond();\n        }\n        catch (err) {\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\n        }\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\n        }\n        return this.yIfThen(map, cond);\n    }\n    /** @returns {Ast | null} */\n    yIfThen(map, cond) {\n        let trueBlock = null;\n        let falseBlock = null;\n        let tanbun = false;\n        // True Block\n        if (this.check('eol')) {\n            trueBlock = this.yBlock();\n        }\n        else {\n            trueBlock = this.ySentence();\n            tanbun = true;\n        }\n        // skip EOL\n        while (this.check('eol')) {\n            this.get();\n        }\n        // Flase Block\n        if (this.check('違えば')) {\n            this.get(); // skip 違えば\n            while (this.check('comma')) {\n                this.get();\n            }\n            if (this.check('eol')) {\n                falseBlock = this.yBlock();\n            }\n            else {\n                falseBlock = this.ySentence();\n                tanbun = true;\n            }\n        }\n        if (tanbun === false) {\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', map);\n            }\n        }\n        return {\n            type: 'if',\n            expr: cond || [],\n            block: trueBlock || [],\n            false_block: falseBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    ySpeedMode() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', '実行速度優先'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        this.get();\n        let val = '';\n        if (optionNode && optionNode.value) {\n            val = optionNode.value;\n        }\n        else {\n            return null;\n        }\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\n        for (const name of val.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'speed_mode',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    yPerformanceMonitor() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        if (!optionNode) {\n            return null;\n        }\n        this.get();\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\n        for (const name of optionNode.value.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'performance_monitor',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    /** [廃止] #1611 「逐次実行」構文 @returns {Ast | null} */\n    yTikuji() {\n        if (!this.check('逐次実行')) {\n            return null;\n        }\n        const tikuji = this.getCur(); // skip\n        this.logger.error('『逐次実行』構文は廃止されました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\n        return { type: 'eol', ...this.peekSourceMap(), end: this.peekSourceMap() };\n    }\n    /**\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\n     * @param {Ast} firstValue\n     */\n    yGetArgOperator(firstValue) {\n        const args = [firstValue];\n        while (!this.isEOF()) {\n            // 演算子がある？\n            let op = this.peek();\n            if (op && opPriority[op.type]) {\n                op = this.getCur();\n                args.push(op); // Token to Ast\n                // 演算子後の値を取得\n                const v = this.yValue();\n                if (v === null) {\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\n                }\n                args.push(v);\n                continue;\n            }\n            break;\n        }\n        if (args.length === 0) {\n            return null;\n        }\n        if (args.length === 1) {\n            return args[0];\n        }\n        return this.infixToAST(args);\n    }\n    yGetArg() {\n        // 値を一つ読む\n        const value1 = this.yValue();\n        if (value1 === null) {\n            return null;\n        }\n        // 計算式がある場合を考慮\n        return this.yGetArgOperator(value1);\n    }\n    infixToPolish(list) {\n        // 中間記法から逆ポーランドに変換\n        const priority = (t) => {\n            if (opPriority[t.type]) {\n                return opPriority[t.type];\n            }\n            return 10;\n        };\n        const stack = [];\n        const polish = [];\n        while (list.length > 0) {\n            const t = list.shift();\n            if (!t) {\n                break;\n            }\n            while (stack.length > 0) { // 優先順位を見て移動する\n                const sTop = stack[stack.length - 1];\n                if (priority(t) > priority(sTop)) {\n                    break;\n                }\n                const tpop = stack.pop();\n                if (!tpop) {\n                    this.logger.error('計算式に間違いがあります。', t);\n                    break;\n                }\n                polish.push(tpop);\n            }\n            stack.push(t);\n        }\n        // 残った要素を積み替える\n        while (stack.length > 0) {\n            const t = stack.pop();\n            if (t) {\n                polish.push(t);\n            }\n        }\n        return polish;\n    }\n    /** @returns {Ast | null} */\n    infixToAST(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        // 逆ポーランドを構文木に\n        const josi = list[list.length - 1].josi;\n        const node = list[list.length - 1];\n        const polish = this.infixToPolish(list);\n        /** @type {Ast[]} */\n        const stack = [];\n        for (const t of polish) {\n            if (!opPriority[t.type]) { // 演算子ではない\n                stack.push(t);\n                continue;\n            }\n            const b = stack.pop();\n            const a = stack.pop();\n            if (a === undefined || b === undefined) {\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\n            }\n            /** @type {Ast} */\n            const op = {\n                type: 'op',\n                operator: t.type,\n                left: a,\n                right: b,\n                josi,\n                startOffset: a.startOffset,\n                endOffset: a.endOffset,\n                line: a.line,\n                column: a.column,\n                file: a.file\n            };\n            stack.push(op);\n        }\n        const ans = stack.pop();\n        if (!ans) {\n            return null;\n        }\n        return ans;\n    }\n    yGetArgParen(y) {\n        let isClose = false;\n        const si = this.stack.length;\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                isClose = true;\n                break;\n            }\n            const v = this.yGetArg();\n            if (v) {\n                this.pushStack(v);\n                if (this.check('comma')) {\n                    this.get();\n                }\n                continue;\n            }\n            break;\n        }\n        if (!isClose) {\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\n        }\n        const a = [];\n        while (si < this.stack.length) {\n            const v = this.popStack();\n            if (v) {\n                a.unshift(v);\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yRepeatTime() {\n        const map = this.peekSourceMap();\n        if (!this.check('回')) {\n            return null;\n        }\n        this.get(); // skip '回'\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 'N回、繰り返す' (#924)\n        let num = this.popStack([]);\n        let multiline = false;\n        let block = null;\n        if (num === null) {\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) { // multiline\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            // singleline\n            block = this.ySentence();\n        }\n        return {\n            type: 'repeat_times',\n            value: num,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yWhile() {\n        const map = this.peekSourceMap();\n        if (!this.check('間')) {\n            return null;\n        }\n        this.get(); // skip '間'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        if (this.check('繰返')) {\n            this.get();\n        } // skip '繰り返す' #927\n        const cond = this.popStack();\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (!this.checkTypes(['ここから', 'eol'])) {\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『間』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'while',\n            cond,\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yAtohantei() {\n        const map = this.peekSourceMap();\n        if (this.check('後判定')) {\n            this.get();\n        } // skip 後判定\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 繰り返す\n        if (this.check('ここから')) {\n            this.get();\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        let cond = this.yGetArg(); // 条件\n        let bUntil = false;\n        const t = this.peek();\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\n            this.get(); // skip なるまで\n            bUntil = true;\n        }\n        if (this.check('間')) {\n            this.get();\n        } // skip 間\n        if (bUntil) { // 条件を反転する\n            cond = {\n                type: 'not',\n                value: cond,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return {\n            type: 'atohantei',\n            cond: cond || [],\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yFor() {\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\n        let loopDirection = null; // ループの方向を一方向に限定する\n        const map = this.peekSourceMap();\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n            // pass\n        }\n        else {\n            return null;\n        }\n        const kurikaesu = this.getCur(); // skip 繰り返す\n        // スタックに(増や|減ら)してがある？\n        const incdec = this.stack.pop();\n        if (incdec) {\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\n                if (incdec.value === '増') {\n                    flagDown = false;\n                }\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\n            }\n            else {\n                // 普通の繰り返しの場合\n                this.stack.push(incdec); // 違ったので改めて追加\n            }\n        }\n        let vInc = null;\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\n            vInc = this.popStack(['ずつ']);\n            if (kurikaesu.type === '増繰返') {\n                flagDown = false;\n            }\n            loopDirection = kurikaesu.type === '増繰返' ? 'up' : 'down';\n        }\n        const vTo = this.popStack(['まで']);\n        const vFrom = this.popStack(['から']);\n        const word = this.popStack(['を', 'で']);\n        if (vFrom === null || vTo === null) {\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\n        }\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n            this.get();\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'for',\n            from: vFrom,\n            to: vTo,\n            inc: vInc,\n            flagDown,\n            loopDirection,\n            word,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yReturn() {\n        const map = this.peekSourceMap();\n        if (!this.check('戻る')) {\n            return null;\n        }\n        this.get(); // skip '戻る'\n        const v = this.popStack(['で', 'を']);\n        if (this.stack.length > 0) {\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\n        }\n        return {\n            type: 'return',\n            value: v,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yForEach() {\n        const map = this.peekSourceMap();\n        if (!this.check('反復')) {\n            return null;\n        }\n        this.get(); // skip '反復'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        const target = this.popStack(['を']);\n        const name = this.popStack(['で']);\n        let block = null;\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『反復』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'foreach',\n            name,\n            target,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 条件分岐構文 */\n    ySwitch() {\n        const map = this.peekSourceMap();\n        if (!this.check('条件分岐')) {\n            return null;\n        }\n        const joukenbunki = this.get(); // skip '条件分岐'\n        if (!joukenbunki) {\n            return null;\n        }\n        const eol = this.get(); // skip 'eol'\n        if (!eol) {\n            return null;\n        }\n        const value = this.popStack(['で']);\n        if (!value) {\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\n        }\n        if (eol.type !== 'eol') {\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\n        }\n        let isDefaultClause = false; // 「違えば」内かどうか\n        let skippedKokomade = false;\n        const cases = [];\n        while (!this.isEOF()) {\n            if (this.check('ここまで')) {\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                this.get(); // skip ここまで\n                break;\n            }\n            if (this.check('eol')) {\n                this.get();\n                continue;\n            }\n            if (isDefaultClause) {\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\n            }\n            // 違えば？\n            let cond = null;\n            const condToken = this.peek();\n            if (condToken && condToken.type === '違えば') {\n                // 違えば\n                skippedKokomade = false;\n                isDefaultClause = true;\n                cond = this.get(); // skip 違えば // Token to Ast\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            else {\n                // ＊＊＊ならば\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 「＊＊ならば」を得る\n                cond = this.yValue();\n                if (!cond) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                const naraba = this.get(); // skip ならば\n                if (!naraba || naraba.type !== 'ならば') {\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\n                }\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            // 条件にあったときに実行すること\n            const condBlock = this.yBlock();\n            const kokomade = this.peek();\n            if (kokomade && kokomade.type === 'ここまで') {\n                this.get(); // skip ここまで\n            }\n            else {\n                if (isDefaultClause) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\n                skippedKokomade = true;\n            }\n            cases.push([cond, condBlock]);\n        }\n        return {\n            type: 'switch',\n            value,\n            cases: cases || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 無名関数 */\n    yMumeiFunc() {\n        const map = this.peekSourceMap();\n        if (!this.check('def_func')) {\n            return null;\n        }\n        const def = this.get();\n        if (!def) {\n            return null;\n        }\n        let args = [];\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // 関数の引数定義は省略できる\n        if (this.check('(')) {\n            args = this.yDefFuncReadArgs() || [];\n        }\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // ブロックを読む\n        this.funcLevel++;\n        this.saveStack();\n        const block = this.yBlock();\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\n        if (!this.check('ここまで')) {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\n        }\n        this.get(); // skip ここまで\n        this.loadStack();\n        this.funcLevel--;\n        return {\n            type: 'func_obj',\n            args,\n            block,\n            meta: def.meta,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 代入構文 */\n    yDainyu() {\n        const map = this.peekSourceMap();\n        const dainyu = this.get(); // 代入\n        if (dainyu === null) {\n            return null;\n        }\n        const value = this.popStack(['を']);\n        const word = this.popStack(['へ', 'に']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\n        }\n        // 配列への代入\n        if (word.type === '配列参照') {\n            return {\n                type: 'let_array',\n                name: word.name,\n                index: word.index,\n                value,\n                josi: '',\n                checkInit: this.flagCheckArrayInit,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 一般的な変数への代入\n        const word2 = this.getVarName(word);\n        return {\n            type: 'let',\n            name: word2,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 定める構文 */\n    ySadameru() {\n        const map = this.peekSourceMap();\n        const sadameru = this.get(); // 定める\n        if (sadameru === null) {\n            return null;\n        }\n        const word = this.popStack(['を']);\n        const value = this.popStack(['へ', 'に', 'と']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\n        }\n        let isExport = this.isExportDefault;\n        if (this.check2(['{', 'word', '}'])) {\n            this.get();\n            const attrNode = this.get();\n            if (attrNode === null) {\n                throw NakoSyntaxError.fromNode('定める『' + word.value + '』の定義エラー', word);\n            }\n            const attr = attrNode.value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n            }\n            this.get();\n        }\n        // 変数を生成する\n        const nameToken = this.createVar(word, true, isExport);\n        return {\n            type: 'def_local_var',\n            name: nameToken,\n            vartype: '定数',\n            isExport,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yIncDec() {\n        const map = this.peekSourceMap();\n        const action = this.get(); // (増やす|減らす)\n        if (action === null) {\n            return null;\n        }\n        // 『Nずつ増やして繰り返す』文か？\n        if (this.check('繰返')) {\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\n            return this.yFor();\n        }\n        // スタックから引数をポップ\n        let value = this.popStack(['だけ', '']);\n        if (!value) {\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\n        }\n        const word = this.popStack(['を']);\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\n        }\n        // 減らすなら-1かける\n        if (action.value === '減') {\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\n        }\n        return {\n            type: 'inc',\n            name: word,\n            value,\n            josi: action.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yCall() {\n        if (this.isEOF()) {\n            return null;\n        }\n        // スタックに積んでいく\n        while (!this.isEOF()) {\n            if (this.check('ここから')) {\n                this.get();\n            }\n            // 代入\n            if (this.check('代入')) {\n                return this.yDainyu();\n            }\n            if (this.check('定める')) {\n                return this.ySadameru();\n            }\n            // 制御構文\n            if (this.check('回')) {\n                return this.yRepeatTime();\n            }\n            if (this.check('間')) {\n                return this.yWhile();\n            }\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n                return this.yFor();\n            }\n            if (this.check('反復')) {\n                return this.yForEach();\n            }\n            if (this.check('条件分岐')) {\n                return this.ySwitch();\n            }\n            if (this.check('戻る')) {\n                return this.yReturn();\n            }\n            if (this.check('増') || this.check('減')) {\n                return this.yIncDec();\n            }\n            // C言語風関数\n            if (this.check2([['func', 'word'], '('])) { // C言語風\n                const cur = this.peek();\n                if (cur && cur.josi === '') {\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\n                    if (t) {\n                        const josi = t.josi || '';\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\n                            t.josi = '';\n                            return t; // 関数なら値とする\n                        }\n                        this.pushStack(t);\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    }\n                    continue;\n                }\n            }\n            // なでしこ式関数\n            if (this.check('func')) {\n                const r = this.yCallFunc();\n                if (r === null) {\n                    continue;\n                }\n                // 「〜する間」の形ならスタックに積む。\n                if (this.check('間')) {\n                    this.pushStack(r);\n                    continue;\n                }\n                // 関数呼び出しの直後に、四則演算があるか?\n                if (!this.checkTypes(operatorList)) {\n                    return r; // 関数呼び出しの後に演算子がないのでそのまま関数呼び出しを戻す\n                }\n                // 四則演算があった場合、計算してスタックに載せる\n                const s = this.yGetArgOperator(r);\n                this.pushStack(s);\n                continue;\n            }\n            // 値のとき → スタックに載せる\n            const t = this.yGetArg();\n            if (t) {\n                this.pushStack(t);\n                continue;\n            }\n            break;\n        } // end of while\n        // 助詞が余ってしまった場合\n        if (this.stack.length > 0) {\n            if (this.isReadingCalc) {\n                return this.popStack();\n            }\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\n            // 各ノードについて、更に詳細な情報があるなら表示\n            for (const n of this.stack) {\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\n                if (d0 !== d1) {\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\n                    msg += `${d0}は${d1}として使われています。`;\n                }\n            }\n            const first = this.stack[0];\n            const last = this.stack[this.stack.length - 1];\n            this.logger.debug(msgDebug, first);\n            throw NakoSyntaxError.fromNode(msg, first, last);\n        }\n        return this.popStack([]);\n    }\n    /** @returns {Ast | null} */\n    yCallFunc() {\n        const map = this.peekSourceMap();\n        const t = this.get();\n        if (!t) {\n            return null;\n        }\n        const f = t.meta;\n        const funcName = t.value;\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\n        let funcObj = null;\n        if (t.josi === 'には') {\n            try {\n                funcObj = this.yMumeiFunc();\n            }\n            catch (err) {\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\n            }\n            if (funcObj === null) {\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\n            }\n        }\n        if (!f || typeof f.josi === 'undefined') {\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\n        }\n        // 最近使った関数を記録\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\n        if (f && f.asyncFn) {\n            this.usedAsyncFn = true;\n        }\n        // 関数の引数を取り出す処理\n        const args = [];\n        let nullCount = 0;\n        let valueCount = 0;\n        for (let i = f.josi.length - 1; i >= 0; i--) {\n            while (true) {\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\n                let popArg = this.popStack(f.josi[i]);\n                if (popArg !== null) {\n                    valueCount++;\n                }\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    nullCount++;\n                    popArg = funcObj;\n                }\n                else {\n                    break;\n                }\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\n                        popArg.type = 'func_pointer';\n                    }\n                    else {\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\n                    }\n                }\n                args.unshift(popArg);\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    break;\n                }\n            }\n        }\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\n        }\n        this.usedFuncs.add(t.value);\n        // 関数呼び出しのAstを構築\n        const funcNode = {\n            type: 'func',\n            name: t.value,\n            args,\n            josi: t.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\n        if (funcNode.name === 'プラグイン名設定') {\n            if (args.length > 0 && args[0]) {\n                let fname = '' + args[0].value;\n                if (fname === 'メイン') {\n                    fname = '' + args[0].file;\n                }\n                this.namespaceStack.push(this.modName);\n                this.isExportStack.push(this.isExportDefault);\n                this.modName = NakoLexer.filenameToModName(fname);\n                this.modList.push(this.modName);\n            }\n        }\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\n            const space = this.namespaceStack.pop();\n            if (space) {\n                this.modName = space;\n            }\n            const isexport = this.isExportStack.pop();\n            if (isexport != null) {\n                this.isExportDefault = isexport;\n            }\n        }\n        // 言い切りならそこで一度切る\n        if (t.josi === '') {\n            return funcNode;\n        }\n        // 「**して、**」の場合も一度切る\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\n            funcNode.josi = 'して';\n            return funcNode;\n        }\n        // 続き\n        funcNode.meta = f;\n        this.pushStack(funcNode);\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLet() {\n        const map = this.peekSourceMap();\n        // 通常の変数\n        if (this.check2(['word', 'eq'])) {\n            const word = this.peek();\n            let threw = false;\n            try {\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\n                    if (this.y[2].type === 'eol') {\n                        throw new Error('値が空です。');\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    } // skip comma (ex) name1=val1, name2=val2\n                    const nameToken = this.getVarName(this.y[0]);\n                    const valueToken = this.y[2];\n                    return {\n                        type: 'let',\n                        name: nameToken,\n                        value: valueToken,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n                else {\n                    threw = true;\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\n                }\n            }\n            catch (err) {\n                if (threw) {\n                    throw err;\n                }\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\n            }\n        }\n        // let_array ?\n        if (this.check2(['word', '@'])) {\n            const la = this.yLetArrayAt(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (la) {\n                la.checkInit = this.flagCheckArrayInit;\n                return la;\n            }\n        }\n        if (this.check2(['word', '['])) {\n            const lb = this.yLetArrayBracket(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (lb) {\n                lb.checkInit = this.flagCheckArrayInit;\n                return lb;\n            }\n        }\n        // ローカル変数定義\n        if (this.accept(['word', 'とは'])) {\n            const wordToken = this.y[0];\n            if (!this.checkTypes(['変数', '定数'])) {\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n            }\n            const vtype = this.getCur(); // 変数 or 定数\n            let isExport = this.isExportDefault;\n            if (this.check2(['{', 'word', '}'])) {\n                this.get();\n                const attrNode = this.get();\n                if (attrNode === null) {\n                    throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n                }\n                const attr = attrNode.value;\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n                }\n                this.get();\n            }\n            const word = this.createVar(wordToken, vtype.type === '定数', isExport);\n            // 初期値がある？\n            let value = null;\n            if (this.check('eq')) {\n                this.get();\n                value = this.yCalc();\n            }\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: vtype.type,\n                isExport,\n                value,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // ローカル変数定義（その２）\n        if (this.accept(['変数', 'word'])) {\n            const wordVar = this.y[1];\n            this.index -= 2; // 「変数 word」の前に巻き戻す\n            // 変数の宣言および初期化1\n            if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\n                const word = this.createVar(this.y[1], false, this.isExportDefault);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    value: this.y[3],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 変数の宣言および初期化2\n            if (this.accept(['変数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n                let isExport = this.isExportDefault;\n                const attr = this.y[3].value;\n                if (attr === '公開') {\n                    isExport = true;\n                }\n                else if (attr === '非公開') {\n                    isExport = false;\n                }\n                else if (attr === 'エクスポート') {\n                    isExport = true;\n                }\n                else {\n                    this.logger.warn(`不明な変数属性『${attr}』が指定されています。`);\n                }\n                const word = this.createVar(this.y[1], false, isExport);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    isExport,\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 変数宣言のみの場合\n            {\n                this.index += 2; // 変数 word を読んだとする\n                const word = this.createVar(wordVar, false, this.isExportDefault);\n                return {\n                    type: 'def_local_var',\n                    name: word,\n                    vartype: '変数',\n                    value: null,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], true, this.isExportDefault);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', '{', 'word', '}', 'eq', this.yCalc])) {\n            let isExport = this.isExportDefault;\n            const attr = this.y[3].value;\n            if (attr === '公開') {\n                isExport = true;\n            }\n            else if (attr === '非公開') {\n                isExport = false;\n            }\n            else if (attr === 'エクスポート') {\n                isExport = true;\n            }\n            else {\n                this.logger.warn(`不明な定数属性『${attr}』が指定されています。`);\n            }\n            const word = this.createVar(this.y[1], true, isExport);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                isExport,\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数定数への代入 #563\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, true, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, false, this.isExportDefault);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.check2(['word', 'comma', 'word'])) {\n            // 2 word\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[4],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 3 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 4 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[8],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 5 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\n                names = this.createVarList(names, false, this.isExportDefault);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[10],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 配列のインデックスが1から始まる場合を考慮するか\n     * @param {Ast} node\n     * @returns\n     */\n    checkArrayIndex(node) {\n        // 配列が0から始まるのであればそのまま返す\n        if (this.arrayIndexFrom === 0) {\n            return node;\n        }\n        // 配列が1から始まるのであれば演算を加えて返す\n        return {\n            ...node,\n            'type': 'op',\n            'operator': '-',\n            'left': node,\n            'right': {\n                ...node,\n                'type': 'number',\n                'value': this.arrayIndexFrom\n            }\n        };\n    }\n    /**\n     * 配列のインデックスを逆順にするのを考慮するか\n     * @param {Ast[]| null} ary\n     */\n    checkArrayReverse(ary) {\n        if (!ary) {\n            return [];\n        }\n        if (!this.flagReverseArrayIndex) {\n            return ary;\n        }\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\n        if (ary.length <= 1) {\n            return ary;\n        }\n        return ary.reverse();\n    }\n    /** @returns {Ast | null} */\n    yLetArrayAt(map) {\n        // 一次元配列\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[4],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLetArrayBracket(map) {\n        // 一次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[5],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\n                value: this.y[8],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[7],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\n                value: this.y[11],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[9],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yCalc() {\n        const map = this.peekSourceMap();\n        if (this.check('eol')) {\n            return null;\n        }\n        // 値を一つ読む\n        const t = this.yGetArg();\n        if (!t) {\n            return null;\n        }\n        // 助詞がある？ つまり、関数呼び出しがある？\n        if (t.josi === '') {\n            return t;\n        } // 値だけの場合\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\n        const tmpReadingCalc = this.isReadingCalc;\n        this.isReadingCalc = true;\n        this.pushStack(t);\n        const t1 = this.yCall();\n        this.isReadingCalc = tmpReadingCalc;\n        if (!t1) {\n            // 関数がなければ、先ほど積んだ値をスタックから取り出して返す\n            return this.popStack();\n        }\n        // 計算式をfCalcとする\n        let fCalc = t1;\n        // それが連文か助詞を読んで確認\n        if (RenbunJosi.indexOf(t1.josi || '') >= 0) {\n            // 連文なら右側を読んで左側とくっつける\n            const t2 = this.yCalc();\n            if (t2) {\n                fCalc = {\n                    type: 'renbun',\n                    left: t1,\n                    right: t2,\n                    josi: t2.josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        // 演算子があれば続ける\n        const op = this.peek();\n        if (!op) {\n            return fCalc;\n        }\n        if (opPriority[op.type]) {\n            return this.yGetArgOperator(fCalc);\n        }\n        return fCalc;\n    }\n    /** @returns {Ast | null} */\n    yValueKakko() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const t = this.get(); // skip '('\n        if (!t) {\n            throw new Error('[System Error] check したのに get できない');\n        }\n        this.saveStack();\n        const v = this.yCalc() || this.ySentence();\n        if (v === null) {\n            const v2 = this.get();\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\n        }\n        if (!this.check(')')) {\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\n        }\n        const closeParent = this.get(); // skip ')'\n        this.loadStack();\n        if (closeParent) {\n            v.josi = closeParent.josi;\n        }\n        return v;\n    }\n    /** @returns {Ast | null} */\n    yValue() {\n        const map = this.peekSourceMap();\n        // カンマなら飛ばす #877\n        if (this.check('comma')) {\n            this.get();\n        }\n        // プリミティブな値\n        if (this.checkTypes(['number', 'bigint', 'string'])) {\n            return this.getCur();\n        } // Token To Ast\n        // 丸括弧\n        if (this.check('(')) {\n            return this.yValueKakko();\n        }\n        // マイナス記号\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\n            const m = this.get(); // skip '-'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            const line = (m && m.line) ? m.line : 0;\n            return {\n                type: 'op',\n                operator: '*',\n                left: { type: 'number', value: -1, line },\n                right: v || [],\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // NOT\n        if (this.check('not')) {\n            this.get(); // skip '!'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            return {\n                type: 'not',\n                value: v,\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // JSON object\n        const a = this.yJSONArray();\n        if (a) {\n            return a;\n        }\n        const o = this.yJSONObject();\n        if (o) {\n            return o;\n        }\n        // 一語関数\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\n        if (this.check2(['func', splitType])) {\n            const tt = this.get();\n            if (!tt) {\n                throw new Error('[System Error] 正しく値が取れませんでした。');\n            }\n            const f = this.getVarNameRef(tt);\n            this.usedFuncs.add(f.value);\n            // 引数の個数をチェック\n            const meta = f.meta;\n            const args = [];\n            if (!meta) {\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\n            }\n            if (meta.josi && meta.josi.length === 1) {\n                args.push({ type: 'word', value: 'それ' });\n            }\n            else if (meta.josi && meta.josi.length >= 2) {\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\n            }\n            return {\n                type: 'func',\n                name: f.value,\n                args,\n                josi: f.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // C風関数呼び出し FUNC(...)\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\n            const f = this.peek();\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\n                const ff = this.getVarNameRef(this.y[0]);\n                const args = this.y[2];\n                const funcName = ff.value;\n                this.usedFuncs.add(funcName);\n                // 引数の個数をチェック\n                const meta = ff.meta;\n                if (meta && meta.josi) {\n                    // 引数の個数が異なる場合\n                    if (meta.josi.length === args.length) {\n                        // ok\n                    }\n                    else if (meta.isVariableJosi) {\n                        // ok\n                    }\n                    else { // 引数の個数が違う\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\n                    }\n                }\n                return {\n                    type: 'func',\n                    name: funcName,\n                    args,\n                    josi: this.y[3].josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\n        }\n        // 無名関数(関数オブジェクト)\n        if (this.check('def_func')) {\n            return this.yMumeiFunc();\n        }\n        // 変数\n        const word = this.yValueWord();\n        if (word) {\n            return word;\n        }\n        // 関数への参照\n        const funcPtr = this.yValueFuncPointer();\n        if (funcPtr) {\n            return funcPtr;\n        }\n        // その他\n        return null;\n    }\n    yValueWordGetIndex(ast) {\n        if (!ast.index) {\n            ast.index = [];\n        }\n        // word @ a, b, c\n        if (this.check('@')) {\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index.push(this.checkArrayIndex(this.y[5]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[5].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[3].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[1].josi;\n                return true;\n            }\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, ']'])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[2].josi;\n                return this.y[2].josi === ''; // 助詞があればそこで終了(false)を返す (#1627)\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[4].josi;\n                return this.y[4].josi === ''; // 助詞があればそこで終了(false)を返す\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3]),\n                    this.checkArrayIndex(this.y[5])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[6].josi;\n                return this.y[6].josi === ''; // 助詞があればそこで終了(false)を返す\n            }\n        }\n        return false;\n    }\n    /** @returns {Ast | null} */\n    yValueFuncPointer() {\n        const map = this.peekSourceMap();\n        if (this.check('func_pointer')) {\n            const t = this.getCur();\n            const ast = {\n                type: 'func_pointer',\n                name: t.value,\n                josi: t.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n            return ast;\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yValueWord() {\n        const map = this.peekSourceMap();\n        if (this.check('word')) {\n            const t = this.getCur();\n            const word = this.getVarNameRef(t);\n            // word[n] || word@n\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\n                const ast = {\n                    type: '配列参照',\n                    name: word,\n                    index: [],\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n                while (!this.isEOF()) {\n                    if (!this.yValueWordGetIndex(ast)) {\n                        break;\n                    }\n                }\n                if (ast.index && ast.index.length === 0) {\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\n                }\n                return ast;\n            }\n            return word; // Token to Ast\n        }\n        return null;\n    }\n    /** 変数を生成 */\n    createVar(word, isConst, isExport) {\n        let gname = word.value;\n        const typeName = isConst ? 'const' : 'var';\n        if (this.funcLevel === 0) {\n            // global ?\n            if (gname.indexOf('__') < 0) {\n                gname = this.modName + '__' + gname;\n            }\n            this.funclist.set(gname, { type: typeName, value: '', isExport });\n            word.value = gname;\n            return word;\n        }\n        else {\n            // local\n            this.localvars.set(gname, { type: typeName, value: '' });\n            return word;\n        }\n    }\n    /** 変数名を検索して解決する\n     * @param {Ast|Token} word\n     * @return {Ast|Token}\n     */\n    getVarName(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (f) {\n            if (f && f.scope === 'global') {\n                word.value = f.name;\n            }\n            return word;\n        }\n        // 変数が見つからない\n        this.createVar(word, false, this.isExportDefault);\n        return word;\n    }\n    /** 変数名を検索して解決する */\n    getVarNameRef(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (!f) { // 変数が見つからない\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\n                word.value = this.modName + '__' + word.value;\n            }\n        }\n        else if (f && f.scope === 'global') {\n            word.value = f.name;\n        }\n        return word;\n    }\n    /** 複数の変数名を検索して解決する */\n    createVarList(words, isConst, isExport) {\n        for (let i = 0; i < words.length; i++) {\n            words[i] = this.createVar(words[i], isConst, isExport);\n        }\n        return words;\n    }\n    yJSONObjectValue() {\n        const a = [];\n        const firstToken = this.peek();\n        if (!firstToken) {\n            return null;\n        }\n        while (!this.isEOF()) {\n            while (this.check('eol')) {\n                this.get();\n            }\n            if (this.check('}')) {\n                break;\n            }\n            if (this.accept(['word', ':', this.yCalc])) {\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.accept(['string', ':', this.yCalc])) {\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.check('word')) {\n                const w = this.getCur();\n                w.type = 'string';\n                a.push({\n                    key: w, // Token to Ast\n                    value: w\n                });\n            }\n            else if (this.checkTypes(['string', 'number'])) {\n                const w = this.getCur();\n                a.push({\n                    key: w, // Token to Ast\n                    value: w\n                });\n            }\n            else {\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONObject() {\n        const map = this.peekSourceMap();\n        if (this.accept(['{', '}'])) {\n            return {\n                type: 'json_obj',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\n            return {\n                type: 'json_obj',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['{', this.yJSONObjectValue])) {\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    yJSONArrayValue() {\n        if (this.check('eol')) {\n            this.get();\n        }\n        const v1 = this.yCalc();\n        if (v1 === null) {\n            return null;\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        const a = [v1];\n        while (!this.isEOF()) {\n            if (this.check('eol')) {\n                this.get();\n            }\n            if (this.check(']')) {\n                break;\n            }\n            const v2 = this.yCalc();\n            if (v2 === null) {\n                break;\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n            a.push(v2);\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONArray() {\n        const map = this.peekSourceMap();\n        if (this.accept(['[', ']'])) {\n            return {\n                type: 'json_array',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\n            return {\n                type: 'json_array',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['[', this.yJSONArrayValue])) {\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    /** エラー監視構文 */\n    yTryExcept() {\n        const map = this.peekSourceMap();\n        if (!this.check('エラー監視')) {\n            return null;\n        }\n        const kansi = this.getCur(); // skip エラー監視\n        const block = this.yBlock();\n        if (!this.check2(['エラー', 'ならば'])) {\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\n        }\n        this.get(); // skip エラー\n        this.get(); // skip ならば\n        const errBlock = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'try_except',\n            block,\n            errBlock: errBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n}\n","/**\n * nako_prepare.js\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\n */\nclass ReplaceHistory {\n    constructor(from, to, index) {\n        this.from = from;\n        this.to = to;\n        this.index = index;\n    }\n}\nclass ConvertResult {\n    constructor(text, sourcePosition) {\n        this.text = text;\n        this.sourcePosition = sourcePosition;\n    }\n}\n/**\n * 置換後の位置から置換前の位置へマッピングできる文字列\n */\nexport class Replace {\n    constructor(code) {\n        this.history = [];\n        this.code = code;\n    }\n    getText() {\n        return this.code;\n    }\n    replaceAll(from, to) {\n        while (true) {\n            const index = this.getText().indexOf(from);\n            if (index === -1) {\n                break;\n            }\n            if (from.length !== to.length) {\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\n            }\n            this.code = this.code.replace(from, to);\n        }\n    }\n    getSourcePosition(i) {\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\n        for (const item of this.history) {\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\n                i += item.from - item.to;\n            }\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\n                if (item.to >= 2 && i === item.index + item.to - 1) {\n                    i = item.index + item.from - 1;\n                }\n                else {\n                    i = item.index;\n                }\n            }\n        }\n        return i;\n    }\n}\n/**\n * 字句解析を行う前に全角文字を半角に揃える\n *    [memo]\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\n *    for https://github.com/kujirahand/nadesiko3/issues/94\n */\nexport class NakoPrepare {\n    /** 唯一のインスタンスを返す */\n    static getInstance() {\n        if (!NakoPrepare._instance) {\n            NakoPrepare._instance = new NakoPrepare();\n        }\n        return NakoPrepare._instance;\n    }\n    constructor() {\n        // 単純な変換テーブル\n        this.convertTable = new Map([\n            // ハイフンへの変換\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\n            // 0x2d: true, // ASCIIのハイフン\n            [0x2010, '-'], // 別のハイフン\n            [0x2011, '-'], // 改行しないハイフン\n            [0x2013, '-'], // ENダッシュ\n            [0x2014, '-'], // EMダッシュ\n            [0x2015, '-'], // 全角のダッシュ\n            [0x2212, '-'], // 全角のマイナス\n            // チルダの変換\n            // 0x7e: true,\n            [0x02dc, '~'], // 小さなチルダ\n            [0x02F7, '~'], // Modifier Letter Low Tilde\n            [0x2053, '~'], // Swung Dash - 辞書のみだし\n            [0x223c, '~'], // Tilde Operator: 数学で Similar to\n            [0x301c, '~'], // Wave Dash(一般的な波ダッシュ)\n            [0xFF5E, '~'], // 全角チルダ\n            // スペースの変換\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\n            // 0x20: true,\n            [0x2000, ' '], // EN QUAD\n            [0x2002, ' '], // EN SPACE\n            [0x2003, ' '], // EM SPACE\n            [0x2004, ' '], // THREE-PER-EM SPACE\n            [0x2005, ' '], // FOUR-PER-EM SPACE\n            [0x2006, ' '], // SIX-PER-EM SPACE\n            [0x2007, ' '], // FIGURE SPACE\n            [0x2009, ' '], // THIN SPACE\n            [0x200A, ' '], // HAIR SPACE\n            [0x200B, ' '], // ZERO WIDTH SPACE\n            [0x202F, ' '], // NARROW NO-BREAK SPACE\n            [0x205F, ' '], // MEDIUM MATHEMATICAL SPACE\n            [0x3000, ' '], // 全角スペース\n            [0x3164, ' '], // HANGUL FILLER\n            // その他の変換\n            // [0x09, ' '], // TAB --> SPC\n            [0x203B, '#'], // '※' --- コメント\n            [0x3002, ';'], // 句点\n            [0x3010, '['], // '【'\n            [0x3011, ']'], // '】'\n            // 読点は「,」に変換する (#877)\n            [0x3001, ','], // 読点 --- JSON記法で「,」と「、」を区別したいので読点は変換しないことに。(#276)\n            [0xFF0C, ','], // 読点 '，' 論文などで利用、ただし句点はドットと被るので変換しない (#735)\n            [0x2716, '*'], // ×の絵文字 (#1183)\n            [0x2795, '+'], // +の絵文字 (#1183)\n            [0x2796, '-'], // -の絵文字 (#1183)\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\n        ]);\n    }\n    // 一文字だけ変換\n    /**\n     * @param {string} ch\n     */\n    convert1ch(ch) {\n        if (!ch) {\n            return '';\n        }\n        const c = ch.codePointAt(0) || 0;\n        // テーブルによる変換\n        const c2 = this.convertTable.get(c) || '';\n        if (c2) {\n            return c2;\n        }\n        // ASCIIエリア\n        if (c < 0x7F) {\n            return ch;\n        }\n        // 全角半角単純変換可能 --- '！' - '～'\n        if (c >= 0xFF01 && c <= 0xFF5E) {\n            const c2 = c - 0xFEE0;\n            return String.fromCodePoint(c2);\n        }\n        return ch;\n    }\n    /** convert code */\n    convert(code) {\n        if (!code) {\n            return [];\n        }\n        const src = new Replace(code);\n        // 改行コードを統一\n        src.replaceAll('\\r\\n', '\\n');\n        src.replaceAll('\\r', '\\n');\n        let flagStr = false; // 文字列リテラル内かどうか\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\n        const res = [];\n        let left = 0; // 現在処理中の部分文字列の左端の位置\n        let str = ''; // 文字列リテラルの値\n        // 一文字ずつ全角を半角に置換する\n        let i = 0;\n        while (i < src.getText().length) {\n            const c = src.getText().charAt(i);\n            const ch2 = src.getText().substr(i, 2);\n            // 文字列のとき\n            if (flagStr) {\n                if (c === endOfStr) {\n                    flagStr = false;\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i++;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 絵文字制御による文字列のとき\n            if (flagStr2) {\n                if (ch2 === endOfStr) {\n                    flagStr2 = false;\n                    if (endOfStr === '＊／') {\n                        endOfStr = '*/';\n                    } // 強制変換\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i += 2;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 文字列判定\n            if (c === '「') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '」';\n                str = '';\n                continue;\n            }\n            if (c === '『') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '』';\n                str = '';\n                continue;\n            }\n            if (c === '“') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '”';\n                str = '';\n                continue;\n            }\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\n            if (ch2 === '🌴' || ch2 === '🌿') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = ch2;\n                str = '';\n                continue;\n            }\n            const c1 = this.convert1ch(c);\n            if (c1 === '\"' || c1 === '\\'') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = c;\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす (#725)\n            if (c1 === '#') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true; // 本当はコメントだけど便宜上\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす\n            if (ch2 === '//' || ch2 === '／／') {\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\n                i += 2;\n                left = i;\n                flagStr = true;\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす\n            if (ch2 === '／＊') {\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '＊／';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす (#731)\n            if (ch2 === '/*') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '*/';\n                str = '';\n                continue;\n            }\n            // 変換したものを追加\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n            i++;\n            left = i;\n        }\n        if (flagStr || flagStr2) {\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n        }\n        return res;\n    }\n}\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\nexport function checkNakoMode(code, modeNames) {\n    // 先頭の256文字について調べる\n    code = code.substring(0, 256);\n    // 全角半角の揺れを吸収\n    code = code.replace(/(！|💡)/, '!');\n    // 範囲コメントを削除\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\n    // 毎文調べる\n    const lines = code.split(/[;。\\n]/, 30);\n    for (let line of lines) {\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\n        if (modeNames.indexOf(line) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお速度優先で忠実にJavaScriptのコードを生成する。\n */\nimport { NakoSyntaxError } from './nako_errors.mjs';\n// なでしこで定義した関数の開始コードと終了コード\nconst topOfFunction = '(function(){\\n';\nconst endOfFunction = '})';\nconst topOfFunctionAsync = '(async function(){\\n';\n/** コード生成オプション */\nexport class NakoGenOptions {\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\n        this.isTest = isTest;\n        this.codeStandalone = codeStandalone;\n        this.codeEnv = convEnv;\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\n        for (const fname of importFiles) {\n            this.importFiles.push(fname);\n        }\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGen {\n    /** constructor\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = new Map(com.getNakoFuncList());\n        /**\n         * なでしこで定義したテストの一覧\n         */\n        this.nakoTestFuncs = new Map();\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         */\n        this.loopId = 1;\n        /**\n         * 非同関数を何回使ったか\n         */\n        this.numAsyncFn = 0;\n        /**\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\n         */\n        this.usedAsyncFn = false;\n        /** 変換中の処理が、ループの中かどうかを判定する */\n        this.flagLoop = false;\n        this.__self = com;\n        /** コードジェネレータの種類 */\n        this.genMode = 'sync';\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\n        this.lastLineNo = null;\n        /** スタック */\n        this.varslistSet = this.setVarslistSet(com.__varslist);\n        /** スタックトップ */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0, // 行番号を出力しない\n            implicitTypeCasting: 0, // 数値加算でparseFloatを出力しない\n            invalidSore: 0, // 「それ」を用いない\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0, // 呼び出されたユーザ関数\n            systemFunction: 0, // システム関数(呼び出しコードを含む)\n            systemFunctionBody: 0, // システム関数(呼び出しコードを除く)\n            mumeiId: 0\n        };\n        /**\n         * 未定義の変数の警告を行う\n         */\n        this.warnUndefinedVar = true;\n        this.constPools = [];\n        this.constPoolsTemplate = [];\n        // 暫定変数\n        this.warnUndefinedReturnUserFunc = 1;\n        this.warnUndefinedCallingUserFunc = 1;\n        this.warnUndefinedCallingSystemFunc = 1;\n        this.warnUndefinedCalledUserFuncArgs = 1;\n        this.debugOption = com.debugOption;\n    }\n    static isValidIdentifier(name) {\n        // TODO: いらなそうな部分は削る\n        // https://stackoverflow.com/a/9337047\n        // eslint-disable-next-line no-misleading-character-class\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\n    }\n    /**\n     * com.__varslistを元に、this.varslistSetを設定\n     */\n    setVarslistSet(varslist) {\n        const vlist = [];\n        // 変数名の一覧をVarsSetに格納 (0: システム変数, 1: グローバル変数, 2: ローカル変数) 0と1のみ移す\n        for (let i = 0; i <= 1; i++) {\n            const scope = varslist[i];\n            const names = new Set(scope.keys());\n            names.delete('meta'); // remove 'meta' from names\n            vlist[i] = { isFunction: false, names, readonly: new Set() };\n        }\n        return vlist;\n    }\n    /**\n     * 改行を埋め込む\n     */\n    convLineno(node, forceUpdate = false, incLine = 0) {\n        // スピードモードでは行番号を埋め込まない\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        const lineNo = node.line + incLine;\n        let lineNoStr;\n        if (typeof node.line !== 'number') {\n            lineNoStr = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNoStr = `l${lineNo}`;\n        }\n        else {\n            lineNoStr = `l${lineNo}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNoStr === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNoStr;\n        }\n        // 実行行のデータ\n        const lineDataJSON = JSON.stringify(lineNoStr);\n        // デバッグ実行か\n        let debugCode = '';\n        if (this.debugOption.useDebug) {\n            // messageAction\n            if (this.debugOption.messageAction) {\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\n                    `line: ${lineDataJSON}});`;\n            }\n            // waitTime\n            if (lineNo >= 1) {\n                if (this.debugOption.waitTime > 0) {\n                    debugCode += `await __v0.get('秒待')(${this.debugOption.waitTime},__self);`;\n                }\n                // breakpoints\n                this.numAsyncFn += 1;\n                this.usedAsyncFn = true;\n                debugCode += `await __v0.get('__DEBUG_BP_WAIT')(${lineNo}, __self);`;\n            }\n            // end\n            debugCode += 'if (__v0.get(\\'__forceClose\\')) { return -1 };';\n        }\n        // 例: __v0.set('__line', 'l1:main.nako3')\n        // return `__v0.set('__line', ${lineDataJSON});` + debugCode\n        return `__line(${lineDataJSON});` + debugCode;\n    }\n    /**\n     * ローカル変数の取得用JavaScriptコードを生成する。\n     * @param {string} name\n     */\n    varname_get(name) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__self.__varslist[${2}].get(${JSON.stringify(name)})`;\n        }\n        else {\n            // ローカル\n            return `__self.__vars.get(${JSON.stringify(name)})`;\n        }\n    }\n    /**\n     * ローカル変数の設定用JavaScriptコードを生成する。\n     * @param {string} name\n     * @param {string} jsvalue\n     */\n    varname_set(name, jsvalue) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__self.__varslist[${2}].set(${JSON.stringify(name)}, ${jsvalue})`;\n        }\n        else {\n            // ローカル\n            return `__self.__vars.set(${JSON.stringify(name)}, ${jsvalue})`;\n        }\n    }\n    /**\n     * @param {string} name\n     * @returns {string}\n    */\n    static getFuncName(name) {\n        if (name.indexOf('__') >= 0) { // スコープがある場合\n            const a = name.split('__');\n            const scope = a[0];\n            const name3 = NakoGen.getFuncName(a[1]);\n            return `${scope}__${name3}`;\n        }\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\n        if (name2 === '') {\n            name2 = name;\n        }\n        return name2;\n    }\n    /** @param {Ast} node */\n    static convPrint(node) {\n        return `__print(${node});`;\n    }\n    /** @param {Ast} node */\n    convRequire(node) {\n        const moduleName = node.value;\n        return this.convLineno(node, false) +\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param com\n     * @param opt\n     */\n    getDefFuncCode(com, opt) {\n        let code = '';\n        // よく使う変数のショートカット\n        // jsInit の部分に設定するコード\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\n        code += 'const __self = self;\\n';\n        code += '__self.__self = __self;\\n';\n        code += 'const __varslist = __self.__varslist;\\n';\n        code += 'const __module = __self.__module;\\n';\n        code += 'const __v0 = __self.__v0 = __self.__varslist[0];\\n';\n        code += 'const __v1 = __self.__v1 = __self.__varslist[1];\\n';\n        code += 'const __vars = __self.__vars = __self.__varslist[2];\\n';\n        code += `const __modList = __self.__modList = ${JSON.stringify(com.getModList())}\\n`;\n        code += 'const __line = (lineno) => { __self.__v0.set(\\'__line\\', lineno); }\\n';\n        code += '__v0.set(\\'__line\\', \\'l0:__getDefFuncCode\\');\\n';\n        code += '__v0.set(\\'__forceClose\\', false);\\n';\n        code += `__v0.set('__useDebug', ${this.debugOption.useDebug});\\n`;\n        // 定数を埋め込む\n        code += '__self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\n        code += '__self.constPoolsTemplate = ' + JSON.stringify(this.constPoolsTemplate) + ';\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        this.nakoFuncList.forEach((value, key) => {\n            const f = trim(cleanGeneratedCode(String(value.fn), 1));\n            const isAsync = value.asyncFn ? 'true' : 'false';\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\n                `__self.__varslist[1].set(\"${key}\", ${f});\\n` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        });\n        if (nakoFuncCode !== '') {\n            code += '__v0.set(\\'__line\\', \\'関数の定義\\');\\n' + nakoFuncCode;\n        }\n        // テストの定義を行う\n        if (opt.isTest) {\n            let testCode = 'const __tests = [];\\n';\n            this.nakoTestFuncs.forEach((value) => {\n                const f = value.fn;\n                testCode += `${f};\\n`;\n            });\n            if (testCode !== '') {\n                code += '__v0.set(\\'__line\\', \\'テストの定義\\');\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        /** 関数一覧 */\n        const funcList = [];\n        // なでしこ関数を定義して this.nako_func[name] に定義する\n        const registFunc = (node) => {\n            if (!node.block) {\n                return;\n            }\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\n            for (let i = 0; i < blockList.length; i++) {\n                const t = blockList[i];\n                if (t.type === 'def_func') {\n                    if (!t.name) {\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\n                    }\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1].set(name, () => { }); // 事前に適当な値を設定\n                    this.varslistSet[1].names.add(name); // global\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\n                    this.nakoFuncList.set(name, {\n                        josi: meta.josi,\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        fn: () => { },\n                        type: 'func',\n                        asyncFn: t.asyncFn,\n                        isExport: t.isExport\n                    });\n                    funcList.push({ name, node: t });\n                    // eslint-disable-next-line brace-style\n                }\n                // 実行速度優先 などのオプションが付いている場合の処理\n                else if (t.type === 'speed_mode') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        // 関数の登録\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.setVarslistSet(this.__self.__varslist);\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param node\n     * @param opt\n     */\n    convGen(node, opt) {\n        const result = this.convLineno(node, false) + this._convGen(node, true);\n        if (opt.isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        if (!node) {\n            return '';\n        }\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            case 'nop':\n                break;\n            case 'block':\n                if (!node.block) {\n                    return code;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\n                for (let i = 0; i < blocks.length; i++) {\n                    const b = blocks[i];\n                    code += this._convGen(b, false);\n                }\n                break;\n            case 'comment':\n            case 'eol':\n                code += this.convComment(node);\n                break;\n            case 'break':\n                code += this.convCheckLoop(node, 'break');\n                break;\n            case 'continue':\n                code += this.convCheckLoop(node, 'continue');\n                break;\n            case 'end':\n                code += '__v0.get(\\'終\\')(__self);';\n                break;\n            case 'number':\n                code += node.value;\n                break;\n            case 'bigint':\n                code += node.value;\n                break;\n            case 'string':\n                code += this.convString(node);\n                break;\n            case 'def_local_var':\n                code += this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.convDefLocalVarlist(node);\n                break;\n            case 'let':\n                code += this.convLet(node);\n                break;\n            case 'inc':\n                code += this.convInc(node);\n                break;\n            case 'word':\n            case 'variable':\n                code += this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                code += this.convOp(node);\n                break;\n            case 'renbun':\n                code += this.convRenbun(node);\n                break;\n            case 'not':\n                code += '((' + this._convGen(node.value, true) + ')?false:true)';\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                code += this.convCallFunc(node, isExpression);\n                break;\n            case 'if':\n                code += this.convIf(node);\n                break;\n            case 'for':\n                code += this.convFor(node);\n                break;\n            case 'foreach':\n                code += this.convForeach(node);\n                break;\n            case 'repeat_times':\n                code += this.convRepeatTimes(node);\n                break;\n            case 'speed_mode':\n                code += this.convSpeedMode(node, isExpression);\n                break;\n            case 'performance_monitor':\n                code += this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'while':\n                code += this.convWhile(node);\n                break;\n            case 'atohantei':\n                code += this.convAtohantei(node);\n                break;\n            case 'switch':\n                code += this.convSwitch(node);\n                break;\n            case 'let_array':\n                code += this.convLetArray(node);\n                break;\n            case '配列参照':\n                code += this.convRefArray(node);\n                break;\n            case 'json_array':\n                code += this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                code += this.convJsonObj(node);\n                break;\n            case 'func_obj':\n                code += this.convFuncObj(node);\n                break;\n            case 'bool':\n                code += (node.value) ? 'true' : 'false';\n                break;\n            case 'null':\n                code += 'null';\n                break;\n            case 'def_test':\n                code += this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.convDefFunc(node);\n                break;\n            case 'return':\n                code += this.convReturn(node);\n                break;\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    /** 変数を検索 */\n    findVar(name, jsvalue = null) {\n        // __vars ? (ローカル変数)\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\n            return {\n                i: this.varslistSet.length - 1,\n                name,\n                isTop: true,\n                js: this.varname_get(name),\n                js_set: this.varname_set(name, String(jsvalue))\n            };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\n                // それ以外の変数は、必ず__varslistに入っている。\n                return {\n                    i,\n                    name,\n                    isTop: false,\n                    js: `__self.__varslist[${i}].get(${JSON.stringify(name)})`,\n                    js_set: `__self.__varslist[${i}].set(${JSON.stringify(name)}, ${jsvalue})`\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                if (this.warnUndefinedVar) {\n                    // main__は省略して表示するように。 #1223\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\n                }\n            }\n            this.varsSet.names.add(name);\n            return this.varname_get(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getNakoFunc(name);\n            if (!pv) {\n                return `${res.js}/*[link_error]l${lno}:${position.file}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi || pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        return this.genVar(name, node);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        const lno = this.convLineno(node, false);\n        let value;\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        else if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        else {\n            return lno + 'return;';\n        }\n        if (this.warnUndefinedReturnUserFunc === 0) {\n            return lno + `return ${value};`;\n        }\n        else {\n            const poolIndex = this.addConstPool('ユーザ関数からundefinedが返されています', [], node.file, node.line);\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\n        }\n    }\n    getConstPoolsTemplateId(msg) {\n        let id = this.constPoolsTemplate.indexOf(msg);\n        if (id < 0) {\n            id = this.constPoolsTemplate.length;\n            this.constPoolsTemplate[id] = msg;\n        }\n        return id;\n    }\n    addConstPool(msg, args, file, line) {\n        // file\n        file = '' + file;\n        const fileNo = this.getConstPoolsTemplateId(file);\n        // msg\n        const msgNo = this.getConstPoolsTemplateId(msg);\n        // args\n        const args2 = [];\n        for (const i in args) {\n            const arg = '' + args[i];\n            const argNo = this.getConstPoolsTemplateId(arg);\n            args2.push(argNo);\n        }\n        const poolIndex = this.constPools.length;\n        this.constPools.push([msgNo, args2, fileNo, line]);\n        return poolIndex;\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        return this.convLineno(node) + cmd + ';';\n    }\n    convDefFuncCommon(node, name) {\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\n        let performanceMonitorInjectAtStart = '';\n        let performanceMonitorInjectAtEnd = '';\n        if (this.performanceMonitor.userFunction !== 0) {\n            let key = name;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\n                'const uf_start = performance.now() * 1000;\\n' +\n                'return function () {\\n' +\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\n                `}};})('${key}', 'user');` +\n                'try {\\n';\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\n        }\n        let variableDeclarations = '';\n        const indent = '    ';\n        let pushStack = '';\n        let popStack = '';\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        variableDeclarations += indent + 'const 引数 = arguments;\\n';\n        // ローカル変数を生成 (再帰関数呼び出しで引数の値が壊れる問題がある #1663)\n        // 暫定変数__localVarsに現在のローカル変数の値をPUSHし、変数を抜ける時にPOPする)\n        // 関数として宣言しているが、JS関数となでしこ関数では変数管理の方法が異なるため、完全なローカル変数としては使えない\n        // 必ず、pushStack/popStack する必要がある\n        pushStack += '\\n// PUSH STACK\\n';\n        pushStack += 'const __localvars = __self.__vars;\\n';\n        pushStack += '__self.__vars = new Map();\\n';\n        pushStack += 'try {\\n';\n        popStack += '} finally {\\n';\n        popStack += indent + '// POP STACK\\n';\n        popStack += indent + 'self.__vars = __localvars;\\n';\n        popStack += '}\\n';\n        // 宣言済みの名前を保存\n        const varsDeclared = Array.from(this.varsSet.names.values());\n        let code = '';\n        // 引数をローカル変数に設定\n        const meta = (!name) ? node.meta : node.name.meta;\n        for (let i = 0; i < meta.varnames.length; i++) {\n            const word = meta.varnames[i];\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\n                code += indent + this.varname_set(word, `arguments[${i}]`) + ';\\n';\n            }\n            else {\n                // check undefined\n                let errMsg = `匿名関数の引数『${word}』にundefinedが渡されました`;\n                if (name) {\n                    errMsg = `ユーザ関数『${name}』の引数『${word}』にundefinedが渡されました`;\n                }\n                const warnJS = `__self.logger.warn('${errMsg}', {line: ${node.line}, file: ${JSON.stringify(node.file)}});`;\n                const checkFunc = `((a) => { if (a === undefined) { ${warnJS} }; return a; })`;\n                const callCheckFunc = `${checkFunc}(arguments[${i}])`;\n                code += indent + this.varname_set(word, callCheckFunc) + ';\\n';\n            }\n            this.varsSet.names.add(word);\n        }\n        // 関数定義は、グローバル領域で。\n        if (name) {\n            this.usedFuncSet.add(name);\n            this.varslistSet[1].names.add(name);\n            if (this.nakoFuncList.get(name) === undefined) {\n                // 既に generate で作成済みのはず(念のため)\n                this.nakoFuncList.set(name, {\n                    josi: node.name.meta.josi,\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    fn: () => { },\n                    type: 'func',\n                    asyncFn: false,\n                    isExport: null\n                });\n                this.__self.getLogger().warn(`generateで未定義の状態の関数『${name}』が動的に登録されています。`);\n            }\n        }\n        // ブロックを解析\n        const oldUsedAsyncFn = this.usedAsyncFn;\n        this.usedAsyncFn = false || this.debugOption.useDebug;\n        const block = this._convGen(node.block, false);\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\n        // 関数の最後に、変数「それ」をreturnするようにする\n        if (this.speedMode.invalidSore === 0) {\n            code += `  return (${this.varname_get('それ')});\\n`;\n        }\n        // パフォーマンスモニタ:ユーザ関数のinject\n        code += performanceMonitorInjectAtEnd;\n        // ブロックでasyncFnを使ったか\n        if (name && this.usedAsyncFn) {\n            const f = this.nakoFuncList.get(name);\n            if (f) {\n                f.asyncFn = true;\n            }\n        }\n        // 関数の末尾に、ローカル変数をPOP\n        // 関数内で定義されたローカル変数の宣言\n        for (const name of Array.from(this.varsSet.names.values())) {\n            if (!varsDeclared.includes(name)) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    variableDeclarations += `  var ${name};\\n`;\n                }\n            }\n        }\n        if (this.speedMode.invalidSore === 0) {\n            if (NakoGen.isValidIdentifier('それ')) {\n                variableDeclarations += '  var それ = \\'\\';\\n';\n            }\n            else {\n                variableDeclarations += `  ${this.varname_get('それ')} = '';`;\n            }\n        }\n        // usedAsyncFnの値に応じて関数定義の方法を変更\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\n        // 関数コード全体を構築\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\n        code = tof + performanceMonitorInjectAtStart + pushStack + variableDeclarations + lineInfo + code + popStack;\n        code += endOfFunction;\n        // 名前があれば、関数を登録する\n        if (name) {\n            const nameFuncValue = this.nakoFuncList.get(name);\n            if (nameFuncValue) {\n                nameFuncValue.fn = code;\n                nameFuncValue.asyncFn = this.usedAsyncFn;\n                meta.asyncFn = this.usedAsyncFn;\n            }\n        }\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        if (name) {\n            this.__self.__varslist[1].set(name, code);\n        }\n        return code;\n    }\n    convDefTest(node) {\n        const name = node.name.value;\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\n        // ブロックを解析\n        const block = this._convGen(node.block, false);\n        code += `   ${block}\\n` +\n            '}});';\n        this.nakoTestFuncs.set(name, {\n            josi: node.name.meta.josi,\n            fn: code,\n            type: 'test_func'\n        });\n        // ★この時点ではテストコードを生成しない★\n        // プログラム冒頭でコード生成時にテストの定義を行う\n        return '';\n    }\n    convDefFunc(node) {\n        // ※ [関数定義のメモ]\n        // ※ 関数の定義はプログラムの冒頭に移される。\n        // ※ そのため、生成されたコードはここでは返さない\n        // ※ registerFunction を参照\n        if (!node.name) {\n            return '';\n        }\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        return '';\n    }\n    convFuncObj(node) {\n        return '/*convFuncObj*/' + this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            const key = this._convGen(e.key, true);\n            const val = this._convGen(e.value, true);\n            return `${key}:${val}`;\n        });\n        return '{' + codelist.join(',') + '}';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            return this._convGen(e, true);\n        });\n        return '[' + codelist.join(',') + ']';\n    }\n    convRefArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index;\n        let code = name;\n        if (!list) {\n            return code;\n        }\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        return code;\n    }\n    convLetArray(node) {\n        const id = this.loopId++;\n        const name = this._convGen(node.name, true);\n        const list = node.index || [];\n        let codeInit = '';\n        let code = name;\n        let codeArray = '';\n        // codeInit?\n        if (node.checkInit) {\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\n            //\n            // [name]の内容は[__self.__varslist[2].get(\"a__A\")]のようなものになっているはず\n            //\n            const nodeName = node.name;\n            if (nodeName && nodeName.type === 'word') {\n                const word = nodeName.value;\n                const tmpVar = `$nako_tmp_a${id}`;\n                const initArrayCode = this.varname_set(word, arrayDefCode);\n                codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${initArrayCode} };\\n`;\n                codeInit += `${tmpVar} = ${name};\\n`;\n                for (let i = 0; i < list.length - 1; i++) {\n                    const idx = this._convGen(list[i], true);\n                    codeArray += `[${idx}]`;\n                    codeInit += `\\n/*配列初期化${i}*/if (!(${tmpVar}${codeArray} instanceof Array)) { ${tmpVar}${codeArray} = ${arrayDefCode}; };`;\n                }\n                codeInit += '\\n';\n            }\n        }\n        // array\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        // value\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        code += ' = ' + value + ';\\n';\n        // generate code\n        const src = this.convLineno(node, false) + codeInit + code;\n        return src;\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        // forのIDを取得\n        const idLoop = this.loopId++;\n        const varI = `$nako_i${idLoop}`;\n        // ループ変数について\n        let loopVarSetter = '';\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value;\n            this.varsSet.names.add(varName);\n            loopVarSetter = this.varname_set(varName, varI);\n        }\n        // ループ条件を確認\n        const kara = this._convGen(node.from, true);\n        const made = this._convGen(node.to, true);\n        const flagDown = node.flagDown;\n        let inc = '1';\n        if (node.inc && node.inc !== 'null') {\n            inc = this._convGen(node.inc, true);\n        }\n        // ループ内のブロック内容を得る\n        const block = this.convGenLoop(node.block);\n        // ループ条件を変数に入れる用\n        const varFrom = `$nako_from${idLoop}`;\n        const varTo = `$nako_to${idLoop}`;\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', varI);\n        }\n        const code = this.convLineno(node, false) + '\\n' +\n            `/*[convFor id=${idLoop}]*/\\n` +\n            `const ${varFrom} = ${kara};\\n` +\n            `const ${varTo} = ${made};\\n` +\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\n            `    ${sorePrefex};${loopVarSetter}\\n` +\n            '    // for block begin\\n' +\n            `    ${block}\\n` +\n            '    // for block end\\n' +\n            '  };\\n' +\n            '} else { // down\\n' +\n            `  if (${flagDown}) {` +\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\n            `      ${sorePrefex};${loopVarSetter}\\n` +\n            '      // for block begin\\n' +\n            `      ${block}\\n` +\n            '      // for block end\\n' +\n            '    }\\n' +\n            '  };\\n' +\n            '};\\n' +\n            `//[/convFor id=${idLoop}]\\n`;\n        return code;\n    }\n    convForeach(node) {\n        // foreachのIDを取得\n        const id = this.loopId++;\n        const loopKeyVar = `$nako_i${id}`;\n        const loopValueVar = `$nako_foreach_value${id}`;\n        const loopDataVar = `$nako_foreach_data${id}`;\n        // 「対象」「対象キー」を取得 --- blockより早く変数を定義する必要がある\n        let valueVar = '対象';\n        if (node.name) { // 対象変数がある場合、対象は設定されない\n            valueVar = '' + node.name.value;\n        }\n        this.varsSet.names.add(valueVar);\n        const keyVar = '対象キー';\n        this.varsSet.names.add(keyVar);\n        const keySetter = this.varname_set(keyVar, loopKeyVar);\n        // 「それ」(対象のエイリアス)の設定\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', loopValueVar);\n        }\n        // 反復するデータを取得\n        let targetData = '';\n        if (node.target === null) {\n            if (this.speedMode.invalidSore === 0) {\n                targetData = this.varname_get('それ');\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n            }\n        }\n        else {\n            targetData = this._convGen(node.target, true);\n        }\n        // 反復するブロックを取得\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        // コードを生成\n        const code = this.convLineno(node, false) + '\\n' +\n            `// [convForeach id=${id}]\\n` +\n            `let ${loopDataVar} = ${targetData};\\n` +\n            '// foreach Map?\\n' +\n            `if (${loopDataVar} instanceof Map) { // Objectに強制変換\\n` +\n            `  let tmp = {}; for (let tmpKey of ${loopDataVar}.keys()) { tmp[tmpKey] = ${loopDataVar}.get(tmpKey); }; \\n` +\n            `  ${loopDataVar} = tmp;\\n` +\n            '}\\n' +\n            `for (let ${loopKeyVar} in ${loopDataVar}) {\\n` +\n            `  if (!${loopDataVar}.hasOwnProperty(${loopKeyVar})) { continue }\\n` +\n            '  // 対象キーの設定\\n' +\n            `  ${keySetter}\\n` +\n            '  // 対象の設定\\n' +\n            `  let ${loopValueVar} = $nako_foreach_data${id}[${loopKeyVar}]\\n` +\n            `  ${sorePrefex};\\n` +\n            `  ${this.varname_set(valueVar, loopValueVar)}\\n` +\n            '  // [convForeach::block]\\n' +\n            `  ${block}\\n` +\n            '  // [/convForeach::block]\\n' +\n            '}\\n' +\n            `// [/convForeach id=${id}]\\n`;\n        return code;\n    }\n    convRepeatTimes(node) {\n        // ループのIDを取得\n        const id = this.loopId++;\n        const varI = `$nako_i${id}`;\n        const varCount = `$nako_times_data${id}`;\n        const codeCount = this._convGen(node.value, true);\n        // 回数\n        this.varsSet.names.add('回数');\n        const codeCounterSetter = this.varname_set('回数', varI);\n        // ブロックを得る\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        // それ\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = this.varname_set('それ', varI);\n        }\n        const code = this.convLineno(node, false) + '\\n' +\n            `// [convRepeatTimes id=${id}] // 『n回』構文\\n` +\n            `let ${varCount} = ${codeCount};\\n` +\n            `for (let ${varI} = 1; ${varI} <= ${varCount}; ${varI}++) {\\n` +\n            `  ${sorePrefex};${codeCounterSetter}\\n` +\n            `  ${block}\\n` +\n            '}\\n' +\n            `// [/convRepeatTimes id=${id}]\\n`;\n        return code;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convSpeedMode(node, isExpression) {\n        if (!node.options) {\n            return '';\n        }\n        const prev = { ...this.speedMode };\n        if (node.options['行番号無し']) {\n            this.speedMode.lineNumbers++;\n        }\n        if (node.options['暗黙の型変換無し']) {\n            this.speedMode.implicitTypeCasting++;\n        }\n        if (node.options['強制ピュア']) {\n            this.speedMode.forcePure++;\n        }\n        if (node.options['それ無効']) {\n            this.speedMode.invalidSore++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.speedMode = prev;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (!node.options) {\n            return '';\n        }\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.performanceMonitor = prev;\n        }\n    }\n    convWhile(node) {\n        const cond = this._convGen(node.cond, true);\n        const block = trim(cleanGeneratedCode(this.convGenLoop(node.block), 1));\n        const code = '// [convWhile]\\n' +\n            this.convLineno(node, false) + '\\n' +\n            `while (${cond})` + '{\\n' +\n            `  ${block}` + '\\n' +\n            '}\\n' +\n            '// [convWhile]\\n';\n        return code;\n    }\n    convAtohantei(node) {\n        const id = this.loopId++;\n        const varId = `$nako_i${id}`;\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = 'while (true) {\\n' +\n            `  ${block}\\n` +\n            `  let ${varId} = ${cond};\\n` +\n            `  if (${varId}) { continue } else { break }\\n` +\n            '}\\n\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convSwitch(node) {\n        const value = this._convGen(node.value, true);\n        const cases = node.cases || [];\n        let body = '';\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            const cblock = this.convGenLoop(cases[i][1]);\n            if (cvalue.type === '違えば') {\n                body += '  default:\\n';\n            }\n            else {\n                const cvalueCode = this._convGen(cvalue, true);\n                body += `  case ${cvalueCode}:\\n`;\n            }\n            body += `    ${cblock}\\n` +\n                '    break\\n';\n        }\n        const code = `switch (${value})` + '{\\n' +\n            `${body}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convIf(node) {\n        // 条件\n        const expr = this._convGen(node.expr, true);\n        // TRUEブロック\n        const block = trim(cleanGeneratedCode(this._convGen(node.block, false), 1));\n        // FALSEブロック\n        let falseBlock = '';\n        if (node.false_block) {\n            falseBlock = trim(cleanGeneratedCode(this.convGenLoop(node.false_block), 1));\n        }\n        let code = '// [convIf]\\n' +\n            this.convLineno(node, false) + '\\n' +\n            `if (${expr}) {\\n` +\n            `  ${block}\\n` +\n            '}';\n        if (falseBlock !== '') {\n            code +=\n                '  else {\\n' +\n                    `  ${falseBlock}\\n` +\n                    '}\\n';\n        }\n        code += '\\n// [/convIf]\\n';\n        return code;\n    }\n    convFuncGetArgsCalcType(_funcName, _func, node) {\n        const args = [];\n        const opts = {};\n        const nodeArgs = (node.args) ? node.args : [];\n        for (let i = 0; i < nodeArgs.length; i++) {\n            const arg = nodeArgs[i];\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\n                args.push(this.varname_get('それ'));\n                opts.sore = true;\n            }\n            else {\n                const argCode = this._convGen(arg, true);\n                args.push(`/*arg${i}*/${argCode}`);\n            }\n        }\n        return [args, opts];\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convCallFunc(node, isExpression) {\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        // どの関数を呼び出すのか関数を特定する\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (!func) {\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\n            }\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n        }\n        else {\n            func = this.nakoFuncList.get(funcName);\n            // 無名関数の可能性\n            if (func === undefined) {\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\n        const args = argsInfo[0];\n        const argsOpts = argsInfo[1];\n        // function\n        this.usedFuncSet.add(funcName);\n        if (funcName === '名前空間設定') {\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__self.__varslist[0].get('名前空間設定')(${args[0]}, __self);__self.__modName=${args[0]};\\n`;\n        }\n        else if (funcName === 'プラグイン名設定') {\n            return `\\n__self.__varslist[0].get('プラグイン名設定')(${args[0]}, __self);\\n`;\n        }\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\n        args.push('__self');\n        let funcDef = 'function';\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\n            // 展開されたローカル変数の列挙\n            const localVars = [];\n            for (const name of Array.from(this.varsSet.names.values())) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    localVars.push({ str: JSON.stringify(name), js: this.varname_get(name) });\n                }\n            }\n            // --- 実行前 ---\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\n            funcBegin += '__self.__locals = __vars;\\n';\n            // 全ての展開されたローカル変数を __self.__locals に保存する\n            if (localVars.length > 0) {\n                funcBegin += '/* 全ての展開されたローカル変数を __self.__locals に保存 */\\n';\n                for (const v of localVars) {\n                    funcBegin += `__self.__locals.set(${v.str}, ${v.js});\\n`;\n                }\n            }\n            // --- 実行後 ---\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\n            if (localVars.length > 0) {\n                funcEnd += '/* 全ての展開されたローカル変数を __self.__locals から受け取る */\\n';\n                for (const v of localVars) {\n                    if (v.js !== 'それ') {\n                        funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\n                    }\n                }\n            }\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        const indent = (text, n) => {\n            let result = '';\n            for (const line of text.split('\\n')) {\n                if (line !== '') {\n                    result += '  '.repeat(n) + line + '\\n';\n                }\n            }\n            return result;\n        };\n        // 引数チェックの例外 #1260\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\n        // 関数呼び出しコードの構築\n        let argsCode;\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\n            argsCode = args.join(',');\n        }\n        else {\n            const argsA = [];\n            args.forEach((arg) => {\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\n                    argsA.push(`${arg}`);\n                }\n                else {\n                    // 引数のundefinedチェックのコードを入れる\n                    const msg = (res.i === 0) ? '命令『$0』の引数にundefinedを渡しています。' : 'ユーザ命令『$0』の引数にundefinedを渡しています。';\n                    const poolIndex = this.addConstPool(msg, [funcName], node.file, node.line);\n                    // argが空になる対策 #1315\n                    const argStr = (arg === '') ? '\"\"' : arg;\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\n                }\n            });\n            argsCode = argsA.join(', ');\n        }\n        let funcCall = `${res.js}(${argsCode})`;\n        if (func.asyncFn) {\n            funcDef = `async ${funcDef}`;\n            funcCall = `await ${funcCall}`;\n            this.numAsyncFn++;\n            this.usedAsyncFn = true;\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\n            let key = funcName;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            funcCall = `(${funcDef} (key, type) {\\n` +\n                'const sbf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + funcCall + ';\\n' +\n                '} finally {\\n' +\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\n                `}}})('${funcName}_body', 'sysbody')\\n`;\n        }\n        let code = '';\n        if (func.return_none) {\n            // ------------------------------------\n            // 戻り値のない関数の場合\n            // ------------------------------------\n            if (funcEnd === '') {\n                code = `/*戻値のない関数呼出1*/${funcBegin}${funcCall};\\n`;\n            }\n            else {\n                code = `/*戻値のない関数呼出2*/${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\n            }\n        }\n        else {\n            // ------------------------------------\n            // 戻り値のある関数の場合\n            // ------------------------------------\n            let sorePrefex = '';\n            let sorePostfix = '';\n            if (this.speedMode.invalidSore === 0) {\n                // 関数の戻り値を記録\n                sorePrefex = '__self.__setSore(';\n                sorePostfix = ')';\n            }\n            if (funcBegin === '' && funcEnd === '') {\n                code = `${sorePrefex}${funcCall}${sorePostfix}`;\n            }\n            else {\n                if (funcEnd === '') {\n                    const funcBody = `${sorePrefex}${funcCall}${sorePostfix}`;\n                    const funcObj = `${funcDef}(){ return ${funcBody} }`;\n                    const funcCallThis = `(${funcObj}).call(this)`;\n                    code = `/* funcCallThis1 */${funcCallThis}`;\n                }\n                else { // つまり、pure=falseの場合\n                    code = `/* funcCallThis2 */(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall}${sorePostfix};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\n                }\n            }\n            // ...して\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\n                code += ';\\n';\n            }\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\n            code = '(function (key, type) {\\n' +\n                'const sf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + code + ';\\n' +\n                '} finally {\\n' +\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\n                `}}})('${funcName}_sys', 'system')\\n`;\n        }\n        return code;\n    }\n    convRenbun(node) {\n        const right = this._convGen(node.right, true);\n        const left = this._convGen(node.left, false);\n        this.numAsyncFn++;\n        this.usedAsyncFn = true;\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\n    }\n    convOp(node) {\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        let op = node.operator || ''; // 演算子\n        let right = this._convGen(node.right, true);\n        let left = this._convGen(node.left, true);\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\n            if (node.left && node.left.type !== 'number' && node.left.type !== 'bigint') {\n                left = `self.__parseFloatOrBigint(${left})`;\n            }\n            if (node.right && node.right.type !== 'number' && node.right.type !== 'bigint') {\n                right = `self.__parseFloatOrBigint(${right})`;\n            }\n        }\n        // 階乗\n        if (op === '^' || op === '**') {\n            return `((${left}) ** (${right}))`;\n        }\n        // 整数の割り算 #1152\n        if (op === '÷÷') {\n            return `(Math.floor(${left} / ${right}))`;\n        }\n        // 一般的なオペレータに変換\n        if (OP_TBL[op]) {\n            op = OP_TBL[op];\n        }\n        //\n        return `(${left} ${op} ${right})`;\n    }\n    convInc(node) {\n        // idを得る\n        const id = this.loopId++;\n        const valueVar = `$nako_v${id}`;\n        // もし値が省略されていたら、変数「それ」に代入する\n        let incValue = null;\n        if (this.speedMode.invalidSore === 0) {\n            incValue = this.varname_get('それ');\n        }\n        if (node.value) {\n            incValue = this._convGen(node.value, true);\n        }\n        if (incValue == null) {\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\n        }\n        // 配列への代入か(core#86)\n        let code = '';\n        let varGetter = '';\n        let varSetter = '';\n        let varInitter = '';\n        const nodeName = node.name;\n        if (nodeName.type === '配列参照') {\n            varGetter = this.convRefArray(nodeName);\n            varSetter = `${varGetter} = ${valueVar}`;\n            varInitter = `${varGetter} = 0`;\n        }\n        else {\n            // 変数名\n            const name = nodeName.value;\n            let res = this.findVar(name, valueVar);\n            if (res === null) {\n                this.varsSet.names.add(name);\n                res = this.findVar(name, valueVar);\n                if (!res) {\n                    throw new Error('『増』または『減』で変数が見当たりません。');\n                }\n            }\n            varGetter = res.js;\n            varSetter = res.js_set;\n            res = this.findVar(name, '0');\n            if (res !== null) {\n                varInitter = res.js_set;\n            }\n        }\n        // 自動初期化するか\n        code += '\\n/*[convInc]*/\\n';\n        code += this.convLineno(node, false) + '\\n';\n        code += `let ${valueVar} = ${varGetter}\\n`;\n        code += `if (typeof ${valueVar} === 'undefined') { ${varInitter}; }\\n`;\n        code += `${valueVar} = ${varGetter} + ${incValue};\\n`;\n        code += `${varSetter}\\n`;\n        code += '/*[/convInc]*/\\n';\n        return code;\n    }\n    convLet(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname_get('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name, value);\n        let code = '';\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname_set(name, value)};`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js_set};`;\n        }\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convDefLocalVar(node) {\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        //\n        this.varsSet.names.add(name);\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        const code = `${this.varname_set(name, value)};\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        let code = '';\n        const vtype = node.vartype; // 変数 or 定数\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const id = this.loopId++;\n        const varI = `$nako_i${id}`;\n        code += `let ${varI} = ${value}\\n`;\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\n        const names = (node.names) ? node.names : [];\n        for (let i = 0; i < names.length; i++) {\n            const nameObj = names[i];\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                // 複数変数文では、二重定義も許容する #1027\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\n            }\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            code += this.varname_set(name, `${varI}[${i}]`) + ';\\n';\n        }\n        return this.convLineno(node, false) +\n            '/*[convDefLocalVarlist]*/\\n' +\n            code +\n            '/*[/convDefLocalVarlist]*/\\n';\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            const rf = (a, name) => {\n                return '\"+' + this.genVar(name, node) + '+\"';\n            };\n            value = value.replace(/\\{(.+?)\\}/g, rf);\n            value = value.replace(/｛(.+?)｝/g, rf);\n        }\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const block = this._convGen(node.block, false);\n        const errBlock = this._convGen(node.errBlock, false);\n        return this.convLineno(node, false) +\n            `try {\\n${block}\\n} catch (e) {\\n` +\n            '  __self.__setSysVar(\"エラーメッセージ\", e.message);\\n' +\n            ';\\n' +\n            `${errBlock}}\\n`;\n    }\n    getUsedFuncSet() {\n        return this.usedFuncSet;\n    }\n    getPluginInitCode() {\n        // プラグインの初期化関数を実行する\n        let code = '';\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0.get('!${name}:初期化')(__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.set(\\'__line\\', \\'l0:プラグインの初期化\\');\\n' + pluginCode;\n        }\n        return code;\n    }\n}\n/** template of standalone js code */\nconst STANDALONE_CODE = `\n// === generated by nadesiko3 v__version__(core:__coreVersion__) ===\n// -----------------------------------------------------------------\n// <nadesiko3standalone>\n// -----------------------------------------------------------------\n// --- import\nimport path from 'path'\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\n__codeImportFiles__\n// --- init global self\nconst self = {}\nself.coreVersion = '__coreVersion__'\nself.version = '__version__'\nself.logger = {\n  error: (message) => { console.error(message) },\n  warn: (message) => { console.warn(message) },\n  send: (level, message) => { console.log(message) },\n  runtimeError: (message, lineInfo) => { console.error(message, lineInfo) }\n};\nself.__varslist = [new Map(), new Map(), new Map()]\nself.__v0 = self.__varslist[0]\nself.initFuncList = []\nself.clearFuncList = []\n// --- jsInit ---\n__jsInit__\n// --- Copy module functions ---\nfor (const mod of __importNames__) {\n  for (const funcName in mod) {\n    // プラグインの初期化とクリア関数を登録\n    if (funcName === '初期化') {\n      __self.initFuncList.push(mod[funcName].fn)\n      continue\n    }\n    if (funcName === '!クリア') {\n      __self.clearFuncList.push(mod[funcName].fn)\n      continue\n    }\n    // 関数や定数を登録\n    const f = mod[funcName]\n    if (f.type === 'func') { // 関数\n      __self.__varslist[0].set(funcName, f.fn)\n    } else { // 定数\n      __self.__varslist[0].set(funcName, f.value)\n    }\n  }\n}\n__self.__vars = __self.__varslist[2];\n__self.__module = {};\n__self.__locals = new Map();\n__self.__genMode = 'sync';\n// プラグインの初期化コードを実行\n__self.initFuncList.map(f => f(self))\n// standalone\n__self.__v0.set('__standalone', true)\n// -----------------------------------------------------------------\ntry {\n  try {\n// -----------------------------------------------------------------\n// <prepareMainCode>\n__codeStandalone__\n// </prepareMainCode>\n// -----------------------------------------------------------------\n// <mainCode>\n// -----------------------------------------------------------------\n__codeJS__\n// -----------------------------------------------------------------\n// </mainCode>\n// -----------------------------------------------------------------\n  } catch (err) {\n    __self.logger.error(err);\n    throw err;\n  }\n} finally {\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\n  __self.clearFuncList.map(f => f(__self))\n}\n// -----------------------------------------------------------------\n// </nadesiko3standalone>\n// -----------------------------------------------------------------\n`;\n/**\n * @param com\n * @param ast\n * @param opt\n */\nexport function generateJS(com, ast, opt) {\n    // NakoGenのインスタンスを作成\n    const gen = new NakoGen(com);\n    // ※ [関数定義に関するコード生成のヒント]\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\n    // (1) ユーザー定義関数をシステムに登録する\n    gen.registerFunction(ast);\n    // (2) JSコードを生成する\n    let js = trim(cleanGeneratedCode(gen.convGen(ast, opt), 1));\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\n    const jsInit = gen.getDefFuncCode(com, opt);\n    // ランダムな関数名を生成\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\n    // テストの実行\n    if (js && opt.isTest) {\n        js += '\\n__self._runTests(__tests);\\n';\n    }\n    // async method\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\n        js = `\n// ------------------------------------------------------------------\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\n// ------------------------------------------------------------------\nasync function ${asyncMain}(__self) {\n  // --- code_begin ---\n  ${js}\n  // --- code_end ---\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} // end of ${asyncMain}\n// ------------------------------------------------------------------\n// call ${asyncMain}\n(async () => {\n  if (__self.__v0.get('__standalone')) {\n    await ${asyncMain}(self);\n  } else {\n    ${asyncMain}.call(self, self)\n    .then(() => { /* __async_ok__ */ })\n    .catch(err => {\n      if (err.message === '__終わる__') { return }\n      __self.numFailures++\n      // send errors to logger\n      let rterr = __self.logger.runtimeError(err, __self.__v0.get('__line'))\n      __self.logger.error(rterr)\n    })\n  }\n})();\n// ------------------------------------------------------------------\n// </nadesiko3::gen::async id=\"${funcID}\">\n// ------------------------------------------------------------------\n`;\n    }\n    else {\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\n        js = `\n// ------------------------------------------------------------------\n// <nadesiko3::gen::syncMode>\n// ------------------------------------------------------------------\nfunction ${syncMain}(__self) {\ntry {\n  ${js}\n  // __処理末尾__ // ← テストなどで必要なので消さない\n} catch (err) {\n  if (err.message === '__終わる__') { return }\n  __self.numFailures++\n  throw __self.logger.runtimeError(err, __self.__v0.get('__line'))\n}\n} // end of ${syncMain}\n${syncMain}(__self)\n// ------------------------------------------------------------------\n// </nadesiko3::gen::syncMode>\n// ------------------------------------------------------------------\n`;\n    }\n    // --- 生成したコードの簡単な整形 ---\n    js = cleanGeneratedCode(js);\n    // デバッグメッセージ\n    com.getLogger().trace('--- generate ---\\n' + js);\n    let codeImportFiles = '';\n    const importNames = [];\n    for (const f of opt.importFiles) {\n        if (f === 'nako_errors.mjs') {\n            continue;\n        }\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\n        importNames.push(ff);\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\n    }\n    // ---\n    const initCode = gen.getPluginInitCode();\n    const runtimeEnvCode = `\n// <runtimeEnvCode>\nconst self = this\n${opt.codeEnv}\n${jsInit}\n${initCode}\n${js}\n// </runtimeEnvCode>\n`;\n    return {\n        // なでしこの実行環境ありの場合(thisが有効)\n        runtimeEnv: runtimeEnvCode,\n        // JavaScript単体で動かす場合\n        standalone: replaceTemplateCode(STANDALONE_CODE, {\n            codeImportFiles,\n            'coreVersion': com.coreVersion,\n            'version': com.version,\n            'importNames': ('[' + importNames.join(', ') + ']'),\n            'codeStandalone': opt.codeStandalone,\n            'codeJS': js,\n            jsInit\n        }),\n        // コード生成に使ったNakoGenのインスタンス\n        gen\n    };\n}\n// template\nfunction replaceTemplateCode(template, values) {\n    for (const key in values) {\n        const pat = `__${key}__`;\n        const val = values[key];\n        template = template.split(pat).join(val);\n    }\n    return template;\n}\n// clean generated code\nfunction cleanGeneratedCode(code, indent = 0) {\n    // 無意味な改行やセミコロンを削除\n    code = code.replace(/;{2,}/g, ';');\n    code = code.replace(/\\n{2,}/g, '\\n');\n    let spc = '';\n    for (let i = 0; i < indent; i++) {\n        spc += '  ';\n    }\n    // 行頭の\";\"を削除\n    const result = [];\n    const lines = code.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        let line = lines[i];\n        line = line.replace(/^(\\s*);/, '$1');\n        if (trim(line) === '') {\n            continue;\n        }\n        result.push(spc + line);\n    }\n    code = result.join('\\n');\n    return code;\n}\n/**\n * 前後の空白を削除する\n * @param str 対象文字列\n * @returns トリムした文字列\n */\nfunction trim(str) {\n    str = String(str);\n    return str.replace(/^\\s+|\\s+$/g, '');\n}\n","/**\n * よく使う処理をまとめたもの\n */\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * トークンの内容をデバッグ出力する関数\n * @param tokens トークンの一覧\n * @returns 文字列\n */\nexport function debugTokens(tokens) {\n    const result = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const ftype = t.type;\n        const fvalue = t.value;\n        let s = `[${ftype}:${fvalue}]`;\n        if (ftype === fvalue) {\n            s = ftype;\n        }\n        if (ftype === 'comma') {\n            s = ',';\n        }\n        if (ftype === 'string') {\n            s = `\"${fvalue}\"`;\n        }\n        if (ftype === 'number') {\n            s = `(${fvalue})`;\n        }\n        if (ftype === 'word') {\n            s = `[word:${fvalue}]`;\n        }\n        if (!result[t.line]) {\n            result[t.line] = makeIndent(t.indent);\n        }\n        result[t.line] += s + t.josi + '|';\n    }\n    return result.join('\\n');\n}\nexport function makeIndent(n) {\n    let s = '';\n    for (let i = 0; i < n; i++) {\n        s += ' ';\n    }\n    return s;\n}\nlet lastTokenInfo = NewEmptyToken();\nexport function newToken(type, value, templateToken = undefined) {\n    if (templateToken) {\n        lastTokenInfo = templateToken;\n    }\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\n    return t;\n}\n","/** インデント構文を処理するモジュール */\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { NakoIndentError } from '../src/nako_errors.mjs';\nimport { debugTokens, newToken } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nfunction isSkipWord(t) {\n    if (t.type === '違えば') {\n        return true;\n    }\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\n        return true;\n    }\n    return false;\n}\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\nexport function convertInlineIndent(tokens) {\n    //\n    // 0:もし、A=0ならば:\n    // 2:  もし、B=0ならば:\n    // 4:    「A=0,B=0」を表示。\n    // 2:  違えば:\n    // 4:    「A=0,B!=0」を表示。\n    // 5:違えば:\n    // 6:  「A!=0」を表示。\n    //\n    const lines = splitTokens(tokens, 'eol');\n    const blockIndents = [];\n    let checkICount = -1;\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        // JSONの途中であればブロックの変更は行わない\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        // インデントの終了を確認する必要があるか？\n        if (checkICount >= 0) {\n            const lineICount = leftToken.indent;\n            while (checkICount >= lineICount) {\n                const tFirst = leftToken;\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\n                }\n                else {\n                    // ここまでを挿入する\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    checkICount = blockIndents[blockIndents.length - 1];\n                }\n                else {\n                    checkICount = -1;\n                    break;\n                }\n            }\n        }\n        // JSONの途中であればブロックの変更は行わない\n        checkJsonSyntax(line);\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            continue;\n        }\n        // 末尾の「:」をチェック\n        const tLast = getLastTokenWithoutEOL(line);\n        if (tLast.type === ':') {\n            // 末尾の「:」を削除\n            lines[i] = lines[i].filter(t => t !== tLast);\n            checkICount = tLast.indent;\n            blockIndents.push(checkICount);\n        }\n    }\n    if (lines.length > 0 && blockIndents.length > 0) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        // ここまでを差し込む\n        for (let i = 0; i < blockIndents.length; i++) {\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\n        }\n    }\n    const result = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('###', debugTokens(result));\n    }\n    return result;\n}\n/** 行ごとに分割していたトークンをくっつける */\nexport function joinTokenLines(lines) {\n    const r = [];\n    for (const line of lines) {\n        for (const t of line) {\n            r.push(t);\n        }\n    }\n    return r;\n}\nfunction getLastTokenWithoutEOL(line) {\n    const len = line.length;\n    if (len === 0) {\n        return NewEmptyToken('?');\n    }\n    let res = line[len - 1];\n    if (res.type === 'eol') {\n        if (len >= 2) {\n            res = line[len - 2];\n        }\n    }\n    return res;\n}\nexport function splitTokens(tokens, delimiter) {\n    const result = [];\n    let line = [];\n    let kakko = 0;\n    for (const t of tokens) {\n        line.push(t);\n        if (t.type === '{') {\n            kakko++;\n        }\n        else if (t.type === '}') {\n            kakko--;\n        }\n        else if (kakko === 0 && t.type === delimiter) {\n            result.push(line);\n            line = [];\n        }\n    }\n    if (line.length > 0) {\n        result.push(line);\n    }\n    return result;\n}\n/** トークン行が空かどうか調べる */\nfunction IsEmptyLine(line) {\n    if (line.length === 0) {\n        return true;\n    }\n    for (let j = 0; j < line.length; j++) {\n        const ty = line[j].type;\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/** コメントを除去した最初のトークンを返す */\nfunction GetLeftTokens(line) {\n    for (let i = 0; i < line.length; i++) {\n        const t = line[i].type;\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\n            continue;\n        }\n        return line[i];\n    }\n    return line[0];\n}\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\nexport function convertIndentSyntax(tokens) {\n    // インデント構文の変換が必要か?\n    if (!useIndentSynax(tokens)) {\n        return tokens;\n    }\n    // 『ここまで』があったらエラーを出す\n    for (const t of tokens) {\n        if (t.type === 'ここまで') {\n            // エラーを出す\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\n        }\n    }\n    // JSON構文のチェック\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    // 行ごとにトークンを分割\n    const blockIndents = [];\n    const lines = splitTokens(tokens, 'eol');\n    let lastI = 0;\n    // 各行を確認する\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        // JSON構文のチェック\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        const curI = leftToken.indent;\n        if (curI === lastI) {\n            continue;\n        }\n        // ブロックの終了?\n        // 0: 3回\n        // 2:   もし、1 > 1ならば\n        // 4:     1を表示\n        // 2:   違えば\n        // 4:     2を表示\n        // 0:\n        // ブロックの終了?\n        if (lastI >= 0) {\n            while (lastI > curI) {\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\n                }\n                else {\n                    const t = lines[i - 1][0];\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\n                    lines[i - 1].push(newToken('eol', '\\n', t));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    lastI = blockIndents[blockIndents.length - 1][0];\n                }\n                else {\n                    lastI = 0;\n                    break;\n                }\n            }\n        }\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            continue;\n        }\n        // JSON構文のチェック\n        checkJsonSyntax(line);\n        // ブロックの開始？\n        if (curI > lastI) {\n            blockIndents.push([curI, lastI]);\n            // console.log('@@@push', curI)\n            lastI = curI;\n            continue;\n        }\n    }\n    // 末尾に「ここまで」を追加する\n    for (let i = 0; i < blockIndents.length; i++) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\n    }\n    const result = joinTokenLines(lines);\n    // console.log('###', debugTokens(result))\n    return result;\n}\nfunction useIndentSynax(tokens) {\n    // インデント構文が必要かチェック (最初の100個をチェック)\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * DNCLに対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\n// DNCLモードのキーワード\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:を実行': ['ここまで', 'ここまで'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL(tokens) {\n    if (!useDNCLmode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // 行頭の | はただのインデント\n        for (let j = 0; j < line.length; j++) {\n            if (line[j].type === '|') {\n                line[j].type = 'range_comment';\n                continue;\n            }\n            break;\n        }\n        // 後判定の繰り返しの実装のため\n        const t = line[0];\n        if (t.type === 'word' && t.value === '繰返') {\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\n        }\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\n        if (fi > 0) {\n            replaceAtohantei(line, fi);\n        }\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\n        if (fi2 > 0) {\n            replaceAtohantei(line, fi2);\n        }\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // を繰り返す → ここまで\n        for (;;) {\n            const ni = findTokens(line, ['word:を繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'ここまで';\n            fu.value = 'ここまで';\n            fu.josi = '';\n        }\n        // 'のすべての要素を0にする'\n        // 'のすべての要素に0を代入する'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 'のすべての値を0にする'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    return tokens;\n}\nfunction replaceAllElementV(line, ni) {\n    //\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\n    //\n    const t = line[ni];\n    line[ni - 1].josi = '';\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\n    end.josi = 'に';\n    const val = line[ni + 2];\n    val.josi = '';\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\n    times.josi = 'を';\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\n}\nfunction replaceAtohantei(tokens, fi) {\n    // `ここまで、(${r[1]})になるまでの間`\n    const wo = findTokens(tokens, ['word:を']);\n    if (wo >= 0) {\n        tokens[wo].type = 'ここまで';\n        tokens[wo].value = 'ここまで';\n    }\n    const ga = findTokens(tokens, ['word:が']);\n    if (ga >= 0) {\n        tokens[ga].type = 'ここまで';\n        tokens[ga].value = 'ここまで';\n    }\n    // なる:まで(fi) 実行(fi+1)\n    tokens[fi + 1].value = '間';\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCLmode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCLモード';\n            return true;\n        }\n    }\n    return false;\n}\nexport const NakoDncl = {\n    convert: convertDNCL\n};\n","/**\n * DNCL ver2 に対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\nimport { newToken, debugTokens } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nconst DNCL_ARRAY_INIT_COUNT = 30;\n// DNCL2モードのキーワード\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    // 'word:and': ['and', 'かつ'],\n    // 'word:or': ['or', 'または'],\n    'word:not': ['not', '!'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示'],\n    'word:と定義': ['ここまで', 'ここまで'] // 「と定義」→「ここまで」\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL2(tokens) {\n    if (!useDNCL2mode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // --- 制御構文の変換 ---\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // そうでなければ(そう|でなければ) or そうでなく → 違えば\n        for (let ni = 0; ni < line.length; ni++) {\n            const t = line[ni];\n            if ((t.value === 'そう' || t.value === 'それ') && (t.josi === 'でなければ' || t.josi === 'でなく')) {\n                t.type = '違えば';\n                t.value = '違えば';\n                t.josi = '';\n            }\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // 'そうでなく': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なく']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            if (sou.josi === 'で') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni + 1, 1);\n                // console.log('@@@', line.map(v => v.value).join('|'))\n                continue;\n            }\n            break;\n        }\n        // 'そうでなくもし': '違えば,もし'\n        for (;;) {\n            const ni = findTokens(line, ['word:そう', 'word:なくもし']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni];\n            const nakumosi = line[ni + 1];\n            sou.type = '違えば';\n            sou.value = '違えば';\n            sou.josi = '';\n            nakumosi.type = 'もし';\n            nakumosi.value = 'もし';\n            nakumosi.josi = '';\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // --- 配列変数周りの変換 ---\n        for (let i = 0; i < line.length; i++) {\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                const valToken = line[i + 4];\n                valToken.josi = '';\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n                i += 6; // skip\n            }\n            // Hensuの|すべての|(要素を|値を)|0に|する\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\n                const varToken = line[i];\n                varToken.josi = '';\n                const valToken = line[i + 3];\n                valToken.josi = '';\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n            // 配列変数 | xxを | 初期化する\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n        }\n        // --- その他の変換 ---\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('// DEBUG---DNCL:tokens---BEGIN');\n        console.log(debugTokens(tokens));\n        console.log('// DEBUG---DNCL:tokens---END');\n    }\n    return tokens;\n}\n/**\n * トークンが合致するかを確認する\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\n * @param lines 差し替え\n * @param fromIndex 検索場所\n * @returns 合致したかどうか\n */\nfunction tokenEq(typeValues, lines, fromIndex) {\n    const check = (pattern, t) => {\n        if (pattern instanceof Array) {\n            for (let i = 0; i < pattern.length; i++) {\n                if (check(pattern[i], t)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (pattern === '*') {\n            return true;\n        }\n        if (pattern.indexOf(':') < 0) {\n            if (pattern === t.type) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const tv = `${t.type}:${t.value}`;\n        if (pattern === tv) {\n            return true;\n        }\n        return false;\n    };\n    for (let i = 0; i < typeValues.length; i++) {\n        const idx = i + fromIndex;\n        if (idx >= lines.length) {\n            return false;\n        }\n        const pat = typeValues[i];\n        const t = lines[idx];\n        if (!check(pat, t)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCL2mode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCL2モード';\n            return true;\n        }\n    }\n    return false;\n}\n","/** prepareとtokenizeのソースマッピング */\nexport class SourceMappingOfTokenization {\n    /**\n       * @param {number} sourceCodeLength\n       * @param {PreprocessItem[]} preprocessed\n       */\n    constructor(sourceCodeLength, preprocessed) {\n        /** @private @readonly */\n        this.sourceCodeLength = sourceCodeLength;\n        /** @private @readonly */\n        this.preprocessed = preprocessed;\n        let i = 0;\n        /** @private @readonly @type {number[]} */\n        this.cumulativeSum = [];\n        for (const el of preprocessed) {\n            this.cumulativeSum.push(i);\n            i += el.text.length;\n        }\n        /** @private */\n        this.lastIndex = 0;\n        /** @private */\n        this.lastPreprocessedCodePosition = 0;\n    }\n    /**\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    map(preprocessedCodePosition) {\n        const i = this.findIndex(preprocessedCodePosition);\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\n    }\n    /**\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    findIndex(preprocessedCodePosition) {\n        // 連続アクセスに対する高速化\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\n            this.lastIndex = 0;\n        }\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\n                this.lastIndex = i;\n                return i;\n            }\n        }\n        this.lastIndex = this.preprocessed.length - 1;\n        return this.preprocessed.length - 1;\n    }\n}\nexport class SourceMappingOfIndentSyntax {\n    /**\n       * @param {string} codeAfterProcessingIndentationSyntax\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\n       */\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\n        /** @private @type {{ offset: number, len: number }[]} */\n        this.lines = [];\n        /** @private @readonly */\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\n        /** @private @readonly */\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\n        let offset = 0;\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\n            this.lines.push({ offset, len: line.length });\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number | null} startOffset\n       * @param {number | null} endOffset\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\n       */\n    map(startOffset, endOffset) {\n        if (startOffset === null) {\n            return { startOffset, endOffset };\n        }\n        // 何行目かを判定\n        const tokenLine = this.getLineNumber(startOffset);\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\n            if (tokenLine === insertedLine) {\n                startOffset = null;\n                endOffset = null;\n                break;\n            }\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\n            if (tokenLine > insertedLine) {\n                // \"\\n\"の分1足す\n                startOffset -= this.lines[insertedLine].len + 1;\n                if (endOffset !== null) {\n                    endOffset -= this.lines[insertedLine].len + 1;\n                }\n            }\n        }\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\n            if (tokenLine >= deletedLine.lineNumber) {\n                // \"\\n\"の分1足す\n                if (startOffset !== null) {\n                    startOffset += deletedLine.len + 1;\n                }\n                if (endOffset !== null) {\n                    endOffset += deletedLine.len + 1;\n                }\n            }\n        }\n        return { startOffset, endOffset };\n    }\n    /**\n       * @param {number} offset\n       * @returns {number}\n       * @private\n       */\n    getLineNumber(offset) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\n            if (offset < this.lines[i + 1].offset) {\n                this.lastLineNumber = i;\n                return i;\n            }\n        }\n        this.lastLineNumber = this.lines.length - 1;\n        return this.lines.length - 1;\n    }\n}\n/** offsetから (line, column) へ変換する。 */\nexport class OffsetToLineColumn {\n    /**\n       * @param {string} code\n       */\n    constructor(code) {\n        /** @private @type {number[]} */\n        this.lineOffsets = [];\n        // 各行の先頭位置を先に計算しておく\n        let offset = 0;\n        for (const line of code.split('\\n')) {\n            this.lineOffsets.push(offset);\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number} offset\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\n       * @returns {{ line: number, column: number }}\n       */\n    map(offset, oneBasedLineNumber) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\n            if (offset < this.lineOffsets[i + 1]) {\n                this.lastLineNumber = i;\n                return {\n                    line: i + (oneBasedLineNumber ? 1 : 0),\n                    column: offset - this.lineOffsets[i]\n                };\n            }\n        }\n        this.lastLineNumber = this.lineOffsets.length - 1;\n        return {\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\n        };\n    }\n}\n/**\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\n */\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\n    // offsetは単純に引くだけでよい\n    if (typeof sourceMap.startOffset === 'number') {\n        sourceMap.startOffset -= preCode.length;\n    }\n    if (typeof sourceMap.endOffset === 'number') {\n        sourceMap.endOffset -= preCode.length;\n    }\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\n    if (preCode !== '') {\n        const lines = preCode.split('\\n');\n        if (typeof sourceMap.line === 'number') {\n            sourceMap.line -= lines.length - 1;\n        }\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\n            sourceMap.column -= lines[lines.length - 1].length;\n        }\n    }\n    return sourceMap;\n}\n","/**\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\n */\n/**\n * ANSI escape code の一部\n */\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\n// 30 ~ 37\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\n/** @param {string} t */\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n/**\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\n * @param {string} text\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\n */\nconst convertColorTextFormat = (text) => {\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\n    // eslint-disable-next-line no-control-regex\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\n    // nodeConsoleからbrowserConsoleを作る\n    /** @type {string[]} */\n    const browserConsoleStyles = [];\n    let consoleColor = 'inherit'; // 文字色\n    let consoleFontWeight = 'inherit'; // 文字の太さ\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\n    const browserConsoleText = text === noColor\n        ? noColor\n        // eslint-disable-next-line no-control-regex\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n            const m1 = +m1str;\n            if (m1 === 0) {\n                consoleColor = 'inherit';\n                consoleFontWeight = 'inherit';\n            }\n            if (m1 === 1) {\n                consoleFontWeight = 'bold';\n            }\n            if (m1 >= 30 && m1 <= 37) {\n                consoleColor = colorNames[m1 - 30];\n            }\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\n            return '%c';\n        });\n    // nodeConsoleからhtmlを作る\n    let htmlColor = 'inherit'; // 文字色\n    let htmlFontWeight = 'inherit'; // 文字の太さ\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\n    // eslint-disable-next-line multiline-ternary\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\n        // eslint-disable-next-line no-control-regex\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n        const m1 = +m1str;\n        if (m1 === 0) { // リセット\n            htmlColor = 'inherit';\n            htmlFontWeight = 'inherit';\n        }\n        if (m1 === 1) { // 太字化\n            htmlFontWeight = 'bold';\n        }\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\n            htmlColor = colorNames[m1 - 30];\n        }\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\n    }) + '</span>');\n    // 各表現を返す。\n    return {\n        noColor,\n        nodeConsole: text === noColor\n            ? noColor // textが色の情報を含まないならnoColorを返す。\n            : text + '\\x1b[0m', // そうでなければtextの末尾に色をリセットするコードを付けて返す。\n        html,\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\n    };\n};\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\n","/** NakoLogger */\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport { NakoColors } from './nako_colors.mjs';\n/**\n * ログレベル - 数字が高いほど優先度が高い。\n */\nexport class LogLevel {\n    // string to level no\n    static fromS(levelStr) {\n        let level = LogLevel.trace;\n        switch (levelStr) {\n            case 'all':\n                level = LogLevel.all;\n                break;\n            case 'trace':\n                level = LogLevel.trace;\n                break;\n            case 'debug':\n                level = LogLevel.debug;\n                break;\n            case 'info':\n                level = LogLevel.info;\n                break;\n            case 'warn':\n                level = LogLevel.warn;\n                break;\n            case 'error':\n                level = LogLevel.error;\n                break;\n            case 'stdout':\n                level = LogLevel.stdout;\n                break;\n            default:\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\n        }\n        return level;\n    }\n    static toString(level) {\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\n        return levels[level];\n    }\n}\n// level no\nLogLevel.all = 0;\nLogLevel.trace = 1;\nLogLevel.debug = 2;\nLogLevel.info = 3;\nLogLevel.warn = 4;\nLogLevel.error = 5;\nLogLevel.stdout = 6;\n/**\n * エラー位置を日本語で表示する。\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\n */\nfunction stringifyPosition(p) {\n    if (!p) {\n        return '';\n    }\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\n}\n/**\n * コンパイラのログ情報を出力するためのクラス。\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\n */\nexport class NakoLogger {\n    constructor() {\n        this.listeners = [];\n        this.logs = '';\n        this.position = '';\n    }\n    getErrorLogs() {\n        return [this.logs.replace(/\\s+$/, ''), this.position];\n    }\n    clear() {\n        this.logs = '';\n        this.position = '';\n    }\n    /**\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\n     * @param levelStr\n     * @param callback\n     */\n    addListener(levelStr, callback) {\n        const level = LogLevel.fromS(levelStr);\n        this.listeners.push({ level, callback });\n    }\n    /**\n     * addListenerメソッドで設定したコールバックを取り外す。\n     * @param {LogListener} callback\n     */\n    removeListener(callback) {\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\n    }\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    trace(message, position = null) {\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** 本体開発時のデバッグ情報\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    debug(message, position = null) {\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    info(message, position = null) {\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（重要なもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    warn(message, position = null) {\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** エラーメッセージ\n     * @param {string | Error} message\n     * @param {Position | null} position\n     */\n    error(message, position = null) {\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\n        if (message instanceof Error && typeof message.type === 'string') {\n            // NakoErrorか\n            const etype = message.type;\n            switch (etype) {\n                case 'NakoRuntimeError':\n                case 'NakoError':\n                    if (message instanceof NakoError) {\n                        const e = message;\n                        let pos = position;\n                        if (pos === null || pos === undefined) {\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\n                        }\n                        this.sendI(LogLevel.error, e.message, pos);\n                        return;\n                    }\n            }\n        }\n        if (message instanceof Error) {\n            // 一般のエラーの場合は、messageのみ取得できる。\n            message = message.message;\n        }\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** RuntimeErrorを生成する */\n    runtimeError(error, posStr) {\n        const e = new NakoRuntimeError(error, posStr);\n        return e;\n    }\n    /** ユーザープログラムのデバッグ情報（すべて)\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    stdout(message, position = null) {\n        this.sendI(LogLevel.stdout, `${message}`, position);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\n        const i = LogLevel.fromS(levelStr);\n        this.sendI(i, nodeConsole, position, html, browserConsole);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\n        const makeData = () => {\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\n            let style = '';\n            if (nodeConsole.includes('\\n')) {\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\n            }\n            // 各イベントリスナーが受け取るデータ\n            const data = {\n                noColor: formats.noColor,\n                nodeConsole: formats.nodeConsole,\n                browserConsole: browserConsole || formats.browserConsole,\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>', // 各行を style: block で表示するために、<div>で囲む。\n                level: LogLevel.toString(level),\n                position\n            };\n            return data;\n        };\n        // エラーならログに追加\n        if (level === LogLevel.error) {\n            const data = makeData();\n            this.logs += data.noColor + '\\n';\n            if (position && this.position !== null) {\n                this.position = `l${position.line}:${position.file}`;\n            }\n        }\n        // 登録したリスナーに通知する\n        for (const l of this.listeners) {\n            if (l.level <= level) {\n                const data = makeData();\n                l.callback(data);\n            }\n        }\n    }\n}\n","import { NakoColors } from './nako_colors.mjs';\n/**\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\n */\nexport class NakoGlobal {\n    /**\n     * @param compiler\n     * @param gen\n     */\n    constructor(compiler, gen, guid = 0) {\n        this.guid = guid;\n        this.lastJSCode = '';\n        // ユーザーのプログラムから編集される変数\n        this.__locals = new Map();\n        this.__varslist = [\n            new Map(compiler.__varslist[0]), // system\n            new Map(compiler.__varslist[1]), // global\n            new Map(compiler.__varslist[2]) // local [2][3][4][5] ...\n        ];\n        this.numFailures = 0;\n        this.index = 0;\n        this.nextIndex = -1;\n        this.__code = [];\n        this.__callstack = [];\n        this.__stack = [];\n        this.__labels = [];\n        this.__genMode = gen.genMode;\n        // バージョン情報の引き継ぎ\n        this.version = compiler.version;\n        this.coreVersion = compiler.coreVersion;\n        // PluginSystemとdestroy()から参照するため\n        this.__module = { ...compiler.__module }; // shallow copy\n        this.pluginfiles = { ...compiler.getPluginfiles() };\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\n        this.gen = gen;\n        // 以下のメソッドで使うため\n        this.logger = compiler.getLogger();\n        this.compiler = compiler;\n    }\n    clearLog() {\n        this.__varslist[0].set('表示ログ', '');\n    }\n    get log() {\n        let s = this.__varslist[0].get('表示ログ');\n        s = s.replace(/\\s+$/, '');\n        return s;\n    }\n    /**\n     * システム変数を設定する\n     * @param name システム変数名\n     * @param value 設定したい値\n     */\n    __setSysVar(name, value) {\n        this.__varslist[0].set(name, value);\n    }\n    /**\n     * システム変数を取得する\n     * @param name システム変数名\n     * @returns システム変数の値\n     */\n    __getSysVar(name) {\n        return this.__varslist[0].get(name);\n    }\n    /**\n     * 「ナデシコ」命令のためのメソッド\n     */\n    runEx(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return this.compiler.runSync(code, fname, opts);\n    }\n    async runAsync(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return await this.compiler.runAsync(code, fname, opts);\n    }\n    /**\n     * テスト実行のためのメソッド\n     * @param {{ name: string, f: () => void }[]} tests\n     */\n    _runTests(tests) {\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\n        let pass = 0;\n        let numFailures = 0;\n        for (const t of tests) {\n            try {\n                t.f();\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\n                pass++;\n            }\n            catch (err) {\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\n                numFailures++;\n            }\n        }\n        if (numFailures > 0) {\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\n        }\n        else {\n            text += `${NakoColors.color.green}成功 ${pass}件`;\n        }\n        this.numFailures = numFailures;\n        this.logger.stdout(text);\n    }\n    /**\n     * 毎プラグインの「!クリア」関数を実行\n     */\n    clearPlugins() {\n        // 実行している関数をすべて終了させる\n        // プラグインのクリア関数を呼び出す\n        const clearName = '!クリア';\n        for (const pname in this.pluginfiles) {\n            const po = this.__module[pname];\n            if (po[clearName] && po[clearName].fn) {\n                po[clearName].fn(this);\n            }\n        }\n    }\n    /**\n     * 各種リセット処理\n     */\n    reset() {\n        this.clearPlugins();\n    }\n    destroy() {\n        this.reset();\n    }\n}\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst coreVersion = {\n    version: '3.6.3',\n    major: 3,\n    minor: 6,\n    patch: 3\n};\nexport default coreVersion;\n","export default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_math', // プラグインの名前\n            description: '数学関数を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @三角関数\n    'SIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.sin(v);\n        }\n    },\n    'COS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.cos(v);\n        }\n    },\n    'TAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.tan(v);\n        }\n    },\n    'ARCSIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.asin(v);\n        }\n    },\n    'ARCCOS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.acos(v);\n        }\n    },\n    'ARCTAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.atan(v);\n        }\n    },\n    'ATAN2': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (y, x) {\n            return Math.atan2(y, x);\n        }\n    },\n    '座標角度計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (XY) {\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\n        }\n    },\n    'RAD2DEG': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'DEG2RAD': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    '度変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'ラジアン変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    // @算術関数\n    'SIGN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\n        }\n    },\n    '符号': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        fn: function (v, sys) {\n            return sys.__exec('SIGN', [v]);\n        }\n    },\n    'ABS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    '絶対値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    'EXP': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.exp(a);\n        }\n    },\n    'HYPOT': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    '斜辺': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    'LN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOG': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOGN': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            if (a === 2) {\n                return Math.LOG2E * Math.log(b);\n            }\n            if (a === 10) {\n                return Math.LOG10E * Math.log(b);\n            }\n            return Math.log(b) / Math.log(a);\n        }\n    },\n    'FRAC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '小数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '整数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.trunc(a);\n        }\n    },\n    '乱数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.floor(Math.random() * a);\n        }\n    },\n    '乱数範囲': {\n        type: 'func',\n        josi: [['から'], ['までの', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\n        }\n    },\n    'SQRT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    '平方根': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    // @数値切上切捨丸め\n    'ROUND': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '四捨五入': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '小数点切上': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.ceil(a * base) / base;\n        }\n    },\n    '小数点切下': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.floor(a * base) / base;\n        }\n    },\n    '小数点四捨五入': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.round(a * base) / base;\n        }\n    },\n    'CEIL': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    '切上': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    'FLOOR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    },\n    '切捨': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    }\n};\n","export const options = {\n    delimiter: ',',\n    eol: '\\r\\n'\n};\nexport function resetEnv() {\n    options.delimiter = ',';\n    options.eol = '\\r\\n';\n}\nexport function parse(txt, delimiter = undefined) {\n    // delimiter\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    // check txt\n    txt = '' + txt + '\\n';\n    // convert CRLF to LF, and CR to LF\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\n    // trim right\n    txt = txt.replace(/\\s+$/, '') + '\\n';\n    // set pattern\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\n    const reToDelim = new RegExp(patToDelim);\n    // if value is number then convert to float\n    const convType = function (v) {\n        if (typeof (v) === 'string') {\n            if (v.search(/^[0-9.]+$/) >= 0) {\n                v = parseFloat(v); // convert number\n            }\n        }\n        return v;\n    };\n    // parse txt\n    const res = [];\n    let cells = [];\n    let c = '';\n    while (txt !== '') {\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\n        c = txt.charAt(0);\n        if (c === delimiter) {\n            txt = txt.substring(1);\n            cells.push('');\n            continue;\n        }\n        // second check LF (#7)\n        if (c === '\\n') {\n            cells.push('');\n            res.push(cells);\n            cells = [];\n            txt = txt.substring(1);\n            continue;\n        }\n        // trim white space\n        txt = txt.replace(/^\\s+/, '');\n        c = txt.charAt(0);\n        // no data\n        if (c === delimiter) {\n            console.log('delimiter');\n            cells.push('');\n            txt = txt.substring(delimiter.length);\n            continue;\n        }\n        // written using the dialect of Excel\n        if (c === '=' && txt.charAt(1) === '\"') {\n            txt = txt.substring(1);\n            continue;\n        }\n        // number or simple string\n        if (c !== '\"') { // number or simple str\n            const m = reToDelim.exec(txt);\n            if (!m) {\n                cells.push(convType(txt));\n                res.push(cells);\n                cells = [];\n                break;\n            }\n            if (m[2] === '\\n') {\n                cells.push(convType(m[1]));\n                res.push(cells);\n                cells = [];\n            }\n            else if (m[2] === delimiter) {\n                cells.push(convType(m[1]));\n            }\n            txt = txt.substring(m[0].length);\n            continue;\n        }\n        // \"\" ... blank data\n        if (txt.substring(0, 2) === '\"\"') {\n            cells.push('');\n            txt = txt.substring(2);\n            continue;\n        }\n        // \"...\"\n        let i = 1;\n        let s = '';\n        while (i < txt.length) {\n            const c1 = txt.charAt(i);\n            const c2 = txt.charAt(i + 1);\n            // console.log(\"@\" + c1 + c2);\n            // 2quote => 1quote char\n            if (c1 === '\"' && c2 === '\"') {\n                i += 2;\n                s += '\"';\n                continue;\n            }\n            if (c1 === '\"') {\n                i++;\n                if (c2 === delimiter) {\n                    i++;\n                    cells.push(convType(s));\n                    s = '';\n                    break;\n                }\n                if (c2 === '\\n') {\n                    i++;\n                    cells.push(convType(s));\n                    res.push(cells);\n                    cells = [];\n                    break;\n                }\n                // if (c2 === \" \" || c2 === \"\\t\") {\n                i++;\n                continue;\n            }\n            s += c1;\n            i++;\n        }\n        txt = txt.substr(i);\n    }\n    if (cells.length > 0)\n        res.push(cells);\n    return res;\n}\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\n    // check arguments\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    if (eol === undefined) {\n        eol = options.eol;\n    }\n    const valueConv = genValueConverter(delimiter);\n    if (ary === undefined)\n        return '';\n    let r = '';\n    for (let i = 0; i < ary.length; i++) {\n        const cells = ary[i];\n        if (cells === undefined) {\n            r += eol;\n            continue;\n        }\n        for (let j = 0; j < cells.length; j++) {\n            cells[j] = valueConv(cells[j]);\n        }\n        r += cells.join(delimiter) + eol;\n    }\n    // replace return code\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\n    return r;\n}\nexport function replaceEolMark(eol) {\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\n    eol = eol.replace(/\\r/g, '[CR]');\n    eol = eol.replace(/\\n/g, '[LF]');\n    return eol;\n}\nfunction genValueConverter(delimiter) {\n    return function (s) {\n        s = '' + s;\n        let fQuot = false;\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf(delimiter) >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf('\"') >= 0) {\n            fQuot = true;\n            s = s.replace(/\"/g, '\"\"');\n        }\n        if (fQuot)\n            s = '\"' + s + '\"';\n        return s;\n    };\n}\n","import { options, parse, stringify } from './nako_csv.mjs';\nconst PluginCSV = {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_csv', // プラグインの名前\n            description: 'CSV関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 基本的に初期化不要\n        }\n    },\n    // @CSV操作\n    'CSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = ',';\n            return parse(str);\n        }\n    },\n    'TSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = '\\t';\n            return parse(str);\n        }\n    },\n    '表CSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = ',';\n            return stringify(a);\n        }\n    },\n    '表TSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = '\\t';\n            return stringify(a);\n        }\n    }\n};\nexport default PluginCSV;\n","export default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_promise', // プラグインの名前\n            description: 'promise関連の命令を提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (sys.__promise == null) {\n                sys.__promise = {\n                    setLastPromise: function (promise) {\n                        sys.__setSysVar('そ', promise);\n                        return promise;\n                    }\n                };\n            }\n        }\n    },\n    // @非同期処理の保証の定数\n    'そ': { type: 'const', value: '' }, // @そ\n    // @非同期処理の保証\n    '動時': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (callback, sys) {\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\n                return callback(resolve, reject);\n            }));\n        },\n        return_none: false\n    },\n    '成功時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__setSysVar('対象', result);\n                return callback(result);\n            }));\n        },\n        return_none: false\n    },\n    '処理時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (cbFunc, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__setSysVar('対象', result);\n                return cbFunc(true, result, sys);\n            }, (reason) => {\n                sys.__setSysVar('対象', reason);\n                return cbFunc(false, reason, sys);\n            }));\n        },\n        return_none: false\n    },\n    '失敗時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.catch((err) => {\n                sys.__setSysVar('対象', err);\n                return callback(err);\n            }));\n        },\n        return_none: false\n    },\n    '終了時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.finally(() => {\n                return callback();\n            }));\n        },\n        return_none: false\n    },\n    '束': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (...args) {\n            const sys = args.pop();\n            return sys.__promise.setLastPromise(Promise.all(args));\n        },\n        return_none: false\n    }\n};\n","/**\n * file: plugin_test.js\n * テスト実行用プラグイン\n */\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_test', // プラグインの名前\n            description: 'テストを提供するプラグイン', // プラグインの説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'], // 対象ランタイム\n            nakoVersion: '^3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @テスト\n    'ASSERT等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: true,\n        fn: function (a, b) {\n            if (a !== b) {\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\n            }\n            return true;\n        }\n    },\n    'テスト実行': {\n        type: 'func',\n        josi: [['と'], ['で']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    },\n    'テスト等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    }\n};\n","// parser / lexer\nimport { NakoParser } from './nako_parser3.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NakoPrepare } from './nako_prepare.mjs';\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\nimport { convertDNCL } from './nako_from_dncl.mjs';\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\nimport { NakoLogger } from './nako_logger.mjs';\nimport { NakoGlobal } from './nako_global.mjs';\n// version info\nimport coreVersion from './nako_core_version.mjs';\n// basic plugins\nimport PluginSystem from './plugin_system.mjs';\nimport PluginMath from './plugin_math.mjs';\nimport PluginCSV from './plugin_csv.mjs';\nimport PluginPromise from './plugin_promise.mjs';\nimport PluginTest from './plugin_test.mjs';\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\nconst PLUGIN_MIN_VERSION_INT = 600; // = minor * 100 + patch\n/** コンパイラ実行オプションを生成 */\nexport function newCompilerOptions(initObj = {}) {\n    if (typeof initObj !== 'object') {\n        initObj = {};\n    }\n    initObj.testOnly = initObj.testOnly || false;\n    initObj.resetEnv = initObj.resetEnv || false;\n    initObj.resetAll = initObj.resetAll || false;\n    initObj.preCode = initObj.preCode || '';\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\n    return initObj;\n}\n/** なでしこコンパイラ */\nexport class NakoCompiler {\n    /**\n     * @param {undefined | {'useBasicPlugin':true|false}} options\n     */\n    constructor(options = undefined) {\n        if (options === undefined) {\n            options = { useBasicPlugin: true };\n        }\n        // 環境のリセット\n        this.__varslist = [new Map(), new Map(), new Map()]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\n        this.__locals = new Map(); // ローカル変数\n        this.__self = this;\n        this.__vars = this.__varslist[2]; // alias of __varslist[2]\n        this.__v1 = this.__varslist[1]; // alias of __varslist[1]\n        this.__v0 = this.__varslist[0]; // alias of __varslist[0]\n        // バージョンを設定\n        this.version = coreVersion.version;\n        this.coreVersion = coreVersion.version;\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\n        this.__globalObj = null;\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\n        this.pluginFunclist = {}; // プラグインで定義された関数\n        this.funclist = new Map(); // プラグインで定義された関数 + ユーザーが定義した関数\n        this.moduleExport = new Map();\n        this.pluginfiles = {}; // 取り込んだファイル一覧\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\n        this.nakoFuncList = new Map(); // __v1に配置するJavaScriptのコードで定義された関数\n        this.eventList = []; // 実行前に環境を変更するためのイベント\n        this.codeGenerateor = {}; // コードジェネレータ\n        this.debugOption = { useDebug: false, waitTime: 0 };\n        this.logger = new NakoLogger();\n        this.filename = 'main.nako3';\n        /**\n         * 取り込み文を置換するためのオブジェクト。\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\n         */\n        this.dependencies = {};\n        this.usedFuncs = new Set();\n        this.numFailures = 0;\n        if (options.useBasicPlugin) {\n            this.addBasicPlugins();\n        }\n        // 必要なオブジェクトを覚えておく\n        this.prepare = NakoPrepare.getInstance();\n        this.parser = new NakoParser(this.logger);\n        this.lexer = new NakoLexer(this.logger);\n        // 関数一覧を設定\n        this.lexer.setFuncList(this.funclist);\n        this.lexer.setModuleExport(this.moduleExport);\n    }\n    /** モジュール(名前空間)の一覧を取得する */\n    getModList() {\n        return this.lexer.modList;\n    }\n    getLogger() {\n        return this.logger;\n    }\n    getNakoFuncList() {\n        return this.nakoFuncList;\n    }\n    getNakoFunc(name) {\n        return this.nakoFuncList.get(name);\n    }\n    getPluginfiles() {\n        return this.pluginfiles;\n    }\n    /**\n     * 基本的なプラグインを追加する\n     */\n    addBasicPlugins() {\n        this.addPlugin(PluginSystem);\n        this.addPlugin(PluginMath);\n        this.addPlugin(PluginPromise);\n        this.addPlugin(PluginTest);\n        this.addPlugin(PluginCSV);\n    }\n    /**\n     * loggerを新しいインスタンスで置き換える。\n     */\n    replaceLogger() {\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\n        return logger;\n    }\n    /**\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\n     * @param {Token[]} tokens rawtokenizeの出力\n     */\n    static listRequireStatements(tokens) {\n        const requireStatements = [];\n        for (let i = 0; i + 2 < tokens.length; i++) {\n            // not (string|string_ex) '取り込み'\n            if (!(tokens[i].type === 'not' &&\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\n                tokens[i + 2].value === '取込')) {\n                continue;\n            }\n            // 取り込むライブラリ\n            let filename = tokens[i + 1].value + '';\n            // 『取り込む』文で「拡張プラグイン:」機構を追加する #139\n            // (ex) !『貯蔵庫:ojyo-sama.nako3』を取り込む → https://n3s.nadesi.com/plain/ojyo-sama.nako3\n            if (filename.startsWith('貯蔵庫:')) {\n                filename = `https://n3s.nadesi.com/plain/${filename.substring(4)}`;\n            }\n            // (ex) !『拡張プラグイン:music.js@1.0.2』を取り込む → https://cdn.jsdelivr.net/npm/nadesiko3-music@1.0.2/nadesiko3-music.js\n            if (filename.startsWith('拡張プラグイン:')) {\n                const name = filename.split(':')[1];\n                const m = name.match(/^([a-zA-Z0-9_-]+)\\.(js|mjs|nako3)(@[0-9.]+)?$/);\n                if (m) {\n                    let basename = m[1];\n                    const ext = m[2];\n                    const version = m[3] || '@latest';\n                    if (ext === 'js' || ext === 'mjs') {\n                        // JSプラグイン\n                        if (!basename.startsWith('nadesiko3-')) {\n                            basename = `nadesiko3-${basename}`;\n                        }\n                        filename = `https://cdn.jsdelivr.net/npm/${basename}${version}/${basename}.${ext}`;\n                    }\n                    else {\n                        // なでしこ3プラグイン\n                        filename = `https://n3s.nadesi.com/plain/${basename}.${ext}`;\n                    }\n                }\n                else {\n                    throw new NakoImportError('『取込』の指定エラー。『拡張プラグイン:(ファイル名).(js|nako3)(@ver)』の書式で指定してください。', tokens[i].file, tokens[i].line);\n                }\n            }\n            // push\n            requireStatements.push({\n                ...tokens[i],\n                start: i,\n                end: i + 3,\n                value: filename,\n                firstToken: tokens[i],\n                lastToken: tokens[i + 2]\n            });\n            i += 2;\n        }\n        return requireStatements;\n    }\n    /**\n     * プログラムが依存するファイルを再帰的に取得する。\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\n     *\n     * @param {string} code\n     * @param {string} filename\n     * @param {string} preCode\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\n     *  - readNako3は指定されたファイルの中身を返す関数。\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\n     * @returns {Promise<unknown> | void}\n     * @protected\n     */\n    _loadDependencies(code, filename, preCode, tools) {\n        const dependencies = {};\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\n        /**\n         * @param {any} item\n         * @param {any} tasks\n         */\n        const loadJS = (item, tasks) => {\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\n            const obj = tools.readJs(item.filePath, item.firstToken);\n            tasks.push(obj.task.then((res) => {\n                const pluginFuncs = res();\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\n                dependencies[item.filePath].funclist = pluginFuncs;\n                dependencies[item.filePath].moduleExport = {};\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\n            }));\n        };\n        const loadNako3 = (item, tasks) => {\n            // nako3ならファイルを読んでdependenciesに保存する。\n            const content = tools.readNako3(item.filePath, item.firstToken);\n            const registerFile = (code) => {\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\n                // 「プラグイン名設定」を行う (#956)\n                const modName = NakoLexer.filenameToModName(item.filePath);\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\n                const tokens = this.rawtokenize(code, 0, item.filePath);\n                dependencies[item.filePath].tokens = tokens;\n                const funclist = new Map();\n                const moduleexport = new Map();\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist, moduleexport);\n                dependencies[item.filePath].funclist = funclist;\n                dependencies[item.filePath].moduleExport = moduleexport;\n                // 再帰\n                return loadRec(code, item.filePath, '');\n            };\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\n            tasks.push(content.task.then((res) => registerFile(res)));\n        };\n        const loadRec = (code, filename, preCode) => {\n            const tasks = [];\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\n            // パスを解決する\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\n            // 取り込み開始\n            for (const item of tagsResolvePath) {\n                // 2回目以降の読み込み\n                // eslint-disable-next-line no-prototype-builtins\n                if (dependencies.hasOwnProperty(item.filePath)) {\n                    dependencies[item.filePath].alias.add(item.value);\n                    continue;\n                }\n                // 初回の読み込み\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {}, moduleExport: {} };\n                if (item.type === 'js' || item.type === 'mjs') {\n                    loadJS(item, tasks);\n                }\n                else if (item.type === 'nako3') {\n                    loadNako3(item, tasks);\n                }\n                else {\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\n                }\n            }\n            if (tasks.length > 0) {\n                return Promise.all(tasks);\n            }\n            return undefined;\n        };\n        try {\n            const result = loadRec(code, filename, preCode);\n            // 非同期な場合のエラーハンドリング\n            if (result !== undefined) {\n                result.catch((err) => {\n                    // 読み込みに失敗したら処理を中断する\n                    this.logger.error(err.msg);\n                    this.numFailures++;\n                });\n            }\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\n            // loadDependencies() が並列実行されるときに正しく動作しない。\n            this.dependencies = dependencies;\n            return result;\n        }\n        catch (err) {\n            // 同期処理では素直に例外を投げる\n            this.logger.error('' + err);\n            throw err;\n        }\n    }\n    /**\n     * コードを単語に分割する\n     * @param code なでしこのプログラム\n     * @param line なでしこのプログラムの行番号\n     * @param filename\n     * @param preCode\n     * @returns トークンのリスト\n     */\n    rawtokenize(code, line, filename, preCode = '') {\n        if (!code.startsWith(preCode)) {\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\n        }\n        // 名前空間のモジュールリストに自身を追加\n        const modName = NakoLexer.filenameToModName(filename);\n        const modList = this.getModList();\n        if (modList.indexOf(modName) < 0) {\n            modList.unshift(modName);\n        }\n        // 全角半角の統一処理\n        const preprocessed = this.prepare.convert(code);\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        // トークン分割\n        let tokens;\n        try {\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\n        }\n        catch (err) {\n            if (!(err instanceof InternalLexerError)) {\n                throw err;\n            }\n            // エラー位置をソースコード上の位置に変換して返す\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\n        }\n        // DNCL ver2 (core #41)\n        tokens = convertDNCL2(tokens);\n        // DNCL ver1 (#1140)\n        tokens = convertDNCL(tokens);\n        // インデント構文を変換 #596\n        tokens = convertIndentSyntax(tokens);\n        // インラインインデントを変換 #1215\n        tokens = convertInlineIndent(tokens);\n        // ソースコード上の位置に変換\n        tokens = tokens.map((token) => {\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\n            let line = token.line;\n            let column = 0;\n            if (token.type === 'eol' && dest.endOffset !== null) {\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\n                // 行末のeolのlineは次の行の行数を表す必要がある。\n                const out = offsetToLineColumn.map(dest.endOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            else if (dest.startOffset !== null) {\n                const out = offsetToLineColumn.map(dest.startOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            return {\n                ...token,\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\n                rawJosi: token.josi\n            };\n        });\n        return tokens;\n    }\n    /**\n     * 単語の属性を構文解析に先立ち補正する\n     * @param {Token[]} tokens トークンのリスト\n     * @param {boolean} isFirst 最初の呼び出しかどうか\n     * @param {string} filename\n     * @returns コード (なでしこ)\n     */\n    converttoken(tokens, isFirst, filename) {\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\n        return tok;\n    }\n    /**\n     * 環境のリセット\n     * {NakoResetOption|undefined}\n     */\n    reset(options = undefined) {\n        if (!options || options.needToClearPlugin) {\n            // (メモ) #1245\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\n            this.clearPlugins();\n        }\n        /**\n         * なでしこのローカル変数をスタックで管理\n         * __varslist[0] プラグイン領域\n         * __varslist[1] なでしこグローバル領域\n         * __varslist[2] 最初のローカル変数 ( == __vars }\n         */\n        this.__varslist = [this.__varslist[0], new Map(), new Map()];\n        this.__v0 = this.__varslist[0]; // alias of __varslist[0]\n        this.__v1 = this.__varslist[1]; // alias of __varslist[1]\n        this.__vars = this.__varslist[2]; // alias of __varslist[2]\n        this.__locals = new Map();\n        // プラグイン命令以外を削除する。\n        this.funclist = new Map();\n        for (const name of this.__v0.keys()) {\n            const original = this.pluginFunclist[name]; // record\n            if (!original) {\n                continue;\n            }\n            this.funclist.set(name, JSON.parse(JSON.stringify(original)));\n        }\n        this.lexer.setFuncList(this.funclist);\n        this.moduleExport = new Map();\n        this.lexer.setModuleExport(this.moduleExport);\n        this.logger.clear();\n    }\n    /**\n     * typeがcodeのトークンを単語に分割するための処理\n     * @param {string} code\n     * @param {number} line\n     * @param {string} filename\n     * @param {number | null} startOffset\n     * @returns\n     * @private\n     */\n    lexCodeToken(code, line, filename, startOffset) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, line, filename, '');\n        // 文字列内位置からファイル内位置へ変換\n        if (startOffset === null) {\n            for (const token of tokens) {\n                token.startOffset = undefined;\n                token.endOffset = undefined;\n            }\n        }\n        else {\n            for (const token of tokens) {\n                if (token.startOffset !== undefined) {\n                    token.startOffset += startOffset;\n                }\n                if (token.endOffset !== undefined) {\n                    token.endOffset += startOffset;\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, false, filename);\n        return { tokens, commentTokens };\n    }\n    /**\n     * 再帰的にrequire文を置換する。\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\n     * @param {TokenWithSourceMap[]} tokens\n     * @param {Set<string>} [includeGuard]\n     * @returns {Token[]} 削除された取り込み文のトークン\n     */\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\n            if (includeGuard.has(r.value)) {\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\n                continue;\n            }\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath === undefined) {\n                if (!r.firstToken) {\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\n                }\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\n            }\n            this.dependencies[filePath].addPluginFile();\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\n            includeGuard.add(r.value);\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\n        }\n        return deletedTokens;\n    }\n    /**\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\n     * @param {TokenWithSourceMap[]} tokens\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\n     */\n    removeRequireStatements(tokens) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath !== undefined) {\n                this.dependencies[filePath].addPluginFile();\n            }\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\n        }\n        return deletedTokens;\n    }\n    /** 字句解析を行う */\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\n        // require文を再帰的に置換する\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\n        for (const t of requireStatementTokens) {\n            if (t.type === 'word' || t.type === 'not') {\n                t.type = 'require';\n            }\n        }\n        if (requireStatementTokens.length >= 3) {\n            // modList を更新\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\n                let modName = requireStatementTokens[i + 1].value;\n                modName = NakoLexer.filenameToModName(modName);\n                if (this.lexer.modList.indexOf(modName) < 0) {\n                    this.lexer.modList.push(modName);\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, true, filename);\n        for (let i = 0; i < tokens.length; i++) {\n            if (tokens[i] && tokens[i].type === 'code') {\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\n                commentTokens.push(...children.commentTokens);\n                tokens.splice(i, 1, ...children.tokens);\n                i--;\n            }\n        }\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\n    }\n    /**\n     * コードをパースしてASTにする\n     */\n    parse(code, filename, preCode = '') {\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setFuncList(this.funclist);\n        this.parser.setFuncList(this.funclist);\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setModuleExport(this.moduleExport);\n        this.parser.setModuleExport(this.moduleExport);\n        // 字句解析を行う\n        const lexerOutput = this.lex(code, filename, preCode);\n        // 構文木を作成\n        let ast;\n        try {\n            this.parser.genMode = 'sync'; // set default\n            ast = this.parser.parse(lexerOutput.tokens, filename);\n        }\n        catch (err) {\n            if (typeof err.startOffset !== 'number') {\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\n            }\n            throw err;\n        }\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\n        return ast;\n    }\n    getUsedFuncs(ast) {\n        const queue = [ast];\n        this.usedFuncs = new Set();\n        while (queue.length > 0) {\n            const ast_ = queue.pop();\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\n            }\n        }\n        return this.deleteUnNakoFuncs();\n    }\n    getUsedAndDefFuncs(astQueue, blockQueue) {\n        while (blockQueue.length > 0) {\n            const block = blockQueue.pop();\n            if (block !== null && block !== undefined) {\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\n            }\n        }\n    }\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\n            this.usedFuncs.add(block.name);\n        }\n        astQueue.push([block, block.block]);\n        // eslint-disable-next-line prefer-spread\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\n    }\n    deleteUnNakoFuncs() {\n        for (const func of this.usedFuncs) {\n            if (!this.commandlist.has(func)) {\n                this.usedFuncs.delete(func);\n            }\n        }\n        return this.usedFuncs;\n    }\n    /**\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\n     * @param code コード (なでしこ)\n     * @param filename\n     * @param isTest テストかどうか\n     * @param preCode\n     */\n    compile(code, filename, isTest = false, preCode = '') {\n        const opt = newCompilerOptions();\n        opt.testOnly = isTest;\n        opt.preCode = preCode;\n        const res = this.compileFromCode(code, filename, opt);\n        return res.runtimeEnv;\n    }\n    /** parse & generate  */\n    compileFromCode(code, filename, options = undefined) {\n        if (filename === '') {\n            filename = 'main.nako3';\n        }\n        if (options === undefined) {\n            options = newCompilerOptions();\n        }\n        try {\n            if (options.resetEnv) {\n                this.reset();\n            }\n            if (options.resetAll) {\n                this.clearPlugins();\n            }\n            // onBeforeParse\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\n            // parse\n            const ast = this.parse(code, filename, options.preCode);\n            // onBeforeGenerate\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\n            // generate\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\n            // onAfterGenerate\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\n            return outCode;\n        }\n        catch (e) {\n            this.logger.error(e);\n            throw e;\n        }\n    }\n    /**\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\n     * @param ast\n     * @param opt テストかどうか\n     */\n    generateCode(ast, opt) {\n        // Select Code Generator #637\n        const mode = ast.genMode || '';\n        // normal mode\n        if (mode === 'sync') {\n            return generateJS(this, ast, opt);\n        }\n        // 廃止の非同期モード #1164\n        if (mode === '非同期モード') {\n            this.logger.error('『!非同期モード』は廃止されました。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\n        }\n        // その他のコードジェネレータ(PHPなど)\n        const genObj = this.codeGenerateor[mode];\n        if (!genObj) {\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\n        }\n        return genObj.generate(this, ast, opt.isTest);\n    }\n    /** コードジェネレータを追加する */\n    addCodeGenerator(mode, obj) {\n        this.codeGenerateor[mode] = obj;\n    }\n    /** (非推奨)\n     * @param code\n     * @param fname\n     * @param isReset\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    async _run(code, fname, isReset, isTest, preCode = '') {\n        const opts = newCompilerOptions({\n            resetEnv: isReset,\n            resetAll: isReset,\n            testOnly: isTest,\n            preCode\n        });\n        return this._runEx(code, fname, opts);\n    }\n    /** 各プラグインをリセットする */\n    clearPlugins() {\n        // 他に実行している「なでしこ」があればクリアする\n        this.__globals.forEach((sys) => {\n            // core #56\n            sys.__setSysVar('__forceClose', true);\n            sys.reset();\n        });\n        this.__globals = []; // clear\n    }\n    /**\n     * 環境を指定してJavaScriptのコードを実行する\n     * @param code JavaScriptのコード\n     * @param nakoGlobal 実行環境\n     */\n    evalJS(code, nakoGlobal) {\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\n        this.__globalObj.lastJSCode = code;\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\n        try {\n            // eslint-disable-next-line no-new-func\n            const f = new Function(nakoGlobal.lastJSCode);\n            f.apply(nakoGlobal);\n        }\n        catch (err) {\n            // なでしこコードのエラーは抑止してログにのみ記録\n            nakoGlobal.numFailures++;\n            this.getLogger().error(err);\n            throw err;\n        }\n        // 実行後に終了イベントを実行(finish)\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\n    }\n    /**\n     * 同期的になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runSync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    /**\n     * 非同期になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     */\n    async runAsync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const compiledCode = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, compiledCode.gen, filename);\n        // 実行\n        this.evalJS(compiledCode.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    getNakoGlobal(options, gen, filename) {\n        // オプションを参照\n        let g = options.nakoGlobal;\n        if (!g) {\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\n                g = this.__globals[this.__globals.length - 1];\n            }\n            else {\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\n            }\n            // 名前空間を設定\n            g.__varslist[0].set('名前空間', NakoLexer.filenameToModName(filename));\n        }\n        if (this.__globals.indexOf(g) < 0) {\n            this.__globals.push(g);\n        }\n        return g;\n    }\n    /**\n     * イベントを登録する\n     * @param eventName イベント名\n     * @param callback コールバック関数\n     */\n    addListener(eventName, callback) {\n        this.eventList.push({ eventName, callback });\n    }\n    /**\n     * テストを実行する\n     * @param code\n     * @param fname\n     * @param preCode\n     * @param testOnly\n     */\n    test(code, fname, preCode = '', testOnly = false) {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        options.testOnly = testOnly;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\n     * @param code\n     * @param fname\n     * @param [preCode]\n     * @deprecated 代わりに runAsync を使ってください。\n     */\n    run(code, fname = 'main.nako3', preCode = '') {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * JavaScriptのみで動くコードを取得する場合\n     * @param code\n     * @param filename\n     * @param opt? オプション\n     */\n    compileStandalone(code, filename, options) {\n        if (options === undefined) {\n            options = new NakoGenOptions();\n        }\n        const ast = this.parse(code, filename);\n        return this.generateCode(ast, options).standalone;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     * @param fpath ファイルパス\n     */\n    addPlugin(po, persistent = true, fpath = '') {\n        // __v0を取得\n        const __v0 = this.__varslist[0];\n        // プラグインのメタ情報をチェック (#1034) (#1647)\n        let __pluginInfo = __v0.get('__pluginInfo');\n        if (!__pluginInfo) {\n            __pluginInfo = {};\n            __v0.set('__pluginInfo', __pluginInfo);\n        }\n        // バージョンチェック\n        let intVersion = 0;\n        let pluginName = 'unknown';\n        let metaValue = { pluginName: 'unknown', nakoVersionResult: true, nakoVersion: '0.0.0', path: '' };\n        if (po.meta) {\n            if (po.meta.value && typeof (po.meta) === 'object') {\n                const meta = po.meta;\n                metaValue = meta.value || { pluginName: 'unknown', nakoVersion: '0.0.0' };\n                pluginName = metaValue.pluginName || 'unknown';\n                // version check\n                const nakoVersion = (metaValue.nakoVersion || '0.0.0') + '.0.0';\n                const versions = nakoVersion.split('.').map((v) => parseInt(v));\n                intVersion = versions[1] * 100 + versions[2];\n                // fpath\n                metaValue.path = fpath;\n            }\n        }\n        // unknown の場合は、関数名からプラグイン名を自動生成する\n        if (pluginName === 'unknown') {\n            pluginName = Object.keys(po).join('-');\n        }\n        // プラグイン名の重複を確認\n        if (__pluginInfo[pluginName] !== undefined) {\n            // プラグイン名が重複した場合はプラグインとして登録しない\n            this.logger.info(`プラグイン名『${pluginName}』が重複しているため、プラグインとして登録しませんでした。`);\n            return;\n        }\n        // Windowsのパスやファイル名に使えない文字列があると、JSファイル書き出しでエラーになるので置換\n        const removeInvalidFilenameChars = (str) => {\n            return str.replace(/[^a-zA-z0-9\\-_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF\\u3400-\\u4DBF\\uF900-\\uFAFF]/g, '_');\n        };\n        pluginName = removeInvalidFilenameChars(pluginName);\n        // プラグイン情報を記録\n        __pluginInfo[pluginName] = metaValue;\n        // バージョンチェック\n        if (PLUGIN_MIN_VERSION_INT > intVersion) {\n            const keyStr = Object.keys(po).join(',');\n            if (pluginName === 'unknown') {\n                pluginName = keyStr.substring(0, 30) + '...';\n            }\n            const errMsg = `なでしこプラグイン『${pluginName}』は古い形式なので正しく動作しない可能性があります。` +\n                `(ランタイムの要求: ${PLUGIN_MIN_VERSION_INT}/プラグイン: ${intVersion})`;\n            console.warn(errMsg, 'see', 'https://github.com/kujirahand/nadesiko3/issues/1647');\n            this.logger.warn(errMsg);\n            metaValue.nakoVersionResult = false;\n        }\n        // 初期化とクリアを変換する\n        this.__module[pluginName] = po;\n        this.pluginfiles[pluginName] = '*';\n        // `初期化`と`クリア`をチェック\n        if (typeof (po['初期化']) === 'object') {\n            const def = po['初期化'];\n            delete po['初期化'];\n            const initKey = `!${pluginName}:初期化`;\n            po[initKey] = def;\n        }\n        // プラグインの値を、なでしこシステム変数(Map)にコピー\n        for (const key in po) {\n            const v = po[key];\n            this.funclist.set(key, v);\n            if (persistent) {\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\n            }\n            if (v.type === 'func') {\n                __v0.set(key, v.fn);\n                if (v.asyncFn) { // asyncFn を正しく実行するために pure に変更する (core#142)\n                    v.pure = true;\n                }\n            }\n            else if (v.type === 'const' || v.type === 'var') {\n                __v0.set(key, v.value);\n                // メタ情報としての const | var は現在利用していない\n                // meta[key] = { readonly: v.type === 'const' }\n            }\n            else {\n                console.error('[プラグイン追加エラー]', v);\n                throw new Error('プラグインの追加でエラー。');\n            }\n            // コマンドを登録するか?\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\n                continue;\n            }\n            this.commandlist.add(key);\n        }\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param objName オブジェクト名 (今後プラグイン名は、meta.value.pluginNameに指定する)\n     * @param po 関数リスト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginObject(objName, po, persistent = true) {\n        // metaプロパティがなければ互換性のため適当に追加\n        if (po.meta === undefined) {\n            po.meta = { type: 'const', value: { pluginName: objName, nakoVersion: '0.0.0' } };\n        }\n        this.addPlugin(po, persistent);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名(ただし、v3.6.3以降のバージョンでは無効になる)\n     * @param fpath ファイルパス\n     * @param po 登録するオブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     * @deprecated 利用は非推奨\n     */\n    addPluginFile(_objName, fpath, po, persistent = true) {\n        this.addPluginFromFile(fpath, po, persistent);\n    }\n    /**\n   * プラグイン・ファイルを追加(Node.js向け)\n   * @param fpath ファイルパス\n   * @param po 登録するオブジェクト\n   * @param persistent falseのとき、次以降の実行では使えない\n   */\n    addPluginFromFile(fpath, po, persistent = true) {\n        this.addPlugin(po, persistent, fpath);\n    }\n    /**\n     * 関数を追加する\n     * @param {string} key 関数名\n     * @param {string[][]} josi 助詞\n     * @param {Function} fn 関数\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\n     */\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        const funcObj = { josi, fn, type: 'func', return_none: returnNone, asyncFn, pure: true };\n        this.funclist.set(key, funcObj);\n        this.pluginFunclist[key] = cloneAsJSON(funcObj);\n        this.__varslist[0].set(key, fn);\n    }\n    /** (非推奨) 互換性のため ... 関数を追加する\n     * @deprecated 代わりにaddFuncを使ってください\n    */\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.funclist.get(key);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\n        // コンパイル\n        opts.preCode = preCode;\n        if (nakoGlobal) {\n            opts.nakoGlobal = nakoGlobal;\n        }\n        return this.runSync(code, filename, opts);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @param code\n     * @param fname\n     * @param opts\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runEx(code, fname, opts, preCode = '') {\n        return this._runEx(code, fname, opts, preCode);\n    }\n    /**\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\n     * @param code\n     * @param fname\n     * @param [preCode]\n     */\n    async runReset(code, fname = 'main.nako3', preCode = '') {\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\n        return this._runEx(code, fname, opts, preCode);\n    }\n}\n","import { NakoIndentError } from './nako_errors.mjs';\nimport { NakoPrepare, checkNakoMode } from './nako_prepare.mjs';\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい'];\n/**\n * インデント構文指定があればコードを変換する\n */\nfunction convert(code, filename = 'main.nako3') {\n    // インデント構文の適用が必要か？\n    if (checkNakoMode(code, INDENT_MODE_KEYWORDS)) {\n        return convertForIndentMode(code, filename);\n    }\n    return { code, insertedLines: [], deletedLines: [] };\n}\n/**\n * インデント構文指定があるかチェックする\n */\nfunction isIndentSyntaxEnabled(code) {\n    return checkNakoMode(code, INDENT_MODE_KEYWORDS);\n}\n/** ありえない改行マークを定義 */\nconst defSpecialRetMark = '🍷🍷改行🍹黐黑鼘鼶齈▨🍺🍺🍶🍶';\nlet SpecialRetMark = defSpecialRetMark;\n/** code中にありえない改行マーク生成しモジュール内の変数SpecialRetMarkに設定 */\nexport function checkSpecialRetMark(code) {\n    SpecialRetMark = defSpecialRetMark;\n    while (code.indexOf(SpecialRetMark) >= 0) {\n        // 適当な文字を足してユニークにする(一応漢字領域で生成)\n        const c = String.fromCodePoint(Math.floor(Math.random() * 40952) + 0x4E00);\n        SpecialRetMark += c + c;\n    }\n    return SpecialRetMark;\n}\n/**\n * ソースコードのある1行の中のコメントを全て取り除く。\n * 事前にreplaceRetMarkによって文字列や範囲コメント内の改行文字が置換されている必要がある。\n */\nexport function removeCommentsFromLine(src) {\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\n    const len = src.length;\n    let result = '';\n    let eos = '';\n    let i = 0;\n    let isComment = false;\n    while (i < len) {\n        const c = src.charAt(i);\n        const ch2 = src.substring(i, 2);\n        const cPrepared = prepare.convert1ch(c);\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\n        // eosか?\n        if (eos !== '') {\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\n                if (!isComment) {\n                    result += src.substr(i, eos.length);\n                }\n                i += eos.length;\n                isComment = false;\n                eos = '';\n            }\n            else {\n                if (!isComment) {\n                    result += c;\n                }\n                i++;\n            }\n            continue;\n        }\n        // 文字列の改行\bも無視する\n        switch (cPrepared) {\n            case '\"':\n            case '\\'':\n                eos = c;\n                result += c;\n                i++;\n                continue;\n            case '「':\n                eos = '」';\n                result += c;\n                i++;\n                continue;\n            case '『':\n                eos = '』';\n                result += c;\n                i++;\n                continue;\n            case '“':\n                eos = '”';\n                result += c;\n                i++;\n                continue;\n            case '{':\n                eos = '}';\n                result += c;\n                i++;\n                continue;\n            case '[':\n                eos = ']';\n                result += c;\n                i++;\n                continue;\n        }\n        switch (ch2) {\n            case '🌴':\n                eos = '🌴';\n                result += ch2;\n                i += 2;\n                continue;\n            case '🌿':\n                eos = '🌿';\n                result += ch2;\n                i += 2;\n                continue;\n        }\n        // 行コメント\n        if (cPrepared === '#') {\n            eos = '\\n';\n            isComment = true;\n            i++;\n            continue;\n        }\n        if (ch2Prepared === '//') {\n            eos = '\\n';\n            isComment = true;\n            i += 2;\n            continue;\n        }\n        // 範囲コメント\n        if (ch2Prepared === '/*') {\n            eos = '*/';\n            isComment = true;\n            i += 2;\n            continue;\n        }\n        result += c;\n        i++;\n    }\n    return result;\n}\n/** インデントモードのための変換処理 */\nfunction convertForIndentMode(code, filename) {\n    // returns => {{ code: string, insertedLines: number[], deletedLines: { lineNumber: number, len: number }[] }}\n    const insertedLines = [];\n    const deletedLines = [];\n    const END = 'ここまで‰';\n    const code2 = replaceRetMark(code); // 文字列の中などの改行を置換\n    const lines = code2.split('\\n');\n    const lines2 = [];\n    const indentStack = [];\n    let lastIndent = 0;\n    // 元ソースコードの中に特殊改行マークが含まれるかチェックして含まれるならもっと複雑な特殊マークを動的に生成\n    checkSpecialRetMark(code);\n    let lineCount = -1;\n    lines.forEach((line) => {\n        lineCount += line.split(SpecialRetMark).length;\n        // trim line\n        // eslint-disable-next-line no-irregular-whitespace\n        if (/^[ 　・\\t]*$/.test(line)) {\n            deletedLines.push({ lineNumber: lines2.length, len: line.length });\n            return;\n        }\n        // eslint-disable-next-line no-irregular-whitespace\n        const lineTrimed = removeCommentsFromLine(line).replace(/^[ 　・\\t]+/, '').replace(/\\s+$/, '');\n        if (lineTrimed === '') {\n            lines2.push(line);\n            return;\n        }\n        if (lineTrimed === 'ここまで') {\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', lineCount, filename);\n        }\n        // check indent\n        const indent = countIndent(line);\n        if (lastIndent === indent) {\n            lines2.push(line);\n            return;\n        }\n        // indent\n        if (lastIndent < indent) {\n            indentStack.push(lastIndent);\n            lastIndent = indent;\n            lines2.push(line);\n            return;\n        }\n        // unindent\n        if (lastIndent > indent) {\n            // 5回\n            //   3回\n            //     1を表示\n            //   |\n            // |\n            lastIndent = indent;\n            while (indentStack.length > 0) {\n                const n = indentStack.pop() || 0;\n                if (n === indent) {\n                    if (lineTrimed.substring(0, 3) !== '違えば') {\n                        insertedLines.push(lines2.length);\n                        lines2.push(makeIndent(n) + END);\n                    }\n                    lines2.push(line);\n                    return;\n                }\n                if (indent < n) {\n                    insertedLines.push(lines2.length);\n                    lines2.push(makeIndent(n) + END);\n                    continue;\n                }\n            }\n        }\n    });\n    // 残りのインデントを処理\n    while (indentStack.length > 0) {\n        const n = indentStack.pop() || 0;\n        insertedLines.push(lines2.length);\n        lines2.push(makeIndent(n) + END);\n    }\n    // 特別マーカーを改行に置換\n    const lines3 = [];\n    for (let i = 0; i < lines2.length; i++) {\n        if (lines2[i].includes(SpecialRetMark)) {\n            const lines4 = lines2[i].split(SpecialRetMark);\n            // 置換されたマーカーの数だけ、それ以降の行数をずらす。\n            // unindentによって挿入された行がSpecialRetMarkを含むことはない。\n            for (let j = 0; j < insertedLines.length; j++) {\n                if (lines3.length < insertedLines[j]) {\n                    insertedLines[j] += lines4.length - 1;\n                }\n            }\n            for (let j = 0; j < deletedLines.length; j++) {\n                if (lines3.length < deletedLines[j].lineNumber) {\n                    deletedLines[j].lineNumber += lines4.length - 1;\n                }\n            }\n            lines3.push(...lines4);\n        }\n        else {\n            lines3.push(lines2[i]);\n        }\n    }\n    return { code: lines3.join('\\n'), insertedLines, deletedLines };\n}\n/**\n * count分だけ字下げする\n * @param {number} count\n */\nfunction makeIndent(count) {\n    let s = '';\n    for (let i = 0; i < count; i++) {\n        s += ' ';\n    }\n    return s;\n}\n/**\n * インデント部分を取り出す\n */\nexport function getIndent(line) {\n    // eslint-disable-next-line no-irregular-whitespace\n    const m = /^([ 　・\\t]*)/.exec(removeCommentsFromLine(line));\n    if (!m) {\n        return '';\n    }\n    return m[1];\n}\n/**\n * インデントの個数を数える\n */\nexport function countIndent(line) {\n    let cnt = 0;\n    for (let i = 0; i < line.length; i++) {\n        const ch = line.charAt(i);\n        if (ch === ' ') {\n            cnt++;\n            continue;\n        }\n        if (ch === '　') {\n            cnt += 2;\n            continue;\n        }\n        if (ch === '・') {\n            cnt += 2;\n            continue;\n        }\n        if (ch === '\\t') {\n            cnt += 4;\n            continue;\n        }\n        break;\n    }\n    return cnt;\n}\nexport function replaceRetMark(src) {\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\n    const len = src.length;\n    let result = '';\n    let eos = '';\n    let i = 0;\n    while (i < len) {\n        const c = src.charAt(i);\n        const ch2 = src.substr(i, 2);\n        const cPrepared = prepare.convert1ch(c);\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\n        // eosか?\n        if (eos !== '') {\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\n                result += src.substr(i, eos.length);\n                i += eos.length;\n                eos = '';\n            }\n            else {\n                if (c === '\\n') {\n                    result += SpecialRetMark;\n                }\n                else {\n                    result += c;\n                }\n                i++;\n            }\n            continue;\n        }\n        // 文字列の改行\bも無視する\n        switch (cPrepared) {\n            case '\"':\n            case '\\'':\n                eos = c;\n                result += c;\n                i++;\n                continue;\n            case '「':\n                eos = '」';\n                result += c;\n                i++;\n                continue;\n            case '『':\n                eos = '』';\n                result += c;\n                i++;\n                continue;\n            case '“':\n                eos = '”';\n                result += c;\n                i++;\n                continue;\n            case '{':\n                eos = '}';\n                result += c;\n                i++;\n                continue;\n            case '[':\n                eos = ']';\n                result += c;\n                i++;\n                continue;\n        }\n        switch (ch2) {\n            case '🌴':\n                eos = '🌴';\n                result += ch2;\n                i += 2;\n                continue;\n            case '🌿':\n                eos = '🌿';\n                result += ch2;\n                i += 2;\n                continue;\n        }\n        // 行コメント\n        if (cPrepared === '#') {\n            eos = '\\n';\n            result += c;\n            i++;\n            continue;\n        }\n        if (ch2Prepared === '//') {\n            eos = '\\n';\n            result += ch2;\n            i += 2;\n            continue;\n        }\n        // 範囲コメント\n        if (ch2Prepared === '/*') {\n            eos = '*/';\n            result += ch2;\n            i += 2;\n            continue;\n        }\n        result += c;\n        i++;\n    }\n    return result;\n}\n/**\n * コードのインデントの構造を取得する。\n * 空白行や複数行にまたがる構文を考慮する。\n * インデント構文が有効化されていない場合にも使われる。\n */\nexport function getBlockStructure(code) {\n    const result = {\n        lines: [], // 各行のインデント量\n        pairs: [],\n        parents: [], // 各行の親の行\n        spaces: [] // 各行のインデントの文字列\n    };\n    const lines = replaceRetMark(code).split('\\n');\n    const stack = [];\n    let lineCount = 0;\n    let prev = countIndent(lines[0]);\n    for (const line of lines) {\n        const numLines = line.split(SpecialRetMark).length;\n        const line2 = removeCommentsFromLine(line);\n        // eslint-disable-next-line no-irregular-whitespace\n        const current = (line2.replace(/^[ 　・\\t]+/, '') === '')\n            ? prev\n            : countIndent(line2);\n        result.lines.push(...Array(numLines).fill(current));\n        result.spaces.push(...Array(numLines).fill(getIndent(line2)));\n        if (prev < current) {\n            stack.push(lineCount - 1);\n        }\n        else if (prev > current) {\n            const last = stack.pop();\n            if (last !== undefined) {\n                result.pairs.push([last, lineCount]);\n            }\n        }\n        const parent = stack[stack.length - 1] !== undefined ? stack[stack.length - 1] : null;\n        result.parents.push(...Array(numLines).fill(parent));\n        prev = current;\n        lineCount += numLines;\n    }\n    // スタックが余ったらコードの末尾とペアにする。\n    for (const item of stack) {\n        result.pairs.push([item, lineCount]);\n    }\n    return result;\n}\nexport default {\n    convert,\n    getBlockStructure,\n    getIndent,\n    countIndent,\n    isIndentSyntaxEnabled\n};\n","// @ts-nocheck\n/* eslint-disable no-template-curly-in-string */\n/** なでしこのtokenのtypeをscope（CSSのクラス名）に変換する。 */\nimport { OffsetToLineColumn } from '../core/src/nako_source_mapping.mjs';\nimport { NakoError } from '../core/src/nako_errors.mjs';\nimport NakoIndent from '../core/src/nako_indent.mjs';\nimport { NakoPrepare } from '../core/src/nako_prepare.mjs';\n// alias\nconst getBlockStructure = NakoIndent.getBlockStructure;\nconst getIndent = NakoIndent.getIndent;\nconst countIndent = NakoIndent.countIndent;\nconst isIndentSyntaxEnabled = NakoIndent.isIndentSyntaxEnabled;\n/**\n * シンタックスハイライトでは一般にテキストの各部分に 'comment.line' のようなラベルを付け、各エディタテーマがそのそれぞれの色を設定する。\n * ace editor では例えば 'comment.line' が付いた部分はクラス .ace_comment.ace_line が付いたHTMLタグで囲まれ、各テーマはそれに対応するCSSを実装する。\n * @returns TokenType\n */\nexport function getScope(token) {\n    switch (token.type) {\n        case 'line_comment': return 'comment.line';\n        case 'range_comment': return 'comment.block';\n        case 'def_test': return 'keyword.control';\n        case 'def_func': return 'keyword.control';\n        case 'func': return 'entity.name.function';\n        case 'number': return 'constant.numeric';\n        // 独立した助詞\n        case 'とは':\n        case 'ならば':\n        case 'でなければ':\n            return 'keyword.control';\n        // 制御構文\n        case 'ここから':\n        case 'ここまで':\n        case 'もし':\n        case '違えば':\n        case 'require':\n            return 'keyword.control';\n        // 予約語\n        case '回':\n        case '間':\n        case '繰り返す':\n        case '反復':\n        case '抜ける':\n        case '続ける':\n        case '戻る':\n        case '先に':\n        case '次に':\n        case '代入':\n        case '逐次実行':\n        case '条件分岐':\n        case '取込':\n        case 'エラー監視':\n        case 'エラー':\n        case '変数':\n        case '実行速度優先':\n            return 'keyword.control';\n        case '定める':\n        case '定数':\n            return 'support.constant';\n        // 演算子\n        case 'shift_r0':\n        case 'shift_r':\n        case 'shift_l':\n        case 'gteq':\n        case 'lteq':\n        case 'noteq':\n        case 'eq':\n        case 'not':\n        case 'gt':\n        case 'lt':\n        case 'and':\n        case 'or':\n        case '@':\n        case '+':\n        case '-':\n        case '**':\n        case '*':\n        case '÷÷':\n        case '/':\n        case '%':\n        case '^':\n        case '&':\n            return 'keyword.operator';\n        case 'string':\n        case 'string_ex':\n            return 'string.other';\n        case 'word':\n            if (['そう', 'それ', '回数', '対象キー', '対象'].includes(token.value)) {\n                return 'variable.language';\n            }\n            else {\n                return 'variable.other';\n            }\n        default:\n            return 'markup.other';\n    }\n}\n/**\n * @param {TokenWithSourceMap} compilerToken\n * @param {NakoCompiler} nako3\n * @param {string} value\n * @param {boolean} includesLastCharacter\n * @param {boolean} underlineJosi\n */\nexport function getEditorTokens(compilerToken, nako3, value, includesLastCharacter, underlineJosi) {\n    const type = getScope(compilerToken);\n    const docHTML = getDocumentationHTML(compilerToken, nako3);\n    // 助詞があれば助詞の部分を分割する。\n    // 最後の文字が現在の行に含まれないときは助詞を表示しない。そうしないと例えば `「文字列\\n」を表示` の「列」の部分に下線が引かれてしまう。\n    if (compilerToken.rawJosi && value.length >= compilerToken.rawJosi.length && includesLastCharacter && underlineJosi) {\n        return [\n            { type, docHTML, value: value.slice(0, -compilerToken.rawJosi.length) },\n            { type: type + '.markup.underline', docHTML, value: value.slice(-compilerToken.josi.length) }\n        ];\n    }\n    return [\n        { type, docHTML, value }\n    ];\n}\n/**\n * `name` が定義されたプラグインの名前を返す。\n */\nexport function findPluginName(name, nako3) {\n    for (const pluginName of Object.keys(nako3.__module)) {\n        if (Object.keys(nako3.__module[pluginName]).includes(name)) {\n            return pluginName;\n        }\n    }\n    return null;\n}\n/**\n * i = 0, 1, 2, ... に対して 'A', 'B', 'C', ... 'Z', 'AA', 'AB', ... を返す。\n */\nexport function createParameterName(i) {\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    return i.toString(26).split('').map((v) => alphabet[parseInt(v, 26)]).join('');\n}\n/**\n * パラメータの定義を表す文字列を生成する。例えば `[['と', 'の'], ['を']]` に対して `'（Aと|Aの、Bを）'` を返す、パラメータが無い場合、空文字列を返す。\n */\nexport function createParameterDeclaration(josi) {\n    const args = josi.map((union, i) => union.map((v) => `${createParameterName(i)}${v}`).join('|')).join('、');\n    if (args !== '') {\n        return `（${args}）`;\n    }\n    else {\n        return '';\n    }\n}\n// https://stackoverflow.com/a/6234804\nexport function escapeHTML(t) {\n    return t\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;');\n}\n/**\n * 関数のドキュメントを返す。\n */\nexport function getDocumentationHTML(token, nako3) {\n    const meta = (text) => `<span class=\"tooltip-plugin-name\">${escapeHTML(text)}</span>`;\n    if (token.type === 'func') {\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\n        const josi = (token.meta && token.meta.josi) ? createParameterDeclaration(token.meta.josi) : ''; // {関数} のとき token.meta.josi が存在しない\n        if (pluginName) {\n            return escapeHTML(josi + token.value) + meta(pluginName);\n        }\n        return escapeHTML(josi + token.value);\n    }\n    else if (token.type === 'word') {\n        /** @type {string | null} */\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\n        if (pluginName) {\n            return escapeHTML(token.value + '') + meta(pluginName);\n        }\n    }\n    return null;\n}\n/**\n * ace editor ではエディタの文字列の全ての部分に何らかの `type` を付けなければならない。\n * なでしこのエディタでは 'markup.other' をデフォルト値として使うことにした。\n * @returns {EditorToken[]}\n */\nconst getDefaultTokens = (row, doc) => [{ type: 'markup.other', value: doc.getLine(row), docHTML: null }];\n/**\n * 一時的にloggerを無効化する。そうしないとシンタックスハイライトの更新のたびにloggerへコンパイルエラーや警告が送られて、結果のボックスに行が追加されてしまう。\n * @type {<T>(nako3: NakoCompiler, f: () => T) => T}\n */\nconst withoutLogger = (nako3, f) => {\n    const logger = nako3.logger;\n    try {\n        nako3.replaceLogger();\n        return f();\n    }\n    finally {\n        nako3.logger = logger;\n    }\n};\n/**\n * プログラムをlexerでtokenizeした後、ace editor 用のトークン列に変換する。\n * @param lines\n * @param nako3\n * @param underlineJosi\n */\nexport function tokenize(lines, nako3, underlineJosi) {\n    const code = lines.join('\\n');\n    // 取り込み文を含めてしまうと依存ファイルが大きい時に時間がかかってしまうため、\n    // 取り込み文を無視してトークン化してから、依存ファイルで定義された関数名と一致するトークンを関数のトークンへ変換する。\n    nako3.reset({ needToClearPlugin: false });\n    const lexerOutput = withoutLogger(nako3, () => nako3.lex(code, 'main.nako3', undefined, true));\n    lexerOutput.commentTokens = lexerOutput.commentTokens.filter((t) => t.file === 'main.nako3');\n    lexerOutput.requireTokens = lexerOutput.requireTokens.filter((t) => t.file === 'main.nako3');\n    lexerOutput.tokens = lexerOutput.tokens.filter((t) => t.file === 'main.nako3');\n    // 外部ファイルで定義された関数名に一致するトークンのtypeをfuncに変更する。\n    // 取り込んでいないファイルも参照される問題や、関数名の重複がある場合に正しくない情報を表示する問題がある。\n    // eslint-disable-next-line no-lone-blocks\n    {\n        /** @type {Record<string, object>} */\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\n            for (const token of lexerOutput.tokens) {\n                if (token.type === 'word' && token.value !== 'それ' && funclist[token.value]) {\n                    token.type = 'func';\n                    // meta.file に定義元のファイル名を持たせる。\n                    token.meta = { ...funclist[token.value + ''], file };\n                }\n            }\n        }\n    }\n    // eol、eof、長さが1未満のトークン、位置を特定できないトークンを消す\n    /** @type {(TokenWithSourceMap & { startOffset: number, endOffset: number })[]} */\n    // @ts-ignore\n    const tokens = [...lexerOutput.tokens, ...lexerOutput.commentTokens, ...lexerOutput.requireTokens].filter((t) => t.type !== 'eol' && t.type !== 'eof' &&\n        typeof t.startOffset === 'number' && typeof t.endOffset === 'number' &&\n        t.startOffset < t.endOffset);\n    // startOffsetでソートする\n    tokens.sort((a, b) => (a.startOffset || 0) - (b.startOffset || 0));\n    // 各行について、余る文字の無いようにエディタのトークンに変換する。\n    // 複数のトークンが重なることはないと仮定する。\n    let lineStartOffset = 0;\n    let tokenIndex = 0;\n    // 実際に必要なプロパティはtype, valueだけで、docは独自に追加した。\n    /** @type {EditorToken[][]} */\n    const editorTokens = []; // 各行のエディタのトークン\n    for (let i = 0; i < lines.length; i++) {\n        editorTokens.push([]);\n        const lineEndOffset = lineStartOffset + lines[i].length;\n        let offset = lineStartOffset;\n        // 現在の行にかかっているトークンまで飛ばす\n        while (tokenIndex < tokens.length &&\n            tokens[tokenIndex].endOffset <= lineStartOffset) {\n            tokenIndex++;\n        }\n        // 行全体を完全にまたがっているトークンが存在する場合\n        if (tokenIndex < tokens.length &&\n            tokens[tokenIndex].startOffset <= lineStartOffset &&\n            tokens[tokenIndex].endOffset >= lineEndOffset) {\n            editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, lines[i], tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\n        }\n        else {\n            // 行頭をまたがっているトークンが存在する場合\n            if (tokenIndex < tokens.length &&\n                tokens[tokenIndex].startOffset <= lineStartOffset) {\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\n                offset = tokens[tokenIndex].endOffset;\n                tokenIndex++;\n            }\n            // 行頭も行末もまたがっていないトークンを処理する\n            while (tokenIndex < tokens.length &&\n                tokens[tokenIndex].endOffset < lineEndOffset) {\n                // このトークンと直前のトークンの間に隙間があるなら、埋める\n                if (offset < tokens[tokenIndex].startOffset) {\n                    editorTokens[i].push({\n                        type: 'markup.other',\n                        docHTML: null,\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\n                    });\n                    offset = tokens[tokenIndex].startOffset;\n                }\n                // 現在のトークンを使う\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\n                offset = tokens[tokenIndex].endOffset;\n                tokenIndex++;\n            }\n            // 行末をまたがっているトークンが存在する場合\n            if (tokenIndex < tokens.length &&\n                tokens[tokenIndex].startOffset < lineEndOffset) {\n                // トークンの前の隙間\n                if (offset < tokens[tokenIndex].startOffset) {\n                    editorTokens[i].push({\n                        type: 'markup.other',\n                        docHTML: null,\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\n                    });\n                    offset = tokens[tokenIndex].startOffset;\n                }\n                // トークンを使う\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(tokens[tokenIndex].startOffset, lineEndOffset), tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\n            }\n            else {\n                editorTokens[i].push({\n                    type: 'markup.other',\n                    docHTML: null,\n                    value: code.slice(offset, lineEndOffset)\n                });\n            }\n        }\n        lineStartOffset += lines[i].length + 1;\n    }\n    return { editorTokens, lexerOutput };\n}\n/**\n * エディタ上にエラーメッセージの波線とgutterの赤いマークとエラーメッセージのポップアップを設定するためのクラス。\n */\nexport class EditorMarkers {\n    /**\n       * @param {any} session\n       * @param {AceDocument} doc\n       * @param {TypeofAceRange} AceRange\n       * @param {boolean} disable\n       */\n    constructor(session, doc, AceRange, disable) {\n        this.session = session;\n        this.doc = doc;\n        this.AceRange = AceRange;\n        /** @type {any[]} */\n        this.markers = [];\n        this.hasAnnotations = false;\n        this.disable = disable;\n    }\n    /**\n       * @param {number} startLine\n       * @param {number | null} startColumn\n       * @param {number | null} endLine\n       * @param {number | null} endColumn\n       * @param {(row: number) => string} getLine\n       * @returns {[number, number, number, number]}\n       */\n    static fromNullable(startLine, startColumn, endLine, endColumn, getLine) {\n        if (startColumn === null) {\n            startColumn = 0;\n        }\n        if (endLine === null) {\n            endLine = startLine;\n        }\n        if (endColumn === null) {\n            endColumn = getLine(endLine).length;\n        }\n        // 最低でも1文字分の長さをとる\n        if (startLine === endLine && startColumn === endColumn) {\n            endColumn++;\n        }\n        return [startLine, startColumn, endLine, endColumn];\n    }\n    /**\n       * @param {string} code @param {number} startOffset @param {number} endOffset\n       * @returns {[number, number, number, number]}\n       */\n    static fromOffset(code, startOffset, endOffset) {\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        const start = offsetToLineColumn.map(startOffset, false);\n        const end = offsetToLineColumn.map(endOffset, false);\n        return [start.line, start.column, end.line, end.column];\n    }\n    /**\n       * @param {string} code\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\n       * @param {(row: number) => string} getLine\n       * @returns {[number, number, number, number]}\n       */\n    static fromError(code, error, getLine) {\n        if (typeof error.startOffset === 'number' && typeof error.endOffset === 'number') {\n            // 完全な位置を取得できる場合\n            return this.fromOffset(code, error.startOffset, error.endOffset);\n        }\n        else if (typeof error.line === 'number') {\n            // 行全体の場合\n            return this.fromNullable(error.line, null, null, null, getLine);\n        }\n        else {\n            // 位置が不明な場合\n            return this.fromNullable(0, null, null, null, getLine);\n        }\n    }\n    /**\n       * @param {number} startLine\n       * @param {number | null} startColumn\n       * @param {number | null} endLine\n       * @param {number | null} endColumn\n       * @param {string} message\n       * @param {'warn' | 'error'} type\n       */\n    add(startLine, startColumn, endLine, endColumn, message, type) {\n        if (this.disable) {\n            return;\n        }\n        const range = new this.AceRange(...EditorMarkers.fromNullable(startLine, startColumn, endLine, endColumn, (row) => this.doc.getLine(row)));\n        this.markers.push(this.session.addMarker(range, 'marker-' + (type === 'warn' ? 'yellow' : 'red'), 'text', false));\n        // typeは 'error' | 'warning' | 'info'\n        this.session.setAnnotations([{ row: startLine, column: startColumn, text: message, type: type === 'warn' ? 'warning' : 'error' }]);\n        this.hasAnnotations = true;\n    }\n    /**\n       * @param {string} code\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\n       * @param {'warn' | 'error'} type\n       */\n    addByError(code, error, type) {\n        this.add(...EditorMarkers.fromError(code, error, (row) => this.doc.getLine(row)), error.message, type);\n    }\n    /**\n       * 全てのエラーメッセージを削除する。\n       */\n    clear() {\n        for (const marker of this.markers) {\n            this.session.removeMarker(marker);\n        }\n        this.markers.length = 0;\n        if (this.hasAnnotations) {\n            this.session.clearAnnotations();\n            this.hasAnnotations = false;\n        }\n    }\n}\n/**\n * ace editor のBackgroundTokenizerを上書きして、シンタックスハイライトを自由に表示するためのクラス。\n * ace editor ではシンタックスハイライトのために正規表現ベースのBackgroundTokenizerクラスを用意し定期的にトークン化を\n * 行っているが、正規表現ではなくなでしこのコンパイラの出力を使うためにはそれを上書きする必要がある。\n */\nexport class BackgroundTokenizer {\n    /**\n       * @param {AceDocument} doc\n       * @param {NakoCompiler} nako3\n       * @param {(firstRow: number, lastRow: number, ms: number) => void} onTokenUpdate\n       * @param {(code: string, err: Error) => void} onCompileError\n       * @param {boolean} underlineJosi\n       */\n    constructor(doc, nako3, onTokenUpdate, onCompileError, underlineJosi) {\n        this.onUpdate = onTokenUpdate;\n        this.doc = doc;\n        this.dirty = true;\n        this.nako3 = nako3;\n        this.onCompileError = onCompileError;\n        this.underlineJosi = underlineJosi;\n        // オートコンプリートで使うために、直近のtokenizeの結果を保存しておく\n        /** @type {ReturnType<NakoCompiler['lex']> | null} */\n        this.lastLexerOutput = null;\n        // 各行のパース結果。\n        // typeはscopeのこと。配列の全要素のvalueを結合した文字列がその行の文字列と等しくなる必要がある。\n        /** @type {EditorToken[][]} */\n        this.lines = this.doc.getAllLines().map((line) => [{ type: 'markup.other', value: line, docHTML: null }]);\n        // this.lines は外部から勝手に編集されてしまうため、コピーを持つ\n        /** @type {{ code: string, lines: string } | null} */\n        this.cache = null;\n        this.deleted = false;\n        /** @public */\n        this.enabled = true;\n        const update = () => {\n            if (this.deleted) {\n                return;\n            }\n            if (this.dirty && this.enabled) {\n                const startTime = Date.now();\n                this.dirty = false;\n                const code = this.doc.getAllLines().join('\\n');\n                try {\n                    const startTime = Date.now();\n                    const out = tokenize(this.doc.getAllLines(), nako3, this.underlineJosi);\n                    this.lastLexerOutput = out.lexerOutput;\n                    this.lines = out.editorTokens;\n                    this.cache = { code, lines: JSON.stringify(this.lines) };\n                    // ファイル全体の更新を通知する。\n                    onTokenUpdate(0, this.doc.getLength() - 1, Date.now() - startTime);\n                }\n                catch (e) {\n                    onCompileError(code, e);\n                }\n                // tokenizeに時間がかかる場合、文字を入力できるように次回の実行を遅くする。\n                setTimeout(update, Math.max(100, Math.min(5000, (Date.now() - startTime) * 5)));\n            }\n            else {\n                setTimeout(update, 100);\n            }\n        };\n        // コンストラクタが返る前にコールバックを呼ぶのはバグの元になるため一瞬待つ。\n        // たとえば `const a = new BackgroundTokenizer(..., () => { /* aを使った処理 */ }, ...)` がReferenceErrorになる。\n        setTimeout(() => { update(); }, 0);\n    }\n    dispose() {\n        this.deleted = true;\n    }\n    /**\n       * テキストに変更があったときに呼ばれる。IME入力中には呼ばれない。\n       * @param {{ action: string, start: { row: number, column: number }, end: { row: number, column: number }, lines: string[] }} delta\n       */\n    $updateOnChange(delta) {\n        this.dirty = true;\n        const startRow = delta.start.row;\n        const endRow = delta.end.row;\n        if (startRow === endRow) { // 1行の編集\n            if (delta.action === 'insert' && this.lines[startRow]) { // 行内に文字列を挿入\n                const columnStart = delta.start.column;\n                // updateOnChangeはIME入力中には呼ばれない。composition_placeholder を消さないとIME確定後の表示がずれる。\n                const oldTokens = this.lines[startRow]\n                    .filter((v) => v.type !== 'composition_placeholder');\n                /** @type {EditorToken[]} */\n                const newTokens = [];\n                let i = 0;\n                let offset = 0;\n                // columnStartより左のトークンはそのまま保持する\n                while (i < oldTokens.length && offset + oldTokens[i].value.length <= columnStart) {\n                    newTokens.push(oldTokens[i]);\n                    offset += oldTokens[i].value.length;\n                    i++;\n                }\n                // columnStartに重なっているトークンがあれば、2つに分割する\n                if (i < oldTokens.length && offset < columnStart) {\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(0, columnStart - offset), docHTML: null });\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(columnStart - offset), docHTML: null });\n                    i++;\n                }\n                else {\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\n                }\n                // columnStartより右のトークンもそのまま保持する\n                while (i < oldTokens.length) {\n                    newTokens.push(oldTokens[i]);\n                    i++;\n                }\n                this.lines[startRow] = newTokens;\n            }\n            else {\n                this.lines[startRow] = getDefaultTokens(startRow, this.doc);\n            }\n        }\n        else if (delta.action === 'remove') { // 範囲削除\n            this.lines.splice(startRow, endRow - startRow + 1, getDefaultTokens(startRow, this.doc));\n        }\n        else { // 行の挿入\n            this.lines.splice(startRow, 1, ...Array(endRow - startRow + 1).fill(null).map((_, i) => getDefaultTokens(i + startRow, this.doc)));\n        }\n    }\n    /**\n       * tokenizerの出力を返す。文字入力したときに呼ばれる。\n       * @param {number} row\n       */\n    getTokens(row) {\n        // IME入力中はthis.lines[row]に自動的にnullが設定される。その場合新しく行のトークン列を生成して返さなければならない。\n        // 返した配列には自動的にIMEの入力用のテキストボックスであるcomposition_placeholderが挿入される。\n        if (!this.lines[row]) {\n            let ok = false;\n            if (this.enabled) {\n                // tokenizeは非常に遅いため、キャッシュを使えるならそれを使う。\n                const code = this.doc.getAllLines().join('\\n');\n                if (this.cache !== null && this.cache.code === code) {\n                    ok = true;\n                }\n                else {\n                    try {\n                        const lines = tokenize(this.doc.getAllLines(), this.nako3, this.underlineJosi);\n                        this.cache = { code, lines: JSON.stringify(lines.editorTokens) };\n                        ok = true;\n                    }\n                    catch (e) {\n                        if (!(e instanceof NakoError)) {\n                            console.error(e);\n                        }\n                    }\n                }\n            }\n            if (ok && this.cache !== null) {\n                this.lines[row] = JSON.parse(this.cache.lines)[row];\n            }\n            else {\n                this.lines[row] = getDefaultTokens(row, this.doc);\n            }\n        }\n        return this.lines[row];\n    }\n    // ace側から呼ばれるが無視するメソッド\n    // @ts-ignore\n    start(startRow) { }\n    // @ts-ignore\n    fireUpdateEvent(firstRow, lastRow) { }\n    // @ts-ignore\n    setDocument(doc) { }\n    scheduleStart() { }\n    // @ts-ignore\n    setTokenizer(tokenizer) { }\n    stop() { }\n    // @ts-ignore\n    getState(row) { return 'start'; }\n}\n/**\n * シンタックスハイライト以外のエディタの挙動の定義。\n */\nexport class LanguageFeatures {\n    /**\n       * @param {TypeofAceRange} AceRange\n       * @param {NakoCompiler} nako3\n       */\n    constructor(AceRange, nako3) {\n        this.AceRange = AceRange;\n        this.nako3 = nako3;\n    }\n    /**\n       * Ctrl + / の動作の定義。\n       * @param {string} state\n       * @param {Session} session\n       * @param {number} startRow\n       * @param {number} endRow\n       */\n    static toggleCommentLines(state, { doc }, startRow, endRow) {\n        const prepare = NakoPrepare.getInstance();\n        /**\n             * @param {string} line\n             * @returns {{ type: 'blank' | 'code' } | { type: 'comment', start: number, len: number }}\n             */\n        const parseLine = (line) => {\n            // 先頭の空白を消す\n            const indent = getIndent(line);\n            if (indent === line) {\n                return { type: 'blank' };\n            }\n            line = line.substring(indent.length);\n            // 先頭がコメントの開始文字かどうか確認する\n            const ch2 = line.substring(0, 2).split('').map((c) => prepare.convert1ch(c)).join('');\n            if (ch2.substring(0, 1) === '#') {\n                return { type: 'comment', start: indent.length, len: 1 + (line.charAt(1) === ' ' ? 1 : 0) };\n            }\n            if (ch2 === '//') {\n                return { type: 'comment', start: indent.length, len: 2 + (line.charAt(2) === ' ' ? 1 : 0) };\n            }\n            return { type: 'code' };\n        };\n        /** @type {number[]} */\n        const rows = [];\n        for (let i = startRow; i <= endRow; i++) {\n            rows.push(i);\n        }\n        // 全ての行が空白行ならコメントアウト、全ての行が行コメントで始まるか空白行ならアンコメント、そうでなければコメントアウト。\n        if (!rows.every((row) => parseLine(doc.getLine(row)).type === 'blank') &&\n            rows.every((row) => parseLine(doc.getLine(row)).type !== 'code')) {\n            // アンコメント\n            for (const row of rows) {\n                // 行コメントで始まる行ならアンコメントする。\n                // 行コメントの直後にスペースがあるなら、それも1文字だけ削除する。\n                const line = parseLine(doc.getLine(row));\n                if (line.type === 'comment') {\n                    doc.removeInLine(row, line.start, line.start + line.len);\n                }\n            }\n        }\n        else {\n            // 最もインデントの低い行のインデント数を数える\n            const minIndent = Math.min(...rows.map((row) => countIndent(doc.getLine(row))));\n            // コメントアウトする\n            for (const row of rows) {\n                const line = doc.getLine(row);\n                let column = line.length;\n                for (let i = 0; i < line.length; i++) {\n                    if (countIndent(line.slice(0, i)) >= minIndent) {\n                        column = i;\n                        break;\n                    }\n                }\n                doc.insertInLine({ row, column }, '// ');\n            }\n        }\n    }\n    /**\n       * 文字を入力するたびに呼ばれる。trueを返すとautoOutdentが呼ばれる。\n       * @param {string} state\n       * @param {string} line\n       * @param {string} input\n       * @returns {boolean}\n       */\n    static checkOutdent(state, line, input) {\n        // 特定のキーワードの入力が終わったタイミングでインデントを自動修正する。\n        // '違えば'のautoOutdentは「もし」と「条件分岐」のどちらのものか見分けが付かないため諦める。\n        // 「ここ|ま」（縦線がカーソル）の状態で「で」を打つとtrueになってしまう問題があるが、修正するには引数が足りない。\n        // eslint-disable-next-line no-irregular-whitespace\n        return /^[ 　・\\t]*ここまで$/.test(line + input);\n    }\n    /**\n       * checkOutdentがtrueを返したときに呼ばれる。\n       * @param {string} state\n       * @param {Session} session\n       * @param {number} row\n       * @returns {void}\n       */\n    autoOutdent(state, { doc }, row) {\n        // 1行目なら何もしない\n        if (row === 0) {\n            return;\n        }\n        const prevLine = doc.getLine(row - 1);\n        let indent;\n        if (LanguageFeatures.isBlockStart(prevLine)) {\n            // 1つ前の行が「〜ならば」などのブロック開始行なら、その行に合わせる。\n            indent = getIndent(prevLine);\n        }\n        else {\n            // そうでなければ、1つ前の行のインデントから1段階outdentした位置に合わせる。\n            const s = this.getBlockStructure(doc.getAllLines().join('\\n'));\n            const parent = s.parents[row];\n            indent = parent !== null ? s.spaces[parent] : '';\n        }\n        // 置換する\n        const oldIndent = getIndent(doc.getLine(row));\n        doc.replace(new this.AceRange(row, 0, row, oldIndent.length), indent);\n    }\n    /**\n       * エンターキーを押して行が追加されたときに挿入する文字列を指定する。\n       * @param {string} state\n       * @param {string} line 改行前にカーソルがあった行の文字列\n       * @param {string} tab タブ文字（デフォルトでは \"    \"）\n       */\n    static getNextLineIndent(state, line, tab) {\n        // ●で始まるか、特定のキーワードで終わる場合にマッチする。\n        if (this.isBlockStart(line)) {\n            return getIndent(line) + tab;\n        }\n        return getIndent(line);\n    }\n    /** @param {string} line */\n    static isBlockStart(line) {\n        // eslint-disable-next-line no-irregular-whitespace\n        return /^[ 　・\\t]*●|(ならば|なければ|ここから|条件分岐|違えば|回|繰り返(す|し)|の間|反復|とは|には|エラー監視|エラーならば|実行速度優先)、?\\s*$/.test(line);\n    }\n    /**\n       * オートコンプリート\n       * @param {number} row\n       * @param {string} prefix getCompletionPrefixの出力\n       * @param {NakoCompiler} nako3\n       * @param {BackgroundTokenizer} backgroundTokenizer\n       */\n    static getCompletionItems(row, prefix, nako3, backgroundTokenizer) {\n        /**\n             * keyはcaption。metaは候補の横に薄く表示されるテキスト。\n             * @type {Map<string, { value: string, meta: Set<string>, score: number }>}\n             */\n        const result = new Map();\n        /** 引数のリストを含まない、関数名だけのリスト @type {Set<string>} */\n        const values = new Set();\n        /**\n             * オートコンプリートの項目を追加する。すでに存在するならマージする。\n             * @param {string} caption @param {string} value @param {string} meta\n             */\n        const addItem = (caption, value, meta) => {\n            const item = result.get(caption);\n            if (item) {\n                item.meta.add(meta);\n            }\n            else {\n                // 日本語の文字数は英語よりずっと多いため、ただ一致する文字数を数えるだけで十分。\n                const score = prefix.split('').filter((c) => value.includes(c)).length;\n                result.set(caption, { value, meta: new Set([meta]), score });\n                values.add(value);\n            }\n        };\n        // プラグイン関数\n        for (const name of Object.keys(nako3.__varslist[0])) {\n            if (name.startsWith('!')) { // 「!PluginBrowser:初期化」などを除外\n                continue;\n            }\n            const f = nako3.funclist[name];\n            if (typeof f !== 'object' || f === null) {\n                continue;\n            }\n            const pluginName = findPluginName(name, nako3) || 'プラグイン';\n            if (f.type === 'func') {\n                addItem(createParameterDeclaration(f.josi) + name, name, pluginName);\n            }\n            else {\n                addItem(name, name, pluginName);\n            }\n        }\n        // 依存ファイルが定義した関数名\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\n            for (const [name, f] of Object.entries(funclist)) {\n                const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\n                addItem(josi + name, name, file);\n            }\n        }\n        // 現在のファイル内に存在する名前\n        if (backgroundTokenizer.lastLexerOutput !== null) {\n            for (const token of backgroundTokenizer.lastLexerOutput.tokens) {\n                const name = token.value + '';\n                // 同じ行のトークンの場合、自分自身にマッチしている可能性が高いため除外する。\n                // すでに定義されている場合も、定義ではなく参照の可能性が高いため除外する。\n                if (token.line === row || values.has(name)) {\n                    continue;\n                }\n                if (token.type === 'word') {\n                    addItem(name, name, '変数');\n                }\n                else if (token.type === 'func') {\n                    const f = nako3.funclist[name];\n                    const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\n                    addItem(josi + name, name, '関数');\n                }\n            }\n        }\n        return Array.from(result.entries()).map(([caption, data]) => ({ caption, ...data, meta: Array.from(data.meta).join(', ') }));\n    }\n    /**\n       * スニペット\n       */\n    /** @param {string} text */\n    static getSnippets(text) {\n        // インデント構文が有効化されているなら「ここまで」を消す\n        const indentSyntax = isIndentSyntaxEnabled(text);\n        /** @param {string} en @param {string} jp @param {string} snippet */\n        const item = (en, jp, snippet) => indentSyntax\n            ? { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t*ここまで(\\n|$)/g, '').replace(/\\t/g, '    ') }\n            : { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t/g, '    ') };\n        return [\n            item('if', 'もし〜ならば', 'もし${1:1=1}ならば\\n\\t${2:1を表示}\\n違えば\\n\\t${3:2を表示}\\nここまで\\n'),\n            item('times', '〜回', '${1:3}回\\n\\t${2:1を表示}\\nここまで\\n'),\n            item('for', '繰り返す', '${1:N}で${2:1}から${3:3}まで繰り返す\\n\\t${4:Nを表示}\\nここまで\\n'),\n            item('while', '〜の間', '${1:N<2の間}\\n\\tN=N+1\\nここまで\\n'),\n            item('foreach', '〜を反復', '${1:[1,2,3]}を反復\\n\\t${2:対象を表示}\\nここまで\\n'),\n            item('switch', '〜で条件分岐', '${1:N}で条件分岐\\n\\t${2:1}ならば\\n\\t\\t${3:1を表示}\\n\\tここまで\\n\\t${4:2}ならば\\n\\t\\t${5:2を表示}\\n\\tここまで\\n\\t違えば\\n\\t\\t${6:3を表示}\\n\\tここまで\\nここまで\\n'),\n            item('function', '●〜とは', '●（${1:AとBを}）${2:足す}とは\\n\\t${3:A+Bを戻す}\\nここまで\\n'),\n            item('test', '●テスト:〜とは', '●テスト:${2:足す}とは\\n\\t1と2を足す\\n\\tそれと3がASSERT等しい\\nここまで\\n'),\n            item('try', 'エラー監視', 'エラー監視\\n\\t${1:1のエラー発生}\\nエラーならば\\n\\t${2:2を表示}\\nここまで\\n')\n        ];\n    }\n    /**\n       * @param {string} line\n       * @param {NakoCompiler} nako3\n       */\n    static getCompletionPrefix(line, nako3) {\n        /** @type {ReturnType<NakoCompiler['lex']>[\"tokens\"] | null} */\n        let tokens = null;\n        // ひらがなとアルファベットとカタカナと漢字のみオートコンプリートする。\n        if (line.length === 0 || !/[ぁ-んa-zA-Zァ-ヶー\\u3005\\u4E00-\\u9FCF]/.test(line[line.length - 1])) {\n            return '';\n        }\n        // 現在の行のカーソルより前の部分をlexerにかける。速度を優先して1行だけ処理する。\n        try {\n            nako3.reset();\n            tokens = withoutLogger(nako3, () => nako3.lex(line, 'completion.nako3', undefined, true)).tokens\n                .filter((t) => t.type !== 'eol' && t.type !== 'eof');\n        }\n        catch (e) {\n            if (!(e instanceof NakoError)) {\n                console.error(e);\n            }\n        }\n        if (tokens === null || tokens.length === 0 || !tokens[tokens.length - 1].value) {\n            return '';\n        }\n        const prefix = tokens[tokens.length - 1].value + '';\n        // 単語の先頭がひらがなではなく末尾がひらがなのとき、助詞を打っている可能性が高いためオートコンプリートしない。\n        if (/[ぁ-ん]/.test(prefix[prefix.length - 1]) && !/[ぁ-ん]/.test(prefix[0])) {\n            return '';\n        }\n        // 最後のトークンの値を、オートコンプリートで既に入力した部分とする。\n        return prefix;\n    }\n    /**\n       * 文字を打つたびに各行についてこの関数が呼ばれる。'start'を返した行はfold可能な範囲の先頭の行になる。\n       * @param {Session} session\n       * @param {string} foldStyle\n       * @param {number} row\n       * @returns {'start' | ''}\n       */\n    getFoldWidget({ doc }, foldStyle, row) {\n        // 速度が重要なため正規表現でマッチする。\n        return LanguageFeatures.isBlockStart(doc.getLine(row)) ? 'start' : '';\n    }\n    /**\n       * getFoldWidgetが'start'を返した行に設置されるfold用のボタンが押されたときに呼ばれる。\n       * @param {Session} session\n       * @param {string} foldStyle\n       * @param {number} row\n       * @returns {AceRange | null} foldする範囲\n       */\n    getFoldWidgetRange({ doc }, foldStyle, row) {\n        const pair = this.getBlockStructure(doc.getAllLines().join('\\n')).pairs.find((v) => v[0] === row);\n        if (pair !== undefined) {\n            return new this.AceRange(pair[0], doc.getLine(pair[0]).length, pair[1] - 1, doc.getLine(pair[1] - 1).length);\n        }\n        return null;\n    }\n    /**\n       * @param {AceDocument} doc\n       * @returns {CodeLens[]}\n       */\n    static getCodeLens(doc) {\n        const results = [];\n        for (const [row, line] of Array.from(doc.getAllLines().entries())) {\n            // eslint-disable-next-line no-irregular-whitespace\n            const matches = /^[ 　・\\t]*●テスト:(.+?)(?:とは|$)/.exec(line);\n            if (matches !== null) {\n                results.push({\n                    start: { row },\n                    command: { title: 'テストを実行', id: 'runTest', arguments: [matches[1]] }\n                });\n            }\n        }\n        return results;\n    }\n    /**\n       * @param {string} code\n       * @returns {ReturnType<getBlockStructure>}\n       * @private\n       */\n    getBlockStructure(code) {\n        // キャッシュ\n        if (!this.blockStructure || this.blockStructure.code !== code) {\n            // @ts-ignore\n            this.blockStructure = { code, data: getBlockStructure(code) };\n        }\n        return this.blockStructure.data;\n    }\n}\n/**\n * 複数ファイルを表示するための最低限のAPIを提供する。\n * @typedef {{ content: string, cursor: { range: AceRange, reversed: boolean }, scroll: { top: number, left: number }, undoManger: any }} EditorTabState\n */\nclass EditorTabs {\n    /**\n       * @param {AceEditor} editor\n       * @param {TypeofAceRange} AceRange\n       * @param {any} UndoManager\n       */\n    constructor(editor, AceRange, UndoManager) {\n        this.editor = editor;\n        this.AceRange = AceRange;\n        this.UndoManager = UndoManager;\n    }\n    /** @param {string} content @returns {EditorTabState} */\n    newTab(content) {\n        return {\n            content,\n            cursor: { range: new this.AceRange(0, 0, 0, 0), reversed: false },\n            scroll: { left: 0, top: 0 },\n            undoManger: new this.UndoManager()\n        };\n    }\n    /** @returns {EditorTabState} */\n    getTab() {\n        return {\n            content: this.editor.getValue(),\n            cursor: { range: this.editor.session.selection.getRange(), reversed: this.editor.session.selection.isBackwards() },\n            scroll: { left: this.editor.session.getScrollLeft(), top: this.editor.session.getScrollTop() },\n            undoManger: this.editor.session.getUndoManager()\n        };\n    }\n    /** @param {EditorTabState} state */\n    setTab(state) {\n        this.editor.setValue(state.content);\n        this.editor.session.selection.setRange(state.cursor.range, state.cursor.reversed);\n        this.editor.session.setScrollLeft(state.scroll.left);\n        this.editor.session.setScrollTop(state.scroll.top);\n        this.editor.session.setUndoManager(state.undoManger);\n    }\n}\nclass Options {\n    /** Save Options */\n    static save(editor) {\n        try {\n            /** @type {any} */\n            const obj = {};\n            for (const key of ['syntaxHighlighting', 'keyboardHandler', 'theme', 'fontSize', 'wrap', 'useSoftTabs', 'tabSize', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\n                obj[key] = editor.getOption(key);\n            }\n            localStorage.setItem('nako3EditorOptions', JSON.stringify(obj));\n        }\n        catch (e) {\n            // JSON.stringify のエラー、localStorageのエラーなど\n            console.error(e);\n            return null;\n        }\n    }\n    /** @param {AceEditor} editor */\n    static load(editor) {\n        try {\n            if (!window.localStorage) {\n                return null;\n            }\n            const text = window.localStorage.getItem('nako3EditorOptions');\n            if (text === null) {\n                return null;\n            }\n            const json = JSON.parse(text);\n            if (['ace/keyboard/vscode', 'ace/keyboard/emacs', 'ace/keyboard/sublime', 'ace/keyboard/vim'].includes(json.keyboardHandler)) {\n                editor.setOption('keyboardHandler', json.keyboardHandler);\n            }\n            if (['ace/theme/xcode', 'ace/theme/monokai'].includes(json.theme)) {\n                editor.setOption('theme', json.theme);\n            }\n            if (typeof json.fontSize === 'number') {\n                editor.setOption('fontSize', Math.min(48, Math.max(6, json.fontSize)));\n            }\n            for (const key of ['syntaxHighlighting', 'wrap', 'useSoftTabs', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\n                if (typeof json[key] === 'boolean') {\n                    editor.setOption(key, json[key]);\n                }\n            }\n            if (typeof json.tabSize === 'number') {\n                editor.setOption('tabSize', Math.min(16, Math.max(0, json.tabSize)));\n            }\n        }\n        catch (e) {\n            // JSONのパースエラー、localStorageのエラーなど\n            console.error(e);\n            return null;\n        }\n    }\n    /** OptionPanelクラスをなでしこ用に書き換える。 */\n    static initPanel(OptionPanel, editor) {\n        const panel = new OptionPanel(editor); // editorはエラーが飛ばなければ何でも良い\n        // ページ内で一度だけ呼ぶ\n        if (this.done) {\n            return;\n        }\n        this.done = true;\n        // renderメソッドを呼ぶとrenderOptionGroupにoptionGroups.Main、optionGroups.More が順に渡されることを利用して、optionGroupsを書き換える。\n        let isMain = true;\n        panel.renderOptionGroup = (group) => {\n            if (isMain) { // Main\n                for (const key of Object.keys(group)) {\n                    delete group[key];\n                }\n                // スマートフォンでも見れるように、文字数は最小限にする\n                group['シンタックスハイライト'] = {\n                    path: 'syntaxHighlighting'\n                };\n                group['キーバインド'] = {\n                    path: 'keyboardHandler',\n                    type: 'select',\n                    items: [\n                        { caption: 'VSCode', value: 'ace/keyboard/vscode' },\n                        { caption: 'Emacs', value: 'ace/keyboard/emacs' },\n                        { caption: 'Sublime', value: 'ace/keyboard/sublime' },\n                        { caption: 'Vim', value: 'ace/keyboard/vim' }\n                    ]\n                };\n                group['カラーテーマ'] = {\n                    path: 'theme',\n                    type: 'select',\n                    items: [\n                        { caption: 'ライト', value: 'ace/theme/xcode' },\n                        { caption: 'ダーク', value: 'ace/theme/monokai' }\n                    ]\n                };\n                group['文字サイズ'] = {\n                    path: 'fontSize',\n                    type: 'number',\n                    defaultValue: 16\n                };\n                group['行の折り返し'] = {\n                    path: 'wrap',\n                    type: 'select',\n                    items: [\n                        { caption: 'なし', value: 'off' },\n                        { caption: 'あり', value: 'free' }\n                    ]\n                };\n                group['ソフトタブ'] = [{\n                        path: 'useSoftTabs'\n                    }, {\n                        ariaLabel: 'Tab Size',\n                        path: 'tabSize',\n                        type: 'number',\n                        values: [2, 3, 4, 8, 16]\n                    }];\n                group['空白文字を表示'] = {\n                    path: 'showInvisibles'\n                };\n                group['常に自動補完'] = {\n                    path: 'enableLiveAutocompletion'\n                };\n                group['折り返した行をインデント'] = {\n                    path: 'indentedSoftWrap'\n                };\n                group['助詞に下線を引く'] = {\n                    path: 'underlineJosi'\n                };\n                isMain = false;\n            }\n            else { // More\n                for (const key of Object.keys(group)) {\n                    delete group[key];\n                }\n            }\n        };\n        panel.render();\n        // 設定メニューは ace/ext/settings_menu.js の showSettingsMenu 関数によって開かれる。\n        // showSettingsMenu 関数は new OptionPanel(editor).render() で新しい設定パネルのインスタンスを生成するため、\n        // renderメソッドを上書きすることで、生成されたインスタンスにアクセスできる。\n        const render = OptionPanel.prototype.render;\n        OptionPanel.prototype.render = function (...args) {\n            render.apply(this, ...args); // 元の処理\n            // OptionPanel.setOption() で発火される setOption イベントをキャッチする\n            this.on('setOption', () => {\n                console.log('設定を保存しました。');\n                Options.save(this.editor);\n            });\n        };\n    }\n}\n/**\n * ace/ext/language_tools の設定がグローバル変数で保持されているため、こちら側でもグローバル変数で管理しないと、エディタが複数あるときに正しく動かない。\n * - captionはオートコンプリートの候補として表示されるテキスト\n * - metaはcaptionのテキストの右に薄く表示されるテキスト\n * - docHTMLはその更に右に独立したウィンドウで表示されるHTMLによる説明\n * - valueは決定したときに実際に挿入される文字列。プレースホルダーを配置するなら代わりにsnippetに値を設定する。\n *\n * @typedef {{\n *     getCompletions(\n *         editor: any,\n *         session: Session,\n *         pos: { row: number, column: number },\n *         prefix: any,\n *         callback: (\n *             a: null,\n *             b: { meta: string, caption: string, value?: string, score: number, docHTML?: string, snippet?: string }[]\n *         ) => void\n *     ): void\n *     getDocTooltip?(item: any): void\n * }} Completer\n * @type {Completer[]}\n */\nconst completers = [];\nlet editorIdCounter = 0;\n/**\n * 指定したidのHTML要素をなでしこ言語のエディタにする。\n *\n * - ace editor がグローバルに読み込まれている必要がある。\n * - wnako3_editor.css を読み込む必要がある。\n * - readonly にするには data-nako3-readonly=\"true\" を設定する。\n * - エラー位置の表示を無効化するには data-nako3-disable-marker=\"true\" を設定する。\n * - 縦方向にリサイズ可能にするには nako3-resizable=\"true\" を設定する。\n * - デバイスが遅いときにシンタックスハイライトを無効化する機能を切るには nako3-force-syntax-highlighting=\"true\" を設定する。\n *\n * @param {string | Element} idOrElement HTML要素\n * @param {import('./wnako3')} nako3\n * @param {any} ace\n */\nexport function setupEditor(idOrElement, nako3, ace) {\n    /** @type {AceEditor} */\n    const editor = ace.edit(idOrElement);\n    const element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\n    if (element === null) {\n        throw new Error(`[wnako3_editor] idが ${idOrElement} のHTML要素は存在しません。`);\n    }\n    /** @type {TypeofAceRange} */\n    const AceRange = ace.require('ace/range').Range;\n    const editorMarkers = new EditorMarkers(editor.session, editor.session.bgTokenizer.doc, AceRange, !!element.dataset.nako3DisableMarker);\n    if (element.classList.contains('nako3_ace_mounted')) {\n        // 同じエディタを誤って複数回初期化すると、ace editor の挙動を書き換えているせいで\n        // 意図しない動作をしたため、すでにエディタとして使われていないことを確認する。\n        throw new Error('なでしこ言語のエディタの初期化処理を同一のHTML要素に対して複数回適用しました。');\n    }\n    // lang=\"ja\" があると表示がずれる問題の修正 #839\n    element.setAttribute('lang', 'en');\n    // 以前のバージョンではnako3_editorをhtmlに直接付けていたため、互換性のためnako3_editorとは別のクラス名を使用する。\n    element.classList.add('nako3_ace_mounted');\n    element.classList.add('nako3_editor'); // CSSのため\n    const readonly = element.dataset.nako3Readonly;\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!readonly) {\n        element.classList.add('readonly');\n        editor.setReadOnly(true);\n    }\n    editor.setFontSize(16);\n    /** @param {Session} session */\n    const resetEditorTokens = (session) => {\n        // 一旦テキスト全体を消してから、元に戻す\n        /** @type {AceDocument} */\n        const doc = session.doc;\n        const lines = doc.getAllLines();\n        const range = session.selection.getRange();\n        doc.removeFullLines(0, doc.getLength());\n        doc.insert({ row: 0, column: 0 }, lines.join('\\n'));\n        session.selection.setRange(range, false);\n    };\n    ace.require('ace/config').defineOptions(editor.constructor.prototype, 'editor', {\n        syntaxHighlighting: {\n            /** @type {(this: AceEditor, value: boolean) => void} */\n            set: function (value) {\n                this.session.bgTokenizer.enabled = value;\n                resetEditorTokens(this.session);\n            },\n            initialValue: true\n        },\n        underlineJosi: {\n            /** @type {(this: AceEditor, value: boolean) => void} */\n            set: function (value) {\n                this.session.bgTokenizer.underlineJosi = value;\n                resetEditorTokens(this.session);\n            },\n            initialValue: true\n        }\n    });\n    editor.setOptions({\n        wrap: 'free',\n        indentedSoftWrap: false,\n        showPrintMargin: false\n    });\n    ace.require('ace/keybindings/vscode');\n    editor.setKeyboardHandler('ace/keyboard/vscode');\n    // ドキュメントのホバー\n    const Tooltip = ace.require('ace/tooltip').Tooltip;\n    const tooltip = new Tooltip(editor.container);\n    const event = ace.require('ace/lib/event');\n    event.addListener(editor.renderer.content, 'mouseout', () => {\n        // マウスカーソルがエディタの外に出たら、tooltipを隠す\n        tooltip.hide();\n    });\n    editor.on('mousemove', (e) => {\n        // マウスカーソルがトークンに重なったときにtooltipを表示する。モバイル端末の場合はトークンにカーソルが当たったときに表示される。\n        const pos = e.getDocumentPosition();\n        // getTokenAtはcolumnが行末より大きいとき行末のトークンを返してしまう。\n        if (pos.column >= e.editor.session.getLine(pos.row).length) {\n            tooltip.hide();\n            return;\n        }\n        // getTokenAtは実際よりも1文字右のトークンを取得してしまうため、columnに1を足している。\n        /** @type {EditorToken} */\n        const token = e.editor.session.getTokenAt(pos.row, pos.column + 1);\n        if (token === null || !token.docHTML) {\n            // ドキュメントが存在しないトークンならtooltipを表示しない\n            tooltip.hide();\n            return;\n        }\n        tooltip.setHtml(token.docHTML);\n        tooltip.show(null, e.clientX, e.clientY);\n    });\n    editor.session.on('change', () => {\n        // モバイル端末でドキュメントが存在するトークンを編集するときにツールチップが消えない問題を解消するために、文字を打ったらtooltipを隠す。\n        tooltip.hide();\n        // 文字入力したらマーカーを消す\n        editorMarkers.clear();\n    });\n    editor.on('guttermousedown', (e) => {\n        const target = e.domEvent.target;\n        if (target.className.indexOf('ace_gutter-cell') === -1) {\n            return;\n        }\n        if (!editor.isFocused()) {\n            return;\n        }\n        const row = e.getDocumentPosition().row;\n        const editorId = e.editor.editorId || 0;\n        if (target.className.indexOf('ace_breakpoint') === -1) {\n            e.editor.session.setBreakpoint(row);\n            window.postMessage({ action: 'breakpoint:on', row, editorId });\n        }\n        else {\n            e.editor.session.clearBreakpoint(row);\n            window.postMessage({ action: 'breakpoint:off', row, editorId });\n        }\n        // console.log('BREAKPOINT=', row, 'editorId=', editorId)\n        e.stop();\n    });\n    const forceSyntaxHighlighting = !!element.dataset.nako3ForceSyntaxHighlighting;\n    let isFirstTime = true;\n    const oldBgTokenizer = editor.session.bgTokenizer;\n    const backgroundTokenizer = new BackgroundTokenizer(editor.session.bgTokenizer.doc, nako3, (firstRow, lastRow, ms) => {\n        oldBgTokenizer._signal('update', { data: { first: firstRow, last: lastRow } });\n        // 処理が遅い場合シンタックスハイライトを無効化する。\n        if (ms > 220 && editor.getOption('syntaxHighlighting') && !readonly && !forceSyntaxHighlighting && isFirstTime) {\n            isFirstTime = false;\n            slowSpeedMessage.classList.add('visible');\n            editor.setOption('syntaxHighlighting', false);\n            setTimeout(() => {\n                slowSpeedMessage.classList.remove('visible');\n            }, 13000);\n        }\n    }, (code, err) => { editorMarkers.addByError(code, err, 'error'); }, \n    /** @type {boolean} */ (editor.getOption('underlineJosi')));\n    // オートコンプリートを有効化する\n    editor.setOptions({\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: true\n    });\n    const editorId = editorIdCounter++;\n    editor.wnako3EditorId = editorId;\n    // オートコンプリートのcompleterを設定する\n    completers.push({\n        getCompletions(editor, session, pos, prefix, callback) {\n            if (editor.wnako3EditorId !== editorId) {\n                callback(null, []);\n            }\n            else {\n                const items = LanguageFeatures.getCompletionItems(pos.row, prefix, nako3, backgroundTokenizer);\n                // 完全に一致する候補があればオートコンプリートしない。（Aceエディタでの挙動が微妙なため。）\n                if (items.some((v) => v.value === prefix)) {\n                    callback(null, []);\n                    return;\n                }\n                callback(null, items);\n            }\n        }\n    }, { getCompletions(editor, session, pos, prefix, callback) { callback(null, (editor.wnako3EditorId !== editorId) ? [] : LanguageFeatures.getSnippets(editor.session.doc.getAllLines().join('\\n'))); } });\n    ace.require('ace/ext/language_tools').setCompleters(completers);\n    // オートコンプリートの単語の区切りが日本語に対応していないため、メソッドを上書きして対応させる。\n    // 文字を入力するたびに呼ばれ、''以外を返すとその文字列をもとにしてautocompletionが始まる。\n    ace.require('ace/autocomplete/util').getCompletionPrefix = (/** @type {AceEditor} */ editor) => {\n        const pos = editor.getCursorPosition();\n        return LanguageFeatures.getCompletionPrefix(editor.session.doc.getLine(pos.row).slice(0, pos.column), nako3);\n    };\n    // エディタの挙動の設定\n    const languageFeatures = new LanguageFeatures(AceRange, nako3);\n    const oop = ace.require('ace/lib/oop');\n    const TextMode = ace.require('ace/mode/text').Mode;\n    const Mode = function () {\n        this.HighlightRules = new TextMode().HighlightRules;\n        this.foldingRules = {\n            getFoldWidget: languageFeatures.getFoldWidget.bind(languageFeatures),\n            getFoldWidgetRange: languageFeatures.getFoldWidgetRange.bind(languageFeatures)\n        };\n    };\n    oop.inherits(Mode, TextMode);\n    Mode.prototype.toggleCommentLines = LanguageFeatures.toggleCommentLines.bind(LanguageFeatures);\n    Mode.prototype.getNextLineIndent = LanguageFeatures.getNextLineIndent.bind(LanguageFeatures);\n    Mode.prototype.checkOutdent = LanguageFeatures.checkOutdent.bind(LanguageFeatures);\n    Mode.prototype.autoOutdent = languageFeatures.autoOutdent.bind(languageFeatures);\n    editor.session.setMode(new Mode());\n    // tokenizer （シンタックスハイライト）の上書き\n    editor.session.bgTokenizer.stop();\n    editor.session.bgTokenizer = backgroundTokenizer;\n    editor.setTheme('ace/theme/xcode');\n    // 設定メニューの上書き\n    // なでしこ用に上書きした設定の削除やテキストの和訳をする。\n    Options.load(editor);\n    const OptionPanel = ace.require('ace/ext/options').OptionPanel;\n    Options.initPanel(OptionPanel, editor);\n    // 右下のボタン全体を囲むdiv\n    const buttonContainer = document.createElement('div');\n    buttonContainer.classList.add('button-container');\n    editor.container.appendChild(buttonContainer);\n    // 遅い端末へのメッセージのボタン\n    const slowSpeedMessage = document.createElement('span');\n    slowSpeedMessage.classList.add('slow-speed-message');\n    slowSpeedMessage.innerHTML = '<span>エディタの|応答速度が|低下したため|シンタックス|ハイライトを|無効化|しました。</span>'.replace(/\\|/g, '</span><span>');\n    buttonContainer.appendChild(slowSpeedMessage);\n    // テストの定義の上に「テストを実行」ボタンを表示する\n    /** @type {{ name: 'test', callback: (testName: string | undefined) => void }[]} */\n    const codeLensListeners = [];\n    try {\n        const CodeLens = ace.require('ace/ext/code_lens');\n        editor.setOption('enableCodeLens', true);\n        editor.commands.addCommand({\n            name: 'runTest',\n            exec: (/** @type {AceEditor} */ editor, /** @type {any[]} */ args) => {\n                codeLensListeners\n                    .filter((v) => v.name === 'test')\n                    .forEach((f) => f.callback(args[0]));\n            }\n        });\n        CodeLens.registerCodeLensProvider(editor, {\n            provideCodeLenses: (/** @type {Session} */ session, /** @type {(_: null, arr: CodeLens[]) => void} */ callback) => {\n                callback(null, codeLensListeners.some((v) => v.name === 'test') ? LanguageFeatures.getCodeLens(session.doc) : []);\n            }\n        });\n    }\n    catch (e) {\n        console.error(e); // ext/code_lens のscriptタグが読み込まれていない場合など。\n    }\n    // 「全画面」ボタン\n    const exitFullscreen = () => {\n        editor.container.classList.remove('fullscreen');\n        editor.renderer.setScrollMargin(0, 0, 0, 0); // marginを元に戻す\n    };\n    const fullscreenButton = document.createElement('span');\n    fullscreenButton.classList.add('editor-button');\n    fullscreenButton.innerText = '全画面';\n    fullscreenButton.addEventListener('click', (e) => {\n        if (editor.container.classList.contains('fullscreen')) {\n            exitFullscreen();\n        }\n        else {\n            editor.container.classList.add('fullscreen');\n            editor.renderer.setScrollMargin(20, 20, 0, 0); // 上下に少し隙間を開ける\n        }\n        e.preventDefault();\n    });\n    buttonContainer.appendChild(fullscreenButton);\n    // 「設定」ボタン\n    const settingsButton = document.createElement('span');\n    settingsButton.classList.add('editor-button');\n    settingsButton.innerText = '設定';\n    settingsButton.addEventListener('click', (e) => {\n        exitFullscreen();\n        editor.execCommand('showSettingsMenu');\n        e.preventDefault();\n    });\n    buttonContainer.appendChild(settingsButton);\n    // 複数ファイルの切り替え\n    const UndoManager = ace.require('ace/undomanager').UndoManager;\n    const editorTabs = new EditorTabs(editor, AceRange, UndoManager);\n    // リサイズ可能にする\n    const resizable = element.dataset.nako3Resizable;\n    if (resizable) {\n        new MutationObserver(() => { editor.resize(); }).observe(editor.container, { attributes: true });\n        editor.renderer.setScrollMargin(4, 0, 4, 0);\n        editor.container.classList.add('resizable');\n    }\n    const retokenize = () => { backgroundTokenizer.dirty = true; };\n    /**\n       * プログラムを実行して、エラーがあればエディタ上に波線を表示する。出力はoutputContainerに表示する。\n       * methodが'test'のとき、testNameを指定すると1つのテストだけ実行できる。\n       */\n    const run = (opts) => {\n        const code = editor.getValue();\n        const preCode = opts.preCode || ''; // プログラムの前に自動的に挿入されるコード\n        // loggerを新しいインスタンスに置き換える。そうしないとどのエディタで起きたエラー（や警告や出力）なのかが分からない。\n        const logger = nako3.replaceLogger();\n        if (opts.outputContainer) {\n            const c = opts.outputContainer;\n            logger.addListener('info', ({ html }) => {\n                if (!c) {\n                    console.log(html);\n                }\n                c.style.display = 'block';\n                c.innerHTML += html;\n            });\n            opts.outputContainer.classList.add('nako3-output-container');\n        }\n        let filename = opts.file || 'main.nako3';\n        // 警告とエラーをエディタ上に表示する。\n        logger.addListener('info', ({ position, noColor, level }) => {\n            if (position && (position.file === filename && (level === 'warn' || level === 'error'))) {\n                editorMarkers.addByError(code, { ...position, message: noColor }, level);\n            }\n        });\n        // 依存ファイルを読み込む。\n        const promise = nako3.loadDependencies(preCode + code, filename, preCode, opts.localFiles || {})\n            .then(async () => {\n            // プログラムを実行する。\n            if (!filename) {\n                filename = 'main.nako3';\n            }\n            if (opts.method === 'test') {\n                return nako3.test(preCode + code, filename, preCode, opts.testName);\n            }\n            else if (opts.method === 'compile') {\n                return nako3.compile(preCode + code, filename, false, preCode);\n            }\n            else {\n                const opt = { resetEnv: true, resetAll: true, preCode };\n                return await nako3.runAsync(preCode + code, filename, opt);\n            }\n        })\n            .catch((err) => {\n            // エラーはloggerに送られるため何もしなくて良い\n            // しかし念のため console.error で出力\n            console.error('[wnako3_editor]', err, nako3.__globalObj);\n        })\n            .then(async (res) => {\n            // 読み込んだ依存ファイルの情報を使って再度シンタックスハイライトする。\n            retokenize();\n            // シンタックスハイライトが終わるのを待つ\n            while (backgroundTokenizer.dirty) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n            return res;\n        })\n            .catch((err) => {\n            console.error('[wnako3_editor::run::promise::catch]', err);\n        });\n        return { promise, logger, code };\n    };\n    return { editor, editorMarkers, editorTabs, retokenize, run, codeLensListeners };\n}\nexport default {\n    tokenize,\n    setupEditor,\n    LanguageFeatures,\n    EditorMarkers,\n    BackgroundTokenizer\n};\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst nakoVersion = {\n    version: '3.6.5',\n    major: 3,\n    minor: 6,\n    patch: 5\n};\nexport default nakoVersion;\n","// @ts-nocheck\nexport default {\n    // @色定数\n    '水色': { type: 'const', value: 'aqua' }, // @みずいろ\n    '紫色': { type: 'const', value: 'fuchsia' }, // @むらさきいろ\n    '緑色': { type: 'const', value: 'lime' }, // @みどりいろ\n    '青色': { type: 'const', value: 'blue' }, // @あおいろ\n    '赤色': { type: 'const', value: 'red' }, // @あかいろ\n    '黄色': { type: 'const', value: 'yellow' }, // @きいろ\n    '黒色': { type: 'const', value: 'black' }, // @くろいろ\n    '白色': { type: 'const', value: 'white' }, // @しろいろ\n    '茶色': { type: 'const', value: 'maroon' }, // @ちゃいろ\n    '灰色': { type: 'const', value: 'gray' }, // @はいいろ\n    '金色': { type: 'const', value: 'gold' }, // @きんいろ\n    '黄金色': { type: 'const', value: 'gold' }, // @こがねいろ\n    '銀色': { type: 'const', value: 'silver' }, // @ぎんいろ\n    '白金色': { type: 'const', value: 'silver' }, // @しろがねいろ\n    'オリーブ色': { type: 'const', value: 'olive' }, // @おりーぶいろ\n    'ベージュ色': { type: 'const', value: 'beige' }, // @べーじゅいろ\n    'アリスブルー色': { type: 'const', value: 'aliceblue' }, // @ありすぶるーいろ\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['と'], ['で', 'の']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        },\n        return_none: false\n    },\n    '色混': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            if (!a) {\n                throw new Error('『色混ぜる』の引数には配列を指定します');\n            }\n            if (a.length < 3) {\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\n            }\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\n        },\n        return_none: false\n    }\n};\n","export default {\n    // @システム\n    'WNAKOバージョン': { type: 'const', value: '?' }, // @WNAKOばーじょん\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // v3.3.74以降 plguin_system.mjsと挙動が同じになった\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            if (sys && sys.__v0) {\n                sys.__setSysVar('__forceClose', true);\n                if (!sys.__getSysVar('__useDebug')) {\n                    throw new Error('__終わる__');\n                }\n            }\n            else {\n                throw new Error('__終わる__');\n            }\n        },\n        return_none: true\n    },\n    'OS取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const ua = window.navigator.userAgent.toLowerCase();\n            if (ua.indexOf('windows') !== -1) {\n                return 'windows';\n            }\n            if (ua.indexOf('android') !== -1) {\n                return 'android';\n            }\n            if (ua.indexOf('iphone') !== -1) {\n                return 'iphone';\n            }\n            if (ua.indexOf('ipad') !== -1) {\n                return 'ipad';\n            }\n            if (ua.indexOf('mac os x') !== -1) {\n                return 'darwin';\n            }\n            if (ua.indexOf('macintosh') !== -1) {\n                return 'darwin';\n            }\n            if (ua.indexOf('cros') !== -1) {\n                return 'chromeos';\n            }\n            if (ua.indexOf('ubuntu') !== -1) {\n                return 'ubuntu';\n            }\n            if (ua.indexOf('linux') !== -1) {\n                return 'linux';\n            }\n            return 'unknown';\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ダイアログ\n    '言': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s) {\n            window.alert(s);\n        },\n        return_none: true\n    },\n    'ダイアログキャンセル値': { type: 'var', value: '' }, // @だいあろぐきゃんせるち\n    '尋': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            const r = window.prompt(s);\n            if (r === null) {\n                return sys.__getSysVar('ダイアログキャンセル値');\n            }\n            if (/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(r)) {\n                return parseFloat(r);\n            }\n            if (/^[-+－＋]?[0-9０-９]+([.．][0-9０-９]+)?$/.test(r)) {\n                return parseFloat(r.replace(/[－＋０-９．]/g, c => {\n                    return String.fromCharCode(c.charCodeAt(0) - 0xFEE0);\n                }));\n            }\n            return r;\n        }\n    },\n    '文字尋': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            const r = window.prompt(s);\n            if (r === null) {\n                return sys.__getSysVar('ダイアログキャンセル値');\n            }\n            return r;\n        }\n    },\n    '二択': {\n        type: 'func',\n        josi: [['で', 'の', 'と', 'を']],\n        pure: true,\n        fn: function (s) {\n            return window.confirm(s);\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ブラウザ操作\n    'ブラウザ移動': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (url, sys) {\n            window.location.href = url;\n        }\n    },\n    'ブラウザ戻': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            window.history.back(-1);\n        }\n    },\n    'ブラウザURL': { type: 'const', value: '' } // @NぶらうざURL\n};\n","export default {\n    // @HTTPとAJAX\n    'HTTP取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信時': {\n        type: 'func',\n        josi: [['で'], ['から', 'を']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'AJAX送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\n                if (res.status !== 200) {\n                    return sys.__getSysVar('AJAX:ONERROR')(res.status);\n                }\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text, sys);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        },\n        return_none: true\n    },\n    'AJAXオプション': { type: 'const', value: '' }, // @AJAXおぷしょん\n    'AJAXオプション設定': {\n        type: 'func',\n        josi: [['に', 'へ', 'と']],\n        pure: true,\n        fn: function (option, sys) {\n            sys.__setSysVar('AJAXオプション', option);\n        },\n        return_none: true\n    },\n    'AJAXオプションPOST設定': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            sys.__setSysVar('AJAXオプション', options);\n        },\n        return_none: true\n    },\n    'AJAX失敗時': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('AJAX:ONERROR', callback);\n        }\n    },\n    'AJAXテキスト取得': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.text();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAX_JSON取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.json();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAXバイナリ取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const bin = await res.blob();\n            return bin;\n        },\n        return_none: false\n    },\n    // @GETとPOST\n    'GET送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'POST送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        }\n    },\n    'POSTフォーム送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                callback(text);\n            }).catch(err => {\n                sys.__getSysVar('AJAX:ONERROR')(err);\n            });\n        }\n    },\n    'POSTデータ生成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (params, sys) {\n            const flist = [];\n            for (const key in params) {\n                const v = params[key];\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\n                flist.push(kv);\n            }\n            return flist.join('&');\n        }\n    },\n    'POST送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: bodyData\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    'POSTフォーム送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const fd = new FormData();\n                for (const key in params) {\n                    fd.set(key, params[key]);\n                }\n                const options = {\n                    method: 'POST',\n                    body: fd\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    // @HTTPとAJAX(保証)\n    'AJAX保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'HTTP保障取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            return sys.__exec('AJAX保障送信', [url, sys]);\n        },\n        return_none: false\n    },\n    'POST保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'POSTフォーム保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'AJAX内容取得': {\n        type: 'func',\n        josi: [['から'], ['で']],\n        pure: true,\n        fn: function (res, type, sys) {\n            type = type.toString().toUpperCase();\n            if (type === 'TEXT' || type === 'テキスト') {\n                return res.text();\n            }\n            else if (type === 'JSON') {\n                return res.json();\n            }\n            else if (type === 'BLOB') {\n                return res.blob();\n            }\n            else if (type === 'ARRAY' || type === '配列') {\n                return res.arrayBuffer();\n            }\n            else if (type === 'BODY' || type === '本体') {\n                return res.body;\n            }\n            return res.body();\n        },\n        return_none: false\n    },\n    // @Blob\n    'BLOB作成': {\n        type: 'func',\n        josi: [['を', 'から'], ['で']],\n        pure: true,\n        fn: function (data, options) {\n            if (!(data instanceof Array)) {\n                data = [data];\n            }\n            return new Blob(data, options);\n        }\n    },\n    // @HTTPとAJAX(非推奨)\n    'AJAX逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            let options = sys.__getSysVar('AJAXオプション');\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve();\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'HTTP逐次取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.__exec('AJAX逐次送信', [url, sys]);\n        },\n        return_none: true\n    },\n    'POST逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'POSTフォーム逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__setSysVar('対象', text);\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @DOM操作\n    'DOCUMENT': { type: 'const', value: '' }, // @DOCUMENT\n    'WINDOW': { type: 'const', value: '' }, // @WINDOW\n    'NAVIGATOR': { type: 'const', value: '' }, // @NAVIGATOR\n    'DOM要素ID取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (id) {\n            return document.getElementById(id);\n        }\n    },\n    'DOM要素取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (q) {\n            if (typeof q === 'string') {\n                return document.querySelector(q);\n            }\n            return q;\n        }\n    },\n    'DOM要素全取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (q) {\n            return Array.from(document.querySelectorAll(q));\n        }\n    },\n    'タグ一覧取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (tag) {\n            return Array.from(document.getElementsByTagName(tag));\n        }\n    },\n    'DOM子要素取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (pa, q, sys) {\n            pa = sys.__query(pa, 'DOM子要素取得', true);\n            if (!pa.querySelector) {\n                throw new Error('『DOM子要素取得』で親要素がDOMではありません。');\n            }\n            return pa.querySelector(q);\n        }\n    },\n    'DOM子要素全取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (pa, q, sys) {\n            pa = sys.__query(pa, 'DOM子要素全取得', true);\n            if (!pa.querySelectorAll) {\n                throw new Error('『DOM子要素全取得』で親要素がDOMではありません。');\n            }\n            return Array.from(pa.querySelectorAll(q));\n        }\n    },\n    'DOMイベント設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, event, funcStr, sys) {\n            dom = sys.__query(dom, 'DOMイベント設定', false);\n            dom[event] = sys.__findVar(funcStr, null);\n        },\n        return_none: true\n    },\n    'DOMテキスト設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, text, sys) {\n            dom = sys.__query(dom, 'DOMテキスト設定', false);\n            const tag = dom.tagName.toUpperCase();\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\n                dom.value = text;\n            }\n            else if (tag === 'SELECT') {\n                for (let i = 0; i < dom.options.length; i++) {\n                    const v = dom.options[i].value;\n                    if (String(v) === text) {\n                        dom.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            else {\n                dom.innerHTML = text;\n            }\n        },\n        return_none: true\n    },\n    'DOMテキスト取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, 'DOMテキスト取得', true);\n            if (!dom) {\n                return '';\n            }\n            const tag = dom.tagName.toUpperCase();\n            // input or textarea\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\n                return dom.value;\n            }\n            // select\n            if (tag === 'SELECT') {\n                const idx = dom.selectedIndex;\n                if (idx < 0) {\n                    return null;\n                }\n                return dom.options[idx].value;\n            }\n            return dom.innerHTML;\n        }\n    },\n    'DOM_HTML設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, text, sys) {\n            dom = sys.__query(dom, 'DOM_HTML設定', false);\n            dom.innerHTML = text;\n        },\n        return_none: true\n    },\n    'DOM_HTML取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, 'DOM_HTML取得', true);\n            if (!dom) {\n                return '';\n            }\n            return dom.innerHTML;\n        }\n    },\n    'テキスト設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, v, sys) {\n            return sys.__exec('DOMテキスト設定', [dom, v, sys]);\n        }\n    },\n    'テキスト取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            return sys.__exec('DOMテキスト取得', [dom, sys]);\n        }\n    },\n    'HTML設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, v, sys) {\n            return sys.__exec('DOM_HTML設定', [dom, v, sys]);\n        }\n    },\n    'HTML取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            return sys.__exec('DOM_HTML取得', [dom, sys]);\n        }\n    },\n    'DOM属性設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        uses: ['DOM和属性'],\n        pure: true,\n        fn: function (dom, s, v, sys) {\n            dom = sys.__query(dom, 'DOM属性設定', false);\n            const wa = sys.__getSysVar('DOM和属性');\n            if (wa[s]) {\n                s = wa[s];\n            }\n            // domのプロパティを確認して存在すればその値を設定する #1392\n            if (s in dom) {\n                dom[s] = v;\n            }\n            else {\n                dom.setAttribute(s, v);\n            }\n        },\n        return_none: true\n    },\n    'DOM属性取得': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        uses: ['DOM和属性'],\n        pure: true,\n        fn: function (dom, s, sys) {\n            dom = sys.__query(dom, 'DOM属性取得', true);\n            if (!dom) {\n                return '';\n            }\n            const wa = sys.__getSysVar('DOM和属性');\n            if (wa[s]) {\n                s = wa[s];\n            }\n            // domのプロパティを確認して存在すればその値を取得する #1392\n            if (s in dom) {\n                return dom[s];\n            }\n            return dom.getAttribute(s);\n        }\n    },\n    'DOM和属性': {\n        type: 'const',\n        value: {\n            '幅': 'width',\n            '高さ': 'height',\n            '高': 'height',\n            'タイプ': 'type',\n            'データ': 'data',\n            '名前': 'name',\n            'ID': 'id',\n            '読取専用': 'readOnly',\n            '読み取り専用': 'readOnly',\n            '無効化': 'disabled'\n        }\n    },\n    'DOM和スタイル': {\n        type: 'const',\n        value: {\n            '幅': 'width',\n            '高さ': 'height',\n            '高': 'height',\n            '背景色': 'background-color',\n            '色': 'color',\n            'マージン': 'margin',\n            '余白': 'padding',\n            '文字サイズ': 'font-size',\n            '行揃え': 'text-align',\n            '左': 'left',\n            '右': 'right',\n            '中央': 'center',\n            'ボーダー': 'border',\n            'ボックス表示': 'display',\n            'なし': 'none',\n            'ブロック': 'block',\n            '表示位置': 'float',\n            '重なり': 'z-index',\n            '読取専用': 'readOnly',\n            '読み取り専用': 'readOnly',\n            'readonly': 'readOnly'\n        }\n    },\n    'DOMスタイル設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, s, v, sys) {\n            dom = sys.__query(dom, 'DOMスタイル設定', false);\n            const wa = sys.__getSysVar('DOM和スタイル');\n            if (wa[s] !== undefined) {\n                s = wa[s];\n            }\n            if (wa[v] !== undefined) {\n                v = wa[v];\n            }\n            dom.style[s] = v;\n        },\n        return_none: true\n    },\n    'DOMスタイル一括設定': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, values, sys) {\n            dom = sys.__query(dom, 'DOMスタイル一括設定', false);\n            if (dom instanceof window.HTMLElement) {\n                dom = [dom];\n            }\n            const wa = sys.__getSysVar('DOM和スタイル');\n            // 列挙したDOM一覧を全てスタイル変更する\n            for (let i = 0; i < dom.length; i++) {\n                const e = dom[i];\n                for (const key in values) {\n                    let s = key;\n                    let v = values[key];\n                    if (wa[s] !== undefined) {\n                        s = wa[s];\n                    }\n                    if (wa[v] !== undefined) {\n                        v = wa[v];\n                    }\n                    e.style[s] = v;\n                }\n            }\n        },\n        return_none: true\n    },\n    'DOMスタイル取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, style, sys) {\n            dom = sys.__query(dom, 'DOMスタイル取得', true);\n            if (!dom) {\n                return '';\n            }\n            const wa = sys.__getSysVar('DOM和スタイル');\n            if (wa[style]) {\n                style = wa[style];\n            }\n            return dom.style[style];\n        }\n    },\n    'DOMスタイル一括取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, style, sys) {\n            const res = {};\n            dom = sys.__query(dom, 'DOMスタイル一括取得', true);\n            if (!dom) {\n                return res;\n            }\n            if (style instanceof String) {\n                style = [style];\n            }\n            const wa = sys.__getSysVar('DOM和スタイル');\n            if (style instanceof Array) {\n                style.forEach((key) => {\n                    if (wa[key]) {\n                        key = wa[key];\n                    }\n                    res[key] = dom.style[key];\n                });\n                return res;\n            }\n            if (style instanceof Object) {\n                for (let key in style) {\n                    if (wa[key]) {\n                        key = wa[key];\n                    }\n                    res[key] = dom.style[key];\n                }\n                return res;\n            }\n            return dom.style[style];\n        }\n    },\n    'DOM要素作成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (tag) {\n            return document.createElement(tag);\n        }\n    },\n    'DOM子要素追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (pa, el, sys) {\n            pa = sys.__query(pa, 'DOM子要素追加', false);\n            el = sys.__query(el, 'DOM子要素追加', false);\n            pa.appendChild(el);\n        }\n    },\n    'DOM子要素削除': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (pa, el, sys) {\n            pa = sys.__query(pa, 'DOM子要素削除', false);\n            el = sys.__query(el, 'DOM子要素削除', false);\n            pa.removeChild(el);\n        }\n    },\n    '注目': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, '注目', true);\n            if (dom && dom.focus) {\n                dom.focus();\n            }\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @DOM操作とイベント\n    '対象イベント': { type: 'const', value: '' }, // @たいしょういべんと\n    'DOMイベント追加': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, event, funcStr, sys) {\n            sys.__addEvent(dom, event, funcStr, null);\n        },\n        return_none: true\n    },\n    'DOMイベント削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (dom, event, funcStr, sys) {\n            sys.__removeEvent(dom, event, funcStr);\n        },\n        return_none: true\n    },\n    'DOMイベント発火時': {\n        type: 'func',\n        josi: [['で'], ['の'], ['が']],\n        pure: true,\n        fn: function (callback, dom, event, sys) {\n            sys.__addEvent(dom, event, callback, null);\n        },\n        return_none: true\n    },\n    'DOMイベント処理停止': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (event, sys) {\n            event.preventDefault();\n        },\n        return_none: true\n    },\n    'クリック時': {\n        type: 'func',\n        josi: [['で'], ['を']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'click', func, null);\n        },\n        return_none: true\n    },\n    '読込時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'load', func, null);\n        },\n        return_none: true\n    },\n    'フォーム送信時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'submit', func, null);\n        },\n        return_none: true\n    },\n    '押キー': { type: 'const', value: '' }, // @おされたきー\n    'キー押時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keydown', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'キー離時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keyup', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'キータイピング時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keypress', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'マウスX': { type: 'const', value: 0 }, // @まうすX\n    'マウスY': { type: 'const', value: 0 }, // @まうすY\n    'マウス押時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mousedown', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'マウス移動時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mousemove', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'マウス離時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mouseup', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'タッチX': { type: 'const', value: 0 }, // @たっちX\n    'タッチY': { type: 'const', value: 0 }, // @たっちY\n    'タッチ配列': { type: 'const', value: [] }, // @たっちはいれつ\n    'タッチイベント計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (e, sys) {\n            return sys.__touchHandler(e, sys);\n        }\n    },\n    'タッチ開始時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchstart', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチ時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchmove', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチ終了時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchend', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチキャンセル時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: true,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchcancel', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    '画面更新時実行': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (func, sys) {\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\n            if (!func) {\n                throw new Error('『画面更新時実行』で関数の取得に失敗しました。');\n            }\n            sys.__requestAnimationFrameLastId = window.requestAnimationFrame(func);\n            return sys.__requestAnimationFrameLastId;\n        }\n    },\n    '画面更新処理取消': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (id, sys) {\n            window.cancelAnimationFrame(id);\n            if (sys.__requestAnimationFrameLastId === id) {\n                sys.__requestAnimationFrameLastId = 0;\n            }\n        },\n        return_none: true\n    }\n};\n","export default {\n    // @DOM部品操作\n    'DOM親要素': { type: 'const', value: '' }, // @DOMおやようそ\n    'DOM部品個数': { type: 'const', value: 0 }, // @DOMせいせいこすう\n    'DOM部品オプション': { type: 'const', value: { '自動改行': false, 'テーブル背景色': ['#AA4040', '#ffffff', '#fff0f0'] } }, // @DOMぶひんおぷしょん\n    'DOM親要素設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (el, sys) {\n            if (typeof el === 'string') {\n                el = document.querySelector(el) || document.getElementById(el);\n            }\n            sys.__setSysVar('DOM親要素', el);\n            return el;\n        }\n    },\n    'DOM親部品設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (el, sys) {\n            return sys.__exec('DOM親要素設定', [el, sys]);\n        }\n    },\n    'DOMスキン': { type: 'const', value: '' }, // @DOMすきん\n    'DOMスキン辞書': { type: 'const', value: {} }, // @DOMすきんじしょ\n    'DOMスキン設定': {\n        type: 'func',\n        josi: [['を', 'に', 'の']],\n        pure: true,\n        fn: function (skin, sys) {\n            sys.__setSysVar('DOMスキン', skin);\n        },\n        return_none: true\n    },\n    'DOM部品作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (elm, sys) {\n            const parent = sys.__getSysVar('DOM親要素');\n            const btn = (typeof (elm) === 'string') ? document.createElement(elm) : elm;\n            btn.id = 'nadesi-dom-' + sys.__getSysVar('DOM部品個数');\n            // スキン適用\n            const func = sys.__getSysVar('DOMスキン辞書')[sys.__getSysVar('DOMスキン')];\n            if (typeof (func) === 'function') {\n                func(elm, btn, sys);\n            }\n            // DOM追加\n            parent.appendChild(btn);\n            sys.__setSysVar('DOM部品個数', sys.__getSysVar('DOM部品個数', 0) + 1);\n            // オプションを適用\n            const opt = sys.__getSysVar('DOM部品オプション');\n            if (opt['自動改行']) {\n                parent.appendChild(document.createElement('br'));\n            }\n            return btn;\n        }\n    },\n    'ボタン作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (label, sys) {\n            const btn = sys.__exec('DOM部品作成', ['button', sys]);\n            btn.innerHTML = label;\n            return btn;\n        }\n    },\n    'エディタ作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (text, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'text';\n            inp.value = text;\n            return inp;\n        }\n    },\n    'テキストエリア作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (text, sys) {\n            const te = sys.__exec('DOM部品作成', ['textarea', sys]);\n            te.value = text;\n            return te;\n        }\n    },\n    'ラベル作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (text, sys) {\n            const lbl = sys.__exec('DOM部品作成', ['span', sys]);\n            lbl.innerHTML = text;\n            return lbl;\n        }\n    },\n    'キャンバス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (size, sys) {\n            const cv = sys.__exec('DOM部品作成', ['canvas', sys]);\n            cv.width = size[0];\n            cv.height = size[1];\n            cv.style.width = size[0];\n            cv.style.height = size[1];\n            // 描画中キャンバスを移動する\n            sys.__exec('描画開始', [cv, sys]);\n            return cv;\n        }\n    },\n    '画像作成': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const img = sys.__exec('DOM部品作成', ['img', sys]);\n            img.src = url;\n            return img;\n        }\n    },\n    '改行作成': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const br = sys.__exec('DOM部品作成', ['br', sys]);\n            return br;\n        }\n    },\n    'チェックボックス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (text, sys) {\n            // チェックボックスは、<span><input><label></span>で成り立つように構築\n            const span = document.createElement('span');\n            const inp = document.createElement('input');\n            inp.type = 'checkbox';\n            inp.id = 'nadesi-dom-' + sys.__getSysVar('DOM部品個数', 0);\n            sys.__setSysVar('DOM部品個数', sys.__getSysVar('DOM部品個数', 0) + 1);\n            const label = document.createElement('label');\n            label.innerHTML = text;\n            label.htmlFor = inp.id;\n            span.appendChild(inp);\n            span.appendChild(label);\n            // 親部品に追加\n            sys.__exec('DOM部品作成', [span, sys]);\n            return inp;\n        }\n    },\n    'セレクトボックス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (options, sys) {\n            const dom = document.createElement('select');\n            for (let i = 0; i < options.length; i++) {\n                const item = document.createElement('option');\n                item.value = options[i];\n                item.appendChild(document.createTextNode(options[i]));\n                dom.appendChild(item);\n            }\n            // 親部品に追加\n            sys.__exec('DOM部品作成', [dom, sys]);\n            return dom;\n        }\n    },\n    'セレクトボックスアイテム設定': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (options, dom, sys) {\n            if (typeof dom === 'string') {\n                dom = document.querySelector(dom);\n            }\n            // 既存のoptionsをクリア\n            dom.options.length = 0;\n            // アイテムを追加\n            for (let i = 0; i < options.length; i++) {\n                const item = document.createElement('option');\n                item.value = options[i];\n                item.appendChild(document.createTextNode(options[i]));\n                dom.appendChild(item);\n            }\n        },\n        return_none: true\n    },\n    '色選択ボックス作成': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'color';\n            return inp;\n        }\n    },\n    '日付選択ボックス作成': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'date';\n            return inp;\n        }\n    },\n    'パスワード入力エディタ作成': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'password';\n            inp.value = s;\n            return inp;\n        }\n    },\n    '値指定バー作成': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (range, sys) {\n            if (!(range instanceof Array) || range.length < 2) {\n                range = [0, 100, 50];\n            }\n            if (range.length <= 2) { // 3つ目を省略したとき\n                range.push(Math.floor((range[1] - range[0]) / 2));\n            }\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'range';\n            inp.min = range[0];\n            inp.max = range[1];\n            inp.value = range[2];\n            return inp;\n        }\n    },\n    '送信ボタン作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (label, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'submit';\n            inp.value = label;\n            return inp;\n        }\n    },\n    'フォーム作成': {\n        type: 'func',\n        josi: [['で', 'の'], ['を']],\n        pure: true,\n        fn: function (obj, s, sys) {\n            const frm = sys.__exec('DOM部品作成', ['form', sys]);\n            // 可能ならformにobjの値を移し替える\n            if (obj instanceof Object) {\n                for (const key in obj) {\n                    if (frm[key]) {\n                        frm[key] = obj[key];\n                    }\n                }\n            }\n            // 入力項目をtableで作る\n            const rows = s.split('\\n');\n            const table = document.createElement('table');\n            for (const rowIndex in rows) {\n                let row = '' + (rows[rowIndex]);\n                if (row === '') {\n                    continue;\n                }\n                if (row.indexOf('=') < 0) {\n                    row += '=';\n                }\n                const cols = row.split('=');\n                const key = cols[0];\n                const val = cols[1];\n                // key\n                const th = document.createElement('th');\n                th.innerHTML = sys.__tohtmlQ(key);\n                // val\n                const td = document.createElement('td');\n                if (val.substring(0, 2) === '?(') {\n                    // select box\n                    const it = val.substring(2) + ')';\n                    const ita = it.split(')');\n                    const its = ita[0];\n                    const def = ita[1];\n                    const items = its.split('|');\n                    const select = document.createElement('select');\n                    select.name = key;\n                    for (const it of items) {\n                        const option = document.createElement('option');\n                        option.value = it;\n                        option.text = it;\n                        select.appendChild(option);\n                    }\n                    const idx = items.indexOf(def);\n                    if (idx >= 0) {\n                        select.selectedIndex = idx;\n                    }\n                    td.appendChild(select);\n                }\n                else {\n                    // input element\n                    const inp = document.createElement('input');\n                    td.appendChild(inp);\n                    inp.id = 'nako3form_' + key;\n                    if (val === '?送信' || val === '?submit') {\n                        inp.type = 'submit';\n                        inp.value = val.substring(1);\n                        if (key !== '') {\n                            inp.name = key;\n                        }\n                    }\n                    else if (val.substring(0, 2) === '?c') {\n                        inp.type = 'color';\n                        inp.value = val.substring(2);\n                        inp.name = key;\n                    }\n                    else {\n                        inp.type = 'text';\n                        inp.value = val;\n                        inp.name = key;\n                    }\n                }\n                const tr = document.createElement('tr');\n                tr.appendChild(th);\n                tr.appendChild(td);\n                table.appendChild(tr);\n            }\n            frm.appendChild(table);\n            return frm;\n        }\n    },\n    'フォーム入力一括取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom) {\n            if (typeof (dom) === 'string') {\n                dom = document.querySelector(dom);\n            }\n            const res = {};\n            const getChildren = (pa) => {\n                if (!pa || !pa.childNodes) {\n                    return;\n                }\n                for (let i = 0; i < pa.childNodes.length; i++) {\n                    const el = pa.childNodes[i];\n                    if (!el.tagName) {\n                        return;\n                    }\n                    const tag = el.tagName.toLowerCase();\n                    if (tag === 'input') {\n                        if (el.type === 'checkbox') {\n                            res[el.name] = el.checked ? el.value : '';\n                            continue;\n                        }\n                        res[el.name] = el.value;\n                        continue;\n                    }\n                    else if (tag === 'textarea') {\n                        res[el.name] = el.value;\n                    }\n                    else if (tag === 'select') {\n                        if (el.selectedIndex >= 0) {\n                            res[el.name] = el.options[el.selectedIndex].value;\n                        }\n                        else {\n                            res[el.name] = '';\n                        }\n                    }\n                    getChildren(el);\n                }\n            };\n            getChildren(dom);\n            return res;\n        }\n    },\n    'テーブル作成': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (aa, sys) {\n            if (typeof (aa) === 'string') {\n                const rr = [];\n                const rows = aa.split('\\n');\n                for (const row of rows) {\n                    rr.push(row.split(','));\n                }\n                aa = rr;\n            }\n            const bgColor = JSON.parse(JSON.stringify(sys.__getSysVar('DOM部品オプション')['テーブル背景色']));\n            for (let i = 0; i < 3; i++) {\n                bgColor.push('');\n            }\n            const bgHead = bgColor.shift();\n            const table = sys.__exec('DOM部品作成', ['table', sys]);\n            for (let i = 0; i < aa.length; i++) {\n                const rowNo = i;\n                const row = aa[rowNo];\n                const tr = document.createElement('tr');\n                for (let col of row) {\n                    col = '' + col;\n                    const td = document.createElement((rowNo === 0) ? 'th' : 'td');\n                    td.innerHTML = sys.__tohtml(col);\n                    // 色指定\n                    if (bgHead !== '') {\n                        td.style.backgroundColor = (rowNo === 0) ? bgHead : bgColor[rowNo % 2];\n                        td.style.color = (rowNo === 0) ? 'white' : 'black';\n                    }\n                    if (col.match(/^(\\+|-)?\\d+(\\.\\d+)?$/)) { // number?\n                        td.style.textAlign = 'right';\n                    }\n                    tr.appendChild(td);\n                }\n                table.appendChild(tr);\n            }\n            return table;\n        }\n    },\n    'マーメイド作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (src, sys) {\n            console.log('aaa');\n            const div = sys.__exec('DOM部品作成', ['div', sys]);\n            div.classList.add('mermaid');\n            div.innerHTML = src;\n            // ライブラリを読み込む\n            if (typeof sys.__v0.WINDOW.mermaid === 'undefined') {\n                console.log('try to load mermaid');\n                await sys.__loadScript('https://cdn.jsdelivr.net/npm/mermaid@10.5.0/dist/mermaid.min.js');\n                console.log('loaded mermaid');\n            }\n            await sys.__v0.WINDOW.mermaid.run();\n            return div;\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @HTML操作\n    'HTML変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (text) {\n            return String(text)\n                .replace(/&/g, '&amp;')\n                .replace(/>/g, '&gt;')\n                .replace(/</g, '&lt;');\n        }\n    },\n    // @クリップボード\n    'クリップボード設定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (text) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                await navigator.clipboard.writeText(text);\n                return;\n            }\n            // Clipboard APIをサポートしていない場合\n            const tmp = document.createElement('div');\n            const pre = document.createElement('pre');\n            pre.style.webkitUserSelect = 'auto';\n            pre.style.userSelect = 'auto';\n            tmp.appendChild(pre).textContent = text;\n            // 画面外へ表示する\n            tmp.style.position = 'fixed';\n            tmp.right = '200%';\n            document.body.appendChild(tmp);\n            document.getSelection().selectAllChildren(tmp);\n            document.execCommand('copy');\n            document.body.removeChild(tmp);\n        },\n        return_none: true\n    },\n    'クリップボード取得時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (f, sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                if (typeof (f) === 'string') {\n                    f = sys.__findFunc(f, 'クリップボード取得時');\n                }\n                const pm = navigator.clipboard.readText();\n                pm.then(text => {\n                    sys.__setSysVar('対象', text);\n                    f(sys);\n                });\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    },\n    'クリップボード取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: async function (sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                const result = await navigator.clipboard.readText();\n                return result;\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ローカルストレージ\n    '保存': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (v, key, sys) {\n            sys.__exec('ローカルストレージ保存', [v, key, sys]);\n        },\n        return_none: true\n    },\n    '開': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: true,\n        fn: function (key, sys) {\n            return sys.__exec('ローカルストレージ読', [key, sys]);\n        },\n        return_none: false\n    },\n    '読': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: true,\n        fn: function (key, sys) {\n            return sys.__exec('ローカルストレージ読', [key, sys]);\n        },\n        return_none: false\n    },\n    '存在': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (key) {\n            const s = window.localStorage.getItem(key);\n            return (s !== null);\n        },\n        return_none: false\n    },\n    'ローカルストレージ保存': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (v, key, sys) {\n            let body = v;\n            if (sys.__getSysVar('保存オプション')) {\n                if ((sys.__getSysVar('保存オプション').indexOf('json') >= 0)) {\n                    body = JSON.stringify(body);\n                }\n                else if (sys.__getSysVar('保存オプション') === 'raw') {\n                    // なにもしない\n                }\n            }\n            window.localStorage[key] = body;\n        },\n        return_none: true\n    },\n    'ローカルストレージ読': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: true,\n        fn: function (key, sys) {\n            const v = window.localStorage[key];\n            if (sys.__getSysVar('保存オプション') && (sys.__getSysVar('保存オプション').indexOf('json') >= 0)) {\n                try {\n                    return JSON.parse(v);\n                }\n                catch (e) {\n                    console.log('ローカルストレージ『' + key + '』の読み込みに失敗');\n                }\n            }\n            return v;\n        },\n        return_none: false\n    },\n    'ローカルストレージキー列挙': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const keys = [];\n            for (const key in window.localStorage) {\n                keys.push(key);\n            }\n            return keys;\n        },\n        return_none: false\n    },\n    'ローカルストレージキー削除': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (key) {\n            window.localStorage.removeItem(key);\n        },\n        return_none: true\n    },\n    'ローカルストレージ全削除': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            window.localStorage.clear();\n        },\n        return_none: true\n    },\n    'ローカルストレージ有効確認': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (typeof window.localStorage !== 'undefined');\n        },\n        return_none: false\n    },\n    '保存オプション': { type: 'const', value: 'json' }, // @ ほぞんおぷしょん\n    '保存オプション設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            v = v.toUpperCase(v);\n            sys.__setSysVar('保存オプション', v);\n        },\n        return_none: true\n    }\n};\n","/* eslint-disable quote-props */\nconst errMsgCanvasInit = '描画を行うためには、HTML内にcanvasを配置し、idを振って『描画開始』命令に指定します。';\nexport default {\n    // @描画\n    '描画開始': {\n        type: 'func',\n        josi: [['の', 'へ', 'で']],\n        pure: true,\n        fn: function (cv, sys) {\n            if (typeof cv === 'string') {\n                cv = document.querySelector(cv) || document.getElementById(cv);\n            }\n            if (!cv) {\n                throw new Error('『描画開始』でCanvasを取得できませんでした。');\n            }\n            sys.__canvas = cv;\n            sys.__ctx = cv.getContext('2d');\n            sys.__fillStyle = 'black';\n            sys.__strokeStyle = 'black';\n            sys.__setSysVar('描画中キャンバス', cv);\n            sys.__setSysVar('描画中コンテキスト', sys.__ctx);\n        },\n        return_none: true\n    },\n    '描画中キャンバス': { type: 'const', value: null }, // @ びょうがちゅうきゃんばす\n    '描画中コンテキスト': { type: 'const', value: null }, // @ びょうがちゅうこんてきすと\n    'キャンバス状態保存': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.save();\n        },\n        return_none: true\n    },\n    'キャンバス状態復元': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.restore();\n        },\n        return_none: true\n    },\n    '線色設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__strokeStyle = v;\n            if (v !== '') {\n                sys.__ctx.strokeStyle = v;\n            }\n        },\n        return_none: true\n    },\n    '塗色設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__fillStyle = v;\n            if (v !== '') {\n                sys.__ctx.fillStyle = v;\n            }\n        },\n        return_none: true\n    },\n    '線描画': {\n        type: 'func',\n        josi: [['から'], ['へ', 'まで']],\n        pure: true,\n        fn: function (a, b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.moveTo(a[0], a[1]);\n            sys.__ctx.lineTo(b[0], b[1]);\n            sys.__ctx.stroke();\n        },\n        return_none: true\n    },\n    '線太設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.lineWidth = v;\n        },\n        return_none: true\n    },\n    '四角描画': {\n        type: 'func',\n        josi: [['の', 'へ', 'に']],\n        pure: true,\n        fn: function (b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.rect(b[0], b[1], b[2], b[3]);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '全描画クリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.clearRect(0, 0, sys.__canvas.width, sys.__canvas.height);\n        },\n        return_none: true\n    },\n    '描画クリア': {\n        type: 'func',\n        josi: [['の', 'へ', 'に']],\n        pure: true,\n        fn: function (b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (!(b instanceof Array)) {\n                b = [];\n            }\n            if (b.length === 0) {\n                b = [0, 0, sys.__canvas.width, sys.__canvas.height];\n            }\n            else if (b.length <= 2) {\n                b.unshift(0);\n                b.unshift(0);\n            }\n            sys.__ctx.clearRect(b[0], b[1], b[2], b[3]);\n        },\n        return_none: true\n    },\n    '円描画': {\n        type: 'func',\n        josi: [['へ', 'に'], ['の']],\n        pure: true,\n        fn: function (xy, r, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.arc(xy[0], xy[1], r, 0, 2 * Math.PI, false);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '楕円描画': {\n        type: 'func',\n        josi: [['へ', 'に', 'の']],\n        pure: true,\n        fn: function (args, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (!args) {\n                throw new Error('楕円描画の引数配列が無効です');\n            }\n            if (args.length < 4) {\n                throw new Error('楕円描画の引数配列が不足しています');\n            }\n            if (args.length < 7) {\n                if (!args[4]) {\n                    args[4] = 0;\n                }\n                if (!args[5]) {\n                    args[5] = 0;\n                }\n                if (!args[6]) {\n                    args[6] = Math.PI * 2;\n                }\n                if (!args[7]) {\n                    args[7] = true;\n                }\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.ellipse(...args);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '多角形描画': {\n        type: 'func',\n        josi: [['で', 'の', 'を']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            const p = a[0];\n            sys.__ctx.moveTo(p[0], p[1]);\n            for (let i = 1; i < a.length; i++) {\n                const t = a[i];\n                sys.__ctx.lineTo(t[0], t[1]);\n            }\n            sys.__ctx.lineTo(p[0], p[1]);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '画像読': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            return img;\n        }\n    },\n    '画像読待': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url) {\n            return new Promise((resolve, reject) => {\n                const img = new window.Image();\n                img.src = url;\n                img.crossOrigin = 'Anonymous';\n                img.onload = () => { resolve(img); };\n                img.onerror = () => {\n                    reject(new Error(`『画像読待』で読込みエラー。URL=『${url}』`));\n                };\n            });\n        }\n    },\n    '画像逐次読': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            if (sys.resolve === undefined) {\n                throw new Error('『画像逐次読』は『逐次実行』構文で使ってください。');\n            }\n            sys.resolveCount++;\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            img.onload = () => {\n                sys.__setSysVar('対象', img);\n                sys.resolve();\n            };\n            img.onerror = () => {\n                sys.__setSysVar('対象', '');\n                sys.reject();\n            };\n            return img;\n        }\n    },\n    '画像読時': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: true,\n        fn: function (f, url, sys) {\n            // 関数オブジェクトを得る\n            const func = sys.__findVar(f, null); // 文字列指定なら関数に変換\n            // 画像を読む\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            img.onload = () => {\n                sys.__setSysVar('対象', img);\n                func(sys);\n            };\n            img.onerror = () => {\n                sys.__setSysVar('対象', '');\n                func(sys);\n            };\n        },\n        return_none: true\n    },\n    '画像描画': {\n        type: 'func',\n        josi: [['の', 'を'], ['へ', 'に']],\n        pure: true,\n        fn: function (img, xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            const drawFunc = (im, ctx) => {\n                if (xy.length === 2) {\n                    ctx.drawImage(im, xy[0], xy[1]);\n                }\n                else if (xy.length === 4) {\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3]);\n                }\n                else if (xy.length === 8) {\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3], xy[4], xy[5], xy[6], xy[7]);\n                }\n                else {\n                    throw new Error('『画像描画』の第二引数の配列要素は2,4,8個のいずれかです。');\n                }\n            };\n            if (typeof img === 'string') {\n                const image = new window.Image();\n                image.src = img;\n                image.crossOrigin = 'Anonymous';\n                image.onload = () => {\n                    drawFunc(image, sys.__ctx);\n                };\n                return image;\n            }\n            else {\n                drawFunc(img, sys.__ctx);\n                return img;\n            }\n        },\n        return_none: false\n    },\n    '画像部分描画': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['へ', 'に']],\n        pure: true,\n        fn: function (img, sxy, dxy, sys) {\n            const errArgLen = '『画像部分描画』に使える引数は画像と、描画する座標へ2つか、' +\n                '描画する座標とその位置の4つか、使用する座標と使用する位置と描画する座標と大きさの8つだけです。';\n            if (img && sxy) {\n                if (!Array.isArray(sxy) && Array.isArray(img)) { // 逆になっていれば入れ替える\n                    // eslint-disable-next-line no-proto\n                    if (typeof sxy === 'string' || String(sxy.__proto__) === '[object HTMLImageElement]') {\n                        const sw = img;\n                        img = sxy;\n                        sxy = sw;\n                    }\n                }\n            }\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            const drawFunc = (im, ctx) => {\n                if (!dxy) {\n                    if (!sxy) {\n                        ctx.drawImage(im);\n                    }\n                    else if (sxy.length >= 2) { // もしsxyがあるのにdxyがなかったらdxyを代わりにする\n                        dxy = sxy;\n                        sxy = undefined;\n                    }\n                }\n                if (dxy.length === 2) {\n                    ctx.drawImage(im, dxy[0], dxy[1]);\n                }\n                else if (dxy.length === 4) {\n                    if (!sxy) {\n                        ctx.drawImage(im, dxy[0], dxy[1], dxy[2], dxy[3]);\n                    }\n                    else if (sxy.length === 4) {\n                        ctx.drawImage(im, sxy[0], sxy[1], sxy[2], sxy[3], dxy[0], dxy[1], dxy[2], dxy[3]);\n                    }\n                    else {\n                        throw new Error(errArgLen);\n                    }\n                }\n                else {\n                    throw new Error(errArgLen);\n                }\n            };\n            if (typeof img === 'string') {\n                const image = new window.Image();\n                image.src = img;\n                image.crossOrigin = 'Anonymous';\n                image.onload = () => {\n                    drawFunc(image, sys.__ctx);\n                };\n                return image;\n            }\n            else {\n                drawFunc(img, sys.__ctx);\n                return img;\n            }\n        },\n        return_none: false\n    },\n    '描画フォント設定': {\n        type: 'func',\n        josi: [['を', 'の', 'で', 'に']],\n        pure: true,\n        fn: function (n, sys) {\n            // 数値だけならフォントサイズのみの指定\n            if (typeof n === 'number') {\n                n = n + 'px sans-serif';\n            }\n            // ピクセル数のみの指定なら適当にフォントを足す\n            if (/^[0-9]+(px|em)$/.test(n)) {\n                n = n + ' sans-serif';\n            }\n            sys.__ctx.font = n;\n        },\n        return_none: true\n    },\n    '文字描画': {\n        type: 'func',\n        josi: [['へ', 'に'], ['の', 'を']],\n        pure: true,\n        fn: function (xy, s, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.fillText(s, xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '文字描画幅取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            return sys.__ctx.measureText(s);\n        },\n        return_none: true\n    },\n    '描画起点設定': {\n        type: 'func',\n        josi: [['へ', 'に']],\n        pure: true,\n        fn: function (xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.translate(xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '描画回転': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.rotate(a * Math.PI / 180);\n        },\n        return_none: true\n    },\n    '描画拡大': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.scale(xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '描画変換マトリクス設定': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.setTransform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\n        },\n        return_none: true\n    },\n    '描画変換マトリクス追加': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.transform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\n        },\n        return_none: true\n    },\n    '描画データURL変換': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const cv = sys.__getSysVar('描画中キャンバス');\n            const url = cv.toDataURL('image/png');\n            return url;\n        }\n    },\n    '描画データBLOB変換': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function (sys) {\n            return new Promise((resolve, reject) => {\n                const cv = sys.__getSysVar('描画中キャンバス');\n                cv.toBlob((result) => { resolve(result); }, 'image/png');\n            });\n        }\n    },\n    '描画ダウンロードリンク作成': {\n        type: 'func',\n        josi: [['へ', 'に']],\n        pure: true,\n        fn: function (dom, sys) {\n            if (typeof dom === 'string') {\n                dom = document.querySelector(dom);\n            }\n            if (!dom) {\n                throw new Error('『描画ダウンロードリンク作成』でDOMが見当たりません。');\n            }\n            const cv = sys.__getSysVar('描画中キャンバス');\n            if (!cv) {\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\n            }\n            dom.href = cv.toDataURL('image/png');\n            dom.download = 'canvas.png';\n        },\n        return_none: true\n    },\n    '描画ダウンロード': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const cv = sys.__getSysVar('描画中キャンバス');\n            if (!cv) {\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\n            }\n            const a = document.createElement('a');\n            a.href = cv.toDataURL('image/png');\n            a.download = 'canvas.png';\n            a.click();\n            return true;\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @位置情報\n    '位置情報取得時': {\n        type: 'func',\n        josi: [['の', 'に', 'へ']],\n        pure: true,\n        fn: function (func, sys) {\n            let cb = func;\n            if (typeof cb === 'string') {\n                cb = sys.__findVar(cb);\n            }\n            if (!('geolocation' in navigator)) {\n                throw new Error('関数『位置情報取得時』は使えません。');\n            }\n            navigator.geolocation.getCurrentPosition((position) => {\n                sys.__setSysVar('対象', [\n                    position.coords.latitude,\n                    position.coords.longitude\n                ]);\n                cb(position);\n            });\n        },\n        return_none: true\n    },\n    '位置情報監視時': {\n        type: 'func',\n        josi: [['の', 'に', 'へ']],\n        pure: true,\n        fn: function (func, sys) {\n            let cb = func;\n            if (typeof cb === 'string') {\n                cb = sys.__findVar(cb);\n            }\n            if (!('geolocation' in navigator)) {\n                throw new Error('関数『位置情報監視時』は使えません。');\n            }\n            return navigator.geolocation.watchPosition((position) => {\n                sys.__setSysVar('対象', [\n                    position.coords.latitude,\n                    position.coords.longitude\n                ]);\n                cb(position);\n            });\n        },\n        return_none: false\n    },\n    '位置情報監視停止': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (wid, sys) {\n            navigator.geolocation.clearWatch(wid);\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @音声合成\n    '話': {\n        type: 'func',\n        josi: [['と', 'を', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n            window.speechSynthesis.speak(msg);\n            console.log('#話す:', s);\n            return s;\n        }\n    },\n    '話終': {\n        type: 'func',\n        josi: [['と', 'を', 'の']],\n        pure: true,\n        asyncFn: true,\n        fn: function (s, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n                    msg.onend = () => { resolve(); };\n                    window.speechSynthesis.speak(msg);\n                    console.log('#話す:', s);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        }\n    },\n    '話終時': {\n        type: 'func',\n        josi: [['で'], ['と', 'を', 'の']],\n        pure: true,\n        fn: function (callback, s, sys) {\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n            msg.onend = (e) => {\n                console.log('#話終時');\n                sys.__setSysVar('対象イベント', e);\n                callback(sys);\n            };\n            window.speechSynthesis.speak(msg);\n            console.log('#話す:', s);\n            return s;\n        }\n    },\n    '音声合成発話オブジェクト取得': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s, sys) {\n            // 話者の特定\n            let voice = sys.__getSysVar('話:話者');\n            if (!voice) {\n                voice = sys.__exec('話者設定', ['ja', sys]);\n            }\n            // インスタンス作成\n            const msg = new SpeechSynthesisUtterance(s);\n            msg.voice = voice;\n            if (voice) {\n                msg.lang = voice.lang;\n            } // 必ず話者の特定に成功している訳ではない\n            msg.rate = sys.__getSysVar('話者速度');\n            msg.pitch = sys.__getSysVar('話者声高');\n            msg.volume = sys.__getSysVar('話者音量');\n            return msg;\n        }\n    },\n    '話者一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // 対応している？\n            if (!('SpeechSynthesisUtterance' in window)) {\n                throw new Error('音声合成APIに対応していません');\n            }\n            return window.speechSynthesis.getVoices();\n        }\n    },\n    '話者設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            // 対応している？\n            if (!('SpeechSynthesisUtterance' in window)) {\n                throw new Error('音声合成APIに対応していません');\n            }\n            // 文字列で値を指定\n            if (typeof v === 'string') {\n                // 話者を特定する\n                const voices = window.speechSynthesis.getVoices();\n                for (const i of voices) {\n                    if (i.lang.indexOf(v) >= 0 || i.name === v) {\n                        const msg = new SpeechSynthesisUtterance();\n                        msg.voice = i;\n                        msg.lang = i.lang;\n                        sys.__setSysVar('話:話者', i);\n                        console.log('#話者:', i.name);\n                        return i;\n                    }\n                }\n            }\n            // 話者一覧取得で得たオブジェクトを直接指定した場合\n            if (typeof v === 'object') {\n                sys.__setSysVar('話:話者', v);\n                return v;\n            }\n            return undefined;\n        }\n    },\n    '話者速度': { type: 'const', value: 1.0 }, // @わしゃそくど\n    '話者声高': { type: 'const', value: 1.0 }, // @わしゃこわだか\n    '話者音量': { type: 'const', value: 1.0 }, // @わしゃこおんりょう\n    '話者詳細設定': {\n        type: 'func',\n        josi: [['で', 'に', 'へ']],\n        pure: true,\n        fn: function (obj, sys) {\n            const changeFunc = (key, v) => {\n                if (key === '速度') {\n                    sys.__setSysVar('話者速度', v);\n                }\n                if (key === '声高' || key === 'ピッチ') {\n                    sys.__setSysVar('話者声高', v);\n                }\n                if (key === '音量') {\n                    sys.__setSysVar('話者音量', v);\n                }\n            };\n            // 一括変更\n            for (const key in obj) {\n                const v = obj[key];\n                changeFunc(key, v);\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @WebSocket\n    'WS接続完了時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONOPEN', callback);\n        },\n        return_none: true\n    },\n    'WS受信時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONMESSAGE', callback);\n        },\n        return_none: true\n    },\n    'WSエラー発生時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__setSysVar('WS:ONERROR', callback);\n        },\n        return_none: true\n    },\n    'WS接続': {\n        type: 'func',\n        josi: [['に', 'へ', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = new WebSocket(s);\n            ws.onopen = () => {\n                const cbOpen = sys.__getSysVar('WS:ONOPEN');\n                if (cbOpen) {\n                    cbOpen(sys);\n                }\n            };\n            ws.onerror = (err) => {\n                const cbError = sys.__getSysVar('WS:ONERROR');\n                if (cbError) {\n                    cbError(err, sys);\n                }\n                console.log('WSエラー', err);\n            };\n            ws.onmessage = (e) => {\n                sys.__setSysVar('対象', e.data);\n                const cbMsg = sys.__getSysVar('WS:ONMESSAGE');\n                if (cbMsg) {\n                    cbMsg(sys);\n                }\n            };\n            sys.__setSysVar('WS:SOCKET', ws);\n            return ws;\n        }\n    },\n    'WS送信': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = sys.__getSysVar('WS:SOCKET');\n            ws.send(s);\n        }\n    },\n    'WS切断': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const ws = sys.__getSysVar('WS:SOCKET');\n            ws.close();\n        }\n    }\n};\n","/* eslint-disable quote-props */\nexport default {\n    // @オーディオ\n    'オーディオ開': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (url, sys) {\n            const a = new Audio();\n            a.src = url;\n            return a;\n        },\n        return_none: false\n    },\n    'オーディオ再生': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.loop = false;\n            obj.play();\n        },\n        return_none: true\n    },\n    'オーディオループ再生': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.loop = true;\n            obj.play();\n        },\n        return_none: true\n    },\n    'オーディオ停止': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.pause();\n            obj.currentTime = 0; // 暫定\n            // オーディオ停止で再生位置が0に戻らない問題(#715)\n            setTimeout(() => {\n                obj.currentTime = 0; // しっかりと設定\n            }, 10);\n        },\n        return_none: true\n    },\n    'オーディオ一時停止': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ一時停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.pause();\n        },\n        return_none: true\n    },\n    'オーディオ音量取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.volume;\n        }\n    },\n    'オーディオ音量設定': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (obj, v, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.volume = v;\n        },\n        return_none: true\n    },\n    'オーディオ長取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.duration;\n        }\n    },\n    'オーディオ再生位置取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生位置取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.currentTime;\n        }\n    },\n    'オーディオ再生位置設定': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (obj, v, sys) {\n            if (!obj) {\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.currentTime = v;\n        },\n        return_none: true\n    }\n};\n","// plugin_browser\n// @ts-nocheck\nimport PartBrowserColor from './plugin_browser_color.mjs';\nimport PartBrowserSystem from './plugin_browser_system.mjs';\nimport PartBrowserDialog from './plugin_browser_dialog.mjs';\nimport PartBrowserLocation from './plugin_browser_location.mjs';\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\nimport PartBrowserDomBasic from './plugin_browser_dom_basic.mjs';\nimport PartBrowserDomEvent from './plugin_browser_dom_event.mjs';\nimport PartBrowserDomParts from './plugin_browser_dom_parts.mjs';\nimport PartBrowserHtml from './plugin_browser_html.mjs';\nimport PartBrowserStorage from './plugin_browser_storage.mjs';\nimport PartBrowserCanvas from './plugin_browser_canvas.mjs';\nimport PartBrowserGeolocation from './plugin_browser_geolocation.mjs';\nimport PartBrowserSpeech from './plugin_browser_speech.mjs';\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\nimport PartBrowserAudio from './plugin_browser_audio.mjs';\nimport PartBrowserHotkey from './plugin_browser_hotkey.mjs';\nimport PartBrowserChart from './plugin_browser_chart.mjs';\nimport PartBrowserCrypto from './plugin_browser_crypto.mjs';\nconst BrowserParts = [\n    PartBrowserColor,\n    PartBrowserSystem,\n    PartBrowserDialog,\n    PartBrowserLocation,\n    PartBrowserAjax,\n    PartBrowserDomBasic,\n    PartBrowserDomEvent,\n    PartBrowserDomParts,\n    PartBrowserHtml,\n    PartBrowserStorage,\n    PartBrowserCanvas,\n    PartBrowserGeolocation,\n    PartBrowserSpeech,\n    PartBrowserWebsocket,\n    PartBrowserAudio,\n    PartBrowserHotkey,\n    PartBrowserChart,\n    PartBrowserCrypto\n];\nconst PluginBrowser = {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_browser', // プラグインの名前\n            description: 'ブラウザ用のプラグイン', // 説明\n            pluginVersion: '3.6.0', // プラグインのバージョン\n            nakoRuntime: ['wnako'], // 対象ランタイム\n            nakoVersion: '3.6.0' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            /* eslint no-global-assign: 0 */\n            const doc = (typeof document === 'undefined') ? { 'body': {} } : document;\n            const win = (typeof window === 'undefined') ? { 'location': { 'href': 'http://localhost/' } } : window;\n            const nav = (typeof navigator === 'undefined') ? {} : navigator;\n            const loc = (typeof win.location === 'undefined') ? { 'href': 'http://localhost/' } : win.location;\n            // 定数を初期化\n            sys.__setSysVar('AJAX:ONERROR', (err) => { console.log(err); });\n            // オブジェクトを初期化\n            sys.__setSysVar('DOCUMENT', doc);\n            sys.__setSysVar('WINDOW', win);\n            sys.__setSysVar('NAVIGATOR', nav);\n            sys.__setSysVar('DOM親要素', doc.body);\n            sys.__setSysVar('ブラウザURL', loc.href);\n            // 便利なメソッドを定義\n            sys.__tohtml = (text) => {\n                return ('' + text)\n                    .replace(/&/g, '&amp;')\n                    .replace(/>/g, '&gt;')\n                    .replace(/</g, '&lt;');\n            };\n            sys.__tohtmlQ = (text) => {\n                return sys.__tohtml(text)\n                    .replace(/\"/g, '&#34;')\n                    .replace(/'/g, '&#39;');\n            };\n            // 「!クリア」でDOMイベントを削除するため\n            sys.__dom_events = []; // [{}, {}, {} ...]\n            // DOM追加イベント\n            sys.__addEvent = (dom, event, func, setHandler) => {\n                // dom\n                if (typeof (dom) === 'string') {\n                    dom = doc.querySelector(dom);\n                    if (!dom) {\n                        throw new Error('DOMイベントが追加できません。要素が見当たりません。');\n                    }\n                }\n                // func\n                if (typeof (func) === 'string') {\n                    func = sys.__findVar(func, null);\n                    if (!func) {\n                        throw new Error('DOMイベントが追加できません。関数が見当たりません。');\n                    }\n                }\n                // make wrapper func\n                const wrapperFunc = (e) => {\n                    sys.__setSysVar('対象', e.target);\n                    sys.__setSysVar('対象イベント', e);\n                    // 追加データが得られる場合\n                    if (setHandler) {\n                        setHandler(e, sys);\n                    }\n                    if (sys.__genMode === '非同期モード') {\n                        sys.newenv = true;\n                    }\n                    return func(e, sys);\n                };\n                // add\n                sys.__dom_events.push({ dom, event, func: wrapperFunc, rawFunc: func });\n                dom.addEventListener(event, wrapperFunc);\n            };\n            // キーイベントハンドラ\n            sys.__keyHandler = (e, sys) => {\n                sys.__setSysVar('押キー', e.key);\n            };\n            // マウスイベントハンドラ\n            sys.__mouseHandler = (e, sys) => {\n                const box = e.target.getBoundingClientRect();\n                sys.__setSysVar('マウスX', e.clientX - box.left);\n                sys.__setSysVar('マウスY', e.clientY - box.top);\n            };\n            // タッチイベントハンドラ\n            sys.__touchHandler = (e, sys) => {\n                const box = e.target.getBoundingClientRect();\n                const touches = e.changedTouches;\n                if (touches.length <= 0) {\n                    return;\n                }\n                const ts = [];\n                for (let i = 0; i < touches.length; i++) {\n                    const t = touches[i];\n                    const tx = t.clientX - box.left;\n                    const ty = t.clientY - box.top;\n                    if (i === 0) {\n                        sys.__setSysVar('タッチX', tx);\n                        sys.__setSysVar('タッチY', ty);\n                    }\n                    ts.push([tx, ty]);\n                }\n                sys.__setSysVar('タッチ配列', ts);\n                return ts;\n            };\n            // DOMイベント削除 (探して削除)\n            sys.__removeEvent = (dom, event, func) => {\n                // dom\n                if (typeof (dom) === 'string') {\n                    dom = doc.querySelector(dom);\n                    if (!dom) {\n                        throw new Error('DOMイベントが削除できません。要素が見当たりません。');\n                    }\n                }\n                // func\n                if (typeof (func) === 'string') {\n                    func = sys.__findVar(func, null);\n                    if (!func) {\n                        throw new Error('DOMイベントが削除できません。関数が見当たりません。');\n                    }\n                }\n                // find\n                for (let i = 0; i < sys.__dom_events.length; i++) {\n                    const e = sys.__dom_events[i];\n                    if (e.dom === dom && e.event === event && e.rawFunc === func) {\n                        e.dom.removeEventListener(e.event, e.func);\n                        sys.__dom_events.splice(i, 1);\n                        break;\n                    }\n                }\n            };\n            // requestAnimationFrame のためのid\n            sys.__requestAnimationFrameLastId = 0;\n            // DOMイベント全クリア\n            sys.__removeAllDomEvent = () => {\n                sys.__dom_events.forEach(e => {\n                    e.dom.removeEventListener(e.event, e.func);\n                });\n                sys.__dom_events = [];\n                // requestAnimationFrame\n                if (sys.__requestAnimationFrameLastId > 0) {\n                    win.cancelAnimationFrame(sys.__requestAnimationFrameLastId);\n                    sys.__requestAnimationFrameLastId = 0;\n                }\n            };\n            // DOM取得のために使う\n            sys.__query = (dom, commandName, isGetFunc) => {\n                const elm = (typeof dom === 'string') ? document.querySelector(dom) : dom;\n                if (!elm) {\n                    if (isGetFunc) {\n                        // 取得イベントではコンソールにヒントを出す\n                        console.warn(`[ヒント](${sys.__getSysVar('__line')})『${commandName}』でDOM取得に失敗しています。DOM=`, dom);\n                    }\n                    else {\n                        // 設定イベントでは実行時エラーにする\n                        const desc = (typeof dom === 'string') ? dom : String(dom);\n                        throw new Error(`『${commandName}』でクエリ『${desc}』でDOM取得に失敗しました。`);\n                    }\n                }\n                return elm;\n            };\n            // 動的にJSライブラリを取り込む\n            sys.__loadScript = (url) => {\n                return new Promise((resolve, reject) => {\n                    const script = document.createElement('script');\n                    script.type = 'text/javascript';\n                    script.src = url;\n                    script.onload = resolve;\n                    script.onerror = () => {\n                        reject(new Error(`Failed to load script at url: ${url}`));\n                    };\n                    document.getElementsByTagName('head')[0].appendChild(script);\n                });\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // chart.jsを破棄\n            if (sys.__chartjs) {\n                sys.__chartjs.destroy();\n            }\n            // 全DOMイベントをクリア\n            sys.__removeAllDomEvent();\n        }\n    }\n};\nBrowserParts.forEach((a) => {\n    const b = {};\n    Object.assign(b, a);\n    // 各モジュールでの初期化処理は認めない\n    if (typeof b['初期化'] !== 'undefined') {\n        delete b['初期化'];\n    }\n    Object.assign(PluginBrowser, b);\n});\nexport default PluginBrowser;\n","// @ts-nocheck\nimport hotkeys from 'hotkeys-js';\nexport default {\n    // @ホットキー\n    'ホットキー登録': {\n        type: 'func',\n        josi: [['に', 'で'], ['を']],\n        pure: true,\n        fn: function (key, fname, sys) {\n            hotkeys(key, function (event, handler) {\n                event.preventDefault();\n                const f = sys.__findFunc(fname);\n                f(sys);\n            });\n        }\n    },\n    'ホットキー解除': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (key) {\n            hotkeys.unbind(key);\n        }\n    }\n};\n","export default {\n    // @グラフ描画_CHARTJS\n    'グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // Chart.jsが使えるかチェック\n            const win = sys.__getSysVar('WINDOW');\n            if (typeof win === 'undefined') {\n                throw new Error('『グラフ描画』のエラー。ブラウザで実行してください。');\n            }\n            // Chart.jsがないので自動的に取り込む\n            if (typeof win.Chart === 'undefined') {\n                console.log('try to load chart.js');\n                await sys.__loadScript('https://cdn.jsdelivr.net/npm/chart.js@4.4.0');\n                console.log('loaded chart.js');\n            }\n            if (typeof win.Chart === 'undefined') {\n                throw new Error('『グラフ描画』のエラー。Chart.jsを取り込みに失敗しました。');\n            }\n            const Chart = win.Chart;\n            // Canvasが有効？\n            if (!sys.__canvas) {\n                throw new Error('『グラフ描画』のエラー。『描画開始』命令で描画先のCanvasを指定してください。 ');\n            }\n            // 日本語のキーワードを変換\n            if (data['タイプ']) {\n                data.type = data['タイプ'];\n            }\n            if (data['データ']) {\n                data.data = data['データ'];\n            }\n            if (data['オプション']) {\n                data.options = data['オプション'];\n            }\n            if (sys.__chartjs) {\n                sys.__chartjs.destroy();\n            }\n            // eslint-disable-next-line no-undef\n            const chart = new Chart(sys.__canvas, data);\n            sys.__chartjs = chart;\n            return chart;\n        }\n    },\n    'グラフオプション': { type: 'const', value: {} }, // @ぐらふおぷしょん\n    '線グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['line', data, sys]);\n            const d = {\n                type: 'line',\n                data,\n                options: sys.__getSysVar('グラフオプション')\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__getSysVar('グラフオプション'), { 'indexAxis': 'x' });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '横棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__getSysVar('グラフオプション'), { 'indexAxis': 'y' });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar', // horizontalBar\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '積上棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__getSysVar('グラフオプション'), {\n                'indexAxis': 'x',\n                'scales': {\n                    x: { stacked: true },\n                    y: { stacked: true }\n                }\n            });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '積上横棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__getSysVar('グラフオプション'), {\n                'indexAxis': 'y',\n                'scales': {\n                    x: { stacked: true },\n                    y: { stacked: true }\n                }\n            });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '散布図描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__getSysVar('グラフオプション'), {});\n            data = sys.__exec('二次元グラフデータ変形', ['scatter', data, sys]);\n            const d = {\n                type: 'scatter',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '円グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'pie',\n                data,\n                options: sys.__getSysVar('グラフオプション')\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'ドーナツグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'doughnut',\n                data,\n                options: sys.__getSysVar('グラフオプション')\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'ポーラーグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'polarArea',\n                data,\n                options: sys.__getSysVar('グラフオプション')\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'レーダーグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        asyncFn: true,\n        fn: async function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'radar',\n                data,\n                options: sys.__getSysVar('グラフオプション')\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '二次元グラフデータ変形': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        fn: function (t, dataOrg, sys) {\n            // データを破壊的に変更してしまうので最初にデータをコピー (#1416)\n            const data = JSON.parse(JSON.stringify(dataOrg));\n            const bgcolorList = [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ];\n            const fgcolorList = [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ];\n            const res = {};\n            const bgcolors = [];\n            const fgcolors = [];\n            res.labels = [];\n            // 配列かどうか\n            if (data instanceof Array) {\n                // 二次元データのとき\n                if (data[0] instanceof Array) {\n                    if (t === 'pie') { // 円グラフの時だけ整形方法が異なる\n                        const o = {};\n                        o.data = [];\n                        res.datasets = [o];\n                        for (let i = 0; i < data.length; i++) {\n                            res.labels.push(data[i][0]); // label\n                            o.data.push(data[i][1]); // value\n                            bgcolors.push(bgcolorList[i % 6]);\n                            fgcolors.push(fgcolorList[i % 6]);\n                        }\n                        o.backgroundColor = bgcolors;\n                        o.borderColor = fgcolors;\n                        return res;\n                    }\n                    // 左側のラベルの処理\n                    // [1,0]が文字列ならラベルあり\n                    if (typeof (data[1][0]) === 'string') {\n                        for (let i = 1; i < data.length; i++) {\n                            res.labels.push(data[i][0]); // 左ラベルを追加\n                            data[i] = data[i].slice(1); // 左ラベル除去\n                        }\n                        data[0] = data[0].slice(1); // ヘッダ行も左ラベルを削除\n                    }\n                    else {\n                        // 左側ラベルない場合 - ダミーのラベルを追加\n                        for (let i = 1; i < data.length; i++) {\n                            res.labels.push(i);\n                        }\n                    }\n                    res.datasets = [];\n                    for (let i = 0; i < data[0].length; i++) {\n                        const o = {};\n                        res.datasets.push(o);\n                        o.label = data[0][i];\n                        o.backgroundColor = bgcolorList[i % 6];\n                        o.borderColor = fgcolorList[i % 6];\n                        o.data = [];\n                        for (let j = 1; j < data.length; j++) {\n                            o.data.push(data[j][i]);\n                        }\n                    }\n                    return res;\n                }\n                // 一次元データのとき\n                // ラベルを作成\n                for (let i = 0; i < data.length; i++) {\n                    res.labels.push(i + 1);\n                    bgcolors.push(bgcolorList[i % 6]);\n                    fgcolors.push(fgcolorList[i % 6]);\n                }\n                const o1 = {};\n                res.datasets = [o1];\n                o1.label = 'データ';\n                o1.data = data;\n                o1.backgroundColor = bgcolors;\n                o1.borderColor = fgcolors;\n                return res;\n            }\n            if (data instanceof Object) {\n                return data;\n            }\n            // データが1つだけのとき\n            return sys.__exec('二次元グラフデータ変形', [[data], sys]);\n        }\n    }\n};\n","export default {\n    // @ハッシュ関数\n    'ハッシュ値計算時': {\n        type: 'func',\n        josi: [['へ'], ['を'], ['で']],\n        pure: true,\n        fn: function (func, s, alg, sys) {\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\n            // convert\n            const buffer = new TextEncoder().encode(s);\n            crypto.subtle.digest(alg, buffer).then(function (hash) {\n                const codes = [];\n                const view = new DataView(hash);\n                for (let i = 0; i < view.byteLength; i += 4) {\n                    const v = view.getUint32(i);\n                    const h = v.toString(16);\n                    const pad = '00' + h;\n                    codes.push(pad.substr(pad.length - 2, 2));\n                }\n                const res = sys.__setSysVar('対象', codes.join(''));\n                func(res);\n            });\n        },\n        return_none: true\n    }\n};\n","// wnako3mod - nadesiko for web browser\n// - wnako3 から wnako3mod を取り込む。\n// - このファイルはモジュールとして別のファイルから取り込み可能。\nimport { NakoCompiler } from '../core/src/nako3.mjs';\nimport { NakoImportError } from '../core/src/nako_errors.mjs';\nimport { setupEditor } from './wnako3_editor.mjs';\nimport nakoVersion from './nako_version.mjs';\nimport PluginBrowser from './plugin_browser.mjs';\nconst NAKO_SCRIPT_RE = /^(なでしこ|nako|nadesiko)3?$/;\nexport class WebNakoCompiler extends NakoCompiler {\n    constructor() {\n        super({ useBasicPlugin: true });\n        this.version = nakoVersion.version;\n        this.wnakoVersion = nakoVersion;\n        this.localFiles = {};\n        // プラグインを追加\n        this.addPluginObject('PluginBrowser', PluginBrowser);\n        // 必要な定数を設定\n        this.addListener('beforeRun', (g) => {\n            // バージョン情報を設定\n            g.__varslist[0].set('ナデシコ種類', 'wnako3');\n            g.__varslist[0].set('ナデシコバージョン', nakoVersion.version);\n            g.__varslist[0].set('WNAKOバージョン', nakoVersion.version);\n        });\n    }\n    /**\n     * ブラウザでtype=\"なでしこ\"というスクリプトを得て実行する\n     */\n    async runNakoScript() {\n        // スクリプトタグの中身を得る\n        let nakoScriptCount = 0;\n        const scripts = document.querySelectorAll('script');\n        for (let i = 0; i < scripts.length; i++) {\n            const script = scripts[i];\n            if (script.type.match(NAKO_SCRIPT_RE)) {\n                nakoScriptCount++;\n                // URLからスクリプト名を見つける\n                const url = (typeof (window.location) === 'object') ? window.location.href : 'url_unknown';\n                const fname = `${url}#script${nakoScriptCount}.nako3`;\n                const code = script.text;\n                // 依存するライブラリをロード\n                await this.loadDependencies(code, fname);\n                // プログラムを実行\n                await this.runAsync(script.text, fname);\n            }\n        }\n        if (nakoScriptCount > 1) {\n            console.log('実行したなでしこの個数=', nakoScriptCount);\n        }\n    }\n    /** 取り込む文を実行する */\n    async loadDependencies(code, filename, preCode = '', localFiles = {}) {\n        this.localFiles = localFiles || {};\n        return this._loadDependencies(code, filename, preCode, this.getLoaderTool());\n    }\n    /**\n     * type=なでしこ のスクリプトを自動実行するべきかどうかを返す\n     * @returns type=なでしこ のスクリプトを自動実行するべきかどうか\n     */\n    checkScriptTagParam() {\n        const scripts = document.querySelectorAll('script');\n        for (let i = 0; i < scripts.length; i++) {\n            const script = scripts[i];\n            const src = script.src || '';\n            if (src.indexOf('wnako3.js?run') >= 0 ||\n                src.indexOf('wnako3.js&run') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * 指定したidのHTML要素をなでしこ言語のエディタにする。\n     * @param {string | Element} idOrElement HTML要素\n     * @see {setupEditor}\n     */\n    setupEditor(idOrElement) {\n        return setupEditor(idOrElement, this, window.ace);\n    }\n    /** なでしこ3の『取り込む』命令のための読み込みツール */\n    getLoaderTool() {\n        const tool = { readJs: this.readJs, readNako3: this.readNako3, resolvePath: this.resolvePath };\n        return tool;\n    }\n    /** JSプラグインの読み込み */\n    readJs(filePath, token) {\n        if (this.localFiles && this.localFiles[filePath]) {\n            return {\n                task: (async () => () => {\n                    // eslint-disable-next-line no-new-func\n                    Function(this.localFiles[filePath])();\n                    return {};\n                })()\n            };\n        }\n        return {\n            task: (async () => {\n                // もし動的インポートに対応していれば動的インポートを試す\n                const basename = ('/' + filePath).split('/').pop() || '?';\n                /*\n                try {\n                  const obj = await import(filePath)\n                  this.addPluginObject(basename, obj)\n                  return {}\n                } catch (e) { }\n                */\n                // WebPackの関係で動的インポートが失敗するので、テキストとしてJSソースを取り出して処理する\n                // JavaScriptをテキストとして取得\n                const res = await fetch(filePath);\n                if (!res.ok) {\n                    throw new NakoImportError(`ファイル『${filePath}』のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\n                }\n                let jstext = await res.text();\n                // ESModuleっぽければ `default export`を置き換える\n                const r = Math.floor(Math.random() * 1000000);\n                const exportName = `exportObject${r}`;\n                if (jstext.includes('default export')) {\n                    jstext = jstext.replace('default export', `;let ${exportName} = `);\n                    jstext += `\\n;navigator.nako3.addPluginObject('${basename}', ${exportName});\\n`;\n                }\n                // addPluginObjectが存在する\n                if (!jstext.includes('navigator.nako3.addPluginObject')) {\n                    throw new NakoImportError(`ファイル ${filePath} の中に文字列 \"navigator.nako3.addPluginObject\" が存在しません。現在、ブラウザ版のなでしこ言語v3は自動登録するプラグインのみをサポートしています。`, token.file, token.line);\n                }\n                const gNavigator = navigator;\n                const gSelf = gNavigator.nako3;\n                // textの例: `navigator.nako3.addPluginObject('PluginRequireTest', { requiretest: { type: 'var', value: 100 } })`\n                return () => {\n                    // プラグインの自動登録は navigator.nako3 を参照するため、 navigator.nako3 を一時的に現在のインスタンスにする。\n                    const globalNavigator = gNavigator;\n                    const globalNako3 = globalNavigator.nako3;\n                    globalNavigator.nako3 = gSelf;\n                    try {\n                        // eslint-disable-next-line no-new-func\n                        const f = Function(jstext);\n                        f.apply(gSelf.__globalObj);\n                    }\n                    catch (err) {\n                        throw new NakoImportError(`プラグイン ${filePath} の取り込みに失敗: ${err instanceof Error ? err.message : err + ''}`, token.file, token.line);\n                    }\n                    finally {\n                        globalNavigator.nako3 = globalNako3;\n                    }\n                    return {};\n                };\n            })()\n        };\n    }\n    /** NAKO3プラグインの読み込み */\n    readNako3(filePath, token) {\n        if (this.localFiles && this.localFiles[filePath]) { // ローカルファイルを使う場合\n            return {\n                task: (() => {\n                    return (new Promise((resolve, reject) => {\n                        const s = this.localFiles[filePath];\n                        resolve(s);\n                    }));\n                })()\n            };\n        }\n        return {\n            task: (async () => {\n                const res = await fetch(filePath);\n                if (!res.ok) {\n                    throw new NakoImportError(`ファイル ${filePath} のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\n                }\n                return await res.text();\n            })()\n        };\n    }\n    /** 読み込みでパスを解決する */\n    resolvePath(name, token, fromFile) {\n        let pathname = name;\n        // http から始まっていれば解決は不要\n        if (pathname.match(/^https?:\\/\\//)) { // フルパスなら解決不要\n        }\n        else if (this.localFiles && this.localFiles[name]) {\n            pathname = this.localFiles[name];\n        }\n        else {\n            try {\n                pathname = new URL(name).pathname;\n            }\n            catch (e) {\n                // 単純にパスに変換できなければ、location.hrefを参考にパスを組み立てる\n                try {\n                    let baseDir = dirname(fromFile);\n                    if (baseDir === '') {\n                        // https://2/3/4.html\n                        const a = window.location.href.split('/');\n                        baseDir = '/' + a.slice(3, a.length - 1).join('/');\n                    }\n                    pathname = resolveURL(baseDir, name);\n                }\n                catch (e) {\n                    throw new NakoImportError(`取り込み文の引数でパスが解決できません。https:// か http:// で始まるアドレスを指定してください。\\n${e}`, token.file, token.line);\n                }\n            }\n        }\n        // 拡張子によってプラグインタイプを分岐する\n        const checkExt = (name, extlist) => {\n            for (const ext of extlist) {\n                if (name.endsWith(ext)) {\n                    return true;\n                }\n                if (name.endsWith(ext + '.txt')) {\n                    return true;\n                } // '.mjs.txt' にもマッチ\n            }\n            return false;\n        };\n        // URLパラメータを考慮する\n        const aname = (pathname + '?').split('?')[0];\n        // JSプラグイン    → (.js|.mjs)\n        // NAKO3プラグイン → (.nako3|.nako)\n        if (checkExt(aname, ['.js', '.mjs'])) {\n            return { filePath: pathname, type: 'js' };\n        }\n        if (checkExt(aname, ['.nako3', '.nako'])) {\n            return { filePath: pathname, type: 'nako3' };\n        }\n        if (checkExt(pathname, ['.js', '.mjs'])) {\n            return { filePath: pathname, type: 'js' };\n        }\n        if (checkExt(pathname, ['.nako3', '.nako'])) {\n            return { filePath: pathname, type: 'nako3' };\n        }\n        // ファイル拡張子が未指定の場合\n        throw new NakoImportError(`ファイル『${name}』は拡張子が(.nako3|.js|.js.txt|.mjs|.mjs.txt)以外なので取り込めません。`, token.file, token.line);\n    }\n}\nfunction dirname(s) {\n    const a = s.split('/');\n    if (a && a.length > 1) {\n        return a.slice(0, a.length - 1).join('/');\n    }\n    return '';\n}\nfunction resolveURL(base, s) {\n    const baseA = base.split('/');\n    const sA = s.split('/');\n    for (const p of sA) {\n        if (p === '') {\n            continue;\n        }\n        if (p === '.') {\n            continue;\n        }\n        if (p === '..') {\n            baseA.pop();\n            continue;\n        }\n        baseA.push(p);\n    }\n    return baseA.join('/');\n}\n","// wnako3 - nadesiko for web browser\nimport { WebNakoCompiler } from './wnako3mod.mjs';\n// ブラウザから取り込まれる時 navigator.nako3 になでしこを登録\nif ((typeof navigator) === 'object' && !navigator.exportWNako3) {\n    const wnako3 = navigator.nako3 = new WebNakoCompiler();\n    window.addEventListener('DOMContentLoaded', (e) => {\n        const isAutoRun = wnako3.checkScriptTagParam();\n        if (isAutoRun) {\n            wnako3.runNakoScript();\n        }\n    }, false);\n}\n"],"names":["isff","navigator","userAgent","toLowerCase","indexOf","addEvent","e","t","n","o","addEventListener","attachEvent","concat","removeEvent","removeEventListener","detachEvent","getMods","slice","length","getKeys","replace","split","lastIndexOf","splice","_keyMap","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","ins","insert","home","end","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","_downKeys","winListendFocus","_scope","elementEventMap","Map","code","toUpperCase","charCodeAt","setScope","getScope","unbind","Object","keys","forEach","Array","isArray","eachUnbind","removeKeyEvent","key","arguments","s","r","scope","method","splitKey","i","d","filter","compareArray","mods","push","element","eventHandler","prototype","hasOwnProperty","call","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","keyCode","which","charCode","hotkeys","this","y","p","getModifierState","type","keydown","keyup","a","l","c","sort","join","document","f","toString","capture","single","window","has","event","clearModifier","set","keydownListener","keyupListenr","listener","values","flat","findIndex","get","size","_api","getPressedKeyString","map","getKey","find","getModifier","String","fromCharCode","deleteScope","getPressedKeyCodes","getAllKeyCodes","isPressed","target","srcElement","includes","isContentEditable","readOnly","trigger","keyMap","modifier","L0","M0","noConflict","module","exports","NakoError","Error","constructor","tag","msg","file","undefined","line","positionJa","super","name","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","fromNode","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","josiList","tararebaJosiList","removeJosiList","tararebaMap","josi","removeJosiMap","josiListMono","jo","b","pat","josiRE","RegExp","reserved","value","pluginName","description","pluginVersion","nakoRuntime","nakoVersion","pure","fn","sys","system","isDebug","__setSysVar","__v0","__getSysVar","defaultValue","v","__setSore","__vars","__getSore","tags","version","coreVersion","__namespaceList","__findVar","nameStr","def","localVar","__locals","scopeValue","__varslist","modList","__modList","__modName","modName","gname","__findFunc","parentFunc","__exec","func","params","f0","apply","__timeout","__interval","z2","__zero2","substring","__zero","keta","zeroS","__formatDate","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","Date","parseFloat","__printPool","__parseFloatOrBigint","chk","constId","cp","constPools","msgNo","msgArgs","fileNo","constPoolsTemplate","arg","fileStr","logger","warn","Math","PI","NaN","Infinity","send","return_none","isVariableJosi","pop","console","log","aa","pow","JSON","stringify","reduce","__reisetu","src","eval","args","asyncFn","async","Function","obj","m","__genMode","__self","runEx","resetEnv","resetLog","outLog","trace","resetAll","out","tf","performance","now","t1","isNaN","Number","g","v2","from","fromCodePoint","codePointAt","ss","str","res","cnt","chr","zen1","han1","zen2","han2","c2","n2","charAt","j","result","parse","re","sa","global","z","ufunc","reverse","floor","random","tmp","old","x","max","min","nn","no","ns","ms","row","col","cols","rows","k","idx","nr","sum","test","body","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","getTime","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","op","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","startsWith","fname","pluginfiles","__module","then","mod","assign","catch","w","default","text","encodeURIComponent","decodeURIComponent","url","kv","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","prop","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","indent","column","NakoParserBase","stackList","tokens","usedFuncs","Set","stack","index","namespaceStack","funclist","funcLevel","usedAsyncFn","localvars","genMode","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","isReadingCalc","isExportDefault","isExportStack","moduleExport","init","reset","setFuncList","setModuleExport","moduleexport","popStack","saveStack","loadStack","findVar","info","gnameSelf","exportDefault","funcObj","isExport","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","node","opts","debugMode","depth","typeName","debug","subNode","node2","operator","table","eq","not","gt","lt","and","or","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","ii","trimOkurigana","beginTag","closeTag","NakoLexer","listMap","exportObj","replaceTokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","isFuncPointer","readArgs","funcPointer","varnames","funcPointers","already","prevToken","nextToken","kai","rtype","isMumei","defToken","funcName","funcNameToken","attr","dispName","metaValue","meta","splitStringEx","list","arr","comment","modSelf","gname1","gfo1","gfo","fo","tokenType","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","tokensToTypeStr","sep","NakoParser","startParser","ySentenceList","blocks","ySentence","block","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yDNCLMode","ySetGenMode","yExportDefault","yTikuji","yASyncMode","word","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","cond","yIfThen","ver","mode","yBlock","yDefFuncReadArgs","yDef","funcAttribute","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","falseBlock","tanbun","expr","false_block","optionNode","val","options","tikuji","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","flagDown","loopDirection","kurikaesu","incdec","vInc","vTo","vFrom","to","inc","yReturn","yForEach","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","cases","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","checkInit","getVarName","ySadameru","sadameru","attrNode","createVar","vartype","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","nullCount","valueCount","popArg","varname","add","funcNode","isexport","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","vtype","wordVar","yJSONArray","names","createVarList","checkArrayIndex","checkArrayReverse","ary","tmpReadingCalc","fCalc","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","ff","yValueWord","funcPtr","yValueFuncPointer","yValueWordGetIndex","ast","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","errBlock","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","getInstance","_instance","convertTable","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","substr","checkNakoMode","modeNames","lines","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","loopId","numAsyncFn","flagLoop","lastLineNo","varslistSet","setVarslistSet","varsSet","isFunction","readonly","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","isValidIdentifier","varslist","vlist","convLineno","forceUpdate","incLine","lineNoStr","lineDataJSON","debugCode","useDebug","messageAction","waitTime","varname_get","varname_set","jsvalue","getFuncName","name2","convPrint","convRequire","moduleName","getDefFuncCode","opt","getModList","nakoFuncCode","trim","cleanGeneratedCode","isAsync","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","getFunc","registerFunction","funcList","registFunc","blockList","initialNames","convGen","_convGen","isExpression","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","isTop","js","js_set","genVar","position","lno","getLogger","pv","getNakoFunc","commentSrc","addConstPool","getConstPoolsTemplateId","id","args2","argNo","poolIndex","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","errMsg","callCheckFunc","oldUsedAsyncFn","nameFuncValue","codeInit","codeArray","arrayDefCode","nodeName","tmpVar","convGenLoop","tmpflag","idLoop","varI","loopVarSetter","varName","kara","made","varFrom","varTo","sorePrefex","loopKeyVar","loopValueVar","loopDataVar","valueVar","keyVar","keySetter","targetData","varCount","codeCount","codeCounterSetter","prev","varId","cvalue","cblock","convFuncGetArgsCalcType","_funcName","_func","nodeArgs","sore","argCode","getPluginList","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","localVars","repeat","noCheckFuncs","argsCode","argsA","argStr","funcCall","sorePostfix","OP_TBL","noteq","gteq","lteq","shift_l","shift_r","shift_r0","incValue","varGetter","varSetter","varInitter","rf","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","replaceTemplateCode","template","spc","lastTokenInfo","newToken","templateToken","isSkipWord","joinTokenLines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","fromS","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","addListener","callback","removeListener","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","gen","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","clearName","pname","destroy","major","minor","patch","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","parser","lexer","replaceLogger","listRequireStatements","requireStatements","basename","ext","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","resolvePath","alias","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","compile","compileFromCode","runtimeEnv","eventName","outCode","generateCode","jsInit","funcID","asyncMain","syncMain","codeImportFiles","importNames","initCode","standalone","generateJS","genObj","generate","addCodeGenerator","_run","isReset","_runEx","evalJS","getNakoGlobal","compiledCode","run","compileStandalone","persistent","fpath","__pluginInfo","intVersion","nakoVersionResult","versions","keyStr","_objName","addPluginFromFile","returnNone","setFunc","runReset","defSpecialRetMark","SpecialRetMark","removeCommentsFromLine","eos","isComment","cPrepared","ch2Prepared","getIndent","replaceRetMark","pairs","parents","spaces","lineCount","numLines","line2","current","fill","parent","getEditorTokens","compilerToken","nako3","includesLastCharacter","underlineJosi","docHTML","findPluginName","createParameterDeclaration","getDocumentationHTML","union","alphabet","createParameterName","getDefaultTokens","doc","getLine","withoutLogger","entries","lineStartOffset","tokenIndex","editorTokens","lineEndOffset","EditorMarkers","session","AceRange","disable","markers","hasAnnotations","fromNullable","startLine","startColumn","endLine","endColumn","fromOffset","fromError","range","addMarker","setAnnotations","addByError","marker","removeMarker","clearAnnotations","BackgroundTokenizer","onTokenUpdate","onCompileError","onUpdate","dirty","lastLexerOutput","getAllLines","cache","deleted","enabled","update","startTime","getLength","dispose","$updateOnChange","delta","startRow","endRow","columnStart","oldTokens","newTokens","getTokens","fireUpdateEvent","firstRow","lastRow","setDocument","scheduleStart","setTokenizer","tokenizer","stop","getState","LanguageFeatures","toggleCommentLines","state","parseLine","every","removeInLine","minIndent","insertInLine","checkOutdent","input","autoOutdent","prevLine","isBlockStart","getBlockStructure","oldIndent","getNextLineIndent","getCompletionItems","prefix","backgroundTokenizer","addItem","caption","score","getSnippets","indentSyntax","en","jp","snippet","getCompletionPrefix","getFoldWidget","foldStyle","getFoldWidgetRange","pair","getCodeLens","results","title","blockStructure","EditorTabs","editor","UndoManager","newTab","cursor","reversed","scroll","top","undoManger","getTab","getValue","selection","getRange","isBackwards","getScrollLeft","getScrollTop","getUndoManager","setTab","setValue","setRange","setScrollLeft","setScrollTop","setUndoManager","Options","save","getOption","localStorage","setItem","load","getItem","json","keyboardHandler","setOption","theme","fontSize","tabSize","initPanel","OptionPanel","panel","done","isMain","renderOptionGroup","group","items","ariaLabel","render","on","completers","editorIdCounter","setupEditor","idOrElement","ace","edit","getElementById","require","Range","editorMarkers","bgTokenizer","dataset","nako3DisableMarker","classList","contains","setAttribute","nako3Readonly","setReadOnly","setFontSize","resetEditorTokens","removeFullLines","defineOptions","initialValue","setOptions","wrap","indentedSoftWrap","showPrintMargin","setKeyboardHandler","tooltip","Tooltip","container","renderer","hide","getDocumentPosition","getTokenAt","setHtml","show","clientX","clientY","domEvent","className","isFocused","editorId","setBreakpoint","postMessage","clearBreakpoint","forceSyntaxHighlighting","nako3ForceSyntaxHighlighting","isFirstTime","oldBgTokenizer","_signal","slowSpeedMessage","remove","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","wnako3EditorId","getCompletions","some","setCompleters","getCursorPosition","languageFeatures","oop","TextMode","Mode","HighlightRules","foldingRules","inherits","setMode","setTheme","buttonContainer","createElement","appendChild","innerHTML","codeLensListeners","CodeLens","commands","addCommand","registerCodeLensProvider","provideCodeLenses","exitFullscreen","setScrollMargin","fullscreenButton","innerText","settingsButton","execCommand","editorTabs","nako3Resizable","MutationObserver","resize","observe","attributes","retokenize","outputContainer","display","loadDependencies","localFiles","testName","ua","alert","prompt","confirm","location","href","back","fetch","status","headers","blob","bodyData","fd","FormData","flist","arrayBuffer","Blob","resolveCount","q","querySelector","querySelectorAll","getElementsByTagName","pa","__query","dom","funcStr","tagName","selectedIndex","uses","wa","getAttribute","HTMLElement","removeChild","focus","__addEvent","__removeEvent","__keyHandler","__mouseHandler","__touchHandler","__requestAnimationFrameLastId","requestAnimationFrame","cancelAnimationFrame","skin","elm","btn","label","inp","te","lbl","cv","width","height","img","span","htmlFor","createTextNode","frm","rowIndex","th","__tohtmlQ","td","ita","its","select","it","tr","getChildren","childNodes","checked","rr","bgColor","bgHead","rowNo","__tohtml","backgroundColor","color","textAlign","div","WINDOW","mermaid","__loadScript","clipboard","writeText","pre","webkitUserSelect","userSelect","textContent","getSelection","selectAllChildren","readText","removeItem","errMsgCanvasInit","__canvas","__ctx","getContext","__fillStyle","__strokeStyle","restore","strokeStyle","fillStyle","beginPath","moveTo","lineTo","stroke","lineWidth","rect","clearRect","xy","arc","ellipse","Image","crossOrigin","onload","onerror","drawFunc","im","ctx","drawImage","image","sxy","dxy","errArgLen","__proto__","sw","font","fillText","measureText","translate","rotate","scale","setTransform","transform","toDataURL","toBlob","download","click","geolocation","getCurrentPosition","coords","latitude","longitude","watchPosition","wid","clearWatch","speechSynthesis","speak","onend","voice","SpeechSynthesisUtterance","lang","rate","pitch","volume","getVoices","voices","changeFunc","ws","WebSocket","onopen","cbOpen","cbError","onmessage","cbMsg","close","Audio","loop","play","pause","currentTime","duration","PluginBrowser","win","nav","loc","__dom_events","setHandler","wrapperFunc","rawFunc","box","getBoundingClientRect","touches","changedTouches","ts","tx","__removeAllDomEvent","commandName","isGetFunc","script","__chartjs","handler","Chart","chart","gopt","stacked","dataOrg","bgcolorList","fgcolorList","bgcolors","fgcolors","labels","datasets","borderColor","o1","alg","buffer","crypto","subtle","digest","hash","codes","view","DataView","byteLength","pad","getUint32","NAKO_SCRIPT_RE","WebNakoCompiler","wnakoVersion","runNakoScript","nakoScriptCount","scripts","getLoaderTool","checkScriptTagParam","statusText","jstext","exportName","gNavigator","gSelf","globalNavigator","globalNako3","fromFile","pathname","URL","baseDir","dirname","baseA","sA","resolveURL","checkExt","extlist","endsWith","aname","exportWNako3","wnako3"],"sourceRoot":""}