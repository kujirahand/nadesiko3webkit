{"version":3,"file":"wnako3.js","mappings":";mEACa,IAAIA,EAAK,oBAAoBC,WAAW,EAAEA,UAAUC,UAAUC,cAAcC,QAAQ,WAAW,SAASC,EAASC,EAAEC,EAAEC,EAAEC,GAAGH,EAAEI,iBAAiBJ,EAAEI,iBAAiBH,EAAEC,EAAEC,GAAGH,EAAEK,aAAaL,EAAEK,YAAY,KAAKC,OAAOL,IAAG,WAAWC,EAAEK,OAAOC,MAAM,GAAE,CAAC,SAASC,EAAQT,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAES,MAAM,EAAET,EAAEU,OAAO,GAAGR,EAAE,EAAEA,EAAED,EAAES,OAAOR,IAAID,EAAEC,GAAGH,EAAEE,EAAEC,GAAGN,eAAe,OAAOK,CAAC,CAAC,SAASU,EAAQZ,GAAG,IAAI,IAAIC,GAAGD,GAAGA,EAAE,iBAAiBA,EAAE,GAAGA,GAAGa,QAAQ,MAAM,KAAKC,MAAM,KAAKZ,EAAED,EAAEc,YAAY,IAAI,GAAGb,GAAGD,EAAEC,EAAE,IAAI,IAAID,EAAEe,OAAOd,EAAE,GAAGA,EAAED,EAAEc,YAAY,IAAI,OAAOd,CAAC,CAA8I,IAAI,IAAIgB,EAAQ,CAACC,UAAU,EAAEC,IAAI,EAAEC,MAAM,GAAGC,MAAM,GAAGC,OAAO,GAAGC,IAAI,GAAGC,OAAO,GAAGC,MAAM,GAAGC,KAAK,GAAGC,GAAG,GAAGC,MAAM,GAAGC,KAAK,GAAGC,IAAI,GAAGC,OAAO,GAAGC,IAAI,GAAGC,OAAO,GAAGC,KAAK,GAAGC,IAAI,GAAGC,OAAO,GAAGC,SAAS,GAAGC,SAAS,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,IAAIC,MAAM,IAAIC,MAAM,IAAIC,MAAM,IAAIC,MAAM,IAAIC,MAAM,IAAIC,aAAa,IAAIC,QAAQ,IAAIC,UAAU,IAAIC,aAAa,IAAIC,YAAY,IAAIC,WAAW,IAAI,IAAS,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI5D,EAAK,IAAI,IAAI,IAAIA,EAAK,GAAG,IAAI,IAAIA,EAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK6D,EAAU,CAAC,IAAS,GAAGC,MAAM,GAAG,IAAS,GAAGC,IAAI,GAAGC,OAAO,GAAG,IAAS,GAAGC,KAAK,GAAGC,QAAQ,GAAG,IAAS,GAAGC,IAAI,GAAGC,QAAQ,IAAIC,EAAY,CAAC,GAAG,WAAW,GAAG,SAAS,GAAG,UAAU,GAAG,UAAUC,SAAS,GAAGC,QAAQ,GAAGC,OAAO,GAAGC,QAAQ,IAAIC,EAAM,CAAC,IAAG,EAAG,IAAG,EAAG,IAAG,EAAG,IAAG,GAAIC,EAAU,CAAC,EAAEC,EAAE,EAAEA,EAAE,GAAGA,IAAIrD,EAAQ,IAAIX,OAAOgE,IAAI,IAAIA,EAAE,IAAIC,EAAU,GAAGC,GAAgB,EAAGC,EAAO,MAAMC,EAAoB,GAAGC,EAAK,SAAS3E,GAAG,OAAOiB,EAAQjB,EAAEH,gBAAgB0D,EAAUvD,EAAEH,gBAAgBG,EAAE4E,cAAcC,WAAW,EAAE,EAAE,SAASC,EAAS9E,GAAGyE,EAAOzE,GAAG,KAAK,CAAC,SAAS+E,IAAW,OAAON,GAAQ,KAAK,CAAwtC,IAAIO,EAAW,SAAShF,GAAG,IAAIiF,EAAEjF,EAAEkF,MAAMC,EAAEnF,EAAEoF,OAAOnF,EAAED,EAAEqF,SAASC,OAAE,IAASrF,EAAE,IAAIA,EAAEW,EAAQZ,EAAEuF,KAAKC,SAAQ,SAASxF,GAAG,IAAIC,EAAeC,GAAbF,EAAEA,EAAEc,MAAMwE,IAAO3E,OAAgBR,EAAE,OAAXA,EAAEH,EAAEE,EAAE,IAAa,IAAIyE,EAAKxE,GAAGkE,EAAUlE,KAAK8E,EAAEA,GAAGF,IAAW9E,EAAE,EAAEC,EAAEO,EAAQ8C,EAAUvD,GAAG,GAAGqE,EAAUlE,GAAGkE,EAAUlE,GAAGsF,QAAO,SAASzF,GAAG,UAAUmF,GAAGnF,EAAEoF,SAASD,IAAInF,EAAEkF,QAAQD,GAAhvF,SAAsBjF,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAEW,OAAOV,EAAEU,OAAOV,EAAED,EAAEG,EAAEH,EAAEW,OAAOV,EAAEU,OAAOX,EAAEC,EAAEgF,GAAE,EAAGE,EAAE,EAAEA,EAAEjF,EAAES,OAAOwE,KAAKhF,EAAEL,QAAQI,EAAEiF,MAAMF,GAAE,GAAI,OAAOA,CAAC,CAAumFS,CAAa1F,EAAE2F,KAAK1F,GAAG,IAAG,GAAE,EAAE,SAAS2F,EAAa5F,EAAEC,EAAEC,EAAEC,GAAG,IAAI8E,EAAE,GAAGhF,EAAE4F,UAAU1F,IAAIF,EAAEiF,QAAQhF,GAAG,QAAQD,EAAEiF,OAAO,CAAC,IAAI,IAAIC,KAAKF,EAAE,EAAEhF,EAAE0F,KAAKhF,OAAOyD,EAAM0B,OAAOC,UAAUC,eAAeC,KAAK7B,EAAMe,MAAMf,EAAMe,KAAKlF,EAAE0F,KAAK7F,SAASqF,IAAIf,EAAMe,MAAMlF,EAAE0F,KAAK7F,SAASqF,MAAMF,GAAE,IAAK,IAAIhF,EAAE0F,KAAKhF,QAAQyD,EAAM,KAAKA,EAAM,KAAKA,EAAM,KAAKA,EAAM,OAAOa,GAAG,MAAMhF,EAAEiG,WAAU,IAAKjG,EAAEmF,OAAOpF,EAAEC,KAAKD,EAAEmG,eAAenG,EAAEmG,iBAAiBnG,EAAEoG,aAAY,EAAGpG,EAAEqG,iBAAiBrG,EAAEqG,kBAAkBrG,EAAEsG,eAAetG,EAAEsG,cAAa,GAAI,CAAC,CAAC,SAASC,EAASrG,EAAEF,GAAG,IAAIC,EAAEoE,EAAU,KAAKlE,EAAED,EAAEsG,SAAStG,EAAEuG,OAAOvG,EAAEwG,SAAS,GAAGC,EAAQlB,OAAOQ,KAAKW,KAAK1G,GAAG,CAAC,IAAIqE,EAAUzE,QAAQK,EAAE,KAAKA,GAAG,MAAMA,EAAEA,EAAE,KAAK,MAAMA,GAAGoE,EAAUsC,KAAK1G,GAAG,CAAC,UAAU,SAAS,WAAW,WAAWqF,SAAQ,SAASxF,GAAG,IAAIC,EAAE8D,EAAY/D,GAAGE,EAAEF,MAAMuE,EAAUzE,QAAQG,GAAGsE,EAAUsC,KAAK5G,IAAIC,EAAEF,KAAKuE,EAAUzE,QAAQG,GAAGsE,EAAUvD,OAAOuD,EAAUzE,QAAQG,GAAG,GAAG,YAAYD,IAAIE,EAAEF,IAAI,IAAIuE,EAAU5D,QAAQT,EAAE+D,SAAS/D,EAAE8D,UAAU9D,EAAEgE,SAASK,EAAUA,EAAU7D,MAAM6D,EAAUzE,QAAQG,IAAI,IAAGE,KAAKiE,EAAM,CAAC,IAAI,IAAIa,KAAKb,EAAMjE,IAAG,EAAGoD,EAAUA,EAAU0B,KAAK9E,IAAIwG,EAAQ1B,IAAG,GAAI,IAAIhF,EAAE,MAAM,CAAC,IAAI,IAAIkF,KAAKf,EAAM0B,OAAOC,UAAUC,eAAeC,KAAK7B,EAAMe,KAAKf,EAAMe,GAAGjF,EAAE6D,EAAYoB,KAAKjF,EAAE4G,oBAAoB5G,EAAEgE,QAAQhE,EAAE+D,UAAU/D,EAAE4G,iBAAiB,eAAevC,EAAUzE,QAAQ,KAAKyE,EAAUsC,KAAK,KAAKtC,EAAUzE,QAAQ,KAAKyE,EAAUsC,KAAK,IAAIzC,EAAM,KAAI,EAAGA,EAAM,KAAI,GAAI,IAAIkB,EAAEP,IAAW,GAAG9E,EAAE,IAAI,IAAI8G,EAAE,EAAEA,EAAE9G,EAAEU,OAAOoG,IAAI9G,EAAE8G,GAAG7B,QAAQI,IAAI,YAAYpF,EAAE8G,MAAM/G,EAAE8G,GAAGE,SAAS,UAAU/G,EAAE8G,MAAM/G,EAAE8G,GAAGG,QAAQtB,EAAa1F,EAAED,EAAE8G,GAAGzB,EAAEtF,GAAG,GAAGG,KAAKkE,EAAU,IAAI,IAAI8C,EAAE,EAAEA,EAAE9C,EAAUlE,GAAGQ,OAAOwG,IAAI,IAAI,YAAYjH,EAAE8G,MAAM3C,EAAUlE,GAAGgH,GAAGF,SAAS,UAAU/G,EAAE8G,MAAM3C,EAAUlE,GAAGgH,GAAGD,QAAQ7C,EAAUlE,GAAGgH,GAAG5B,IAAI,CAAC,IAAI,IAAI6B,EAAE/C,EAAUlE,GAAGgH,GAAGE,EAAED,EAAE7B,IAAIzE,MAAMsG,EAAE/B,UAAUiC,EAAE,GAAGC,EAAE,EAAEA,EAAEF,EAAE1G,OAAO4G,IAAID,EAAET,KAAKlC,EAAK0C,EAAEE,KAAKD,EAAEE,OAAOC,KAAK,MAAMlD,EAAUiD,OAAOC,KAAK,KAAK7B,EAAa1F,EAAEkH,EAAE9B,EAAEtF,EAAE,CAAC,CAAC,CAAmE,SAAS2G,EAAQ3G,EAAEC,EAAEC,GAAGqE,EAAU,GAAG,IAAIpE,EAAES,EAAQZ,GAAGiF,EAAE,GAAGE,EAAE,MAAMG,EAAEoC,SAASX,EAAE,EAAEI,GAAE,EAAGC,GAAE,EAAGC,EAAE,IAAIC,GAAE,EAAG,SAAI,IAASpH,GAAG,mBAAmBD,IAAIC,EAAED,GAAG,oBAAoB6F,OAAOC,UAAU4B,SAAS1B,KAAKhG,KAAKA,EAAEiF,QAAQC,EAAElF,EAAEiF,OAAOjF,EAAE4F,UAAUP,EAAErF,EAAE4F,SAAS5F,EAAEiH,QAAQC,EAAElH,EAAEiH,YAAO,IAASjH,EAAEgH,UAAUG,EAAEnH,EAAEgH,cAAS,IAAShH,EAAE2H,UAAUN,EAAErH,EAAE2H,SAAS,iBAAiB3H,EAAEoF,WAAWgC,EAAEpH,EAAEoF,WAAW,iBAAiBpF,IAAIkF,EAAElF,GAAG8G,EAAE5G,EAAEQ,OAAOoG,IAAI9B,EAAE,GAAG,GAAGjF,EAAEG,EAAE4G,GAAGjG,MAAMuG,IAAI1G,SAASsE,EAAExE,EAAQ8C,EAAUvD,KAAKA,EAAE,OAAOA,EAAEA,EAAEA,EAAEW,OAAO,IAAI,IAAIgE,EAAK3E,MAAMqE,IAAYA,EAAUrE,GAAG,IAAIqE,EAAUrE,GAAG6G,KAAK,CAACK,MAAMC,EAAEF,QAAQG,EAAElC,MAAMC,EAAEQ,KAAKV,EAAEiB,SAAS/F,EAAE4G,GAAG3B,OAAOlF,EAAEqF,IAAIpF,EAAE4G,GAAG1B,SAASgC,EAAExB,QAAQP,SAAI,IAASA,IAA/tB,SAAuBtF,GAAG,SAAS0E,EAAoB5E,QAAQE,EAAE,CAAkqB6H,CAAcvC,IAAI/E,SAASmE,EAAoBmC,KAAKvB,GAAGvF,EAASuF,EAAE,WAAU,SAAStF,GAAGuG,EAASvG,EAAEsF,EAAE,GAAEgC,GAAG9C,IAAkBA,GAAgB,EAAGzE,EAASQ,OAAO,SAAQ,WAAWgE,EAAU,EAAE,GAAE+C,IAAIvH,EAASuF,EAAE,SAAQ,SAAStF,GAAGuG,EAASvG,EAAEsF,GAA/0H,SAAuBtF,GAAG,IAAIC,EAAED,EAAEwG,SAASxG,EAAEyG,OAAOzG,EAAE0G,SAASxG,EAAEqE,EAAUzE,QAAQG,GAAG,GAAGC,EAAE,GAAGqE,EAAUvD,OAAOd,EAAE,GAAGF,EAAEuF,KAAK,QAAQvF,EAAEuF,IAAI1F,eAAe0E,EAAUvD,OAAO,EAAEuD,EAAU5D,SAASV,EAAE,KAAKA,GAAG,MAAMA,EAAEA,EAAE,MAAMmE,EAAM,IAAI,IAAIjE,KAAKiE,EAAMnE,IAAG,EAAGsD,EAAUA,EAAUpD,KAAKF,IAAI0G,EAAQxG,IAAG,EAAG,CAAgjH2H,CAAc9H,EAAE,GAAEsH,GAAG,CAAkO,IAAIH,EAAEY,EAASC,EAAK,CAAClD,SAASA,EAASC,SAASA,EAASkD,YAAr2I,SAAqBjI,EAAEC,GAAG,IAAIC,EAAEC,EAAE8E,EAAE,IAAIA,KAAKjF,EAAEA,GAAG+E,IAAWV,EAAU,GAAGyB,OAAOC,UAAUC,eAAeC,KAAK5B,EAAUY,GAAG,IAAI/E,EAAEmE,EAAUY,GAAG9E,EAAE,EAAEA,EAAED,EAAES,QAAQT,EAAEC,GAAG+E,QAAQlF,EAAEE,EAAEc,OAAOb,EAAE,GAAGA,IAAI4E,MAAa/E,GAAG8E,EAAS7E,GAAG,MAAM,EAA2pIiI,mBAA/pJ,WAA8B,OAAO3D,EAAU7D,MAAM,EAAE,EAA8oJyH,UAAv/I,SAAmBnI,GAAG,MAAM,iBAAiBA,IAAIA,EAAE2E,EAAK3E,OAAOuE,EAAUzE,QAAQE,EAAE,EAAw7IyF,OAAjqJ,SAAgBzF,GAAG,IAA6BC,GAAzBD,EAAEA,EAAEoI,QAAQpI,EAAEqI,YAAeC,QAAQ,QAAOtI,EAAEuI,qBAAoB,UAAUtI,GAAG,aAAaA,GAAG,WAAWA,GAAGD,EAAEwI,UAAe,EAA0hJC,QAA1X,SAAiBxI,GAAG,IAAIC,EAAE,EAAEwI,UAAU/H,aAAQ,IAAS+H,UAAU,GAAGA,UAAU,GAAG,MAAM5C,OAAO6C,KAAKtE,GAAWmB,SAAQ,SAASxF,IAAGA,EAAEqE,EAAUrE,GAAG4I,MAAK,SAAS5I,GAAG,OAAOA,EAAEkF,QAAQhF,GAAGF,EAAEkG,WAAWjG,CAAC,MAAMD,EAAEoF,QAAQpF,EAAEoF,QAAQ,GAAE,EAA0KyD,OAA/8H,SAAgB7I,GAAG,QAAG,IAASA,EAAE8F,OAAO6C,KAAKtE,GAAWmB,SAAQ,SAASxF,GAAG,cAAcqE,EAAUrE,EAAE,SAAQ,GAAG8I,MAAMC,QAAQ/I,GAAGA,EAAEwF,SAAQ,SAASxF,GAAGA,EAAEuF,KAAKP,EAAWhF,EAAE,SAAQ,GAAG,iBAAiBA,EAAEA,EAAEuF,KAAKP,EAAWhF,QAAQ,GAAG,iBAAiBA,EAAE,CAAC,IAAI,IAAIC,EAAEyI,UAAU/H,OAAOT,EAAE4I,MAAM,EAAE7I,EAAEA,EAAE,EAAE,GAAGE,EAAE,EAAEA,EAAEF,EAAEE,IAAID,EAAEC,EAAE,GAAGuI,UAAUvI,GAAG,IAAI8E,EAAE/E,EAAE,GAAGiF,EAAEjF,EAAE,GAAG,mBAAmB+E,IAAIE,EAAEF,EAAEA,EAAE,IAAID,EAAW,CAACO,IAAIvF,EAAEkF,MAAMD,EAAEG,OAAOD,EAAEE,SAAS,KAAK,CAAC,EAA+iH2D,OAAO/H,EAAQgI,SAAS1F,EAAUQ,YAAYA,GAAa,IAAIoD,KAAKa,EAAKlC,OAAOC,UAAUC,eAAeC,KAAK+B,EAAKb,KAAKR,EAAQQ,GAAGa,EAAKb,IAAI,oBAAoB5G,SAASwH,EAASxH,OAAOoG,QAAQA,EAAQuC,WAAW,SAASlJ,GAAG,OAAOA,GAAGO,OAAOoG,UAAUA,IAAUpG,OAAOoG,QAAQoB,GAAUpB,CAAO,EAAEpG,OAAOoG,QAAQA,GAASwC,EAAOC,QAAQzC,wBCC5zNwC,EAAOC,QAAU,EAAjB,uCCKF,IANoB,CAChBC,QAAS,SACTC,MAAO,EACPC,MAAO,EACPC,MAAO,uNCFJ,MAAMC,UAAkBC,MAC3BC,YAAYC,EAAKC,EAAKC,EAAOC,UAAWC,EAAOD,WAE3C,MAAME,EAAa,GAAGH,GAAQ,UAAcC,IAATC,EAAqB,GAAK,IAAIA,EAAO,WAIxEE,MAAM,IAAIN,KAAOK,IAFjBJ,EAAMA,EAAIhJ,QAAQ,iBAAkB,WAIpC+F,KAAKuD,KAAO,YACZvD,KAAKI,KAAO,YACZJ,KAAKgD,IAAM,IAAMA,EAAM,IACvBhD,KAAKqD,WAAaA,EAClBrD,KAAKiD,IAAMA,CACf,EAEG,MAAMO,UAAwBX,EAMjCE,YAAYE,EAAKG,EAAMF,GACnBI,MAAM,WAAYL,EAAKC,EAAME,GAC7BpD,KAAKI,KAAO,kBACZJ,KAAKoD,KAAOA,EACZpD,KAAKkD,KAAOA,CAChB,EAGG,MAAMO,UAA2BZ,EAQpCE,YAAYE,EAAKS,EAA6BC,EAA2BP,EAAMF,GAC3EI,MAAM,iBAAkBL,EAAKC,EAAME,GACnCpD,KAAKI,KAAO,qBACZJ,KAAK0D,4BAA8BA,EACnC1D,KAAK2D,0BAA4BA,EACjC3D,KAAKoD,KAAOA,EACZpD,KAAKkD,KAAOA,CAChB,EAEG,MAAMU,UAAuBf,EAQhCE,YAAYE,EAAKY,EAAaC,EAAWV,EAAMF,GAC3CI,MAAM,UAAWL,EAAKC,EAAME,GAC5BpD,KAAKI,KAAO,iBACZJ,KAAK6D,YAAcA,EACnB7D,KAAK8D,UAAYA,EACjB9D,KAAKoD,KAAOA,EACZpD,KAAKkD,KAAOA,CAChB,EAEG,MAAMa,UAAwBlB,EAQjCE,YAAYE,EAAKG,EAAMS,EAAaC,EAAWZ,GAC3CI,MAAM,QAASL,EAAKC,EAAME,GAC1BpD,KAAKI,KAAO,kBACZJ,KAAKkD,KAAOA,EACZlD,KAAKoD,KAAOA,EACZpD,KAAK6D,YAAcA,EACnB7D,KAAK8D,UAAYA,CACrB,CAMAE,gBAAgBf,EAAKgB,EAAOC,EAAOf,WAC/B,IAAKc,EACD,OAAO,IAAIF,EAAgBd,OAAKE,OAAWA,OAAWA,OAAWA,GAErE,MAAMU,EAA2C,iBAAtBI,EAAMJ,YAA2BI,EAAMJ,iBAAcV,EAC1EW,EAAaI,GAAkC,iBAAnBA,EAAKJ,UACjCI,EAAKJ,UACuB,iBAApBG,EAAMH,UAAyBG,EAAMH,eAAYX,EAC/D,OAAO,IAAIY,EAAgBd,EAAKgB,EAAMb,KAAMS,EAAaC,EAAWG,EAAMf,KAC9E,EAEG,MAAMiB,UAAyBtB,EAKlCE,YAAYqB,EAAOC,GACf,IAqBIjB,EACAF,EACAoB,EAvBArB,EAAM,UACW,iBAAVmB,EACPnB,EAAMmB,EAGFA,aAAiBD,GAGZC,aAAiBvB,EAFtBI,EAAMmB,EAAMnB,IAKPmB,aAAiBtB,QAElBG,EADe,UAAfmB,EAAMb,KACAa,EAAMG,QAGN,GAAGH,EAAMb,SAASa,EAAMG,gBAQ3BpB,IAAXkB,GACAjB,OAAOD,EACPD,OAAOC,IAGFmB,EAAU,kBAAkBE,KAAKH,KACtCjB,EAAOqB,SAASH,EAAQ,IACxBpB,EAAOoB,EAAQ,KAGVA,EAAU,aAAaE,KAAKH,KACjCjB,EAAOqB,SAASH,EAAQ,IACxBpB,EAAO,eAGPE,EAAO,EACPF,EAAOmB,GAEXf,MAAM,SAAUL,EAAKC,EAAME,GAC3BpD,KAAKI,KAAO,mBACZJ,KAAKqE,OAASA,EACdrE,KAAKoD,KAAOA,EACZpD,KAAKkD,KAAOA,CAChB,EAEG,MAAMwB,UAAwB7B,EAMjCE,YAAYE,EAAKC,EAAME,GACnBE,MAAM,UAAWL,EAAKC,EAAME,GAC5BpD,KAAKkD,KAAOA,EACZlD,KAAKoD,KAAOA,CAChB,qIC1JG,MAAMuB,EACT5B,YAAY6B,GAAS,EAAOC,EAAc,GAAIC,EAAiB,GAAIC,EAAU,IACzE/E,KAAK4E,OAASA,EACd5E,KAAK8E,eAAiBA,EACtB9E,KAAKgF,QAAUD,EACf/E,KAAK6E,YAAc,CAAC,oBAAqB,kBAAmB,iBAAkB,qBAAsB,mBACpG,IAAK,MAAMI,KAASJ,EAChB7E,KAAK6E,YAAY5E,KAAKgF,EAE9B,EAKG,MAAMC,EAITnC,YAAYoC,GAKRnF,KAAKoF,aAAe,IAAKD,EAAIE,mBAI7BrF,KAAKsF,cAAgB,CAAC,EAKtBtF,KAAKuF,YAAc,IAAIC,IAIvBxF,KAAKyF,OAAS,EAIdzF,KAAK0F,WAAa,EAIlB1F,KAAK2F,aAAc,EAEnB3F,KAAK4F,UAAW,EAChB5F,KAAK6F,OAASV,EAEdnF,KAAK8F,QAAU,OAEf9F,KAAK+F,WAAa,KAElB/F,KAAKgG,YAAcb,EAAIc,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAItG,OAAO6C,KAAKoE,IAAKG,SAAU,IAAId,QAEjHxF,KAAKuG,QAAU,CAAEH,YAAY,EAAOC,MAAO,IAAIb,IAAOc,SAAU,IAAId,KACpExF,KAAKgG,YAAY,GAAKhG,KAAKuG,QAG3BvG,KAAKwG,UAAY,CACbC,YAAa,EACbC,oBAAqB,EACrBC,YAAa,EACbC,UAAW,GAIf5G,KAAK6G,mBAAqB,CACtBC,aAAc,EACdC,eAAgB,EAChBC,mBAAoB,EACpBC,QAAS,GAKbjH,KAAKkH,kBAAmB,EACxBlH,KAAKmH,WAAa,GAElBnH,KAAKoH,4BAA8B,EACnCpH,KAAKqH,6BAA+B,EACpCrH,KAAKsH,+BAAiC,EACtCtH,KAAKuH,gCAAkC,EACvCvH,KAAKwH,YAAcrC,EAAIqC,WAC3B,CACAxD,yBAAyBT,GAIrB,MAAO,m+VAAm+VkE,KAAKlE,EACn/V,CAIAmE,WAAWC,EAAMC,GAAc,EAAOC,EAAU,GAE5C,GAAI7H,KAAKwG,UAAUC,YAAc,EAC7B,MAAO,GAEX,MAAMpC,EAASsD,EAAKvE,KAAOyE,EAC3B,IAAIC,EAWJ,GATIA,EADqB,iBAAdH,EAAKvE,KACA,UAEc,iBAAduE,EAAKzE,KACL,IAAImB,IAGJ,IAAIA,KAAUsD,EAAKzE,QAG9B0E,EAAa,CACd,GAAIE,IAAc9H,KAAK+F,WACnB,MAAO,GAEX/F,KAAK+F,WAAa+B,CACtB,CAEA,MAAMC,EAAeC,KAAKC,UAAUH,GAEpC,IAAII,EAAY,GAqBhB,OApBIlI,KAAKwH,YAAYW,WAEbnI,KAAKwH,YAAYY,gBACjBF,GAAa,+BAA+BlI,KAAKwH,YAAYY,wBAChDL,QAGb1D,GAAU,IACNrE,KAAKwH,YAAYa,SAAW,IAC5BH,GAAa,oBAAoBlI,KAAKwH,YAAYa,qBAGtDrI,KAAK0F,YAAc,EACnB1F,KAAK2F,aAAc,EACnBuC,GAAa,iCAAiC7D,eAGlD6D,GAAa,kCAGV,aAAaH,KAAkBG,CAC1C,CAKAI,QAAQ/E,GACJ,OAAgC,IAA5BvD,KAAKgG,YAAYjM,OAEV,iBAAoBiO,KAAKC,UAAU1E,MAItC2B,EAAQqD,kBAAkBhF,GACnBA,EAGA,UAAUyE,KAAKC,UAAU1E,KAG5C,CAKAS,mBAAmBT,GACf,GAAIA,EAAKrK,QAAQ,OAAS,EAAG,CACzB,MAAMqH,EAAIgD,EAAKrJ,MAAM,MAGrB,MAAO,GAFOqG,EAAE,OACF2E,EAAQsD,YAAYjI,EAAE,KAExC,CACA,IAAIkI,EAAQlF,EAAKtJ,QAAQ,UAAW,IAIpC,MAHc,KAAVwO,IACAA,EAAQlF,GAELkF,CACX,CAEAzE,iBAAiB2D,GACb,MAAO,WAAWA,KACtB,CAEAe,YAAYf,GACR,MAAMgB,EAAahB,EAAKiB,MACxB,OAAO5I,KAAK0H,WAAWC,GAAM,GACzB,aAAagB,kBAA2BA,QAChD,CAOAE,eAAe1D,EAAK2D,GAChB,IAAI/K,EAAO,GAEXA,GAAQ,kCAAkCiK,KAAKC,UAAU9C,EAAI1C,eAC7D1E,GAAQ,yBACRA,GAAQ,wBACRA,GAAQ,wCACRA,GAAQ,oCACRA,GAAQ,iDACRA,GAAQ,iDACRA,GAAQ,qDACRA,GAAQ,sCAAsCiK,KAAKC,UAAU9C,EAAI4D,kBACjEhL,GAAQ,mBACRA,GAAQ,6BACRA,GAAQ,mBAAmBiC,KAAKwH,YAAYW,cAE5CpK,GAAQ,qBAAuBiK,KAAKC,UAAUjI,KAAKmH,YAAc,MAEjE,IAAI6B,EAAe,GACnB,IAAK,MAAMrK,KAAOqB,KAAKoF,aAAc,CACjC,MAAM1E,EAAIV,KAAKoF,aAAazG,GAAKsK,GAEjCD,GACI,qBAAqBrK,cAFTqB,KAAKoF,aAAazG,GAAKuK,QAAU,OAAS,iCAG/BvK,OAAS+B,2BACV/B,OAC9B,CAKA,GAJqB,KAAjBqK,IACAjL,GAAQ,uBAA2BiL,GAGnCF,EAAIlE,OAAQ,CACZ,IAAIuE,EAAW,wBACf,IAAK,MAAMxK,KAAOqB,KAAKsF,cAAe,CAElC6D,GAAY,GADFnJ,KAAKsF,cAAc3G,GAAKsK,QAEtC,CACiB,KAAbE,IACApL,GAAQ,wBACRA,GAAQoL,EAAW,KAE3B,CACA,OAAOpL,CACX,CAKAqL,UAAUC,GACN,OAAOrJ,KAAK6F,OAAOuD,UAAUC,EACjC,CAMAC,gBAAgB/F,EAAM8F,GAClBrJ,KAAK6F,OAAOyD,gBAAgB/F,EAAM8F,EACtC,CAOAE,cAAcC,EAASC,EAAMJ,GACzBrJ,KAAK6F,OAAO0D,cAAcC,EAASC,EAAMJ,EAC7C,CAOAK,QAAQ/K,EAAKgL,EAAMV,GACfjJ,KAAK6F,OAAO6D,QAAQ/K,EAAKgL,EAAMV,EACnC,CAMAW,QAAQjL,GACJ,OAAOqB,KAAK6F,OAAO+D,QAAQjL,EAC/B,CAIAkL,iBAAiBC,GACb,GAAiB,UAAbA,EAAI1J,KACJ,MAAM,cAAyB,kCAAmC0J,GAGtE,MAAMC,EAAW,GAEXC,EAAcrC,IAChB,IAAKA,EAAKsC,MACN,OAEJ,MAAMC,EAAavC,EAAKsC,iBAAiB/H,MAASyF,EAAKsC,MAAQ,CAACtC,EAAKsC,OACrE,IAAK,IAAI1L,EAAI,EAAGA,EAAI2L,EAAUnQ,OAAQwE,IAAK,CACvC,MAAMjF,EAAI4Q,EAAU3L,GACpB,GAAe,aAAXjF,EAAE8G,KAAqB,CACvB,IAAK9G,EAAEiK,KACH,MAAM,IAAIT,MAAM,qCAEpB,MAAMS,EAAOjK,EAAEiK,KAAKqF,MACpB5I,KAAKuF,YAAY4E,IAAI5G,GAErBvD,KAAK6F,OAAOI,WAAW,GAAG1C,GAAQ,WAAc,EAChDvD,KAAKgG,YAAY,GAAGK,MAAM8D,IAAI5G,GAC9B,MAAM6G,EAAQ9Q,EAAM,KAAE8Q,KACtBpK,KAAKoF,aAAa7B,GAAQ,CACtBoG,KAAMS,EAAKT,KAEXV,GAAI,OACJ7I,KAAM,OACN8I,QAAS5P,EAAE4P,SAEfa,EAAS9J,KAAK,CAAEsD,OAAMoE,KAAMrO,GAEhC,MAEK,GAAe,eAAXA,EAAE8G,KAAuB,CAC9B,IAAK9G,EAAE2Q,MACH,SAEiB,UAAjB3Q,EAAE2Q,MAAM7J,KACR4J,EAAW1Q,EAAE2Q,OAGbD,EAAW1Q,EAEnB,MACK,GAAe,wBAAXA,EAAE8G,KAAgC,CACvC,IAAK9G,EAAE2Q,MACH,SAEiB,UAAjB3Q,EAAE2Q,MAAM7J,KACR4J,EAAW1Q,EAAE2Q,OAGbD,EAAW1Q,EAEnB,CACJ,GAGJ0Q,EAAWF,GAEX,MAAMO,EAAe,IAAI7E,IACU,IAA/BxF,KAAKwG,UAAUG,aACf0D,EAAaF,IAAI,MAErBnK,KAAKuG,QAAU,CAAEH,YAAY,EAAOC,MAAOgE,EAAc/D,SAAU,IAAId,KACvExF,KAAKgG,YAAchG,KAAK6F,OAAOI,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAItG,OAAO6C,KAAKoE,IAAKG,SAAU,IAAId,QACzHxF,KAAKgG,YAAY,GAAKhG,KAAKuG,OAC/B,CAKA+D,QAAQ3C,EAAMmB,GACV,MAAMyB,EAASvK,KAAK0H,WAAWC,GAAM,GAAS3H,KAAKwK,SAAS7C,GAAM,GAClE,OAAImB,EAAIlE,OACG,GAGA2F,CAEf,CAKAC,SAAS7C,EAAM8C,GACX,IAAK9C,EACD,MAAO,GAEX,IAAI5J,EAAO,GACX,GAAI4J,aAAgBzF,MAAO,CACvB,IAAK,IAAI3D,EAAI,EAAGA,EAAIoJ,EAAK5N,OAAQwE,IAAK,CAClC,MAAMlF,EAAIsO,EAAKpJ,GACfR,GAAQiC,KAAKwK,SAASnR,EAAGoR,EAC7B,CACA,OAAO1M,CACX,CACA,GAAa,OAAT4J,EACA,MAAO,OAEX,QAAaxE,IAATwE,EACA,MAAO,YAEX,GAAsB,iBAAX,EACP,MAAO,GAAKA,EAGhB,OAAQA,EAAKvH,MACT,IAAK,MACD,MACJ,IAAK,QACD,IAAKuH,EAAKsC,MACN,OAAOlM,EAGX,MAAM2M,EAAU/C,EAAKsC,iBAAiB/H,MAASyF,EAAKsC,MAAQ,CAACtC,EAAKsC,OAClE,IAAK,IAAI1L,EAAI,EAAGA,EAAImM,EAAO3Q,OAAQwE,IAAK,CACpC,MAAMoM,EAAID,EAAOnM,GACjBR,GAAQiC,KAAKwK,SAASG,GAAG,EAC7B,CACA,MACJ,IAAK,UACL,IAAK,MACD5M,GAAQiC,KAAK4K,YAAYjD,GACzB,MACJ,IAAK,QACD5J,GAAQiC,KAAK6K,cAAclD,EAAM,SACjC,MACJ,IAAK,WACD5J,GAAQiC,KAAK6K,cAAclD,EAAM,YACjC,MACJ,IAAK,MACD5J,GAAQ,qBACR,MACJ,IAAK,SACDA,GAAQ4J,EAAKiB,MACb,MACJ,IAAK,SACD7K,GAAQiC,KAAK8K,WAAWnD,GACxB,MACJ,IAAK,gBACD5J,GAAQiC,KAAK+K,gBAAgBpD,GAC7B,MACJ,IAAK,oBACD5J,GAAQiC,KAAKgL,oBAAoBrD,GACjC,MACJ,IAAK,MACD5J,GAAQiC,KAAKiL,QAAQtD,GACrB,MACJ,IAAK,MACD5J,GAAQiC,KAAKkL,QAAQvD,GACrB,MACJ,IAAK,OACL,IAAK,WACD5J,GAAQiC,KAAKmL,WAAWxD,GACxB,MACJ,IAAK,KACL,IAAK,OACD5J,GAAQiC,KAAKoL,OAAOzD,GACpB,MACJ,IAAK,SACD5J,GAAQiC,KAAKqL,WAAW1D,GACxB,MACJ,IAAK,MACD5J,GAAQ,KAAOiC,KAAKwK,SAAS7C,EAAKiB,OAAO,GAAQ,SACjD,MACJ,IAAK,OACL,IAAK,eACL,IAAK,YACD7K,GAAQiC,KAAKsL,aAAa3D,EAAM8C,GAChC,MACJ,IAAK,KACD1M,GAAQiC,KAAKuL,OAAO5D,GACpB,MACJ,IAAK,SACD5J,GAAQiC,KAAKwL,WAAW7D,GACxB,MACJ,IAAK,MACD5J,GAAQiC,KAAKyL,QAAQ9D,GACrB,MACJ,IAAK,UACD5J,GAAQiC,KAAK0L,YAAY/D,GACzB,MACJ,IAAK,eACD5J,GAAQiC,KAAK2L,gBAAgBhE,GAC7B,MACJ,IAAK,aACD5J,GAAQiC,KAAK4L,cAAcjE,EAAM8C,GACjC,MACJ,IAAK,sBACD1M,GAAQiC,KAAK6L,uBAAuBlE,EAAM8C,GAC1C,MACJ,IAAK,QACD1M,GAAQiC,KAAK8L,UAAUnE,GACvB,MACJ,IAAK,YACD5J,GAAQiC,KAAK+L,cAAcpE,GAC3B,MACJ,IAAK,SACD5J,GAAQiC,KAAKgM,WAAWrE,GACxB,MACJ,IAAK,YACD5J,GAAQiC,KAAKiM,aAAatE,GAC1B,MACJ,IAAK,OACD5J,GAAQiC,KAAKkM,aAAavE,GAC1B,MACJ,IAAK,aACD5J,GAAQiC,KAAKmM,cAAcxE,GAC3B,MACJ,IAAK,WACD5J,GAAQiC,KAAKoM,YAAYzE,GACzB,MACJ,IAAK,WACD5J,GAAQiC,KAAKqM,YAAY1E,GACzB,MACJ,IAAK,OACD5J,GAAS4J,EAAU,MAAI,OAAS,QAChC,MACJ,IAAK,OACD5J,GAAQ,OACR,MACJ,IAAK,WACDA,GAAQiC,KAAKsM,YAAY3E,GACzB,MACJ,IAAK,WACD5J,GAAQiC,KAAKuM,YAAY5E,GACzB,MACJ,IAAK,SACD5J,GAAQiC,KAAKwM,WAAW7E,GACxB,MACJ,IAAK,aACD5J,GAAQiC,KAAKyM,cAAc9E,GAC3B,MACJ,IAAK,UACD5J,GAAQiC,KAAK0I,YAAYf,GACzB,MACJ,QACI,MAAM,IAAI7E,MAAM,8BAAgC6E,EAAKvH,MAE7D,OAAOrC,CACX,CAEA2O,QAAQnJ,GAEJ,GAAIvD,KAAKgG,YAAYjM,OAAS,GAAKiG,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GACtD,MAAO,CAAEhF,EAAGyB,KAAKgG,YAAYjM,OAAS,EAAGwJ,OAAMqJ,OAAO,EAAMC,GAAI7M,KAAKsI,QAAQ/E,IAGjF,IAAK,IAAIhF,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAIyB,KAAKgG,YAAYzH,GAAG8H,MAAMsG,IAAIpJ,GAG9B,MAAO,CAAEhF,IAAGgF,OAAMqJ,OAAO,EAAOC,GAAI,cAActO,MAAMyJ,KAAKC,UAAU1E,OAG/E,OAAO,IACX,CAMAuJ,OAAOvJ,EAAMwJ,GACT,MAAMC,EAAMhN,KAAK0M,QAAQnJ,GACnB0J,EAAMF,EAAS3J,KACrB,GAAY,OAAR4J,EAAc,CAKd,GAAa,OAATzJ,GAA0B,OAATA,GAA0B,OAATA,GAA0B,SAATA,QAInD,GAAIvD,KAAKkH,iBAAkB,CAEvB,MAAMgG,EAAW3J,EAAKtJ,QAAQ,eAAgB,MAC9C+F,KAAK6F,OAAOsH,YAAYC,KAAK,MAAMF,gBAAwBH,EAC/D,CAGJ,OADA/M,KAAKuG,QAAQF,MAAM8D,IAAI5G,GAChBvD,KAAKsI,QAAQ/E,EACxB,CAGA,GAAU,IAFAyJ,EAAIzO,EAED,CACT,MAAM8O,EAAKrN,KAAK6F,OAAOyH,YAAY/J,GACnC,IAAK8J,EACD,MAAO,GAAGL,EAAIH,WAAWI,MAE7B,GAAgB,UAAZI,EAAGjN,MAAgC,QAAZiN,EAAGjN,KAC1B,OAAO4M,EAAIH,GAEf,GAAgB,SAAZQ,EAAGjN,KAAiB,CACpB,IAAKiN,EAAG1D,MAA2B,IAAnB0D,EAAG1D,KAAK5P,OACpB,MAAO,IAAIiT,EAAIH,QAEnB,MAAM,cAAyB,IAAItJ,mCAAuCwJ,EAC9E,CACA,MAAM,cAAyB,IAAIxJ,mBAAuBwJ,EAC9D,CACA,OAAOC,EAAIH,EACf,CACA1B,WAAWxD,GACP,MAAMpE,EAAOoE,EAAKiB,MAClB,OAAO5I,KAAK8M,OAAOvJ,EAAMoE,EAC7B,CACAiD,YAAYjD,GACR,IAAI4F,EAAaC,OAAO7F,EAAKiB,OAC7B2E,EAAaA,EAAWtT,QAAQ,MAAO,KACvC,MAAMoK,EAASrE,KAAK0H,WAAWC,GAAM,GACrC,MAAmB,KAAf4F,GAAgC,KAAXlJ,EACd,IAEQ,KAAfkJ,EACO,IAAMlJ,EAAS,KAEnB,IAAMA,EAAS,KAAOkJ,EAAa,IAC9C,CACAf,WAAW7E,GAEP,GAAI3H,KAAKuG,QAAQF,MAAMsG,IAAI,OACvB,MAAM,cAAyB,6BAA8BhF,GAEjE,MAAMsF,EAAMjN,KAAK0H,WAAWC,GAAM,GAClC,IAAIiB,EACJ,GAAIjB,EAAKiB,MACLA,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,OAEjC,IAAmC,IAA/B5I,KAAKwG,UAAUG,YAIpB,OAAOsG,EAAM,UAHbrE,EAAQ5I,KAAKsI,QAAQ,KAIzB,CACA,GAAyC,IAArCtI,KAAKoH,4BACL,OAAO6F,EAAM,UAAUrE,KAEtB,CACD,MAAM6E,EAAYzN,KAAKmH,WAAWpN,OAMlC,OALAiG,KAAKmH,WAAWlH,KAAK,CACjBgD,IAAK,2BACLC,KAAMyE,EAAKzE,KACXE,KAAMuE,EAAKvE,OAER6J,EAAM,sBAAsBrE,MAAU6E,MACjD,CACJ,CACA5C,cAAclD,EAAM1K,GAEhB,IAAK+C,KAAK4F,SAAU,CAChB,MAAM8H,EAAgB,aAARzQ,EAAsB,MAAQ,MAC5C,MAAM,cAAyB,IAAIyQ,gCAAoC/F,EAC3E,CACA,OAAO3H,KAAK0H,WAAWC,GAAQ1K,EAAM,GACzC,CACA0Q,kBAAkBhG,EAAMpE,GAEpB,IAAIqK,EAAkC,GAClCC,EAAgC,GACpC,GAA6C,IAAzC7N,KAAK6G,mBAAmBC,aAAoB,CAC5C,IAAInI,EAAM4E,EACL5E,SAC8C,IAApCqB,KAAK6G,mBAAmBI,UAC/BjH,KAAK6G,mBAAmBI,QAAU,GAEtCjH,KAAK6G,mBAAmBI,UACxBtI,EAAM,SAASqB,KAAK6G,mBAAmBI,WAE3C2G,EAcI,g3BAAUjP,sBAEdkP,EAAgC,0CACpC,CACA,IAAIC,EAAuB,GAC3B,MACMzD,EAAe,IAAI7E,IACU,IAA/BxF,KAAKwG,UAAUG,aACf0D,EAAaF,IAAI,MAErBnK,KAAKuG,QAAU,CAAEH,YAAY,EAAMC,MAAOgE,EAAc/D,SAAU,IAAId,KAEtExF,KAAKgG,YAAY/F,KAAKD,KAAKuG,SAE3BuH,GAAwB,0BAExBA,GAAwB,uBAExB,MAAMC,EAAe7L,MAAM8L,KAAKhO,KAAKuG,QAAQF,MAAM4H,UACnD,IAAIlQ,EAAO,GAEX,MAAMqM,EAAS7G,EAAoBoE,EAAKpE,KAAK6G,KAAtBzC,EAAKyC,KAC5B,IAAK,IAAI7L,EAAI,EAAGA,EAAI6L,EAAK8D,SAASnU,OAAQwE,IAAK,CAC3C,MAAM4P,EAAO/D,EAAK8D,SAAS3P,GACkB,IAAzCyB,KAAKuH,gCACLxJ,GAAQ,KAAKiC,KAAKsI,QAAQ6F,kBAAqB5P,QAG/CR,GADKwF,EACG,KAAKvD,KAAKsI,QAAQ6F,iEAAoE5K,SAAYvD,KAAKsI,QAAQ6F,gCAAmCxG,EAAKzE,cAAcyE,EAAKvE,kCAAkC7E,SAG5M,KAAKyB,KAAKsI,QAAQ6F,mEAAsEnO,KAAKsI,QAAQ6F,gCAAmCxG,EAAKzE,cAAcyE,EAAKvE,kCAAkC7E,SAE9MyB,KAAKuG,QAAQF,MAAM8D,IAAIgE,EAC3B,CAEI5K,IACAvD,KAAKuF,YAAY4E,IAAI5G,GACrBvD,KAAKgG,YAAY,GAAGK,MAAM8D,IAAI5G,QACEJ,IAA5BnD,KAAKoF,aAAa7B,KAElBvD,KAAKoF,aAAa7B,GAAQ,CACtBoG,KAAMhC,EAAKpE,KAAK6G,KAAKT,KAErBV,GAAI,OACJ7I,KAAM,OACN8I,SAAS,KAKrB,MAAMkF,EAAiBpO,KAAK2F,YAC5B3F,KAAK2F,YAAuB3F,KAAKwH,YAAYW,SAE7CpK,GADciC,KAAKwK,SAAS7C,EAAKsC,OAAO,GAC1B/P,MAAM,MAAMgM,KAAK9C,GAAS,KAAOA,IAAMvC,KAAK,MAAQ,KAE/B,IAA/Bb,KAAKwG,UAAUG,cACf5I,GAAQ,aAAaiC,KAAKsI,QAAQ,aAGtCvK,GAAQ8P,EAEJtK,GAAQvD,KAAK2F,cACb3F,KAAKoF,aAAa7B,GAAM2F,SAAU,GAItC,IAAK,MAAM3F,KAAQrB,MAAM8L,KAAKhO,KAAKuG,QAAQF,MAAM4H,UACxCF,EAAaM,SAAS9K,IACnB2B,EAAQqD,kBAAkBhF,KAC1BuK,GAAwB,SAASvK,QAIV,IAA/BvD,KAAKwG,UAAUG,cACXzB,EAAQqD,kBAAkB,MAC1BuF,GAAwB,mBAGxBA,GAAwB,KAAK9N,KAAKsI,QAAQ,eAqBlD,OAdAvK,GAHaiC,KAAgB,YAlvBV,uBAFL,kBAuvBD4N,EAAkCE,GAD9B,KAAO9N,KAAK0H,WAAWC,GAAM,EAAM,GAAK,MACwB5J,EAjFhE,GAkFjBA,GAvvBc,KAyvBVwF,IACAvD,KAAKoF,aAAa7B,GAAM0F,GAAKlL,EAC7BiC,KAAKoF,aAAa7B,GAAM2F,QAAUlJ,KAAK2F,YACvCyE,EAAKlB,QAAUlJ,KAAK2F,aAExB3F,KAAK2F,YAAcyI,EACnBpO,KAAKgG,YAAYsI,MACjBtO,KAAKuG,QAAUvG,KAAKgG,YAAYhG,KAAKgG,YAAYjM,OAAS,GACtDwJ,IACAvD,KAAK6F,OAAOI,WAAW,GAAG1C,GAAQxF,GAE/BA,CACX,CACAuO,YAAY3E,GACR,MAAMpE,EAAOoE,EAAKpE,KAAKqF,MACvB,IAAI7K,EAAO,yBAAyBwF,mBAYpC,OATAxF,GAAQ,MADMiC,KAAKwK,SAAS7C,EAAKsC,OAAO,WAGxCjK,KAAKsF,cAAc/B,GAAQ,CACvBoG,KAAMhC,EAAKpE,KAAK6G,KAAKT,KACrBV,GAAIlL,EACJqC,KAAM,aAIH,EACX,CACAmM,YAAY5E,GAKR,IAAKA,EAAKpE,KACN,MAAO,GAEX,MAAMA,EAAO2B,EAAQsD,YAAYb,EAAKpE,KAAKqF,OAE3C,OADA5I,KAAK2N,kBAAkBhG,EAAMpE,GACtB,EACX,CACA8I,YAAY1E,GACR,OAAO3H,KAAK2N,kBAAkBhG,EAAM,GACxC,CACAyE,YAAYzE,GAOR,MAAO,IANMA,EAAKiB,MACI1C,KAAK9M,GAGhB,GAFK4G,KAAKwK,SAASpR,EAAEuF,KAAK,MACrBqB,KAAKwK,SAASpR,EAAEwP,OAAO,OAGjB/H,KAAK,KAAO,GACtC,CACAsL,cAAcxE,GAKV,MAAO,IAJMA,EAAKiB,MACI1C,KAAK9M,GAChB4G,KAAKwK,SAASpR,GAAG,KAENyH,KAAK,KAAO,GACtC,CACAqL,aAAavE,GACT,MAAMpE,EAAOvD,KAAKwK,SAAS7C,EAAKpE,MAAM,GAChCgL,EAAO5G,EAAK6G,MAClB,IAAIzQ,EAAOwF,EACX,IAAKgL,EACD,OAAOxQ,EAEX,IAAK,IAAIQ,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAQwE,IAAK,CAElCR,GAAQ,IADIiC,KAAKwK,SAAS+D,EAAKhQ,IAAI,GACf,GACxB,CACA,OAAOR,CACX,CACAkO,aAAatE,GACT,MAAMpE,EAAOvD,KAAKwK,SAAS7C,EAAKpE,MAAM,GAChCgL,EAAO5G,EAAK6G,OAAS,GAC3B,IAAIC,EAAW,GACX1Q,EAAOwF,EACPmL,EAAY,GAEhB,GAAI/G,EAAKgH,UAAW,CAChB,MAAMC,EAAe,kEACrBH,GAAY,oBAAoBlL,0BAA6BA,OAAUqL,yBAAoCrL,WAC3G,IAAK,IAAIhF,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAS,EAAGwE,IAAK,CAEtCmQ,GAAa,IADD1O,KAAKwK,SAAS+D,EAAKhQ,IAAI,MAEnCkQ,GAAY,YAAYlQ,YAAYgF,IAAOmL,0BAAkCnL,IAAOmL,OAAeE,OAEvG,CACAH,GAAY,IAChB,CAEA,IAAK,IAAIlQ,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAQwE,IAAK,CAElCR,GAAQ,IADIiC,KAAKwK,SAAS+D,EAAKhQ,IAAI,GACf,GACxB,CAEA,IAAIqK,EAAQ,KAOZ,GANmC,IAA/B5I,KAAKwG,UAAUG,cACfiC,EAAQ5I,KAAKsI,QAAQ,OAErBX,EAAKiB,QACLA,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBjB,GAEvD5J,GAAQ,MAAQ6K,EAAQ,MAGxB,OADY5I,KAAK0H,WAAWC,GAAM,GAAS8G,EAAW1Q,CAE1D,CACA8Q,YAAYlH,GACR,MAAMmH,EAAU9O,KAAK4F,SACrB5F,KAAK4F,UAAW,EAChB,IACI,OAAO5F,KAAKwK,SAAS7C,GAAM,EAC/B,CACA,QACI3H,KAAK4F,SAAWkJ,CACpB,CACJ,CACArD,QAAQ9D,GAEJ,IAAIwG,EACJ,GAAkB,OAAdxG,EAAKwG,KAAe,CACpB,MAAMY,EAAUpH,EAAKwG,KAAKvF,MAC1B5I,KAAKuG,QAAQF,MAAM8D,IAAI4E,GACvBZ,EAAOnO,KAAKsI,QAAQyG,EACxB,MAEI/O,KAAKuG,QAAQF,MAAM8D,IAAI,SACvBgE,EAAOnO,KAAKsI,QAAQ,SAExB,MAAM0G,EAAShP,KAAKyF,SACdwJ,EAAO,UAAUD,IAEjBE,EAAOlP,KAAKwK,SAAS7C,EAAKqG,MAAM,GAChCmB,EAAOnP,KAAKwK,SAAS7C,EAAKyH,IAAI,GAC9BC,EAAW1H,EAAK0H,SACtB,IAAIC,EAAM,IACN3H,EAAK2H,KAAoB,SAAb3H,EAAK2H,MACjBA,EAAMtP,KAAKwK,SAAS7C,EAAK2H,KAAK,IAGlC,MAAMrF,EAAQjK,KAAK6O,YAAYlH,EAAKsC,OAE9BsF,EAAU,aAAaP,IACvBQ,EAAQ,WAAWR,IACzB,IAAIS,EAAa,GACkB,IAA/BzP,KAAKwG,UAAUG,cACf8I,EAAa,GAAGzP,KAAKsI,QAAQ,YAEjC,MAAMvK,EAAO,eAAeiR,aACfO,OAAaL,aACbM,OAAWL,WACbI,QAAcC,0BACPP,OAAUM,MAAYN,QAAWO,MAAUP,OAAUK,aAC5DG,IAAatB,OAAUc,WACvBhF,oCAGEoF,oBACOJ,OAAUM,MAAYN,QAAWO,MAAUP,OAAUK,eAC5DG,IAAatB,OAAUc,aACvBhF,kCAGS+E,OACtB,OAAOhP,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACA2N,YAAY/D,GACR,IAAInG,EACJ,GAAoB,OAAhBmG,EAAKnG,OAAiB,CACtB,GAAmC,IAA/BxB,KAAKwG,UAAUG,YAIf,MAAM,cAAyB,iBAAkBgB,GAHjDnG,EAASxB,KAAKsI,QAAQ,KAK9B,MAEI9G,EAASxB,KAAKwK,SAAS7C,EAAKnG,QAAQ,GAGxC,IAAIkO,EAAQ,aACR/H,EAAKpE,OACLmM,EAAQ1P,KAAKsI,QAAQX,EAAKpE,KAAKqF,OAC/B5I,KAAKuG,QAAQF,MAAM8D,IAAIxC,EAAKpE,KAAKqF,QAErC,MAAMqB,EAAQjK,KAAK6O,YAAYlH,EAAKsC,OAC9B0F,EAAK3P,KAAKyF,SAEhB,IAAIgK,EAAa,GACkB,IAA/BzP,KAAKwG,UAAUG,cACf8I,EAAa,GAAGzP,KAAKsI,QAAQ,YAEjC,MAAMvK,EAAO,sBAAsB4R,KAAMnO,uBAClBmO,uBAAwBA,6BACnBA,2BAA4BA,cAC7CD,OAAWD,mBAA4BE,YAAaA,kCACpCA,WAChB1F,eAGX,OAAOjK,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACA4N,gBAAgBhE,GACZ,MAAMgI,EAAK3P,KAAKyF,SACVmD,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,GAClCqB,EAAQjK,KAAK6O,YAAYlH,EAAKsC,OAEpC,IAAIwF,EAAa,GACkB,IAA/BzP,KAAKwG,UAAUG,cACf8I,EAAa,GAAGzP,KAAKsI,QAAQ,YAEjC,MAAMvK,EAAO,oBAAoB4R,OAAQ/G,sBACnB+G,iBAAkBA,qBAAsBA,aAAcA,YACnEF,wBAA+BE,SAC7B1F,EAAQ,QACnB,OAAOjK,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CAKA6N,cAAcjE,EAAM8C,GAChB,IAAK9C,EAAKiI,QACN,MAAO,GAEX,MAAMC,EAAO,IAAK7P,KAAKwG,WACnBmB,EAAKiI,QAAQ,UACb5P,KAAKwG,UAAUC,cAEfkB,EAAKiI,QAAQ,aACb5P,KAAKwG,UAAUE,sBAEfiB,EAAKiI,QAAQ,UACb5P,KAAKwG,UAAUI,YAEfe,EAAKiI,QAAQ,SACb5P,KAAKwG,UAAUG,cAEnB,IACI,OAAO3G,KAAKwK,SAAS7C,EAAKsC,MAAOQ,EACrC,CACA,QACIzK,KAAKwG,UAAYqJ,CACrB,CACJ,CAKAhE,uBAAuBlE,EAAM8C,GACzB,MAAMoF,EAAO,IAAK7P,KAAK6G,oBACvB,IAAKc,EAAKiI,QACN,MAAO,GAEPjI,EAAKiI,QAAQ,UACb5P,KAAK6G,mBAAmBC,eAExBa,EAAKiI,QAAQ,aACb5P,KAAK6G,mBAAmBG,qBAExBW,EAAKiI,QAAQ,WACb5P,KAAK6G,mBAAmBE,iBAE5B,IACI,OAAO/G,KAAKwK,SAAS7C,EAAKsC,MAAOQ,EACrC,CACA,QACIzK,KAAK6G,mBAAqBgJ,CAC9B,CACJ,CACA/D,UAAUnE,GACN,MAEM5J,EAAO,UAFAiC,KAAKwK,SAAS7C,EAAKmI,MAAM,WACxB9P,KAAK6O,YAAYlH,EAAKsC,cAIpC,OAAOjK,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACAgO,cAAcpE,GACV,MACMoI,EAAQ,UADH/P,KAAKyF,WAEVqK,EAAO9P,KAAKwK,SAAS7C,EAAKmI,MAAM,GAEhC/R,EACF,gBAFUiC,KAAK6O,YAAYlH,EAAKsC,iBAGvB8F,OAAWD,aACXC,wCAEb,OAAO/P,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACAiO,WAAWrE,GACP,MAAMiB,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,GAClCoH,EAAQrI,EAAKqI,OAAS,GAC5B,IAAIC,EAAO,GACX,IAAK,IAAI1R,EAAI,EAAGA,EAAIyR,EAAMjW,OAAQwE,IAAK,CACnC,MAAM2R,EAASF,EAAMzR,GAAG,GAClB4R,EAASnQ,KAAK6O,YAAYmB,EAAMzR,GAAG,IACzC,GAAoB,QAAhB2R,EAAO9P,KACP6P,GAAQ,mBAEP,CAEDA,GAAQ,UADWjQ,KAAKwK,SAAS0F,GAAQ,OAE7C,CACAD,GAAQ,OAAOE,gBAEnB,CACA,MAAMpS,EAAO,WAAW6K,QACjBqH,SAEP,OAAOjQ,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACAwN,OAAO5D,GACH,MAAMyI,EAAOpQ,KAAKwK,SAAS7C,EAAKyI,MAAM,GAChCnG,EAAQjK,KAAKwK,SAAS7C,EAAKsC,OAAO,GAClCoG,EAAmC,OAArB1I,EAAK2I,YACnB,GACA,SAAWtQ,KAAKwK,SAAS7C,EAAK2I,aAAa,GAAS,OAC1D,OAAOtQ,KAAK0H,WAAWC,GAAM,GACzB,OAAOyI,WAAcnG,OAAaoG,EAAa,KACvD,CACA7E,WAAW7D,GAEP,MAEM4I,EAAU,WAFJvQ,KAAKyF,WAGjB,IAAI1H,EAAO,SAASwS,WACpB,MAAM7F,EAAU/C,EAAW,OAAIA,EAAK+C,OAAS,GAC7C,IAAK,IAAInM,EAAI,EAAGA,EAAImM,EAAO3Q,OAAQwE,IAAK,CACpC,MAAM0L,EAAQjK,KAAKwK,SAASE,EAAOnM,IAAI,GAAOtE,QAAQ,OAAQ,IAAM,KAWpE8D,GATkB,GAAGwS,mIADDvQ,KAAK0H,WAAWgD,EAAOnM,IAAI,SAMtC0L,qFAKb,CACAlM,GAAQ,aAAawS,OAErB,IAAIC,EAAY,KAAKD,6CAErB,GAAuB,MAAnB5I,EAAK8I,WAAoB,CAEzBD,GADiBxQ,KAAKwK,SAAS7C,EAAK8I,YAAY,GAAOxW,QAAQ,OAAQ,IAAM,IAEjF,CAYA,OAXA8D,GAAQ,SAASwS,kCAAwCC,QAEzDzS,GAAQ,gCACRA,GAAQ,SAASwS,6BACjBxS,GAAQ,mCACRA,GAAQ,WAAWwS,4BACnBxS,GAAQ,iBAAiBwS,cACzBxS,GAAQ,eAAewS,eAAqBA,gBAC5CxS,GAAQ,aACRA,GAAQ,OACRA,GAAQ,GAAGwS,iBACJvQ,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACA2S,wBAAwBC,EAAWC,EAAOjJ,GACtC,MAAMkJ,EAAO,GACPC,EAAO,CAAC,EACRC,EAAYpJ,EAAS,KAAIA,EAAKkJ,KAAO,GAC3C,IAAK,IAAItS,EAAI,EAAGA,EAAIwS,EAAShX,OAAQwE,IAAK,CACtC,MAAMyS,EAAMD,EAASxS,GACX,IAANA,GAAmB,OAARyS,GAA+C,IAA/BhR,KAAKwG,UAAUG,aAC1CkK,EAAK5Q,KAAKD,KAAKsI,QAAQ,OACvBwI,EAAKG,MAAO,GAGZJ,EAAK5Q,KAAKD,KAAKwK,SAASwG,GAAK,GAErC,CACA,MAAO,CAACH,EAAMC,EAClB,CACAI,gBACI,MAAMxS,EAAI,GACV,IAAK,MAAM6E,KAAQvD,KAAK6F,OAAOsL,SAC3BzS,EAAEuB,KAAKsD,GAEX,OAAO7E,CACX,CAOA4M,aAAa3D,EAAM8C,GACf,MAAM2G,EAAWlM,EAAQsD,YAAYb,EAAKpE,MACpCyJ,EAAMhN,KAAK0M,QAAQ0E,GACzB,GAAY,OAARpE,EACA,MAAM,cAAyB,MAAMoE,uBAAgCpR,KAAKkR,gBAAgBrQ,KAAK,MAAQ,IAAK8G,GAGhH,IAAI0J,EACJ,GAAc,IAAVrE,EAAIzO,EAAS,CAEb,GADA8S,EAAOrR,KAAK6F,OAAO+D,QAAQwH,IACtBC,EACD,MAAM,IAAIvO,MAAM,qBAAqBsO,0CAEzC,GAAkB,SAAdC,EAAKjR,KACL,MAAM,cAAyB,IAAIgR,gBAAwBzJ,EAEnE,MAEI0J,EAAOrR,KAAKoF,aAAagM,QAEZjO,IAATkO,IACAA,EAAO,CAAEC,aAAa,IAI9B,GAAkB,iBAAd3J,EAAKvH,KACL,OAAO4M,EAAIH,GAIf,MAAM0E,EAAWvR,KAAK0Q,wBAAwBU,EAAUC,EAAM1J,GACxDkJ,EAAOU,EAAS,GAChBC,EAAWD,EAAS,GAG1B,GADAvR,KAAKuF,YAAY4E,IAAIiH,GACJ,WAAbA,EACA,MAAO,iBAAiBP,EAAK,oCAAoCA,EAAK,gCAAgCA,EAAK,QAE1G,GAAiB,aAAbO,EACL,MAAO,+BAA+BP,EAAK,iBAG/CA,EAAK5Q,KAAK,UACV,IAAIwR,EAAU,WACVC,EAAY,GACZC,EAAU,GAQd,GANIhK,EAAKiK,SACLF,GAAa,6BACbC,GAAW,+BAID,IAAV3E,EAAIzO,GAAWyB,KAAKgG,YAAYjM,OAAS,IAAmB,IAAdsX,EAAKQ,MAA8C,IAA7B7R,KAAKwG,UAAUI,UAAiB,CAEpG,MAAMkL,EAAY,GAClB,IAAK,MAAMvO,KAAQrB,MAAM8L,KAAKhO,KAAKuG,QAAQF,MAAM4H,UACzC/I,EAAQqD,kBAAkBhF,IAC1BuO,EAAU7R,KAAK,CAAE8R,IAAK/J,KAAKC,UAAU1E,GAAOsJ,GAAI7M,KAAKsI,QAAQ/E,KAKrEmO,GAAa,8BAEb,IAAK,MAAMvL,KAAK2L,EACZJ,GAAa,mBAAmBvL,EAAE4L,UAAU5L,EAAE0G,QAKlD,IAAK,MAAM1G,KAAK2L,EACC,OAAT3L,EAAE0G,KACF8E,GAAW,GAAGxL,EAAE0G,wBAAwB1G,EAAE4L,UAGtD,CAEIP,EAASP,OACTS,GAAa,cAEjB,MAAMM,EAAS,CAACC,EAAM5Y,KAClB,IAAIkR,EAAS,GACb,IAAK,MAAMnH,KAAQ6O,EAAK/X,MAAM,MACb,KAATkJ,IACAmH,GAAU,KAAK2H,OAAO7Y,GAAK+J,EAAO,MAG1C,OAAOmH,CAAM,EAGX4H,EAAe,CAAE,QAAU,EAAM,SAAS,GAEhD,IAAIC,EACJ,GAA2C,IAAtCpS,KAAKqH,8BAAgD,IAAV2F,EAAIzO,GAAqD,IAAxCyB,KAAKsH,gCAAkD,IAAV0F,EAAIzO,EAC9G6T,EAAWvB,EAAKhQ,KAAK,SAEpB,CACD,MAAMwR,EAAQ,GACdxB,EAAKjS,SAASoS,IACV,GAAY,WAARA,IAA+C,IAA3BmB,EAAaf,GACjCiB,EAAMpS,KAAK,GAAG+Q,SAEb,CAED,MAAMvD,EAAYzN,KAAKmH,WAAWpN,OACpB,IAAViT,EAAIzO,EACJyB,KAAKmH,WAAWlH,KAAK,CACjBgD,IAAK,MAAMmO,0BACXlO,KAAMyE,EAAKzE,KACXE,KAAMuE,EAAKvE,OAIfpD,KAAKmH,WAAWlH,KAAK,CACjBgD,IAAK,UAAUmO,0BACflO,KAAMyE,EAAKzE,KACXE,KAAMuE,EAAKvE,OAInB,MAAMkP,EAAkB,KAARtB,EAAc,KAAOA,EACrCqB,EAAMpS,KAAK,eAAeqS,MAAW7E,MACzC,KAEJ2E,EAAWC,EAAMxR,KAAK,KAC1B,CACA,IAAI0R,EAAW,GAAGvF,EAAIH,MAAMuF,KAO5B,GANIf,EAAKnI,UACLuI,EAAU,SAASA,IACnBc,EAAW,SAASA,IACpBvS,KAAK0F,aACL1F,KAAK2F,aAAc,GAET,IAAVqH,EAAIzO,GAA0D,IAA/CyB,KAAK6G,mBAAmBG,mBAA0B,CACjE,IAAIrI,EAAMyS,EACLzS,SAC8C,IAApCqB,KAAK6G,mBAAmBI,UAC/BjH,KAAK6G,mBAAmBI,QAAU,GAEtCjH,KAAK6G,mBAAmBI,UACxBtI,EAAM,SAASqB,KAAK6G,mBAAmBI,WAE3CsL,EAAW,IAAId,+EAGCc,EAHL,6wBAgBP,SAASnB,uBACjB,CACA,IAAIrT,EAAO,GACX,GAAIsT,EAAKC,YAIGvT,EAFQ,KAAZ4T,EACkB,KAAdD,EACO,GAAGa,OAGH,GAAGb,KAAaa,OAIpB,GAAGb,WAAmBM,EAAOO,EAAU,qBAAqBP,EAAOL,EAAS,YAGtF,CAED,IAAIlC,EAAa,GACkB,IAA/BzP,KAAKwG,UAAUG,cACf8I,EAAa,GAAGzP,KAAKsI,QAAQ,YAG7BvK,EADc,KAAd2T,GAAgC,KAAZC,EACb,IAAIlC,IAAa8C,KAGR,KAAZZ,EACO,IAAIF,SAAeO,EAAO,GAAGN,cAAsBjC,KAAc8C,IAAY,kBAG7E,IAAId,SAAeO,EAAO,GAAGN,WAAmBM,EAAO,UAAUvC,IAAa8C,KAAa,oBAAoBP,EAAOL,EAAS,MAAO,mBAInI,OAAdhK,EAAKgC,MAAgC,KAAdhC,EAAKgC,OAAgBc,KAC5C1M,GAAQ,MAEhB,CAoBA,OAnBc,IAAViP,EAAIzO,GAAsD,IAA3CyB,KAAK6G,mBAAmBE,iBACvChJ,EAAO,sFAGSA,EAHT,gwBAgBH,SAASqT,uBAEVrT,CACX,CACAsN,WAAW1D,GACP,MAAM3M,EAAQgF,KAAKwK,SAAS7C,EAAK3M,OAAO,GAClCF,EAAOkF,KAAKwK,SAAS7C,EAAK7M,MAAM,GAGtC,OAFAkF,KAAK0F,aACL1F,KAAK2F,aAAc,EACZ,kCAAkC7K,aAAgBE,iBAC7D,CACAoQ,OAAOzD,GAEH,MAAM6K,EAAS,CACX,IAAK,OACLC,GAAI,KACJC,MAAO,KACP,MAAO,MACP,MAAO,MACPC,GAAI,IACJC,GAAI,IACJC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,GAAI,KACJC,QAAS,KACTC,QAAS,KACTC,SAAU,MACV,IAAK,KAET,IAAIC,EAAKzL,EAAK0L,UAAY,GACtBrY,EAAQgF,KAAKwK,SAAS7C,EAAK3M,OAAO,GAClCF,EAAOkF,KAAKwK,SAAS7C,EAAK7M,MAAM,GAUpC,MATW,MAAPsY,GAAqD,IAAvCpT,KAAKwG,UAAUE,sBACzBiB,EAAK7M,MAA2B,WAAnB6M,EAAK7M,KAAKsF,OACvBtF,EAAO,cAAcA,MAErB6M,EAAK3M,OAA6B,WAApB2M,EAAK3M,MAAMoF,OACzBpF,EAAQ,cAAcA,OAInB,MAAPoY,GAAqB,OAAPA,EACP,aAAatY,MAASE,MAGtB,OAAPoY,EACO,eAAetY,OAAUE,OAGhCwX,EAAOY,KACPA,EAAKZ,EAAOY,IAGT,IAAItY,KAAQsY,KAAMpY,KAC7B,CACAkQ,QAAQvD,GAEJ,IAAIiB,EAAQ,KAOZ,GANmC,IAA/B5I,KAAKwG,UAAUG,cACfiC,EAAQ5I,KAAKsI,QAAQ,OAErBX,EAAKiB,QACLA,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBjB,GAGvD,IACI2L,EADAvV,EAAO,GAEX,MAAMwV,EAAW5L,EAAKpE,KACtB,GAAsB,SAAlBgQ,EAASnT,KACTkT,EAAStT,KAAKkM,aAAaqH,OAE1B,CAED,MAAMhQ,EAAOgQ,EAAS3K,MACtB,IAAIoE,EAAMhN,KAAK0M,QAAQnJ,GACvB,GAAY,OAARyJ,IACAhN,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACvByJ,EAAMhN,KAAK0M,QAAQnJ,IACdyJ,GACD,MAAM,IAAIlK,MAAM,yBAGxBwQ,EAAStG,EAAIH,EACjB,CAIA,OAFA9O,GAAQ,cAAcuV,yBAA8BA,WACpDvV,GAAQ,GAAGuV,QAAa1K,IACjB,IAAM5I,KAAK0H,WAAWC,GAAM,GAAS5J,EAAO,IACvD,CACAkN,QAAQtD,GAEJ,IAAIiB,EAAQ,KAOZ,GANmC,IAA/B5I,KAAKwG,UAAUG,cACfiC,EAAQ5I,KAAKsI,QAAQ,OAErBX,EAAKiB,QACLA,EAAQ5I,KAAKwK,SAAS7C,EAAKiB,OAAO,IAEzB,MAATA,EACA,MAAM,cAAyB,mBAAoBjB,GAGvD,MAAMpE,EAAOoE,EAAKpE,KAAKqF,MACjBoE,EAAMhN,KAAK0M,QAAQnJ,GACzB,IAAIxF,EAAO,GACX,GAAY,OAARiP,EACAhN,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACvBxF,EAAO,GAAGiC,KAAKsI,QAAQ/E,QAAWqF,SAEjC,CAED,GAAI5I,KAAKgG,YAAYgH,EAAIzO,GAAG+H,SAASqG,IAAIpJ,GACrC,MAAM,cAAyB,MAAMA,+BAAmCoE,GAE5E5J,EAAO,GAAGiP,EAAIH,QAAQjE,IAC1B,CACA,MAAO,IAAM5I,KAAK0H,WAAWC,GAAM,GAAS5J,EAAO,IACvD,CACAgN,gBAAgBpD,GACZ,MAAMiB,EAAwB,OAAfjB,EAAKiB,MAAkB,OAAS5I,KAAKwK,SAAS7C,EAAKiB,OAAO,GACnErF,EAAOoE,EAAKpE,KAAKqF,MACjB4K,EAAQ7L,EAAK8L,QAEnB,GAAIzT,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GACvB,MAAM,cAAyB,GAAGiQ,KAASjQ,iBAAqBoE,GAGpE3H,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACT,OAAViQ,GACAxT,KAAKuG,QAAQD,SAAS6D,IAAI5G,GAE9B,MAAMxF,EAAO,GAAGiC,KAAKsI,QAAQ/E,MAASqF,OACtC,OAAO5I,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CAEAiN,oBAAoBrD,GAChB,IAAI5J,EAAO,GACX,MAAMyV,EAAQ7L,EAAK8L,QACb7K,EAAwB,OAAfjB,EAAKiB,MAAkB,OAAS5I,KAAKwK,SAAS7C,EAAKiB,OAAO,GACzE5I,KAAKyF,SACL,MAAMwJ,EAAO,UAAUjP,KAAKyF,SAC5B1H,GAAQ,GAAGkR,KAAQrG,MACnB7K,GAAQ,SAASkR,0BAA6BA,MAASA,SACvD,MAAM5I,EAASsB,EAAU,MAAIA,EAAKtB,MAAQ,GAC1C,IAAK,IAAI9H,EAAI,EAAGA,EAAI8H,EAAMtM,OAAQwE,IAAK,CACnC,MACMgF,EADU8C,EAAM9H,GACDqK,MAEjB5I,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GAI3BvD,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACT,OAAViQ,GACAxT,KAAKuG,QAAQD,SAAS6D,IAAI5G,GAG9BxF,GAAQ,GADMiC,KAAKsI,QAAQ/E,MACP0L,KAAQ1Q,OAChC,CACA,OAAOyB,KAAK0H,WAAWC,GAAM,GAAS5J,CAC1C,CACA+M,WAAWnD,GACP,IAAIiB,EAAQ,GAAKjB,EAAKiB,MACtB,MAAM8K,EAAO/L,EAAK+L,KAKlB,GAJA9K,EAAQA,EAAM3O,QAAQ,MAAO,QAC7B2O,EAAQA,EAAM3O,QAAQ,KAAM,OAC5B2O,EAAQA,EAAM3O,QAAQ,MAAO,OAC7B2O,EAAQA,EAAM3O,QAAQ,MAAO,OAChB,OAATyZ,EAAe,CACf,MAAMC,EAAK,CAACpT,EAAGgD,IACJ,KAAOvD,KAAK8M,OAAOvJ,EAAMoE,GAAQ,KAE5CiB,EAAQA,EAAM3O,QAAQ,aAAc0Z,GACpC/K,EAAQA,EAAM3O,QAAQ,WAAY0Z,EACtC,CACA,MAAO,IAAM/K,EAAQ,GACzB,CACA6D,cAAc9E,GACV,MAAMsC,EAAQjK,KAAKwK,SAAS7C,EAAKsC,OAAO,GAClC2J,EAAW5T,KAAKwK,SAAS7C,EAAKiM,UAAU,GAC9C,OAAO5T,KAAK0H,WAAWC,GAAM,GACzB,UAAUsC,yDAGV,GAAG2J,MACX,CACAC,iBACI,OAAO7T,KAAKuF,WAChB,CACAuO,oBAEI,IAAI/V,EAAO,GACPgW,EAAa,GACjB,IAAK,MAAMxQ,KAAQvD,KAAK6F,OAAOsL,SAAU,CACrC,MAAM6C,EAAU,IAAIzQ,QAChBvD,KAAKgG,YAAY,GAAGK,MAAMsG,IAAIqH,KAC9BhU,KAAKuF,YAAY4E,IAAI,IAAI5G,SACzBwQ,GAAc,UAAUxQ,qBAEhC,CAIA,MAHmB,KAAfwQ,IACAhW,GAAQ,8BAAkCgW,GAEvChW,CACX,EAOG,SAASkW,EAAW9O,EAAK2E,EAAKhB,GAEjC,MAAMoL,EAAM,IAAIhP,EAAQC,GAMxB+O,EAAIrK,iBAAiBC,GAErB,IAAI+C,EAAKqH,EAAI5J,QAAQR,EAAKhB,GAE1B,MAAMqL,EAASD,EAAIrL,eAAe1D,EAAK2D,GAEjCsL,GAAc,IAAKC,MAAQC,UAAY,IAAMC,KAAKC,MAAM,WAAaD,KAAKE,UAMhF,GAJI5H,GAAM/D,EAAIlE,SACViI,GAAM,kCAGNqH,EAAIxO,WAAa,GAAKwO,EAAI1M,YAAYW,SAAU,CAChD,MAAMuM,EAAY,qBAAuBN,EAAS,KAClDvH,EAAK,0FAEmBuH,aAAkBF,EAAIxO,gCACrCgP,cACfP,MACAtH,kBACY6H,MACZA,+RAW+BN,8DAG7B,KACK,CACD,MAAMO,EAAW,oBAAsBP,EAAS,KAChDvH,EAAK,oGAGF8H,uBAEPR,QACAtH,gKAMU8H,MACZA,kGAIE,CAEAxP,EAAIgI,YAAYyH,MAAM,qBAAuB/H,GAC7C,IAAIgI,EAAkB,GACtB,MAAMC,EAAc,GACpB,IAAK,MAAMpU,KAAKoI,EAAIjE,YAAa,CAC7B,GAAU,oBAANnE,EACA,SAEJ,MAAMqU,EAAK,gBAAkBrU,EAAEzG,QAAQ,cAAe,IAAIA,QAAQ,iBAAkB,KACpF6a,EAAY7U,KAAK8U,GACjBF,GAAmB,UAAUE,0BAA2BrU,MAC5D,CACA,MAAMsU,EAAmB,oHAI3BH,2CAEoB1P,EAAI8P,iCACR9P,EAAI1C,2VAWDqS,EAAYjU,KAAK,qeAsBpCiI,EAAIhE,uCAEJ+H,+LAWQqI,EAAWhB,EAAIJ,oBAUrB,MAAO,CAEHqB,WAXmB,6CAGzBrM,EAAI9D,YACJmP,MACAe,MACArI,4BAOMuI,WAAYJ,EAEZd,MAER,uGCnsDA,MAAMmB,EAAc,MACdC,EAAgB,MAChBC,EAAc,MACdC,EAAe,MACfC,EAAqB,QACrBC,EAAsB,QACtBC,EAAe,OACfC,EAAkB,WAClBC,EAAiB,MACjBC,EAAc,MACdC,EAAe,OAKrB,MAAMC,EAKFjT,YAAY3C,EAAMwI,GAId5I,KAAKI,KAAOA,EAIZJ,KAAK4I,MAAQA,EAIb5I,KAAKiW,IAAM,EAIXjW,KAAKgD,IAAM,CACf,EAKG,MAAMkT,EAITnT,YAAYoC,GACRnF,KAAKmF,IAAMA,EAKXnF,KAAKoF,aAAe,IAAKD,EAAIE,mBAK7BrF,KAAKmW,aAAe,CAAC,EAMrBnW,KAAKuF,YAAc,IAAIC,IAKvBxF,KAAKyF,OAAS,EAKdzF,KAAK4F,UAAW,EAKhB5F,KAAKoW,OAAS,EAKdpW,KAAK0O,UAAY,GAEjB1O,KAAKqW,cAAgB,KAErBrW,KAAKsW,WAAa,KAKlBtW,KAAKuW,OAAS,CAAC,EAEfvW,KAAK6F,OAASV,EAKdnF,KAAK8F,QAAU,SAKf9F,KAAK+F,WAAa,KAKlB/F,KAAKgG,YAAcb,EAAIc,WAAWC,KAAKC,IAAM,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAItG,OAAO6C,KAAKoE,IAAKG,SAAU,IAAId,QAKjHxF,KAAKuG,QAAU,CAAEH,YAAY,EAAOC,MAAO,IAAIb,IAAOc,SAAU,IAAId,KACpExF,KAAKgG,YAAY,GAAKhG,KAAKuG,QAG3BvG,KAAKwG,UAAY,CACbC,YAAa,EACbC,oBAAqB,EACrBC,YAAa,EACbC,UAAW,GAIf5G,KAAK6G,mBAAqB,CACtBC,aAAc,EACdC,eAAgB,EAChBC,mBAAoB,EAE5B,CAMAhD,gBAAgBmB,EAAK2E,EAAKlF,GACtB,MAAMsP,EAAM,IAAIgC,EAAa/Q,GAE7B+O,EAAIrK,iBAAiBC,GAErB,IAAI+C,EAAKqH,EAAI5J,QAAQR,IAAOlF,GAQ5B,OANAiI,EAAKqH,EAAIrL,eAAejE,GAAUiI,EAClC1H,EAAIgI,YAAYyH,MAAM,6BAA+B/H,GAEjDA,GAAMjI,IACNiI,GAAM,kCAEH,CAEHsI,WAAYtI,EAEZuI,WAAY,uBACFpN,KAAKC,UAAU,UACnC,mBACA,gXAeEiM,EAAIsC,oBACJ3J,kLAQQqH,MAER,CAKAxM,WAAWC,EAAMC,GACb,GAAI5H,KAAKwG,UAAUC,YAAc,EAC7B,MAAO,GAGX,IAAIpC,EAWJ,GATIA,EADqB,iBAAdsD,EAAKvE,KACH,UAEiB,iBAAduE,EAAKzE,KACR,IAAIyE,EAAKvE,OAGT,IAAIuE,EAAKvE,QAAQuE,EAAKzE,QAG9B0E,EAAa,CACd,GAAIvD,IAAWrE,KAAK+F,WAChB,MAAO,GAEX/F,KAAK+F,WAAa1B,CACtB,CAEA,MAAO,aAAa2D,KAAKC,UAAU5D,KACvC,CAMAiE,QAAQ/E,GAEJ,MAAO,cADMyE,KAAKC,UAAU1E,KAEhC,CAKAiT,cACI,IAAIzY,EAAO,GAEX,IAAK,MAAMY,KAAOuD,MAAM8L,KAAKhO,KAAKuF,YAAY0I,UAAW,CACrD,MAAMvN,EAAIV,KAAK6F,OAAOI,WAAW,GAAGtH,GAC9B4E,EAAO,uBAAuB5E,MAEhCZ,GADe,mBAAR,EACCwF,EAAO,IAAM7C,EAAEK,WAAa,MAG5BwC,EAAO,IAAMyE,KAAKC,UAAUvH,GAAK,KAEjD,CACA,OAAO3C,CACX,CAOA8K,eAAejE,GACX,IAAI7G,EAAO,GAEXA,GAAQ,uCACRA,GAAQ,wCACRA,GAAQ,oCACRA,GAAQ,iDACRA,GAAQ,iDACRA,GAAQ,qDACRA,GAAQ,gCAER,IAAIiL,EAAe,GACnB,IAAK,MAAMrK,KAAOqB,KAAKoF,aAAc,CAEjC4D,GACI,qBAAqBrK,cACZA,OAHHqB,KAAKoF,aAAazG,GAAKsK,4BAIPtK,OAC9B,CACqB,KAAjBqK,IACAjL,GAAQ,uBAA2BiL,GAGvC,IAAI+K,EAAa,GACjB,IAAK,MAAMxQ,KAAQvD,KAAK6F,OAAOsL,SAAU,CACrC,MAAM6C,EAAU,IAAIzQ,QAChBvD,KAAKgG,YAAY,GAAGK,MAAMsG,IAAIqH,KAC9BhU,KAAKuF,YAAY4E,IAAI,IAAI5G,SACzBwQ,GAAc,UAAUxQ,qBAEhC,CAKA,GAJmB,KAAfwQ,IACAhW,GAAQ,2BAA+BgW,GAGvCnP,EAAQ,CACR,IAAIuE,EAAW,wBACf,IAAK,MAAMxK,KAAOqB,KAAKmW,aACnB,IAAe,IAAXvR,GAAsC,iBAAXA,GAAuBA,IAAWjG,EAAM,CAEnEwK,GAAY,GADFnJ,KAAKmW,aAAaxX,GAAKsK,QAErC,CAEa,KAAbE,IACApL,GAAQ,wBACRA,GAAQoL,EAAW,KAE3B,CACA,OAAOpL,CACX,CAKAqL,UAAUC,GACN,OAAOrJ,KAAK6F,OAAOuD,UAAUC,EACjC,CAMAC,gBAAgB/F,EAAM8F,GAClBrJ,KAAK6F,OAAOyD,gBAAgB/F,EAAM8F,EACtC,CAOAE,cAAcC,EAASC,EAAMJ,GACzBrJ,KAAK6F,OAAO0D,cAAcC,EAASC,EAAMJ,EAC7C,CAOAK,QAAQ/K,EAAKgL,EAAMV,GACfjJ,KAAK6F,OAAO6D,QAAQ/K,EAAKgL,EAAMV,EACnC,CAMAW,QAAQjL,GACJ,OAAOqB,KAAK6F,OAAO+D,QAAQjL,EAC/B,CAIAkL,iBAAiBC,GACb,GAAiB,UAAbA,EAAI1J,KACJ,MAAM,cAAyB,kCAAmC0J,GAEtE,MAAME,EAAcrC,IAChB,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAKsC,MAAMlQ,OAAQwE,IAAK,CACxC,MAAMjF,EAAIqO,EAAKsC,MAAM1L,GACrB,GAAe,aAAXjF,EAAE8G,KAAqB,CACvB,MAAMmD,EAAOjK,EAAEiK,KAAKqF,MACpB5I,KAAKuF,YAAY4E,IAAI5G,GAErBvD,KAAK6F,OAAOI,WAAW,GAAG1C,GAAQ,WAAc,EAChDvD,KAAKoF,aAAa7B,GAAQ,CACtBoG,KAAMrQ,EAAEiK,KAAK6G,KAAKT,KAClBV,GAAI,GACJ7I,KAAM,OAEd,MACoB,eAAX9G,EAAE8G,MAQS,wBAAX9G,EAAE8G,QAPc,UAAjB9G,EAAE2Q,MAAM7J,KACR4J,EAAW1Q,EAAE2Q,OAGbD,EAAW1Q,GAWvB,GAEJ0Q,EAAWF,GAEX,MAAMO,EAAe,IAAI7E,IACU,IAA/BxF,KAAKwG,UAAUG,aACf0D,EAAaF,IAAI,MAErBnK,KAAKuG,QAAU,CAAEH,YAAY,EAAOC,MAAOgE,EAAc/D,SAAU,IAAId,KACvExF,KAAKgG,YAAchG,KAAK6F,OAAOI,WAAWC,KAAIC,IAAK,CAAGC,YAAY,EAAOC,MAAO,IAAIb,IAAItG,OAAO6C,KAAKoE,IAAKG,SAAU,IAAId,QACvHxF,KAAKgG,YAAY,GAAKhG,KAAKuG,OAC/B,CAKA+D,QAAQ3C,EAAM/C,GAEV5E,KAAKwK,SAAS7C,GAAM,GAEpB,MAAM8O,EAAgB,IAAIjR,IAAI,CAC1BgQ,EAAcC,EAAoBC,EAAqBC,EAAcG,IAIzE,IAAIY,EAAQ1W,KAAK0O,UAEC,CAEdgI,EAAQA,EAAM7X,QAAQd,GACXA,EAAKqC,OAASiV,IAGzB,MAAMsB,EAAa,IAAInR,IACvBkR,EAAM9X,SAASb,IACP0Y,EAAc9J,IAAI5O,EAAKqC,OACvBuW,EAAWxM,IAAIpM,EAAK6K,MACxB,IAGJ8N,EAAQA,EAAM7X,QAAQd,GACdA,EAAKqC,OAASkV,IArZH,KAwZXvX,EAAKiF,KAGF2T,EAAWhK,IAAI5O,EAAK6K,UAG/B,IAAIrK,EAAI,EACR,KAAOA,EAAImY,EAAM3c,OAAS,GAClB2c,EAAMnY,GAAG6B,OAASmV,GAAemB,EAAMnY,EAAI,GAAG6B,OAASmV,EAI3DhX,IAHImY,EAAMtc,OAAOmE,EAAI,EAAG,GAK5ByB,KAAK0O,UAAYgI,CACrB,CAEAA,EAAM9X,SAAQ,CAACb,EAAMyQ,KACbzQ,EAAKqC,OAASkV,IACdtV,KAAKuW,OAAOxY,EAAK6K,OAAS4F,EAC9B,IAEJkI,EAAM9X,SAASb,IACP0Y,EAAc9J,IAAI5O,EAAKqC,OACnBrC,EAAKkY,GAAK,IACVlY,EAAKkY,GAAKjW,KAAKuW,OAAOxY,EAAK6K,OAEnC,IAEJ,IAAI2B,EAAS,GAoOb,OAlOAmM,EAAM9X,SAAQ,CAACb,EAAMyQ,KACjB,OAAQzQ,EAAKqC,MACT,KAAKiV,EACD9K,GAAU,QAAQiE,sBAA0BzQ,EAAK6K,UACjD,MACJ,KAAK0M,EACD/K,GAAU,QAAQiE,wBAA4BzQ,EAAK6K,UACnD,MACJ,KAAK2M,EACDhL,GAAU,QAAQiE,MAAUzQ,EAAK6K,2BACjC,MACJ,KAAK4M,EACDjL,GAAU,QAAQiE,sBAA0BzQ,EAAKkY,iBAAiBlY,EAAK6K,UACvE,MACJ,KAAK6M,EACDlL,GAAU,QAAQiE,+CAAmDzQ,EAAKkY,kBAAkBlY,EAAK6K,UACjG,MACJ,KAAK8M,EACDnL,GAAU,QAAQiE,gDAAoDzQ,EAAKkY,iBAAiBlY,EAAK6K,UACjG,MACJ,KAAKiN,EACDtL,GAAU,QAAQiE,iCAClB,MACJ,KAAKmH,EACDpL,GAAU,QAAQiE,iBAAqBzQ,EAAKkY,uBAAuBlY,EAAK6K,UACxE,MACJ,KAAKgN,EACDrL,GAAU,QAAQiE,qBAAyBzQ,EAAK6K,WAAW4F,sBAA0BzQ,EAAK6K,UAC1F,MACJ,KAAKkN,EACDvL,GAAU,QAAQiE,qBAAyBzQ,EAAKkY,uBAChD,MACJ,KAAKF,EACD,CAEI,MAAM1X,EAAIN,EAAK6K,MAAM3O,QAAQ,OAAQ,IACrCsQ,GAAU,QAAQiE,SAAanQ,gBAC/B,KACJ,CACJ,QACI,MAAM,IAAIyE,MAAM,qBACxB,IAEJyH,EAAS,4EAGKvC,KAAKC,UAAUjI,KAAKuW,gXAU5BhM,oxDA+DSmM,EAAM3c,42GA2GjB6K,EACO,GAGA2F,CAEf,CAKAC,SAAS7C,EAAM8C,GACX,IAAI1M,EAAO,GACX,GAAI4J,aAAgBzF,MAAO,CACvB,IAAK,IAAI3D,EAAI,EAAGA,EAAIoJ,EAAK5N,OAAQwE,IAAK,CAClC,MAAMlF,EAAIsO,EAAKpJ,GACfR,GAAQiC,KAAKwK,SAASnR,EAAGoR,EAC7B,CACA,OAAO1M,CACX,CACA,GAAa,OAAT4J,EACA,MAAO,OAEX,QAAaxE,IAATwE,EACA,MAAO,YAEX,GAAsB,iBAAX,EACP,MAAO,GAAKA,EAGhB,OAAQA,EAAKvH,MAET,IAAK,MACD,MACJ,IAAK,UACIuH,EAAKiB,QACNjB,EAAKiB,MAAQ,IAEjB5I,KAAK4W,QAAQ,IAAIZ,EAASX,EAAa1N,EAAKiB,QAC5C,MACJ,IAAK,MACD5I,KAAK4W,QAAQ,IAAIZ,EAAST,EAAavV,KAAK0H,WAAWC,GAAM,KAC7D,MAEJ,IAAK,SACD3H,KAAK6W,WAAW,oBAAoBlP,EAAKiB,mBACzC,MACJ,IAAK,SACD5I,KAAK8K,WAAWnD,GAChB,MACJ,IAAK,OACL,IAAK,WACD3H,KAAKmL,WAAWxD,GAChB,MACJ,IAAK,KACL,IAAK,OACD3H,KAAKoL,OAAOzD,GACZ,MACJ,IAAK,SACD3H,KAAKqL,WAAW1D,GAChB,MACJ,IAAK,MACD3H,KAAKwK,SAAS7C,EAAKiB,OAAO,GAC1B5I,KAAK6W,WAAW,gJAEhB,MACJ,IAAK,OACD7W,KAAKkM,aAAavE,GAClB,MACJ,IAAK,aACD3H,KAAKmM,cAAcxE,GACnB,MACJ,IAAK,WACD3H,KAAKoM,YAAYzE,GACjB,MACJ,IAAK,OACD,CACI,MAAMgD,EAAKhD,EAAU,MAAI,OAAS,QAClC3H,KAAK6W,WAAW,oBAAoBlM,MACpC,KACJ,CACJ,IAAK,OACD3K,KAAK6W,WAAW,0BAChB,MACJ,IAAK,OACL,IAAK,eACL,IAAK,YACD7W,KAAK8W,SAASnP,EAAM8C,GACpB,MAEJ,IAAK,MACDzK,KAAKiL,QAAQtD,GACb,MACJ,IAAK,YACD3H,KAAKiM,aAAatE,GAClB,MACJ,IAAK,QACD,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAKsC,MAAMlQ,OAAQwE,IAAK,CACxC,MAAMoM,EAAIhD,EAAKsC,MAAM1L,GACrByB,KAAKwK,SAASG,GAAG,EACrB,CACA,MACJ,IAAK,KACD3K,KAAKuL,OAAO5D,GACZ,MACJ,IAAK,eACD3H,KAAK2L,gBAAgBhE,GACrB,MACJ,IAAK,QACD3H,KAAK6W,WAAW7W,KAAK6K,cAAclD,EAAM,UACzC,MACJ,IAAK,WACD3H,KAAK6W,WAAW7W,KAAK6K,cAAclD,EAAM,aACzC,MACJ,IAAK,MACD3H,KAAKyL,QAAQ9D,GACb,MACJ,IAAK,UACD3H,KAAK0L,YAAY/D,GACjB,MACJ,IAAK,QACD3H,KAAK8L,UAAUnE,GACf,MACJ,IAAK,SACD3H,KAAKgM,WAAWrE,GAChB,MACJ,IAAK,SACD3H,KAAKwM,WAAW7E,GAChB,MACJ,IAAK,MACD5J,GAAQiC,KAAK6W,WAAW,yBACxB,MACJ,IAAK,gBACD7W,KAAK+K,gBAAgBpD,GACrB,MACJ,IAAK,oBACD5J,GAAQiC,KAAK6W,WAAW7W,KAAKgL,oBAAoBrD,IACjD,MACJ,IAAK,SACD,MAAM,cAAyB,6BAA8BA,GACjE,IAAK,aACD,MAAM,cAAyB,6BAA8BA,GACjE,IAAK,sBACD3H,KAAK6L,uBAAuBlE,EAAM8C,GAClC,MACJ,IAAK,WACDzK,KAAKqM,YAAY1E,GACjB,MACJ,IAAK,WACD3H,KAAKsM,YAAY3E,GACjB,MACJ,IAAK,WACD5J,GAAQiC,KAAK6W,WAAW7W,KAAKuM,YAAY5E,IACzC,MAEJ,IAAK,aACD5J,GAAQiC,KAAKyM,cAAc9E,GAC3B,MACJ,IAAK,UACD5J,GAAQiC,KAAK0I,YAAYf,GACzB,MACJ,QACI,MAAM,IAAI7E,MAAM,8BAAgC6E,EAAKvH,MAE7D,OAAOrC,CACX,CACA2K,YAAYf,GACR,MAAMuM,EAAM,IAAI,KAAQlU,KAAKmF,KAE7B,OADAnF,KAAK6W,WAAW3C,EAAIxL,YAAYf,IACzB,EACX,CAMAkP,WAAWE,GACP,GAAgB,KAAZA,EACA,MAAO,GAEX,MACMC,EADID,EAAQ7c,MAAM,MACXgM,KAAK+Q,GAAQ,KAAOA,EAAIhd,QAAQ,OAAQ,MAC/CuG,EAAI,IAAIwV,EAASD,EAAciB,EAAGnW,KAAK,OAC7C,OAAOb,KAAK4W,QAAQpW,EACxB,CAMAoW,QAAQ7Y,GAGJ,OAFAiC,KAAK0O,UAAU1O,KAAKoW,QAAUrY,EAC9BiC,KAAKoW,SACE,EACX,CAMAc,UAAU3T,GACN,MAAM4T,EAAY5T,EAAO,IAAOvD,KAAKyF,SACrC,OAAOzF,KAAKoX,kBAAkBD,EAClC,CAMAC,kBAAkBC,GACd,MAAM7W,EAAI,IAAIwV,EAASV,EAAe+B,GAEtC,OADArX,KAAKuW,OAAOc,IAAc,EACnB7W,CACX,CAMA8W,SAASC,GACL,OAAO,IAAIvB,EAASR,EAAc+B,EAAM3O,MAC5C,CAMA4O,eAAeD,GACX,OAAO,IAAIvB,EAASP,EAAoB8B,EAAM3O,MAClD,CAMA6O,gBAAgBF,GACZ,OAAO,IAAIvB,EAASN,EAAqB6B,EAAM3O,MACnD,CAIA2C,OAAO5D,GACH,MAAM+P,EAAa1X,KAAKkX,UAAU,WAC5BS,EAAW3X,KAAKkX,UAAU,WAC1BU,EAAe5X,KAAKkX,UAAU,UAYpC,OAVAlX,KAAK4W,QAAQc,GACb1X,KAAKwK,SAAS7C,EAAKyI,MAAM,GACzBpQ,KAAK4W,QAAQ5W,KAAKyX,gBAAgBG,IAClC5X,KAAKwK,SAAS7C,EAAKsC,OAAO,GAC1BjK,KAAK4W,QAAQ5W,KAAKsX,SAASK,IAC3B3X,KAAK4W,QAAQgB,GACTjQ,EAAK0I,YACLrQ,KAAKwK,SAAS7C,EAAK0I,YAAY,GAEnCrQ,KAAK4W,QAAQe,GACN,EACX,CACAhM,gBAAgBhE,GACZ3H,KAAK4F,UAAW,EAChB5F,KAAKuG,QAAQF,MAAM8D,IAAI,MACvBnK,KAAKuG,QAAQD,SAAS6D,IAAI,MAE1B,MAAM0N,EAAU,cAAc7X,KAAKyF,SACnCzF,KAAKyF,SAEL,MAAMqS,EAAY,kBAAkB9X,KAAKyF,SACzCzF,KAAKyF,SACLzF,KAAKwK,SAAS7C,EAAKiB,OAAO,GAC1B5I,KAAK6W,WAAW,GAAGiB,0BAAkCD,UACrD,MAAME,EAAa/X,KAAKkX,UAAU,YAClClX,KAAK4W,QAAQmB,GACb,MAAMJ,EAAW3X,KAAKkX,UAAU,UAChClX,KAAKsW,WAAaqB,EAClB3X,KAAKqW,cAAgB0B,EAErB,MACMjI,EAAO,wBAAgB+H,uBACLA,OAAaC,OAOrC,OANA9X,KAAK6W,WAAW/G,GAChB9P,KAAK4W,QAAQ5W,KAAKwX,eAAeG,IACjC3X,KAAK6O,YAAYlH,EAAKsC,OACtBjK,KAAK4W,QAAQ5W,KAAKsX,SAASS,IAC3B/X,KAAK4W,QAAQe,GACb3X,KAAK4F,UAAW,EACT,EACX,CAKA8G,QAAQnJ,GAEJ,GAAIvD,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GACvB,MAAO,CAAEhF,EAAGyB,KAAKgG,YAAYjM,OAAS,EAAGwJ,OAAMqJ,OAAO,EAAMC,GAAI,cAAc7E,KAAKC,UAAU1E,OAGjG,IAAK,IAAIhF,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAIyB,KAAKgG,YAAYzH,GAAG8H,MAAMsG,IAAIpJ,GAC9B,MAAO,CAAEhF,IAAGgF,OAAMqJ,OAAO,EAAOC,GAAI,kBAAkBtO,MAAMyJ,KAAKC,UAAU1E,OAGnF,OAAO,IACX,CAMAuJ,OAAOvJ,EAAMwJ,GACT,MAAMC,EAAMhN,KAAK0M,QAAQnJ,GACnB0J,EAAMF,EAAS3J,KACrB,GAAY,OAAR4J,EAYA,MAPa,OAATzJ,GAA0B,OAATA,GAA0B,OAATA,GAA0B,SAATA,GAA4B,OAATA,GAItEvD,KAAK6F,OAAOsH,YAAYC,KAAK,MAAM7J,gBAAoBwJ,GAE3D/M,KAAKuG,QAAQF,MAAM8D,IAAI5G,GAChBvD,KAAKsI,QAAQ/E,GAIxB,GAAU,IAFAyJ,EAAIzO,EAED,CACT,MAAM8O,EAAKrN,KAAK6F,OAAO+D,QAAQrG,GAC/B,IAAK8J,EACD,MAAO,GAAGL,EAAIH,WAAWI,MAE7B,GAAgB,UAAZI,EAAGjN,MAAgC,QAAZiN,EAAGjN,KAC1B,OAAO4M,EAAIH,GAEf,GAAgB,SAAZQ,EAAGjN,KAAiB,CACpB,IAAKiN,EAAG1D,KACJ,MAAM,IAAI7G,MAAM,kBAEpB,GAAuB,IAAnBuK,EAAG1D,KAAK5P,OACR,MAAO,IAAIiT,EAAIH,QAEnB,MAAM,cAAyB,IAAItJ,mCAAuCwJ,EAC9E,CACA,MAAM,cAAyB,IAAIxJ,mBAAuBwJ,EAC9D,CACA,OAAOC,EAAIH,EACf,CACA1B,WAAWxD,GACP,MAAMpE,EAAOoE,EAAKiB,MAClB,IAAImG,EAAU,cAAc/G,KAAKC,UAAU1E,MAC3C,MAAMhK,EAAIyG,KAAK0M,QAAQnJ,GACd,MAALhK,IACAwV,EAAUxV,EAAEsT,IAEhB7M,KAAK6W,WAAW,oBAAoB9H,MACxC,CACAnE,YAAYjD,GACR,IAAI4F,EAAaC,OAAO7F,EAAKiB,OAC7B2E,EAAaA,EAAWtT,QAAQ,MAAO,KACvC,MAAMoK,EAASrE,KAAK0H,WAAWC,GAAM,GACrC,MAAmB,KAAf4F,GAAgC,KAAXlJ,EACd,IAEQ,KAAfkJ,EACO,IAAMlJ,EAAS,KAEnB,IAAMA,EAAS,KAAOkJ,EAAa,IAC9C,CACAf,WAAW7E,GAEP,GAAI3H,KAAKuG,QAAQF,MAAMsG,IAAI,OACvB,MAAM,cAAyB,6BAA8BhF,GAOjE,OALIA,EAAKiB,QACL5I,KAAKwK,SAAS7C,EAAKiB,OAAO,GAC1B5I,KAAK6W,WAAW,yCAEpB7W,KAAK4W,QAAQ,IAAIZ,EAASH,EAAgB,KACnC,EACX,CACAhL,cAAclD,EAAM1K,GAEhB,IAAK+C,KAAK4F,SAAU,CAChB,MAAM8H,EAAgB,aAARzQ,EAAsB,MAAQ,MAC5C,MAAM,cAAyB,IAAIyQ,gCAAoC/F,EAC3E,CAWA,MAVY,aAAR1K,EACI+C,KAAKqW,eACLrW,KAAK4W,QAAQ5W,KAAKsX,SAAStX,KAAKqW,gBAIhCrW,KAAKsW,YACLtW,KAAK4W,QAAQ5W,KAAKsX,SAAStX,KAAKsW,aAGjC,EACX,CACA3I,kBAAkBhG,EAAMpE,GAEpB,MAAMyU,EAAwB,KAATzU,EACrB,IAAI6N,EAAW7N,EACXyU,IACA5G,EAAW,QAAQpR,KAAKyF,UAE5B,MAAMkS,EAAW3X,KAAKkX,UAAU,MAAM9F,WACtCpR,KAAK4W,QAAQ5W,KAAKsX,SAASK,IAC3B,MAAMD,EAAa1X,KAAKoX,kBAAkBhG,GAC1CsG,EAAW1U,IAnjCY,GAojCvBhD,KAAK4W,QAAQc,GAEb,MAAMrN,EAAe,IAAI7E,IACzBxF,KAAKuG,QAAU,CAAEH,YAAY,EAAMC,MAAOgE,EAAc/D,SAAU,IAAId,KACtExF,KAAKuG,QAAQF,MAAM8D,IAAI,MAEvBnK,KAAKgG,YAAY/F,KAAKD,KAAKuG,SAE3B,MAAM6D,EAAO4N,EAAcrQ,EAAKyC,KAAOzC,EAAKpE,KAAK6G,KACjD,IAAIrM,EAAO,GACPka,EAAW,GACfla,GAAQ,QAAQqT,aAIhBrT,GAAQ,sBACR,IAAK,IAAIQ,EAAI6L,EAAK8D,SAASnU,OAAS,EAAGwE,GAAK,EAAGA,IAAK,CAChD,MAAM4P,EAAO/D,EAAK8D,SAAS3P,GAC3BR,GAAQ,KAAKiC,KAAKsI,QAAQ6F,4BAC1BnO,KAAKuG,QAAQF,MAAM8D,IAAIgE,GACvB8J,GAAY,EAChB,CAgCA,OA/BAla,GAAQ,2BACRiC,KAAK6W,WAAW9Y,GAEhBiC,KAAKuF,YAAY4E,IAAIiH,GACrBpR,KAAKgG,YAAY,GAAGK,MAAM8D,IAAIiH,GAC9BpR,KAAKoF,aAAagM,GAAY,CAC1BzH,KAAMS,EAAKT,KACXV,GAII,sLAA6CmI,6BAEtC6G,EAAW,KAClB,wCAAwC7G,kFAG5ChR,KAAM,QAGVJ,KAAKwK,SAAS7C,EAAKsC,OAAO,GAC1BjK,KAAKgG,YAAYsI,MACjBtO,KAAKuG,QAAUvG,KAAKgG,YAAYhG,KAAKgG,YAAYjM,OAAS,GAE1DiG,KAAK6F,OAAOI,WAAW,GAAGmL,GAAY,WAAc,EACpDpR,KAAK4W,QAAQ,IAAIZ,EAASH,EAAgB,KAC1C7V,KAAK4W,QAAQe,GAERpU,GACDvD,KAAK6W,WAAW,qBAAqBzF,OAElC,EACX,CACA9E,YAAY3E,GACR,MAAM,cAAyB,wBAAyBA,EAC5D,CACA4E,YAAY5E,GACR,MAAMpE,EAAO,iBAAoBoE,EAAKpE,KAAKqF,OAI3C,OAHA5I,KAAK2N,kBAAkBhG,EAAMpE,GAGtB,EACX,CACA8I,YAAY1E,GACR,OAAO3H,KAAK2N,kBAAkBhG,EAAM,GACxC,CACAyE,YAAYzE,GACR,MAAM4G,EAAO5G,EAAKiB,MACZY,EAAU,gBAAgBxJ,KAAKyF,SAQrC,OAPAzF,KAAK6W,WAAWrN,EAAU,6BAC1B+E,EAAK3P,SAASxF,IACV4G,KAAKwK,SAASpR,EAAEwP,OAAO,GACvB5I,KAAKwK,SAASpR,EAAEuF,KAAK,GACrBqB,KAAK6W,WAAW,GAAGrN,yCAA+C,IAEtExJ,KAAK6W,WAAW,qBAAqBrN,6CAC9B,EACX,CACA2C,cAAcxE,GACV,MAAM4G,EAAO5G,EAAKiB,MAClB5I,KAAK4W,QAAQ5W,KAAKkX,UAAU,wBAC5B3I,EAAK3P,SAASxF,GAAM4G,KAAKwK,SAASpR,GAAG,KACrC,MAAM8e,EAAO3J,EAAKxU,OAElB,OADAiG,KAAK6W,WAAW,0DAA0DqB,KAAQA,OAC3E,EACX,CACAhM,aAAavE,GAET3H,KAAKwK,SAAS7C,EAAKpE,MAAM,GACzB,MAAMgL,EAAO5G,EAAK6G,MAClB,IAAK,IAAIjQ,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAQwE,IAE7ByB,KAAKwK,SAAS+D,EAAKhQ,IAAI,GAEvByB,KAAK6W,WAAW,+FAIpB,MAAO,EACX,CACA5K,aAAatE,GAET3H,KAAKwK,SAAS7C,EAAKiB,OAAO,GAE1B5I,KAAKwK,SAAS7C,EAAKpE,MAAM,GACzB,MAAMgL,EAAO5G,EAAK6G,MAClB,IAAK,IAAIjQ,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAQwE,IAAK,CAElC,GADAyB,KAAKwK,SAAS+D,EAAKhQ,IAAI,GACnBA,IAAMgQ,EAAKxU,OAAS,EAAG,CACvBiG,KAAK6W,WAAW,8GAIhB,KACJ,CAEA7W,KAAK6W,WAAW,8FAGpB,CACA,MAAO,EACX,CACAhI,YAAYlH,GACR,MAAMmH,EAAU9O,KAAK4F,SACrB5F,KAAK4F,UAAW,EAChB,IACI,OAAO5F,KAAKwK,SAAS7C,GAAM,EAC/B,CACA,QACI3H,KAAK4F,SAAWkJ,CACpB,CACJ,CACArD,QAAQ9D,GAGJ,IAAIwG,EACJ,GAHAnO,KAAK4F,UAAW,EAGE,OAAd+B,EAAKwG,KAAe,CACpB,MAAMY,EAAUpH,EAAKwG,KAAKvF,MAC1B5I,KAAKuG,QAAQF,MAAM8D,IAAI4E,GACvBZ,EAAOnO,KAAKsI,QAAQyG,EACxB,MAEI/O,KAAKuG,QAAQF,MAAM8D,IAAI,SACvBgE,EAAOnO,KAAKsI,QAAQ,SAExB,MAAM2I,EAAOjR,KAAKsI,QAAQ,MACpB0G,EAAShP,KAAKyF,SACdwJ,EAAO,eAAeD,IAEtBQ,EAAQ,gBAAgBR,IAE9BhP,KAAKwK,SAAS7C,EAAKqG,MAAM,GACzBhO,KAAKwK,SAAS7C,EAAKyH,IAAI,GACvBpP,KAAK6W,WAAW,GAAGrH,uBAA2BP,wBAE9CjP,KAAK6W,WAAW,GAAG5F,OAAU9C,OAAUc,KAEvC,MAAM8I,EAAa/X,KAAKkX,UAAU,WAC5BiB,EAAWnY,KAAKkX,UAAU,SAChClX,KAAK4W,QAAQmB,GACb,MAAMJ,EAAW3X,KAAKkX,UAAU,WAahC,OAZAlX,KAAK6W,WAAW,oBAAoB1I,QAAWqB,MAC/CxP,KAAK4W,QAAQ5W,KAAKyX,gBAAgBE,IAClC3X,KAAKqW,cAAgB8B,EACrBnY,KAAKsW,WAAaqB,EAElB3X,KAAK6O,YAAYlH,EAAKsC,OACtBjK,KAAK4W,QAAQuB,GACbnY,KAAK6W,WAAW,GAAG5F,SAAY9C,MAC/BnO,KAAK4W,QAAQ5W,KAAKsX,SAASS,IAC3B/X,KAAK4W,QAAQe,GACb3X,KAAK6W,WAAW,UAAU5H,YAAeO,aACzCxP,KAAK4F,UAAW,EACT,EACX,CACA8F,YAAY/D,GACR3H,KAAK4F,UAAW,EAEhB,IAAIwS,EAAS,aACb,MAAMC,EAAY,eACd1Q,EAAKpE,OACL6U,EAASpY,KAAKsI,QAAQX,EAAKpE,KAAKqF,OAChC5I,KAAKuG,QAAQF,MAAM8D,IAAIxC,EAAKpE,KAAKqF,QAIrC,GAAe,OADAjB,EAAKnG,OAEhB,MAAM,cAAyB,iBAAkBmG,GAErD,MAAMsJ,EAAOjR,KAAKsI,QAAQ,MACpBgQ,EAAc,oBAAoBtY,KAAKyF,SACvC8S,EAAa,kBAAkBvY,KAAKyF,SACpCoS,EAAU,eAAe7X,KAAKyF,SAC9BqS,EAAY,mBAAmB9X,KAAKyF,SAE1CzF,KAAKwK,SAAS7C,EAAKnG,QAAQ,GAE3B,MAAM0T,EACF,eAAGoD,2BACAT,sBAEWS,4BAAsCA,qBAA+BA,QAAkBA,cAE9FA,yBAAmCR,OAAeQ,sCAEpDC,mBAA4BD,iDAE5BC,OAAgBA,4BAAqCD,+BACrDR,OAAeS,iBAExBvY,KAAK6W,WAAW3B,GAChB,MAAM6C,EAAa/X,KAAKkX,UAAU,WAC5BiB,EAAWnY,KAAKkX,UAAU,SAC1BS,EAAW3X,KAAKkX,UAAU,WAChClX,KAAKsW,WAAaqB,EAClB3X,KAAKqW,cAAgB8B,EACrBnY,KAAK4W,QAAQmB,GACb,MAAMS,EAAY,OAAOF,4BAEhBF,OAAYnH,OAAUqH,KAAeT,OAAaQ,OAAeR,mBAEjEQ,OAAeE,KAAcV,OAAaO,OAAYnH,OAAUqH,KAAeD,WAYxF,OAVArY,KAAK6W,WAAW,GAAG2B,uBAA+BX,OAAaC,OAC/D9X,KAAK4W,QAAQ5W,KAAKyX,gBAAgBE,IAElC3X,KAAK6O,YAAYlH,EAAKsC,OAEtBjK,KAAK4W,QAAQuB,GACbnY,KAAK6W,WAAW,GAAGgB,OACnB7X,KAAK4W,QAAQ5W,KAAKsX,SAASS,IAC3B/X,KAAK4W,QAAQe,GACb3X,KAAK4F,UAAW,EACT,EACX,CACAkG,UAAUnE,GACN3H,KAAK4F,UAAW,EAChB,MAAM8R,EAAa1X,KAAKkX,UAAU,UAC5BS,EAAW3X,KAAKkX,UAAU,UAYhC,OAXAlX,KAAKqW,cAAgBqB,EACrB1X,KAAKsW,WAAaqB,EAClB3X,KAAK4W,QAAQc,GAEb1X,KAAKwK,SAAS7C,EAAKmI,MAAM,GACzB9P,KAAK4W,QAAQ5W,KAAKyX,gBAAgBE,IAElC3X,KAAK6O,YAAYlH,EAAKsC,OACtBjK,KAAK4W,QAAQ5W,KAAKsX,SAASI,IAC3B1X,KAAK4W,QAAQe,GACb3X,KAAK4F,UAAW,EACT,EACX,CAMAgG,cAAc6M,EAAOC,GACjB,MAAO,EACX,CAKA7M,uBAAuBlE,EAAM8C,GACzB,MAAMoF,EAAO,IAAK7P,KAAK6G,oBACnBc,EAAKiI,QAAQ,UACb5P,KAAK6G,mBAAmBC,eAExBa,EAAKiI,QAAQ,aACb5P,KAAK6G,mBAAmBG,qBAExBW,EAAKiI,QAAQ,WACb5P,KAAK6G,mBAAmBE,iBAE5B/G,KAAKwK,SAAS7C,EAAKsC,MAAOQ,GAC1BzK,KAAK6G,mBAAqBgJ,CAC9B,CACA7D,WAAWrE,GAEP3H,KAAKwK,SAAS7C,EAAKiB,OAAO,GAC1B,MAAM+P,EAAW,eAAe3Y,KAAKyF,SACrCzF,KAAK6W,WAAW,GAAG8B,yBACnB,MAAMhB,EAAW3X,KAAKkX,UAAU,aAC1BlH,EAAQrI,EAAKqI,MACnB,IAAK,IAAIzR,EAAI,EAAGA,EAAIyR,EAAMjW,OAAQwE,IAAK,CACnC,MAAM2R,EAASF,EAAMzR,GAAG,GACxB,GAAoB,QAAhB2R,EAAO9P,KACPJ,KAAK6O,YAAYmB,EAAMzR,GAAG,QAEzB,CACD,MAAMqa,EAAY5Y,KAAKkX,UAAU,UACjClX,KAAKwK,SAAS0F,GAAQ,GACtBlQ,KAAK6W,WAAW,yCAAyC8B,MACzD3Y,KAAK4W,QAAQ5W,KAAKyX,gBAAgBmB,IAClC5Y,KAAK6O,YAAYmB,EAAMzR,GAAG,IAC1ByB,KAAK4W,QAAQ5W,KAAKsX,SAASK,IAC3B3X,KAAK4W,QAAQgC,EACjB,CACJ,CAGA,OAFA5Y,KAAK4W,QAAQe,GACb3X,KAAK6W,WAAW,UAAU8B,cACnB,EACX,CACAjI,wBAAwBU,EAAUC,EAAM1J,GACpC,MAAMmJ,EAAO,CAAC,EACd,IAAK,IAAIvS,EAAI,EAAGA,EAAIoJ,EAAKkJ,KAAK9W,OAAQwE,IAAK,CACvC,MAAMyS,EAAMrJ,EAAKkJ,KAAKtS,GACZ,IAANA,GAAmB,OAARyS,GACXhR,KAAK6W,WAAW,sCAChB/F,EAAKG,MAAO,GAIZjR,KAAKwK,SAASwG,GAAK,EAE3B,CACA,OAAOF,CACX,CACAI,gBACI,MAAMxS,EAAI,GACV,IAAK,MAAM6E,KAAQvD,KAAK6F,OAAOsL,SAC3BzS,EAAEuB,KAAKsD,GAEX,OAAO7E,CACX,CAOAoY,SAASnP,EAAM8C,GACX,IAAIoO,GAAW,EACXb,GAAc,EAClB,MAAM5G,EAAW,iBAAoBzJ,EAAKpE,MACpCyJ,EAAMhN,KAAK0M,QAAQ0E,GACzB,GAAY,OAARpE,EACA,MAAM,cAAyB,MAAMoE,uBAAgCpR,KAAKkR,gBAAgBrQ,KAAK,MAAQ,IAAK8G,GAEhH,IAAI0J,EACJ,GAAc,IAAVrE,EAAIzO,EAAS,CAEb,GADA8S,EAAOrR,KAAK6F,OAAO+D,QAAQwH,GACT,SAAdC,EAAKjR,KACL,MAAM,cAAyB,IAAIgR,gBAAwBzJ,GAE/DkR,GAAW,CACf,MAEIxH,EAAOrR,KAAKoF,aAAagM,QAEZjO,IAATkO,IACA2G,GAAc,EACd3G,EAAO,CAAEC,aAAa,IAI9B,GAAkB,iBAAd3J,EAAKvH,KACL,OAAO4M,EAAIH,GAIf,MAAM2E,EAAWxR,KAAK0Q,wBAAwBU,EAAUC,EAAM1J,GAE9D3H,KAAKuF,YAAY4E,IAAIiH,GACrB,IAAIM,EAAY,GACZC,EAAU,GAEVhK,EAAKiK,SACLF,GAAa,6BACbC,GAAW,+BAGXH,EAASP,OACTS,GAAa,cAGjB,MAAMoH,EAAWnR,EAAKkJ,KAAK9W,OAE3B,IAAIgE,EAAO,GACP8a,GACA9a,GAAQ2T,EACR3T,GAAQ,wDAAwD+a,MAAaA,QAE7E/a,GAAQ,oBACRA,GAAQ,eAAeiP,EAAIH,yBACtBwE,EAAKC,cACNvT,GAAQ,4BACJ0M,IACA1M,GAAQ,6BAGhBA,GAAQ4T,EACR3R,KAAK6W,WAAW9Y,KAGZia,EACAhY,KAAK4W,QAAQ,IAAIZ,EAASJ,EAAiBxE,IAG3CpR,KAAK4W,QAAQ,IAAIZ,EAASL,EAAcvE,IAEvC3G,GACDzK,KAAK6W,WAAW,sCAG5B,CACAxL,WAAW1D,GACP3H,KAAKwK,SAAS7C,EAAK7M,MAAM,GACzBkF,KAAKwK,SAAS7C,EAAK3M,OAAO,EAC9B,CACAoQ,OAAOzD,GACH,MAAM6K,EAAS,CACX,IAAK,OACLC,GAAI,KACJC,MAAO,KACP,MAAO,MACP,MAAO,MACPC,GAAI,IACJC,GAAI,IACJC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,GAAI,KACJC,QAAS,KACTC,QAAS,KACTC,SAAU,MACV,IAAK,KAEHC,EAAKzL,EAAK0L,SAGhBrT,KAAKwK,SAAS7C,EAAK7M,MAAM,GAEzBkF,KAAKwK,SAAS7C,EAAK3M,OAAO,GAE1B,IAAI+C,EAAO,iEAEX,GAAW,MAAPqV,EACArV,GAAQ,qCAEP,CAEDA,GAAQ,mBADIyU,EAAOY,IAAOA,YAE9B,CAEArV,GAAQ,6BAA6BqV,MACrCpT,KAAK6W,WAAW9Y,EACpB,CACAkN,QAAQtD,GACJ,IAAI5J,EAAO,GAEQ,OAAf4J,EAAKiB,MAEL5I,KAAK6W,WAAW,sCAIhB7W,KAAKwK,SAAS7C,EAAKiB,OAAO,GAG9B,MAAMrF,EAAOoE,EAAKpE,KAAKqF,MACjBoE,EAAMhN,KAAK0M,QAAQnJ,GACzB,GAAY,OAARyJ,EACAhN,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACvBxF,EAAO,GAAGiC,KAAKsI,QAAQ/E,4BAEtB,CAED,GAAIvD,KAAKgG,YAAYgH,EAAIzO,GAAG+H,SAASqG,IAAIpJ,GACrC,MAAM,cAAyB,MAAMA,+BAAmCoE,GAE5E5J,EAAO,GAAGiP,EAAIH,uBAClB,CACA7M,KAAK6W,WAAW9Y,EAAO,QAC3B,CACAgN,gBAAgBpD,GACO,OAAfA,EAAKiB,MACL5I,KAAK6W,WAAW,0BAGhB7W,KAAKwK,SAAS7C,EAAKiB,OAAO,GAE9B,MAAMrF,EAAOoE,EAAKpE,KAAKqF,MACjB4K,EAAQ7L,EAAK8L,QAEnB,GAAIzT,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GACvB,MAAM,cAAyB,GAAGiQ,KAASjQ,iBAAqBoE,GAQpE,OANA3H,KAAKuG,QAAQF,MAAM8D,IAAI5G,GAET,OAAViQ,GACAxT,KAAKuG,QAAQD,SAAS6D,IAAI5G,GAE9BvD,KAAK6W,WAAW,GAAG7W,KAAKsI,QAAQ/E,wBACzB,EACX,CAEAyH,oBAAoBrD,GAChB,MAAM6L,EAAQ7L,EAAK8L,QACA,OAAf9L,EAAKiB,MACL5I,KAAK6W,WAAW,0BAGhB7W,KAAKwK,SAAS7C,EAAKiB,OAAO,GAE9B,MAAMqG,EAAO,cAAcjP,KAAKyF,SAChCzF,KAAKyF,SACLzF,KAAK6W,WAAW,GAAG5H,6BAAgCA,0BAA6BA,MAASA,QACzF,IAAK,MAAM8J,KAAWpR,EAAKtB,MAAO,CAC9B,MAAM9C,EAAOwV,EAAQnQ,MAErB,GAAI5I,KAAKuG,QAAQF,MAAMsG,IAAIpJ,GACvB,MAAM,cAAyB,GAAGiQ,KAASjQ,iBAAqBoE,GAGpE3H,KAAKuG,QAAQF,MAAM8D,IAAI5G,GACT,OAAViQ,GACAxT,KAAKuG,QAAQD,SAAS6D,IAAI5G,GAE9B,MAAMyV,EAAQhZ,KAAKsI,QAAQ/E,GAC3BvD,KAAK6W,WAAW,GAAGmC,KAAS/J,UAChC,CAEA,OADAjP,KAAK6W,WAAW,UAAU5H,cACnB,EACX,CACAnE,WAAWnD,GACP,IAAIiB,EAAQ,GAAKjB,EAAKiB,MACtB,MAAM8K,EAAO/L,EAAK+L,KAKlB,GAJA9K,EAAQA,EAAM3O,QAAQ,MAAO,QAC7B2O,EAAQA,EAAM3O,QAAQ,KAAM,OAC5B2O,EAAQA,EAAM3O,QAAQ,MAAO,OAC7B2O,EAAQA,EAAM3O,QAAQ,MAAO,OAChB,OAATyZ,EACA,MAAM,IAAI5Q,MAAM,wCAGpB,OADA9C,KAAK6W,WAAW,qBAAqBjO,eAC9B,IAAMA,EAAQ,GACzB,CACA6D,cAAc9E,GACV,MAAMsR,EAAcjZ,KAAKkX,UAAU,aAC7BS,EAAW3X,KAAKkX,UAAU,cAEhClX,KAAK4W,QAAQ,IAAIZ,EAASF,EAAamD,EAAYrQ,QACnD5I,KAAKwK,SAAS7C,EAAKsC,OAAO,GAC1BjK,KAAK4W,QAAQ5W,KAAKsX,SAASK,IAC3B3X,KAAK4W,QAAQqC,GACbjZ,KAAKwK,SAAS7C,EAAKiM,UAAU,GAC7B5T,KAAK4W,QAAQe,EACjB,EAGJ,GAA2B,iBAAhB,WAAyD,iBAArB5e,UAAe,MAAgB,CAE1E,MAAMmgB,EAAQngB,UAAUmgB,MACpBA,EAAMC,kBACND,EAAMC,iBAAiB,SAAUjD,EAEzC,6PCvnDO,MAAMkD,EAAW,CACpB,OAAQ,MAAO,MAAO,MAAO,MAAO,MACpC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACpC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG1BC,EAAmB,CAC5B,QAAS,OAAQ,MAAO,KAAM,KAAM,MAG3BC,EAAiB,CAC1B,KAAM,MAAO,KAAM,MAAO,OAKjBC,EAAc,CAAC,EAC5BF,EAAiBza,SAAQ+K,IACrByP,EAASnZ,KAAK0J,GACd4P,EAAY5P,IAAQ,CAAI,IAKrB,MAAM6P,EAAgB,CAAC,EAC9BF,EAAe1a,SAAQ+K,IACnByP,EAASnZ,KAAK0J,GACd6P,EAAc7P,IAAQ,CAAI,IAG9ByP,EAASxY,MAAK,CAACL,EAAGoK,IAAMA,EAAE5Q,OAASwG,EAAExG,SAE9B,MAAM0f,EAAS,IAAIC,OAAO,YAAcN,EAASvY,KAAK,KAAO,8CCApE,UApCiB,CACb,IAAK,IACL,MAAO,IACP,IAAK,IACL,MAAO,IACP,KAAM,KACN,MAAO,MACP,MAAO,MACP,MAAO,MACP,KAAM,KACN,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,KAAM,KACN,SAAU,SACV,eAAgB,eAChB,IAAK,MACL,OAAQ,OACR,OAAQ,OACR,IAAK,IACL,IAAK,IACL,KAAM,KACN,KAAM,KACN,QAAS,QACT,MAAO,MACP,KAAM,OACN,KAAM,OACN,KAAM,WACN,UAAW,UACX,SAAU,SACV,UAAW,UACX,QAAS,QACT,KAAM,2LClCV,uBACI,KAAQ,CACJT,KAAM,QACNwI,MAAO,CACH+Q,WAAY,gBACZC,cAAe,QACfC,YAAa,CAAC,QAAS,QAAS,WAChCC,YAAa,WAGrB,MAAO,CACH1Z,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEVA,EAAIC,SAAU,EACdD,EAAIE,KAAK,aAAeF,EAAItX,QAC5BsX,EAAIE,KAAK,eAAiBF,EAAI9E,YAC9B8E,EAAIG,gBAAkB,GAEtBH,EAAII,UAAY,SAAUC,EAASC,GAC/B,GAAuB,mBAAZD,EACP,OAAOA,EAEX,GAAIL,EAAIO,SAASF,GACb,OAAOL,EAAIO,SAASF,GAGxB,GAAIA,EAAQlhB,QAAQ,OAAS,EAAG,CAC5B,IAAK,IAAIqF,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMgc,EAAWR,EAAI9T,WAAW1H,GAChC,GAAIgc,EAASH,GACT,OAAOG,EAASH,EAExB,CACA,OAAOC,CACX,CAEA,MAAMG,EAAUT,EAAIU,UAAYV,EAAIU,UAAY,CAACV,EAAIW,WACrD,IAAK,MAAMC,KAAWH,EAAS,CAC3B,MAAMI,EAAQD,EAAU,KAAOP,EAC/B,IAAK,IAAI7b,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAMD,EAAQyb,EAAI9T,WAAW1H,GAC7B,GAAID,EAAMsc,GACN,OAAOtc,EAAMsc,EAErB,CACJ,CACA,OAAOP,CACX,EAEAN,EAAIc,WAAa,SAAUT,EAASU,GAChC,MAAMpa,EAAIqZ,EAAII,UAAUC,GACxB,GAAiB,mBAAN1Z,EACP,OAAOA,EAEX,MAAM,IAAIoC,MAAM,IAAIgY,uBACxB,EAEAf,EAAIgB,OAAS,SAAU1J,EAAM2J,GAEzB,MAAMC,EAAKlB,EAAIE,KAAK5I,GACpB,GAAI4J,EACA,OAAOA,EAAGC,MAAMlb,KAAMgb,GAG1B,MAAMta,EAAIqZ,EAAII,UAAU9I,GACxB,IAAK3Q,EACD,MAAM,IAAIoC,MAAM,qBAAuBuO,GAE3C,OAAO3Q,EAAEwa,MAAMlb,KAAMgb,EACzB,EAEAjB,EAAIoB,UAAY,GAChBpB,EAAIqB,WAAa,GAEjB,MAAMC,EAAKtB,EAAIuB,QAAWjd,IACtBA,EAAI,KAAOA,GACFkd,UAAUld,EAAEtE,OAAS,GAElCggB,EAAIyB,OAAS,CAACnd,EAAGod,KACb,IAAIC,EAAQ,GACZ,IAAK,IAAInd,EAAI,EAAGA,EAAIkd,EAAMld,IACtBmd,GAAS,IAGb,OADArd,EAAIqd,EAAQrd,GACHkd,UAAUld,EAAEtE,OAAS0hB,EAAK,EAEvC1B,EAAI4B,aAAgBriB,GACTA,EAAEsiB,cAAgB,IAAMP,EAAG/hB,EAAEuiB,WAAa,GAAK,IAAMR,EAAG/hB,EAAEwiB,WAErE/B,EAAIgC,aAAgBziB,GACT+hB,EAAG/hB,EAAE0iB,YAAc,IAAMX,EAAG/hB,EAAE2iB,cAAgB,IAAMZ,EAAG/hB,EAAE4iB,cAEpEnC,EAAIoC,iBAAmB,CAAC7iB,EAAG8iB,KACvB,MAAMC,EAAU/iB,EAAEsiB,cAAgB,IAAMP,EAAG/hB,EAAEuiB,WAAa,GAAK,IAAMR,EAAG/hB,EAAEwiB,WACpEQ,EAAUjB,EAAG/hB,EAAE0iB,YAAc,IAAMX,EAAG/hB,EAAE4iB,cAAgB,IAAMb,EAAG/hB,EAAE2iB,cACzE,OAAIG,EAAIG,MAAM,iCACHF,EAAU,IAAMC,EAEvBF,EAAIG,MAAM,mBACHF,EAEPD,EAAIG,MAAM,iBACHD,EAEJD,EAAU,IAAMC,CAAO,EAElCvC,EAAIyC,WAAcne,IAId,IAFAA,GAAK,GAAKA,GAAGpE,QAAQ,cAAe,KAE9BsiB,MAAM,oBACR,OAAO,IAAIlI,KAAqB,IAAhBoI,WAAWpe,IAG/B,GAAIA,EAAEke,MAAM,oBAAqB,CAC7B,MAAMjjB,EAAI,IAAI+a,KACR9T,GAAKlC,EAAI,MAAMnE,MAAM,KAC3B,OAAO,IAAIma,KAAK/a,EAAEsiB,cAAetiB,EAAEuiB,WAAYviB,EAAEwiB,UAAWrX,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAC3G,CAEAlC,EAAIA,EAAEpE,QAAQ,UAAW,KAEzB,MAAMsG,GADNlC,GAAK,UACOnE,MAAM,KAClB,OAAO,IAAIma,KAAK5P,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAAM,EAAGkE,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAAKkE,SAASlE,EAAE,IAAI,EAGvHwZ,EAAI2C,YAAc,GAElB3C,EAAI4C,IAAM,CAAC/T,EAAOgU,KACd,QAAqB,IAAVhU,EAAuB,CAC9B,MAAMiU,EAAK9C,EAAI5S,WAAWyV,GAC1B7C,EAAI+C,OAAO1P,KAAKyP,EAAG5Z,IAAK,CAAEC,KAAM2Z,EAAG3Z,KAAME,KAAMyZ,EAAGzZ,MACtD,CACA,OAAOwF,CAAK,CAEpB,GAEJ,OAAQ,CACJxI,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACNA,EAAIgB,QACJhB,EAAIgB,OAAO,UAAW,CAAChB,IAEL,WAAlBA,EAAIgD,WACJhD,EAAIiD,YAAYjD,GAEpBA,EAAIE,KAAK,QAAU,EACvB,GAGJ,YAAa,CAAE7Z,KAAM,QAASwI,MAAO,KACrC,cAAe,CAAExI,KAAM,QAASwI,MAAO,KACvC,WAAY,CAAExI,KAAM,QAASwI,MAAO,iBACpC,SAAU,CAAExI,KAAM,QAASwI,MAAO,KAClC,KAAM,CAAExI,KAAM,QAASwI,MAAO,GAC9B,MAAO,CAAExI,KAAM,QAASwI,MAAO,GAC/B,IAAK,CAAExI,KAAM,QAASwI,MAAO,GAC7B,IAAK,CAAExI,KAAM,QAASwI,MAAO,GAC7B,KAAM,CAAExI,KAAM,QAASwI,MAAO,GAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,GAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,GAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,MAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,MAC9B,MAAO,CAAExI,KAAM,QAASwI,MAAO,KAC/B,OAAQ,CAAExI,KAAM,QAASwI,MAAO,KAChC,OAAQ,CAAExI,KAAM,QAASwI,MAAO,KAChC,QAAS,CAAExI,KAAM,QAASwI,MAAO,KACjC,GAAM,CAAExI,KAAM,QAASwI,OAAO,GAC9B,GAAM,CAAExI,KAAM,QAASwI,OAAO,GAC9B,QAAS,CAAExI,KAAM,QAASwI,MAAO,GACjC,KAAQ,CAAExI,KAAM,QAASwI,OAAO,GAChC,MAAS,CAAExI,KAAM,QAASwI,OAAO,GACjC,GAAM,CAAExI,KAAM,QAASwI,MAAO2L,KAAK0I,IACnC,IAAK,CAAE7c,KAAM,QAASwI,MAAO,IAC7B,KAAQ,CAAExI,KAAM,QAASwI,MAAO,MAChC,UAAa,CAAExI,KAAM,QAASwI,WAAOzF,GACrC,MAAO,CAAE/C,KAAM,QAASwI,WAAOzF,GAC/B,WAAY,CAAE/C,KAAM,QAASwI,MAAO,IACpC,KAAM,CAAExI,KAAM,QAASwI,MAAO,IAC9B,OAAQ,CAAExI,KAAM,QAASwI,MAAO,IAChC,KAAM,CAAExI,KAAM,QAASwI,MAAO,IAC9B,GAAM,CAAExI,KAAM,QAASwI,MAAO,MAC9B,GAAM,CAAExI,KAAM,QAASwI,MAAO,MAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAOsU,KAC9B,MAAO,CAAE9c,KAAM,QAASwI,MAAOuU,KAC/B,MAAO,CACH/c,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAO,EACX,GAEJ,MAAO,CACH7I,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAO,CAAC,CACZ,GAEJ,QAAS,CACL7I,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAO,CAAC,CACZ,GAEJ,UAAW,CACP7I,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,OAAOA,EAAIgB,OAAO,QAAS,CAAChB,GAChC,GAGJ,KAAM,CACF3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb1b,EAAI0b,EAAI2C,YAAcre,EACtB0b,EAAI2C,YAAc,GAElB3C,EAAI9T,WAAW,GAAG,SAAY5H,EAAI,KAClC0b,EAAI+C,OAAOM,KAAK,SAAU/e,EAAI,GAClC,EACAiT,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACbA,EAAI2C,aAAere,CACvB,EACAiT,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACb0T,gBAAgB,EAChBxL,MAAM,EACN5I,GAAI,YAAa1I,GACb,MAAMwZ,EAAMxZ,EAAE+N,MACRnI,EAAI5F,EAAEM,KAAK,IACjBkZ,EAAIgB,OAAO,KAAM,CAAC5U,EAAG4T,GACzB,EACAzI,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACb0T,gBAAgB,EAChBxL,MAAM,EACN5I,GAAI,YAAa1I,GACb,MAAMwZ,EAAMxZ,EAAE+N,MACRnI,EAAI5F,EAAEM,KAAK,IACjBkZ,EAAIgB,OAAO,OAAQ,CAAC5U,EAAG4T,GAC3B,EACAzI,aAAa,GAEjB,OAAQ,CAAElR,KAAM,QAASwI,MAAO,IAChC,UAAW,CACPxI,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACVA,EAAI9T,WAAW,GAAG,QAAU,EAChC,EACAqL,aAAa,GAEjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACbA,EAAI+C,OAAOM,KAAK,SAAU/e,EAAI,GAClC,EACAiT,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACVif,QAAQC,IAAIlf,EAChB,EACAiT,aAAa,GAGjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpB0T,gBAAgB,EAChBxL,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,MAChBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GAEb,GAAiB,iBAANpK,EACP,OAAOA,EAAIoK,EAGf,GAAiB,iBAANpK,EAAgB,CACvB,IAAIlC,EAAI,GACR,IAAK,IAAIE,EAAI,EAAGA,EAAIkG,SAASkG,GAAIpM,IAC7BF,GAAKkC,EAET,OAAOlC,CACX,CAEA,GAAIkC,aAAa2B,MAAO,CACpB,MAAMsb,EAAK,GACX,IAAK,IAAIjf,EAAI,EAAGA,EAAIkG,SAASkG,GAAIpM,IAC7Bif,EAAGvd,QAAQM,GAEf,OAAOid,CACX,CACA,OAAOjd,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAQkE,SAASlE,GAAK,GAAM,CAChC,GAEJ,KAAM,CACFH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAQkE,SAASlE,GAAK,GAAM,CAChC,GAEJ,KAAM,CACFH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOA,EAAIA,CACf,GAEJ,MAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAO4J,KAAKkJ,IAAIld,EAAGoK,EACvB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,GAAKoK,CAChB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,GAAKoK,CAChB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,EAAIoK,CACf,GAEJ,IAAK,CACDvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,IAAMoK,CACjB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAOpK,IAAMoK,CACjB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GAEb,GAAmB,iBAAR,EAAkB,CAGzB,OAFc3C,KAAKC,UAAU1H,KACfyH,KAAKC,UAAU0C,EAEjC,CACA,OAAOpK,IAAMoK,CACjB,GAEJ,MAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GAEb,GAAmB,iBAAR,EAAkB,CAGzB,OAFc3C,KAAKC,UAAU1H,KACfyH,KAAKC,UAAU0C,EAEjC,CACA,OAAOpK,IAAMoK,CACjB,GAEJ,MAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,QAC5BkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG5F,EAAGoK,GAChB,OAAQpK,GAAK4F,GAAOA,GAAKwE,CAC7B,GAEJ,OAAQ,CACJvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpB0T,gBAAgB,EAChBxL,MAAM,EACN5I,GAAI,SAAU0B,KAAMpK,GAGhB,OAFAA,EAAE+N,MACF/N,EAAEN,KAAK0K,GACApK,EAAEmd,QAAO,CAACC,EAAGnd,IAAMmd,EAAInd,GAClC,GAGJ,OAAQ,CACJJ,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACLA,EAAI6D,YACL7D,EAAI6D,UAAY,GAEpB7D,EAAI6D,WACR,EACAtM,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACLA,EAAI6D,YACL7D,EAAI6D,UAAY,GAEpB7D,EAAI6D,WACR,EACAtM,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACLA,EAAI6D,YACL7D,EAAI6D,UAAY,GAEpB7D,EAAI6D,WACR,EACAtM,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACVA,EAAI6D,UAAY,CACpB,EACAtM,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACVA,EAAI6D,WAAa,GACrB,EACAtM,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAIV,OAHKA,EAAI6D,YACL7D,EAAI6D,UAAY,GAEb7D,EAAI6D,SACf,GAGJ,OAAQ,CACJxd,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EAEN5I,GAAI,SAAU4U,IAAK9D,KAGf,OAAO+D,KAAKD,IAChB,GAEJ,aAAc,CACVzd,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1F,EAAMwW,GAChB,OAAOA,EAAII,UAAU5W,EAAM,KAC/B,GAEJ,SAAU,CACNnD,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfV,GAAI,SAAU1F,KAAMsN,MAMhB,GAHoB,iBAATtN,OACPA,KAAOua,KAAKva,OAEI,mBAATA,KACP,MAAM,IAAIT,MAAM,mBAQpB,OALM+N,gBAAgB3O,QAClB2O,KAAO,CAACA,OAILtN,KAAK2X,MAAM,KAAMrK,KAC5B,GAEJ,MAAS,CACLzQ,KAAM,OACNuJ,KAAM,GACNT,SAAS,EACTD,GAAI8U,iBAEJ,EACAzM,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfT,SAAS,EACTD,GAAI8U,eAAgBrd,EAAGmQ,EAAMkJ,GAKzB,GAHiB,iBAANrZ,IACPA,EAAIqZ,EAAIc,WAAWna,EAAG,cAEpBA,aAAasd,UACf,MAAM,IAAIlb,MAAM,8CAGpB,aAAapC,KAAKmQ,EACtB,GAEJ,WAAY,CACRzQ,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBV,GAAI,SAAUgV,IAAKC,EAAGrN,MAMlB,GAHmB,iBAARoN,MACPA,IAAMH,KAAKG,MAEI,iBAARA,IACP,MAAM,IAAInb,MAAM,wBAWpB,MARiB,mBAANob,IACPA,EAAID,IAAIC,IAGNrN,gBAAgB3O,QAClB2O,KAAO,CAACA,OAGLqN,EAAEhD,MAAM+C,IAAKpN,KACxB,GAEJ,OAAQ,CACJzQ,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUlL,EAAMgc,GAChB,GAAsB,WAAlBA,EAAIgD,UACJ,MAAM,IAAIja,MAAM,2BAEpBiX,EAAI9T,WAAW,GAAG,QAAU,GAC5B8T,EAAIlU,OAAOsY,MAAMpgB,EAAMgc,EAAIW,UAAW,CAAE0D,UAAU,EAAOC,UAAU,IACnE,MAAMC,EAAMvE,EAAI9T,WAAW,GAAG,QAAU,GAIxC,OAHIqY,GACAvE,EAAI+C,OAAOlI,MAAM0J,GAEdA,CACX,GAEJ,QAAS,CACLle,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbV,GAAI,SAAUlL,EAAMgc,GAChB,GAAsB,WAAlBA,EAAIgD,UACJ,MAAM,IAAIja,MAAM,4BAEpBiX,EAAIlU,OAAOsY,MAAMpgB,EAAMgc,EAAIW,UAAW,CAAE0D,UAAU,EAAOG,UAAU,IACnE,MAAMD,EAAMvE,EAAI9T,WAAW,GAAG,QAAU,GAIxC,OAHIqY,GACAvE,EAAI+C,OAAOlI,MAAM0J,GAEdA,CACX,GAEJ,KAAM,CACFle,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGqZ,GAGb,GAAiB,mBAANrZ,EACP,OAAOA,EAAEqZ,GAGb,GAAiB,iBAANrZ,EAAgB,CACvB,MAAM8d,EAAKzE,EAAIc,WAAWna,EAAG,MAC7B,GAAkB,mBAAP8d,EACP,OAAOA,EAAGzE,EAElB,CAEA,OAAOrZ,CACX,GAEJ,SAAU,CACNN,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGqZ,GAKb,GAJiB,iBAANrZ,IACPA,EAAIqZ,EAAIc,WAAWna,EAAG,WAGtB+d,aAAeA,YAAYC,IAAK,CAChC,MAAMC,EAAKF,YAAYC,MACvBhe,EAAEqZ,GAEF,OADW0E,YAAYC,MACVC,CACjB,CACK,CACD,MAAMA,EAAKtK,KAAKqK,MAChBhe,EAAEqZ,GAEF,OADW1F,KAAKqK,MACHC,CACjB,CACJ,GAEJ,IAAK,CACDve,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAGV,GADAA,EAAIE,KAAK2E,YAAa,GACjB7E,EAAIE,KAAK9R,SACV,MAAM,IAAIrF,MAAM,UAExB,GAGJ,QAAS,CACL1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,cAAeA,CACnB,GAEJ,OAAU,CACN/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,cAAeA,CACnB,GAEJ,QAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOqH,OAAOrH,EAClB,GAEJ,MAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOqH,OAAOrH,EAClB,GAEJ,OAAQ,CACJ/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO1B,SAAS0B,EACpB,GAEJ,MAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO1B,SAAS0B,EACpB,GAEJ,OAAQ,CACJ/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOsW,WAAWtW,EACtB,GAEJ,QAAW,CACP/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOsW,WAAWtW,EACtB,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO1B,SAAS0B,EACpB,GAEJ,MAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOsW,WAAWtW,EACtB,GAEJ,QAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO0Y,MAAM1Y,EACjB,GAEJ,OAAQ,CACJ/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GAEV,OAAO2Y,OAAOD,MAAM1Y,EACxB,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOkE,SAASlE,GAAGQ,SAAS,GAChC,GAEJ,OAAQ,CACJX,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KACpBkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG9M,GACb,OAAOoL,SAAS0B,GAAGpF,SAAS1H,EAChC,GAEJ,KAAM,CACF+G,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO1B,SAAS0B,GAAGpF,SAAS,EAChC,GAEJ,OAAQ,CACJX,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GACb,MAAM1b,EAAIoG,SAAS0B,GAAGpF,SAAS,GAC/BgZ,EAAIgB,OAAO,KAAM,CAAC1c,EAAG0b,GACzB,GAEJ,IAAO,CACH3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBkI,MAAM,EACN5I,GAAI,SAAUvK,EAAGqgB,EAAGpU,GAChB,MAAM0Q,EAAMlV,IACR,MAAM6Y,EAAK,KAAQva,SAAS,GAAK0B,GAAGpF,SAAS,IAC7C,OAAOie,EAAGzD,UAAUyD,EAAGjlB,OAAS,EAAGilB,EAAGjlB,OAAO,EAEjD,MAAO,IAAMshB,EAAG3c,GAAK2c,EAAG0D,GAAK1D,EAAG1Q,EACpC,GAGJ,OAAQ,CACJvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,GAAKoK,CACjB,GAEJ,QAAS,CACLvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,GAAKoK,CACjB,GAEJ,QAAS,CACLvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAASA,EAAS,EAAJ,CAClB,GAGJ,GAAM,CACF/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,EAAIoK,CAChB,GAEJ,IAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,EAAIoK,CAChB,GAEJ,IAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,EAAIoK,CAChB,GAEJ,IAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAASA,CACb,GAEJ,QAAW,CACP/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,GAAKoK,CACjB,GAEJ,QAAW,CACPvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,GAAKoK,CACjB,GAEJ,SAAY,CACRvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQpK,IAAMoK,CAClB,GAGJ,MAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAKjE,MAAM8L,KAGJ9L,MAAM8L,KAAK7H,GAAGpM,OAFVyT,OAAOrH,GAAGpM,MAGzB,GAEJ,OAAQ,CACJqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GACb,OAAOiN,OAAOnP,GAAGnF,QAAQqH,GAAK,CAClC,GAEJ,IAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAKqH,OAAOyR,cAGLzR,OAAOyR,cAAc9Y,GAFjBqH,OAAO0R,aAAa/Y,EAGnC,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAKqH,OAAOrO,UAAUggB,YAGf3R,OAAOrH,GAAGgZ,YAAY,GAFlB3R,OAAOrH,GAAGlI,WAAW,EAGpC,GAEJ,OAAQ,CACJmC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,MAChCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGE,EAAGgC,GACZhC,GAAK,IACLA,EAAI,GAER,MAAM6gB,EAAK5R,OAAOnP,GAGlB,OAFY+gB,EAAG7D,UAAU,EAAGhd,EAAI,GAEnBgC,EADD6e,EAAG7D,UAAUhd,EAAI,EAEjC,GAEJ,OAAQ,CACJ6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5BkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGoK,GAChB,IAAIoH,EAAMvE,OAAOnP,GACjB0T,EAAMA,EAAIwJ,UAAUhb,GACpB,MAAMyM,EAAM+E,EAAI7Y,QAAQyR,GACxB,OAAa,IAATqC,EACO,EAEJA,EAAM,EAAIzM,CACrB,GAEJ,KAAM,CACFH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GACb,OAAIlC,aAAa6D,OACb7D,EAAE4B,KAAKM,GACAlC,GAEJmP,OAAOnP,GAAKmP,OAAOjN,EAC9B,GAEJ,OAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GACb,OAAIlC,aAAa6D,OACb7D,EAAE4B,KAAKM,GACAlC,GAEJmP,OAAOnP,GAAKmP,OAAOjN,GAAK,IACnC,GAEJ,QAAS,CACLH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAKjE,MAAM8L,KAGJ9L,MAAM8L,KAAK7H,GAFPqH,OAAOrH,GAAGjM,MAAM,GAG/B,GAEJ,QAAS,CACLkG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU9C,EAAGkZ,GACb,IAAIhhB,EAAI,GACR,IAAK,IAAIE,EAAI,EAAGA,EAAI8gB,EAAK9gB,IACrBF,GAAKmP,OAAOrH,GAEhB,OAAO9H,CACX,GAEJ,OAAQ,CACJ+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GAGb,OAFAlC,EAAI,GAAKA,GAEAnE,MADTqG,EAAI,GAAKA,GACSxG,OAAS,CAC/B,GAEJ,IAAO,CACHqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5BkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAG8e,GAEhB,OADAA,EAAMA,GAAO,EACL7R,OAAOnP,GAAGkd,UAAUhb,EAAI,EAAGA,EAAI8e,EAAM,EACjD,GAEJ,OAAQ,CACJjf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,IAAK,KACjCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAG8e,GAEhB,OADAA,EAAMA,GAAO,EACL7R,OAAOnP,GAAGkd,UAAUhb,EAAI,EAAGA,EAAI8e,EAAM,EACjD,GAEJ,KAAQ,CACJjf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,OACpBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGghB,GACb,OAAQ7R,OAAOnP,GAAGkd,UAAU,EAAG8D,EACnC,GAEJ,QAAS,CACLjf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,KAC1BkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGghB,GACb,OAAQ7R,OAAOnP,GAAGkd,UAAU,EAAG8D,EACnC,GAEJ,MAAS,CACLjf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,OACpBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGghB,GAEb,OADAhhB,EAAI,GAAKA,GACCkd,UAAUld,EAAEtE,OAASslB,EAAKhhB,EAAEtE,OAC1C,GAEJ,QAAS,CACLqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,KAC1BkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGghB,GAEb,OADAhhB,EAAI,GAAKA,GACCkd,UAAUld,EAAEtE,OAASslB,EAAKhhB,EAAEtE,OAC1C,GAEJ,KAAM,CACFqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GACb,OAAQ,GAAKlC,GAAGnE,MAAM,GAAKqG,EAC/B,GAEJ,QAAS,CACLH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GAGb,MAAMhC,GAFNF,EAAI,GAAKA,GAEGnF,QADZqH,EAAI,GAAKA,GAET,OAAIhC,EAAI,EACG,CAACF,GAEL,CAACA,EAAEkd,UAAU,EAAGhd,GAAIF,EAAEkd,UAAUhd,EAAIgC,EAAExG,QACjD,GAEJ,KAAM,CACFqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,KAAM,MAC3BkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGwZ,GAEhB,MAAMxb,GADNF,EAAImP,OAAOnP,IACCnF,QAAQqH,GACpB,OAAIhC,EAAI,GACJwb,EAAIE,KAAK,MAAQ,GACV5b,IAEX0b,EAAIE,KAAK,MAAQ5b,EAAEkd,UAAUhd,EAAIgC,EAAExG,QAC5BsE,EAAEkd,UAAU,EAAGhd,GAC1B,GAEJ,OAAQ,CACJ6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,KAAM,IAAK,KAClCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGoK,GAIhB,OAHAtM,EAAI,GAAKA,GACKkd,UAAU,EAAGhb,EAAI,GACnBlC,EAAEkd,UAAWhb,EAAI,EAAIoK,EAErC,GAGJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MACtCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGoK,GAChB,OAAO6C,OAAOnP,GAAGnE,MAAMqG,GAAGM,KAAK8J,EACnC,GAEJ,MAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,KAAM,CAAC,IAAK,MAChCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGoK,GAEhB,OAAO6C,OAAOnP,GAAGpE,QAAQsG,EAAGoK,EAChC,GAEJ,MAAO,CACHvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GAEV,OADAA,EAAImP,OAAOnP,GAAGpE,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAEtD,GAEJ,OAAQ,CACJmG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GAEV,OADAA,EAAImP,OAAOnP,GAAGpE,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAEtD,GAGJ,QAAS,CACLmG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGL,aACrB,GAEJ,QAAS,CACLoC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGpF,aACrB,GAEJ,QAAS,CACLmH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GAOV,OALWmP,OAKO,GAAKnP,GALApE,QAAQ,oBAAoB,SAAUikB,GACrD,MAAMoB,EAAMpB,EAAEjgB,WAAW,GAAK,GAC9B,OAAOuP,OAAO0R,aAAaI,EAC/B,GAGR,GAEJ,SAAU,CACNlf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GAOV,OALWmP,OAKO,GAAKnP,GALApE,QAAQ,oBAAoB,SAAUikB,GACrD,MAAMoB,EAAMpB,EAAEjgB,WAAW,GAAK,GAC9B,OAAOuP,OAAO0R,aAAaI,EAC/B,GAGR,GAEJ,SAAU,CACNlf,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGpE,QAAQ,gBAAgB,SAAUkM,GAC/C,OAAOqH,OAAO0R,aAAa/Y,EAAElI,WAAW,GAAK,MACjD,GACJ,GAEJ,SAAU,CACNmC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGpE,QAAQ,gBAAgB,SAAUkM,GAC/C,OAAOqH,OAAO0R,aAAa/Y,EAAElI,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACRmC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGpE,QAAQ,gBAAgB,SAAUkM,GAC/C,OAAOqH,OAAO0R,aAAa/Y,EAAElI,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACRmC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAOmP,OAAOnP,GAAGpE,QAAQ,oBAAoB,SAAUkM,GACnD,OAAOqH,OAAO0R,aAAa/Y,EAAElI,WAAW,GAAK,MACjD,GACJ,GAEJ,WAAY,CACRmC,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb,MAAMwF,EAAOxF,EAAIE,KAAK,UAChBuF,EAAOzF,EAAIE,KAAK,UAChBwF,EAAO1F,EAAIE,KAAK,YAChByF,EAAO3F,EAAIE,KAAK,YACtB,IAAIlI,EAAM,GACNxT,EAAI,EACR,KAAOA,EAAIF,EAAEtE,QAAQ,CAEjB,MAAM4lB,EAAKthB,EAAEkd,UAAUhd,EAAGA,EAAI,GACxBqhB,EAAKF,EAAKxmB,QAAQymB,GACxB,GAAIC,GAAM,EAAG,CACT7N,GAAO0N,EAAKI,OAAOD,EAAK,GACxBrhB,GAAK,EACL,QACJ,CAEA,MAAMiC,EAAInC,EAAEwhB,OAAOthB,GACblF,EAAImmB,EAAKtmB,QAAQsH,GACnBnH,GAAK,GACL0Y,GAAOwN,EAAKM,OAAOxmB,GACnBkF,MAGJwT,GAAOvR,EACPjC,IACJ,CACA,OAAOwT,CACX,GAEJ,WAAY,CACR3R,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb,MAAMwF,EAAOxF,EAAIE,KAAK,UAChBuF,EAAOzF,EAAIE,KAAK,UAChBwF,EAAO1F,EAAIE,KAAK,YAChByF,EAAO3F,EAAIE,KAAK,YACtB,OAAO5b,EAAEnE,MAAM,IAAIgM,KAAK1F,IACpB,MAAMjC,EAAIghB,EAAKrmB,QAAQsH,GACvB,GAAIjC,GAAK,EACL,OAAOihB,EAAKK,OAAOthB,GAEvB,MAAMuhB,EAAIL,EAAKvmB,QAAQsH,GACvB,OAAIsf,GAAK,EACEJ,EAAKnE,UAAc,EAAJuE,EAAW,EAAJA,EAAQ,GAElCtf,CAAC,IACTK,KAAK,GACZ,GAEJ,OAAQ,CACJT,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,IAAIxP,EAASlM,EAGb,OAFAkM,EAASwP,EAAIgB,OAAO,WAAY,CAACxQ,EAAQwP,IACzCxP,EAASwP,EAAIgB,OAAO,WAAY,CAACxQ,EAAQwP,IAClCxP,CACX,GAEJ,OAAQ,CACJnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,IAAIxP,EAASlM,EAGb,OAFAkM,EAASwP,EAAIgB,OAAO,WAAY,CAACxQ,EAAQwP,IACzCxP,EAASwP,EAAIgB,OAAO,WAAY,CAACxQ,EAAQwP,IAClCxP,CACX,GAEJ,SAAU,CAAEnK,KAAM,QAASwI,MAAO,gEAClC,WAAY,CAAExI,KAAM,QAASwI,MAAO,6BACpC,SAAU,CAAExI,KAAM,QAASwI,MAAO,kEAClC,WAAY,CAAExI,KAAM,QAASwI,MAAO,sDAEpC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO6B,KAAKC,UAAU9B,EAC1B,GAEJ,cAAe,CACX/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAO6B,KAAKC,UAAU9B,EAAG,KAAM,EACnC,GAEJ,WAAY,CACR/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAO2J,KAAK+X,MAAM1hB,EACtB,GAGJ,UAAW,CACP+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,IAAIiG,EACJ,MAAMtf,GAAK,GAAKiK,GAAG4R,MAAM,yBAGrByD,EADM,OAANtf,EACK,IAAIgZ,OAAO/O,EAAG,KAGd,IAAI+O,OAAOhZ,EAAE,GAAIA,EAAE,IAE5B,MAAMuf,EAAKlG,EAAI9T,WAAW,GAAG,SAAW,GAClCiY,EAAI1Q,OAAOjN,GAAGgc,MAAMyD,GAC1B,IAAIzV,EAAS2T,EACb,GAAI8B,EAAGE,aAGF,GAAIhC,GAEDA,EAAEnkB,OAAS,EAAG,CACdwQ,EAAS2T,EAAE,GACX,IAAK,IAAI3f,EAAI,EAAGA,EAAI2f,EAAEnkB,OAAQwE,IAC1B0hB,EAAG1hB,EAAI,GAAK2f,EAAE3f,EAEtB,CAEJ,OAAOgM,CACX,GAEJ,QAAS,CAAEnK,KAAM,QAASwI,MAAO,IACjC,SAAU,CACNxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,IAAK,MACtCkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGoK,GAChB,IAAIqV,EACJ,MAAMtf,EAAIH,EAAEgc,MAAM,wBAOlB,OALIyD,EADM,OAANtf,EACK,IAAIgZ,OAAOnZ,EAAG,KAGd,IAAImZ,OAAOhZ,EAAE,GAAIA,EAAE,IAErB8M,OAAOnP,GAAGpE,QAAQ+lB,EAAIrV,EACjC,GAEJ,SAAU,CACNvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,GACb,IAAIyf,EACJ,MAAMtf,EAAIH,EAAEgc,MAAM,wBAOlB,OALIyD,EADM,OAANtf,EACK,IAAIgZ,OAAOnZ,EAAG,KAGd,IAAImZ,OAAOhZ,EAAE,GAAIA,EAAE,IAErB8M,OAAOnP,GAAGnE,MAAM8lB,EAC3B,GAGJ,OAAQ,CACJ5f,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOqH,OAAOrH,GAAGlM,QAAQ,2BAA4B,MACzD,GAEJ,MAAO,CACHmG,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG5F,GACb4F,EAAIqH,OAAOrH,GACX,IAAIga,EAAI,IACR,IAAK,IAAI5hB,EAAI,EAAGA,EAAIgC,EAAGhC,IACnB4hB,GAAK,KAET5f,EAAIkE,SAASlE,IACL4F,EAAEpM,SACNwG,EAAI4F,EAAEpM,QAEV,MAAMsE,EAAI8hB,EAAI3S,OAAOrH,GACrB,OAAO9H,EAAEkd,UAAUld,EAAEtE,OAASwG,EAAGlC,EAAEtE,OACvC,GAEJ,MAAO,CACHqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG5F,GACb4F,EAAIqH,OAAOrH,GACX,IAAIga,EAAI,IACR,IAAK,IAAI5hB,EAAI,EAAGA,EAAIgC,EAAGhC,IACnB4hB,GAAK,KAET5f,EAAIkE,SAASlE,IACL4F,EAAEpM,SACNwG,EAAI4F,EAAEpM,QAEV,MAAMsE,EAAI8hB,EAAI3S,OAAOrH,GACrB,OAAO9H,EAAEkd,UAAUld,EAAEtE,OAASwG,EAAGlC,EAAEtE,OACvC,GAGJ,QAAS,CACLqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,MAAMmC,EAAIgN,OAAOnP,GAAGJ,WAAW,GAC/B,OAAQuC,GAAK,OAAUA,GAAK,KAChC,GAEJ,SAAU,CACNJ,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,MAAMmC,EAAIgN,OAAOnP,GAAGJ,WAAW,GAC/B,OAAQuC,GAAK,OAAUA,GAAK,KAChC,GAEJ,OAAQ,CACJJ,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,MAAMmC,EAAIgN,OAAOnP,GAAGwhB,OAAO,GAC3B,OAASrf,GAAK,KAAOA,GAAK,KAASA,GAAK,KAAOA,GAAK,GACxD,GAEJ,OAAQ,CACJJ,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GAEV,OAAsC,OAA/BmP,OAAOnP,GAAGke,MADC,kFAEtB,GAGJ,OAAQ,CACJnc,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGlC,GAEb,GAAIkC,aAAa2B,MACb,OAAO3B,EAAEM,KAAK,GAAKxC,GAGvB,OADWmP,OAAOjN,GAAGrG,MAAM,MACjB2G,KAAK,GAAKxC,EACxB,GAEJ,OAAQ,CACJ+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGlC,GACb,OAAIkC,aAAa2B,MACN3B,EAAErH,QAAQmF,IAEb,CACZ,GAEJ,QAAS,CACL+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAIA,aAAa2B,MACN3B,EAAExG,OAETwG,aAAarB,OACNA,OAAO6C,KAAKxB,GAAGxG,OAEnB,CACX,GAEJ,MAAO,CACHqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,OAAOA,EAAIgB,OAAO,QAAS,CAACxa,GAChC,GAEJ,OAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAGF,GAChB,GAAIkC,aAAa2B,MACb,OAAO3B,EAAEnG,OAAOmE,EAAG,EAAGF,GAE1B,MAAM,IAAIyE,MAAM,sBACpB,GAEJ,SAAU,CACN1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAGoM,GAChB,GAAIpK,aAAa2B,OAASyI,aAAazI,MAAO,CAC1C,IAAK,IAAI4d,EAAI,EAAGA,EAAInV,EAAE5Q,OAAQ+lB,IAC1Bvf,EAAEnG,OAAOmE,EAAIuhB,EAAG,EAAGnV,EAAEmV,IAEzB,OAAOvf,CACX,CACA,MAAM,IAAIuC,MAAM,wBACpB,GAEJ,QAAS,CACL1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,GAAIA,aAAa2B,MACb,OAAO3B,EAAEK,OAEb,MAAM,IAAIkC,MAAM,wBACpB,GAEJ,UAAW,CACP1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,GAEV,GAAIA,aAAa2B,MACb,OAAO3B,EAAEK,MAAK,CAACL,EAAGoK,IACP8R,WAAWlc,GAAKkc,WAAW9R,KAG1C,MAAM,IAAI7H,MAAM,0BACpB,GAEJ,YAAa,CACT1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGH,EAAGwZ,GAChB,IAAIqG,EAAQ1f,EAIZ,GAHiB,iBAANA,IACP0f,EAAQrG,EAAIc,WAAWna,EAAG,cAE1BH,aAAa2B,MACb,OAAO3B,EAAEK,KAAKwf,GAElB,MAAM,IAAItd,MAAM,4BACpB,GAEJ,OAAQ,CACJ1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,GAAIA,aAAa2B,MACb,OAAO3B,EAAE8f,UAEb,MAAM,IAAIvd,MAAM,wBACpB,GAEJ,UAAW,CACP1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,GAAIA,aAAa2B,MAAO,CACpB,IAAK,IAAI3D,EAAIgC,EAAExG,OAAS,EAAGwE,EAAI,EAAGA,IAAK,CACnC,MAAMG,EAAI6V,KAAKC,MAAMD,KAAKE,UAAYlW,EAAI,IACpC+hB,EAAM/f,EAAEhC,GACdgC,EAAEhC,GAAKgC,EAAE7B,GACT6B,EAAE7B,GAAK4hB,CACX,CACA,OAAO/f,CACX,CACA,MAAM,IAAIuC,MAAM,0BACpB,GAEJ,OAAQ,CACJ1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAGwb,GAChB,OAAOA,EAAIgB,OAAO,OAAQ,CAACxa,EAAGhC,EAAGwb,GACrC,GAEJ,OAAQ,CACJ3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,GAEb,GAAIgC,aAAa2B,MAAO,CACpB,MAAMyI,EAAIpK,EAAEnG,OAAOmE,EAAG,GACtB,OAAIoM,aAAazI,MACNyI,EAAE,GAEN,IACX,CAEA,KAAIpK,aAAarB,QAAyB,iBAAR,GAQlC,MAAM,IAAI4D,MAAM,mBAPZ,GAAIvC,EAAEhC,GAAI,CACN,MAAMgiB,EAAMhgB,EAAEhC,GAEd,cADOgC,EAAEhC,GACFgiB,CACX,CAIR,GAEJ,OAAQ,CACJngB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,MACvBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAG8gB,GAChB,GAAI9e,aAAa2B,MACb,OAAO3B,EAAEnG,OAAOmE,EAAG8gB,GAEvB,MAAM,IAAIvc,MAAM,kBACpB,GAEJ,QAAS,CACL1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,GAAIA,aAAa2B,MACb,OAAO3B,EAAE+N,MAEb,MAAM,IAAIxL,MAAM,mBACpB,GAEJ,SAAU,CACN1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,OAAOA,EAAIgB,OAAO,OAAQ,CAACxa,EAAGoK,EAAGoP,GACrC,GAEJ,OAAQ,CACJ3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,GAAIpK,aAAa2B,MAEb,OADA3B,EAAEN,KAAK0K,GACApK,EAEX,MAAM,IAAIuC,MAAM,kBACpB,GAEJ,OAAQ,CACJ1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOyH,KAAK+X,MAAM/X,KAAKC,UAAU1H,GACrC,GAEJ,MAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAIpK,aAAa2B,MACN3B,EAAE7G,OAAOiR,GAEb3C,KAAK+X,MAAM/X,KAAKC,UAAU1H,GACrC,GAEJ,QAAS,CACLH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOA,EAAEmd,QAAO,CAAC8C,EAAG7f,IAAM4T,KAAKkM,IAAID,EAAG7f,IAC1C,GAEJ,QAAS,CACLP,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOA,EAAEmd,QAAO,CAAC8C,EAAG7f,IAAM4T,KAAKmM,IAAIF,EAAG7f,IAC1C,GAEJ,OAAQ,CACJP,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,GAAIA,aAAa2B,MAAO,CACpB,IAAIiE,EAAI,EAQR,OAPA5F,EAAE3B,SAASvF,IACP,MAAMsnB,EAAKlE,WAAWpjB,GAClBwlB,MAAM8B,KAGVxa,GAAKwa,EAAE,IAEJxa,CACX,CACA,MAAM,IAAIrD,MAAM,2BACpB,GAEJ,OAAQ,CACJ1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAGuhB,GAChB,KAAMvf,aAAa2B,OACf,MAAM,IAAIY,MAAM,6BAEpB,MAAMwd,EAAM/f,EAAEhC,GAGd,OAFAgC,EAAEhC,GAAKgC,EAAEuf,GACTvf,EAAEuf,GAAKQ,EACA/f,CACX,GAEJ,SAAU,CACNH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,MAAO,KAAM,MAC7BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,MAAMJ,EAAS,GACf,IAAK,IAAIhM,EAAIgC,EAAGhC,GAAKoM,EAAGpM,IACpBgM,EAAOtK,KAAK1B,GAEhB,OAAOgM,CACX,GAEJ,SAAU,CACNnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,OACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,MAAMJ,EAAS,GACf,IAAK,IAAIhM,EAAI,EAAGA,EAAIoM,EAAGpM,IACnBgM,EAAOtK,KAAKM,GAEhB,OAAOgK,CACX,GAEJ,SAAU,CACNnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGH,EAAGwZ,GAChB,IAAIqG,EAAQ1f,EACK,iBAANA,IACP0f,EAAQrG,EAAIc,WAAWna,EAAG,WAE9B,MAAM6J,EAAS,GACf,IAAK,MAAMnR,KAAKmH,EACZgK,EAAOtK,KAAKmgB,EAAMhnB,IAEtB,OAAOmR,CACX,GAEJ,QAAS,CACLnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGH,EAAGwZ,GAChB,OAAOA,EAAIgB,OAAO,SAAU,CAACra,EAAGH,EAAGwZ,GACvC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,SACzBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGH,EAAGwZ,GAChB,IAAIqG,EAAQ1f,EACK,iBAANA,IACP0f,EAAQrG,EAAIc,WAAWna,EAAG,WAE9B,MAAM6J,EAAS,GACf,IAAK,MAAMnR,KAAKmH,EACR6f,EAAMhnB,IACNmR,EAAOtK,KAAK7G,GAGpB,OAAOmR,CACX,GAGJ,OAAQ,CACJnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG0V,GACb,KAAM1V,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAepB,OAbAvC,EAAEK,MAAK,CAACvH,EAAG6kB,KACP,MAAM0C,EAAKvnB,EAAE4c,GACP4K,EAAK3C,EAAEjI,GACb,OAAI2K,IAAOC,EACA,EAEFD,EAAKC,GACF,EAGD,CACX,IAEGtgB,CACX,GAEJ,SAAU,CACNH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG0V,GACb,KAAM1V,aAAa2B,OACf,MAAM,IAAIY,MAAM,6BAOpB,OALAvC,EAAEK,MAAK,CAACvH,EAAG6kB,IACI7kB,EAAE4c,GACFiI,EAAEjI,KAGV1V,CACX,GAEJ,UAAW,CACPH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,MAC5BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG0V,EAAI5X,GACjB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,8BAEpB,OAAOvC,EAAE1B,QAAQoY,GAAQzJ,OAAOyJ,EAAIhB,IAAK/c,QAAQmF,IAAM,GAC3D,GAEJ,cAAe,CACX+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,IAAK,MAC5BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG0V,EAAI5X,GACjB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,gCAEpB,OAAOvC,EAAE1B,QAAQoY,GAAQA,EAAIhB,KAAQ5X,GACzC,GAEJ,MAAO,CACH+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MACnCkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGugB,EAAK7J,EAAK5Y,GACvB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,0BAEpB,IAAK,IAAIvE,EAAI0Y,EAAK1Y,EAAIgC,EAAExG,OAAQwE,IAC5B,GAAIgC,EAAEhC,GAAGuiB,KAASziB,EACd,OAAOE,EAGf,OAAQ,CACZ,GAEJ,MAAO,CACH6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,KAAMA,aAAa2B,OACf,MAAM,IAAIY,MAAM,0BAEpB,IAAIie,EAAO,EACX,IAAK,IAAIxiB,EAAI,EAAGA,EAAIgC,EAAExG,OAAQwE,IACtBgC,EAAEhC,GAAGxE,OAASgnB,IACdA,EAAOxgB,EAAEhC,GAAGxE,QAGpB,OAAOgnB,CACX,GAEJ,MAAO,CACH3gB,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,KAAMA,aAAa2B,OACf,MAAM,IAAIY,MAAM,0BAEpB,OAAOvC,EAAExG,MACb,GAEJ,QAAS,CACLqG,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,KAAMxZ,aAAa2B,OACf,MAAM,IAAIY,MAAM,4BAEpB,MAAMie,EAAOhH,EAAIgB,OAAO,MAAO,CAACxa,IAC1BygB,EAAOzgB,EAAExG,OACTiT,EAAM,GACZ,IAAK,IAAItO,EAAI,EAAGA,EAAIqiB,EAAMriB,IAAK,CAC3B,MAAMuY,EAAM,GACZjK,EAAI/M,KAAKgX,GACT,IAAK,IAAIzW,EAAI,EAAGA,EAAIwgB,EAAMxgB,IACtByW,EAAIzW,QAAkB2C,IAAZ5C,EAAEC,GAAG9B,GAAoB6B,EAAEC,GAAG9B,GAAK,EAErD,CACA,OAAOsO,CACX,GAEJ,OAAQ,CACJ5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,KAAMxZ,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAEpB,MAAMie,EAAOhH,EAAIgB,OAAO,MAAO,CAACxa,IAC1BygB,EAAOzgB,EAAExG,OACTiT,EAAM,GACZ,IAAK,IAAItO,EAAI,EAAGA,EAAIqiB,EAAMriB,IAAK,CAC3B,MAAMuY,EAAM,GACZjK,EAAI/M,KAAKgX,GACT,IAAK,IAAIzW,EAAI,EAAGA,EAAIwgB,EAAMxgB,IACtByW,EAAIzW,GAAKD,EAAEygB,EAAOxgB,EAAI,GAAG9B,EAEjC,CACA,OAAOsO,CACX,GAEJ,QAAS,CACL5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,GACb,KAAMgC,aAAa2B,OACf,MAAM,IAAIY,MAAM,4BAEpB,MAAMkK,EAAM,GACNjL,EAAO,CAAC,EACd,IAAK,IAAI1I,EAAI,EAAGA,EAAIkH,EAAExG,OAAQV,IAAK,CAC/B,MAAMqE,EAAI6C,EAAElH,GAAGkF,QACX4E,IAAcpB,EAAKrE,KACnBqE,EAAKrE,IAAK,EACVsP,EAAI/M,KAAKM,EAAElH,IAEnB,CACA,OAAO2T,CACX,GAEJ,OAAQ,CACJ5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,GACb,KAAMgC,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAGpB,OADYvC,EAAE2F,KAAI+Q,GAAOA,EAAI1Y,IAEjC,GAEJ,OAAQ,CACJ6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,EAAGF,GAChB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAEpB,MAAMkK,EAAM,GAUZ,OATAzM,EAAE3B,SAAQ,CAACqY,EAAKgK,KACZ,IAAIC,EAAK,GACL3iB,EAAI,IACJ2iB,EAAKA,EAAGxnB,OAAOud,EAAInd,MAAM,EAAGyE,KAEhC2iB,EAAGjhB,KAAK5B,EAAE4iB,IACVC,EAAKA,EAAGxnB,OAAOud,EAAInd,MAAMyE,IACzByO,EAAI/M,KAAKihB,EAAG,IAETlU,CACX,GAEJ,OAAQ,CACJ5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,GACb,KAAMgC,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAEpB,MAAMkK,EAAM,GAMZ,OALAzM,EAAE3B,SAASqY,IACP,MAAMiK,EAAKjK,EAAInd,MAAM,GACrBonB,EAAG9mB,OAAOmE,EAAG,GACbyO,EAAI/M,KAAKihB,EAAG,IAETlU,CACX,GAEJ,OAAQ,CACJ5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGhC,GACb,KAAMgC,aAAa2B,OACf,MAAM,IAAIY,MAAM,2BAEpB,IAAIqe,EAAM,EAEV,OADA5gB,EAAE3B,SAASqY,IAAUkK,GAAOlK,EAAI1Y,EAAE,IAC3B4iB,CACX,GAEJ,QAAS,CACL/gB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,KAAM,CAAC,MAC9BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG0W,EAAK6J,EAAKziB,GACvB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,4BAEpB,MAAMkd,EAAK,IAAItG,OAAOrb,GACtB,IAAK,IAAIE,EAAI0Y,EAAK1Y,EAAIgC,EAAExG,OAAQwE,IAAK,CACjC,MAAM6E,EAAO7C,EAAEhC,GACf,GAAIyhB,EAAGvY,KAAKrE,EAAK0d,IACb,OAAOviB,CAEf,CACA,OAAQ,CACZ,GAEJ,cAAe,CACX6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MAAO,CAAC,MAC5BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGugB,EAAKziB,GAClB,KAAMkC,aAAa2B,OACf,MAAM,IAAIY,MAAM,kCAEpB,MAAMkd,EAAK,IAAItG,OAAOrb,GAChB2O,EAAM,GACZ,IAAK,IAAIzO,EAAI,EAAGA,EAAIgC,EAAExG,OAAQwE,IAAK,CAC/B,MAAM0Y,EAAM1W,EAAEhC,GACVyhB,EAAGvY,KAAKwP,EAAI6J,KACZ9T,EAAI/M,KAAKgX,EAAInd,MAAM,GAE3B,CACA,OAAOkT,CACX,GAGJ,SAAU,CACN5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,MAAMwB,EAAO,GACb,GAAIxB,aAAarB,OAAQ,CACrB,IAAK,MAAMP,KAAO4B,EACdwB,EAAK9B,KAAKtB,GAEd,OAAOoD,CACX,CACA,GAAIxB,aAAa2B,MAAO,CACpB,IAAK,IAAI3D,EAAI,EAAGA,EAAIgC,EAAExG,OAAQwE,IAC1BwD,EAAK9B,KAAK1B,GAEd,OAAOwD,CACX,CACA,MAAM,IAAIe,MAAM,2BACpB,GAEJ,SAAU,CACN1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG5B,GACb,GAAI4B,aAAarB,OAIb,OAHIP,KAAO4B,UACAA,EAAE5B,GAEN4B,EAEX,MAAM,IAAIuC,MAAM,2BACpB,GAEJ,SAAU,CACN1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG5B,GACb,OAAOA,KAAO4B,CAClB,GAGJ,WAAY,CACRH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,OAAOA,EAAIgB,OAAO,SAAU,CAACxa,EAAGwZ,GACpC,GAEJ,WAAY,CACR3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,MAAM0P,EAAO,GACb,GAAI1P,aAAarB,OAAQ,CACrB,IAAK,MAAMP,KAAO4B,EACd0P,EAAKhQ,KAAKM,EAAE5B,IAEhB,OAAOsR,CACX,CACA,MAAM,IAAInN,MAAM,6BACpB,GAEJ,WAAY,CACR1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,KAAM,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG5B,EAAKob,GAClB,OAAOA,EAAIgB,OAAO,SAAU,CAACxa,EAAG5B,EAAKob,GACzC,GAEJ,WAAY,CACR3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAG5B,GACb,OAAOA,KAAO4B,CAClB,GAGJ,KAAM,CACFH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU5P,EAAG0gB,GACb,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACzB,IAEI,MAAMC,EAAUC,YAAW,KAEvB,MAAMjjB,EAAIwb,EAAIoB,UAAUjiB,QAAQqoB,GAC5BhjB,GAAK,GACLwb,EAAIoB,UAAU/gB,OAAOmE,EAAG,GAG5B8iB,GAAS,GACM,IAAhB5E,WAAWpjB,IAEd0gB,EAAIoB,UAAUlb,KAAKshB,EACvB,CACA,MAAOE,GACHH,EAAOG,EACX,IAER,EACAnQ,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB1kB,EAAG0gB,GACnB,MAAM4D,EAAI5D,EAAIgB,OAAO,KAAM,CAAC1hB,EAAG0gB,IAC/B,aAAa4D,CACjB,EACArM,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB1kB,EAAG0gB,GACnB,MAAM4D,EAAI5D,EAAIgB,OAAO,KAAM,CAAC1hB,EAAG0gB,IAC/B,aAAa4D,CACjB,EACArM,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGrH,EAAG0gB,GAEC,iBAANrZ,IACPA,EAAIqZ,EAAIc,WAAWna,EAAG,OAG1B,MAAM6gB,EAAUC,YAAW,KAEvB,MAAMjjB,EAAIwb,EAAIoB,UAAUjiB,QAAQqoB,GAC5BhjB,GAAK,GACLwb,EAAIoB,UAAU/gB,OAAOmE,EAAG,GAEN,WAAlBwb,EAAIgD,YACJhD,EAAI2H,QAAS,GAEjB,IACIhhB,EAAE6gB,EAASxH,EACf,CACA,MAAO3gB,GACH,IAAIqoB,EAAMroB,EACJA,aAAa,mDACfqoB,EAAM,IAAI,iDAAiBroB,EAAG2gB,EAAI9T,WAAW,GAAG7C,OAEpD2W,EAAI+C,OAAO1Y,MAAMqd,EACrB,IACe,IAAhBhF,WAAWpjB,IAGd,OAFA0gB,EAAIoB,UAAUwG,QAAQJ,GACtBxH,EAAIE,KAAK,MAAQsH,EACVA,CACX,GAEJ,KAAM,CACFnhB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGrH,EAAG0gB,GAEC,iBAANrZ,IACPA,EAAIqZ,EAAIc,WAAWna,EAAG,OAG1B,MAAM6gB,EAAUK,aAAY,KACF,WAAlB7H,EAAIgD,YACJhD,EAAI2H,QAAS,GAEjBhhB,EAAE6gB,EAASxH,EAAI,GACA,IAAhB0C,WAAWpjB,IAId,OAFA0gB,EAAIqB,WAAWuG,QAAQJ,GACvBxH,EAAIE,KAAK,MAAQsH,EACVA,CACX,GAEJ,WAAY,CACRnhB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KACfkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGrH,EAAG0gB,GAChB,OAAOA,EAAIgB,OAAO,KAAM,CAACra,EAAGrH,EAAG0gB,GACnC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUsY,EAASxH,GACnB,MAAMxb,EAAIwb,EAAIqB,WAAWliB,QAAQqoB,GACjC,GAAIhjB,GAAK,EAGL,OAFAwb,EAAIqB,WAAWhhB,OAAOmE,EAAG,GACzBsjB,cAAcN,IACP,EAEX,MAAMzB,EAAI/F,EAAIoB,UAAUjiB,QAAQqoB,GAChC,OAAIzB,GAAK,IACL/F,EAAIoB,UAAU/gB,OAAO0lB,EAAG,GACxBgC,aAAaP,IACN,EAGf,EACAjQ,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEV,IAAK,IAAIxb,EAAI,EAAGA,EAAIwb,EAAIqB,WAAWrhB,OAAQwE,IAAK,CAC5C,MAAMgjB,EAAUxH,EAAIqB,WAAW7c,GAC/BsjB,cAAcN,EAClB,CACAxH,EAAIqB,WAAa,GAEjB,IAAK,IAAI7c,EAAI,EAAGA,EAAIwb,EAAIoB,UAAUphB,OAAQwE,IAAK,CAC3C,MAAMgjB,EAAUxH,EAAIoB,UAAU5c,GAC9BujB,aAAaP,EACjB,CACAxH,EAAIoB,UAAY,EACpB,EACA7J,aAAa,GAGjB,QAAS,CAAElR,KAAM,QAASwI,MAAO,CAAC,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,cAAgB,CAAE,KAAM,KAAM,MAAO,gBAC3M,IAAK,CACDxI,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAMoS,EAAMhiB,IACRA,EAAI,KAAOA,GACFkiB,UAAUliB,EAAEU,OAAS,EAAGV,EAAEU,QAEjCT,EAAI,IAAI+a,KACd,OAAOgH,EAAG/hB,EAAE0iB,YAAc,IAAMX,EAAG/hB,EAAE4iB,cAAgB,IAAMb,EAAG/hB,EAAE2iB,aACpE,GAEJ,SAAU,CACN7b,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAMyV,EAAM,IAAIrK,KAChB,OAAOE,KAAKC,MAAMkK,EAAIpK,UAAY,IACtC,GAEJ,YAAa,CACTlU,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WAEA,OADY,IAAIoL,MACLC,SACf,GAEJ,KAAM,CACFlU,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,OAAOA,EAAI4B,aAAa,IAAItH,KAChC,GAEJ,KAAM,CACFjU,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMzgB,EAAI+a,KAAKqK,MAAQ,MACvB,OAAO3E,EAAI4B,aAAa,IAAItH,KAAK/a,GACrC,GAEJ,KAAM,CACF8G,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMzgB,EAAI+a,KAAKqK,MAAQ,MACvB,OAAO3E,EAAI4B,aAAa,IAAItH,KAAK/a,GACrC,GAEJ,KAAM,CACF8G,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQuH,aACxB,GAEJ,KAAM,CACFxb,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQuH,cAAgB,CACxC,GAEJ,KAAM,CACFxb,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQuH,cAAgB,CACxC,GAEJ,KAAM,CACFxb,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQwH,WAAa,CACrC,GAEJ,KAAM,CACFzb,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQwH,WAAa,CACrC,GAEJ,KAAM,CACFzb,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,OAAO,IAAKoL,MAAQwH,UACxB,GAEJ,KAAM,CACFzb,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAM5Z,EAAI4Z,EAAIyC,WAAWne,GACzB,MAAO,UAAUwhB,OAAO1f,EAAE4hB,SAAW,EACzC,GAEJ,SAAU,CACN3hB,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,MAAMkC,EAAIlC,EAAEnE,MAAM,KAElB,OADU,IAAIma,KAAK9T,EAAE,GAAIA,EAAE,GAAK,EAAGA,EAAE,IAC5BwhB,QACb,GAEJ,aAAc,CACV3hB,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb,OADUA,EAAIyC,WAAWne,GAChBiW,UAAY,GACzB,GAEJ,WAAY,CACRlU,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb,OADUA,EAAIyC,WAAWne,GAChBiW,UAAY,GACzB,GAEJ,OAAQ,CACJlU,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAU+Y,EAAIjI,GACd,MAAMzgB,EAAS,IAAL0oB,EACV,OAAOjI,EAAIoC,iBAAiB,IAAI9H,KAAK/a,GAAI,sBAC7C,GAEJ,SAAU,CACN8G,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU+Y,EAAI5F,EAAKrC,GACnB,MAAMzgB,EAAIygB,EAAIyC,WAAWwF,GAsBzB,OArBA5F,EAAMA,EAAIniB,QAAQ,kDAAmDikB,IACjE,OAAQA,GACJ,IAAK,OAAQ,OAAO5kB,EAAEsiB,cACtB,IAAK,KAAM,OAAQ,GAAKtiB,EAAEsiB,eAAeL,UAAU,GACnD,IAAK,KAAM,OAAOxB,EAAIuB,QAAQhiB,EAAEuiB,WAAa,GAC7C,IAAK,KAAM,OAAO9B,EAAIuB,QAAQhiB,EAAEwiB,WAChC,IAAK,IAAK,OAAQxiB,EAAEuiB,WAAa,EACjC,IAAK,IAAK,OAAQviB,EAAEwiB,UACpB,IAAK,KAAM,OAAO/B,EAAIuB,QAAQhiB,EAAE0iB,YAChC,IAAK,KAAM,OAAOjC,EAAIuB,QAAQhiB,EAAE4iB,cAChC,IAAK,KAAM,OAAOnC,EAAIuB,QAAQhiB,EAAE2iB,cAChC,IAAK,MAAO,OAAOlC,EAAIyB,OAAOliB,EAAE2oB,kBAAmB,GACnD,IAAK,IAAK,OAAQ3oB,EAAE0iB,WACpB,IAAK,IAAK,OAAQ1iB,EAAE4iB,aACpB,IAAK,IAAK,OAAQ5iB,EAAE2iB,aACpB,IAAK,IAAK,MAAO,UAAU4D,OAAOvmB,EAAEyoB,SAAW,GAC/C,IAAK,MAAO,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOzoB,EAAEyoB,SAAW,GAClF,IAAK,MAAO,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOzoB,EAAEuiB,YAE9G,OAAOqC,CAAC,GAGhB,GAEJ,OAAQ,CACJ9d,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAM5Z,EAAI4Z,EAAIyC,WAAWne,GACnB/E,EAAI6G,EAAEmU,UACZ,IAAK,MAAM4N,KAAOnI,EAAIE,KAAK,SAAU,CACjC,MAAMkI,EAAQD,EAAI,MACZE,EAAKrI,EAAIyC,WAAW0F,EAAI,QAE9B,GADWE,EAAG9N,WACJhb,EAAG,CACT,IAAIqH,EAAKR,EAAEyb,cAAgBwG,EAAGxG,cAAiB,EAI/C,OAHU,IAANjb,IACAA,EAAI,KAEDwhB,EAAQxhB,EAAI,IAAMoZ,EAAIuB,QAAQnb,EAAE0b,WAAa,GAAK,IAAM9B,EAAIuB,QAAQnb,EAAE2b,WAAa,GAC9F,CACJ,CACA,MAAM,IAAIhZ,MAAM,4BACpB,GAEJ,MAAO,CACH1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAK5E,EAAIyC,WAAWjc,GAE1B,OADWwZ,EAAIyC,WAAW7R,GACfiR,cAAgB+C,EAAG/C,aAClC,GAEJ,MAAO,CACHxb,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAK5E,EAAIyC,WAAWjc,GACpB8hB,EAAKtI,EAAIyC,WAAW7R,GAC1B,OAA4B,GAAnB0X,EAAGzG,cAAqByG,EAAGxG,YACZ,GAAnB8C,EAAG/C,cAAqB+C,EAAG9C,WACpC,GAEJ,MAAO,CACHzb,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAKpK,KAAK+N,KAAKvI,EAAIyC,WAAWjc,GAAG+T,UAAY,KAC7C+N,EAAK9N,KAAK+N,KAAKvI,EAAIyC,WAAW7R,GAAG2J,UAAY,KAEnD,OADaC,KAAK+N,MAAMD,EAAK1D,GAAM,MAEvC,GAEJ,MAAO,CACHve,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAKpK,KAAK+N,KAAKvI,EAAIyC,WAAWjc,GAAG+T,UAAY,KAC7C+N,EAAK9N,KAAK+N,KAAKvI,EAAIyC,WAAW7R,GAAG2J,UAAY,KAEnD,OADcC,KAAK+N,MAAMD,EAAK1D,GAAM,KAExC,GAEJ,KAAM,CACFve,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAKpK,KAAK+N,KAAKvI,EAAIyC,WAAWjc,GAAG+T,UAAY,KAC7C+N,EAAK9N,KAAK+N,KAAKvI,EAAIyC,WAAW7R,GAAG2J,UAAY,KAEnD,OADYC,KAAK+N,MAAMD,EAAK1D,GAAM,GAEtC,GAEJ,KAAM,CACFve,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,QAC1BkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,MAAM4E,EAAKpK,KAAK+N,KAAKvI,EAAIyC,WAAWjc,GAAG+T,UAAY,KAC7C+N,EAAK9N,KAAK+N,KAAKvI,EAAIyC,WAAW7R,GAAG2J,UAAY,KAEnD,OADYC,KAAK+N,KAAMD,EAAK1D,EAEhC,GAEJ,MAAO,CACHve,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,IAAK,OAAQ,CAAC,QACnCkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAG4X,EAAMxI,GACtB,OAAQwI,GACJ,IAAK,IAAK,OAAOxI,EAAIgB,OAAO,MAAO,CAACxa,EAAGoK,EAAGoP,IAC1C,IAAK,IAAK,OAAOA,EAAIgB,OAAO,MAAO,CAACxa,EAAGoK,EAAGoP,IAC1C,IAAK,IAAK,OAAOA,EAAIgB,OAAO,MAAO,CAACxa,EAAGoK,EAAGoP,IAC1C,IAAK,KAAM,OAAOA,EAAIgB,OAAO,MAAO,CAACxa,EAAGoK,EAAGoP,IAC3C,IAAK,IAAK,OAAOA,EAAIgB,OAAO,KAAM,CAACxa,EAAGoK,EAAGoP,IACzC,IAAK,IAAK,OAAOA,EAAIgB,OAAO,KAAM,CAACxa,EAAGoK,EAAGoP,IAE7C,MAAM,IAAIjX,MAAM,iBACpB,GAEJ,OAAQ,CACJ1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGwZ,GAChB,MAAM3G,EAAK7S,EAAEsf,OAAO,GACT,MAAPzM,GAAqB,MAAPA,IACd7S,EAAIA,EAAEgb,UAAU,IAEpB,MAAMpb,EAAI4Z,EAAIyC,WAAWne,GACnBmf,GAAMjd,EAAI,QAAQrG,MAAM,KAC9B,IAAIsoB,EAAwB,GAAlB/d,SAAS+Y,EAAG,IAAW,GACX,GAAlB/Y,SAAS+Y,EAAG,IACZ/Y,SAAS+Y,EAAG,IACL,MAAPpK,IACAoP,IAAQ,GAEZ,MAAMC,EAAK,IAAIpO,KAAKlU,EAAEmU,UAAmB,IAANkO,GACnC,OAAOzI,EAAIoC,iBAAiBsG,EAAIpkB,EACpC,GAEJ,OAAQ,CACJ+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGwZ,GAChB,IAAI3G,EAAK,EACT,MAAMsP,EAAMniB,EAAEsf,OAAO,GACT,MAAR6C,GAAuB,MAARA,IACfniB,EAAIA,EAAEgb,UAAU,GACJ,MAARmH,IACAtP,IAAO,IAGf,MAAMjT,EAAI4Z,EAAIyC,WAAWne,GACnBmf,GAAMjd,EAAI,QAAQrG,MAAM,KACxByoB,EAAOle,SAAS+Y,EAAG,IAAMpK,EACzBwP,EAAOne,SAAS+Y,EAAG,IAAMpK,EACzByP,EAAOpe,SAAS+Y,EAAG,IAAMpK,EAI/B,OAHAjT,EAAE2iB,YAAY3iB,EAAEyb,cAAgB+G,GAChCxiB,EAAE4iB,SAAS5iB,EAAE0b,WAAa+G,GAC1BziB,EAAE6iB,QAAQ7iB,EAAE2b,UAAY+G,GACjB9I,EAAIoC,iBAAiBhc,EAAG9B,EACnC,GAEJ,OAAQ,CACJ+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU5K,EAAGkC,EAAGwZ,GAChB,MAAMrb,GAAK,GAAK6B,GAAGgc,MAAM,oCACzB,IAAK7d,EACD,MAAM,IAAIoE,MAAM,4CAEpB,OAAQpE,EAAE,IACN,IAAK,IAAK,OAAOqb,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,KAAKA,EAAE,SAAUqb,IAC9D,IAAK,KAAM,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,OAAOA,EAAE,OAAQqb,IAC/D,IAAK,KAAM,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,SAA0B,EAAjB+F,SAAS/F,EAAE,MAAWqb,IAC7E,IAAK,IAAK,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,SAASA,EAAE,KAAMqb,IAC9D,IAAK,KAAM,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,KAAKA,EAAE,SAAUqb,IAC/D,IAAK,IAAK,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,OAAOA,EAAE,OAAQqb,IAC9D,IAAK,IAAK,OAAOA,EAAIgB,OAAO,OAAQ,CAAC1c,EAAG,GAAGK,EAAE,SAASA,EAAE,KAAMqb,IAEtE,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,GAAIwV,aAAeA,YAAYC,IAC3B,OAAOD,YAAYC,MAElB,GAAIrK,KAAKqK,IACV,OAAOrK,KAAKqK,MAIZ,OADY,IAAIrK,MACLC,SAEnB,GAGJ,QAAS,CACLlU,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,MAAM,IAAIyE,MAAMzE,EACpB,GAEJ,QAAW,CACP+B,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACVA,EAAIC,SAAU,EACdsD,QAAQC,IAAIxD,EAChB,GAEJ,cAAe,CAAE3Z,KAAM,QAASwI,MAAO,GACvC,oBAAqB,CAAExI,KAAM,QAASwI,MAAO,IAC7C,eAAgB,CAAExI,KAAM,QAASwI,MAAO,GACxC,gBAAmB,CACfxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAUga,EAASlJ,GACnB,OAAO,IAAIqH,SAASC,IAChB,MAAM6B,EAAcnJ,EAAIE,KAAK,qBACvBkJ,EAAYpJ,EAAIE,KAAK,eAG3B,GAFAF,EAAIE,KAAK,eAAiB,EAEtBiJ,EAAYhqB,QAAQ+pB,IAAY,GAAKE,EAAW,CAChD7F,QAAQC,IAAI,iBAAkB0F,GAC9B,MAAM1B,EAAUK,aAAY,KACS,IAA7B7H,EAAIE,KAAK,kBACTF,EAAIE,KAAK,gBAAkB,EAC3B4H,cAAcN,GACdF,EAAQ4B,GACZ,GACD,IACP,MAEI5B,EAAQ4B,EACZ,GAER,GAEJ,cAAe,CACX7iB,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMqJ,EAAOrJ,EAAI9T,WAAW,GACtB+G,EAAM,GACZ,IAAK,MAAMrO,KAAOykB,EACVlkB,OAAOC,UAAUC,eAAeC,KAAK+jB,EAAMzkB,IAC3CqO,EAAI/M,KAAKtB,GAGjB,OAAOqO,CACX,GAEJ,aAAc,CACV5M,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMqJ,EAAOrJ,EAAI9T,WAAW,GACtB+G,EAAM,GACZ,IAAK,MAAMrO,KAAOykB,EACVlkB,OAAOC,UAAUC,eAAeC,KAAK+jB,EAAMzkB,IAC3CqO,EAAI/M,KAAKtB,GAGjB,OAAOqO,CACX,GAEJ,WAAY,CACR5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUhE,EAAO8U,GACjB,YAAmC,IAApBA,EAAIE,KAAKhV,EAC5B,GAEJ,YAAa,CACT7E,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMxZ,EAAI,GACV,IAAK,MAAMG,KAAKqZ,EAAIsJ,YAChB9iB,EAAEN,KAAKS,GAEX,OAAOH,CACX,GAEJ,YAAa,CACTH,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMxZ,EAAI,GACV,IAAK,MAAMG,KAAKqZ,EAAI5I,SAChB5Q,EAAEN,KAAKS,GAEX,OAAOH,CACX,GAEJ,SAAU,CACNH,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN3I,SAAS,EACTD,GAAI,WACA,OAAO,IAAImY,SAAQ,CAACC,EAASC,KACzB,2EACKgC,MAAMC,IACP,MAAMtF,EAAM/e,OAAOskB,OAAO,CAAC,EAAGD,GAC9BlC,EAAQpD,EAAI7E,SAAS,IAEpBqK,OAAOhC,IACRH,EAAOG,EAAI,GACb,GAEV,GAEJ,UAAW,CACPrhB,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN3I,SAAS,EACTD,GAAI,WAEA,OAAO,IAAImY,SAAQ,CAACC,EAASC,KACzB,0EACKgC,MAAMC,IACP,MAAMtF,EAAM/e,OAAOskB,OAAO,CAAC,EAAGD,GACxBG,EAAI,GACV,IAAK,MAAM/kB,KAAOsf,EAAI0F,QAClBD,EAAEzjB,KAAKtB,GAEX0iB,EAAQqC,EAAE,IAETD,OAAOhC,IACRH,EAAOG,EAAI,GACb,GAEV,GAGJ,SAAU,CAAErhB,KAAM,QAASwI,MAAO,OAClC,WAAY,CACRxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACbA,EAAIE,KAAK,UAAY5b,CACzB,EACAiT,aAAa,GAEjB,OAAQ,CAAElR,KAAM,QAASwI,MAAO,IAChC,SAAU,CACNxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEbA,EAAIG,gBAAgBja,KAAK,CAAC8Z,EAAIE,KAAK,QAASF,EAAIE,KAAK,YACrDF,EAAIE,KAAK,QAAU5b,CACvB,EACAiT,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEV,MAAMxZ,EAAIwZ,EAAIG,gBAAgB5L,MAC1B/N,IACAwZ,EAAIE,KAAK,QAAU1Z,EAAE,GACrBwZ,EAAIE,KAAK,UAAY1Z,EAAE,GAE/B,EACA+Q,aAAa,GAGjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUgJ,GACV,OAAO2R,mBAAmB3R,EAC9B,GAEJ,UAAW,CACP7R,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUgJ,GACV,OAAO4R,mBAAmB5R,EAC9B,GAEJ,aAAc,CACV7R,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,OAClBkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,MAAM/M,EAAM,CAAC,EACb,GAAmB,iBAAR8W,EACP,OAAO9W,EAEX,MAAM2Q,EAAImG,EAAI5pB,MAAM,KACpB,GAAIyjB,EAAE5jB,QAAU,EACZ,OAAOiT,EAEX,MAAMgO,EAAS2C,EAAE,GAAGzjB,MAAM,KAC1B,IAAK,MAAMkJ,KAAQ4X,EAAQ,CACvB,MACM+I,GADQ3gB,EAAO,KACJlJ,MAAM,KAEvB8S,EADU+M,EAAIgB,OAAO,UAAW,CAACgJ,EAAG,MAC3BhK,EAAIgB,OAAO,UAAW,CAACgJ,EAAG,IACvC,CACA,OAAO/W,CACX,GAGJ,cAAe,CACX5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUgJ,GAEV,GAAwB,oBAAb,QAA4BtY,OAAOqqB,KAAM,CAChD,MAAMC,GAAM,IAAIC,aAAcC,OAAOlS,GAC/BmS,EAAU5W,OAAO0R,aAAahE,MAAM,KAAM+I,GAChD,OAAOD,KAAKI,EAChB,CAEA,GAAwB,oBAAb,OACP,OAAOC,OAAOrW,KAAKiE,GAAMlR,SAAS,UAEtC,MAAM,IAAI+B,MAAM,yBACpB,GAEJ,aAAc,CACV1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUgJ,GACV,GAAwB,oBAAb,QAA4BtY,OAAO2qB,KAAM,CAChD,MAAMC,EAAiBD,KAAKrS,GACtBuS,EAAMtiB,MAAM/C,UAAU+G,IAAI7G,KAAKklB,GAAgB/jB,GAAKA,EAAEvC,eACtDwmB,EAAe,IAAIC,WAAWF,GACpC,OAAO,IAAIG,YAAY,SAASC,OAAOH,EAC3C,CAEA,GAAwB,oBAAb,OACP,OAAOJ,OAAOrW,KAAKiE,EAAM,UAAUlR,WAEvC,MAAM,IAAI+B,MAAM,wBACpB,MCn/FJ+hB,yBAA2B,CAAC,EAGhC,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqB5hB,IAAjB6hB,EACH,OAAOA,EAAaxiB,QAGrB,IAAID,EAASsiB,yBAAyBE,GAAY,CAGjDviB,QAAS,CAAC,GAOX,OAHAyiB,oBAAoBF,GAAUxiB,EAAQA,EAAOC,QAASsiB,qBAG/CviB,EAAOC,OACf,CCrBAsiB,oBAAoB3kB,EAAI,SAASqC,EAAS0iB,GACzC,IAAI,IAAIvmB,KAAOumB,EACXJ,oBAAoBvrB,EAAE2rB,EAAYvmB,KAASmmB,oBAAoBvrB,EAAEiJ,EAAS7D,IAC5EO,OAAOimB,eAAe3iB,EAAS7D,EAAK,CAAEymB,YAAY,EAAMC,IAAKH,EAAWvmB,IAG3E,ECPAmmB,oBAAoBvrB,EAAI,SAAS0kB,EAAKqH,GAAQ,OAAOpmB,OAAOC,UAAUC,eAAeC,KAAK4e,EAAKqH,EAAO,ECCtGR,oBAAoBpmB,EAAI,SAAS8D,GACX,oBAAX+iB,QAA0BA,OAAOC,aAC1CtmB,OAAOimB,eAAe3iB,EAAS+iB,OAAOC,YAAa,CAAE5c,MAAO,WAE7D1J,OAAOimB,eAAe3iB,EAAS,aAAc,CAAEoG,OAAO,GACvD,sDCLO,MAAM6c,EAAa,CAEtB,IAAO,EACP,GAAM,EAEN,GAAM,EACN,MAAS,EACT,MAAO,EACP,MAAO,EACP,GAAM,EACN,KAAQ,EACR,GAAM,EACN,KAAQ,EACR,IAAK,EAEL,IAAK,EACL,IAAK,EACL,QAAW,EACX,QAAW,EACX,SAAY,EAEZ,IAAK,EACL,IAAK,EACL,IAAK,EACL,KAAM,EACN,IAAK,EAEL,IAAK,EACL,KAAM,GAEGC,EAAa,CACtB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzDC,EAAe,GAC5B,IAAK,MAAMhnB,KAAO8mB,EACdE,EAAa1lB,KAAKtB,GCjCf,SAASinB,EAAcxlB,EAAO,IAAKwI,EAAQ,GAAIoJ,GAAS,EAAI5O,EAAO,EAAGF,EAAO,cAChF,MAAO,CACH9C,OACAwI,QACAoJ,SACA5O,OACAyiB,OAAQ,EACR3iB,OACAyG,KAAM,GAEd,CCTO,MAAMmc,EACT/iB,YAAY+Z,GACR9c,KAAK8c,OAASA,EACd9c,KAAK+lB,UAAY,GACjB/lB,KAAKgmB,OAAS,GACdhmB,KAAKimB,UAAY,IAAIzgB,IAErBxF,KAAKkmB,MAAQ,GACblmB,KAAKwO,MAAQ,EAIbxO,KAAKW,EAAI,GAETX,KAAK2a,QAAU,SACf3a,KAAKmmB,eAAiB,GAKtBnmB,KAAKwa,QAAU,GAEfxa,KAAKomB,SAAW,CAAC,EACjBpmB,KAAKqmB,UAAY,EACjBrmB,KAAK2F,aAAc,EAKnB3F,KAAKsmB,UAAY,CAAE,KAAM,CAAElmB,KAAM,MAAOwI,MAAO,KAE/C5I,KAAK8F,QAAU,OAEf9F,KAAKumB,eAAiB,EAEtBvmB,KAAKwmB,uBAAwB,EAE7BxmB,KAAKymB,oBAAqB,EAE1BzmB,KAAK0mB,mBAAqB,GAC1B1mB,KAAK2mB,MACT,CACAA,OACI3mB,KAAKomB,SAAW,CAAC,EACjBpmB,KAAK4mB,OACT,CACAA,QACI5mB,KAAKgmB,OAAS,GACdhmB,KAAKwO,MAAQ,EACbxO,KAAKkmB,MAAQ,GACblmB,KAAKW,EAAI,GACTX,KAAK8F,QAAU,MACnB,CACA+gB,YAAYT,GACRpmB,KAAKomB,SAAWA,CACpB,CAKAU,SAAS1N,EAAWjW,WAChB,IAAKiW,EAAU,CACX,MAAM9f,EAAI0G,KAAKkmB,MAAM5X,MACrB,OAAIhV,GAGG,IACX,CAEA,IAAK,IAAIiF,EAAIyB,KAAKkmB,MAAMnsB,OAAS,EAAGwE,GAAK,EAAGA,IAAK,CAC7C,MAAMjF,EAAI0G,KAAKkmB,MAAM3nB,GACrB,GAAwB,IAApB6a,EAASrf,QAAgBqf,EAASlgB,QAAQI,EAAEqQ,OAAS,EAGrD,OAFA3J,KAAKkmB,MAAM9rB,OAAOmE,EAAG,GACrByB,KAAK8c,OAAOlI,MAAM,QAAU5M,KAAKC,UAAU3O,IACpCA,CAEf,CAEA,OAAO,IACX,CAKAytB,YACI/mB,KAAK+lB,UAAU9lB,KAAKD,KAAKkmB,OACzBlmB,KAAKkmB,MAAQ,EACjB,CACAc,YACIhnB,KAAKkmB,MAAQlmB,KAAK+lB,UAAUzX,KAChC,CAKA5B,QAAQnJ,GAEJ,GAAIvD,KAAKsmB,UAAU/iB,GACf,MAAO,CACHA,OACAjF,MAAO,QACP2oB,KAAMjnB,KAAKsmB,UAAU/iB,IAI7B,GAAIA,EAAKrK,QAAQ,OAAS,EACtB,OAAI8G,KAAKomB,SAAS7iB,GACP,CACHA,OACAjF,MAAO,SACP2oB,KAAMjnB,KAAKomB,SAAS7iB,SAIxB,EAIR,MAAM2jB,EAAY,GAAGlnB,KAAK2a,YAAYpX,IACtC,GAAIvD,KAAKomB,SAASc,GACd,MAAO,CACH3jB,KAAM2jB,EACN5oB,MAAO,SACP2oB,KAAMjnB,KAAKomB,SAASc,IAI5B,IAAK,MAAM3D,KAAOvjB,KAAKwa,QAAS,CAC5B,MAAMI,EAAQ,GAAG2I,MAAQhgB,IACzB,GAAIvD,KAAKomB,SAASxL,GACd,MAAO,CACHrX,KAAMqX,EACNtc,MAAO,SACP2oB,KAAMjnB,KAAKomB,SAASxL,GAGhC,CAEA,OAAI5a,KAAKomB,SAAS7iB,GACP,CACHA,OACAjF,MAAO,SACP2oB,KAAMjnB,KAAKomB,SAAS7iB,SAJ5B,CAQJ,CAIA4jB,UAAUC,GACNpnB,KAAK8c,OAAOlI,MAAM,QAAU5M,KAAKC,UAAUmf,IAC3CpnB,KAAKkmB,MAAMjmB,KAAKmnB,EACpB,CAIAC,QACI,OAAQrnB,KAAKwO,OAASxO,KAAKgmB,OAAOjsB,MACtC,CACAutB,WACI,OAAOtnB,KAAKwO,KAChB,CAIA+Y,MAAMC,GACF,OAAQxnB,KAAKgmB,OAAOhmB,KAAKwO,OAAOpO,OAASonB,CAC7C,CAKAC,OAAOlnB,GACH,IAAK,IAAIhC,EAAI,EAAGA,EAAIgC,EAAExG,OAAQwE,IAAK,CAC/B,MAAM0iB,EAAM1iB,EAAIyB,KAAKwO,MACrB,GAAIxO,KAAKgmB,OAAOjsB,QAAUknB,EACtB,OAAO,EAEX,GAAa,MAAT1gB,EAAEhC,GACF,SAEJ,MAAMjF,EAAI0G,KAAKgmB,OAAO/E,GACtB,GAAI1gB,EAAEhC,aAAc2D,OAChB,GAAI3B,EAAEhC,GAAGrF,QAAQI,EAAE8G,MAAQ,EACvB,OAAO,OAIf,GAAI9G,EAAE8G,OAASG,EAAEhC,GACb,OAAO,CAEf,CACA,OAAO,CACX,CAIAmpB,WAAWnnB,GACP,MAAMH,EAAOJ,KAAKgmB,OAAOhmB,KAAKwO,OAAOpO,KACrC,OAAQG,EAAErH,QAAQkH,IAAS,CAC/B,CAKAunB,OAAOC,GACH,MAAMjnB,EAAI,GACJknB,EAAW7nB,KAAKwO,MAChBsZ,EAAW,KACb9nB,KAAKwO,MAAQqZ,GACN,GAEX,IAAK,IAAItpB,EAAI,EAAGA,EAAIqpB,EAAM7tB,OAAQwE,IAAK,CACnC,GAAIyB,KAAKqnB,QACL,OAAOS,IAEX,MAAM1nB,EAAOwnB,EAAMrpB,GACnB,GAAY,MAAR6B,EACA,OAAO0nB,IAEX,GAAoB,iBAAT1nB,EAQX,GAAoB,mBAATA,EAAX,CASA,KAAIA,aAAgB8B,OAOpB,MAAM,IAAIY,MAAM,yCAA2C1C,GANvD,IAAKJ,KAAK0nB,WAAWtnB,GACjB,OAAO0nB,IAEXnnB,EAAEpC,GAAKyB,KAAKqlB,KALhB,KARA,CACI,MACM3mB,EADI0B,EAAK2nB,KAAK/nB,KACVU,CAAEC,GACZ,GAAU,OAANjC,EACA,OAAOopB,IAEXnnB,EAAEpC,GAAKG,CAEX,KAhBA,CACI,MAAMspB,EAAQhoB,KAAKqlB,MACnB,GAAI2C,GAASA,EAAM5nB,OAASA,EACxB,OAAO0nB,IAEXnnB,EAAEpC,GAAKypB,CAEX,CAkBJ,CAEA,OADAhoB,KAAKW,EAAIA,GACF,CACX,CAIA0kB,MACI,OAAIrlB,KAAKqnB,QACE,KAEJrnB,KAAKgmB,OAAOhmB,KAAKwO,QAC5B,CAEAyZ,SACI,GAAIjoB,KAAKqnB,QACL,MAAM,IAAIvkB,MAAM,iBAEpB,MAAMxJ,EAAI0G,KAAKgmB,OAAOhmB,KAAKwO,SAC3B,IAAKlV,EACD,MAAM,IAAIwJ,MAAM,iBAEpB,OAAOxJ,CACX,CACA4uB,QACQloB,KAAKwO,MAAQ,GACbxO,KAAKwO,OAEb,CAEA2Z,KAAK5pB,EAAI,GACL,OAAIyB,KAAKqnB,QACE,KAEJrnB,KAAKgmB,OAAOhmB,KAAKwO,MAAQjQ,EACpC,CAEA6pB,QAAQ/N,EAAM,MACV,OAAIra,KAAKqnB,SACAhN,IACDA,EAAMuL,KAEHvL,GAEJra,KAAKgmB,OAAOhmB,KAAKwO,MAC5B,CAIA6Z,gBACI,MAAML,EAAQhoB,KAAKmoB,OACnB,OAAc,OAAVH,EACO,CAAEnkB,iBAAaV,EAAWW,eAAWX,EAAWD,UAAMC,EAAWC,KAAM,EAAGyiB,OAAQ,GAEtF,CAAEhiB,YAAamkB,EAAMnkB,YAAaC,UAAWkkB,EAAMlkB,UAAWZ,KAAM8kB,EAAM9kB,KAAME,KAAM4kB,EAAM5kB,KAAMyiB,OAAQmC,EAAMnC,OAC3H,CAOAyC,UAAU3gB,EAAMmJ,EAAMyX,GAClB,MAAMC,EAAQ1X,EAAK0X,MAAQ,EACrBC,EAAYllB,QAA4BJ,IAAlB2N,EAAK2X,SAA0B3X,EAAK2X,SAAWllB,EACrEmlB,EAAQH,EAAa,WAAavgB,KAAKC,UAAUN,EAAM,KAAM,GAAM,GACzE,IAAKA,EACD,MAAO,SAEX,OAAQA,EAAKvH,MACT,IAAK,MACD,GAAIooB,GAAS,EAAG,CACZ,MAAMG,EAAUhhB,EAAKiB,MACrB,MAAO,GAAG6f,EAAS,OAAOzoB,KAAKsoB,UAAUK,EAAS,CAAEH,SAASD,oBAA4BG,IAC7F,CAEI,MAAO,GAAGD,EAAS,cAE3B,IAAK,KAAM,CACP,MAAMG,EAAQjhB,EACd,IAAI0L,EAAWuV,EAAMvV,UAAY,GACjC,MAAMwV,EAAQ,CAAEpW,GAAI,IAAKqW,IAAK,IAAKnW,GAAI,IAAKC,GAAI,IAAKG,IAAK,KAAMC,GAAI,OAIpE,GAHIK,KAAYwV,IACZxV,EAAWwV,EAAMxV,IAEjBmV,GAAS,EAAG,CACZ,MAAM1tB,EAAOkF,KAAKsoB,UAAUM,EAAM9tB,KAAM,CAAE0tB,SAASD,GAC7CvtB,EAAQgF,KAAKsoB,UAAUM,EAAM5tB,MAAO,CAAEwtB,SAASD,GACrD,MAAuB,OAAnBK,EAAMvV,SACC,GAAGoV,EAAS,OAAO3tB,KAAQE,eAAmB0tB,KAElD,GAAGD,EAAS,OAAO3tB,KAAQE,SAAaqY,WAAkBqV,IACrE,CAEI,MAAO,GAAGD,EAAS,UAAUpV,IAAWqV,IAEhD,CACA,IAAK,SACD,MAAO,GAAGD,EAAS,QAAQ9gB,EAAKiB,QACpC,IAAK,SACD,MAAO,GAAG6f,EAAS,UAAU9gB,EAAKiB,QAAQ8f,KAC9C,IAAK,OACD,MAAO,GAAGD,EAAS,SAAS9gB,EAAKiB,QAAQ8f,KAC7C,IAAK,OACD,MAAO,GAAGD,EAAS,SAAS9gB,EAAKpE,MAAQoE,EAAKiB,QAAQ8f,KAC1D,IAAK,MACD,MAAO,OACX,IAAK,MACD,MAAO,UACX,QAAS,CACL,IAAInlB,EAAOoE,EAAKpE,KAOhB,OANIA,IACAA,EAAOoE,EAAKiB,OAEI,iBAATrF,IACPA,EAAOoE,EAAKvH,MAET,GAAGqoB,EAAS,OAAOllB,IAAOmlB,IACrC,EAER,6DC/WG,SAASK,EAAcC,GAC1B,MAAMjrB,EAAOirB,EAAG/qB,WAAW,GAE3B,MAAW,OAAP+qB,EACO,EAEA,MAAPA,GAAqB,MAAPA,EACP,EAEA,MAAPA,GAAqB,MAAPA,GAGP,MAAPA,GAAqB,MAAPA,GAIdjrB,GAAQ,MAAUA,GAAQ,MAIzBA,GAAQ,MAAUA,GAAQ,MAC1BA,GAAQ,MAAUA,GAAQ,KAXpB,EAcJ,CACX,iCCxBA,MAAMkrB,EAAY,+EACZC,EAAO,SACPC,EAAc,WACdC,EAAgB,mBAChBC,EAAc,YACdC,EAAaN,GACR,WAAc,MAAM,IAAIlmB,MAAM,OAASkmB,EAAK,UAAY,EAEtDO,EAAS,sGAETC,EAAQ,CAEjB,CAAEjmB,KAAM,OAAQkmB,QAAS,QACzB,CAAElmB,KAAM,MAAOkmB,QAAS,OACxB,CAAElmB,KAAM,MAAOkmB,QAAS,MAExB,CAAElmB,KAAM,QAASkmB,QAAS,0BAC1B,CAAElmB,KAAM,QAASkmB,QAAS,MAC1B,CAAElmB,KAAM,eAAgBkmB,QAAS,YACjC,CAAElmB,KAAM,eAAgBkmB,QAAS,eACjC,CAAElmB,KAAM,gBAAiBkmB,QAAS,QAASC,SAyF/C,SAAwB7L,GACpB,IAAI7Q,EAAM,GAEV,IAAI2c,EAAS,EAEb,MAAMprB,GADNsf,EAAMA,EAAItC,UAAU,IACNriB,QAAQ,MAClBqF,EAAI,GACJyO,EAAM6Q,EACNA,EAAM,KAGN7Q,EAAM6Q,EAAItC,UAAU,EAAGhd,GACvBsf,EAAMA,EAAItC,UAAUhd,EAAI,IAG5B,IAAK,IAAIA,EAAI,EAAGA,EAAIyO,EAAIjT,OAAQwE,IACN,OAAlByO,EAAI6S,OAAOthB,IACXorB,IAIR,OADA3c,EAAMA,EAAI/S,QAAQ,cAAe,IAC1B,CAAE4jB,MAAK7Q,MAAKrD,KAnBN,GAmBYggB,SAC7B,GA9GI,CAAEpmB,KAAM,WAAYkmB,QAAS,UAC7B,CAAElmB,KAAM,WAAYkmB,QAAS,MAE7B,CAAElmB,KAAM,SAAUkmB,QAAS,qCAAsCG,UAAU,EAAMC,GAAIC,GACrF,CAAEvmB,KAAM,SAAUkmB,QAAS,yBAA0BG,UAAU,EAAMC,GAAIC,GACzE,CAAEvmB,KAAM,SAAUkmB,QAAS,yBAA0BG,UAAU,EAAMC,GAAIC,GAEzE,CAAEvmB,KAAM,SAAUkmB,QAAS,oDAAqDG,UAAU,EAAMC,GAAIC,GACpG,CAAEvmB,KAAM,SAAUkmB,QAAS,uCAAwCG,UAAU,EAAMC,GAAIC,GACvF,CAAEvmB,KAAM,SAAUkmB,QAAS,qCAAsCG,UAAU,EAAMC,GAAIC,GACrF,CAAEvmB,KAAM,OAAQkmB,QAAS,aACzB,CAAElmB,KAAM,OAAQkmB,QAAS,cACzB,CAAElmB,KAAM,KAAMkmB,QAAS,SAEvB,CAAElmB,KAAM,MAAOkmB,QAAS,WAGxB,CAAElmB,KAAM,WAAYkmB,QAAS,QAC7B,CAAElmB,KAAM,UAAWkmB,QAAS,OAC5B,CAAElmB,KAAM,UAAWkmB,QAAS,OAC5B,CAAElmB,KAAM,MAAOkmB,QAAS,QACxB,CAAElmB,KAAM,MAAOkmB,QAAS,QACxB,CAAElmB,KAAM,OAAQkmB,QAAS,cACzB,CAAElmB,KAAM,OAAQkmB,QAAS,cACzB,CAAElmB,KAAM,QAASkmB,QAAS,cAC1B,CAAElmB,KAAM,IAAKkmB,QAAS,YACtB,CAAElmB,KAAM,KAAMkmB,QAAS,cACvB,CAAElmB,KAAM,KAAMkmB,QAAS,WACvB,CAAElmB,KAAM,eAAgBkmB,QAAS,yDACjC,CAAElmB,KAAM,MAAOkmB,QAAS,WACxB,CAAElmB,KAAM,KAAMkmB,QAAS,MACvB,CAAElmB,KAAM,KAAMkmB,QAAS,MACvB,CAAElmB,KAAM,MAAOkmB,QAAS,YACxB,CAAElmB,KAAM,KAAMkmB,QAAS,wBACvB,CAAElmB,KAAM,IAAKkmB,QAAS,MACtB,CAAElmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,IAAKkmB,QAAS,MACtB,CAAElmB,KAAM,KAAMkmB,QAAS,cACvB,CAAElmB,KAAM,IAAKkmB,QAAS,WACtB,CAAElmB,KAAM,KAAMkmB,QAAS,OACvB,CAAElmB,KAAM,IAAKkmB,QAAS,WACtB,CAAElmB,KAAM,IAAKkmB,QAAS,MACtB,CAAElmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,IAAKkmB,QAAS,MACtB,CAAElmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,IAAKkmB,QAAS,KAAMG,UAAU,GACtC,CAAErmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,IAAKkmB,QAAS,MAAOG,UAAU,GACvC,CAAErmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,SAAUkmB,QAAS,MAAOC,SAAU7L,GAAOkM,EAAS,KAAM,KAAMlM,IACxE,CAAEta,KAAM,YAAakmB,QAAS,MAAOC,SAAU7L,GAAOkM,EAAS,KAAM,KAAMlM,IAC3E,CAAEta,KAAM,YAAakmB,QAAS,KAAMC,SAAU7L,GAAOkM,EAAS,IAAK,IAAKlM,IACxE,CAAEta,KAAM,SAAUkmB,QAAS,KAAMC,SAAU7L,GAAOkM,EAAS,IAAK,IAAKlM,IACrE,CAAEta,KAAM,YAAakmB,QAAS,KAAMC,SAAU7L,GAAOkM,EAAS,IAAK,IAAKlM,IACxE,CAAEta,KAAM,YAAakmB,QAAS,KAAMC,SAAU7L,GAAOkM,EAAS,IAAK,IAAKlM,IACxE,CAAEta,KAAM,SAAUkmB,QAAS,KAAMC,SAAU7L,GAAOkM,EAAS,IAAM,IAAMlM,IACvE,CAAEta,KAAM,IAAKkmB,QAAS,KAAMC,SAAUJ,EAAU,MAChD,CAAE/lB,KAAM,IAAKkmB,QAAS,KAAMC,SAAUJ,EAAU,MAChD,CAAE/lB,KAAM,OAAQkmB,QAAS,aACzB,CAAElmB,KAAM,IAAKkmB,QAAS,OACtB,CAAElmB,KAAM,IAAKkmB,QAAS,MAAOG,UAAU,GACvC,CAAErmB,KAAM,IAAKkmB,QAAS,MACtB,CAAElmB,KAAM,OAAQkmB,QAAS,WACzB,CAAElmB,KAAM,aAAckmB,QAAS,MAE/B,CAAElmB,KAAM,OAAQkmB,QAAS,+CAAgDG,UAAU,GACnF,CAAErmB,KAAM,OAAQkmB,QAAS,gCAAiCG,UAAU,GACpE,CAAErmB,KAAM,OAAQkmB,QAAS,SAAUG,UAAU,GAE7C,CACIrmB,KAAM,OACNkmB,QAAS,6EACTC,SA0CR,SAAsB7L,EAAKmM,GAAkB,GAUzC,IAAIhd,EAAM,GACNrD,EAAO,GACX,KAAe,KAARkU,GAAY,CAEf,GAAI7Q,EAAIjT,OAAS,EAAG,CAGhB,GADYsvB,EAAY7kB,KAAKqZ,GAEzB,MAGJ,MAAMiC,EAAI,EAAArG,OAAA,KAAYoE,GACtB,GAAIiC,EAAG,CACHnW,EAAOmW,EAAE,GAAG7lB,QAAQ,OAAQ,IAGN,OAFtB4jB,EAAMA,EAAItC,UAAUuE,EAAE,GAAG/lB,SAEjB8lB,OAAO,KACXhC,EAAMA,EAAIoM,OAAO,IAErB,KACJ,CACJ,CAEA,MAAM/L,EAAI+K,EAAUzkB,KAAKqZ,GACzB,GAAIK,EAAG,CACHlR,GAAOkR,EAAE,GACTL,EAAMA,EAAItC,UAAU2C,EAAE,GAAGnkB,QACzB,QACJ,CAGA,IADUmvB,EAAKzhB,KAAKoW,GAMpB,MAJI7Q,GAAO6Q,EAAIgC,OAAO,GAClBhC,EAAMA,EAAItC,UAAU,EAI5B,CAII,UAAU9T,KAAKuF,KACf6Q,EAAM7Q,EAAI6S,OAAO7S,EAAIjT,OAAS,GAAK8jB,EACnC7Q,EAAMA,EAAIlT,MAAM,GAAI,IAGxB,MAAMowB,EAAKd,EAAc5kB,KAAKwI,GAC1Bkd,IACArM,EAAMqM,EAAG,GAAKvgB,EAAOkU,EACrBlU,EAAO,GACPqD,EAAMA,EAAIuO,UAAU,EAAGvO,EAAIjT,OAASmwB,EAAG,GAAGnwB,SAG1C,EAAAyf,cAAc7P,KACdA,EAAO,IAIPqgB,IACAhd,EA5GD,SAAuB3O,GAE1B,IAAK6qB,EAAKzhB,KAAKpJ,GACX,OAAOA,EAAEpE,QAAQ,UAAW,IAGhC,GAAIkvB,EAAY1hB,KAAKpJ,GACjB,OAAOA,EAGX,OAAOA,EAAEpE,QAAQ,WAAY,GACjC,CAiGckwB,CAAcnd,IAGZ,KAARA,GAAuB,KAATrD,IACdqD,EAAMrD,EACNA,EAAO,IAEX,MAAO,CAAEkU,MAAK7Q,MAAKrD,OAAMggB,OAAQ,EACrC,IACA,SAASI,EAASK,EAAUC,EAAUxM,GAClC,IAAI7Q,EAAM,GACNrD,EAAO,GACPggB,EAAS,EAEb,MAAMprB,GADNsf,EAAMA,EAAIoM,OAAOG,EAASrwB,SACZb,QAAQmxB,GACtB,GAAI9rB,EAAI,EACJyO,EAAM6Q,EACNA,EAAM,QAMN,GAHA7Q,EAAM6Q,EAAIoM,OAAO,EAAG1rB,GACpBsf,EAAMA,EAAIoM,OAAO1rB,EAAI8rB,EAAStwB,QAE1BiT,EAAI9T,QAAQkxB,IAAa,EACzB,KAAiB,MAAbA,EACM,IAAItnB,MAAM,iCAGV,IAAIA,MAAM,IAAIsnB,gBAAuBA,mBAKvD,MAAMtK,EAAI,EAAArG,OAAA,KAAYoE,GAClBiC,IACAnW,EAAOmW,EAAE,GAAG7lB,QAAQ,OAAQ,IAGN,OAFtB4jB,EAAMA,EAAIoM,OAAOnK,EAAE,GAAG/lB,SAEd8lB,OAAO,KACXhC,EAAMA,EAAIoM,OAAO,KAIrB,EAAAzQ,cAAc7P,KACdA,EAAO,IAGX,IAAK,IAAIpL,EAAI,EAAGA,EAAIyO,EAAIjT,OAAQwE,IACN,OAAlByO,EAAI6S,OAAOthB,IACXorB,IAGR,MAAO,CAAE9L,MAAK7Q,MAAKrD,OAAMggB,SAC7B,CACA,SAASG,EAAYzwB,GACjB,OAAOylB,OAAOzlB,EAAEY,QAAQ,KAAM,IAClC,CC3PO,MAAMqwB,EAITvnB,YAAY+Z,GACR9c,KAAK8c,OAASA,EACd9c,KAAKomB,SAAW,CAAC,EACjBpmB,KAAKwa,QAAU,GACfxa,KAAKuK,OAAS,GACdvK,KAAK2a,QAAU,YACnB,CAEAkM,YAAY0D,GACRvqB,KAAKomB,SAAWmE,CACpB,CAMAC,cAAcxE,EAAQyE,EAASC,GAM3B,GALA1qB,KAAKuK,OAASyb,EACdhmB,KAAK2a,QAAU2P,EAAUK,kBAAkBD,GAE3CJ,EAAUM,cAAc5E,EAAQhmB,KAAK8c,OAAQ9c,KAAKomB,UAClDpmB,KAAK6qB,aAAa7qB,KAAKuK,QACnBkgB,EACA,GAAIzqB,KAAKuK,OAAOxQ,OAAS,EAAG,CACxB,MAAM+wB,EAAM9qB,KAAKuK,OAAOvK,KAAKuK,OAAOxQ,OAAS,GAC7CiG,KAAKuK,OAAOtK,KAAK,CACbG,KAAM,MACNgD,KAAM0nB,EAAI1nB,KACVyiB,OAAQ,EACR7T,QAAS,EACT9O,KAAM4nB,EAAI5nB,KACVyG,KAAM,GACNf,MAAO,MACP/E,YAAainB,EAAIjnB,YACjBC,UAAWgnB,EAAIhnB,UACfinB,QAAS,KAEb/qB,KAAKuK,OAAOtK,KAAK,CACbG,KAAM,MACNgD,KAAM0nB,EAAI1nB,KACV4O,QAAS,EACT6T,OAAQ,EACR3iB,KAAM4nB,EAAI5nB,KACVyG,KAAM,GACNf,MAAO,GACP/E,YAAainB,EAAIjnB,YACjBC,UAAWgnB,EAAIhnB,UACfinB,QAAS,IAEjB,MAEI/qB,KAAKuK,OAAOtK,KAAK,CACbG,KAAM,MACNgD,KAAM,EACNyiB,OAAQ,EACR7T,QAAS,EACT9O,KAAM,GACNyG,KAAM,GACNf,MAAO,MACP/E,YAAa,EACbC,UAAW,EACXinB,QAAS,KAEb/qB,KAAKuK,OAAOtK,KAAK,CACbG,KAAM,MACNgD,KAAM,EACNyiB,OAAQ,EACR7T,QAAS,EACT9O,KAAM,GACNyG,KAAM,GACNf,MAAO,GACP/E,YAAa,EACbC,UAAW,EACXinB,QAAS,KAIrB,OAAO/qB,KAAKuK,MAChB,CAKAvG,qBAAqBgiB,EAAQlJ,EAAQsJ,GAEjC,IAAI7nB,EAAI,EACJysB,GAAgB,EACpB,MAAMC,EAAW,KACb,MAAMpa,EAAO,GACP9O,EAAO,CAAC,EACd,GAAuB,MAAnBikB,EAAOznB,GAAG6B,KACV,MAAO,GAGX,IADA7B,IACOynB,EAAOznB,IAAI,CACd,MAAMjF,EAAI0sB,EAAOznB,GAEjB,GADAA,IACe,MAAXjF,EAAE8G,KACF,MAEW,SAAX9G,EAAE8G,KACF4qB,GAAgB,EAEA,MAAX1xB,EAAE8G,MAA2B,UAAX9G,EAAE8G,OACrB4qB,IACA1xB,EAAE4xB,aAAc,EAChBF,GAAgB,GAEpBna,EAAK5Q,KAAK3G,GACLyI,EAAKzI,EAAEsP,SACR7G,EAAKzI,EAAEsP,OAAS,IAEpB7G,EAAKzI,EAAEsP,OAAO3I,KAAK3G,EAAEqQ,MAE7B,CACA,MAAMuE,EAAW,GACXid,EAAe,GACf5gB,EAAS,GACT6gB,EAAU,CAAC,EACjB,IAAK,MAAMpa,KAAOH,EACd,IAAKua,EAAQpa,EAAIpI,OAAQ,CACrB,MAAMe,EAAO5H,EAAKiP,EAAIpI,OACtB2B,EAAOtK,KAAK0J,GACZuE,EAASjO,KAAK+Q,EAAIpI,OACdoI,EAAIka,YACJC,EAAalrB,KAAK+Q,EAAIpI,OAGtBuiB,EAAalrB,KAAK,MAEtBmrB,EAAQpa,EAAIpI,QAAS,CACzB,CAEJ,MAAO,CAAC2B,EAAQ2D,EAAUid,EAAa,EAG3C,KAAO5sB,EAAIynB,EAAOjsB,QAAQ,CAEtB,MAAMT,EAAI0sB,EAAOznB,GAEjB,GAAgB,SAAXjF,EAAE8G,MAA8B,OAAX9G,EAAEqQ,MAA8B,SAAXrQ,EAAE8G,MAA8B,OAAX9G,EAAEqQ,KAAgB,CAClFrQ,EAAEqQ,KAAO,KACTqc,EAAO5rB,OAAOmE,EAAI,EAAG,EAAG,CAAE6B,KAAM,WAAYwI,MAAO,KAAMoJ,OAAQ1Y,EAAE0Y,OAAQ5O,KAAM9J,EAAE8J,KAAMyiB,OAAQvsB,EAAEusB,OAAQ3iB,KAAM5J,EAAE4J,KAAMyG,KAAM,GAAI9F,YAAavK,EAAEwK,UAAWA,UAAWxK,EAAEwK,UAAWinB,QAAS,GAAI/nB,IAAK,SACvMzE,IACA,QACJ,CAEA,GAAe,SAAXjF,EAAE8G,MAA8B,KAAX9G,EAAEqQ,MAAerQ,EAAEsP,MAAM7O,QAAU,GACpDT,EAAEsP,MAAM2T,MAAM,MAAO,CACrBjjB,EAAEsP,MAAQtP,EAAEsP,MAAM2S,UAAU,EAAGjiB,EAAEsP,MAAM7O,OAAS,GAE3CT,EAAEwK,YACHxK,EAAEwK,UAAY,GAElB,MAAMunB,EAAM,CAAEjrB,KAAM,IAAKwI,MAAO,IAAKoJ,OAAQ1Y,EAAE0Y,OAAQ5O,KAAM9J,EAAE8J,KAAMyiB,OAAQvsB,EAAEusB,OAAQ3iB,KAAM5J,EAAE4J,KAAMyG,KAAM,GAAI9F,YAAavK,EAAEwK,UAAY,EAAGA,UAAWxK,EAAEwK,UAAWinB,QAAS,IAC9K/E,EAAO5rB,OAAOmE,EAAI,EAAG,EAAG8sB,GACxB/xB,EAAEwK,YACFvF,GACJ,CAUJ,GAPe,SAAXjF,EAAE8G,MAAmB,UAAc9G,EAAEsP,SACrCtP,EAAE8G,KAAO,UAAc9G,EAAEsP,OACT,OAAZtP,EAAEsP,QACFtP,EAAEsP,MAAQ,OAIH,aAAXtP,EAAE8G,MAAkC,aAAX9G,EAAE8G,KAAqB,CAChD7B,IACA,QACJ,CAEA,IAAI+sB,GAAU,EACVC,EAAY,CAAEnrB,KAAM,OACpB7B,GAAK,IACLgtB,EAAYvF,EAAOznB,EAAI,IAEJ,QAAnBgtB,EAAUnrB,OACVkrB,GAAU,GAGd,MAAME,EAAWlyB,EACjBiF,IACA,IAAIoL,EAAO,GACPuE,EAAW,GACXid,EAAe,GACf/Z,EAAW,GACXqa,EAAgB,KAgBpB,GAdIzF,EAAOznB,IAAyB,MAAnBynB,EAAOznB,GAAG6B,QACtBuJ,EAAMuE,EAAUid,GAAgBF,MAGhCK,GAAWtF,EAAOznB,IAAyB,SAAnBynB,EAAOznB,GAAG6B,OACnCqrB,EAAgBzF,EAAOznB,KACvB6S,EAAWqa,EAAc7iB,OAGT,IAAhBe,EAAK5P,QAAgBisB,EAAOznB,IAAyB,MAAnBynB,EAAOznB,GAAG6B,QAC3CuJ,EAAMuE,EAAUid,GAAgBF,KAIpB,KAAb7Z,GAAmBqa,EAAe,CAGlC,GADAra,EADgBkZ,EAAUK,kBAAkBrxB,EAAE4J,MACzB,KAAOkO,EACxBA,KAAYgV,EAAU,CAEtB,MAAMlZ,EAAWkE,EAASnX,QAAQ,UAAW,IAC7C6iB,EAAO1P,KAAK,MAAMF,iBAAyBse,EAC/C,CACAC,EAAc7iB,MAAQwI,EACtBgV,EAAShV,GAAY,CACjBhR,KAAM,OACNuJ,OACAV,GAAI,KACJC,SAAS,EACTgF,WACAid,eAER,CAEAK,EAASphB,KAAO,CACZhK,KAAM,OACNuJ,OACAuE,WACAid,eAER,CACJ,CAEAO,cAAc3tB,GAEV,MAAMwQ,EAAO,GAGPod,EAAM5tB,EAAK7D,MAAM,QACvBqU,EAAKtO,KAAK0rB,EAAI,IACd,IAAK,MAAMttB,KAAKstB,EAAI7xB,MAAM,GAAI,CAC1B,MAAMyB,EAAM8C,EAAEpE,QAAQ,IAAK,KAAKf,QAAQ,KACxC,IAAa,IAATqC,EACA,OAAO,KAEXgT,EAAKtO,KAAK5B,EAAEvE,MAAM,EAAGyB,GAAM8C,EAAEvE,MAAMyB,EAAM,GAC7C,CACA,OAAOgT,CACX,CACAsc,aAAa7E,GACT,IAAI4F,EAAU,GACVrtB,EAAI,EAOR,IAAIstB,EAAW7F,EAAOjsB,OAAS,EAAKuwB,EAAUK,kBAAkB3E,EAAO,GAAG9iB,MAAQ,aAClF,KAAO3E,EAAIynB,EAAOjsB,QAAQ,CACtB,MAAMT,EAAI0sB,EAAOznB,GAMjB,GAJgB,SAAXjF,EAAE8G,MAA8B,SAAX9G,EAAE8G,MAAgC,WAAZ9G,EAAEsP,QAC9CijB,EAAU7F,EAAOznB,EAAI,GAAGqK,OAGb,SAAXtP,EAAE8G,MAA+B,OAAZ9G,EAAEsP,MAAgB,CAEvC,MAAMwI,EAAW9X,EAAEsP,MACnB,GAAIwI,EAASlY,QAAQ,MAAQ,EAAG,CAE5B,MAAM4yB,EAAS,GAAGD,MAAYza,IACxB2a,EAAO/rB,KAAKomB,SAAS0F,GAC3B,GAAIC,GAAsB,SAAdA,EAAK3rB,KAAiB,CAC9B9G,EAAE8G,KAAO,OACT9G,EAAE8Q,KAAO2hB,EACTzyB,EAAEsP,MAAQkjB,EACV,QACJ,CAEA,IAAK,MAAMvI,KAAOvjB,KAAKwa,QAAS,CAC5B,MAAMI,EAAQ,GAAG2I,MAAQnS,IACnB4a,EAAMhsB,KAAKomB,SAASxL,GAC1B,GAAIoR,GAAoB,SAAbA,EAAI5rB,KAAiB,CAC5B9G,EAAE8G,KAAO,OACT9G,EAAE8Q,KAAO4hB,EACT1yB,EAAEsP,MAAQgS,EACV,KACJ,CACJ,CACA,GAAe,SAAXthB,EAAE8G,KACF,QAER,CACA,MAAM6rB,EAAKjsB,KAAKomB,SAAShV,GACrB6a,GAAkB,SAAZA,EAAG7rB,OACT9G,EAAE8G,KAAO,OACT9G,EAAE8Q,KAAO6hB,EAEjB,CAIA,GAAe,MAAX3yB,EAAE8G,MAAgB4lB,EAAOznB,EAAI,IAA6B,WAAvBynB,EAAOznB,EAAI,GAAG6B,KAAmB,CAEpE,MAAM8rB,EApDN3tB,GAAK,EACE,MAEJynB,EAAOznB,EAAI,GAAG6B,MAkDH,QAAV8rB,GAAmBzG,EAAWyG,IAAiC,KAAvBlG,EAAOznB,EAAI,GAAGoL,QACtDqc,EAAO5rB,OAAOmE,EAAG,GACjBynB,EAAOznB,GAAGqK,QAAU,EAE5B,CAKA,QAHezF,IAAX7J,EAAEqQ,OACFrQ,EAAEqQ,KAAO,IAEE,MAAXrQ,EAAEqQ,KAuBN,GAAe,OAAXrQ,EAAEqQ,KAuBN,GAAI,EAAA4P,YAAYjgB,EAAEqQ,MAAlB,CACI,MAAMA,EAAmB,UAAXrQ,EAAEqQ,MAA+B,SAAXrQ,EAAEqQ,KAAmB,QAAU,MAC9DrQ,EAAEyxB,UACHzxB,EAAEyxB,QAAUphB,GAEhB,MAAM9F,OAA8BV,IAAhB7J,EAAEwK,eAA0BX,EAAY7J,EAAEwK,UAAYxK,EAAEyxB,QAAQhxB,OACpFisB,EAAO5rB,OAAOmE,EAAI,EAAG,EAAG,CACpB6B,KAAM,MACNwI,MAAOe,EACPqI,OAAQ1Y,EAAE0Y,OACV5O,KAAM9J,EAAE8J,KACRyiB,OAAQvsB,EAAEusB,OACV3iB,KAAM5J,EAAE4J,KACRW,cACAC,UAAWxK,EAAEwK,UACb6F,KAAM,GACNohB,QAAS,KAEbzxB,EAAEqQ,KAAOrQ,EAAEyxB,QAAU,GACrBzxB,EAAEwK,UAAYD,EACdtF,GAAK,CAET,KAEe,SAAXjF,EAAE8G,KAKS,iBAAX9G,EAAE8G,MAAsC,kBAAX9G,EAAE8G,MAMpB,QAAX9G,EAAE8G,OACF9G,EAAEsP,MAAQgjB,EAAQ/qB,KAAK,KACvB+qB,EAAU,IAEdrtB,MATIqtB,EAAQ3rB,KAAK3G,EAAEsP,OACfod,EAAO5rB,OAAOmE,EAAG,IANjBynB,EAAO5rB,OAAOmE,EAAG,OAhDrB,CACSjF,EAAEyxB,UACHzxB,EAAEyxB,QAAUzxB,EAAEqQ,MAElB,MAAM9F,OAA8BV,IAAhB7J,EAAEwK,eAA0BX,EAAY7J,EAAEwK,UAAYxK,EAAEyxB,QAAQhxB,OACpFisB,EAAO5rB,OAAOmE,EAAI,EAAG,EAAG,CACpB6B,KAAM9G,EAAEqQ,KACRqI,OAAQ1Y,EAAE0Y,OACV5O,KAAM9J,EAAE8J,KACRyiB,OAAQvsB,EAAEusB,OACV3iB,KAAM5J,EAAE4J,KACRW,cACAC,UAAWxK,EAAEwK,UACb6F,KAAM,GACNohB,QAAS,GACTniB,WAAOzF,IAEX7J,EAAEqQ,KAAOrQ,EAAEyxB,QAAU,GACrBzxB,EAAEwK,UAAYD,EACdtF,GAAK,CAET,KA5CA,CACSjF,EAAEyxB,UACHzxB,EAAEyxB,QAAUzxB,EAAEqQ,MAElB,MAAM9F,OAA+BV,IAAhB7J,EAAEwK,eAA2BX,EAAY7J,EAAEwK,UAAYxK,EAAEyxB,QAAQhxB,OACtFisB,EAAO5rB,OAAOmE,EAAI,EAAG,EAAG,CACpB6B,KAAM,KACN4R,OAAQ1Y,EAAE0Y,OACV5O,KAAM9J,EAAE8J,KACRyiB,OAAQvsB,EAAEusB,OACV3iB,KAAM5J,EAAE4J,KACRW,cACAC,UAAWxK,EAAEwK,UACb6F,KAAM,GACNohB,QAAS,GACTniB,WAAOzF,IAEX5E,GAAK,EACLjF,EAAEqQ,KAAOrQ,EAAEyxB,QAAU,GACrBzxB,EAAEwK,UAAYD,CAElB,CAiEJ,CACJ,CAKAsoB,YAAYtO,GACR,IAAI7L,EAAS,EACb,IAAK,IAAIzT,EAAI,EAAGA,EAAIsf,EAAI9jB,OAAQwE,IAAK,CACjC,MACMlF,EAAI0vB,EADAlL,EAAIgC,OAAOthB,IAErB,GAAU,IAANlF,EACA,MAAO,CAAC2Y,EAAQzT,GAEpByT,GAAU3Y,CACd,CACA,MAAO,CAAC2Y,EAAQ6L,EAAI9jB,OACxB,CAOAqyB,SAASvO,EAAKza,EAAMsnB,GAChB,MAAM2B,EAAYxO,EAAI9jB,OAChBwQ,EAAS,GACf,IAAI+hB,EACAC,EACA1G,EAAS,EACT2G,GAAY,EACZxa,EAAS,EAEb,MAAMya,EAAKzsB,KAAKmsB,YAAYtO,GAI5B,IAHA7L,EAASya,EAAG,GACZ5O,EAAMA,EAAItC,UAAUkR,EAAG,IACvB5G,GAAU4G,EAAG,GACE,KAAR5O,GAAY,CACf,IAAI6O,GAAK,EAET,IAAK,MAAMC,KAAQnD,EAAO,CAEtB,MAAMtL,EAAIyO,EAAKlD,QAAQjlB,KAAKqZ,GAC5B,IAAKK,EACD,SAIJ,GAFAwO,GAAK,EAEa,UAAdC,EAAKppB,KAAkB,CACvBsiB,GAAU3H,EAAE,GAAGnkB,OACf8jB,EAAMA,EAAItC,UAAU2C,EAAE,GAAGnkB,QACzB,QACJ,CAEA,GAAI4yB,EAAKjD,SAAU,CAEf,IAAIkD,EACJ,GAAIJ,GAA2B,SAAdG,EAAKppB,KAClBqpB,EAAKD,EAAKjD,SAAS7L,GAAK,QAGxB,IACI+O,EAAKD,EAAKjD,SAAS7L,EACvB,CACA,MAAOzkB,GACH,MAAM,IAAI,KAAeA,EAAEmL,QAAS8nB,EAAYxO,EAAI9jB,OAAQsyB,EAAYxO,EAAI9jB,OAAS,EAAGqJ,EAAMsnB,EAClG,CAEJ,GAAkB,cAAdiC,EAAKppB,KAAsB,CAE3B,MAAMgL,EAAOvO,KAAK0rB,cAAckB,EAAG5f,KACnC,GAAa,OAATuB,EACA,MAAM,IAAI,KAAmB,gCAAiC8d,EAAYxO,EAAI9jB,OAAQsyB,EAAYO,EAAG/O,IAAI9jB,OAAQqJ,EAAMsnB,GAE3H,IAAImC,EAAS,EACb,IAAK,IAAItuB,EAAI,EAAGA,EAAIgQ,EAAKxU,OAAQwE,IAAK,CAClC,MAAMoL,EAAQpL,IAAMgQ,EAAKxU,OAAS,EAAK6yB,EAAGjjB,KAAO,GAC7CpL,EAAI,GAAM,GACVgM,EAAOtK,KAAK,CACRG,KAAM,SACNwI,MAAO2F,EAAKhQ,GACZ2E,KAAMwnB,EACN/gB,OACAqI,SACA5O,OACAyiB,SACAiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EACjDE,uBAAwBxe,EAAKhQ,GAAGxE,OAAS,EAAI4P,EAAK5P,SAGtD8yB,GAAUte,EAAKhQ,GAAGxE,OAAS,IAG3BwQ,EAAOtK,KAAK,CAAEG,KAAM,IAAKwI,MAAO,IAAKe,KAAM,GAAIqI,SAAQ9O,KAAMwnB,EAAUtnB,OAAMyiB,SAAQiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EAAQE,uBAAwB,IACtKxiB,EAAOtK,KAAK,CAAEG,KAAM,IAAKwI,MAAO,IAAKe,KAAM,GAAIqI,SAAQ9O,KAAMwnB,EAAUtnB,OAAMyiB,SAAQiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EAAQE,uBAAwB,IACtKxiB,EAAOtK,KAAK,CAAEG,KAAM,OAAQwI,MAAO2F,EAAKhQ,GAAIoL,KAAM,GAAIqI,SAAQ9O,KAAMwnB,EAAUtnB,OAAMyiB,SAAQiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EAAQE,uBAAwBxe,EAAKhQ,GAAGxE,SACrLwQ,EAAOtK,KAAK,CAAEG,KAAM,IAAKwI,MAAO,IAAKe,KAAM,GAAIqI,SAAQ9O,KAAMwnB,EAAUtnB,OAAMyiB,SAAQiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EAASte,EAAKhQ,GAAGxE,OAAQgzB,uBAAwB,IACvLxiB,EAAOtK,KAAK,CAAEG,KAAM,IAAKwI,MAAO,IAAKe,KAAM,GAAIqI,SAAQ9O,KAAMwnB,EAAUtnB,OAAMyiB,SAAQiH,uBAAwBT,EAAYxO,EAAI9jB,OAAS8yB,EAASte,EAAKhQ,GAAGxE,OAAQgzB,uBAAwB,IACvLF,GAAUte,EAAKhQ,GAAGxE,OAE1B,CACAqJ,GAAQwpB,EAAGjD,OACX9D,GAAUhI,EAAI9jB,OAAS6yB,EAAG/O,IAAI9jB,OAC9B8jB,EAAM+O,EAAG/O,IACL+O,EAAGjD,OAAS,IACZ9D,EAAS,GAEb,KACJ,CACAyG,EAAgBzG,EAChBA,GAAUhI,EAAI9jB,OAAS6yB,EAAG/O,IAAI9jB,OAC9BwQ,EAAOtK,KAAK,CAAEG,KAAMusB,EAAKppB,KAAMqF,MAAOgkB,EAAG5f,IAAKrD,KAAMijB,EAAGjjB,KAAMqI,SAAQ5O,OAAMyiB,OAAQyG,EAAeppB,KAAMwnB,EAAUoC,uBAAwBT,EAAYxO,EAAI9jB,OAAQgzB,uBAAwBlP,EAAI9jB,OAAS6yB,EAAG/O,IAAI9jB,SAC9M8jB,EAAM+O,EAAG/O,IACTza,GAAQwpB,EAAGjD,OACPiD,EAAGjD,OAAS,IACZ9D,EAAS,GAEb,KACJ,CAEA,MAAMmH,EAAYX,EAAYxO,EAAI9jB,OAElC,IAAI6O,EAAQsV,EAAE,GAed,GAdIyO,EAAK9C,KACLjhB,EAAQ+jB,EAAK9C,GAAGjhB,IAGpB0jB,EAAgBzG,EAChB0G,EAAcnpB,EACdyiB,GAAU3H,EAAE,GAAGnkB,OACf8jB,EAAMA,EAAItC,UAAU2C,EAAE,GAAGnkB,SAEN,QAAd4yB,EAAKppB,MAA4B,OAAVqF,GAAiC,SAAd+jB,EAAKppB,QAChDqF,EAAQxF,IACRyiB,EAAS,GAGK,WAAd8G,EAAKppB,KAAmB,CAExB,MAAM0pB,EAAK1D,EAAO/kB,KAAKqZ,GACnBoP,IACApP,EAAMA,EAAItC,UAAU0R,EAAG,GAAGlzB,QAC1B8rB,GAAU3H,EAAE,GAAGnkB,OAEvB,CACA,IAAI4P,EAAO,GACX,GAAIgjB,EAAK/C,SAAU,CACf,MAAM9J,EAAI,EAAArG,OAAA,KAAYoE,GAClBiC,IACAnW,EAAOmW,EAAE,GAAG7lB,QAAQ,OAAQ,IAC5B4rB,GAAU/F,EAAE,GAAG/lB,OAGO,OAFtB8jB,EAAMA,EAAItC,UAAUuE,EAAE,GAAG/lB,SAEjB8lB,OAAO,KACXhC,EAAMA,EAAItC,UAAU,IAGpB,EAAA/B,cAAc7P,KACdA,EAAO,IAGnB,CACA,OAAQgjB,EAAKppB,MACT,IAAK,WACDipB,GAAY,EACZ,MAEJ,IAAK,MACDA,GAAY,EAQpB,GAAkB,eAAdG,EAAKppB,KAAT,CAgBA,GAZAgH,EAAOtK,KAAK,CACRG,KAAMusB,EAAKppB,KACXqF,QACAoJ,SACA5O,KAAMmpB,EACN1G,OAAQyG,EACRppB,KAAMwnB,EACN/gB,OACAmjB,uBAAwBE,EACxBD,uBAAyBV,EAAYxO,EAAI9jB,OAAUizB,IAGrC,QAAdL,EAAKppB,MAA6B,IAAXsiB,EAAc,CACrC,MAAM4G,EAAKzsB,KAAKmsB,YAAYtO,GAC5B7L,EAASya,EAAG,GACZ5G,GAAU4G,EAAG,GACb5O,EAAMA,EAAItC,UAAUkR,EAAG,GAC3B,CACA,KAnBA,CAFIrpB,GAsBR,CACA,IAAKspB,EACD,MAAM,IAAI,KAAmB,UAAY7O,EAAItC,UAAU,EAAG,GAAK,MAAO8Q,EAAYxO,EAAI9jB,OAAQsyB,EAAYA,EAAY,EAAGjpB,EAAMsnB,EAEvI,CACA,OAAOngB,CACX,CAEAvG,uBAAuBgiB,EAAQkH,GAI3B,OAHUlH,EAAO9f,KAAKC,GACXA,EAAE/F,OAEJS,KAAKqsB,EAClB,CAMAlpB,yBAAyB0mB,GACrB,IAAKA,EACD,MAAO,OAIX,IADAA,EAAWA,EAASzwB,QAAQ,SAAU,MACzBf,QAAQ,MAAQ,EAAG,CAC5B,MAAMqH,EAAImqB,EAASxwB,MAAM,KACzBwwB,EAAWnqB,EAAEA,EAAExG,OAAS,EAC5B,CAEA,OADA2wB,EAAWA,EAASzwB,QAAQ,YAAa,GAE7C,EC5nBG,MAAMkzB,UAAmBrH,EAI5B/F,MAAMiG,EAAQ0E,GAMV,OALA1qB,KAAK4mB,QACL5mB,KAAKgmB,OAASA,EACdhmB,KAAK2a,QAAU2P,EAAUK,kBAAkBD,GAC3C1qB,KAAKwa,QAAQva,KAAKD,KAAK2a,SAEhB3a,KAAKotB,aAChB,CAEAA,cACI,MAAMziB,EAAI3K,KAAKqtB,gBACT7sB,EAAIR,KAAKqlB,MACf,GAAI7kB,GAAgB,QAAXA,EAAEJ,KAEP,MADAJ,KAAK8c,OAAO4L,MAAM,YAAY1oB,KAAKsoB,UAAU9nB,EAAG,CAAEgoB,MAAO,IAAK,kBAAsBhoB,GAC9E,cAAyB,YAAYR,KAAKsoB,UAAU9nB,EAAG,CAAEgoB,MAAO,IAAK,kBAAuBhoB,GAEtG,OAAOmK,CACX,CAEA0iB,gBACI,MAAM3iB,EAAS,GACf,IAAItH,GAAQ,EACZ,MAAM8C,EAAMlG,KAAKqoB,gBACjB,MAAQroB,KAAKqnB,SAAS,CAClB,MAAMhuB,EAAI2G,KAAKstB,YACf,IAAKj0B,EACD,MAEJqR,EAAOzK,KAAK5G,GACR+J,EAAO,IACPA,EAAO/J,EAAE+J,KAEjB,CACA,GAAsB,IAAlBsH,EAAO3Q,OAAc,CACrB,MAAMiuB,EAAQhoB,KAAKmoB,QAAUnoB,KAAKgmB,OAAO,GAEzC,MADAhmB,KAAK8c,OAAO4L,MAAM,WAAa1oB,KAAKsoB,UAAUtoB,KAAKmoB,OAAQ,CAAEK,MAAO,IAAK,GAAOR,GAC1E,cAAyB,WAAahoB,KAAKsoB,UAAUtoB,KAAKmoB,OAAQ,CAAEK,MAAO,IAAK,GAAQR,EAClG,CACA,MAAO,CAAE5nB,KAAM,QAAS6J,MAAOS,KAAWxE,EAAK3K,IAAKyE,KAAKqoB,gBAAiBviB,QAAS9F,KAAK8F,QAC5F,CAEAynB,yBACI,MAAMC,EAAQ,GACdxtB,KAAKkmB,MAAMtnB,SAAStF,IAChB,IAAIoqB,EAAI1jB,KAAKsoB,UAAUhvB,EAAG,CAAEkvB,MAAO,IAAK,GACpClvB,EAAEqQ,OACF+Z,GAAKpqB,EAAEqQ,MAEX6jB,EAAMvtB,KAAKyjB,EAAE,IAEjB,MAAM+J,EAAOD,EAAM3sB,KAAK,KAExB,IAAI6sB,EAAW,GACf,MAAMC,EAAM,IAAI1vB,WAAW,GAC3B,IAAK,MAAMyC,KAAKV,KAAK0mB,mBAAoB,CACrCgH,GAAY,MACZ,IAAIzX,EAAK,EACT,MAAM2X,EAAQltB,EAAEiJ,KAChB,GAAIikB,EACA,IAAK,MAAM5c,KAAO4c,EAAO,CAErBF,GADWlgB,OAAO0R,aAAayO,EAAM1X,GAElB,IAAfjF,EAAIjX,OACJ2zB,GAAY1c,EAAI,GAGhB0c,GAAY,IAAI1c,EAAInQ,KAAK,QAE7BoV,GACJ,CAEJyX,GAAYhtB,EAAE6C,KAAO,IACzB,CAEA,OADAvD,KAAK0mB,mBAAqB,GACnB,iBAAiB+G,uBAA0BC,GACtD,CACAG,OAEI,MAAMC,EAAM9tB,KAAKqlB,MACjB,IAAKyI,EACD,OAAO,KAGX,GAAI9tB,KAAKkmB,MAAMnsB,OAAS,EAAG,CACvB,MAAMg0B,EAAS/tB,KAAKutB,yBACpB,MAAM,cAAyBQ,EAAQD,EAC3C,CAEA,OADA9tB,KAAK0mB,mBAAqB,GACnBoH,CACX,CAEAR,YACI,MAAMpnB,EAAMlG,KAAKqoB,gBAEjB,GAAIroB,KAAKunB,MAAM,OACX,OAAOvnB,KAAK6tB,OAEhB,GAAI7tB,KAAKunB,MAAM,MACX,OAAOvnB,KAAKguB,MAEhB,GAAIhuB,KAAKunB,MAAM,OACX,OAAOvnB,KAAKiuB,aAEhB,GAAIjuB,KAAKunB,MAAM,SACX,OAAOvnB,KAAKkuB,aAEhB,GAAIluB,KAAKunB,MAAM,QACX,OAAOvnB,KAAKmuB,UAEhB,GAAInuB,KAAK2nB,OAAO,CAAC,QACb,MAAO,CAAEvnB,KAAM,QAASuJ,KAAM,MAAOzD,EAAK3K,IAAKyE,KAAKqoB,iBAExD,GAAIroB,KAAK2nB,OAAO,CAAC,QACb,MAAO,CAAEvnB,KAAM,WAAYuJ,KAAM,MAAOzD,EAAK3K,IAAKyE,KAAKqoB,iBAE3D,GAAIroB,KAAK2nB,OAAO,CAAC,UAAW,SAAU,OAClC,OAAO3nB,KAAKouB,WAEhB,GAAIpuB,KAAK2nB,OAAO,CAAC,MAAO,WACpB,OAAO3nB,KAAKquB,aAEhB,GAAIruB,KAAK2nB,OAAO,CAAC,YACb,OAAO3nB,KAAKsuB,UAAU,GAE1B,GAAItuB,KAAK2nB,OAAO,CAAC,aACb,OAAO3nB,KAAKsuB,UAAU,GAE1B,GAAItuB,KAAK2nB,OAAO,CAAC,MAAO,SAAU,UAC9B,OAAO3nB,KAAKuuB,YAAYvuB,KAAKW,EAAE,GAAGiI,OAGtC,GAAI5I,KAAKynB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAMtZ,EAAOnO,KAAKqlB,OAASO,IAC3B,MAAM,cAAyB,uBAAuBzX,EAAKvF,cAAeuF,EAC9E,CACA,GAAInO,KAAKynB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMtZ,EAAOnO,KAAKqlB,OAASO,IAC3B,MAAM,cAAyB,MAAMzX,EAAKvF,kBAAmBuF,EACjE,CAEA,GAAInO,KAAK2nB,OAAO,CAAC3nB,KAAKwuB,aAClB,OAAOxuB,KAAKW,EAAE,GAElB,GAAIX,KAAK2nB,OAAO,CAAC3nB,KAAKyuB,sBAClB,OAAOzuB,KAAKW,EAAE,GAElB,GAAIX,KAAK2nB,OAAO,CAAC3nB,KAAK0uB,OAClB,OAAO1uB,KAAKW,EAAE,GAElB,GAAIX,KAAK2nB,OAAO,CAAC3nB,KAAK2uB,WAClB,OAAO3uB,KAAKW,EAAE,GAElB,GAAIX,KAAK2nB,OAAO,CAAC3nB,KAAK4uB,WAClB,OAAO5uB,KAAKW,EAAE,GAGlB,GAAIX,KAAK2nB,OAAO,CAAC3nB,KAAK6uB,QAAS,CAC3B,MAAMC,EAAK9uB,KAAKW,EAAE,GAClB,GAAI+kB,EAAWxsB,QAAQ41B,EAAGnlB,MAAQ,KAAO,EAAG,CACxC,GAAI3J,KAAKkmB,MAAMnsB,QAAU,EAAG,CACxB,MAAMg0B,EAAS/tB,KAAKutB,yBACpB,MAAM,cAAyBQ,EAAQe,EAC3C,CACA,MAAMnP,EAAK3f,KAAKstB,YAChB,GAAW,OAAP3N,EACA,MAAO,CACHvf,KAAM,QACN6J,MAAO,CAAC6kB,EAAInP,GACZhW,KAAMgW,EAAGhW,QACNzD,EACH3K,IAAKyE,KAAKqoB,gBAGtB,CACA,OAAOyG,CACX,CACA,OAAO,IACX,CAEAT,aACI,MAAMnoB,EAAMlG,KAAKqoB,gBAEjB,OADAroB,KAAK8F,QAAU,SACR,CAAE1F,KAAM,SAAU8F,EAAK3K,IAAKyE,KAAKqoB,gBAC5C,CAEAiG,UAAUS,GACN,MAAM7oB,EAAMlG,KAAKqoB,gBAYjB,OAXY,IAAR0G,IAEA/uB,KAAKumB,eAAiB,EAEtBvmB,KAAKwmB,uBAAwB,GAMjCxmB,KAAKymB,oBAAqB,EACnB,CAAErmB,KAAM,SAAU8F,EAAK3K,IAAKyE,KAAKqoB,gBAC5C,CAEAkG,YAAY7a,GACR,MAAMxN,EAAMlG,KAAKqoB,gBAEjB,OADAroB,KAAK8F,QAAU4N,EACR,CAAEtT,KAAM,SAAU8F,EAAK3K,IAAKyE,KAAKqoB,gBAC5C,CAEA+F,WACI,MACM1D,EADY1qB,KAAKW,EAAE,GACEiI,MACrB+R,EAAU2P,EAAUK,kBAAkBD,GAC5C,GAAI1qB,KAAKwa,QAAQthB,QAAQyhB,GAAW,EAAG,CAGnC,MAAMkR,EAAU7rB,KAAKwa,QAAQ5d,QACzBivB,IACA7rB,KAAKwa,QAAQmH,QAAQhH,GACrB3a,KAAKwa,QAAQmH,QAAQkK,GAE7B,CACA,MAAO,CACHzrB,KAAM,UACNwI,MAAO8hB,EACP/gB,KAAM,MACH3J,KAAKqoB,gBACR9sB,IAAKyE,KAAKqoB,gBAElB,CAEA2G,SACI,MAAM9oB,EAAMlG,KAAKqoB,gBACX3d,EAAS,GAIf,IAHI1K,KAAKunB,MAAM,SACXvnB,KAAKqlB,OAEDrlB,KAAKqnB,UACLrnB,KAAK0nB,WAAW,CAAC,MAAO,OAAQ,SAG/B1nB,KAAK2nB,OAAO,CAAC3nB,KAAKstB,aAGvB5iB,EAAOzK,KAAKD,KAAKW,EAAE,IAEvB,MAAO,CAAEP,KAAM,QAAS6J,MAAOS,KAAWxE,EAAK3K,IAAKyE,KAAKqoB,gBAC7D,CACA4G,mBACI,IAAKjvB,KAAKunB,MAAM,KACZ,OAAO,KAEX,MAAMhnB,EAAI,GAEV,IADAP,KAAKqlB,OACGrlB,KAAKqnB,SAAS,CAClB,GAAIrnB,KAAKunB,MAAM,KAAM,CACjBvnB,KAAKqlB,MACL,KACJ,CACA,MAAM/rB,EAAI0G,KAAKqlB,MACX/rB,GACAiH,EAAEN,KAAK3G,GAEP0G,KAAKunB,MAAM,UACXvnB,KAAKqlB,KAEb,CACA,OAAO9kB,CACX,CACAouB,WACI,OAAO3uB,KAAKkvB,KAAK,WACrB,CACAN,WACI,OAAO5uB,KAAKkvB,KAAK,WACrB,CAEAA,KAAK9uB,GACD,IAAKJ,KAAKunB,MAAMnnB,GACZ,OAAO,KAEX,MAAM8F,EAAMlG,KAAKqoB,gBACXhO,EAAMra,KAAKqlB,MACjB,IAAKhL,EACD,OAAO,KAEX,IAAI8U,EAAU,GACVnvB,KAAKunB,MAAM,OACX4H,EAAUnvB,KAAKivB,oBAAsB,IAEzC,MAAM7d,EAAWpR,KAAKqlB,MACtB,IAAKjU,GAA8B,SAAlBA,EAAShR,KAEtB,MADAJ,KAAK8c,OAAO4L,MAAM1oB,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GAAQ,WAAYrX,GACvF,cAAyBpR,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GAAS,WAAYpO,GAE/G,GAAIra,KAAKunB,MAAM,KAAM,CAEjB,GAAI4H,EAAQp1B,OAAS,EAEjB,MADAiG,KAAK8c,OAAO4L,MAAM1oB,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GAAQ,6BAA8BrX,GACzG,cAAyBpR,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GAAS,6BAA8BrX,GAEjI+d,EAAUnvB,KAAKivB,oBAAsB,EACzC,CACIjvB,KAAKunB,MAAM,OACXvnB,KAAKqlB,MAET,IAAIpb,EAAQ,KACRmlB,GAAY,EACZlmB,GAAU,EACVlJ,KAAKunB,MAAM,UACX6H,GAAY,GAEZpvB,KAAKunB,MAAM,SACX6H,GAAY,GAEhB,IACIpvB,KAAKqmB,YACLrmB,KAAK2F,aAAc,EAEnB,MAAM0pB,EAAkBrvB,KAAKsmB,UAE7B,GADAtmB,KAAKsmB,UAAY,CAAE,KAAM,CAAElmB,KAAM,MAAOwI,MAAO,KAC3CwmB,EAAW,CACXpvB,KAAK+mB,YAEL,IAAK,MAAM/V,KAAOme,EAAS,CACvB,MAAMG,EAAUte,EAAS,MAAIA,EAAIpI,MAAQ,GAAK,GAC9C5I,KAAKsmB,UAAUgJ,GAAU,CAAE,KAAQ,MAAO,MAAS,GACvD,CAEA,GADArlB,EAAQjK,KAAKgvB,UACThvB,KAAKunB,MAAM,QAIX,MAAM,cAAyB,6BAA8BlN,GAH7Dra,KAAKqlB,MAKTrlB,KAAKgnB,WACT,MAEIhnB,KAAK+mB,YACL9c,EAAQjK,KAAKstB,YACbttB,KAAKgnB,YAEThnB,KAAKqmB,YACLnd,EAAUlJ,KAAK2F,YACf3F,KAAKsmB,UAAY+I,CACrB,CACA,MAAO5N,GAGH,MAFAzhB,KAAK8c,OAAO4L,MAAM1oB,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GACrE,sBAAwBhH,EAAIld,QAAS8V,GACnC,cAAyBra,KAAKsoB,UAAUlX,EAAU,CAAEoX,MAAO,EAAGC,SAAU,OAAQ,GAClF,sBAAwBhH,EAAIld,QAAS8V,EAC7C,CACA,MAAO,CACHja,OACAmD,KAAM6N,EACNP,KAAMse,EACNllB,MAAOA,GAAS,GAChBf,UACAS,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAkH,UACI,MAAMrpB,EAAMlG,KAAKqoB,gBACjB,IAAI9nB,EAAIP,KAAKwvB,UACb,IAAKjvB,EACD,OAAO,KAIX,GAAe,QAAXA,EAAEoJ,KACF,OAAOpJ,EAEX,GAAe,UAAXA,EAAEoJ,KAEF,OADApJ,EAAI,CAAEH,KAAM,MAAOwI,MAAOrI,EAAGoJ,KAAM,MAAOzD,EAAK3K,IAAKyE,KAAKqoB,iBAClD9nB,EAGX,GAAgB,KAAXA,EAAEoJ,MAAiB3J,KAAKunB,MAAM,QAE/BvnB,KAAKkmB,MAAMjmB,KAAKM,GAChBA,EAAIP,KAAK6uB,aAIb,GAAe,MAAXtuB,EAAEoJ,KAAc,CAChB,MAAM8lB,EAAOzvB,KAAKwO,MACZ7D,EAAI3K,KAAKwvB,UACf,IAAK7kB,EACD,MAAM,cAAyB,iCAC3B3K,KAAKsoB,UAAUtoB,KAAKmoB,OAAQ,CAAEK,MAAO,IAAK,GAAQtiB,GAE1D,GAAIlG,KAAKunB,MAAM,OAAQ,CACnB,MAAMmI,EAAS1vB,KAAKqlB,OAAS,CAAE,MAAS,OACxC1a,EAAEhB,KAAO+lB,EAAO9mB,KACpB,CACA,GAAI+B,IAAiB,QAAXA,EAAEhB,MAA6B,UAAXgB,EAAEhB,MAC5B,MAAO,CACHvJ,KAAM,KACNiT,SAAsB,UAAX1I,EAAEhB,KAAoB,QAAU,KAC3C7O,KAAMyF,EACNvF,MAAO2P,EACPhB,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,iBAGlBroB,KAAKwO,MAAQihB,CACjB,CAOA,GALKzvB,KAAKunB,MAAM,SACZvnB,KAAKkmB,MAAMjmB,KAAKM,GAChBA,EAAIP,KAAK6uB,UAGR7uB,KAAKunB,MAAM,OAAQ,CACpB,MAAMoI,EAAOpvB,GAAK,CAAEH,KAAM,OAAQ8F,GAElC,MADAlG,KAAK8c,OAAO4L,MAAM,2BAA6B1oB,KAAKsoB,UAAUtoB,KAAKmoB,OAAQ,CAAEK,MAAO,IAAK,GAAS,qBAAsBmH,GAClH,cAAyB,2BAA6B3vB,KAAKsoB,UAAUtoB,KAAKmoB,OAAQ,CAAEK,MAAO,IAAK,GAAS,qBAAsBmH,EACzI,CACA,MAAMD,EAAS1vB,KAAKqlB,MAWpB,OATIqK,GAA2B,UAAjBA,EAAO9mB,QACjBrI,EAAI,CACAH,KAAM,MACNwI,MAAOrI,EACPoJ,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,kBAGX9nB,CACX,CAEAytB,MACI,MAAM9nB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,MACZ,OAAO,KAEX,MAAMqI,EAAO5vB,KAAKqlB,MAClB,GAAY,MAARuK,EACA,OAAO,KAEX,KAAO5vB,KAAKunB,MAAM,UACdvnB,KAAKqlB,MAET,IAAIvV,EAAO,KACX,IACIA,EAAO9P,KAAKuvB,SAChB,CACA,MAAO9N,GACH,MAAM,cAAyB,yBAA2BA,EAAIld,QAASqrB,EAC3E,CACA,GAAa,OAAT9f,EACA,MAAM,cAAyB,mBAAoB8f,GAEvD,IAAIC,EAAY,KACZxf,EAAa,KACbyf,GAAS,EAUb,IARI9vB,KAAKunB,MAAM,OACXsI,EAAY7vB,KAAKgvB,UAGjBa,EAAY7vB,KAAKstB,YACjBwC,GAAS,GAGN9vB,KAAKunB,MAAM,QACdvnB,KAAKqlB,MAGT,GAAIrlB,KAAKunB,MAAM,OAAQ,CAEnB,IADAvnB,KAAKqlB,MACErlB,KAAKunB,MAAM,UACdvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,OACXlX,EAAarQ,KAAKgvB,UAGlB3e,EAAarQ,KAAKstB,YAClBwC,GAAS,EAEjB,CACA,IAAe,IAAXA,EAAkB,CAClB,IAAI9vB,KAAKunB,MAAM,QAIX,MAAM,cAAyB,sBAAuBqI,GAHtD5vB,KAAKqlB,KAKb,CACA,MAAO,CACHjlB,KAAM,KACNgQ,KAAMN,GAAQ,GACd7F,MAAO4lB,GAAa,GACpBvf,YAAaD,GAAc,GAC3B1G,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACAmG,aACI,MAAMtoB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKynB,OAAO,CAAC,SAAU,WACxB,OAAO,KAEX,MAAMsI,EAAa/vB,KAAKqlB,MACxBrlB,KAAKqlB,MACL,IAAI2K,EAAM,GACV,IAAID,IAAcA,EAAWnnB,MAIzB,OAAO,KAHPonB,EAAMD,EAAWnnB,MAKrB,MAAMgH,EAAU,CAAE,SAAO,EAAO,YAAU,EAAO,SAAO,EAAO,QAAM,GACrE,IAAK,MAAMrM,KAAQysB,EAAI91B,MAAM,KAAM,CAE/B,GAAa,OAATqJ,EAAe,CACf,IAAK,MAAM7F,KAAKwB,OAAO6C,KAAK6N,GACxBA,EAAQlS,IAAK,EAEjB,KACJ,CAEIwB,OAAO6C,KAAK6N,GAASvB,SAAS9K,GAC9BqM,EAAQrM,IAAQ,EAIhBvD,KAAK8c,OAAO1P,KAAK,iBAAiB7J,aAAiBwsB,EAE3D,CACA,IAAIX,GAAY,EACZpvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MACL+J,GAAY,GAEPpvB,KAAKunB,MAAM,SAChB6H,GAAY,GAEhB,IAAInlB,EAAQ,KAUZ,OATImlB,GACAnlB,EAAQjK,KAAKgvB,SACThvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,OAITpb,EAAQjK,KAAKstB,YAEV,CACHltB,KAAM,aACNwP,UACA3F,MAAOA,GAAS,GAChBN,KAAM,MACHzD,EAEX,CACAuoB,sBACI,MAAMvoB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKynB,OAAO,CAAC,SAAU,iBACxB,OAAO,KAEX,MAAMsI,EAAa/vB,KAAKqlB,MACxB,IAAK0K,EACD,OAAO,KAEX/vB,KAAKqlB,MACL,MAAMzV,EAAU,CAAE,SAAO,EAAO,YAAU,EAAO,UAAQ,GACzD,IAAK,MAAMrM,KAAQwsB,EAAWnnB,MAAM1O,MAAM,KAAM,CAE5C,GAAa,OAATqJ,EAAe,CACf,IAAK,MAAM7F,KAAKwB,OAAO6C,KAAK6N,GACxBA,EAAQlS,IAAK,EAEjB,KACJ,CAEIwB,OAAO6C,KAAK6N,GAASvB,SAAS9K,GAC9BqM,EAAQrM,IAAQ,EAIhBvD,KAAK8c,OAAO1P,KAAK,uBAAuB7J,aAAiBwsB,EAEjE,CACA,IAAIX,GAAY,EACZpvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MACL+J,GAAY,GAEPpvB,KAAKunB,MAAM,SAChB6H,GAAY,GAEhB,IAAInlB,EAAQ,KAUZ,OATImlB,GACAnlB,EAAQjK,KAAKgvB,SACThvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,OAITpb,EAAQjK,KAAKstB,YAEV,CACHltB,KAAM,sBACNwP,UACA3F,MAAOA,GAAS,GAChBN,KAAM,MACHzD,EAEX,CAEAioB,UACI,MAAMjoB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,QACZ,OAAO,KAEX,MAAM0I,EAASjwB,KAAKioB,SACpBjoB,KAAK8c,OAAO1P,KAAK,+DAAgE6iB,GACjF,MAAMvlB,EAAS,GACf,IAAI+F,EAAa,KACjB,IAAKwf,IAAWjwB,KAAKunB,MAAM,OACvB,MAAM,cAAyB,qBAAsB0I,GAGzD,MACQjwB,KAAKunB,MAAM,SADV,CAIL,GAAIvnB,KAAKunB,MAAM,OAAQ,CACnBvnB,KAAKqlB,MACL,QACJ,CACA,GAAIrlB,KAAKynB,OAAO,CAAC,MAAO,QAAS,CAC7BznB,KAAKqlB,MACLrlB,KAAKqlB,MACL5U,EAAazQ,KAAKgvB,SAClB,KACJ,CACA,IAAI/kB,EAAQ,KAEZ,GAAIjK,KAAKunB,MAAM,OAASvnB,KAAKunB,MAAM,MAAO,CACtC,MAAM2I,EAASlwB,KAAKqlB,MAIpB,GAHIrlB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,OAAQ,CAEnB,GADAtd,EAAQjK,KAAKgvB,UACRhvB,KAAKunB,MAAM,QAAS,CACrB,IAAI4I,EAAa,KAIjB,MAHc,MAAVD,IACAC,EAAaD,EAAO9vB,MAElB,cAAyB,IAAI+vB,yBAAmCjqB,EAC1E,CACAlG,KAAKqlB,KACT,MAEIpb,EAAQjK,KAAKstB,WAErB,MAEIrjB,EAAQjK,KAAKstB,YAGJ,MAATrjB,GACAS,EAAOzK,KAAKgK,EAEpB,CACA,IAAKjK,KAAKunB,MAAM,QAEZ,MADAjK,QAAQC,IAAI7S,EAAQ1K,KAAKmoB,QACnB,cAAyB,6BAA8B8H,GAGjE,OADAjwB,KAAKqlB,MACE,CACHjlB,KAAM,SACNsK,OAAQA,GAAU,GAClB+F,WAAYA,GAAc,GAC1B9G,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAKA+H,gBAAgBC,GACZ,MAAMxf,EAAO,CAACwf,GACd,MAAQrwB,KAAKqnB,SAAS,CAElB,IAAIjU,EAAKpT,KAAKmoB,OACd,IAAI/U,IAAMqS,EAAWrS,EAAGhT,MAWxB,MAXA,CACIgT,EAAKpT,KAAKioB,SACVpX,EAAK5Q,KAAKmT,GAEV,MAAMjN,EAAInG,KAAKswB,SACf,GAAU,OAANnqB,EACA,MAAM,cAAyB,WAAWiN,EAAGxK,kBAAmBynB,GAEpExf,EAAK5Q,KAAKkG,EAEd,CAEJ,CACA,OAAoB,IAAhB0K,EAAK9W,OACE,KAES,IAAhB8W,EAAK9W,OACE8W,EAAK,GAET7Q,KAAKuwB,WAAW1f,EAC3B,CACA2e,UAEI,MAAMgB,EAASxwB,KAAKswB,SACpB,OAAe,OAAXE,EACO,KAGJxwB,KAAKowB,gBAAgBI,EAChC,CACAC,cAAcliB,GAEV,MAAMmiB,EAAYp3B,GACVmsB,EAAWnsB,EAAE8G,MACNqlB,EAAWnsB,EAAE8G,MAEjB,GAEL8lB,EAAQ,GACRyK,EAAS,GACf,KAAOpiB,EAAKxU,OAAS,GAAG,CACpB,MAAMT,EAAIiV,EAAK3R,QACf,IAAKtD,EACD,MAEJ,KAAO4sB,EAAMnsB,OAAS,GAAG,CACrB,MAAM62B,EAAO1K,EAAMA,EAAMnsB,OAAS,GAClC,GAAI22B,EAASp3B,GAAKo3B,EAASE,GACvB,MAEJ,MAAMC,EAAO3K,EAAM5X,MACnB,IAAKuiB,EAAM,CACP7wB,KAAK8c,OAAO1Y,MAAM,gBAAiB9K,GACnC,KACJ,CACAq3B,EAAO1wB,KAAK4wB,EAChB,CACA3K,EAAMjmB,KAAK3G,EACf,CAEA,KAAO4sB,EAAMnsB,OAAS,GAAG,CACrB,MAAMT,EAAI4sB,EAAM5X,MACZhV,GACAq3B,EAAO1wB,KAAK3G,EAEpB,CACA,OAAOq3B,CACX,CAEAJ,WAAWhiB,GACP,GAAoB,IAAhBA,EAAKxU,OACL,OAAO,KAGX,MAAM4P,EAAO4E,EAAKA,EAAKxU,OAAS,GAAG4P,KAC7BhC,EAAO4G,EAAKA,EAAKxU,OAAS,GAC1B42B,EAAS3wB,KAAKywB,cAAcliB,GAE5B2X,EAAQ,GACd,IAAK,MAAM5sB,KAAKq3B,EAAQ,CACpB,IAAKlL,EAAWnsB,EAAE8G,MAAO,CACrB8lB,EAAMjmB,KAAK3G,GACX,QACJ,CACA,MAAMqR,EAAIub,EAAM5X,MACV/N,EAAI2lB,EAAM5X,MAChB,QAAUnL,IAAN5C,QAAyB4C,IAANwH,EAEnB,MADA3K,KAAK8c,OAAO4L,MAAM,wBAA0B1gB,KAAKC,UAAU0oB,IACrD,cAAyB,UAAWhpB,GAG9C,MAAMyL,EAAK,CACPhT,KAAM,KACNiT,SAAU/Z,EAAE8G,KACZtF,KAAMyF,EACNvF,MAAO2P,EACPhB,OACA9F,YAAatD,EAAEsD,YACfC,UAAWvD,EAAEuD,UACbV,KAAM7C,EAAE6C,KACRyiB,OAAQtlB,EAAEslB,OACV3iB,KAAM3C,EAAE2C,MAEZgjB,EAAMjmB,KAAKmT,EACf,CACA,MAAM0d,EAAM5K,EAAM5X,MAClB,OAAKwiB,GACM,IAGf,CACAC,aAAapwB,GACT,IAAIqwB,GAAU,EACd,MAAMC,EAAKjxB,KAAKkmB,MAAMnsB,OACtB,MAAQiG,KAAKqnB,SAAS,CAClB,GAAIrnB,KAAKunB,MAAM,KAAM,CACjByJ,GAAU,EACV,KACJ,CACA,MAAM7qB,EAAInG,KAAKwvB,UACf,IAAIrpB,EAOJ,MANInG,KAAKmnB,UAAUhhB,GACXnG,KAAKunB,MAAM,UACXvnB,KAAKqlB,KAKjB,CACA,IAAK2L,EACD,MAAM,cAAyB,QAAQrwB,EAAE,GAAGiI,qBAAsBjI,EAAE,IAExE,MAAMJ,EAAI,GACV,KAAO0wB,EAAKjxB,KAAKkmB,MAAMnsB,QAAQ,CAC3B,MAAMoM,EAAInG,KAAK8mB,WACX3gB,GACA5F,EAAEohB,QAAQxb,EAElB,CACA,OAAO5F,CACX,CAEA2wB,cACI,MAAMhrB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,KACZ,OAAO,KAEXvnB,KAAKqlB,MACDrlB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,OACXvnB,KAAKqlB,MAET,IAAI8L,EAAMnxB,KAAK8mB,SAAS,IACpBsI,GAAY,EACZnlB,EAAQ,KAcZ,GAbY,OAARknB,IACAA,EAAM,CAAE/wB,KAAM,OAAQwI,MAAO,KAAMe,KAAM,MAAOzD,EAAK3K,IAAKyE,KAAKqoB,kBAE/DroB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MACL+J,GAAY,GAEPpvB,KAAKunB,MAAM,SAChB6H,GAAY,GAEZA,EAAW,CAEX,GADAnlB,EAAQjK,KAAKgvB,UACThvB,KAAKunB,MAAM,QAIX,MAAM,cAAyB,uCAAwCrhB,GAHvElG,KAAKqlB,KAKb,MAGIpb,EAAQjK,KAAKstB,YAEjB,MAAO,CACHltB,KAAM,eACNwI,MAAOuoB,EACPlnB,MAAOA,GAAS,GAChBN,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA+I,SACI,MAAMlrB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,KACZ,OAAO,KAGX,IADAvnB,KAAKqlB,MACErlB,KAAKunB,MAAM,UACdvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,OACXvnB,KAAKqlB,MAET,MAAMvV,EAAO9P,KAAK8mB,WAClB,GAAa,OAAThX,EACA,MAAM,cAAyB,gBAAiB5J,GAKpD,GAHIlG,KAAKunB,MAAM,UACXvnB,KAAKqlB,OAEJrlB,KAAK0nB,WAAW,CAAC,OAAQ,QAC1B,MAAM,cAAyB,iBAAkBxhB,GAErD,MAAM+D,EAAQjK,KAAKgvB,SAInB,OAHIhvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MAEF,CACHjlB,KAAM,QACN0P,OACA7F,QACAN,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA4F,aACI,MAAM/nB,EAAMlG,KAAKqoB,gBACbroB,KAAKunB,MAAM,QACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,OACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MAET,MAAMpb,EAAQjK,KAAKgvB,SACfhvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MAELrlB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET,IAAIvV,EAAO9P,KAAKwvB,UACZ6B,GAAS,EACb,MAAM/3B,EAAI0G,KAAKmoB,OAiBf,OAhBI7uB,GAAiB,OAAZA,EAAEsP,OAA8B,OAAXtP,EAAEqQ,MAA4B,QAAXrQ,EAAEqQ,OAC/C3J,KAAKqlB,MACLgM,GAAS,GAETrxB,KAAKunB,MAAM,MACXvnB,KAAKqlB,MAELgM,IACAvhB,EAAO,CACH1P,KAAM,MACNwI,MAAOkH,EACPnG,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,kBAGX,CACHjoB,KAAM,YACN0P,KAAMA,GAAQ,GACd7F,QACAN,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAiJ,OACI,IAAIjiB,GAAW,EACf,MAAMnJ,EAAMlG,KAAKqoB,gBACjB,KAAIroB,KAAKunB,MAAM,OAASvnB,KAAKunB,MAAM,QAAUvnB,KAAKunB,MAAM,QAIpD,OAAO,KAEX,MAAMgK,EAAYvxB,KAAKioB,SAEjBuJ,EAASxxB,KAAKkmB,MAAM5X,MACtBkjB,IACoB,SAAhBA,EAAOpxB,MAAqC,MAAjBoxB,EAAO5oB,OAAkC,MAAjB4oB,EAAO5oB,MAQ1D5I,KAAKkmB,MAAMjmB,KAAKuxB,IAPK,MAAjBA,EAAO5oB,QACPyG,GAAW,GAEfkiB,EAAUnxB,KAAOoxB,EAAO5oB,MAAQ2oB,EAAUnxB,OAOlD,IAAIqxB,EAAO,KACY,QAAnBF,EAAUnxB,MAAqC,QAAnBmxB,EAAUnxB,OACtCqxB,EAAOzxB,KAAK8mB,SAAS,CAAC,OACC,QAAnByK,EAAUnxB,OACViP,GAAW,IAGnB,MAAMqiB,EAAM1xB,KAAK8mB,SAAS,CAAC,OACrB6K,EAAQ3xB,KAAK8mB,SAAS,CAAC,OACvB3Y,EAAOnO,KAAK8mB,SAAS,CAAC,IAAK,MACjC,GAAc,OAAV6K,GAA0B,OAARD,EAClB,MAAM,cAAyB,2BAA4BH,GAE3DvxB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET,IAAI+J,GAAY,GACZpvB,KAAKunB,MAAM,SAINvnB,KAAKunB,MAAM,UAHhB6H,GAAY,EACZpvB,KAAKqlB,OAMT,IAAIpb,EAAQ,KACZ,GAAImlB,EAAW,CAEX,GADAnlB,EAAQjK,KAAKgvB,UACThvB,KAAKunB,MAAM,QAIX,MAAM,cAAyB,0CAA2CrhB,GAH1ElG,KAAKqlB,KAKb,MAEIpb,EAAQjK,KAAKstB,YAEjB,MAAO,CACHltB,KAAM,MACN4N,KAAM2jB,EACNviB,GAAIsiB,EACJpiB,IAAKmiB,EACLpiB,WACAlB,OACAlE,MAAOA,GAAS,GAChBN,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAuJ,UACI,MAAM1rB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,MACZ,OAAO,KAEXvnB,KAAKqlB,MACL,MAAMlf,EAAInG,KAAK8mB,SAAS,CAAC,IAAK,MAC9B,GAAI9mB,KAAKkmB,MAAMnsB,OAAS,EACpB,MAAM,cAAyB,iDAAkDmM,GAErF,MAAO,CACH9F,KAAM,SACNwI,MAAOzC,EACPwD,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAwJ,WACI,MAAM3rB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,MACZ,OAAO,KAGX,IADAvnB,KAAKqlB,MACErlB,KAAKunB,MAAM,UACdvnB,KAAKqlB,MAET,MAAM7jB,EAASxB,KAAK8mB,SAAS,CAAC,MACxBvjB,EAAOvD,KAAK8mB,SAAS,CAAC,MAC5B,IAAI7c,EAAQ,KACRmlB,GAAY,EAiBhB,OAhBIpvB,KAAKunB,MAAM,SACX6H,GAAY,EACZpvB,KAAKqlB,OAEArlB,KAAKunB,MAAM,SAChB6H,GAAY,GAEZA,GACAnlB,EAAQjK,KAAKgvB,SACThvB,KAAKunB,MAAM,SACXvnB,KAAKqlB,OAITpb,EAAQjK,KAAKstB,YAEV,CACHltB,KAAM,UACNmD,OACA/B,SACAyI,MAAOA,GAAS,GAChBN,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAyJ,UACI,MAAM5rB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,QACZ,OAAO,KAEX,MAAMwK,EAAc/xB,KAAKqlB,MACzB,IAAK0M,EACD,OAAO,KAEX,MAAMjE,EAAM9tB,KAAKqlB,MACjB,IAAKyI,EACD,OAAO,KAEX,MAAMllB,EAAQ5I,KAAK8mB,SAAS,CAAC,MAC7B,IAAKle,EACD,MAAM,cAAyB,0BAA2BmpB,GAE9D,GAAiB,QAAbjE,EAAI1tB,KACJ,MAAM,cAAyB,sBAAuB2xB,GAE1D,IAAIC,GAAkB,EAClBC,GAAkB,EACtB,MAAMjiB,EAAQ,GACd,MAAQhQ,KAAKqnB,SAAS,CAClB,GAAIrnB,KAAKunB,MAAM,QAAS,CACpB,GAAI0K,EACA,MAAM,cAAyB,kCAAmCF,GAEtE/xB,KAAKqlB,MACL,KACJ,CACA,GAAIrlB,KAAKunB,MAAM,OAAQ,CACnBvnB,KAAKqlB,MACL,QACJ,CACA,GAAI2M,EACA,MAAM,cAAyB,sCAAuCD,GAG1E,IAAIjiB,EAAO,KACX,MAAMoiB,EAAYlyB,KAAKmoB,OACvB,GAAI+J,GAAgC,QAAnBA,EAAU9xB,KAEvB6xB,GAAkB,EAClBD,GAAkB,EAClBliB,EAAO9P,KAAKqlB,MACRrlB,KAAKunB,MAAM,UACXvnB,KAAKqlB,UAGR,CAED,GAAI4M,EACA,MAAM,cAAyB,kCAAmCF,GAItE,GADAjiB,EAAO9P,KAAKswB,UACPxgB,EACD,MAAM,cAAyB,kCAAmCiiB,GAEtE,MAAMrC,EAAS1vB,KAAKqlB,MACpB,IAAKqK,GAA0B,QAAhBA,EAAOtvB,KAClB,MAAM,cAAyB,4BAA6B2xB,GAE5D/xB,KAAKunB,MAAM,UACXvnB,KAAKqlB,KAEb,CAEA,MAAM8M,EAAYnyB,KAAKgvB,SACjBoD,EAAWpyB,KAAKmoB,OACtB,GAAIiK,GAA8B,SAAlBA,EAAShyB,KACrBJ,KAAKqlB,UAEJ,CACD,GAAI2M,EACA,MAAM,cAAyB,8BAA+BD,GAGlEE,GAAkB,CACtB,CACAjiB,EAAM/P,KAAK,CAAC6P,EAAMqiB,GACtB,CACA,MAAO,CACH/xB,KAAM,SACNwI,QACAoH,MAAOA,GAAS,GAChBrG,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAgK,aACI,MAAMnsB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,YACZ,OAAO,KAEX,MAAMlN,EAAMra,KAAKqlB,MACjB,IAAKhL,EACD,OAAO,KAEX,IAAIxJ,EAAO,GAEP7Q,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAGLrlB,KAAKunB,MAAM,OACX1W,EAAO7Q,KAAKivB,oBAAsB,IAGlCjvB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAGTrlB,KAAKqmB,YACLrmB,KAAK+mB,YACL,MAAM9c,EAAQjK,KAAKgvB,SAEnB,IAAKhvB,KAAKunB,MAAM,QACZ,MAAM,cAAyB,2CAA4CrhB,GAK/E,OAHAlG,KAAKqlB,MACLrlB,KAAKgnB,YACLhnB,KAAKqmB,YACE,CACHjmB,KAAM,WACNyQ,OACA5G,QACAG,KAAMiQ,EAAIjQ,KACVT,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAiK,UACI,MAAMpsB,EAAMlG,KAAKqoB,gBACXkK,EAASvyB,KAAKqlB,MACpB,GAAe,OAAXkN,EACA,OAAO,KAEX,MAAM3pB,EAAQ5I,KAAK8mB,SAAS,CAAC,MACvB3Y,EAAOnO,KAAK8mB,SAAS,CAAC,IAAK,MACjC,IAAK3Y,GAAuB,SAAdA,EAAK/N,MAAiC,SAAd+N,EAAK/N,MAAiC,SAAd+N,EAAK/N,KAC/D,MAAM,cAAyB,6CAA8CmyB,GAGjF,GAAkB,SAAdpkB,EAAK/N,KACL,MAAO,CACHA,KAAM,YACNmD,KAAM4K,EAAK5K,KACXiL,MAAOL,EAAKK,MACZ5F,QACAe,KAAM,GACNgF,UAAW3O,KAAKymB,sBACbvgB,EACH3K,IAAKyE,KAAKqoB,iBAKlB,MAAO,CACHjoB,KAAM,MACNmD,KAHUvD,KAAKwyB,WAAWrkB,GAI1BvF,QACAe,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEAoK,YACI,MAAMvsB,EAAMlG,KAAKqoB,gBACXqK,EAAW1yB,KAAKqlB,MACtB,GAAiB,OAAbqN,EACA,OAAO,KAEX,MAAMvkB,EAAOnO,KAAK8mB,SAAS,CAAC,MACtBle,EAAQ5I,KAAK8mB,SAAS,CAAC,IAAK,IAAK,MACvC,IAAK3Y,GAAuB,SAAdA,EAAK/N,MAAiC,SAAd+N,EAAK/N,MAAiC,SAAd+N,EAAK/N,KAC/D,MAAM,cAAyB,6CAA8CsyB,GAIjF,MAAO,CACHtyB,KAAM,gBACNmD,KAHcvD,KAAK2yB,UAAUxkB,GAAM,GAInCsF,QAAS,KACT7K,QACAe,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACAuK,UACI,MAAM1sB,EAAMlG,KAAKqoB,gBACXwK,EAAS7yB,KAAKqlB,MACpB,GAAe,OAAXwN,EACA,OAAO,KAGX,GAAI7yB,KAAKunB,MAAM,MAEX,OADAvnB,KAAKmnB,UAAU,CAAE/mB,KAAM,OAAQwI,MAAOiqB,EAAOjqB,MAAOe,KAAMkpB,EAAOlpB,QAASzD,EAAK3K,IAAKyE,KAAKqoB,kBAClFroB,KAAKsxB,OAGhB,IAAI1oB,EAAQ5I,KAAK8mB,SAAS,CAAC,KAAM,KAC5Ble,IACDA,EAAQ,CAAExI,KAAM,SAAUwI,MAAO,EAAGe,KAAM,QAASzD,EAAK3K,IAAKyE,KAAKqoB,kBAEtE,MAAMla,EAAOnO,KAAK8mB,SAAS,CAAC,MAC5B,IAAK3Y,GAAuB,SAAdA,EAAK/N,MAAiC,SAAd+N,EAAK/N,KACvC,MAAM,cAAyB,IAAIyyB,EAAOzyB,iCAAiCyyB,EAAOzyB,iBAAkByyB,GAMxG,MAHqB,MAAjBA,EAAOjqB,QACPA,EAAQ,CAAExI,KAAM,KAAMiT,SAAU,IAAKvY,KAAM8N,EAAO5N,MAAO,CAAEoF,KAAM,SAAUwI,OAAQ,EAAGxF,KAAMyvB,EAAOzvB,MAAQuG,KAAM,MAAOzD,IAErH,CACH9F,KAAM,MACNmD,KAAM4K,EACNvF,QACAe,KAAMkpB,EAAOlpB,QACVzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACAwG,QACI,GAAI7uB,KAAKqnB,QACL,OAAO,KAGX,MAAQrnB,KAAKqnB,SAAS,CAKlB,GAJIrnB,KAAKunB,MAAM,SACXvnB,KAAKqlB,MAGLrlB,KAAKunB,MAAM,MACX,OAAOvnB,KAAKsyB,UAEhB,GAAItyB,KAAKunB,MAAM,OACX,OAAOvnB,KAAKyyB,YAGhB,GAAIzyB,KAAKunB,MAAM,KACX,OAAOvnB,KAAKkxB,cAEhB,GAAIlxB,KAAKunB,MAAM,KACX,OAAOvnB,KAAKoxB,SAEhB,GAAIpxB,KAAKunB,MAAM,OAASvnB,KAAKunB,MAAM,QAAUvnB,KAAKunB,MAAM,OACpD,OAAOvnB,KAAKsxB,OAEhB,GAAItxB,KAAKunB,MAAM,MACX,OAAOvnB,KAAK6xB,WAEhB,GAAI7xB,KAAKunB,MAAM,QACX,OAAOvnB,KAAK8xB,UAEhB,GAAI9xB,KAAKunB,MAAM,MACX,OAAOvnB,KAAK4xB,UAEhB,GAAI5xB,KAAKunB,MAAM,MAAQvnB,KAAKunB,MAAM,KAC9B,OAAOvnB,KAAK4yB,UAGhB,GAAI5yB,KAAKynB,OAAO,CAAC,CAAC,OAAQ,QAAS,MAAO,CACtC,MAAMqL,EAAM9yB,KAAKmoB,OACjB,GAAI2K,GAAoB,KAAbA,EAAInpB,KAAa,CACxB,MAAMrQ,EAAI0G,KAAKswB,SACf,GAAIh3B,EAAG,CACH,MAAMqQ,EAAOrQ,EAAEqQ,MAAQ,GACvB,GAAe,SAAXrQ,EAAE8G,OAA+B,KAAX9G,EAAEqQ,MAAe+b,EAAWxsB,QAAQyQ,IAAS,GAEnE,OADArQ,EAAEqQ,KAAO,GACFrQ,EAEX0G,KAAKmnB,UAAU7tB,EACnB,CACI0G,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET,QACJ,CACJ,CAEA,GAAIrlB,KAAKunB,MAAM,QAAS,CACpB,MAAM7oB,EAAIsB,KAAK+yB,YACf,GAAU,OAANr0B,EACA,SAGJ,GAAIsB,KAAKunB,MAAM,KAAM,CACjBvnB,KAAKmnB,UAAUzoB,GACf,QACJ,CAEA,IAAKsB,KAAK0nB,WAAW/B,GACjB,OAAOjnB,EAGXsB,KAAKmnB,UAAUnnB,KAAKowB,gBAAgB1xB,IACpC,QACJ,CAEA,MAAMpF,EAAI0G,KAAKwvB,UACf,IAAIl2B,EAIJ,MAHI0G,KAAKmnB,UAAU7tB,EAIvB,CAEA,GAAI0G,KAAKkmB,MAAMnsB,OAAS,EAAG,CACvBiG,KAAK8c,OAAO4L,MAAM,uBAAyB1gB,KAAKC,UAAUjI,KAAKkmB,MAAO,KAAM,GAAK,WAAale,KAAKC,UAAUjI,KAAKmoB,OAAQ,KAAM,IAChI,IAAI6K,EAAW,WAAWhzB,KAAKkmB,MAAMhgB,KAAK7M,GAAM2G,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,KAAO3nB,KAAK,iBACxFoC,EAAM,WAAWjD,KAAKkmB,MAAMhgB,KAAK7M,GAAM2G,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,KAAQ3nB,KAAK,iBAExF,IAAK,MAAMxH,KAAK2G,KAAKkmB,MAAO,CACxB,MAAM+M,EAAKjzB,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,GACrC0K,EAAKlzB,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,GACvCyK,IAAOC,IACPF,GAAY,GAAGhzB,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,MAASxoB,KAAKsoB,UAAUjvB,EAAG,CAAEmvB,MAAO,IAAK,gBACxFvlB,GAAO,GAAGgwB,KAAMC,eAExB,CACA,MAAMjvB,EAAQjE,KAAKkmB,MAAM,GACnBhiB,EAAOlE,KAAKkmB,MAAMlmB,KAAKkmB,MAAMnsB,OAAS,GAE5C,MADAiG,KAAK8c,OAAO4L,MAAMsK,EAAU/uB,GACtB,cAAyBhB,EAAKgB,EAAOC,EAC/C,CACA,OAAOlE,KAAK8mB,SAAS,GACzB,CAEAiM,YACI,MAAM7sB,EAAMlG,KAAKqoB,gBACX/uB,EAAI0G,KAAKqlB,MACf,IAAK/rB,EACD,OAAO,KAEX,MAAMoH,EAAIpH,EAAE8Q,KACNgH,EAAW9X,EAAEsP,MAEnB,IAAIuqB,EAAU,KACd,GAAe,OAAX75B,EAAEqQ,KAAe,CACjB,IACIwpB,EAAUnzB,KAAKqyB,YACnB,CACA,MAAO5Q,GACH,MAAM,cAAyB,IAAInoB,EAAEsP,qCAAqC6Y,EAAIld,UAAWjL,EAC7F,CACA,GAAgB,OAAZ65B,EACA,MAAM,cAAyB,+BAAgC75B,EAEvE,CACA,IAAKoH,QAAuB,IAAXA,EAAEiJ,KACf,MAAM,cAAyB,aAAcrQ,GAGjD0G,KAAK0mB,mBAAmBzmB,KAAK,CAAEsD,KAAM6N,KAAa1Q,IAE9CA,GAAKA,EAAEwI,UACPlJ,KAAK2F,aAAc,GAGvB,MAAMkL,EAAO,GACb,IAAIuiB,EAAY,EACZC,EAAa,EACjB,IAAK,IAAI90B,EAAImC,EAAEiJ,KAAK5P,OAAS,EAAGwE,GAAK,EAAGA,IACpC,OAAa,CAET,IAAI+0B,EAAStzB,KAAK8mB,SAASpmB,EAAEiJ,KAAKpL,IAClC,GAAe,OAAX+0B,EACAD,QAEC,MAAI90B,EAAImC,EAAEiJ,KAAK5P,OAAS,IAAM2G,EAAE2c,eAKjC,MAJA+V,IACAE,EAASH,CAIb,CACA,GAAe,OAAXG,QAAsCnwB,IAAnBzC,EAAEyqB,cAAoD,OAAtBzqB,EAAEyqB,aAAa5sB,GAAa,CAC/E,GAAoB,SAAhB+0B,EAAOlzB,KAGN,CACD,MAAMkI,EAAW5H,EAAU,SAAIA,EAAEwN,SAAS3P,GAAK,GAAGA,EAAI,SACtD,MAAM,cAAyB,MAAMjF,EAAEsP,aAAaN,qBAA4BhP,EACpF,CALIg6B,EAAOlzB,KAAO,cAMtB,CAEA,GADAyQ,EAAK8Q,QAAQ2R,GACT/0B,EAAImC,EAAEiJ,KAAK5P,OAAS,IAAM2G,EAAE2c,eAC5B,KAER,CAIJ,GAAI+V,GAAa,IAAMC,EAAa,GAAgB,KAAX/5B,EAAEqQ,MAAe+b,EAAWxsB,QAAQI,EAAEqQ,OAAS,GACpF,MAAM,cAAyB,MAAMrQ,EAAEsP,qBAAsBtP,GAEjE0G,KAAKimB,UAAU9b,IAAI7Q,EAAEsP,OAErB,MAAM2qB,EAAW,CACbnzB,KAAM,OACNmD,KAAMjK,EAAEsP,MACRiI,OACAlH,KAAMrQ,EAAEqQ,QACLzD,EACH3K,IAAKyE,KAAKqoB,iBAGd,GAAsB,aAAlBkL,EAAShwB,MACT,GAAIsN,EAAK9W,OAAS,GAAK8W,EAAK,GAAI,CAC5B,IAAI5L,EAAQ,GAAK4L,EAAK,GAAGjI,MACX,QAAV3D,IACAA,EAAQ,GAAK4L,EAAK,GAAG3N,MAEzBlD,KAAKmmB,eAAelmB,KAAKD,KAAK2a,SAC9B3a,KAAK2a,QAAU2P,EAAUK,kBAAkB1lB,GAC3CjF,KAAKwa,QAAQva,KAAKD,KAAK2a,QAC3B,OAEC,GAAsB,YAAlB4Y,EAAShwB,KAAoB,CAClC,MAAM1I,EAAQmF,KAAKmmB,eAAe7X,MAC9BzT,IACAmF,KAAK2a,QAAU9f,EAEvB,CAEA,MAAe,KAAXvB,EAAEqQ,KACK4pB,EAGP7N,EAAWxsB,QAAQI,EAAEqQ,OAAS,GAC9B4pB,EAAS5pB,KAAO,KACT4pB,IAGXA,EAASnpB,KAAO1J,EAChBV,KAAKmnB,UAAUoM,GACR,KACX,CAEA7E,OACI,MAAMxoB,EAAMlG,KAAKqoB,gBAEjB,GAAIroB,KAAKynB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMtZ,EAAOnO,KAAKmoB,OAClB,IAAIqL,GAAQ,EACZ,IACI,GAAIxzB,KAAK2nB,OAAO,CAAC,OAAQ,KAAM3nB,KAAKyzB,SAAWzzB,KAAK2nB,OAAO,CAAC,OAAQ,KAAM3nB,KAAKstB,YAAa,CACxF,GAAuB,QAAnBttB,KAAKW,EAAE,GAAGP,KACV,MAAM,IAAI0C,MAAM,UAEhB9C,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET,MAAMqO,EAAY1zB,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAEzC,MAAO,CACHP,KAAM,MACNmD,KAAMmwB,EACN9qB,MAJe5I,KAAKW,EAAE,MAKnBuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAII,MAFAmL,GAAQ,EACRxzB,KAAK8c,OAAO4L,MAAM,GAAG1oB,KAAKsoB,UAAUna,EAAM,CAAEqa,MAAO,IAAK,0BAA8Bra,GAChF,cAAyB,GAAGnO,KAAKsoB,UAAUna,EAAM,CAAEqa,MAAO,IAAK,0BAA+BtiB,EAE5G,CACA,MAAOub,GACH,GAAI+R,EACA,MAAM/R,EAGV,MADAzhB,KAAK8c,OAAO4L,MAAM,GAAG1oB,KAAKsoB,UAAUna,EAAM,CAAEqa,MAAO,IAAK,+BAAkC/G,EAAIld,UAAW4J,GACnG,cAAyB,GAAGnO,KAAKsoB,UAAUna,EAAM,CAAEqa,MAAO,IAAK,+BAAmC/G,EAAIld,UAAW2B,EAC3H,CACJ,CAEA,GAAIlG,KAAKynB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAMkM,EAAK3zB,KAAK4zB,YAAY1tB,GAI5B,GAHIlG,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAELsO,EAEA,OADAA,EAAGhlB,UAAY3O,KAAKymB,mBACbkN,CAEf,CACA,GAAI3zB,KAAKynB,OAAO,CAAC,OAAQ,MAAO,CAC5B,MAAMoM,EAAK7zB,KAAK8zB,iBAAiB5tB,GAIjC,GAHIlG,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAELwO,EAEA,OADAA,EAAGllB,UAAY3O,KAAKymB,mBACboN,CAEf,CAEA,GAAI7zB,KAAK2nB,OAAO,CAAC,OAAQ,OAAQ,CAC7B,MAAMoM,EAAY/zB,KAAKW,EAAE,GACzB,IAAKX,KAAK0nB,WAAW,CAAC,KAAM,OACxB,MAAM,cAAyB,UAAYqM,EAAUnrB,MAAQ,UAAWmrB,GAE5E,MAAMvgB,EAAQxT,KAAKioB,SACb9Z,EAAOnO,KAAK2yB,UAAUoB,EAA0B,OAAfvgB,EAAMpT,MAE7C,IAAIwI,EAAQ,KAQZ,OAPI5I,KAAKunB,MAAM,QACXvnB,KAAKqlB,MACLzc,EAAQ5I,KAAKyzB,SAEbzzB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAEF,CACHjlB,KAAM,gBACNmD,KAAM4K,EACNsF,QAASD,EAAMpT,KACfwI,WACG1C,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,KAAM,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAE/C,MAAO,CACHrzB,KAAM,gBACNmD,KAHSvD,KAAK2yB,UAAU3yB,KAAKW,EAAE,IAAI,GAInC8S,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACA,GAAIroB,KAAK2nB,OAAO,CAAC,KAAM,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAE/C,MAAO,CACHrzB,KAAM,gBACNmD,KAHSvD,KAAK2yB,UAAU3yB,KAAKW,EAAE,IAAI,GAInC8S,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,KAAM3nB,KAAKg0B,WAAY,KAAMh0B,KAAKyzB,QAAS,CACxD,MAAMptB,EAAQrG,KAAKW,EAAE,GAErB,KAAI0F,GAASA,EAAMuC,iBAAiB1G,OAQhC,MAAM,cAAyB,gDAAiDlC,KAAKW,EAAE,IAPvF,IAAK,MAAMpC,KAAK8H,EAAMuC,MAClB,GAA4B,SAAxBvC,EAAMuC,MAAMrK,GAAG6B,KACf,MAAM,cAAyB,WAAW7B,EAAI,2CAA4CyB,KAAKW,EAAE,IAQ7G,OADA0F,EAAMuC,MAAQ5I,KAAKi0B,cAAc5tB,EAAMuC,OAAO,GACvC,CACHxI,KAAM,oBACNiG,MAAOA,EAAMuC,MACb6K,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,KAAM3nB,KAAKg0B,WAAY,KAAMh0B,KAAKyzB,QAAS,CACxD,MAAMptB,EAAQrG,KAAKW,EAAE,GAErB,KAAI0F,GAASA,EAAMuC,iBAAiB1G,OAQhC,MAAM,cAAyB,gDAAiDlC,KAAKW,EAAE,IAPvF,IAAK,MAAMpC,KAAK8H,EAAMuC,MAClB,GAA4B,SAAxBvC,EAAMuC,MAAMrK,GAAG6B,KACf,MAAM,cAAyB,WAAW7B,EAAI,2CAA4CyB,KAAKW,EAAE,IAQ7G,OADA0F,EAAMuC,MAAQ5I,KAAKi0B,cAAc5tB,EAAMuC,OAAO,GACvC,CACHxI,KAAM,oBACNiG,MAAOA,EAAMuC,MACb6K,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAKynB,OAAO,CAAC,OAAQ,QAAS,SAAU,CAExC,GAAIznB,KAAK2nB,OAAO,CAAC,OAAQ,QAAS,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAC1D,IAAIptB,EAAQ,CAACrG,KAAKW,EAAE,GAAIX,KAAKW,EAAE,IAE/B,OADA0F,EAAQrG,KAAKi0B,cAAc5tB,GAAO,GAC3B,CACHjG,KAAM,oBACNiG,QACAoN,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAC3E,IAAIptB,EAAQ,CAACrG,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,IAE1C,OADA0F,EAAQrG,KAAKi0B,cAAc5tB,GAAO,GAC3B,CACHjG,KAAM,oBACNiG,QACAoN,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAC5F,IAAIptB,EAAQ,CAACrG,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,IAErD,OADA0F,EAAQrG,KAAKi0B,cAAc5tB,GAAO,GAC3B,CACHjG,KAAM,oBACNiG,QACAoN,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAK2nB,OAAO,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,OAAQ,KAAM3nB,KAAKyzB,QAAS,CAC7G,IAAIptB,EAAQ,CAACrG,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,GAAIX,KAAKW,EAAE,IAEhE,OADA0F,EAAQrG,KAAKi0B,cAAc5tB,GAAO,GAC3B,CACHjG,KAAM,oBACNiG,QACAoN,QAAS,KACT7K,MAAO5I,KAAKW,EAAE,OACXuF,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACJ,CACA,OAAO,IACX,CAMA6L,gBAAgBvsB,GAEZ,OAA4B,IAAxB3H,KAAKumB,eACE5e,EAGJ,IACAA,EACH,KAAQ,KACR,SAAY,IACZ,KAAQA,EACR,MAAS,IACFA,EACH,KAAQ,SACR,MAAS3H,KAAKumB,gBAG1B,CAKA4N,kBAAkBC,GACd,OAAKA,EAGAp0B,KAAKwmB,sBAIN4N,EAAIr6B,QAAU,EACPq6B,EAEJA,EAAI/T,UANA+T,EAHA,EAUf,CAEAR,YAAY1tB,GAER,OAAIlG,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKswB,OAAQ,KAAMtwB,KAAKyzB,QAC3C,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAO,CAACxO,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KACpCiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKswB,OAAQ,IAAKtwB,KAAKswB,OAAQ,KAAMtwB,KAAKyzB,QAC7D,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC5FiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKswB,OAAQ,IAAKtwB,KAAKswB,OAAQ,IAAKtwB,KAAKswB,OAAQ,KAAMtwB,KAAKyzB,QAC/E,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC7HiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKswB,OAAQ,QAAStwB,KAAKswB,OAAQ,KAAMtwB,KAAKyzB,QACjE,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC5FiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKswB,OAAQ,QAAStwB,KAAKswB,OAAQ,QAAStwB,KAAKswB,OAAQ,KAAMtwB,KAAKyzB,QACvF,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC7HiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAGX,IACX,CAEAyL,iBAAiB5tB,GAEb,OAAIlG,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,MAAO,IAAK,KAAMzzB,KAAKyzB,QAC/C,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAO,CAACxO,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KACpCiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,MAAO,IAAK,IAAKzzB,KAAKyzB,MAAO,IAAK,KAAMzzB,KAAKyzB,QACrE,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC5FiI,MAAO5I,KAAKW,EAAE,GACdqC,IAAK,OACFkD,EACH3K,IAAKyE,KAAKqoB,iBAGdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,IAAK,KAAMzzB,KAAKyzB,QACpE,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC5FiI,MAAO5I,KAAKW,EAAE,GACdqC,IAAK,OACFkD,EACH3K,IAAKyE,KAAKqoB,iBAIdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,MAAO,IAAK,IAAKzzB,KAAKyzB,MAAO,IAAK,IAAKzzB,KAAKyzB,MAAO,IAAK,KAAMzzB,KAAKyzB,QAC3F,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC7HiI,MAAO5I,KAAKW,EAAE,OACXuF,EACH3K,IAAKyE,KAAKqoB,iBAGdroB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,IAAK,KAAMzzB,KAAKyzB,QACzF,CACHrzB,KAAM,YACNmD,KAAMvD,KAAKwyB,WAAWxyB,KAAKW,EAAE,IAC7B6N,MAAOxO,KAAKm0B,kBAAkB,CAACn0B,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAAKX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,MAC7HiI,MAAO5I,KAAKW,EAAE,MACXuF,EACH3K,IAAKyE,KAAKqoB,iBAGX,IACX,CAEAoL,QACI,MAAMvtB,EAAMlG,KAAKqoB,gBACjB,GAAIroB,KAAKunB,MAAM,OACX,OAAO,KAGX,MAAMjuB,EAAI0G,KAAKwvB,UACf,IAAKl2B,EACD,OAAO,KAGX,GAAe,KAAXA,EAAEqQ,KACF,OAAOrQ,EAGX0G,KAAKmnB,UAAU7tB,GACf,MAAMqlB,EAAK3e,KAAK6uB,QAChB,IAAKlQ,EACD,OAAO3e,KAAK8mB,WAGhB,GAAIpB,EAAWxsB,QAAQylB,EAAGhV,MAAQ,IAAM,EACpC,OAAOgV,EAGX,MAAM0D,EAAKriB,KAAKyzB,QAChB,OAAKpR,EAGE,CACHjiB,KAAM,SACNtF,KAAM6jB,EACN3jB,MAAOqnB,EACP1Y,KAAM0Y,EAAG1Y,QACNzD,EACH3K,IAAKyE,KAAKqoB,iBARH1J,CAUf,CAEA0V,cACI,IAAKr0B,KAAKunB,MAAM,KACZ,OAAO,KAEX,MAAMjuB,EAAI0G,KAAKqlB,MACf,IAAK/rB,EACD,MAAM,IAAIwJ,MAAM,sCAEpB9C,KAAK+mB,YACL,MAAM5gB,EAAInG,KAAKyzB,SAAWzzB,KAAKstB,YAC/B,GAAU,OAANnnB,EAAY,CACZ,MAAM6Y,EAAKhf,KAAKqlB,MAEhB,MADArlB,KAAK8c,OAAO4L,MAAM,eAAiB1oB,KAAKsoB,UAAUtJ,EAAI,CAAEwJ,MAAO,IAAK,GAAQ,MAAOlvB,GAC7E,cAAyB,eAAiB0G,KAAKsoB,UAAUtJ,EAAI,CAAEwJ,MAAO,IAAK,GAAS,MAAOlvB,EACrG,CACA,IAAK0G,KAAKunB,MAAM,KAEZ,MADAvnB,KAAK8c,OAAO4L,MAAM,eAAiB1oB,KAAKsoB,UAAUniB,EAAG,CAAEqiB,MAAO,IAAK,GAAQ,MAAOlvB,GAC5E,cAAyB,eAAiB0G,KAAKsoB,UAAUniB,EAAG,CAAEqiB,MAAO,IAAK,GAAS,MAAOlvB,GAEpG,MAAMg7B,EAAct0B,KAAKqlB,MAKzB,OAJArlB,KAAKgnB,YACDsN,IACAnuB,EAAEwD,KAAO2qB,EAAY3qB,MAElBxD,CACX,CAEAmqB,SACI,MAAMpqB,EAAMlG,KAAKqoB,gBAMjB,GAJIroB,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAGLrlB,KAAK0nB,WAAW,CAAC,SAAU,WAC3B,OAAO1nB,KAAKioB,SAGhB,GAAIjoB,KAAKunB,MAAM,KACX,OAAOvnB,KAAKq0B,cAGhB,GAAIr0B,KAAKynB,OAAO,CAAC,IAAK,YAAcznB,KAAKynB,OAAO,CAAC,IAAK,UAAYznB,KAAKynB,OAAO,CAAC,IAAK,SAAU,CAC1F,MAAMvJ,EAAIle,KAAKqlB,MACTlf,EAAInG,KAAKswB,SACT3mB,EAAQxD,GAAKA,EAAEwD,KAAQxD,EAAEwD,KAAO,GAEtC,MAAO,CACHvJ,KAAM,KACNiT,SAAU,IACVvY,KAAM,CAAEsF,KAAM,SAAUwI,OAAQ,EAAGxF,KAJzB8a,GAAKA,EAAE9a,KAAQ8a,EAAE9a,KAAO,GAKlCpI,MAAOmL,GAAK,GACZwD,UACGzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAKunB,MAAM,OAAQ,CACnBvnB,KAAKqlB,MACL,MAAMlf,EAAInG,KAAKswB,SAEf,MAAO,CACHlwB,KAAM,MACNwI,MAAOzC,EACPwD,KAJUxD,GAAKA,EAAEwD,KAAQxD,EAAEwD,KAAO,MAK/BzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,MAAM9nB,EAAIP,KAAKg0B,aACf,GAAIzzB,EACA,OAAOA,EAEX,MAAMhH,EAAIyG,KAAKu0B,cACf,GAAIh7B,EACA,OAAOA,EAGX,MAAMi7B,EAAY7O,EAAajsB,OAAO,CAAC,MAAO,IAAK,IAAK,MAAO,IAAK,IAAK,KAAM,SAC/E,GAAIsG,KAAKynB,OAAO,CAAC,OAAQ+M,IAAa,CAClC,MAAMC,EAAKz0B,KAAKqlB,MAChB,IAAKoP,EACD,MAAM,IAAI3xB,MAAM,iCAEpB,MAAMpC,EAAIV,KAAK00B,cAAcD,GAC7Bz0B,KAAKimB,UAAU9b,IAAIzJ,EAAEkI,OAErB,MAAMwB,EAAO1J,EAAE0J,KACTyG,EAAO,GACb,IAAKzG,EACD,MAAM,cAAyB,QAAQ1J,EAAE6C,gBAAiBkxB,GAE9D,GAAIrqB,EAAKT,MAA6B,IAArBS,EAAKT,KAAK5P,OACvB8W,EAAK5Q,KAAK,CAAEG,KAAM,OAAQwI,MAAO,YAEhC,GAAIwB,EAAKT,MAAQS,EAAKT,KAAK5P,QAAU,EACtC,MAAM,cAAyB,MAAM2G,EAAE6C,sBAAsB6G,EAAKT,KAAK5P,uBAAwB06B,GAEnG,MAAO,CACHr0B,KAAM,OACNmD,KAAM7C,EAAEkI,MACRiI,OACAlH,KAAMjJ,EAAEiJ,QACLzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CAEA,GAAIroB,KAAKynB,OAAO,CAAC,CAAC,OAAQ,QAAS,OAAiC,KAAxBznB,KAAKooB,UAAUze,KAAa,CACpE,MAAMjJ,EAAIV,KAAKmoB,OACf,GAAInoB,KAAK2nB,OAAO,CAAC,CAAC,OAAQ,QAAS,IAAK3nB,KAAK+wB,aAAc,MAAO,CAC9D,MAAMhc,EAAK/U,KAAK00B,cAAc10B,KAAKW,EAAE,IAC/BkQ,EAAO7Q,KAAKW,EAAE,GACdyQ,EAAW2D,EAAGnM,MACpB5I,KAAKimB,UAAU9b,IAAIiH,GAEnB,MAAMhH,EAAO2K,EAAG3K,KAChB,GAAIA,GAAQA,EAAKT,KAEb,GAAIS,EAAKT,KAAK5P,SAAW8W,EAAK9W,aAGzB,IAAIqQ,EAAKiT,eAIV,MAAM,cAAyB,MAAMtI,EAAGnM,YAAYiI,EAAK9W,oBAAoBqQ,EAAKT,KAAK5P,uBAAwBgb,GAGvH,MAAO,CACH3U,KAAM,OACNmD,KAAM6N,EACNP,OACAlH,KAAM3J,KAAKW,EAAE,GAAGgJ,QACbzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,CACA,MAAM,cAAyB,eAAgB3nB,GAAKklB,IACxD,CAEA,GAAI5lB,KAAKynB,OAAO,CAAC,OAAQ,MACrB,MAAM,IAAI3kB,MAAM,sBAGpB,GAAI9C,KAAKunB,MAAM,YACX,OAAOvnB,KAAKqyB,aAGhB,MAAMlkB,EAAOnO,KAAK20B,aAClB,OAAIxmB,GAIG,IACX,CACAymB,mBAAmB9qB,GAKf,GAJKA,EAAI0E,QACL1E,EAAI0E,MAAQ,IAGZxO,KAAKunB,MAAM,KAAM,CACjB,GAAIvnB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKswB,OAAQ,QAAStwB,KAAKswB,OAAQ,QAAStwB,KAAKswB,SAMnE,OALAxmB,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAI0E,MAAQxO,KAAKm0B,kBAAkBrqB,EAAI0E,OACvC1E,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,EAEX,GAAI3J,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKswB,OAAQ,QAAStwB,KAAKswB,SAK7C,OAJAxmB,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAI0E,MAAQxO,KAAKm0B,kBAAkBrqB,EAAI0E,OACvC1E,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,EAEX,GAAI3J,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKswB,SAGvB,OAFAxmB,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,EAEX,MAAM,cAAyB,uBAAwBG,EAC3D,CACA,GAAI9J,KAAKunB,MAAM,MACPvnB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKyzB,MAAO,MAG9B,OAFA3pB,EAAI0E,MAAMvO,KAAKD,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAC3CmJ,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,EAGf,GAAI3J,KAAKunB,MAAM,MACPvnB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,MAAO,CAC1D,MAAMjlB,EAAQ,CACVxO,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAC5BX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAIhC,OAFAmJ,EAAI0E,MAAQxO,KAAKm0B,kBAAkB3lB,GACnC1E,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,CACX,CAEJ,GAAI3J,KAAKunB,MAAM,MACPvnB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,QAASzzB,KAAKyzB,MAAO,MAAO,CAC/E,MAAMjlB,EAAQ,CACVxO,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAC5BX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,IAC5BX,KAAKk0B,gBAAgBl0B,KAAKW,EAAE,KAIhC,OAFAmJ,EAAI0E,MAAQxO,KAAKm0B,kBAAkB3lB,GACnC1E,EAAIH,KAAO3J,KAAKW,EAAE,GAAGgJ,MACd,CACX,CAEJ,OAAO,CACX,CAEAgrB,aACI,MAAMzuB,EAAMlG,KAAKqoB,gBACjB,GAAIroB,KAAKunB,MAAM,QAAS,CACpB,MAAMjuB,EAAI0G,KAAKioB,SACT9Z,EAAOnO,KAAK00B,cAAcp7B,GAEhC,GAAkB,KAAd6U,EAAKxE,MAAe3J,KAAK0nB,WAAW,CAAC,IAAK,MAAO,CACjD,MAAM5d,EAAM,CACR1J,KAAM,OACNmD,KAAM4K,EACNK,MAAO,GACP7E,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,iBAEd,MAAQroB,KAAKqnB,SACJrnB,KAAK40B,mBAAmB9qB,KAIjC,GAAIA,EAAI0E,OAA8B,IAArB1E,EAAI0E,MAAMzU,OACvB,MAAM,cAAyB,MAAMoU,EAAKvF,kBAAmBuF,GAEjE,OAAOrE,CACX,CACA,OAAOqE,CACX,CACA,OAAO,IACX,CAEAwkB,UAAUxkB,EAAM0mB,GACZ,IAAIja,EAAQzM,EAAKvF,MACjB,MAAM6f,EAAWoM,EAAU,QAAU,MACrC,OAAuB,IAAnB70B,KAAKqmB,WAEDzL,EAAM1hB,QAAQ,MAAQ,IACtB0hB,EAAQ5a,KAAK2a,QAAU,KAAOC,GAElC5a,KAAKomB,SAASxL,GAAS,CAAExa,KAAMqoB,EAAU7f,MAAO,IAChDuF,EAAKvF,MAAQgS,EACNzM,IAIPnO,KAAKsmB,UAAU1L,GAAS,CAAExa,KAAMqoB,EAAU7f,MAAO,IAC1CuF,EAEf,CAKAqkB,WAAWrkB,GAEP,MAAMzN,EAAIV,KAAK0M,QAAQyB,EAAKvF,OAC5B,OAAIlI,GACIA,GAAiB,WAAZA,EAAEpC,QACP6P,EAAKvF,MAAQlI,EAAE6C,MAEZ4K,IAGXnO,KAAK2yB,UAAUxkB,GAAM,GACdA,EACX,CAEAumB,cAAcvmB,GAEV,MAAMzN,EAAIV,KAAK0M,QAAQyB,EAAKvF,OAS5B,OARKlI,EAKIA,GAAiB,WAAZA,EAAEpC,QACZ6P,EAAKvF,MAAQlI,EAAE6C,MALQ,IAAnBvD,KAAKqmB,WAAmBlY,EAAKvF,MAAM1P,QAAQ,MAAQ,IACnDiV,EAAKvF,MAAQ5I,KAAK2a,QAAU,KAAOxM,EAAKvF,OAMzCuF,CACX,CAEA8lB,cAAczG,EAAOqH,GACjB,IAAK,IAAIt2B,EAAI,EAAGA,EAAIivB,EAAMzzB,OAAQwE,IAC9BivB,EAAMjvB,GAAKyB,KAAK2yB,UAAUnF,EAAMjvB,GAAIs2B,GAExC,OAAOrH,CACX,CACAsH,mBACI,MAAMv0B,EAAI,GACJw0B,EAAa/0B,KAAKmoB,OACxB,IAAK4M,EACD,OAAO,KAEX,MAAQ/0B,KAAKqnB,SAAS,CAClB,KAAOrnB,KAAKunB,MAAM,QACdvnB,KAAKqlB,MAET,GAAIrlB,KAAKunB,MAAM,KACX,MAEJ,GAAIvnB,KAAK2nB,OAAO,CAAC,OAAQ,IAAK3nB,KAAKyzB,QAC/BzzB,KAAKW,EAAE,GAAGP,KAAO,SACjBG,EAAEN,KAAK,CACHtB,IAAKqB,KAAKW,EAAE,GACZiI,MAAO5I,KAAKW,EAAE,UAGjB,GAAIX,KAAK2nB,OAAO,CAAC,SAAU,IAAK3nB,KAAKyzB,QACtClzB,EAAEN,KAAK,CACHtB,IAAKqB,KAAKW,EAAE,GACZiI,MAAO5I,KAAKW,EAAE,UAGjB,GAAIX,KAAKunB,MAAM,QAAS,CACzB,MAAM7D,EAAI1jB,KAAKioB,SACfvE,EAAEtjB,KAAO,SACTG,EAAEN,KAAK,CACHtB,IAAK+kB,EACL9a,MAAO8a,GAEf,KACK,KAAI1jB,KAAK0nB,WAAW,CAAC,SAAU,WAQhC,MAAM,cAAyB,4BAA6BqN,GARhB,CAC5C,MAAMrR,EAAI1jB,KAAKioB,SACf1nB,EAAEN,KAAK,CACHtB,IAAK+kB,EACL9a,MAAO8a,GAEf,CAGA,CACI1jB,KAAKunB,MAAM,UACXvnB,KAAKqlB,KAEb,CACA,OAAO9kB,CACX,CAEAg0B,cACI,MAAMruB,EAAMlG,KAAKqoB,gBACjB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK,MAClB,MAAO,CACHvnB,KAAM,WACNwI,MAAO,GACPe,KAAM3J,KAAKW,EAAE,GAAGgJ,QACbzD,EACH3K,IAAKyE,KAAKqoB,iBAGlB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAK80B,iBAAkB,MACzC,MAAO,CACH10B,KAAM,WACNwI,MAAO5I,KAAKW,EAAE,GACdgJ,KAAM3J,KAAKW,EAAE,GAAGgJ,QACbzD,EACH3K,IAAKyE,KAAKqoB,iBAIlB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAK80B,mBACvB,MAAM,cAAyB,2BAA4B90B,KAAKW,EAAE,IAEtE,OAAO,IACX,CACAq0B,kBACQh1B,KAAKunB,MAAM,QACXvnB,KAAKqlB,MAET,MAAM4P,EAAKj1B,KAAKyzB,QAChB,GAAW,OAAPwB,EACA,OAAO,KAEPj1B,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET,MAAM9kB,EAAI,CAAC00B,GACX,MAAQj1B,KAAKqnB,UACLrnB,KAAKunB,MAAM,QACXvnB,KAAKqlB,OAELrlB,KAAKunB,MAAM,OAJG,CAOlB,MAAMvI,EAAKhf,KAAKyzB,QAChB,GAAW,OAAPzU,EACA,MAEAhf,KAAKunB,MAAM,UACXvnB,KAAKqlB,MAET9kB,EAAEN,KAAK+e,EACX,CACA,OAAOze,CACX,CAEAyzB,aACI,MAAM9tB,EAAMlG,KAAKqoB,gBACjB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK,MAClB,MAAO,CACHvnB,KAAM,aACNwI,MAAO,GACPe,KAAM3J,KAAKW,EAAE,GAAGgJ,QACbzD,EACH3K,IAAKyE,KAAKqoB,iBAGlB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKg1B,gBAAiB,MACxC,MAAO,CACH50B,KAAM,aACNwI,MAAO5I,KAAKW,EAAE,GACdgJ,KAAM3J,KAAKW,EAAE,GAAGgJ,QACbzD,EACH3K,IAAKyE,KAAKqoB,iBAIlB,GAAIroB,KAAK2nB,OAAO,CAAC,IAAK3nB,KAAKg1B,kBACvB,MAAM,cAAyB,0BAA2Bh1B,KAAKW,EAAE,IAErE,OAAO,IACX,CAEAutB,aACI,MAAMhoB,EAAMlG,KAAKqoB,gBACjB,IAAKroB,KAAKunB,MAAM,SACZ,OAAO,KAEX,MAAM2N,EAAQl1B,KAAKioB,SACbhe,EAAQjK,KAAKgvB,SACnB,IAAKhvB,KAAKynB,OAAO,CAAC,MAAO,QACrB,MAAM,cAAyB,sDACOyN,GAE1Cl1B,KAAKqlB,MACLrlB,KAAKqlB,MACL,MAAMzR,EAAW5T,KAAKgvB,SACtB,IAAIhvB,KAAKunB,MAAM,QAIX,MAAM,cAAyB,sDAAuDrhB,GAE1F,OALIlG,KAAKqlB,MAKF,CACHjlB,KAAM,aACN6J,QACA2J,SAAUA,GAAY,GACtBjK,KAAM,MACHzD,EACH3K,IAAKyE,KAAKqoB,gBAElB,ECz4EJ,MAAM8M,EACFpyB,YAAYiL,EAAMoB,EAAIZ,GAClBxO,KAAKgO,KAAOA,EACZhO,KAAKoP,GAAKA,EACVpP,KAAKwO,MAAQA,CACjB,EAEJ,MAAM4mB,EACFryB,YAAYkP,EAAMojB,GACdr1B,KAAKiS,KAAOA,EACZjS,KAAKq1B,eAAiBA,CAC1B,EAKG,MAAMC,EACTvyB,YAAYhF,GACRiC,KAAKu1B,QAAU,GACfv1B,KAAKjC,KAAOA,CAChB,CACAy3B,UACI,OAAOx1B,KAAKjC,IAChB,CACA03B,WAAWznB,EAAMoB,GACb,OAAa,CACT,MAAMZ,EAAQxO,KAAKw1B,UAAUt8B,QAAQ8U,GACrC,IAAe,IAAXQ,EACA,MAEAR,EAAKjU,SAAWqV,EAAGrV,QACnBiG,KAAKu1B,QAAQ5T,QAAQ,IAAIwT,EAAennB,EAAKjU,OAAQqV,EAAGrV,OAAQyU,IAEpExO,KAAKjC,KAAOiC,KAAKjC,KAAK9D,QAAQ+T,EAAMoB,EACxC,CACJ,CACAsmB,kBAAkBn3B,GAEd,IAAK,MAAM6oB,KAAQpnB,KAAKu1B,QAChBh3B,GAAK6oB,EAAK5Y,MAAQ4Y,EAAKhY,GACvB7Q,GAAK6oB,EAAKpZ,KAAOoZ,EAAKhY,GAEjBgY,EAAK5Y,OAASjQ,GAAKA,EAAI6oB,EAAK5Y,MAAQ4Y,EAAKhY,KAG1C7Q,EADA6oB,EAAKhY,IAAM,GAAK7Q,IAAM6oB,EAAK5Y,MAAQ4Y,EAAKhY,GAAK,EACzCgY,EAAK5Y,MAAQ4Y,EAAKpZ,KAAO,EAGzBoZ,EAAK5Y,OAIrB,OAAOjQ,CACX,EAQG,MAAMo3B,EACT5yB,cAEI/C,KAAK41B,aAAe,IAAIC,IAAI,CAIxjB,CAEA7xB,qBAII,OAHK2xB,EAAYG,YACbH,EAAYG,UAAY,IAAIH,GAEzBA,EAAYG,SACvB,CAKAC,WAAW/M,GACP,IAAKA,EACD,MAAO,GAEX,MAAMxoB,EAAIwoB,EAAG7J,YAAY,IAAM,EAEzBQ,EAAK3f,KAAK41B,aAAavQ,IAAI7kB,IAAM,GACvC,GAAImf,EACA,OAAOA,EAGX,GAAInf,EAAI,IACJ,OAAOwoB,EAGX,GAAIxoB,GAAK,OAAUA,GAAK,MAAQ,CAC5B,MAAMmf,EAAKnf,EAAI,MACf,OAAOgN,OAAOyR,cAAcU,EAChC,CACA,OAAOqJ,CACX,CAEAgN,QAAQj4B,GACJ,IAAKA,EACD,MAAO,GAEX,MAAM8f,EAAM,IAAIyX,EAAQv3B,GAExB8f,EAAI4X,WAAW,OAAQ,MACvB5X,EAAI4X,WAAW,KAAM,MACrB,IAAIQ,GAAU,EACVC,GAAW,EACXC,EAAW,GACf,MAAMnpB,EAAM,GACZ,IAAIlS,EAAO,EACPiX,EAAM,GAENxT,EAAI,EACR,KAAOA,EAAIsf,EAAI2X,UAAUz7B,QAAQ,CAC7B,MAAMyG,EAAIqd,EAAI2X,UAAU3V,OAAOthB,GACzB63B,EAAMvY,EAAI2X,UAAUvL,OAAO1rB,EAAG,GAEpC,GAAI03B,EAAS,CACT,GAAIz1B,IAAM21B,EAAU,CAChBF,GAAU,EACVjpB,EAAI/M,KAAK,IAAIm1B,EAAcrjB,EAAMokB,EAAUtY,EAAI6X,kBAAkB56B,KACjEyD,IACAzD,EAAOyD,EACP,QACJ,CACAwT,GAAOvR,EACPjC,IACA,QACJ,CAEA,GAAI23B,EAAU,CACV,GAAIE,IAAQD,EAAU,CAClBD,GAAW,EACM,OAAbC,IACAA,EAAW,MAEfnpB,EAAI/M,KAAK,IAAIm1B,EAAcrjB,EAAMokB,EAAUtY,EAAI6X,kBAAkB56B,KACjEyD,GAAK,EACLzD,EAAOyD,EACP,QACJ,CACAwT,GAAOvR,EACPjC,IACA,QACJ,CAEA,GAAU,MAANiC,EAAW,CACXwM,EAAI/M,KAAK,IAAIm1B,EAAc50B,EAAGqd,EAAI6X,kBAAkB56B,KACpDyD,IACAzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW,IACXpkB,EAAM,GACN,QACJ,CACA,GAAU,MAANvR,EAAW,CACXwM,EAAI/M,KAAK,IAAIm1B,EAAc50B,EAAGqd,EAAI6X,kBAAkB56B,KACpDyD,IACAzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW,IACXpkB,EAAM,GACN,QACJ,CACA,GAAU,MAANvR,EAAW,CACXwM,EAAI/M,KAAK,IAAIm1B,EAAc50B,EAAGqd,EAAI6X,kBAAkB56B,KACpDyD,IACAzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW,IACXpkB,EAAM,GACN,QACJ,CAEA,GAAY,OAARqkB,GAAwB,OAARA,EAAc,CAC9BppB,EAAI/M,KAAK,IAAIm1B,EAAcgB,EAAKvY,EAAI6X,kBAAkB56B,KACtDyD,GAAK,EACLzD,EAAOyD,EACP23B,GAAW,EACXC,EAAWC,EACXrkB,EAAM,GACN,QACJ,CACA,MAAM+c,EAAK9uB,KAAK+1B,WAAWv1B,GAChB,MAAPsuB,GAAqB,MAAPA,EAUP,MAAPA,EAUQ,OAARsH,GAAwB,OAARA,EAUR,OAARA,EAUQ,OAARA,GAUJppB,EAAI/M,KAAK,IAAIm1B,EAActG,EAAIjR,EAAI6X,kBAAkB56B,KACrDyD,IACAzD,EAAOyD,IAXHyO,EAAI/M,KAAK,IAAIm1B,EAAcgB,EAAKvY,EAAI6X,kBAAkB56B,KACtDyD,GAAK,EACLzD,EAAOyD,EACP23B,GAAW,EACXC,EAAW,KACXpkB,EAAM,KAfN/E,EAAI/M,KAAK,IAAIm1B,EAAc,KAAMvX,EAAI6X,kBAAkB56B,KACvDyD,GAAK,EACLzD,EAAOyD,EACP23B,GAAW,EACXC,EAAW,KACXpkB,EAAM,KAfN/E,EAAI/M,KAAK,IAAIm1B,EAAc,KAAMvX,EAAI6X,kBAAkB56B,KACvDyD,GAAK,EACLzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW,KACXpkB,EAAM,KAfN/E,EAAI/M,KAAK,IAAIm1B,EAActG,EAAIjR,EAAI6X,kBAAkB56B,KACrDyD,IACAzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW,KACXpkB,EAAM,KAfN/E,EAAI/M,KAAK,IAAIm1B,EAActG,EAAIjR,EAAI6X,kBAAkB56B,KACrDyD,IACAzD,EAAOyD,EACP03B,GAAU,EACVE,EAAW31B,EACXuR,EAAM,GA+Cd,CAIA,OAHIkkB,GAAWC,IACXlpB,EAAI/M,KAAK,IAAIm1B,EAAcrjB,EAAMokB,EAAUtY,EAAI6X,kBAAkB56B,KAE9DkS,CACX,EAGG,SAASqpB,EAAct4B,EAAMu4B,GAQhC,MAAMC,GAFNx4B,GAFAA,GAFAA,EAAOA,EAAKwd,UAAU,EAAG,MAEbthB,QAAQ,SAAU,MAElBA,QAAQ,eAAgB,KAEjBC,MAAM,SAAU,IACnC,IAAK,IAAIkJ,KAAQmzB,EAEb,GADAnzB,EAAOA,EAAKnJ,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAC5Cq8B,EAAUp9B,QAAQkK,IAAS,EAC3B,OAAO,EAGf,OAAO,CACX,6DCnTO,SAASozB,EAAYxQ,GACxB,MAAMzb,EAAS,GACf,IAAK,IAAIhM,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAAK,CACpC,MAAMjF,EAAI0sB,EAAOznB,GACXk4B,EAAQn9B,EAAE8G,KACVs2B,EAASp9B,EAAEsP,MACjB,IAAIvK,EAAI,IAAIo4B,KAASC,KACjBD,IAAUC,IACVr4B,EAAIo4B,GAEM,UAAVA,IACAp4B,EAAI,KAEM,WAAVo4B,IACAp4B,EAAI,IAAIq4B,MAEE,WAAVD,IACAp4B,EAAI,IAAIq4B,MAEE,SAAVD,IACAp4B,EAAI,SAASq4B,MAEZnsB,EAAOjR,EAAE8J,QACVmH,EAAOjR,EAAE8J,MAAQuzB,EAAWr9B,EAAE0Y,SAElCzH,EAAOjR,EAAE8J,OAAS/E,EAAI/E,EAAEqQ,KAAO,GACnC,CACA,OAAOY,EAAO1J,KAAK,KACvB,CACO,SAAS81B,EAAWt9B,GACvB,IAAIgF,EAAI,GACR,IAAK,IAAIE,EAAI,EAAGA,EAAIlF,EAAGkF,IACnBF,GAAK,IAET,OAAOA,CACX,CACA,IAAIu4B,EAAgBhR,IACb,SAASiR,EAASz2B,EAAMwI,EAAOkuB,EAAgB3zB,WAC9C2zB,IACAF,EAAgBE,GAGpB,OADUlR,EAAcxlB,EAAMwI,EAAOguB,EAAc5kB,OAAQ4kB,EAAcxzB,KAAMwzB,EAAc1zB,KAEjG,CChDA,MAAM6zB,GAAW,EACjB,SAASC,EAAW19B,GAChB,MAAe,QAAXA,EAAE8G,MAGS,SAAX9G,EAAE8G,MAA+B,QAAZ9G,EAAEsP,OAA8B,QAAXtP,EAAEqQ,IAIpD,CA2GO,SAASstB,EAAeV,GAC3B,MAAM73B,EAAI,GACV,IAAK,MAAM0E,KAAQmzB,EACf,IAAK,MAAMj9B,KAAK8J,EACZ1E,EAAEuB,KAAK3G,GAGf,OAAOoF,CACX,CACA,SAASw4B,EAAuB9zB,GAC5B,MAAM+zB,EAAM/zB,EAAKrJ,OACjB,GAAY,IAARo9B,EACA,OAAOvR,EAAc,KAEzB,IAAI5Y,EAAM5J,EAAK+zB,EAAM,GAMrB,MALiB,QAAbnqB,EAAI5M,MACA+2B,GAAO,IACPnqB,EAAM5J,EAAK+zB,EAAM,IAGlBnqB,CACX,CACO,SAASoqB,EAAYpR,EAAQqR,GAChC,MAAM9sB,EAAS,GACf,IAAInH,EAAO,GACPk0B,EAAQ,EACZ,IAAK,MAAMh+B,KAAK0sB,EACZ5iB,EAAKnD,KAAK3G,GACK,MAAXA,EAAE8G,KACFk3B,IAEgB,MAAXh+B,EAAE8G,KACPk3B,IAEe,IAAVA,GAAeh+B,EAAE8G,OAASi3B,IAC/B9sB,EAAOtK,KAAKmD,GACZA,EAAO,IAMf,OAHIA,EAAKrJ,OAAS,GACdwQ,EAAOtK,KAAKmD,GAETmH,CACX,CAEA,SAASgtB,EAAYn0B,GACjB,GAAoB,IAAhBA,EAAKrJ,OACL,OAAO,EAEX,IAAK,IAAI+lB,EAAI,EAAGA,EAAI1c,EAAKrJ,OAAQ+lB,IAAK,CAClC,MAAM0X,EAAKp0B,EAAK0c,GAAG1f,KACnB,GAAW,QAAPo3B,GAAuB,iBAAPA,GAAgC,kBAAPA,EAG7C,OAAO,CACX,CACA,OAAO,CACX,CAEA,SAASC,EAAcr0B,GACnB,IAAK,IAAI7E,EAAI,EAAGA,EAAI6E,EAAKrJ,OAAQwE,IAAK,CAClC,MAAMjF,EAAI8J,EAAK7E,GAAG6B,KAClB,GAAU,QAAN9G,GAAqB,iBAANA,GAA8B,kBAANA,EAG3C,OAAO8J,EAAK7E,EAChB,CACA,OAAO6E,EAAK,EAChB,CAEA,MAAMs0B,EAAuB,CAAC,WAAY,WAAY,YAAa,aAE5D,SAASC,EAAoB3R,GAEhC,IAgHJ,SAAwBA,GAEpB,IAAK,IAAIznB,EAAI,EAAGA,EAAIynB,EAAOjsB,UACnBwE,EAAI,KADuBA,IAAK,CAIpC,MAAMjF,EAAI0sB,EAAOznB,GACjB,GAAe,iBAAXjF,EAAE8G,MAA4Bs3B,EAAqBx+B,QAAQI,EAAEsP,QAAU,EACvE,OAAO,CAEf,CACA,OAAO,CACX,CA5HSgvB,CAAe5R,GAChB,OAAOA,EAGX,IAAK,MAAM1sB,KAAK0sB,EACZ,GAAe,SAAX1sB,EAAE8G,KAEF,MAAM,IAAI,KAAgB,wCAAyC9G,EAAE8J,KAAM9J,EAAE4J,MAIrF,IAAI20B,EAAe,EACfC,EAAiB,EACrB,MAAMC,EAAmB30B,IAErBA,EAAKxE,SAAStF,IACK,MAAXA,EAAE8G,MACFy3B,IAEW,MAAXv+B,EAAE8G,MACFy3B,IAEW,MAAXv+B,EAAE8G,MACF03B,IAEW,MAAXx+B,EAAE8G,MACF03B,GACJ,GACF,EAGAE,EAAe,GACfzB,EAAQa,EAAYpR,EAAQ,OAClC,IAAIiS,EAAQ,EAEZ,IAAK,IAAI15B,EAAI,EAAGA,EAAIg4B,EAAMx8B,OAAQwE,IAAK,CACnC,MAAM6E,EAAOmzB,EAAMh4B,GAEnB,GAAIg5B,EAAYn0B,GACZ,SAGJ,GAAI00B,EAAiB,GAAKD,EAAe,EAAG,CACxCE,EAAgB30B,GAChB,QACJ,CACA,MAAM80B,EAAYT,EAAcr0B,GAC1B+0B,EAAOD,EAAUlmB,OACvB,GAAImmB,IAASF,EAAb,CAWA,GAAIA,GAAS,EACT,KAAOA,EAAQE,GAAM,CACjB,MAAMC,EAAqBJ,EAAaA,EAAaj+B,OAAS,GAAG,GAEjE,GAAIi9B,EAAWkB,IAAcE,IAAuBD,OAG/C,CACD,MAAM7+B,EAAIi9B,EAAMh4B,EAAI,GAAG,GACvBg4B,EAAMh4B,EAAI,GAAG0B,KAAK42B,EAAS,OAAQ,OAAQv9B,IAC3Ci9B,EAAMh4B,EAAI,GAAG0B,KAAK42B,EAAS,MAAO,KAAMv9B,GAC5C,CAEA,GADA0+B,EAAa1pB,QACT0pB,EAAaj+B,OAAS,GAGrB,CACDk+B,EAAQ,EACR,KACJ,CALIA,EAAQD,EAAaA,EAAaj+B,OAAS,GAAG,EAMtD,CAEA+9B,EAAiB,GAAKD,EAAe,IAIzCE,EAAgB30B,GAEZ+0B,EAAOF,IACPD,EAAa/3B,KAAK,CAACk4B,EAAMF,IAEzBA,EAAQE,GAxCZ,CA2CJ,CAEA,IAAK,IAAI55B,EAAI,EAAGA,EAAIy5B,EAAaj+B,OAAQwE,IAAK,CAE1C,IAAIjF,EAAI0sB,EAAO,GACf,IAAK,IAAIznB,EAAIg4B,EAAMx8B,OAAS,EAAGwE,GAAK,EAAGA,IAAK,CACxC,MAAM6E,EAAOmzB,EAAMh4B,GACnB,GAAI6E,EAAKrJ,OAAS,EAAG,CACjBT,EAAI8J,EAAKA,EAAKrJ,OAAS,GACvB,KACJ,CACJ,CACAw8B,EAAMA,EAAMx8B,OAAS,GAAGkG,KAAK42B,EAAS,OAAQ,OAAQv9B,IACtDi9B,EAAMA,EAAMx8B,OAAS,GAAGkG,KAAK42B,EAAS,MAAO,KAAMv9B,GACvD,CAGA,OAFe29B,EAAeV,EAGlC,CC1SA,MAAM8B,EAAgB,CAAC,WAAY,aAE7BC,EAAe,CACjB,MAAO,CAAC,KAAM,KACd,MAAO,CAAC,KAAM,MACd,MAAO,CAAC,IAAK,KACb,MAAO,CAAC,IAAK,KACb,WAAY,CAAC,OAAQ,QACrB,UAAW,CAAC,OAAQ,QACpB,UAAW,CAAC,OAAQ,SAKjB,SAASC,EAAYvS,GACxB,IAsPJ,SAAqBA,GAEjB,IAAK,IAAIznB,EAAI,EAAGA,EAAIynB,EAAOjsB,UACnBwE,EAAI,KADuBA,IAAK,CAIpC,MAAMjF,EAAI0sB,EAAOznB,GACjB,GAAe,iBAAXjF,EAAE8G,MAA2Bi4B,EAAcn/B,QAAQI,EAAEsP,QAAU,EAE/D,OADAtP,EAAE8G,KAAO,WACF,CAEf,CACA,OAAO,CACX,CAnQSo4B,CAAYxS,GACb,OAAOA,EAGX,MAAMuQ,EAAQa,EAAYpR,EAAQ,OAClC,IAAK,IAAIznB,EAAI,EAAGA,EAAIg4B,EAAMx8B,OAAQwE,IAAK,CACnC,MAAM6E,EAAOmzB,EAAMh4B,GACnB,GAAI6E,EAAKrJ,QAAU,EACf,SAGJ,IAAK,IAAI+lB,EAAI,EAAGA,EAAI1c,EAAKrJ,QACA,MAAjBqJ,EAAK0c,GAAG1f,KADiB0f,IAEzB1c,EAAK0c,GAAG1f,KAAO,gBAMvB,MAAM9G,EAAI8J,EAAK,GACA,SAAX9J,EAAE8G,MAA+B,OAAZ9G,EAAEsP,OACvBxF,EAAKhJ,OAAO,EAAGgJ,EAAKrJ,OAAQ6rB,EAAc,OAAQ,MAAOtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MAAO0iB,EAAc,OAAQ,KAAMtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,OAGxI,MAAMu1B,EAAKC,EAAWt1B,EAAM,CAAC,UAAW,YACpCq1B,EAAK,GACLE,EAAiBv1B,EAAMq1B,GAE3B,MAAMG,EAAMF,EAAWt1B,EAAM,CAAC,UAAW,YACrCw1B,EAAM,GACND,EAAiBv1B,EAAMw1B,GAG3B,MAAMC,EAAMH,EAAWt1B,EAAM,CAAC,YAC9B,GAAIy1B,GAAO,EAAG,CAEM,QADLz1B,EAAKy1B,GACTlvB,OACHvG,EAAKy1B,EAAM,GAAGlvB,KAAO,QACrBvG,EAAKhJ,OAAOy+B,EAAK,GAEzB,CAEA,OAAS,CACL,MAAMC,EAAKJ,EAAWt1B,EAAM,CAAC,UAAW,YACxC,GAAI01B,EAAK,EACL,MAEJ11B,EAAK01B,GAAIlwB,MAAQ,OACjBxF,EAAK01B,GAAInvB,KAAO,GAChBvG,EAAKhJ,OAAO0+B,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWt1B,EAAM,CAAC,UAAW,YACxC,GAAI01B,EAAK,EACL,MAMJ,MAAMx/B,EAAI8J,EAAK01B,GACfx/B,EAAEsP,MAAQ,UACVtP,EAAEqQ,KAAO,GACTvG,EAAKhJ,OAAO0+B,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWt1B,EAAM,CAAC,WAAY,UAAW,YACpD,GAAI01B,EAAK,EACL,MAEJ,MAAMC,EAAM31B,EAAK01B,EAAK,GACtB,GAAiB,UAAbC,EAAIpvB,KAAR,CAOK,GAAiB,MAAbovB,EAAIpvB,KAAc,CACvB,MAAMqvB,EAAW51B,EAAK01B,EAAK,GAC3B,GAAuC,SAAnCE,EAASpwB,MAAM2S,UAAU,EAAG,GAAe,CAK3C,GAJAwd,EAAI34B,KAAO,MACX24B,EAAInwB,MAAQ,MACZmwB,EAAIpvB,KAAO,GACXvG,EAAKhJ,OAAO0+B,EAAI,EAAGC,GACfC,EAASpwB,MAAM7O,OAAS,EAAG,CAC3B,MAAMk/B,EAAoBD,EAASpwB,MAAM2S,UAAU,GAC7C2d,EAAgBtT,EAAc,OAAQqT,EAAmBD,EAAShnB,OAAQgnB,EAAS51B,KAAM41B,EAAS91B,MACpG+1B,EAAkB1c,MAAM,SACxB2c,EAAc94B,KAAO,UAEzBgD,EAAKhJ,OAAO0+B,EAAK,EAAG,EAAGI,GACvBF,EAASpwB,MAAQowB,EAASpwB,MAAM2S,UAAU,EAAG,EACjD,CACAyd,EAAS54B,KAAO,KAChB44B,EAASpwB,MAAQ,KACjBowB,EAASrvB,KAAO,GAChB,QACJ,CACJ,CACA,KADA,CA3BIovB,EAAI34B,KAAO,MACX24B,EAAInwB,MAAQ,MACZmwB,EAAIpvB,KAAO,GACXvG,EAAKhJ,OAAO0+B,EAAI,EAAGC,EA0B3B,CAEA,OAAS,CACL,MAAMD,EAAKJ,EAAWt1B,EAAM,CAAC,SAAU,WACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAKJ,EAAWt1B,EAAM,CAAC,SAAU,WACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAKJ,EAAWt1B,EAAM,CAAC,cAC7B,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,OACXuwB,EAAGxvB,KAAO,EACd,CAGA,OAAS,CACL,MAAMmvB,EAAKJ,EAAWt1B,EAAM,CAAC,WAAY,YACzC,KAAI01B,GAAM,GAIN,MAHAM,EAAmBh2B,EAAM01B,EAKjC,CAEA,OAAS,CACL,MAAMA,EAAKJ,EAAWt1B,EAAM,CAAC,WAAY,WACzC,KAAI01B,GAAM,GAIN,MAHAM,EAAmBh2B,EAAM01B,EAKjC,CAEA,IAAIhZ,EAAI,EACR,KAAOA,EAAI1c,EAAKrJ,QAAQ,CACpB,MAAMT,EAAI8J,EAAK0c,GAEf,GAAe,SAAXxmB,EAAE8G,MAAmB9G,EAAEsP,MAAM7O,QAAU,EAA3C,CACI,MAAMyG,EAAIlH,EAAEsP,MAAMiX,OAAOvmB,EAAEsP,MAAM7O,OAAS,GAChC,MAANyG,GAAmB,MAANA,IACblH,EAAEsP,MAAQtP,EAAEsP,MAAM2S,UAAU,EAAGjiB,EAAEsP,MAAM7O,OAAS,GAChDT,EAAEqQ,KAAO,KACTvG,EAAKhJ,OAAO0lB,EAAI,EAAG,EAAG8F,EAAc,OAAQplB,EAAGlH,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,QAEvE4c,GAEJ,MACAA,GACJ,CACJ,CAEA,IAAK,IAAIvhB,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAAK,CACpC,MAAMjF,EAAI0sB,EAAOznB,GACXgC,EAAI+3B,EAAah/B,EAAE8G,KAAO,IAAM9G,EAAEsP,YAC9BzF,IAAN5C,IACAjH,EAAE8G,KAAOG,EAAE,GACXjH,EAAEsP,MAAQrI,EAAE,GAEpB,CAEA,OADAylB,EAASiR,EAAeV,EAE5B,CACA,SAAS6C,EAAmBh2B,EAAM01B,GAI9B,MAAMx/B,EAAI8J,EAAK01B,GACf11B,EAAK01B,EAAK,GAAGnvB,KAAO,GACpB,MAAM8I,EAAKmT,EAAc,KAAM,IAAKtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MAClDm2B,EAAQzT,EAAc,IAAK,IAAKtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MACpD3H,EAAMqqB,EAAc,IAAK,IAAKtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MACxD3H,EAAIoO,KAAO,IACX,MAAMqmB,EAAM5sB,EAAK01B,EAAK,GACtB9I,EAAIrmB,KAAO,GACX,MAAM2vB,EAAQ1T,EAAc,SAAU,IAAKtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MAC/Do2B,EAAM3vB,KAAO,IACb,MAAM4vB,EAAM3T,EAAc,OAAQ,IAAKtsB,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,MAC3DE,EAAKhJ,OAAO0+B,EAAI,EAAGrmB,EAAI4mB,EAAOrJ,EAAKz0B,EAAK+9B,EAAOC,EACnD,CACA,SAASZ,EAAiB3S,EAAQyS,GAE9B,MAAMe,EAAKd,EAAW1S,EAAQ,CAAC,WAC3BwT,GAAM,IACNxT,EAAOwT,GAAIp5B,KAAO,OAClB4lB,EAAOwT,GAAI5wB,MAAQ,QAEvB,MAAM6wB,EAAKf,EAAW1S,EAAQ,CAAC,WAC3ByT,GAAM,IACNzT,EAAOyT,GAAIr5B,KAAO,OAClB4lB,EAAOyT,GAAI7wB,MAAQ,QAGvBod,EAAOyS,EAAK,GAAG7vB,MAAQ,GAC3B,CACA,SAAS8vB,EAAW1S,EAAQ0T,GACxB,MAAMC,EAAQD,EAAcxzB,KAAI7H,GAAKA,EAAEnE,MAAM,OAC7C,IAAK,IAAIqE,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAAK,CACpC,IAAIq7B,GAAO,EACX,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6Z,EAAM5/B,OAAQ+lB,IAAK,CACnC,MAAMpf,EAAIi5B,EAAM7Z,GACVmB,EAAM1iB,EAAIuhB,EAChB,GAAImB,GAAO+E,EAAOjsB,OACd,OAAQ,EAEZ,GAAIisB,EAAO/E,GAAK7gB,OAASM,EAAE,IAAMslB,EAAO/E,GAAKrY,QAAUlI,EAAE,GAAzD,CAIIk5B,GAAO,EACP,KACJ,CACJ,CACA,GAAIA,EACA,OAAOr7B,CAEf,CACA,OAAQ,CACZ,CAeO,MCnRD,GAAW,EACXs7B,EAAwB,GAExBC,EAAiB,CAAC,YAAa,aAAc,SAAU,WAEvD,EAAe,CACjB,MAAO,CAAC,KAAM,KACd,MAAO,CAAC,KAAM,MACd,MAAO,CAAC,IAAK,KACb,MAAO,CAAC,IAAK,KACb,WAAY,CAAC,MAAO,MACpB,UAAW,CAAC,KAAM,OAClB,WAAY,CAAC,MAAO,KACpB,UAAW,CAAC,OAAQ,QACpB,UAAW,CAAC,OAAQ,SAKjB,SAASC,EAAa/T,GACzB,IAiRJ,SAAsBA,GAElB,IAAK,IAAIznB,EAAI,EAAGA,EAAIynB,EAAOjsB,UACnBwE,EAAI,KADuBA,IAAK,CAIpC,MAAMjF,EAAI0sB,EAAOznB,GACjB,GAAe,iBAAXjF,EAAE8G,MAA2B05B,EAAe5gC,QAAQI,EAAEsP,QAAU,EAEhE,OADAtP,EAAE8G,KAAO,YACF,CAEf,CACA,OAAO,CACX,CA9RS45B,CAAahU,GACd,OAAOA,EAGX,MAAMuQ,EAAQa,EAAYpR,EAAQ,OAClC,IAAK,IAAIznB,EAAI,EAAGA,EAAIg4B,EAAMx8B,OAAQwE,IAAK,CACnC,MAAM6E,EAAOmzB,EAAMh4B,GACnB,GAAI6E,EAAKrJ,QAAU,EACf,SAIJ,MAAM8+B,EAAM,EAAWz1B,EAAM,CAAC,YAC9B,GAAIy1B,GAAO,EAAG,CAEM,QADLz1B,EAAKy1B,GACTlvB,OACHvG,EAAKy1B,EAAM,GAAGlvB,KAAO,QACrBvG,EAAKhJ,OAAOy+B,EAAK,GAEzB,CAEA,IAAK,IAAIC,EAAK,EAAGA,EAAK11B,EAAKrJ,OAAQ++B,IAAM,CACrC,MAAMx/B,EAAI8J,EAAK01B,GACC,OAAZx/B,EAAEsP,OAA6B,UAAXtP,EAAEqQ,OACtBrQ,EAAE8G,KAAO,MACT9G,EAAEsP,MAAQ,MACVtP,EAAEqQ,KAAO,GAEjB,CAEA,OAAS,CACL,MAAMmvB,EAAK,EAAW11B,EAAM,CAAC,WAAY,UAAW,YACpD,GAAI01B,EAAK,EACL,MAEJ,MAAMC,EAAM31B,EAAK01B,EAAK,GACtB,GAAiB,UAAbC,EAAIpvB,KAAR,CAOK,GAAiB,MAAbovB,EAAIpvB,KAAc,CACvB,MAAMqvB,EAAW51B,EAAK01B,EAAK,GAC3B,GAAuC,SAAnCE,EAASpwB,MAAM2S,UAAU,EAAG,GAAe,CAK3C,GAJAwd,EAAI34B,KAAO,MACX24B,EAAInwB,MAAQ,MACZmwB,EAAIpvB,KAAO,GACXvG,EAAKhJ,OAAO0+B,EAAI,EAAGC,GACfC,EAASpwB,MAAM7O,OAAS,EAAG,CAC3B,MAAMk/B,EAAoBD,EAASpwB,MAAM2S,UAAU,GAC7C2d,EAAgBtT,EAAc,OAAQqT,EAAmBD,EAAShnB,OAAQgnB,EAAS51B,KAAM41B,EAAS91B,MACpG+1B,EAAkB1c,MAAM,SACxB2c,EAAc94B,KAAO,UAEzBgD,EAAKhJ,OAAO0+B,EAAK,EAAG,EAAGI,GACvBF,EAASpwB,MAAQowB,EAASpwB,MAAM2S,UAAU,EAAG,EACjD,CACAyd,EAAS54B,KAAO,KAChB44B,EAASpwB,MAAQ,KACjBowB,EAASrvB,KAAO,GAChB,QACJ,CACJ,CACA,KADA,CA3BIovB,EAAI34B,KAAO,MACX24B,EAAInwB,MAAQ,MACZmwB,EAAIpvB,KAAO,GACXvG,EAAKhJ,OAAO0+B,EAAI,EAAGC,EA0B3B,CAEA,OAAS,CACL,MAAMD,EAAK,EAAW11B,EAAM,CAAC,SAAU,WACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAW11B,EAAM,CAAC,SAAU,WACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAW11B,EAAM,CAAC,SAAU,cACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,OAAS,CACL,MAAML,EAAK,EAAW11B,EAAM,CAAC,SAAU,cACvC,GAAI01B,EAAK,EACL,MAEJ,MAAMK,EAAK/1B,EAAK01B,GAChBK,EAAG/4B,KAAO,OACV+4B,EAAGvwB,MAAQ,MACXuwB,EAAGxvB,KAAO,GACVvG,EAAKhJ,OAAO0+B,EAAI,EAAGK,EACvB,CAEA,IAAK,IAAI56B,EAAI,EAAGA,EAAI6E,EAAKrJ,OAAQwE,IAAK,CAElC,GAAI07B,EAAQ,CAAC,CAAC,UAAW,aAAc,OAAQ,WAAY,CAAC,UAAW,UAAW,IAAK,WAAY72B,EAAM7E,GAAI,CACzG,MAAM27B,EAAW92B,EAAK7E,EAAI,GAC1B27B,EAASvwB,KAAO,GAChB,MAAMwwB,EAAW/2B,EAAK7E,EAAI,GAC1B47B,EAASxwB,KAAO,GAChBvG,EAAKhJ,OAAOmE,EAAG,EAAG27B,EAAUrD,EAAS,KAAM,IAAKqD,GAAWrD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMsD,EAAUtD,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SAAUgD,GAAwBhD,EAAS,IAAK,MACzOt4B,GAAK,CACT,CAEA,GAAI07B,EAAQ,CAAC,OAAQ,WAAY,CAAC,UAAW,UAAW,CAAC,SAAU,SAAU,QAAS,WAAY72B,EAAM7E,GAAI,CACxG,MAAM27B,EAAW92B,EAAK7E,GACtB27B,EAASvwB,KAAO,GAChB,MAAMwwB,EAAW/2B,EAAK7E,EAAI,GAC1B47B,EAASxwB,KAAO,GAChBvG,EAAKhJ,OAAOmE,EAAG,EAAG27B,EAAUrD,EAAS,KAAM,IAAKqD,GAAWrD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMsD,EAAUtD,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SAAUgD,GAAwBhD,EAAS,IAAK,KAC7O,CAEA,GAAIoD,EAAQ,CAAC,CAAC,YAAa,WAAY,OAAQ,YAAa72B,EAAM7E,GAAI,CAClE,MAAM27B,EAAW92B,EAAK7E,EAAI,GAC1B27B,EAASvwB,KAAO,GAChBvG,EAAKhJ,OAAOmE,EAAG,EAAG27B,EAAUrD,EAAS,KAAM,IAAKqD,GAAWrD,EAAS,OAAQ,KAAMA,EAAS,IAAK,KAAMA,EAAS,IAAK,KAAMA,EAAS,SAAU,GAAIA,EAAS,IAAK,KAAMA,EAAS,QAAS,KAAMA,EAAS,SAAUgD,GAAwBhD,EAAS,IAAK,KAC1P,CACJ,CAGA,OAAS,CACL,MAAMiC,EAAK,EAAW11B,EAAM,CAAC,UAAW,YACxC,GAAI01B,EAAK,EACL,MAEJ11B,EAAK01B,GAAIlwB,MAAQ,OACjBxF,EAAK01B,GAAInvB,KAAO,GAChBvG,EAAKhJ,OAAO0+B,EAAK,EAAG,EACxB,CAEA,OAAS,CACL,MAAMA,EAAK,EAAW11B,EAAM,CAAC,UAAW,YACxC,GAAI01B,EAAK,EACL,MAMJ,MAAMx/B,EAAI8J,EAAK01B,GACfx/B,EAAEsP,MAAQ,UACVtP,EAAEqQ,KAAO,GACTvG,EAAKhJ,OAAO0+B,EAAK,EAAG,EACxB,CAEA,IAAIhZ,EAAI,EACR,KAAOA,EAAI1c,EAAKrJ,QAAQ,CACpB,MAAMT,EAAI8J,EAAK0c,GAEf,GAAe,SAAXxmB,EAAE8G,MAAmB9G,EAAEsP,MAAM7O,QAAU,EAA3C,CACI,MAAMyG,EAAIlH,EAAEsP,MAAMiX,OAAOvmB,EAAEsP,MAAM7O,OAAS,GAChC,MAANyG,GAAmB,MAANA,IACblH,EAAEsP,MAAQtP,EAAEsP,MAAM2S,UAAU,EAAGjiB,EAAEsP,MAAM7O,OAAS,GAChDT,EAAEqQ,KAAO,KACTvG,EAAKhJ,OAAO0lB,EAAI,EAAG,EAAG8F,EAAc,OAAQplB,EAAGlH,EAAE0Y,OAAQ1Y,EAAE8J,KAAM9J,EAAE4J,QAEvE4c,GAEJ,MACAA,GACJ,CACJ,CAEA,IAAK,IAAIvhB,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAAK,CACpC,MAAMjF,EAAI0sB,EAAOznB,GACXgC,EAAI,EAAajH,EAAE8G,KAAO,IAAM9G,EAAEsP,YAC9BzF,IAAN5C,IACAjH,EAAE8G,KAAOG,EAAE,GACXjH,EAAEsP,MAAQrI,EAAE,GAEpB,CAOA,OANAylB,EAASiR,EAAeV,GACpB,IACAjZ,QAAQC,IAAI,wBACZD,QAAQC,IAAIiZ,EAAYxQ,IACxB1I,QAAQC,IAAI,0BAETyI,CACX,CAQA,SAASiU,EAAQG,EAAY7D,EAAO8D,GAChC,MAAM9S,EAAQ,CAACkC,EAASnwB,KACpB,GAAImwB,aAAmBvnB,MAAO,CAC1B,IAAK,IAAI3D,EAAI,EAAGA,EAAIkrB,EAAQ1vB,OAAQwE,IAChC,GAAIgpB,EAAMkC,EAAQlrB,GAAIjF,GAClB,OAAO,EAGf,OAAO,CACX,CACA,GAAgB,MAAZmwB,EACA,OAAO,EAEX,GAAIA,EAAQvwB,QAAQ,KAAO,EACvB,OAAIuwB,IAAYnwB,EAAE8G,KAQtB,OAAIqpB,IADO,GAAGnwB,EAAE8G,QAAQ9G,EAAEsP,OAId,EAEhB,IAAK,IAAIrK,EAAI,EAAGA,EAAI67B,EAAWrgC,OAAQwE,IAAK,CACxC,MAAM0iB,EAAM1iB,EAAI87B,EAChB,GAAIpZ,GAAOsV,EAAMx8B,OACb,OAAO,EAEX,MAAMugC,EAAMF,EAAW77B,GACjBjF,EAAIi9B,EAAMtV,GAChB,IAAKsG,EAAM+S,EAAKhhC,GACZ,OAAO,CAEf,CACA,OAAO,CACX,CACA,SAAS,EAAW0sB,EAAQ0T,GACxB,MAAMC,EAAQD,EAAcxzB,KAAI7H,GAAKA,EAAEnE,MAAM,OAC7C,IAAK,IAAIqE,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAAK,CACpC,IAAIq7B,GAAO,EACX,IAAK,IAAI9Z,EAAI,EAAGA,EAAI6Z,EAAM5/B,OAAQ+lB,IAAK,CACnC,MAAMpf,EAAIi5B,EAAM7Z,GACVmB,EAAM1iB,EAAIuhB,EAChB,GAAImB,GAAO+E,EAAOjsB,OACd,OAAQ,EAEZ,GAAIisB,EAAO/E,GAAK7gB,OAASM,EAAE,IAAMslB,EAAO/E,GAAKrY,QAAUlI,EAAE,GAAzD,CAIIk5B,GAAO,EACP,KACJ,CACJ,CACA,GAAIA,EACA,OAAOr7B,CAEf,CACA,OAAQ,CACZ,CC1SO,MAAMg8B,GAKTx3B,YAAYy3B,EAAkBC,GAE1Bz6B,KAAKw6B,iBAAmBA,EAExBx6B,KAAKy6B,aAAeA,EACpB,IAAIl8B,EAAI,EAERyB,KAAK06B,cAAgB,GACrB,IAAK,MAAMC,KAAMF,EACbz6B,KAAK06B,cAAcz6B,KAAK1B,GACxBA,GAAKo8B,EAAG1oB,KAAKlY,OAGjBiG,KAAK46B,UAAY,EAEjB56B,KAAK66B,6BAA+B,CACxC,CAMA30B,IAAI40B,GACA,MAAMv8B,EAAIyB,KAAK+6B,UAAUD,GACzB,OAAOvmB,KAAKmM,IAAI1gB,KAAKy6B,aAAal8B,GAAG82B,gBAAkByF,EAA2B96B,KAAK06B,cAAcn8B,IAAKA,IAAMyB,KAAKy6B,aAAa1gC,OAAS,EAAIiG,KAAKw6B,iBAAmBx6B,KAAKy6B,aAAal8B,EAAI,GAAG82B,eAAiB,EACrN,CAKA0F,UAAUD,GAEFA,EAA2B96B,KAAK66B,+BAChC76B,KAAK46B,UAAY,GAErB56B,KAAK66B,6BAA+BC,EACpC,IAAK,IAAIv8B,EAAIyB,KAAK46B,UAAWr8B,EAAIyB,KAAKy6B,aAAa1gC,OAAS,EAAGwE,IAC3D,GAAIu8B,EAA2B96B,KAAK06B,cAAcn8B,EAAI,GAElD,OADAyB,KAAK46B,UAAYr8B,EACVA,EAIf,OADAyB,KAAK46B,UAAY56B,KAAKy6B,aAAa1gC,OAAS,EACrCiG,KAAKy6B,aAAa1gC,OAAS,CACtC,EAEG,MAAMihC,GAMTj4B,YAAYk4B,EAAsCC,EAAkCC,GAEhFn7B,KAAKu2B,MAAQ,GAEbv2B,KAAKk7B,iCAAmCA,EAExCl7B,KAAKm7B,gCAAkCA,EACvC,IAAItO,EAAS,EACb,IAAK,MAAMzpB,KAAQ63B,EAAqC/gC,MAAM,MAC1D8F,KAAKu2B,MAAMt2B,KAAK,CAAE4sB,SAAQsK,IAAK/zB,EAAKrJ,SACpC8yB,GAAUzpB,EAAKrJ,OAAS,EAG5BiG,KAAKo7B,eAAiB,EAEtBp7B,KAAKq7B,WAAa,CACtB,CAMAn1B,IAAIrC,EAAaC,GACb,GAAoB,OAAhBD,EACA,MAAO,CAAEA,cAAaC,aAG1B,MAAMw3B,EAAYt7B,KAAKu7B,cAAc13B,GACrC,IAAK,MAAM23B,KAAgBx7B,KAAKk7B,iCAAkC,CAE9D,GAAII,IAAcE,EAAc,CAC5B33B,EAAc,KACdC,EAAY,KACZ,KACJ,CAGIw3B,EAAYE,IAEZ33B,GAAe7D,KAAKu2B,MAAMiF,GAAcrE,IAAM,EAC5B,OAAdrzB,IACAA,GAAa9D,KAAKu2B,MAAMiF,GAAcrE,IAAM,GAGxD,CACA,IAAK,MAAMsE,KAAez7B,KAAKm7B,gCACvBG,GAAaG,EAAYC,aAEL,OAAhB73B,IACAA,GAAe43B,EAAYtE,IAAM,GAEnB,OAAdrzB,IACAA,GAAa23B,EAAYtE,IAAM,IAI3C,MAAO,CAAEtzB,cAAaC,YAC1B,CAMAy3B,cAAc1O,GAENA,EAAS7sB,KAAKq7B,aACdr7B,KAAKo7B,eAAiB,GAE1Bp7B,KAAKq7B,WAAaxO,EAClB,IAAK,IAAItuB,EAAIyB,KAAKo7B,eAAgB78B,EAAIyB,KAAKu2B,MAAMx8B,OAAS,EAAGwE,IACzD,GAAIsuB,EAAS7sB,KAAKu2B,MAAMh4B,EAAI,GAAGsuB,OAE3B,OADA7sB,KAAKo7B,eAAiB78B,EACfA,EAIf,OADAyB,KAAKo7B,eAAiBp7B,KAAKu2B,MAAMx8B,OAAS,EACnCiG,KAAKu2B,MAAMx8B,OAAS,CAC/B,EAGG,MAAM4hC,GAIT54B,YAAYhF,GAERiC,KAAK47B,YAAc,GAEnB,IAAI/O,EAAS,EACb,IAAK,MAAMzpB,KAAQrF,EAAK7D,MAAM,MAC1B8F,KAAK47B,YAAY37B,KAAK4sB,GACtBA,GAAUzpB,EAAKrJ,OAAS,EAG5BiG,KAAKo7B,eAAiB,EAEtBp7B,KAAKq7B,WAAa,CACtB,CAMAn1B,IAAI2mB,EAAQgP,GAEJhP,EAAS7sB,KAAKq7B,aACdr7B,KAAKo7B,eAAiB,GAE1Bp7B,KAAKq7B,WAAaxO,EAClB,IAAK,IAAItuB,EAAIyB,KAAKo7B,eAAgB78B,EAAIyB,KAAK47B,YAAY7hC,OAAS,EAAGwE,IAC/D,GAAIsuB,EAAS7sB,KAAK47B,YAAYr9B,EAAI,GAE9B,OADAyB,KAAKo7B,eAAiB78B,EACf,CACH6E,KAAM7E,GAAKs9B,EAAqB,EAAI,GACpChW,OAAQgH,EAAS7sB,KAAK47B,YAAYr9B,IAK9C,OADAyB,KAAKo7B,eAAiBp7B,KAAK47B,YAAY7hC,OAAS,EACzC,CACHqJ,KAAMpD,KAAK47B,YAAY7hC,OAAS,GAAK8hC,EAAqB,EAAI,GAC9DhW,OAAQgH,EAAS7sB,KAAK47B,YAAY57B,KAAK47B,YAAY7hC,OAAS,GAEpE,EAMG,SAAS+hC,GAAiCC,EAAWC,GASxD,GAPqC,iBAA1BD,EAAUl4B,cACjBk4B,EAAUl4B,aAAem4B,EAAQjiC,QAEF,iBAAxBgiC,EAAUj4B,YACjBi4B,EAAUj4B,WAAak4B,EAAQjiC,QAGnB,KAAZiiC,EAAgB,CAChB,MAAMzF,EAAQyF,EAAQ9hC,MAAM,MACE,iBAAnB6hC,EAAU34B,OACjB24B,EAAU34B,MAAQmzB,EAAMx8B,OAAS,GAEd,IAAnBgiC,EAAU34B,MAA0C,iBAArB24B,EAAUlW,SACzCkW,EAAUlW,QAAU0Q,EAAMA,EAAMx8B,OAAS,GAAGA,OAEpD,CACA,OAAOgiC,CACX,CCxMA,MAEME,GAAa,CAAC,QAAS,MAAO,QAAS,SAAU,OAAQ,UAAW,OAAQ,SAqErEC,GA5DmBjqB,IAG5B,MAAMkqB,EAAUlqB,EAAKhY,QAAQ,cAAe,IAGtCmiC,EAAuB,GAC7B,IAAIC,EAAe,UACfC,EAAoB,UAGxB,MAAMC,EAAqBtqB,IAASkqB,EAC9BA,EAEAlqB,EAAKhY,QAAQ,iBAAiB,CAACuiC,EAAGC,KAChC,MAAMC,GAAMD,EAYZ,OAXW,IAAPC,IACAL,EAAe,UACfC,EAAoB,WAEb,IAAPI,IACAJ,EAAoB,QAEpBI,GAAM,IAAMA,GAAM,KAClBL,EAAeJ,GAAWS,EAAK,KAEnCN,EAAqBn8B,KAAK,UAAUo8B,mBAA8BC,MAC3D,IAAI,IAGnB,IAAIK,EAAY,UACZC,EAAiB,UAtCN,IAACtjC,EA0DhB,MAAO,CACH6iC,UACAU,YAAa5qB,IAASkqB,EAChBA,EACAlqB,EAAO,OACb6qB,KAtBS7qB,IAASkqB,EAAUA,EAAW,UAzC3B7iC,EAyCiD2Y,EAzC3C3Y,EAAEW,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,WA2C5HA,QAAQ,iBAAiB,CAACuiC,EAAGC,KAC9B,MAAMC,GAAMD,EAWZ,OAVW,IAAPC,IACAC,EAAY,UACZC,EAAiB,WAEV,IAAPF,IACAE,EAAiB,QAEjBF,GAAM,IAAMA,GAAM,KAClBC,EAAYV,GAAWS,EAAK,KAEzB,8BAA8BC,mBAA2BC,MAAmB,IAClF,UAQDG,eAAgB,CAACR,KAAuBH,GAC3C,EAEQF,GAvEC,CAAEtV,MAAO,OAAWoW,KAAM,OAAWC,MAAO,QAAYC,IAAK,QAAYC,MAAO,QAAYC,OAAQ,QAAYC,KAAM,QAAYC,QAAS,QAAYC,KAAM,QAAYC,MAAO,SCFvL,MAAMC,GAETz5B,aAAa05B,GACT,IAAIC,EAAQF,GAAS7oB,MACrB,OAAQ8oB,GACJ,IAAK,MACDC,EAAQF,GAASG,IACjB,MACJ,IAAK,QACDD,EAAQF,GAAS7oB,MACjB,MACJ,IAAK,QACD+oB,EAAQF,GAAS/U,MACjB,MACJ,IAAK,OACDiV,EAAQF,GAASxW,KACjB,MACJ,IAAK,OACD0W,EAAQF,GAASrwB,KACjB,MACJ,IAAK,QACDuwB,EAAQF,GAASr5B,MACjB,MACJ,IAAK,SACDu5B,EAAQF,GAASI,OACjB,MACJ,QACI,MAAM,IAAI/6B,MAAM,qCAAuC46B,GAE/D,OAAOC,CACX,CACA35B,gBAAgB25B,GAEZ,MADe,CAAC,MAAO,QAAS,QAAS,OAAQ,OAAQ,QAAS,UACpDA,EAClB,EAcJ,SAASG,GAAkBngB,GACvB,OAAKA,EAGE,GAAGA,EAAEza,MAAQ,UAAgBC,IAAXwa,EAAEva,KAAqB,GAAK,IAAIua,EAAEva,KAAO,WAFvD,EAGf,CAhBAq6B,GAASG,IAAM,EACfH,GAAS7oB,MAAQ,EACjB6oB,GAAS/U,MAAQ,EACjB+U,GAASxW,KAAO,EAChBwW,GAASrwB,KAAO,EAChBqwB,GAASr5B,MAAQ,EACjBq5B,GAASI,OAAS,EAgBX,MAAME,GACTh7B,cACI/C,KAAKg+B,UAAY,GACjBh+B,KAAKi+B,KAAO,GACZj+B,KAAK+M,SAAW,EACpB,CACAmxB,eACI,MAAO,CAACl+B,KAAKi+B,KAAKhkC,QAAQ,OAAQ,IAAK+F,KAAK+M,SAChD,CACAvS,QACIwF,KAAKi+B,KAAO,GACZj+B,KAAK+M,SAAW,EACpB,CAMAoxB,YAAYT,EAAUU,GAClB,MAAMT,EAAQF,GAASY,MAAMX,GAC7B19B,KAAKg+B,UAAU/9B,KAAK,CAAE09B,QAAOS,YACjC,CAKAE,eAAeF,GACXp+B,KAAKg+B,UAAYh+B,KAAKg+B,UAAUn/B,QAAQ4B,GAAMA,EAAE29B,WAAaA,GACjE,CAKAxpB,MAAMrQ,EAASwI,EAAW,MACtB/M,KAAKu+B,MAAMd,GAAS7oB,MAAO,GAAGsnB,GAAiBc,mBAAmBd,GAAiBtV,QAAQkX,GAAkB/wB,KAAYxI,IAAWwI,EACxI,CAKA2b,MAAMnkB,EAASwI,EAAW,MACtB/M,KAAKu+B,MAAMd,GAAS/U,MAAO,GAAGwT,GAAiBc,eAAed,GAAiBtV,QAAQkX,GAAkB/wB,KAAYxI,IAAWwI,EACpI,CAKAka,KAAK1iB,EAASwI,EAAW,MACrB/M,KAAKu+B,MAAMd,GAASxW,KAAM,GAAGiV,GAAiBc,OAAOd,GAAiBmB,WAAWnB,GAAiBtV,QAAQkX,GAAkB/wB,KAAYxI,IAAWwI,EACvJ,CAKAK,KAAK7I,EAASwI,EAAW,MACrB/M,KAAKu+B,MAAMd,GAASrwB,KAAM,GAAG8uB,GAAiBc,OAAOd,GAAiBiB,YAAYjB,GAAiBtV,QAAQkX,GAAkB/wB,KAAYxI,IAAWwI,EACxJ,CAKA3I,MAAMG,EAASwI,EAAW,MAEtB,GAAIxI,aAAmBzB,OAAiC,iBAAjByB,EAAQnE,KAAmB,CAG9D,OADcmE,EAAQnE,MAElB,IAAK,mBACL,IAAK,YACD,GAAImE,aAAmB,IAAW,CAC9B,MAAMnL,EAAImL,EACV,IAAIi6B,EAAMzxB,EAKV,OAJIyxB,UACAA,EAAM,CAAEt7B,KAAM9J,EAAE8J,KAAME,KAAMhK,EAAEgK,MAAQ,EAAGS,YAAa,EAAGC,UAAW,SAExE9D,KAAKu+B,MAAMd,GAASr5B,MAAOhL,EAAEmL,QAASi6B,EAE1C,EAEZ,CACIj6B,aAAmBzB,QAEnByB,EAAUA,EAAQA,SAEtBvE,KAAKu+B,MAAMd,GAASr5B,MAAO,GAAG83B,GAAiBc,OAAOd,GAAiBgB,WAAWhB,GAAiBtV,QAAQkX,GAAkB/wB,KAAYxI,IAAWwI,EACxJ,CAEA0xB,aAAar6B,EAAOs6B,GAEhB,OADU,IAAI,KAAiBt6B,EAAOs6B,EAE1C,CAKAb,OAAOt5B,EAASwI,EAAW,MACvB/M,KAAKu+B,MAAMd,GAASI,OAAQ,GAAGt5B,IAAWwI,EAC9C,CAEAqQ,KAAKsgB,EAAUb,EAAa9vB,EAAU+vB,EAAO,KAAMC,EAAiB,MAChE,MAAMx+B,EAAIk/B,GAASY,MAAMX,GACzB19B,KAAKu+B,MAAMhgC,EAAGs+B,EAAa9vB,EAAU+vB,EAAMC,EAC/C,CAEAwB,MAAMZ,EAAOd,EAAa9vB,EAAU+vB,EAAO,KAAMC,EAAiB,MAC9D,MAAM4B,EAAW,KAEb,MAAMC,EAAU1C,GAAkCW,GAElD,IAAIgC,EAAQ,GACRhC,EAAYxuB,SAAS,QACrBwwB,GAAS,wEAWb,MARa,CACT1C,QAASyC,EAAQzC,QACjBU,YAAa+B,EAAQ/B,YACrBE,eAAgBA,GAAkB6B,EAAQ7B,eAC1CD,KAAM,eAAe+B,OAAa/B,GAAQ8B,EAAQ9B,MAAQ,SAC1Da,MAAOF,GAAS18B,SAAS48B,GACzB5wB,WAEO,EAGf,GAAI4wB,IAAUF,GAASr5B,MAAO,CAC1B,MAAM06B,EAAOH,IACb3+B,KAAKi+B,MAAQa,EAAK3C,QAAU,KACxBpvB,GAA8B,OAAlB/M,KAAK+M,WACjB/M,KAAK+M,SAAW,IAAIA,EAAS3J,QAAQ2J,EAAS7J,OAEtD,CAEA,IAAK,MAAMzC,KAAKT,KAAKg+B,UACjB,GAAIv9B,EAAEk9B,OAASA,EAAO,CAClB,MAAMmB,EAAOH,IACbl+B,EAAE29B,SAASU,EACf,CAER,ECtMG,MAAMC,GAKTh8B,YAAYi8B,EAAU9qB,EAAK+qB,EAAO,GAC9Bj/B,KAAKi/B,KAAOA,EACZj/B,KAAKk/B,WAAa,GAElBl/B,KAAKsa,SAAW,CAAC,EACjBta,KAAKiG,WAAa,CACd,IAAK+4B,EAAS/4B,WAAW,IACzB,IAAK+4B,EAAS/4B,WAAW,IACzB,IAAK+4B,EAAS/4B,WAAW,KAE7BjG,KAAKm/B,YAAc,EACnBn/B,KAAKwO,MAAQ,EACbxO,KAAKo/B,WAAa,EAClBp/B,KAAKq/B,OAAS,GACdr/B,KAAKs/B,YAAc,GACnBt/B,KAAKu/B,QAAU,GACfv/B,KAAKw/B,SAAW,GAChBx/B,KAAK+c,UAAY7I,EAAIpO,QAErB9F,KAAKyC,QAAUu8B,EAASv8B,QACxBzC,KAAKiV,YAAc+pB,EAAS/pB,YAE5BjV,KAAKmR,SAAW,IAAK6tB,EAAS7tB,UAC9BnR,KAAKqjB,YAAc,IAAK2b,EAASS,kBAEjCz/B,KAAKkU,IAAMA,EAEXlU,KAAK8c,OAASkiB,EAAS7xB,YACvBnN,KAAKg/B,SAAWA,CACpB,CACAU,WACI1/B,KAAKiG,WAAW,GAAG,QAAU,EACjC,CACIsX,UACA,IAAIlf,EAAI2B,KAAKiG,WAAW,GAAG,QAE3B,OADA5H,EAAIA,EAAEpE,QAAQ,OAAQ,IACfoE,CACX,CAIA8f,MAAMpgB,EAAMkH,EAAO6L,EAAMkrB,EAAU,IAI/B,OAFAlrB,EAAKkrB,QAAUA,EACflrB,EAAK6uB,WAAa3/B,KACXA,KAAKg/B,SAASY,QAAQ7hC,EAAMkH,EAAO6L,EAC9C,CACAiN,eAAehgB,EAAMkH,EAAO6L,EAAMkrB,EAAU,IAIxC,OAFAlrB,EAAKkrB,QAAUA,EACflrB,EAAK6uB,WAAa3/B,WACLA,KAAKg/B,SAASa,SAAS9hC,EAAMkH,EAAO6L,EACrD,CAKAgvB,UAAUC,GACN,IAAI9tB,EAAO,GAAGiqB,GAAiBc,eAAed,GAAiBtV,UAC3DoZ,EAAO,EACPb,EAAc,EAClB,IAAK,MAAM7lC,KAAKymC,EACZ,IACIzmC,EAAEoH,IACFuR,GAAQ,GAAGiqB,GAAiBiB,SAASjB,GAAiBtV,SAASttB,EAAEiK,SACjEy8B,GACJ,CACA,MAAOve,GACHxP,GAAQ,GAAGiqB,GAAiBgB,OAAOhB,GAAiBtV,SAASttB,EAAEiK,SAASke,EAAIld,YAC5E46B,GACJ,CAGAltB,GADAktB,EAAc,EACN,GAAGjD,GAAiBiB,WAAW6C,MAAS9D,GAAiBgB,SAASiC,KAGlE,GAAGjD,GAAiBiB,WAAW6C,KAE3ChgC,KAAKm/B,YAAcA,EACnBn/B,KAAK8c,OAAO+gB,OAAO5rB,EACvB,CAIAguB,eAGI,MAAMC,EAAY,OAClB,IAAK,MAAMC,KAASngC,KAAKqjB,YAAa,CAClC,MAAMha,EAAKrJ,KAAKmR,SAASgvB,GACrB92B,EAAG62B,IAAc72B,EAAG62B,GAAWj3B,IAC/BI,EAAG62B,GAAWj3B,GAAGjJ,KAEzB,CACJ,CAIA4mB,QACI5mB,KAAKigC,cACT,CACAG,UACIpgC,KAAK4mB,OACT,gEC/GJ,IACI,MAAO,CACHxmB,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WAEJ,GAGJ,IAAO,CACH7I,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK8rB,IAAIl6B,EACpB,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK+rB,IAAIn6B,EACpB,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKgsB,IAAIp6B,EACpB,GAEJ,OAAU,CACN/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKisB,KAAKr6B,EACrB,GAEJ,OAAU,CACN/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKksB,KAAKt6B,EACrB,GAEJ,OAAU,CACN/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKmsB,KAAKv6B,EACrB,GAEJ,MAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAUtI,EAAG6f,GACb,OAAOjM,KAAKosB,MAAMhgC,EAAG6f,EACzB,GAEJ,SAAU,CACNpgB,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU23B,GACV,OAAkC,IAA3BrsB,KAAKosB,MAAMC,EAAG,GAAIA,EAAG,IAAYrsB,KAAK0I,EACjD,GAEJ,QAAW,CACP7c,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOA,EAAIoO,KAAK0I,GAAK,GACzB,GAEJ,QAAW,CACP7c,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAQA,EAAI,IAAOoO,KAAK0I,EAC5B,GAEJ,MAAO,CACH7c,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOA,EAAIoO,KAAK0I,GAAK,GACzB,GAEJ,SAAU,CACN7c,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAQA,EAAI,IAAOoO,KAAK0I,EAC5B,GAGJ,KAAQ,CACJ7c,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAA0B,IAAlBsW,WAAWtW,GAAY,EAAKA,EAAI,EAAK,GAAK,CACtD,GAEJ,KAAM,CACF/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EAEN5I,GAAI,SAAU9C,EAAG4T,GACb,OAAOA,EAAIgB,OAAO,OAAQ,CAAC5U,GAC/B,GAEJ,IAAO,CACH/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKssB,IAAItgC,EACpB,GAEJ,MAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKssB,IAAItgC,EACpB,GAEJ,IAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKusB,IAAIvgC,EACpB,GAEJ,MAAS,CACLH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAO4J,KAAKwsB,MAAMxgC,EAAGoK,EACzB,GAEJ,KAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAO4J,KAAKwsB,MAAMxgC,EAAGoK,EACzB,GAEJ,GAAM,CACFvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKgJ,IAAIhd,EACpB,GAEJ,IAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKgJ,IAAIhd,EACpB,GAEJ,KAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAU,IAANpK,EACOgU,KAAKysB,MAAQzsB,KAAKgJ,IAAI5S,GAEvB,KAANpK,EACOgU,KAAK0sB,OAAS1sB,KAAKgJ,IAAI5S,GAE3B4J,KAAKgJ,IAAI5S,GAAK4J,KAAKgJ,IAAIhd,EAClC,GAEJ,KAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOA,EAAI,CACf,GAEJ,OAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOA,EAAI,CACf,GAEJ,OAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAK2sB,MAAM3gC,EACtB,GAEJ,KAAM,CACFH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAKC,MAAMD,KAAKE,SAAWlU,EACtC,GAEJ,OAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,MAAO,MACvBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,OAAQ4J,KAAKC,MAAMD,KAAKE,UAAY9J,EAAIpK,EAAI,IAAMA,CACtD,GAEJ,KAAQ,CACJH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAK4sB,KAAK5gC,EACrB,GAEJ,MAAO,CACHH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,OAAOgU,KAAK4sB,KAAK5gC,EACrB,GAGJ,MAAS,CACLH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK6sB,MAAMj7B,EACtB,GAEJ,OAAQ,CACJ/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK6sB,MAAMj7B,EACtB,GAEJ,QAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,MAAM02B,EAAO9sB,KAAKkJ,IAAI,GAAI9S,GAC1B,OAAO4J,KAAK+N,KAAK/hB,EAAI8gC,GAAQA,CACjC,GAEJ,QAAS,CACLjhC,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,MAAM02B,EAAO9sB,KAAKkJ,IAAI,GAAI9S,GAC1B,OAAO4J,KAAKC,MAAMjU,EAAI8gC,GAAQA,CAClC,GAEJ,UAAW,CACPjhC,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,MAAM02B,EAAO9sB,KAAKkJ,IAAI,GAAI9S,GAC1B,OAAO4J,KAAK6sB,MAAM7gC,EAAI8gC,GAAQA,CAClC,GAEJ,KAAQ,CACJjhC,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK+N,KAAKnc,EACrB,GAEJ,KAAM,CACF/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAK+N,KAAKnc,EACrB,GAEJ,MAAS,CACL/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKC,MAAMrO,EACtB,GAEJ,KAAM,CACF/F,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU9C,GACV,OAAOoO,KAAKC,MAAMrO,EACtB,ICrUD,MAAMyJ,GAAU,CACnBynB,UAAW,IACXvJ,IAAK,QAMF,SAAS/N,GAAMuhB,EAAKjK,EAAYl0B,gBAEjBA,IAAdk0B,IACAA,EAAYznB,GAAQynB,WAOxBiK,GAFAA,GAFAA,GAAiB,MAEPrnC,QAAQ,aAAc,OAEtBA,QAAQ,OAAQ,IAAM,KAEhC,MACMsnC,EAAY,IAAI7nB,OADH,aAAe2d,EAAY,SAGxCmK,EAAW,SAAUr7B,GAMvB,MALmB,iBAAR,GACHA,EAAEs7B,OAAO,cAAgB,IACzBt7B,EAAIsW,WAAWtW,IAGhBA,CACX,EAEM6G,EAAM,GACZ,IAAI00B,EAAQ,GACRlhC,EAAI,GACR,KAAe,KAAR8gC,GAAY,CAGf,GADA9gC,EAAI8gC,EAAIzhB,OAAO,GACXrf,IAAM62B,EAAW,CACjBiK,EAAMA,EAAI/lB,UAAU,GACpBmmB,EAAMzhC,KAAK,IACX,QACJ,CAEA,GAAU,OAANO,EAAY,CACZkhC,EAAMzhC,KAAK,IACX+M,EAAI/M,KAAKyhC,GACTA,EAAQ,GACRJ,EAAMA,EAAI/lB,UAAU,GACpB,QACJ,CAKA,GAFA/a,GADA8gC,EAAMA,EAAIrnC,QAAQ,OAAQ,KAClB4lB,OAAO,GAEXrf,IAAM62B,EAAW,CACjB/Z,QAAQC,IAAI,aACZmkB,EAAMzhC,KAAK,IACXqhC,EAAMA,EAAI/lB,UAAU8b,EAAUt9B,QAC9B,QACJ,CAEA,GAAU,MAANyG,GAA+B,MAAlB8gC,EAAIzhB,OAAO,GAAY,CACpCyhB,EAAMA,EAAI/lB,UAAU,GACpB,QACJ,CAEA,GAAU,MAAN/a,EAAW,CACX,MAAM0d,EAAIqjB,EAAU/8B,KAAK88B,GACzB,IAAKpjB,EAAG,CACJwjB,EAAMzhC,KAAKuhC,EAASF,IACpBt0B,EAAI/M,KAAKyhC,GACTA,EAAQ,GACR,KACJ,CACa,OAATxjB,EAAE,IACFwjB,EAAMzhC,KAAKuhC,EAAStjB,EAAE,KACtBlR,EAAI/M,KAAKyhC,GACTA,EAAQ,IAEHxjB,EAAE,KAAOmZ,GACdqK,EAAMzhC,KAAKuhC,EAAStjB,EAAE,KAE1BojB,EAAMA,EAAI/lB,UAAU2C,EAAE,GAAGnkB,QACzB,QACJ,CAEA,GAA4B,OAAxBunC,EAAI/lB,UAAU,EAAG,GAAa,CAC9BmmB,EAAMzhC,KAAK,IACXqhC,EAAMA,EAAI/lB,UAAU,GACpB,QACJ,CAEA,IAAIhd,EAAI,EACJF,EAAI,GACR,KAAOE,EAAI+iC,EAAIvnC,QAAQ,CACnB,MAAM+0B,EAAKwS,EAAIzhB,OAAOthB,GAChBohB,EAAK2hB,EAAIzhB,OAAOthB,EAAI,GAG1B,GAAW,MAAPuwB,GAAqB,MAAPnP,EAKlB,GAAW,MAAPmP,EAmBJzwB,GAAKywB,EACLvwB,QApBA,CAEI,GADAA,IACIohB,IAAO0X,EAAW,CAClB94B,IACAmjC,EAAMzhC,KAAKuhC,EAASnjC,IACpBA,EAAI,GACJ,KACJ,CACA,GAAW,OAAPshB,EAAa,CACbphB,IACAmjC,EAAMzhC,KAAKuhC,EAASnjC,IACpB2O,EAAI/M,KAAKyhC,GACTA,EAAQ,GACR,KACJ,CAEAnjC,GAEJ,MAtBIA,GAAK,EACLF,GAAK,GAwBb,CACAijC,EAAMA,EAAIrX,OAAO1rB,EACrB,CAGA,OAFImjC,EAAM3nC,OAAS,GACfiT,EAAI/M,KAAKyhC,GACN10B,CACX,CACO,SAAS/E,GAAUmsB,EAAKiD,EAAYl0B,UAAW2qB,EAAM3qB,gBAEtCA,IAAdk0B,IACAA,EAAYznB,GAAQynB,gBAEZl0B,IAAR2qB,IACAA,EAAMle,GAAQke,KAElB,MAAM6T,EAyBV,SAA2BtK,GACvB,OAAO,SAAUh5B,GAEb,IAAIujC,GAAQ,EAaZ,QAdAvjC,EAAI,GAAKA,GAEHnF,QAAQ,OAAS,GAAKmF,EAAEnF,QAAQ,OAAS,KAC3C0oC,GAAQ,GAERvjC,EAAEnF,QAAQm+B,IAAc,IACxBuK,GAAQ,GAERvjC,EAAEnF,QAAQ,MAAQ,IAClB0oC,GAAQ,EACRvjC,EAAIA,EAAEpE,QAAQ,KAAM,OAEpB2nC,IACAvjC,EAAI,IAAMA,EAAI,KACXA,CACX,CACJ,CA3CsBwjC,CAAkBxK,GACpC,QAAYl0B,IAARixB,EACA,MAAO,GACX,IAAI11B,EAAI,GACR,IAAK,IAAIH,EAAI,EAAGA,EAAI61B,EAAIr6B,OAAQwE,IAAK,CACjC,MAAMmjC,EAAQtN,EAAI71B,GAClB,QAAc4E,IAAVu+B,EAAJ,CAIA,IAAK,IAAI5hB,EAAI,EAAGA,EAAI4hB,EAAM3nC,OAAQ+lB,IAC9B4hB,EAAM5hB,GAAK6hB,EAAUD,EAAM5hB,IAE/BphB,GAAKgjC,EAAM7gC,KAAKw2B,GAAavJ,CAJ7B,MAFIpvB,GAAKovB,CAOb,CAGA,OADApvB,EAAIA,EAAEzE,QAAQ,gBAAiB6zB,GACxBpvB,CACX,CC/GA,OA/CkB,CACd,MAAO,CACH0B,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WAEJ,GAGJ,QAAS,CACL7I,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU8I,GAEV,OADAnC,GAAQynB,UAAY,IACbtX,GAAMhO,EACjB,GAEJ,QAAS,CACL3R,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU8I,GAEV,OADAnC,GAAQynB,UAAY,KACbtX,GAAMhO,EACjB,GAEJ,SAAU,CACN3R,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GAEV,OADAqP,GAAQynB,UAAY,IACbpvB,GAAU1H,EACrB,GAEJ,SAAU,CACNH,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GAEV,OADAqP,GAAQynB,UAAY,KACbpvB,GAAU1H,EACrB,IC7CR,IACI,MAAO,CACHH,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACW,MAAjBA,EAAI+nB,YACJ/nB,EAAI+nB,UAAY,CACZC,eAAgB,SAAUC,GAEtB,OADAjoB,EAAIE,KAAK,KAAO+nB,EACTA,CACX,GAGZ,GAGJ,IAAK,CAAE5hC,KAAM,QAASwI,MAAO,IAE7B,KAAM,CACFxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUrkB,GACpB,OAAOA,EAAI+nB,UAAUC,eAAe,IAAI3gB,SAAQ,CAACC,EAASC,IAC/C8c,EAAS/c,EAASC,KAEjC,EACAhQ,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAU4D,EAASjoB,GAC7B,OAAOA,EAAI+nB,UAAUC,eAAeC,EAAQ1e,MAAM/Y,IAC9CwP,EAAIE,KAAK,MAAQ1P,EACV6zB,EAAS7zB,MAExB,EACA+G,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUg5B,EAAQD,EAASjoB,GAC3B,OAAOA,EAAI+nB,UAAUC,eAAeC,EAAQ1e,MAAM/Y,IAC9CwP,EAAIE,KAAK,MAAQ1P,EACV03B,GAAO,EAAM13B,EAAQwP,MAC5BmoB,IACAnoB,EAAIE,KAAK,MAAQioB,EACVD,GAAO,EAAOC,EAAQnoB,MAErC,EACAzI,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAU4D,EAASjoB,GAC7B,OAAOA,EAAI+nB,UAAUC,eAAeC,EAAQve,OAAOhC,IAC/C1H,EAAIE,KAAK,MAAQwH,EACV2c,EAAS3c,MAExB,EACAnQ,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAU4D,EAASjoB,GAC7B,OAAOA,EAAI+nB,UAAUC,eAAeC,EAAQG,SAAQ,IACzC/D,MAEf,EACA9sB,aAAa,GAEjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,YAAa4H,GAEb,OADYA,EAAKvC,MACNwzB,UAAUC,eAAe3gB,QAAQwc,IAAI/sB,GACpD,EACAS,aAAa,ICpFrB,IAEI,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,GACb,GAAIpK,IAAMoK,EACN,MAAM,IAAI7H,MAAM,WAAWvC,SAASoK,KAExC,OAAO,CACX,GAEJ,QAAS,CACLvK,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChBA,EAAIgB,OAAO,UAAW,CAACxa,EAAGoK,EAAGoP,GACjC,GAEJ,OAAQ,CACJ3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChBA,EAAIgB,OAAO,UAAW,CAACxa,EAAGoK,EAAGoP,GACjC,ICVR,MAAMqoB,GAAe5hB,GAAMxY,KAAK+X,MAAM/X,KAAKC,UAAUuY,IAE9C,SAAS6hB,GAAmBC,EAAU,CAAC,GAS1C,MARuB,iBAAZA,IACPA,EAAU,CAAC,GAEfA,EAAQC,SAAWD,EAAQC,WAAY,EACvCD,EAAQlkB,SAAWkkB,EAAQlkB,WAAY,EACvCkkB,EAAQ/jB,SAAW+jB,EAAQ/jB,WAAY,EACvC+jB,EAAQtG,QAAUsG,EAAQtG,SAAW,GACrCsG,EAAQ3C,WAAa2C,EAAQ3C,YAAc,KACpC2C,CACX,CAEO,MAAME,GAITz/B,YAAY6M,EAAUzM,gBACFA,IAAZyM,IACAA,EAAU,CAAE6yB,gBAAgB,IAGhCziC,KAAKiG,WAAa,CAAC,CAAC,EAAG,CAAC,EAAG,CAAC,GAC5BjG,KAAKsa,SAAW,CAAC,EACjBta,KAAK6F,OAAS7F,KACdA,KAAK0iC,OAAS1iC,KAAKiG,WAAW,GAC9BjG,KAAKia,KAAOja,KAAKiG,WAAW,GAC5BjG,KAAK2iC,KAAO3iC,KAAKiG,WAAW,GAE5BjG,KAAKyC,QAAU,aACfzC,KAAKiV,YAAc,aACnBjV,KAAK4iC,UAAY,GACjB5iC,KAAK6iC,YAAc,KACnB7iC,KAAKmR,SAAW,CAAC,EACjBnR,KAAK8iC,eAAiB,CAAC,EACvB9iC,KAAKomB,SAAW,CAAC,EACjBpmB,KAAKqjB,YAAc,CAAC,EACpBrjB,KAAK+iC,YAAc,IAAIv9B,IACvBxF,KAAKoF,aAAe,CAAC,EACrBpF,KAAKgjC,UAAY,GACjBhjC,KAAKijC,eAAiB,CAAC,EACvBjjC,KAAKwH,YAAc,CAAEW,UAAU,EAAOE,SAAU,GAChDrI,KAAK8c,OAAS,IAAIihB,GAClB/9B,KAAK0qB,SAAW,aAOhB1qB,KAAKkjC,aAAe,CAAC,EACrBljC,KAAKimB,UAAY,IAAIzgB,IACrBxF,KAAKm/B,YAAc,EACfvvB,EAAQ6yB,gBACRziC,KAAKmjC,kBAGTnjC,KAAKojC,QAAUzN,EAAY0N,cAC3BrjC,KAAKsjC,OAAS,IAAInW,EAAWntB,KAAK8c,QAClC9c,KAAKujC,MAAQ,IAAIjZ,EAAUtqB,KAAK8c,QAEhC9c,KAAKujC,MAAM1c,YAAY7mB,KAAKomB,SAChC,CAEArd,aACI,OAAO/I,KAAKujC,MAAM/oB,OACtB,CACArN,YACI,OAAOnN,KAAK8c,MAChB,CACAzX,kBACI,OAAOrF,KAAKoF,YAChB,CACAkI,YAAY/J,GACR,OAAOvD,KAAKoF,aAAa7B,EAC7B,CACAk8B,iBACI,OAAOz/B,KAAKqjB,WAChB,CAIA8f,kBACInjC,KAAKsJ,gBAAgB,eAAgB,MACrCtJ,KAAKsJ,gBAAgB,aAAc,IACnCtJ,KAAKsJ,gBAAgB,gBAAiB,IACtCtJ,KAAKsJ,gBAAgB,eAAgB,IACrCtJ,KAAKsJ,gBAAgB,YAAa,GACtC,CAIAk6B,gBAEI,OADexjC,KAAKujC,MAAMzmB,OAAS9c,KAAKsjC,OAAOxmB,OAAS9c,KAAK8c,OAAS,IAAIihB,EAE9E,CAKA/5B,6BAA6BgiB,GACzB,MAAMyd,EAAoB,GAC1B,IAAK,IAAIllC,EAAI,EAAGA,EAAI,EAAIynB,EAAOjsB,OAAQwE,IAEV,QAAnBynB,EAAOznB,GAAG6B,MACY,WAAvB4lB,EAAOznB,EAAI,GAAG6B,MAA4C,cAAvB4lB,EAAOznB,EAAI,GAAG6B,MAC1B,OAAxB4lB,EAAOznB,EAAI,GAAGqK,QAGlB66B,EAAkBxjC,KAAK,IAChB+lB,EAAOznB,GACVmlC,MAAOnlC,EACPhD,IAAKgD,EAAI,EACTqK,MAAOod,EAAOznB,EAAI,GAAGqK,MAAQ,GAC7BmsB,WAAY/O,EAAOznB,GACnBolC,UAAW3d,EAAOznB,EAAI,KAE1BA,GAAK,GAET,OAAOklC,CACX,CAgBAG,kBAAkB7lC,EAAM2sB,EAAUsR,EAAS6H,GACvC,MAAMX,EAAe,CAAC,EAChBlE,EAAW,IAAIwD,GAAa,CAAEC,gBAAgB,IAK9CqB,EAAS,CAAC1c,EAAM2c,KAElB,MAAM9lB,EAAM4lB,EAAMG,OAAO5c,EAAK6c,SAAU7c,EAAK2N,YAC7CgP,EAAM9jC,KAAKge,EAAIimB,KAAK5gB,MAAMtW,IACtB,MAAMm3B,EAAcn3B,IACpBhN,KAAKuJ,cAAc6d,EAAKxe,MAAOwe,EAAK6c,SAAUE,GAAa,GAC3DjB,EAAa9b,EAAK6c,UAAU7d,SAAW+d,EACvCjB,EAAa9b,EAAK6c,UAAU16B,cAAgB,KAAQvJ,KAAKuJ,cAAc6d,EAAKxe,MAAOwe,EAAK6c,SAAUE,GAAa,EAAM,CAAG,IACzH,EAEDC,EAAY,CAAChd,EAAM2c,KAErB,MAAMM,EAAUR,EAAMS,UAAUld,EAAK6c,SAAU7c,EAAK2N,YAC9CwP,EAAgBxmC,IAIlB,MAAM4c,EAAU2P,EAAUK,kBAAkBvD,EAAK6c,UACjDlmC,EAAO,IAAI4c,cAAoBA,eAAuB5c,EAAO,YAC7D,MAAMioB,EAAShmB,KAAKwkC,YAAYzmC,EAAM,EAAGqpB,EAAK6c,UAC9Cf,EAAa9b,EAAK6c,UAAUje,OAASA,EACrC,MAAMI,EAAW,CAAC,EAIlB,OAHAkE,EAAUM,cAAcwX,GAAYpc,GAAShmB,KAAK8c,OAAQsJ,GAC1D8c,EAAa9b,EAAK6c,UAAU7d,SAAWA,EAEhCqe,EAAQ1mC,EAAMqpB,EAAK6c,SAAU,GAAG,EAG3CF,EAAM9jC,KAAKokC,EAAQH,KAAK5gB,MAAMtW,GAAQu3B,EAAav3B,KAAM,EAEvDy3B,EAAU,CAAC1mC,EAAM2sB,EAAUsR,KAC7B,MAAM+H,EAAQ,GAIRW,EAFOlC,GAAamC,sBAAsB3F,EAASwF,YAAYzmC,EAAM,EAAG2sB,EAAUsR,IAE3D91B,KAAKC,IAAM,IAAMA,KAAM09B,EAAMe,YAAYz+B,EAAEyC,MAAOzC,EAAE4uB,WAAYrK,OAE7F,IAAK,MAAMtD,KAAQsd,EAGf,GAAIxB,EAAa9jC,eAAegoB,EAAK6c,UACjCf,EAAa9b,EAAK6c,UAAUY,MAAM16B,IAAIid,EAAKxe,YAM/C,GADAs6B,EAAa9b,EAAK6c,UAAY,CAAEje,OAAQ,GAAI6e,MAAO,IAAIr/B,IAAI,CAAC4hB,EAAKxe,QAASW,cAAe,OAAW6c,SAAU,CAAC,GAC7F,OAAdgB,EAAKhnB,MAA+B,QAAdgnB,EAAKhnB,KAC3B0jC,EAAO1c,EAAM2c,OAEZ,IAAkB,UAAd3c,EAAKhnB,KAIV,MAAM,IAAI,KAAgB,QAAQgnB,EAAKxe,uCAAwCwe,EAAK2N,WAAW7xB,KAAMkkB,EAAK2N,WAAW3xB,MAHrHghC,EAAUhd,EAAM2c,EAIpB,CAEJ,GAAIA,EAAMhqC,OAAS,EACf,OAAOqnB,QAAQwc,IAAImG,EAEP,EAEpB,IACI,MAAMx5B,EAASk6B,EAAQ1mC,EAAM2sB,EAAUsR,GAYvC,YAVe74B,IAAXoH,GACAA,EAAOkZ,OAAOhC,IAEVzhB,KAAK8c,OAAO1Y,MAAMqd,EAAIxe,KACtBjD,KAAKm/B,aAAa,IAK1Bn/B,KAAKkjC,aAAeA,EACb34B,CACX,CACA,MAAOkX,GAGH,MADAzhB,KAAK8c,OAAO1Y,MAAM,GAAKqd,GACjBA,CACV,CACJ,CASA+iB,YAAYzmC,EAAMqF,EAAMsnB,EAAUsR,EAAU,IACxC,IAAKj+B,EAAK+mC,WAAW9I,GACjB,MAAM,IAAIl5B,MAAM,gCAGpB,MAAM6X,EAAU2P,EAAUK,kBAAkBD,GACtClQ,EAAUxa,KAAK+I,aACjByR,EAAQthB,QAAQyhB,GAAW,GAC3BH,EAAQmH,QAAQhH,GAGpB,MAAM8f,EAAez6B,KAAKojC,QAAQpN,QAAQj4B,GACpCgnC,EAA4B,IAAIxK,GAA4Bx8B,EAAKhE,OAAQ0gC,GACzEuK,EAAiC,IAAIhK,GAA4Bj9B,EAAM,GAAI,IAC3EknC,EAAqB,IAAItJ,GAAmB59B,GAElD,IAAIioB,EACJ,IACIA,EAAShmB,KAAKujC,MAAMnX,SAASqO,EAAav0B,KAAKC,GAAMA,EAAE8L,OAAMpR,KAAK,IAAKuC,EAAMsnB,EACjF,CACA,MAAOjJ,GACH,KAAMA,aAAe,MACjB,MAAMA,EAGV,MAAMyjB,EAAOF,EAA+B9+B,IAAI6+B,EAA0B7+B,IAAIub,EAAI/d,6BAA8BqhC,EAA0B7+B,IAAIub,EAAI9d,4BAC5IP,EAA4B,OAArB8hC,EAAKrhC,YAAuB4d,EAAIre,KAAO6hC,EAAmB/+B,IAAIg/B,EAAKrhC,aAAa,GAAOT,KAC9F8C,EAAM41B,GAAiC,IAAKoJ,EAAM9hC,QAAQ44B,GAChE,MAAM,IAAI,KAAeva,EAAIxe,IAAKiD,EAAIrC,YAAaqC,EAAIpC,UAAWoC,EAAI9C,KAAMsnB,EAChF,CAgCA,OA9BA1E,EAAS+T,EAAa/T,GAEtBA,EAASuS,EAAYvS,GAErBA,EAAS2R,EAAoB3R,GAE7BA,EZtRD,SAA6BA,GAUhC,MAAMuQ,EAAQa,EAAYpR,EAAQ,OAC5BgS,EAAe,GACrB,IAAImN,GAAe,EACftN,EAAe,EACfC,EAAiB,EACrB,MAAMC,EAAmB30B,IAErBA,EAAKxE,SAAStF,IACK,MAAXA,EAAE8G,MACFy3B,IAEW,MAAXv+B,EAAE8G,MACFy3B,IAEW,MAAXv+B,EAAE8G,MACF03B,IAEW,MAAXx+B,EAAE8G,MACF03B,GACJ,GACF,EAEN,IAAK,IAAIv5B,EAAI,EAAGA,EAAIg4B,EAAMx8B,OAAQwE,IAAK,CACnC,MAAM6E,EAAOmzB,EAAMh4B,GAEnB,GAAIg5B,EAAYn0B,GACZ,SAEJ,MAAM80B,EAAYT,EAAcr0B,GAEhC,GAAIy0B,EAAe,GAAKC,EAAiB,EAAG,CACxCC,EAAgB30B,GAChB,QACJ,CAEA,GAAI+hC,GAAe,EAAG,CAClB,MAAMC,EAAalN,EAAUlmB,OAC7B,KAAOmzB,GAAeC,GAAY,CAC9B,MAAMC,EAASnN,EAWf,GATIlB,EAAWqO,IAAYF,IAAgBC,IAKvC7O,EAAMh4B,EAAI,GAAG0B,KAAK42B,EAAS,OAAQ,OAAQwO,IAC3C9O,EAAMh4B,EAAI,GAAG0B,KAAK42B,EAAS,MAAO,KAAMwO,KAE5CrN,EAAa1pB,QACT0pB,EAAaj+B,OAAS,GAGrB,CACDorC,GAAe,EACf,KACJ,CALIA,EAAcnN,EAAaA,EAAaj+B,OAAS,EAMzD,CACJ,CAGA,GADAg+B,EAAgB30B,GACZy0B,EAAe,GAAKC,EAAiB,EACrC,SAGJ,MAAMwN,EAAQpO,EAAuB9zB,GAClB,MAAfkiC,EAAMllC,OAENm2B,EAAMh4B,GAAKg4B,EAAMh4B,GAAGM,QAAOvF,GAAKA,IAAMgsC,IACtCH,EAAcG,EAAMtzB,OACpBgmB,EAAa/3B,KAAKklC,GAE1B,CACA,GAAI5O,EAAMx8B,OAAS,GAAKi+B,EAAaj+B,OAAS,EAAG,CAE7C,IAAIT,EAAI0sB,EAAO,GACf,IAAK,IAAIznB,EAAIg4B,EAAMx8B,OAAS,EAAGwE,GAAK,EAAGA,IAAK,CACxC,MAAM6E,EAAOmzB,EAAMh4B,GACnB,GAAI6E,EAAKrJ,OAAS,EAAG,CACjBT,EAAI8J,EAAKA,EAAKrJ,OAAS,GACvB,KACJ,CACJ,CAEA,IAAK,IAAIwE,EAAI,EAAGA,EAAIy5B,EAAaj+B,OAAQwE,IACrCg4B,EAAMA,EAAMx8B,OAAS,GAAGkG,KAAK42B,EAAS,OAAQ,OAAQv9B,IACtDi9B,EAAMA,EAAMx8B,OAAS,GAAGkG,KAAK42B,EAAS,MAAO,KAAMv9B,GAE3D,CACA,MAAMiR,EAAS0sB,EAAeV,GAI9B,OAHIQ,GACAzZ,QAAQC,IAAI,MAAOiZ,EAAYjsB,IAE5BA,CACX,CY+KiBg7B,CAAoBvf,GAE7BA,EAASA,EAAO9f,KAAK8hB,IACjB,MAAMkd,EAAOF,EAA+B9+B,IAAI6+B,EAA0B7+B,IAAI8hB,EAAM8E,wBAA0B,GAAIiY,EAA0B7+B,KAAK8hB,EAAM8E,wBAA0B,IAAM9E,EAAM+E,wBAA0B,KACvN,IAAI3pB,EAAO4kB,EAAM5kB,KACbyiB,EAAS,EACb,GAAmB,QAAfmC,EAAM5nB,MAAqC,OAAnB8kC,EAAKphC,UAAoB,CAGjD,MAAMwa,EAAM2mB,EAAmB/+B,IAAIg/B,EAAKphC,WAAW,GACnDV,EAAOkb,EAAIlb,KACXyiB,EAASvH,EAAIuH,MACjB,MACK,GAAyB,OAArBqf,EAAKrhC,YAAsB,CAChC,MAAMya,EAAM2mB,EAAmB/+B,IAAIg/B,EAAKrhC,aAAa,GACrDT,EAAOkb,EAAIlb,KACXyiB,EAASvH,EAAIuH,MACjB,CACA,MAAO,IACAmC,KACA8T,GAAiC,CAAE14B,OAAMyiB,SAAQhiB,YAAaqhC,EAAKrhC,YAAaC,UAAWohC,EAAKphC,WAAak4B,GAChHjR,QAAS/C,EAAMre,KAClB,IAEEqc,CACX,CAQAwf,aAAaxf,EAAQyE,EAASC,GAE1B,OADY1qB,KAAKujC,MAAM/Y,cAAcxE,EAAQyE,EAASC,EAE1D,CAKA9D,MAAMhX,EAAUzM,WACPyM,IAAWA,EAAQ61B,mBAKpBzlC,KAAKigC,eAQTjgC,KAAKiG,WAAa,CAACjG,KAAKiG,WAAW,GAAI,CAAC,EAAG,CAAC,GAC5CjG,KAAKia,KAAOja,KAAKiG,WAAW,GAC5BjG,KAAK2iC,KAAO3iC,KAAKiG,WAAW,GAC5BjG,KAAK0iC,OAAS1iC,KAAKiG,WAAW,GAC9BjG,KAAKsa,SAAW,CAAC,EAEjBta,KAAKomB,SAAW,CAAC,EACjB,IAAK,MAAM7iB,KAAQrE,OAAO6C,KAAK/B,KAAKia,MAAO,CACvC,MAAMyrB,EAAW1lC,KAAK8iC,eAAev/B,GAChCmiC,IAGL1lC,KAAKomB,SAAS7iB,GAAQyE,KAAK+X,MAAM/X,KAAKC,UAAUy9B,IACpD,CACA1lC,KAAKujC,MAAM1c,YAAY7mB,KAAKomB,UAC5BpmB,KAAK8c,OAAOtiB,OAChB,CAUAmrC,aAAa5nC,EAAMqF,EAAMsnB,EAAU7mB,GAE/B,IAAImiB,EAAShmB,KAAKwkC,YAAYzmC,EAAMqF,EAAMsnB,EAAU,IAEpD,GAAoB,OAAhB7mB,EACA,IAAK,MAAMmkB,KAAShC,EAChBgC,EAAMnkB,iBAAcV,EACpB6kB,EAAMlkB,eAAYX,OAItB,IAAK,MAAM6kB,KAAShC,OACU7iB,IAAtB6kB,EAAMnkB,cACNmkB,EAAMnkB,aAAeA,QAEDV,IAApB6kB,EAAMlkB,YACNkkB,EAAMlkB,WAAaD,GAK/B,MAAM+hC,EAAgB5f,EAAOnnB,QAAQvF,GAAiB,iBAAXA,EAAE8G,MAAsC,kBAAX9G,EAAE8G,OACrE8F,KAAKC,IAAM,IAAMA,MAEtB,OADA6f,EAAShmB,KAAKwlC,aAAaxf,GAAQ,EAAO0E,GACnC,CAAE1E,SAAQ4f,gBACrB,CAQAC,yBAAyB7f,EAAQ8f,EAAe,IAAItgC,KAEhD,MAAMugC,EAAgB,GACtB,IAAK,MAAMrnC,KAAK8jC,GAAamC,sBAAsB3e,GAAQ3F,UAAW,CAElE,GAAIylB,EAAan5B,IAAIjO,EAAEkK,OAAQ,CAC3Bm9B,EAAc9lC,QAAQ+lB,EAAO5rB,OAAQsE,EAAEglC,OAAS,GAAKhlC,EAAEnD,KAAO,IAAMmD,EAAEglC,OAAS,KAC/E,QACJ,CACA,MAAMO,EAAW/kC,OAAO6C,KAAK/B,KAAKkjC,cAAclhC,MAAMrD,GAAQqB,KAAKkjC,aAAavkC,GAAKkmC,MAAMl4B,IAAIjO,EAAEkK,SACjG,QAAiBzF,IAAb8gC,EAAwB,CACxB,IAAKvlC,EAAEq2B,WACH,MAAM,IAAIjyB,MAAM,QAAQpE,EAAEkK,sBAE9B,MAAM,IAAI,KAAe,QAAQlK,EAAEkK,qBAAsBlK,EAAEq2B,WAAWlxB,aAAe,EAAGnF,EAAEq2B,WAAWjxB,WAAa,EAAGpF,EAAEq2B,WAAW3xB,KAAM1E,EAAEq2B,WAAW7xB,KACzJ,CACAlD,KAAKkjC,aAAae,GAAU16B,gBAC5B,MAAMy8B,EAAW5D,GAAYpiC,KAAKkjC,aAAae,GAAUje,QACzD8f,EAAa37B,IAAIzL,EAAEkK,OACnBm9B,EAAc9lC,QAAQD,KAAK6lC,yBAAyBG,EAAUF,IAC9DC,EAAc9lC,QAAQ+lB,EAAO5rB,OAAOsE,EAAEglC,OAAS,GAAIhlC,EAAEnD,KAAO,IAAMmD,EAAEglC,OAAS,MAAOsC,GACxF,CACA,OAAOD,CACX,CAMAE,wBAAwBjgB,GAEpB,MAAM+f,EAAgB,GACtB,IAAK,MAAMrnC,KAAK8jC,GAAamC,sBAAsB3e,GAAQ3F,UAAW,CAElE,MAAM4jB,EAAW/kC,OAAO6C,KAAK/B,KAAKkjC,cAAclhC,MAAMrD,GAAQqB,KAAKkjC,aAAavkC,GAAKkmC,MAAMl4B,IAAIjO,EAAEkK,cAChFzF,IAAb8gC,GACAjkC,KAAKkjC,aAAae,GAAU16B,gBAGhCw8B,EAAc9lC,QAAQ+lB,EAAO5rB,OAAOsE,EAAEglC,OAAS,GAAIhlC,EAAEnD,KAAO,IAAMmD,EAAEglC,OAAS,IACjF,CACA,OAAOqC,CACX,CAEAG,IAAInoC,EAAM2sB,EAAW,aAAcsR,EAAU,GAAImK,GAAqB,GAElE,IAAIngB,EAAShmB,KAAKwkC,YAAYzmC,EAAM,EAAG2sB,EAAUsR,GAEjD,MAAMoK,EAAyBD,EAAqBnmC,KAAKimC,wBAAwBjgB,GAAUhmB,KAAK6lC,yBAAyB7f,OAAQ7iB,GACjI,IAAK,MAAM7J,KAAK8sC,EACG,SAAX9sC,EAAE8G,MAA8B,QAAX9G,EAAE8G,OACvB9G,EAAE8G,KAAO,WAGjB,GAAIgmC,EAAuBrsC,QAAU,EAEjC,IAAK,IAAIwE,EAAI,EAAGA,EAAI6nC,EAAuBrsC,OAAQwE,GAAK,EAAG,CACvD,IAAIoc,EAAUyrB,EAAuB7nC,EAAI,GAAGqK,MAC5C+R,EAAU2P,EAAUK,kBAAkBhQ,GAClC3a,KAAKujC,MAAM/oB,QAAQthB,QAAQyhB,GAAW,GACtC3a,KAAKujC,MAAM/oB,QAAQva,KAAK0a,EAEhC,CAGJ,MAAMirB,EAAgB5f,EAAOnnB,QAAQvF,GAAiB,iBAAXA,EAAE8G,MAAsC,kBAAX9G,EAAE8G,OACrE8F,KAAKC,IAAM,IAAMA,MACtB6f,EAAShmB,KAAKwlC,aAAaxf,GAAQ,EAAM0E,GACzC,IAAK,IAAInsB,EAAI,EAAGA,EAAIynB,EAAOjsB,OAAQwE,IAC/B,GAAIynB,EAAOznB,IAAyB,SAAnBynB,EAAOznB,GAAG6B,KAAiB,CACxC,MAAM4lC,EAAWhmC,KAAK2lC,aAAa3f,EAAOznB,GAAGqK,MAAOod,EAAOznB,GAAG6E,KAAMsnB,EAAU1E,EAAOznB,GAAGsF,aAAe,GACvG+hC,EAAc3lC,QAAQ+lC,EAASJ,eAC/B5f,EAAO5rB,OAAOmE,EAAG,KAAMynC,EAAShgB,QAChCznB,GACJ,CAGJ,OADAyB,KAAK8c,OAAOlI,MAAM,gBAAkB5M,KAAKC,UAAU+d,EAAQ,KAAM,IAC1D,CAAE4f,gBAAe5f,SAAQqgB,cAAeD,EACnD,CAIArmB,MAAMhiB,EAAM2sB,EAAUsR,EAAU,IAE5Bh8B,KAAKujC,MAAM1c,YAAY7mB,KAAKomB,UAC5BpmB,KAAKsjC,OAAOzc,YAAY7mB,KAAKomB,UAE7B,MAAMkgB,EAActmC,KAAKkmC,IAAInoC,EAAM2sB,EAAUsR,GAE7C,IAAIlyB,EACJ,IACI9J,KAAKsjC,OAAOx9B,QAAU,OACtBgE,EAAM9J,KAAKsjC,OAAOvjB,MAAMumB,EAAYtgB,OAAQ0E,EAChD,CACA,MAAOjJ,GACH,GAA+B,iBAApBA,EAAI5d,YACX,MAAM,cAAyB4d,EAAIld,QAAS+hC,EAAYtgB,OAAOhmB,KAAKsjC,OAAOhc,aAE/E,MAAM7F,CACV,CAKA,OAHAzhB,KAAKimB,UAAYjmB,KAAKsjC,OAAOrd,UAC7BjmB,KAAKumC,oBACLvmC,KAAK8c,OAAOlI,MAAM,gBAAkB5M,KAAKC,UAAU6B,EAAK,KAAM,IACvDA,CACX,CACA08B,aAAa18B,GACT,MAAM28B,EAAQ,CAAC38B,GAEf,IADA9J,KAAKimB,UAAY,IAAIzgB,IACdihC,EAAM1sC,OAAS,GAAG,CACrB,MAAM2sC,EAAOD,EAAMn4B,MACfo4B,SAAsD,OAAfA,EAAKz8B,YAAiC9G,IAAfujC,EAAKz8B,OACnEjK,KAAK2mC,mBAAmBF,EAAOz+B,KAAK+X,MAAM/X,KAAKC,UAAUy+B,EAAKz8B,QAEtE,CACA,OAAOjK,KAAKumC,mBAChB,CACAI,mBAAmBC,EAAUC,GACzB,KAAOA,EAAW9sC,OAAS,GAAG,CAC1B,MAAMkQ,EAAQ48B,EAAWv4B,MACrBrE,SACAjK,KAAK8mC,kBAAkB78B,EAAO28B,EAAUC,EAEhD,CACJ,CACAC,kBAAkB78B,EAAO28B,EAAUC,GAC3B,CAAC,OAAQ,gBAAgBx4B,SAASpE,EAAM7J,OAAwB,OAAf6J,EAAM1G,WAAgCJ,IAAf8G,EAAM1G,MAC9EvD,KAAKimB,UAAU9b,IAAIF,EAAM1G,MAE7BqjC,EAAS3mC,KAAK,CAACgK,EAAOA,EAAMA,QAE5B48B,EAAW5mC,KAAKib,MAAM2rB,EAAY,CAAC58B,EAAMrB,OAAOlP,OAAOuQ,EAAM4G,MACjE,CACA01B,oBACI,IAAK,MAAMl1B,KAAQrR,KAAKimB,UACfjmB,KAAK+iC,YAAYp2B,IAAI0E,IACtBrR,KAAKimB,UAAU9qB,OAAOkW,GAG9B,OAAOrR,KAAKimB,SAChB,CAQA8gB,QAAQhpC,EAAM2sB,EAAU9lB,GAAS,EAAOo3B,EAAU,IAC9C,MAAMlzB,EAAMu5B,KACZv5B,EAAIy5B,SAAW39B,EACfkE,EAAIkzB,QAAUA,EAEd,OADYh8B,KAAKgnC,gBAAgBjpC,EAAM2sB,EAAU5hB,GACtCqM,UACf,CAEA6xB,gBAAgBjpC,EAAM2sB,EAAU9a,EAAUzM,WACrB,KAAbunB,IACAA,EAAW,mBAECvnB,IAAZyM,IACAA,EAAUyyB,MAEd,IACQzyB,EAAQwO,UACRpe,KAAK4mB,QAELhX,EAAQ2O,UACRve,KAAKigC,eAGTjgC,KAAKgjC,UAAUnkC,QAAOtF,GAAqB,gBAAhBA,EAAE0tC,YAA6B/gC,KAAI9M,GAAKA,EAAEglC,SAASrgC,KAE9E,MAAM+L,EAAM9J,KAAK+f,MAAMhiB,EAAM2sB,EAAU9a,EAAQosB,SAE/Ch8B,KAAKgjC,UAAUnkC,QAAOtF,GAAqB,mBAAhBA,EAAE0tC,YAAgC/gC,KAAI9M,GAAKA,EAAEglC,SAASt0B,KAEjF,MAAMo9B,EAAUlnC,KAAKmnC,aAAar9B,EAAK,IAAI,KAAe8F,EAAQ2yB,WAGlE,OADAviC,KAAKgjC,UAAUnkC,QAAOtF,GAAqB,kBAAhBA,EAAE0tC,YAA+B/gC,KAAI9M,GAAKA,EAAEglC,SAAS8I,KACzEA,CACX,CACA,MAAO9tC,GAEH,MADA4G,KAAK8c,OAAO1Y,MAAMhL,GACZA,CACV,CACJ,CAMA+tC,aAAar9B,EAAKhB,GAEd,MAAM4K,EAAO5J,EAAIhE,SAAW,GAE5B,GAAa,SAAT4N,EACA,OAAO,QAAW1T,KAAM8J,EAAKhB,GAGjC,GAAa,WAAT4K,EAEA,OADA1T,KAAK8c,OAAO1P,KAAK,gFACV,aAAsBpN,KAAM8J,EAAKhB,EAAIlE,QAGhD,MAAMwiC,EAASpnC,KAAKijC,eAAevvB,GACnC,IAAK0zB,EACD,MAAM,IAAItkC,MAAM,cAAc4Q,mBAElC,OAAO0zB,EAAOC,SAASrnC,KAAM8J,EAAKhB,EAAIlE,OAC1C,CAEAuU,iBAAiBzF,EAAMuK,GACnBje,KAAKijC,eAAevvB,GAAQuK,CAChC,CASAF,WAAWhgB,EAAMkH,EAAOqiC,EAAS1iC,EAAQo3B,EAAU,IAC/C,MAAMlrB,EAAOuxB,GAAmB,CAC5BjkB,SAAUkpB,EACV/oB,SAAU+oB,EACV/E,SAAU39B,EACVo3B,YAEJ,OAAOh8B,KAAKunC,OAAOxpC,EAAMkH,EAAO6L,EACpC,CAEAmvB,eAEIjgC,KAAK4iC,UAAUhkC,SAASmb,IACpBA,EAAI9T,WAAW,GAAG2Y,YAAa,EAC/B7E,EAAI6M,OAAO,IAEf5mB,KAAK4iC,UAAY,EACrB,CAMA4E,OAAOzpC,EAAM4hC,GAET3/B,KAAKgjC,UAAUnkC,QAAOtF,GAAqB,cAAhBA,EAAE0tC,YAA2B/gC,KAAI9M,GAAKA,EAAEglC,SAASuB,KAC5E3/B,KAAK6iC,YAAclD,EACnB3/B,KAAK6iC,YAAY3D,WAAanhC,EAC9B,IAEc,IAAIigB,SAASjgB,GACrBmd,MAAMykB,EACZ,CACA,MAAOle,GAIH,MAFAke,EAAWR,cACXn/B,KAAKmN,YAAY/I,MAAMqd,GACjBA,CACV,CAEAzhB,KAAKgjC,UAAUnkC,QAAOtF,GAAqB,WAAhBA,EAAE0tC,YAAwB/gC,KAAI9M,GAAKA,EAAEglC,SAASuB,IAC7E,CASAC,QAAQ7hC,EAAM2sB,EAAU9a,EAAUzM,WAE9ByM,EAAUyyB,GAAmBzyB,GAC7B,MAAM0O,EAAMte,KAAKgnC,gBAAgBjpC,EAAM2sB,EAAU9a,GAE3C+vB,EAAa3/B,KAAKynC,cAAc73B,EAAS0O,EAAIpK,IAAKwW,GAGxD,OADA1qB,KAAKwnC,OAAOlpB,EAAInJ,WAAYwqB,GACrBA,CACX,CAQA5hB,eAAehgB,EAAM2sB,EAAU9a,EAAUzM,WAErCyM,EAAUyyB,GAAmBzyB,GAC7B,MAAM0O,EAAMte,KAAKgnC,gBAAgBjpC,EAAM2sB,EAAU9a,GAE3C+vB,EAAa3/B,KAAKynC,cAAc73B,EAAS0O,EAAIpK,IAAKwW,GAGxD,OADA1qB,KAAKwnC,OAAOlpB,EAAInJ,WAAYwqB,GACrBA,CACX,CACA8H,cAAc73B,EAASsE,EAAKwW,GAExB,IAAI3L,EAAInP,EAAQ+vB,WAehB,OAdK5gB,IAGGA,EADA/e,KAAK4iC,UAAU7oC,OAAS,IAA0B,IAArB6V,EAAQ2O,WAA2C,IAArB3O,EAAQwO,SAC/Dpe,KAAK4iC,UAAU5iC,KAAK4iC,UAAU7oC,OAAS,GAGvC,IAAIglC,GAAW/+B,KAAMkU,EAAMlU,KAAK4iC,UAAU7oC,OAAS,GAG3DglB,EAAE9Y,WAAW,GAAG,QAAUqkB,EAAUK,kBAAkBD,IAEtD1qB,KAAK4iC,UAAU1pC,QAAQ6lB,GAAK,GAC5B/e,KAAK4iC,UAAU3iC,KAAK8e,GAEjBA,CACX,CAMAof,YAAY8I,EAAW7I,GACnBp+B,KAAKgjC,UAAU/iC,KAAK,CAAEgnC,YAAW7I,YACrC,CAQA32B,KAAK1J,EAAMkH,EAAO+2B,EAAU,GAAIuG,GAAW,GACvC,MAAM3yB,EAAUyyB,KAGhB,OAFAzyB,EAAQosB,QAAUA,EAClBpsB,EAAQ2yB,SAAWA,EACZviC,KAAK4/B,QAAQ7hC,EAAMkH,EAAO2K,EACrC,CAQA83B,IAAI3pC,EAAMkH,EAAQ,aAAc+2B,EAAU,IACtC,MAAMpsB,EAAUyyB,KAEhB,OADAzyB,EAAQosB,QAAUA,EACXh8B,KAAK4/B,QAAQ7hC,EAAMkH,EAAO2K,EACrC,CAOA+3B,kBAAkB5pC,EAAM2sB,EAAU5hB,EAAM,MACxB,OAARA,IACAA,EAAM,IAAI,MAEd,MAAMgB,EAAM9J,KAAK+f,MAAMhiB,EAAM2sB,GAC7B,OAAO1qB,KAAKmnC,aAAar9B,EAAKhB,GAAKsM,UACvC,CAMAhM,UAAUC,EAAIu+B,GAAa,GAEvB,MAAM3tB,EAAOja,KAAKiG,WAAW,QACX9C,IAAd8W,EAAK7P,OACL6P,EAAK7P,KAAO,CAAC,GAGjB,IAAK,MAAMzL,KAAO0K,EAAI,CAClB,MAAMlD,EAAIkD,EAAG1K,GAKb,GAJAqB,KAAKomB,SAASznB,GAAOwH,EACjByhC,IACA5nC,KAAK8iC,eAAenkC,GAAOqJ,KAAK+X,MAAM/X,KAAKC,UAAU9B,KAE1C,SAAXA,EAAE/F,KACF6Z,EAAKtb,GAAOwH,EAAE8C,OAEb,IAAe,UAAX9C,EAAE/F,MAA+B,QAAX+F,EAAE/F,KAQ7B,MADAkd,QAAQlZ,MAAM,eAAgB+B,GACxB,IAAIrD,MAAM,iBAPhBmX,EAAKtb,GAAOwH,EAAEyC,MACdqR,EAAK7P,KAAKzL,GAAO,CACb2H,SAAsB,UAAXH,EAAE/F,KAMrB,CAEY,QAARzB,GAAyC,MAAxBA,EAAI4c,UAAU,EAAG,IAGtCvb,KAAK+iC,YAAY54B,IAAIxL,EACzB,CACJ,CAOA2K,gBAAgBE,EAASH,EAAIu+B,GAAa,GAItC,GAHA5nC,KAAKmR,SAAS3H,GAAWH,EACzBrJ,KAAKqjB,YAAY7Z,GAAW,IAED,iBAAfH,EAAG,OAAsB,CACjC,MAAMgR,EAAMhR,EAAG,cACRA,EAAG,OAEVA,EADgB,IAAIG,SACN6Q,CAClB,CAEA,GAAIhR,EAAGe,MAAQf,EAAGe,KAAKxB,OAA8B,iBAAbS,EAAO,KAAgB,CAC3D,MAAMe,EAAOf,EAAGe,YACTf,EAAGe,KAGVf,EADgB,KADGe,EAAKxB,MAAM+Q,YAAcnQ,IACVvP,QAAQ,IAAK,OACjCmQ,CAClB,CACApK,KAAKoJ,UAAUC,EAAIu+B,EACvB,CAQAr+B,cAAcC,EAASq+B,EAAOx+B,EAAIu+B,GAAa,GAEvCp+B,EAAQtQ,QAAQ,OAAS,IACzBsQ,EAAUA,EAAQvP,QAAQ,MAAO,MAErC+F,KAAKsJ,gBAAgBE,EAASH,EAAIu+B,QACAzkC,IAA9BnD,KAAKqjB,YAAY7Z,KACjBxJ,KAAKqjB,YAAY7Z,GAAWq+B,EAEpC,CASAn+B,QAAQ/K,EAAKgL,EAAMV,EAAI6+B,GAAa,EAAM5+B,GAAU,GAChDlJ,KAAKomB,SAASznB,GAAO,CAAEgL,OAAMV,KAAI7I,KAAM,OAAQkR,YAAaw2B,EAAY5+B,WACxElJ,KAAK8iC,eAAenkC,GAAOyjC,GAAYpiC,KAAKomB,SAASznB,IACrDqB,KAAKiG,WAAW,GAAGtH,GAAOsK,CAC9B,CAIA8+B,QAAQppC,EAAKgL,EAAMV,EAAI6+B,GAAa,EAAM5+B,GAAU,GAChDlJ,KAAK0J,QAAQ/K,EAAKgL,EAAMV,EAAI6+B,EAAY5+B,EAC5C,CAMAU,QAAQjL,GACJ,OAAOqB,KAAKomB,SAASznB,EACzB,CAIA4oC,OAAOxpC,EAAM2sB,EAAU5Z,EAAMkrB,EAAU,GAAI2D,EAAax8B,WAMpD,OAJA2N,EAAKkrB,QAAUA,EACX2D,IACA7uB,EAAK6uB,WAAaA,GAEf3/B,KAAK4/B,QAAQ7hC,EAAM2sB,EAAU5Z,EACxC,CAQAqN,MAAMpgB,EAAMkH,EAAO6L,EAAMkrB,EAAU,IAC/B,OAAOh8B,KAAKunC,OAAOxpC,EAAMkH,EAAO6L,EAAMkrB,EAC1C,CAOAje,eAAehgB,EAAMkH,EAAQ,aAAc+2B,EAAU,IACjD,MAAMlrB,EAAOuxB,GAAmB,CAAE9jB,UAAU,EAAMH,UAAU,IAC5D,OAAOpe,KAAKunC,OAAOxpC,EAAMkH,EAAO6L,EAAMkrB,EAC1C,EC34BJ,MAAM,GAAuB,CAAC,WAAY,YAkB1C,MAAMgM,GAAoB,yBAC1B,IAAIC,GAAiBD,GAed,SAASE,GAAuBrqB,GACnC,MAAMulB,EAAUzN,EAAY0N,cACtBlM,EAAMtZ,EAAI9jB,OAChB,IAAIwQ,EAAS,GACT49B,EAAM,GACN5pC,EAAI,EACJ6pC,GAAY,EAChB,KAAO7pC,EAAI44B,GAAK,CACZ,MAAM32B,EAAIqd,EAAIgC,OAAOthB,GACf63B,EAAMvY,EAAItC,UAAUhd,EAAG,GACvB8pC,EAAYjF,EAAQrN,WAAWv1B,GAC/B8nC,EAAclS,EAAIl8B,MAAM,IAAIgM,KAAK1F,GAAM4iC,EAAQrN,WAAWv1B,KAAIK,KAAK,IAEzE,GAAY,KAARsnC,EAAJ,CAmBA,OAAQE,GACJ,IAAK,IACL,IAAK,IACDF,EAAM3nC,EACN+J,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SAER,OAAQ63B,GACJ,IAAK,KACD+R,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,EACL,SACJ,IAAK,KACD4pC,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,EACL,SAGU,MAAd8pC,EAMgB,OAAhBC,EAOgB,OAAhBA,GAMJ/9B,GAAU/J,EACVjC,MANI4pC,EAAM,KACNC,GAAY,EACZ7pC,GAAK,IATL4pC,EAAM,KACNC,GAAY,EACZ7pC,GAAK,IARL4pC,EAAM,KACNC,GAAY,EACZ7pC,IAnDJ,MAfQ4pC,KAAwB,IAAfA,EAAIpuC,OAAesuC,EAAYC,IACnCF,IACD79B,GAAUsT,EAAIoM,OAAO1rB,EAAG4pC,EAAIpuC,SAEhCwE,GAAK4pC,EAAIpuC,OACTquC,GAAY,EACZD,EAAM,KAGDC,IACD79B,GAAU/J,GAEdjC,IAwEZ,CACA,OAAOgM,CACX,CAoHO,SAASg+B,GAAUnlC,GAEtB,MAAM8a,EAAI,cAAc1Z,KAAK0jC,GAAuB9kC,IACpD,OAAK8a,EAGEA,EAAE,GAFE,EAGf,CAIO,SAASiO,GAAY/oB,GACxB,IAAIic,EAAM,EACV,IAAK,IAAI9gB,EAAI,EAAGA,EAAI6E,EAAKrJ,OAAQwE,IAAK,CAClC,MAAMyqB,EAAK5lB,EAAKyc,OAAOthB,GACvB,GAAW,MAAPyqB,EAIJ,GAAW,MAAPA,EAIJ,GAAW,MAAPA,EAAJ,CAIA,GAAW,OAAPA,EAIJ,MAHI3J,GAAO,CAFX,MAFIA,GAAO,OAJPA,GAAO,OAJPA,GAgBR,CACA,OAAOA,CACX,CACO,SAASmpB,GAAe3qB,GAC3B,MAAMulB,EAAUzN,EAAY0N,cACtBlM,EAAMtZ,EAAI9jB,OAChB,IAAIwQ,EAAS,GACT49B,EAAM,GACN5pC,EAAI,EACR,KAAOA,EAAI44B,GAAK,CACZ,MAAM32B,EAAIqd,EAAIgC,OAAOthB,GACf63B,EAAMvY,EAAIoM,OAAO1rB,EAAG,GACpB8pC,EAAYjF,EAAQrN,WAAWv1B,GAC/B8nC,EAAclS,EAAIl8B,MAAM,IAAIgM,KAAK1F,GAAM4iC,EAAQrN,WAAWv1B,KAAIK,KAAK,IAEzE,GAAY,KAARsnC,EAAJ,CAmBA,OAAQE,GACJ,IAAK,IACL,IAAK,IACDF,EAAM3nC,EACN+J,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SACJ,IAAK,IACD4pC,EAAM,IACN59B,GAAU/J,EACVjC,IACA,SAER,OAAQ63B,GACJ,IAAK,KACD+R,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,EACL,SACJ,IAAK,KACD4pC,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,EACL,SAGU,MAAd8pC,EAMgB,OAAhBC,EAOgB,OAAhBA,GAMJ/9B,GAAU/J,EACVjC,MANI4pC,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,IATL4pC,EAAM,KACN59B,GAAU6rB,EACV73B,GAAK,IARL4pC,EAAM,KACN59B,GAAU/J,EACVjC,IAnDJ,MAfQ4pC,KAAwB,IAAfA,EAAIpuC,OAAesuC,EAAYC,IACxC/9B,GAAUsT,EAAIoM,OAAO1rB,EAAG4pC,EAAIpuC,QAC5BwE,GAAK4pC,EAAIpuC,OACTouC,EAAM,KAIF59B,GADM,OAAN/J,EACUynC,GAGAznC,EAEdjC,IAwEZ,CACA,OAAOgM,CACX,CC7XA,MAAM,GDmYC,SAA2BxM,GAC9B,MAAMwM,EAAS,CACXgsB,MAAO,GACPkS,MAAO,GACPC,QAAS,GACTC,OAAQ,IAENpS,EAAQiS,GAAezqC,GAAM7D,MAAM,MACnCgsB,EAAQ,GACd,IAAI0iB,EAAY,EACZ/4B,EAAOsc,GAAYoK,EAAM,IAC7B,IAAK,MAAMnzB,KAAQmzB,EAAO,CACtB,MAAMsS,EAAWzlC,EAAKlJ,MAAM+tC,IAAgBluC,OACtC+uC,EAAQZ,GAAuB9kC,GAE/B2lC,EAA8C,KAAnCD,EAAM7uC,QAAQ,YAAa,IACtC4V,EACAsc,GAAY2c,GAGlB,GAFAv+B,EAAOgsB,MAAMt2B,QAAQiC,MAAM2mC,GAAUG,KAAKD,IAC1Cx+B,EAAOo+B,OAAO1oC,QAAQiC,MAAM2mC,GAAUG,KAAKT,GAAUO,KACjDj5B,EAAOk5B,EACP7iB,EAAMjmB,KAAK2oC,EAAY,QAEtB,GAAI/4B,EAAOk5B,EAAS,CACrB,MAAM7kC,EAAOgiB,EAAM5X,WACNnL,IAATe,GACAqG,EAAOk+B,MAAMxoC,KAAK,CAACiE,EAAM0kC,GAEjC,CACA,MAAMK,OAAqC9lC,IAA5B+iB,EAAMA,EAAMnsB,OAAS,GAAmBmsB,EAAMA,EAAMnsB,OAAS,GAAK,KACjFwQ,EAAOm+B,QAAQzoC,QAAQiC,MAAM2mC,GAAUG,KAAKC,IAC5Cp5B,EAAOk5B,EACPH,GAAaC,CACjB,CAEA,IAAK,MAAMzhB,KAAQlB,EACf3b,EAAOk+B,MAAMxoC,KAAK,CAACmnB,EAAMwhB,IAE7B,OAAOr+B,CACX,ECzaM,GD6aFg+B,GC5aE,GD6aFpc,GC5aE,GDMN,SAA+BpuB,GAC3B,OAAOs4B,EAAct4B,EAAM,GAC/B,ECqFO,SAASmrC,GAAgBC,EAAejwB,EAAOtQ,EAAOwgC,EAAuBC,GAChF,MAAMjpC,EAxFH,SAAkB4nB,GACrB,OAAQA,EAAM5nB,MACV,IAAK,eAAgB,MAAO,eAC5B,IAAK,gBAAiB,MAAO,gBAC7B,IAAK,WACL,IAAK,WAIL,IAAK,KACL,IAAK,MACL,IAAK,QAGL,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,UAGL,IAAK,IACL,IAAK,IACL,IAAK,OACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,KACL,IAAK,QACL,IAAK,MACL,IAAK,KACL,IAAK,SACD,MAAO,kBAhCX,IAAK,OAAQ,MAAO,uBACpB,IAAK,SAAU,MAAO,mBAgCtB,IAAK,MACL,IAAK,KACD,MAAO,mBAEX,IAAK,WACL,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,MAAO,mBACX,IAAK,SACL,IAAK,YACD,MAAO,eACX,IAAK,OACD,MAAI,CAAC,KAAM,KAAM,KAAM,OAAQ,MAAMiO,SAAS2Z,EAAMpf,OACzC,oBAGA,iBAEf,QACI,MAAO,eAEnB,CASiBzK,CAASgrC,GAChBG,EAuDH,SAA8BthB,EAAO9O,GACxC,MAAM9O,EAAQ6H,GAAS,qCAAqC,GAAWA,YACvE,GAAmB,SAAf+V,EAAM5nB,KAAiB,CACvB,MAAMuZ,EAAa4vB,GAAevhB,EAAMpf,MAAQ,GAAIsQ,KAAW8O,EAAM5d,MAAQ4d,EAAM5d,KAAKlH,KAAO8kB,EAAM5d,KAAKlH,KAAO,MAC3GyG,EAAQqe,EAAM5d,MAAQ4d,EAAM5d,KAAKT,KAAQ6/B,GAA2BxhB,EAAM5d,KAAKT,MAAQ,GAC7F,OAAIgQ,EACO,GAAWhQ,EAAOqe,EAAMpf,OAASwB,EAAKuP,GAE1C,GAAWhQ,EAAOqe,EAAMpf,MACnC,CACK,GAAmB,SAAfof,EAAM5nB,KAAiB,CAE5B,MAAMuZ,EAAa4vB,GAAevhB,EAAMpf,MAAQ,GAAIsQ,KAAW8O,EAAM5d,MAAQ4d,EAAM5d,KAAKlH,KAAO8kB,EAAM5d,KAAKlH,KAAO,MACjH,GAAIyW,EACA,OAAO,GAAWqO,EAAMpf,MAAQ,IAAMwB,EAAKuP,EAEnD,CACA,OAAO,IACX,CAzEoB8vB,CAAqBN,EAAejwB,GAGpD,OAAIiwB,EAAcpe,SAAWniB,EAAM7O,QAAUovC,EAAcpe,QAAQhxB,QAAUqvC,GAAyBC,EAC3F,CACH,CAAEjpC,OAAMkpC,UAAS1gC,MAAOA,EAAM9O,MAAM,GAAIqvC,EAAcpe,QAAQhxB,SAC9D,CAAEqG,KAAMA,EAAO,oBAAqBkpC,UAAS1gC,MAAOA,EAAM9O,OAAOqvC,EAAcx/B,KAAK5P,UAGrF,CACH,CAAEqG,OAAMkpC,UAAS1gC,SAEzB,CAIO,SAAS2gC,GAAehmC,EAAM2V,GACjC,IAAK,MAAMS,KAAcza,OAAO6C,KAAKmX,EAAM/H,UACvC,GAAIjS,OAAO6C,KAAKmX,EAAM/H,SAASwI,IAAatL,SAAS9K,GACjD,OAAOoW,EAGf,OAAO,IACX,CAWO,SAAS6vB,GAA2B7/B,GACvC,MAAMkH,EAAOlH,EAAKzD,KAAI,CAACwjC,EAAOnrC,IAAMmrC,EAAMxjC,KAAKC,GAAM,GARlD,SAA6B5H,GAChC,MAAMorC,EAAW,6BAA6BzvC,MAAM,IACpD,OAAOqE,EAAEwC,SAAS,IAAI7G,MAAM,IAAIgM,KAAKC,GAAMwjC,EAASllC,SAAS0B,EAAG,OAAMtF,KAAK,GAC/E,CAK4D+oC,CAAoBrrC,KAAK4H,MAAKtF,KAAK,OAAMA,KAAK,KACtG,MAAa,KAATgQ,EACO,IAAIA,KAGJ,EAEf,CAEO,SAAS,GAAWvX,GACvB,OAAOA,EACFW,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACvB,CA4BA,MAAM4vC,GAAmB,CAAC5yB,EAAK6yB,IAAQ,CAAC,CAAE1pC,KAAM,eAAgBwI,MAAOkhC,EAAIC,QAAQ9yB,GAAMqyB,QAAS,OAK5FU,GAAgB,CAAC9wB,EAAOxY,KAC1B,MAAMoc,EAAS5D,EAAM4D,OACrB,IAEI,OADA5D,EAAMsqB,gBACC9iC,GACX,CACA,QACIwY,EAAM4D,OAASA,CACnB,GAQG,SAASsP,GAASmK,EAAOrd,EAAOmwB,GACnC,MAAMtrC,EAAOw4B,EAAM11B,KAAK,MAGxBqY,EAAM0N,MAAM,CAAE6e,mBAAmB,IACjC,MAAMa,EAAc0D,GAAc9wB,GAAO,IAAMA,EAAMgtB,IAAInoC,EAAM,kBAAcoF,GAAW,KACxFmjC,EAAYV,cAAgBU,EAAYV,cAAc/mC,QAAQvF,GAAiB,eAAXA,EAAE4J,OACtEojC,EAAYD,cAAgBC,EAAYD,cAAcxnC,QAAQvF,GAAiB,eAAXA,EAAE4J,OACtEojC,EAAYtgB,OAASsgB,EAAYtgB,OAAOnnB,QAAQvF,GAAiB,eAAXA,EAAE4J,OAMpD,IAAK,MAAOA,GAAM,SAAEkjB,MAAelnB,OAAO+qC,QAAQ/wB,EAAMgqB,cACpD,IAAK,MAAMlb,KAASse,EAAYtgB,OACT,SAAfgC,EAAM5nB,MAAmC,OAAhB4nB,EAAMpf,OAAkBwd,EAAS4B,EAAMpf,SAChEof,EAAM5nB,KAAO,OAEb4nB,EAAM5d,KAAO,IAAKgc,EAAS4B,EAAMpf,MAAQ,IAAK1F,SAQ9D,MAAM8iB,EAAS,IAAIsgB,EAAYtgB,UAAWsgB,EAAYV,iBAAkBU,EAAYD,eAAexnC,QAAQvF,GAAiB,QAAXA,EAAE8G,MAA6B,QAAX9G,EAAE8G,MAC1G,iBAAlB9G,EAAEuK,aAAmD,iBAAhBvK,EAAEwK,WAC9CxK,EAAEuK,YAAcvK,EAAEwK,YAEtBkiB,EAAOplB,MAAK,CAACL,EAAGoK,KAAOpK,EAAEsD,aAAe,IAAM8G,EAAE9G,aAAe,KAG/D,IAAIqmC,EAAkB,EAClBC,EAAa,EAGjB,MAAMC,EAAe,GACrB,IAAK,IAAI7rC,EAAI,EAAGA,EAAIg4B,EAAMx8B,OAAQwE,IAAK,CACnC6rC,EAAanqC,KAAK,IAClB,MAAMoqC,EAAgBH,EAAkB3T,EAAMh4B,GAAGxE,OACjD,IAAI8yB,EAASqd,EAEb,KAAOC,EAAankB,EAAOjsB,QACvBisB,EAAOmkB,GAAYrmC,WAAaomC,GAChCC,IAGJ,GAAIA,EAAankB,EAAOjsB,QACpBisB,EAAOmkB,GAAYtmC,aAAeqmC,GAClClkB,EAAOmkB,GAAYrmC,WAAaumC,EAChCD,EAAa7rC,GAAG0B,QAAQipC,GAAgBljB,EAAOmkB,GAAajxB,EAAOqd,EAAMh4B,GAAIynB,EAAOmkB,GAAYrmC,WAAaumC,EAAehB,QAE3H,CASD,IAPIc,EAAankB,EAAOjsB,QACpBisB,EAAOmkB,GAAYtmC,aAAeqmC,IAClCE,EAAa7rC,GAAG0B,QAAQipC,GAAgBljB,EAAOmkB,GAAajxB,EAAOnb,EAAKjE,MAAM+yB,EAAQ7G,EAAOmkB,GAAYrmC,YAAY,EAAMulC,IAC3Hxc,EAAS7G,EAAOmkB,GAAYrmC,UAC5BqmC,KAGGA,EAAankB,EAAOjsB,QACvBisB,EAAOmkB,GAAYrmC,UAAYumC,GAE3Bxd,EAAS7G,EAAOmkB,GAAYtmC,cAC5BumC,EAAa7rC,GAAG0B,KAAK,CACjBG,KAAM,eACNkpC,QAAS,KACT1gC,MAAO7K,EAAKjE,MAAM+yB,EAAQ7G,EAAOmkB,GAAYtmC,eAEjDgpB,EAAS7G,EAAOmkB,GAAYtmC,aAGhCumC,EAAa7rC,GAAG0B,QAAQipC,GAAgBljB,EAAOmkB,GAAajxB,EAAOnb,EAAKjE,MAAM+yB,EAAQ7G,EAAOmkB,GAAYrmC,YAAY,EAAMulC,IAC3Hxc,EAAS7G,EAAOmkB,GAAYrmC,UAC5BqmC,IAGAA,EAAankB,EAAOjsB,QACpBisB,EAAOmkB,GAAYtmC,YAAcwmC,GAE7Bxd,EAAS7G,EAAOmkB,GAAYtmC,cAC5BumC,EAAa7rC,GAAG0B,KAAK,CACjBG,KAAM,eACNkpC,QAAS,KACT1gC,MAAO7K,EAAKjE,MAAM+yB,EAAQ7G,EAAOmkB,GAAYtmC,eAEjDgpB,EAAS7G,EAAOmkB,GAAYtmC,aAGhCumC,EAAa7rC,GAAG0B,QAAQipC,GAAgBljB,EAAOmkB,GAAajxB,EAAOnb,EAAKjE,MAAMksB,EAAOmkB,GAAYtmC,YAAawmC,GAAgBrkB,EAAOmkB,GAAYrmC,WAAaumC,EAAehB,KAG7Ke,EAAa7rC,GAAG0B,KAAK,CACjBG,KAAM,eACNkpC,QAAS,KACT1gC,MAAO7K,EAAKjE,MAAM+yB,EAAQwd,IAGtC,CACAH,GAAmB3T,EAAMh4B,GAAGxE,OAAS,CACzC,CACA,MAAO,CAAEqwC,eAAc9D,cAC3B,CAIO,MAAMgE,GAOTvnC,YAAYwnC,EAAST,EAAKU,EAAUC,GAChCzqC,KAAKuqC,QAAUA,EACfvqC,KAAK8pC,IAAMA,EACX9pC,KAAKwqC,SAAWA,EAEhBxqC,KAAK0qC,QAAU,GACf1qC,KAAK2qC,gBAAiB,EACtB3qC,KAAKyqC,QAAUA,CACnB,CASAzmC,oBAAoB4mC,EAAWC,EAAaC,EAASC,EAAWhB,GAc5D,OAboB,OAAhBc,IACAA,EAAc,GAEF,OAAZC,IACAA,EAAUF,GAEI,OAAdG,IACAA,EAAYhB,EAAQe,GAAS/wC,QAG7B6wC,IAAcE,GAAWD,IAAgBE,GACzCA,IAEG,CAACH,EAAWC,EAAaC,EAASC,EAC7C,CAKA/mC,kBAAkBjG,EAAM8F,EAAaC,GACjC,MAAMmhC,EAAqB,IAAItJ,GAAmB59B,GAC5C2lC,EAAQuB,EAAmB/+B,IAAIrC,GAAa,GAC5CtI,EAAM0pC,EAAmB/+B,IAAIpC,GAAW,GAC9C,MAAO,CAAC4/B,EAAMtgC,KAAMsgC,EAAM7d,OAAQtqB,EAAI6H,KAAM7H,EAAIsqB,OACpD,CAOA7hB,iBAAiBjG,EAAMqG,EAAO2lC,GAC1B,MAAiC,iBAAtB3lC,EAAMP,aAAuD,iBAApBO,EAAMN,UAE/C9D,KAAKgrC,WAAWjtC,EAAMqG,EAAMP,YAAaO,EAAMN,WAE3B,iBAAfM,EAAMhB,KAEXpD,KAAKirC,aAAa7mC,EAAMhB,KAAM,KAAM,KAAM,KAAM2mC,GAIhD/pC,KAAKirC,aAAa,EAAG,KAAM,KAAM,KAAMlB,EAEtD,CASA5/B,IAAIygC,EAAWC,EAAaC,EAASC,EAAWxmC,EAASnE,GACrD,GAAIJ,KAAKyqC,QACL,OAEJ,MAAMS,EAAQ,IAAIlrC,KAAKwqC,YAAYF,GAAcW,aAAaL,EAAWC,EAAaC,EAASC,GAAY9zB,GAAQjX,KAAK8pC,IAAIC,QAAQ9yB,MACpIjX,KAAK0qC,QAAQzqC,KAAKD,KAAKuqC,QAAQY,UAAUD,EAAO,WAAsB,SAAT9qC,EAAkB,SAAW,OAAQ,QAAQ,IAE1GJ,KAAKuqC,QAAQa,eAAe,CAAC,CAAEn0B,IAAK2zB,EAAW/kB,OAAQglB,EAAa54B,KAAM1N,EAASnE,KAAe,SAATA,EAAkB,UAAY,WACvHJ,KAAK2qC,gBAAiB,CAC1B,CAMAU,WAAWttC,EAAMqG,EAAOhE,GACpBJ,KAAKmK,OAAOmgC,GAAcgB,UAAUvtC,EAAMqG,GAAQ6S,GAAQjX,KAAK8pC,IAAIC,QAAQ9yB,KAAO7S,EAAMG,QAASnE,EACrG,CAIA5F,QACI,IAAK,MAAM+wC,KAAUvrC,KAAK0qC,QACtB1qC,KAAKuqC,QAAQiB,aAAaD,GAE9BvrC,KAAK0qC,QAAQ3wC,OAAS,EAClBiG,KAAK2qC,iBACL3qC,KAAKuqC,QAAQkB,mBACbzrC,KAAK2qC,gBAAiB,EAE9B,EAOG,MAAMe,GAQT3oC,YAAY+mC,EAAK5wB,EAAOyyB,EAAeC,EAAgBvC,GACnDrpC,KAAK6rC,SAAWF,EAChB3rC,KAAK8pC,IAAMA,EACX9pC,KAAK8rC,OAAQ,EACb9rC,KAAKkZ,MAAQA,EACblZ,KAAK4rC,eAAiBA,EACtB5rC,KAAKqpC,cAAgBA,EAGrBrpC,KAAK+rC,gBAAkB,KAIvB/rC,KAAKu2B,MAAQv2B,KAAK8pC,IAAIkC,cAAc9lC,KAAK9C,GAAS,CAAC,CAAEhD,KAAM,eAAgBwI,MAAOxF,EAAMkmC,QAAS,SAGjGtpC,KAAKisC,MAAQ,KACbjsC,KAAKksC,SAAU,EAEflsC,KAAKmsC,SAAU,EACf,MAAMC,EAAS,KACX,IAAIpsC,KAAKksC,QAGT,GAAIlsC,KAAK8rC,OAAS9rC,KAAKmsC,QAAS,CAC5B,MAAME,EAAYh4B,KAAKqK,MACvB1e,KAAK8rC,OAAQ,EACb,MAAM/tC,EAAOiC,KAAK8pC,IAAIkC,cAAcnrC,KAAK,MACzC,IACI,MAAMwrC,EAAYh4B,KAAKqK,MACjBJ,EAAM8N,GAASpsB,KAAK8pC,IAAIkC,cAAe9yB,EAAOlZ,KAAKqpC,eACzDrpC,KAAK+rC,gBAAkBztB,EAAIgoB,YAC3BtmC,KAAKu2B,MAAQjY,EAAI8rB,aACjBpqC,KAAKisC,MAAQ,CAAEluC,OAAMw4B,MAAOvuB,KAAKC,UAAUjI,KAAKu2B,QAEhDoV,EAAc,EAAG3rC,KAAK8pC,IAAIwC,YAAc,EAAGj4B,KAAKqK,MAAQ2tB,EAC5D,CACA,MAAOjzC,GACHwyC,EAAe7tC,EAAM3E,EACzB,CAEAooB,WAAW4qB,EAAQ73B,KAAKkM,IAAI,IAAKlM,KAAKmM,IAAI,IAAiC,GAA1BrM,KAAKqK,MAAQ2tB,KAClE,MAEI7qB,WAAW4qB,EAAQ,IACvB,EAIJ5qB,YAAW,KAAQ4qB,GAAQ,GAAK,EACpC,CACAG,UACIvsC,KAAKksC,SAAU,CACnB,CAKAM,gBAAgBC,GACZzsC,KAAK8rC,OAAQ,EACb,MAAMY,EAAWD,EAAM/I,MAAMzsB,IACvB01B,EAASF,EAAMlxC,IAAI0b,IACzB,GAAIy1B,IAAaC,EACb,GAAqB,WAAjBF,EAAM5Z,QAAuB7yB,KAAKu2B,MAAMmW,GAAW,CACnD,MAAME,EAAcH,EAAM/I,MAAM7d,OAE1BgnB,EAAY7sC,KAAKu2B,MAAMmW,GACxB7tC,QAAQsH,GAAiB,4BAAXA,EAAE/F,OAEf0sC,EAAY,GAClB,IAAIvuC,EAAI,EACJsuB,EAAS,EAEb,KAAOtuB,EAAIsuC,EAAU9yC,QAAU8yB,EAASggB,EAAUtuC,GAAGqK,MAAM7O,QAAU6yC,GACjEE,EAAU7sC,KAAK4sC,EAAUtuC,IACzBsuB,GAAUggB,EAAUtuC,GAAGqK,MAAM7O,OAC7BwE,IAaJ,IAVIA,EAAIsuC,EAAU9yC,QAAU8yB,EAAS+f,GACjCE,EAAU7sC,KAAK,CAAEG,KAAMysC,EAAUtuC,GAAG6B,KAAMwI,MAAOikC,EAAUtuC,GAAGqK,MAAM9O,MAAM,EAAG8yC,EAAc/f,GAASyc,QAAS,OAC7GwD,EAAU7sC,KAAK,CAAEG,KAAM,eAAgBwI,MAAO6jC,EAAMlW,MAAM,GAAI+S,QAAS,OACvEwD,EAAU7sC,KAAK,CAAEG,KAAMysC,EAAUtuC,GAAG6B,KAAMwI,MAAOikC,EAAUtuC,GAAGqK,MAAM9O,MAAM8yC,EAAc/f,GAASyc,QAAS,OAC1G/qC,KAGAuuC,EAAU7sC,KAAK,CAAEG,KAAM,eAAgBwI,MAAO6jC,EAAMlW,MAAM,GAAI+S,QAAS,OAGpE/qC,EAAIsuC,EAAU9yC,QACjB+yC,EAAU7sC,KAAK4sC,EAAUtuC,IACzBA,IAEJyB,KAAKu2B,MAAMmW,GAAYI,CAC3B,MAEI9sC,KAAKu2B,MAAMmW,GAAY7C,GAAiB6C,EAAU1sC,KAAK8pC,SAGrC,WAAjB2C,EAAM5Z,OACX7yB,KAAKu2B,MAAMn8B,OAAOsyC,EAAUC,EAASD,EAAW,EAAG7C,GAAiB6C,EAAU1sC,KAAK8pC,MAGnF9pC,KAAKu2B,MAAMn8B,OAAOsyC,EAAU,KAAMxqC,MAAMyqC,EAASD,EAAW,GAAG1D,KAAK,MAAM9iC,KAAI,CAACs2B,EAAGj+B,IAAMsrC,GAAiBtrC,EAAImuC,EAAU1sC,KAAK8pC,OAEpI,CAKAiD,UAAU91B,GAGN,IAAKjX,KAAKu2B,MAAMtf,GAAM,CAClB,IAAIyV,GAAK,EACT,GAAI1sB,KAAKmsC,QAAS,CAEd,MAAMpuC,EAAOiC,KAAK8pC,IAAIkC,cAAcnrC,KAAK,MACzC,GAAmB,OAAfb,KAAKisC,OAAkBjsC,KAAKisC,MAAMluC,OAASA,EAC3C2uB,GAAK,OAGL,IACI,MAAM6J,EAAQnK,GAASpsB,KAAK8pC,IAAIkC,cAAehsC,KAAKkZ,MAAOlZ,KAAKqpC,eAChErpC,KAAKisC,MAAQ,CAAEluC,OAAMw4B,MAAOvuB,KAAKC,UAAUsuB,EAAM6T,eACjD1d,GAAK,CACT,CACA,MAAOtzB,GACGA,aAAa,KACfkkB,QAAQlZ,MAAMhL,EAEtB,CAER,CACIszB,GAAqB,OAAf1sB,KAAKisC,MACXjsC,KAAKu2B,MAAMtf,GAAOjP,KAAK+X,MAAM/f,KAAKisC,MAAM1V,OAAOtf,GAG/CjX,KAAKu2B,MAAMtf,GAAO4yB,GAAiB5yB,EAAKjX,KAAK8pC,IAErD,CACA,OAAO9pC,KAAKu2B,MAAMtf,EACtB,CAGAysB,MAAMgJ,GAAY,CAElBM,gBAAgBC,EAAUC,GAAW,CAErCC,YAAYrD,GAAO,CACnBsD,gBAAkB,CAElBC,aAAaC,GAAa,CAC1BC,OAAS,CAETC,SAASv2B,GAAO,MAAO,OAAS,EAK7B,MAAMw2B,GAKT1qC,YAAYynC,EAAUtxB,GAClBlZ,KAAKwqC,SAAWA,EAChBxqC,KAAKkZ,MAAQA,CACjB,CAQAlV,0BAA0B0pC,GAAO,IAAE5D,GAAO4C,EAAUC,GAChD,MAAMvJ,EAAUzN,EAAY0N,cAKtBsK,EAAavqC,IAEf,MAAM4O,EAAS,GAAU5O,GACzB,GAAI4O,IAAW5O,EACX,MAAO,CAAEhD,KAAM,SAInB,MAAMg2B,GAFNhzB,EAAOA,EAAKmY,UAAUvJ,EAAOjY,SAEZwhB,UAAU,EAAG,GAAGrhB,MAAM,IAAIgM,KAAK1F,GAAM4iC,EAAQrN,WAAWv1B,KAAIK,KAAK,IAClF,MAA4B,MAAxBu1B,EAAI7a,UAAU,EAAG,GACV,CAAEnb,KAAM,UAAWsjC,MAAO1xB,EAAOjY,OAAQo9B,IAAK,GAAwB,MAAnB/zB,EAAKyc,OAAO,GAAa,EAAI,IAE/E,OAARuW,EACO,CAAEh2B,KAAM,UAAWsjC,MAAO1xB,EAAOjY,OAAQo9B,IAAK,GAAwB,MAAnB/zB,EAAKyc,OAAO,GAAa,EAAI,IAEpF,CAAEzf,KAAM,OAAQ,EAGrB4gB,EAAO,GACb,IAAK,IAAIziB,EAAImuC,EAAUnuC,GAAKouC,EAAQpuC,IAChCyiB,EAAK/gB,KAAK1B,GAGd,IAAKyiB,EAAK4sB,OAAO32B,GAA6C,UAArC02B,EAAU7D,EAAIC,QAAQ9yB,IAAM7W,QACjD4gB,EAAK4sB,OAAO32B,GAA6C,SAArC02B,EAAU7D,EAAIC,QAAQ9yB,IAAM7W,OAEhD,IAAK,MAAM6W,KAAO+J,EAAM,CAGpB,MAAM5d,EAAOuqC,EAAU7D,EAAIC,QAAQ9yB,IACjB,YAAd7T,EAAKhD,MACL0pC,EAAI+D,aAAa52B,EAAK7T,EAAKsgC,MAAOtgC,EAAKsgC,MAAQtgC,EAAK+zB,IAE5D,KAEC,CAED,MAAM2W,EAAYv5B,KAAKmM,OAAOM,EAAK9a,KAAK+Q,GAAQ,GAAY6yB,EAAIC,QAAQ9yB,OAExE,IAAK,MAAMA,KAAO+J,EAAM,CACpB,MAAM5d,EAAO0mC,EAAIC,QAAQ9yB,GACzB,IAAI4O,EAASziB,EAAKrJ,OAClB,IAAK,IAAIwE,EAAI,EAAGA,EAAI6E,EAAKrJ,OAAQwE,IAC7B,GAAI,GAAY6E,EAAKtJ,MAAM,EAAGyE,KAAOuvC,EAAW,CAC5CjoB,EAAStnB,EACT,KACJ,CAEJurC,EAAIiE,aAAa,CAAE92B,MAAK4O,UAAU,MACtC,CACJ,CACJ,CAQA7hB,oBAAoB0pC,EAAOtqC,EAAM4qC,GAK7B,MAAO,iBAAiBvmC,KAAKrE,EAAO4qC,EACxC,CAQAC,YAAYP,GAAO,IAAE5D,GAAO7yB,GAExB,GAAY,IAARA,EACA,OAEJ,MAAMi3B,EAAWpE,EAAIC,QAAQ9yB,EAAM,GACnC,IAAIjF,EACJ,GAAIy7B,GAAiBU,aAAaD,GAE9Bl8B,EAAS,GAAUk8B,OAElB,CAED,MAAM7vC,EAAI2B,KAAKouC,kBAAkBtE,EAAIkC,cAAcnrC,KAAK,OAClDooC,EAAS5qC,EAAEqqC,QAAQzxB,GACzBjF,EAAoB,OAAXi3B,EAAkB5qC,EAAEsqC,OAAOM,GAAU,EAClD,CAEA,MAAMoF,EAAY,GAAUvE,EAAIC,QAAQ9yB,IACxC6yB,EAAI7vC,QAAQ,IAAI+F,KAAKwqC,SAASvzB,EAAK,EAAGA,EAAKo3B,EAAUt0C,QAASiY,EAClE,CAOAhO,yBAAyB0pC,EAAOtqC,EAAM7I,GAElC,OAAIyF,KAAKmuC,aAAa/qC,GACX,GAAUA,GAAQ7I,EAEtB,GAAU6I,EACrB,CAEAY,oBAAoBZ,GAEhB,MAAO,uFAAuFqE,KAAKrE,EACvG,CAQAY,0BAA0BiT,EAAKq3B,EAAQp1B,EAAOq1B,GAK1C,MAAMhkC,EAAS,IAAIsrB,IAEb5nB,EAAS,IAAIzI,IAKbgpC,EAAU,CAACC,EAAS7lC,EAAOwB,KAC7B,MAAMgd,EAAO7c,EAAO8a,IAAIopB,GACxB,GAAIrnB,EACAA,EAAKhd,KAAKD,IAAIC,OAEb,CAED,MAAMskC,EAAQJ,EAAOp0C,MAAM,IAAI2E,QAAQ2B,GAAMoI,EAAMyF,SAAS7N,KAAIzG,OAChEwQ,EAAOokC,IAAIF,EAAS,CAAE7lC,QAAOwB,KAAM,IAAI5E,IAAI,CAAC4E,IAAQskC,UACpDzgC,EAAO9D,IAAIvB,EACf,GAGJ,IAAK,MAAMrF,KAAQrE,OAAO6C,KAAKmX,EAAMjT,WAAW,IAAK,CACjD,GAAI1C,EAAKuhC,WAAW,KAChB,SAEJ,MAAMpkC,EAAIwY,EAAMkN,SAAS7iB,GACzB,GAAiB,iBAAN7C,GAAwB,OAANA,EACzB,SAEJ,MAAMiZ,EAAa4vB,GAAehmC,EAAM2V,IAAU,QACnC,SAAXxY,EAAEN,KACFouC,EAAQhF,GAA2B9oC,EAAEiJ,MAAQpG,EAAMA,EAAMoW,GAGzD60B,EAAQjrC,EAAMA,EAAMoW,EAE5B,CAEA,IAAK,MAAOzW,GAAM,SAAEkjB,MAAelnB,OAAO+qC,QAAQ/wB,EAAMgqB,cACpD,IAAK,MAAO3/B,EAAM7C,KAAMxB,OAAO+qC,QAAQ7jB,GAAW,CAE9CooB,GADc9tC,GAAgB,SAAXA,EAAEN,KAAmBopC,GAA2B9oC,EAAEiJ,MAAQ,IAC9DpG,EAAMA,EAAML,EAC/B,CAGJ,GAA4C,OAAxCqrC,EAAoBxC,gBACpB,IAAK,MAAM/jB,KAASumB,EAAoBxC,gBAAgB/lB,OAAQ,CAC5D,MAAMziB,EAAOykB,EAAMpf,MAAQ,GAG3B,GAAIof,EAAM5kB,OAAS6T,IAAOhJ,EAAOtB,IAAIpJ,GAGrC,GAAmB,SAAfykB,EAAM5nB,KACNouC,EAAQjrC,EAAMA,EAAM,WAEnB,GAAmB,SAAfykB,EAAM5nB,KAAiB,CAC5B,MAAMM,EAAIwY,EAAMkN,SAAS7iB,GAEzBirC,GADc9tC,GAAgB,SAAXA,EAAEN,KAAmBopC,GAA2B9oC,EAAEiJ,MAAQ,IAC9DpG,EAAMA,EAAM,KAC/B,CACJ,CAEJ,OAAOrB,MAAM8L,KAAKzD,EAAO0/B,WAAW/jC,KAAI,EAAEuoC,EAAS3P,MAAU,CAAG2P,aAAY3P,EAAM10B,KAAMlI,MAAM8L,KAAK8wB,EAAK10B,MAAMvJ,KAAK,SACvH,CAKAmD,mBAAmBiO,GAEf,MAAM28B,EAAe,GAAsB38B,GAErCmV,EAAO,CAACynB,EAAIC,EAAIC,IAAYH,EAC5B,CAAEH,QAASI,EAAIzkC,KAAM,KAAU0kC,IAAMJ,MAAO,EAAGK,QAASA,EAAQ90C,QAAQ,iBAAkB,IAAIA,QAAQ,MAAO,SAC7G,CAAEw0C,QAASI,EAAIzkC,KAAM,KAAU0kC,IAAMJ,MAAO,EAAGK,QAASA,EAAQ90C,QAAQ,MAAO,SACrF,MAAO,CACHmtB,EAAK,KAAM,SAAU,wDACrBA,EAAK,QAAS,KAAM,gCACpBA,EAAK,MAAO,OAAQ,oDACpBA,EAAK,QAAS,MAAO,+BACrBA,EAAK,UAAW,OAAQ,yCACxBA,EAAK,SAAU,SAAU,6HACzBA,EAAK,WAAY,OAAQ,gDACzBA,EAAK,OAAQ,WAAY,sDACzBA,EAAK,MAAO,QAAS,sDAE7B,CAKApjB,2BAA2BZ,EAAM8V,GAE7B,IAAI8M,EAAS,KAEb,GAAoB,IAAhB5iB,EAAKrJ,SAAiB,qCAAqC0N,KAAKrE,EAAKA,EAAKrJ,OAAS,IACnF,MAAO,GAGX,IACImf,EAAM0N,QACNZ,EAASgkB,GAAc9wB,GAAO,IAAMA,EAAMgtB,IAAI9iC,EAAM,wBAAoBD,GAAW,KAAO6iB,OACrFnnB,QAAQvF,GAAiB,QAAXA,EAAE8G,MAA6B,QAAX9G,EAAE8G,MAC7C,CACA,MAAOhH,GACGA,aAAa,KACfkkB,QAAQlZ,MAAMhL,EAEtB,CACA,GAAe,OAAX4sB,GAAqC,IAAlBA,EAAOjsB,SAAiBisB,EAAOA,EAAOjsB,OAAS,GAAG6O,MACrE,MAAO,GAEX,MAAM0lC,EAAStoB,EAAOA,EAAOjsB,OAAS,GAAG6O,MAAQ,GAEjD,MAAI,QAAQnB,KAAK6mC,EAAOA,EAAOv0C,OAAS,MAAQ,QAAQ0N,KAAK6mC,EAAO,IACzD,GAGJA,CACX,CAQAU,eAAc,IAAElF,GAAOmF,EAAWh4B,GAE9B,OAAOw2B,GAAiBU,aAAarE,EAAIC,QAAQ9yB,IAAQ,QAAU,EACvE,CAQAi4B,oBAAmB,IAAEpF,GAAOmF,EAAWh4B,GACnC,MAAMk4B,EAAOnvC,KAAKouC,kBAAkBtE,EAAIkC,cAAcnrC,KAAK,OAAO4nC,MAAMzmC,MAAMmE,GAAMA,EAAE,KAAO8Q,IAC7F,YAAa9T,IAATgsC,EACO,IAAInvC,KAAKwqC,SAAS2E,EAAK,GAAIrF,EAAIC,QAAQoF,EAAK,IAAIp1C,OAAQo1C,EAAK,GAAK,EAAGrF,EAAIC,QAAQoF,EAAK,GAAK,GAAGp1C,QAElG,IACX,CAKAiK,mBAAmB8lC,GACf,MAAMsF,EAAU,GAChB,IAAK,MAAOn4B,EAAK7T,KAASlB,MAAM8L,KAAK87B,EAAIkC,cAAc/B,WAAY,CAE/D,MAAM3lC,EAAU,8BAA8BE,KAAKpB,GACnC,OAAZkB,GACA8qC,EAAQnvC,KAAK,CACTyjC,MAAO,CAAEzsB,OACT/Z,QAAS,CAAEmyC,MAAO,SAAU1/B,GAAI,UAAW7N,UAAW,CAACwC,EAAQ,MAG3E,CACA,OAAO8qC,CACX,CAMAhB,kBAAkBrwC,GAMd,OAJKiC,KAAKsvC,gBAAkBtvC,KAAKsvC,eAAevxC,OAASA,IAErDiC,KAAKsvC,eAAiB,CAAEvxC,OAAM+gC,KAAM,GAAkB/gC,KAEnDiC,KAAKsvC,eAAexQ,IAC/B,EAMJ,MAAMyQ,GAMFxsC,YAAYysC,EAAQhF,EAAUiF,GAC1BzvC,KAAKwvC,OAASA,EACdxvC,KAAKwqC,SAAWA,EAChBxqC,KAAKyvC,YAAcA,CACvB,CAEAC,OAAOrL,GACH,MAAO,CACHA,UACAsL,OAAQ,CAAEzE,MAAO,IAAIlrC,KAAKwqC,SAAS,EAAG,EAAG,EAAG,GAAIoF,UAAU,GAC1DC,OAAQ,CAAE/0C,KAAM,EAAGg1C,IAAK,GACxBC,WAAY,IAAI/vC,KAAKyvC,YAE7B,CAEAO,SACI,MAAO,CACH3L,QAASrkC,KAAKwvC,OAAOS,WACrBN,OAAQ,CAAEzE,MAAOlrC,KAAKwvC,OAAOjF,QAAQ2F,UAAUC,WAAYP,SAAU5vC,KAAKwvC,OAAOjF,QAAQ2F,UAAUE,eACnGP,OAAQ,CAAE/0C,KAAMkF,KAAKwvC,OAAOjF,QAAQ8F,gBAAiBP,IAAK9vC,KAAKwvC,OAAOjF,QAAQ+F,gBAC9EP,WAAY/vC,KAAKwvC,OAAOjF,QAAQgG,iBAExC,CAEAC,OAAO9C,GACH1tC,KAAKwvC,OAAOiB,SAAS/C,EAAMrJ,SAC3BrkC,KAAKwvC,OAAOjF,QAAQ2F,UAAUQ,SAAShD,EAAMiC,OAAOzE,MAAOwC,EAAMiC,OAAOC,UACxE5vC,KAAKwvC,OAAOjF,QAAQoG,cAAcjD,EAAMmC,OAAO/0C,MAC/CkF,KAAKwvC,OAAOjF,QAAQqG,aAAalD,EAAMmC,OAAOC,KAC9C9vC,KAAKwvC,OAAOjF,QAAQsG,eAAenD,EAAMqC,WAC7C,EAEJ,MAAMe,GAEF9sC,YAAYwrC,GACR,IAEI,MAAMvxB,EAAM,CAAC,EACb,IAAK,MAAMtf,IAAO,CAAC,qBAAsB,kBAAmB,QAAS,WAAY,OAAQ,cAAe,UAAW,iBAAkB,2BAA4B,mBAAoB,iBACjLsf,EAAItf,GAAO6wC,EAAOuB,UAAUpyC,GAEhCqyC,aAAaC,QAAQ,qBAAsBjpC,KAAKC,UAAUgW,GAC9D,CACA,MAAO7kB,GAGH,OADAkkB,QAAQlZ,MAAMhL,GACP,IACX,CACJ,CAEA4K,YAAYwrC,GACR,IACI,IAAK71C,OAAOq3C,aACR,OAAO,KAEX,MAAM/+B,EAAOtY,OAAOq3C,aAAaE,QAAQ,sBACzC,GAAa,OAATj/B,EACA,OAAO,KAEX,MAAMk/B,EAAOnpC,KAAK+X,MAAM9N,GACpB,CAAC,sBAAuB,qBAAsB,uBAAwB,oBAAoB5D,SAAS8iC,EAAKC,kBACxG5B,EAAO6B,UAAU,kBAAmBF,EAAKC,iBAEzC,CAAC,kBAAmB,qBAAqB/iC,SAAS8iC,EAAKG,QACvD9B,EAAO6B,UAAU,QAASF,EAAKG,OAEN,iBAAlBH,EAAKI,UACZ/B,EAAO6B,UAAU,WAAY98B,KAAKmM,IAAI,GAAInM,KAAKkM,IAAI,EAAG0wB,EAAKI,YAE/D,IAAK,MAAM5yC,IAAO,CAAC,qBAAsB,OAAQ,cAAe,iBAAkB,2BAA4B,mBAAoB,iBACrG,kBAAdwyC,EAAKxyC,IACZ6wC,EAAO6B,UAAU1yC,EAAKwyC,EAAKxyC,IAGP,iBAAjBwyC,EAAKK,SACZhC,EAAO6B,UAAU,UAAW98B,KAAKmM,IAAI,GAAInM,KAAKkM,IAAI,EAAG0wB,EAAKK,UAElE,CACA,MAAOp4C,GAGH,OADAkkB,QAAQlZ,MAAMhL,GACP,IACX,CACJ,CAEA4K,iBAAiBytC,EAAajC,GAC1B,MAAMkC,EAAQ,IAAID,EAAYjC,GAE9B,GAAIxvC,KAAK2xC,KACL,OAEJ3xC,KAAK2xC,MAAO,EAEZ,IAAIC,GAAS,EACbF,EAAMG,kBAAqBC,IACvB,GAAIF,EAAQ,CACR,IAAK,MAAMjzC,KAAOO,OAAO6C,KAAK+vC,UACnBA,EAAMnzC,GAGjBmzC,EAAM,eAAiB,CACnBroC,KAAM,sBAEVqoC,EAAM,UAAY,CACdroC,KAAM,kBACNrJ,KAAM,SACN2xC,MAAO,CACH,CAAEtD,QAAS,SAAU7lC,MAAO,uBAC5B,CAAE6lC,QAAS,QAAS7lC,MAAO,sBAC3B,CAAE6lC,QAAS,UAAW7lC,MAAO,wBAC7B,CAAE6lC,QAAS,MAAO7lC,MAAO,sBAGjCkpC,EAAM,UAAY,CACdroC,KAAM,QACNrJ,KAAM,SACN2xC,MAAO,CACH,CAAEtD,QAAS,MAAO7lC,MAAO,mBACzB,CAAE6lC,QAAS,MAAO7lC,MAAO,uBAGjCkpC,EAAM,SAAW,CACbroC,KAAM,WACNrJ,KAAM,SACN4xC,aAAc,IAElBF,EAAM,UAAY,CACdroC,KAAM,OACNrJ,KAAM,SACN2xC,MAAO,CACH,CAAEtD,QAAS,KAAM7lC,MAAO,OACxB,CAAE6lC,QAAS,KAAM7lC,MAAO,UAGhCkpC,EAAM,SAAW,CAAC,CACVroC,KAAM,eACP,CACCwoC,UAAW,WACXxoC,KAAM,UACNrJ,KAAM,SACN6N,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,MAE7B6jC,EAAM,WAAa,CACfroC,KAAM,kBAEVqoC,EAAM,UAAY,CACdroC,KAAM,4BAEVqoC,EAAM,gBAAkB,CACpBroC,KAAM,oBAEVqoC,EAAM,YAAc,CAChBroC,KAAM,iBAEVmoC,GAAS,CACb,MAEI,IAAK,MAAMjzC,KAAOO,OAAO6C,KAAK+vC,UACnBA,EAAMnzC,EAErB,EAEJ+yC,EAAMQ,SAIN,MAAMA,EAAST,EAAYtyC,UAAU+yC,OACrCT,EAAYtyC,UAAU+yC,OAAS,YAAarhC,GACxCqhC,EAAOh3B,MAAMlb,QAAS6Q,GAEtB7Q,KAAKmyC,GAAG,aAAa,KACjB70B,QAAQC,IAAI,cACZuzB,GAAQsB,KAAKpyC,KAAKwvC,OAAO,GAEjC,CACJ,EAwBJ,MAAM6C,GAAa,GACnB,IAAIC,GAAkB,EAef,SAASC,GAAYC,EAAat5B,EAAOu5B,GAE5C,MAAMjD,EAASiD,EAAIC,KAAKF,GAClBvzC,EAAiC,iBAAhBuzC,EAA2B1xC,SAAS6xC,eAAeH,GAAeA,EACzF,GAAgB,OAAZvzC,EACA,MAAM,IAAI6D,MAAM,uBAAuB0vC,qBAG3C,MAAMhI,EAAWiI,EAAIG,QAAQ,aAAaC,MACpCC,EAAgB,IAAIxI,GAAckF,EAAOjF,QAASiF,EAAOjF,QAAQwI,YAAYjJ,IAAKU,IAAYvrC,EAAQ+zC,QAAQC,oBACpH,GAAIh0C,EAAQi0C,UAAUC,SAAS,qBAG3B,MAAM,IAAIrwC,MAAM,6CAGpB7D,EAAQm0C,aAAa,OAAQ,MAE7Bn0C,EAAQi0C,UAAU/oC,IAAI,qBACtBlL,EAAQi0C,UAAU/oC,IAAI,gBACtB,MAAM7D,EAAWrH,EAAQ+zC,QAAQK,cAE3B/sC,IACFrH,EAAQi0C,UAAU/oC,IAAI,YACtBqlC,EAAO8D,aAAY,IAEvB9D,EAAO+D,YAAY,IAEnB,MAAMC,EAAqBjJ,IAGvB,MAAMT,EAAMS,EAAQT,IACdvT,EAAQuT,EAAIkC,cACZd,EAAQX,EAAQ2F,UAAUC,WAChCrG,EAAI2J,gBAAgB,EAAG3J,EAAIwC,aAC3BxC,EAAIzuC,OAAO,CAAE4b,IAAK,EAAG4O,OAAQ,GAAK0Q,EAAM11B,KAAK,OAC7C0pC,EAAQ2F,UAAUQ,SAASxF,GAAO,EAAM,EAE5CuH,EAAIG,QAAQ,cAAcc,cAAclE,EAAOzsC,YAAY5D,UAAW,SAAU,CAC5EgnC,mBAAoB,CAEhBwI,IAAK,SAAU/lC,GACX5I,KAAKuqC,QAAQwI,YAAY5G,QAAUvjC,EACnC4qC,EAAkBxzC,KAAKuqC,QAC3B,EACAoJ,cAAc,GAElBtK,cAAe,CAEXsF,IAAK,SAAU/lC,GACX5I,KAAKuqC,QAAQwI,YAAY1J,cAAgBzgC,EACzC4qC,EAAkBxzC,KAAKuqC,QAC3B,EACAoJ,cAAc,KAGtBnE,EAAOoE,WAAW,CACdC,KAAM,OACNC,kBAAkB,EAClBC,iBAAiB,IAErBtB,EAAIG,QAAQ,0BACZpD,EAAOwE,mBAAmB,uBAE1B,MACMC,EAAU,IAAIC,EADJzB,EAAIG,QAAQ,eAAesB,SACf1E,EAAO2E,WACrB1B,EAAIG,QAAQ,iBACpBzU,YAAYqR,EAAO4E,SAAS/P,QAAS,YAAY,KAEnD4P,EAAQI,MAAM,IAElB7E,EAAO2C,GAAG,aAAc/4C,IAEpB,MAAMolC,EAAMplC,EAAEk7C,sBAEd,GAAI9V,EAAI3Y,QAAUzsB,EAAEo2C,OAAOjF,QAAQR,QAAQvL,EAAIvnB,KAAKld,OAEhD,YADAk6C,EAAQI,OAKZ,MAAMrsB,EAAQ5uB,EAAEo2C,OAAOjF,QAAQgK,WAAW/V,EAAIvnB,IAAKunB,EAAI3Y,OAAS,GAClD,OAAVmC,GAAmBA,EAAMshB,SAK7B2K,EAAQO,QAAQxsB,EAAMshB,SACtB2K,EAAQQ,KAAK,KAAMr7C,EAAEs7C,QAASt7C,EAAEu7C,UAJ5BV,EAAQI,MAI4B,IAE5C7E,EAAOjF,QAAQ4H,GAAG,UAAU,KAExB8B,EAAQI,OAERvB,EAAct4C,OAAO,IAEzBg1C,EAAO2C,GAAG,mBAAoB/4C,IAC1B,MAAMoI,EAASpI,EAAEw7C,SAASpzC,OAC1B,IAAqD,IAAjDA,EAAOqzC,UAAU37C,QAAQ,mBACzB,OAEJ,IAAKs2C,EAAOsF,YACR,OAEJ,MAAM79B,EAAM7d,EAAEk7C,sBAAsBr9B,IAC9B89B,EAAW37C,EAAEo2C,OAAOuF,UAAY,GACc,IAAhDvzC,EAAOqzC,UAAU37C,QAAQ,mBACzBE,EAAEo2C,OAAOjF,QAAQyK,cAAc/9B,GAC/Btd,OAAOs7C,YAAY,CAAEpiB,OAAQ,gBAAiB5b,MAAK89B,eAGnD37C,EAAEo2C,OAAOjF,QAAQ2K,gBAAgBj+B,GACjCtd,OAAOs7C,YAAY,CAAEpiB,OAAQ,iBAAkB5b,MAAK89B,cAGxD37C,EAAEm0C,MAAM,IAEZ,MAAM4H,IAA4Bl2C,EAAQ+zC,QAAQoC,6BAClD,IAAIC,GAAc,EAClB,MAAMC,EAAiB9F,EAAOjF,QAAQwI,YAChCxE,EAAsB,IAAI7C,GAAoB8D,EAAOjF,QAAQwI,YAAYjJ,IAAK5wB,GAAO,CAAC+zB,EAAUC,EAASrsB,KAC3Gy0B,EAAeC,QAAQ,SAAU,CAAEzW,KAAM,CAAE76B,MAAOgpC,EAAU/oC,KAAMgpC,KAE9DrsB,EAAK,KAAO2uB,EAAOuB,UAAU,wBAA0BzqC,IAAa6uC,GAA2BE,IAC/FA,GAAc,EACdG,EAAiBtC,UAAU/oC,IAAI,WAC/BqlC,EAAO6B,UAAU,sBAAsB,GACvC7vB,YAAW,KACPg0B,EAAiBtC,UAAUuC,OAAO,UAAU,GAC7C,MACP,IACD,CAAC13C,EAAM0jB,KAAUqxB,EAAczH,WAAWttC,EAAM0jB,EAAK,QAAQ,GACxC+tB,EAAOuB,UAAU,kBAEzCvB,EAAOoE,WAAW,CACd8B,2BAA2B,EAC3BC,gBAAgB,EAChBC,0BAA0B,IAE9B,MAAMb,EAAWzC,KACjB9C,EAAOqG,eAAiBd,EAExB1C,GAAWpyC,KAAK,CACZ61C,eAAetG,EAAQjF,EAAS/L,EAAK8P,EAAQlQ,GACzC,GAAIoR,EAAOqG,iBAAmBd,EAC1B3W,EAAS,KAAM,QAEd,CACD,MAAM2T,EAAQtE,GAAiBsI,mBAAmBvX,EAAIvnB,IAAKq3B,EAAQp1B,EAAOq1B,GAE1E,GAAIwD,EAAMiE,MAAM7vC,GAAMA,EAAEyC,QAAU0lC,IAE9B,YADAlQ,EAAS,KAAM,IAGnBA,EAAS,KAAM2T,EACnB,CACJ,GACD,CAAE+D,eAAetG,EAAQjF,EAAS/L,EAAK8P,EAAQlQ,GAAYA,EAAS,KAAOoR,EAAOqG,iBAAmBd,EAAY,GAAKtH,GAAiBwI,YAAYzG,EAAOjF,QAAQT,IAAIkC,cAAcnrC,KAAK,OAAS,IACrM4xC,EAAIG,QAAQ,0BAA0BsD,cAAc7D,IAGpDI,EAAIG,QAAQ,yBAAyBuD,oBAAgD3G,IACjF,MAAMhR,EAAMgR,EAAO4G,oBACnB,OAAO3I,GAAiB0I,oBAAoB3G,EAAOjF,QAAQT,IAAIC,QAAQvL,EAAIvnB,KAAKnd,MAAM,EAAG0kC,EAAI3Y,QAAS3M,EAAM,EAGhH,MAAMm9B,EAAmB,IAAI5I,GAAiBjD,EAAUtxB,GAClDo9B,EAAM7D,EAAIG,QAAQ,eAClB2D,EAAW9D,EAAIG,QAAQ,iBAAiB4D,KACxCA,EAAO,WACTx2C,KAAKy2C,gBAAiB,IAAIF,GAAWE,eACrCz2C,KAAK02C,aAAe,CAChB1H,cAAeqH,EAAiBrH,cAAcjnB,KAAKsuB,GACnDnH,mBAAoBmH,EAAiBnH,mBAAmBnnB,KAAKsuB,GAErE,EACAC,EAAIK,SAASH,EAAMD,GACnBC,EAAKr3C,UAAUy3C,mBAAqBnJ,GAAiBmJ,mBAAmB7uB,KAAK0lB,IAC7E+I,EAAKr3C,UAAU03C,kBAAoBpJ,GAAiBoJ,kBAAkB9uB,KAAK0lB,IAC3E+I,EAAKr3C,UAAU23C,aAAerJ,GAAiBqJ,aAAa/uB,KAAK0lB,IACjE+I,EAAKr3C,UAAU8uC,YAAcoI,EAAiBpI,YAAYlmB,KAAKsuB,GAC/D7G,EAAOjF,QAAQwM,QAAQ,IAAIP,GAE3BhH,EAAOjF,QAAQwI,YAAYxF,OAC3BiC,EAAOjF,QAAQwI,YAAcxE,EAC7BiB,EAAOwH,SAAS,mBAGhBlG,GAAQmG,KAAKzH,GACb,MAAMiC,EAAcgB,EAAIG,QAAQ,mBAAmBnB,YACnDX,GAAQoG,UAAUzF,EAAajC,GAE/B,MAAM2H,EAAkBr2C,SAASs2C,cAAc,OAC/CD,EAAgBjE,UAAU/oC,IAAI,oBAC9BqlC,EAAO2E,UAAUkD,YAAYF,GAE7B,MAAM3B,EAAmB10C,SAASs2C,cAAc,QAChD5B,EAAiBtC,UAAU/oC,IAAI,sBAC/BqrC,EAAiB8B,UAAY,0DAA0Dr9C,QAAQ,MAAO,iBACtGk9C,EAAgBE,YAAY7B,GAG5B,MAAM+B,EAAoB,GAC1B,IACI,MAAMC,EAAW/E,EAAIG,QAAQ,qBAC7BpD,EAAO6B,UAAU,kBAAkB,GACnC7B,EAAOiI,SAASC,WAAW,CACvBn0C,KAAM,UACNiB,KAAM,CAA0BgrC,EAA6B3+B,KACzD0mC,EACK14C,QAAQsH,GAAiB,SAAXA,EAAE5C,OAChB3E,SAAS8B,GAAMA,EAAE09B,SAASvtB,EAAK,KAAI,IAGhD2mC,EAASG,yBAAyBnI,EAAQ,CACtCoI,kBAAmB,CAAwBrN,EAA2DnM,KAClGA,EAAS,KAAMmZ,EAAkBvB,MAAM7vC,GAAiB,SAAXA,EAAE5C,OAAmBkqC,GAAiBoK,YAAYtN,EAAQT,KAAO,GAAG,GAG7H,CACA,MAAO1wC,GACHkkB,QAAQlZ,MAAMhL,EAClB,CAEA,MAAM0+C,EAAiB,KACnBtI,EAAO2E,UAAUjB,UAAUuC,OAAO,cAClCjG,EAAO4E,SAAS2D,gBAAgB,EAAG,EAAG,EAAG,EAAE,EAEzCC,EAAmBl3C,SAASs2C,cAAc,QAChDY,EAAiB9E,UAAU/oC,IAAI,iBAC/B6tC,EAAiBC,UAAY,MAC7BD,EAAiBx+C,iBAAiB,SAAUJ,IACpCo2C,EAAO2E,UAAUjB,UAAUC,SAAS,cACpC2E,KAGAtI,EAAO2E,UAAUjB,UAAU/oC,IAAI,cAC/BqlC,EAAO4E,SAAS2D,gBAAgB,GAAI,GAAI,EAAG,IAE/C3+C,EAAEmG,gBAAgB,IAEtB43C,EAAgBE,YAAYW,GAE5B,MAAME,EAAiBp3C,SAASs2C,cAAc,QAC9Cc,EAAehF,UAAU/oC,IAAI,iBAC7B+tC,EAAeD,UAAY,KAC3BC,EAAe1+C,iBAAiB,SAAUJ,IACtC0+C,IACAtI,EAAO2I,YAAY,oBACnB/+C,EAAEmG,gBAAgB,IAEtB43C,EAAgBE,YAAYa,GAE5B,MAAMzI,EAAcgD,EAAIG,QAAQ,mBAAmBnD,YAC7C2I,EAAa,IAAI7I,GAAWC,EAAQhF,EAAUiF,GAElCxwC,EAAQ+zC,QAAQqF,iBAE9B,IAAIC,kBAAiB,KAAQ9I,EAAO+I,QAAQ,IAAKC,QAAQhJ,EAAO2E,UAAW,CAAEsE,YAAY,IACzFjJ,EAAO4E,SAAS2D,gBAAgB,EAAG,EAAG,EAAG,GACzCvI,EAAO2E,UAAUjB,UAAU/oC,IAAI,cAEnC,MAAMuuC,EAAa,KAAQnK,EAAoBzC,OAAQ,CAAI,EAiE3D,MAAO,CAAE0D,SAAQsD,gBAAesF,aAAYM,aAAYhR,IA5D3C52B,IACT,MAAM/S,EAAOyxC,EAAOS,WACdjU,EAAUlrB,EAAKkrB,SAAW,GAE1Blf,EAAS5D,EAAMsqB,gBACrB,GAAI1yB,EAAK6nC,gBAAiB,CACtB,MAAMn4C,EAAIsQ,EAAK6nC,gBACf77B,EAAOqhB,YAAY,QAAQ,EAAGrB,WACrBt8B,GACD8c,QAAQC,IAAIuf,GAEhBt8B,EAAEq+B,MAAM+Z,QAAU,QAClBp4C,EAAE82C,WAAaxa,CAAI,IAEvBhsB,EAAK6nC,gBAAgBzF,UAAU/oC,IAAI,yBACvC,CACA,IAAIugB,EAAW5Z,EAAK5N,MAAQ,aAE5B4Z,EAAOqhB,YAAY,QAAQ,EAAGpxB,WAAUovB,UAASwB,aACzC5wB,GAAaA,EAAS7J,OAASwnB,GAAuB,SAAViT,GAA8B,UAAVA,GAChEmV,EAAczH,WAAWttC,EAAM,IAAKgP,EAAUxI,QAAS43B,GAAWwB,EACtE,IAqCJ,MAAO,CAAEqE,QAlCO9oB,EAAM2/B,iBAAiB7c,EAAUj+B,EAAM2sB,EAAUsR,EAASlrB,EAAKgoC,YAAc,CAAC,GACzFx1B,MAAKvF,UAKN,GAHK2M,IACDA,EAAW,cAEK,SAAhB5Z,EAAKtS,OACL,OAAO0a,EAAMzR,KAAKu0B,EAAUj+B,EAAM2sB,EAAUsR,EAASlrB,EAAKioC,UAEzD,GAAoB,YAAhBjoC,EAAKtS,OACV,OAAO0a,EAAM6tB,QAAQ/K,EAAUj+B,EAAM2sB,GAAU,EAAOsR,GAErD,CACD,MAAMlzB,EAAM,CAAEsV,UAAU,EAAMG,UAAU,EAAMyd,WAC9C,aAAa9iB,EAAM2mB,SAAS7D,EAAUj+B,EAAM2sB,EAAU5hB,EAC1D,KAEC2a,OAAOhC,IAGRnE,QAAQlZ,MAAM,kBAAmBqd,EAAKvI,EAAM2pB,YAAY,IAEvDvf,MAAKvF,MAAO/Q,IAIb,IAFA0rC,IAEOnK,EAAoBzC,aACjB,IAAI1qB,SAASC,GAAYG,WAAWH,EAAS,KAEvD,OAAOrU,CAAG,IAETyW,OAAOhC,IACRnE,QAAQlZ,MAAM,uCAAwCqd,EAAI,IAE5C3E,SAAQ/e,OAAM,EAEyBw5C,oBACjE,CC37CA,OANoB,CAChB90C,QAAS,SACTC,MAAO,EACPC,MAAO,EACPC,MAAO,ICJX,IAEI,KAAM,CAAExC,KAAM,QAASwI,MAAO,QAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,WAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,QAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,QAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,OAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,UAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,SAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,SAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,UAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,QAC9B,KAAM,CAAExI,KAAM,QAASwI,MAAO,QAC9B,MAAO,CAAExI,KAAM,QAASwI,MAAO,QAC/B,KAAM,CAAExI,KAAM,QAASwI,MAAO,UAC9B,MAAO,CAAExI,KAAM,QAASwI,MAAO,UAC/B,QAAS,CAAExI,KAAM,QAASwI,MAAO,SACjC,QAAS,CAAExI,KAAM,QAASwI,MAAO,SACjC,UAAW,CAAExI,KAAM,QAASwI,MAAO,aACnC,IAAO,CACHxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,IAAK,MAC3BkI,MAAM,EACN5I,GAAI,SAAUvK,EAAGqgB,EAAGpU,GAChB,MAAM0Q,EAAMlV,IACR,MAAM6Y,EAAK,KAAO7Y,EAAEpF,SAAS,IAC7B,OAAOie,EAAGiL,OAAOjL,EAAGjlB,OAAS,EAAG,EAAE,EAEtC,MAAO,IAAMshB,EAAG3c,GAAK2c,EAAG0D,GAAK1D,EAAG1Q,EACpC,EACA2G,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU1I,GACV,MAAM8a,EAAMlV,IACR,MAAM6Y,EAAK,KAAO7Y,EAAEpF,SAAS,IAC7B,OAAOie,EAAGiL,OAAOjL,EAAGjlB,OAAS,EAAG,EAAE,EAEtC,IAAKwG,EACD,MAAM,IAAIuC,MAAM,uBAEpB,GAAIvC,EAAExG,OAAS,EACX,MAAM,IAAI+I,MAAM,oCAEpB,MAAO,IAAMuY,EAAG9a,EAAE,IAAM8a,EAAG9a,EAAE,IAAM8a,EAAG9a,EAAE,GAC5C,EACA+Q,aAAa,IClDrB,IAEI,aAAc,CAAElR,KAAM,QAASwI,MAAO,KACtC,IAAK,CACDxI,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAGV,IAAIA,IAAOA,EAAIE,KAOX,MAAM,IAAInX,MAAM,WALhB,GADAiX,EAAIE,KAAK2E,YAAa,GACjB7E,EAAIE,KAAK9R,SACV,MAAM,IAAIrF,MAAM,UAM5B,EACAwO,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,MAAM+vC,EAAKr/C,OAAOZ,UAAUC,UAAUC,cACtC,OAA+B,IAA3B+/C,EAAG9/C,QAAQ,WACJ,WAEoB,IAA3B8/C,EAAG9/C,QAAQ,WACJ,WAEmB,IAA1B8/C,EAAG9/C,QAAQ,UACJ,UAEiB,IAAxB8/C,EAAG9/C,QAAQ,QACJ,QAEqB,IAA5B8/C,EAAG9/C,QAAQ,cAGkB,IAA7B8/C,EAAG9/C,QAAQ,aAFJ,UAKiB,IAAxB8/C,EAAG9/C,QAAQ,QACJ,YAEmB,IAA1B8/C,EAAG9/C,QAAQ,UACJ,UAEkB,IAAzB8/C,EAAG9/C,QAAQ,SACJ,QAEJ,SACX,ICvDR,IAEI,IAAK,CACDkH,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,GACV1E,OAAOs/C,MAAM56C,EACjB,EACAiT,aAAa,GAEjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAMrb,EAAI/E,OAAOu/C,OAAO76C,GACxB,OAAKK,EAGD,2BAA2B+I,KAAK/I,GACzB+d,WAAW/d,GAElB,qCAAqC+I,KAAK/I,GACnC+d,WAAW/d,EAAEzE,QAAQ,aAAauG,GAC9BgN,OAAO0R,aAAa1e,EAAEvC,WAAW,GAAK,UAG9CS,EAVIqb,EAAIE,KAAK,IAWxB,GAEJ,MAAO,CACH7Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAMrb,EAAI/E,OAAOu/C,OAAO76C,GACxB,OAAKK,GACMqb,EAAIE,KAAK,IAGxB,GAEJ,KAAM,CACF7Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,IAAK,MACvBkI,MAAM,EACN5I,GAAI,SAAU5K,GACV,OAAO1E,OAAOw/C,QAAQ96C,EAC1B,ICjDR,IAEI,SAAU,CACN+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACfpgB,OAAOy/C,SAASC,KAAOv1B,CAC3B,GAEJ,QAAS,CACL1jB,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACAtP,OAAO47B,QAAQ+jB,MAAM,EACzB,GAEJ,UAAW,CAAEl5C,KAAM,QAASwI,MAAO,KCnBvC,IAEI,SAAU,CACNxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,OAAOA,EAAIgB,OAAO,aAAc,CAAC+I,EAAK/J,GAC1C,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,MACdkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,OAAOA,EAAIgB,OAAO,aAAc,CAAC+I,EAAK/J,GAC1C,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,MACrBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUta,EAAK/J,GACzBA,EAAIgB,OAAO,UAAW,CAACqjB,EAAUta,EAAK/J,GAC1C,EACAzI,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,OAAOA,EAAIgB,OAAO,aAAc,CAAC+I,EAAK/J,GAC1C,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,MAC1BkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUta,EAAK/J,GACzB,IAAInK,EAAUmK,EAAIE,KAAK,aACP,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAExB+6C,MAAMz1B,EAAKlU,GAAS0T,MAAKtW,GAEF,MAAfA,EAAIwsC,OACGz/B,EAAIE,KAAK,gBAAgBjN,EAAIwsC,QAEjCxsC,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBmsB,EAASnsB,EAAM8H,EAAI,IACpB0J,OAAMhC,IACL1H,EAAIE,KAAK,gBAAgBwH,EAAI,GAErC,EACAnQ,aAAa,GAEjB,YAAa,CAAElR,KAAM,QAASwI,MAAO,IACrC,cAAe,CACXxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUnM,EAAQid,GAClBA,EAAIE,KAAK,aAAend,CAC5B,EACAwU,aAAa,GAEjB,kBAAmB,CACflR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU+R,EAAQjB,GAClB,MACMnK,EAAU,CACZpR,OAAQ,OACRi7C,QAAS,CACL,eAAgB,qCAEpBxpC,KANa8J,EAAIgB,OAAO,YAAa,CAACC,EAAQjB,KAQlDA,EAAIE,KAAK,aAAerK,CAC5B,EACA0B,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUrkB,GACpBA,EAAIE,KAAK,gBAAkBmkB,CAC/B,GAEJ,aAAc,CACVh+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,MACdkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,IAAInK,EAAUmK,EAAIE,KAAK,aACP,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAExB,MAAMwO,QAAYusC,MAAMz1B,EAAKlU,GAE7B,aADkB5C,EAAIiF,MAE1B,EACAX,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,OACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,IAAInK,EAAUmK,EAAIE,KAAK,aACP,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAExB,MAAMwO,QAAYusC,MAAMz1B,EAAKlU,GAE7B,aADkB5C,EAAImkC,MAE1B,EACA7/B,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,OACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB+F,EAAK/J,GACrB,IAAInK,EAAUmK,EAAIE,KAAK,aACP,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAExB,MAAMwO,QAAYusC,MAAMz1B,EAAKlU,GAE7B,aADkB5C,EAAI0sC,MAE1B,EACApoC,aAAa,GAGjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,MAC1BkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUta,EAAK/J,GACzBA,EAAIgB,OAAO,UAAW,CAACqjB,EAAUta,EAAK/J,GAC1C,EACAzI,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,KAAM,CAAC,MACjCkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUta,EAAK9I,EAAQjB,GACjC,MAAM4/B,EAAW5/B,EAAIgB,OAAO,YAAa,CAACC,EAAQjB,IAQlDw/B,MAAMz1B,EAPU,CACZtlB,OAAQ,OACRi7C,QAAS,CACL,eAAgB,qCAEpBxpC,KAAM0pC,IAEUr2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBmsB,EAASnsB,EAAK,IACfwR,OAAMhC,IACL1H,EAAIE,KAAK,gBAAgBwH,EAAI,GAErC,GAEJ,cAAe,CACXrhB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,IAAK,KAAM,CAAC,MACjCkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUta,EAAK9I,EAAQjB,GACjC,MAAM6/B,EAAK,IAAIC,SACf,IAAK,MAAMl7C,KAAOqc,EACd4+B,EAAGjL,IAAIhwC,EAAKqc,EAAOrc,IAMvB46C,MAAMz1B,EAJU,CACZtlB,OAAQ,OACRyR,KAAM2pC,IAEUt2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBmsB,EAASnsB,EAAK,IACfwR,OAAMhC,IACL1H,EAAIE,KAAK,gBAAgBwH,EAAI,GAErC,GAEJ,YAAa,CACTrhB,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU+R,EAAQjB,GAClB,MAAM+/B,EAAQ,GACd,IAAK,MAAMn7C,KAAOqc,EAAQ,CACtB,MAAM7U,EAAI6U,EAAOrc,GACXolB,EAAKH,mBAAmBjlB,GAAO,IAAMilB,mBAAmBzd,GAC9D2zC,EAAM75C,KAAK8jB,EACf,CACA,OAAO+1B,EAAMj5C,KAAK,IACtB,GAEJ,SAAU,CACNT,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACzB,MAAMq4B,EAAW5/B,EAAIgB,OAAO,YAAa,CAACC,EAAQjB,IAQlDw/B,MAAMz1B,EAPU,CACZtlB,OAAQ,OACRi7C,QAAS,CACL,eAAgB,qCAEpBxpC,KAAM0pC,IAEUr2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJoP,EAAQpP,EAAK,IACdwR,OAAMhC,IACLH,EAAOG,EAAIld,QAAQ,GACrB,GAEV,GAEJ,aAAc,CACVnE,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACzB,MAAMs4B,EAAK,IAAIC,SACf,IAAK,MAAMl7C,KAAOqc,EACd4+B,EAAGjL,IAAIhwC,EAAKqc,EAAOrc,IAMvB46C,MAAMz1B,EAJU,CACZtlB,OAAQ,OACRyR,KAAM2pC,IAEUt2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJoP,EAAQpP,EAAK,IACdwR,OAAMhC,IACLH,EAAOG,EAAIld,QAAQ,GACrB,GAEV,GAGJ,WAAY,CACRnE,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,IAAInK,EAAUmK,EAAIE,KAAK,aAIvB,MAHgB,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAEjB+6C,MAAMz1B,EAAKlU,EACtB,EACA0B,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,OAAOA,EAAIgB,OAAO,WAAY,CAAC+I,EAAK/J,GACxC,EACAzI,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,MAAM4/B,EAAW5/B,EAAIgB,OAAO,YAAa,CAACC,EAAQjB,IAQlD,OAAOw/B,MAAMz1B,EAPG,CACZtlB,OAAQ,OACRi7C,QAAS,CACL,eAAgB,qCAEpBxpC,KAAM0pC,GAGd,EACAroC,aAAa,GAEjB,eAAgB,CACZlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,MAAM6/B,EAAK,IAAIC,SACf,IAAK,MAAMl7C,KAAOqc,EACd4+B,EAAGjL,IAAIhwC,EAAKqc,EAAOrc,IAMvB,OAAO46C,MAAMz1B,EAJG,CACZtlB,OAAQ,OACRyR,KAAM2pC,GAGd,EACAtoC,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,MAChBkI,MAAM,EACN5I,GAAI,SAAU+D,EAAK5M,EAAM2Z,GAErB,MAAa,UADb3Z,EAAOA,EAAKW,WAAW/C,gBACS,SAAToC,EACZ4M,EAAIiF,OAEG,SAAT7R,EACE4M,EAAImkC,OAEG,SAAT/wC,EACE4M,EAAI0sC,OAEG,UAATt5C,GAA6B,OAATA,EAClB4M,EAAI+sC,cAEG,SAAT35C,GAA4B,OAATA,EACjB4M,EAAIiD,KAERjD,EAAIiD,MACf,EACAqB,aAAa,GAGjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAMlvB,GAIhB,OAHMkvB,aAAgB58B,QAClB48B,EAAO,CAACA,IAEL,IAAIkb,KAAKlb,EAAMlvB,EAC1B,GAGJ,WAAY,CACRxP,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,IAAKA,EAAIsH,QACL,MAAM,IAAIve,MAAM,qCAEpBiX,EAAIkgC,eACJ,MAAM54B,EAAUtH,EAAIsH,QACdC,EAASvH,EAAIuH,OACnB,IAAI1R,EAAUmK,EAAIE,KAAK,aACP,KAAZrK,IACAA,EAAU,CAAEpR,OAAQ,QAExB+6C,MAAMz1B,EAAKlU,GAAS0T,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBoP,GAAS,IACVoC,OAAMhC,IACLH,EAAOG,EAAIld,QAAQ,GAE3B,EACA+M,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,IAAKA,EAAIsH,QACL,MAAM,IAAIve,MAAM,qCAEpBiX,EAAIgB,OAAO,WAAY,CAAC+I,EAAK/J,GACjC,EACAzI,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,IAAKA,EAAIsH,QACL,MAAM,IAAIve,MAAM,mCAEpBiX,EAAIkgC,eACJ,MAAM54B,EAAUtH,EAAIsH,QACdC,EAASvH,EAAIuH,OACbq4B,EAAW5/B,EAAIgB,OAAO,YAAa,CAACC,EAAQjB,IAQlDw/B,MAAMz1B,EAPU,CACZtlB,OAAQ,OACRi7C,QAAS,CACL,eAAgB,qCAEpBxpC,KAAM0pC,IAEUr2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBoP,EAAQpP,EAAK,IACdwR,OAAMhC,IACLH,EAAOG,EAAIld,QAAQ,GAE3B,EACA+M,aAAa,GAEjB,eAAgB,CACZlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,KAAM,CAAC,MAC1BkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK9I,EAAQjB,GACvB,IAAKA,EAAIsH,QACL,MAAM,IAAIve,MAAM,yCAEpBiX,EAAIkgC,eACJ,MAAM54B,EAAUtH,EAAIsH,QACdC,EAASvH,EAAIuH,OACbs4B,EAAK,IAAIC,SACf,IAAK,MAAMl7C,KAAOqc,EACd4+B,EAAGjL,IAAIhwC,EAAKqc,EAAOrc,IAMvB46C,MAAMz1B,EAJU,CACZtlB,OAAQ,OACRyR,KAAM2pC,IAEUt2B,MAAKtW,GACdA,EAAIiF,SACZqR,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBoP,EAAQpP,EAAK,IACdwR,OAAMhC,IACLH,EAAOG,EAAIld,QAAQ,GAE3B,EACA+M,aAAa,ICvcrB,IAEI,SAAY,CAAElR,KAAM,QAASwI,MAAO,IACpC,OAAU,CAAExI,KAAM,QAASwI,MAAO,IAClC,UAAa,CAAExI,KAAM,QAASwI,MAAO,IACrC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU0G,GACV,OAAO7O,SAAS6xC,eAAehjC,EACnC,GAEJ,UAAW,CACPvP,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUixC,GACV,MAAiB,iBAANA,EACAp5C,SAASq5C,cAAcD,GAE3BA,CACX,GAEJ,WAAY,CACR95C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUixC,GACV,OAAOh4C,MAAM8L,KAAKlN,SAASs5C,iBAAiBF,GAChD,GAEJ,SAAU,CACN95C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUjG,GACV,OAAOd,MAAM8L,KAAKlN,SAASu5C,qBAAqBr3C,GACpD,GAEJ,WAAY,CACR5C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAUqxC,EAAIJ,EAAGngC,GAEjB,KADAugC,EAAKvgC,EAAIwgC,QAAQD,EAAI,YAAY,IACzBH,cACJ,MAAM,IAAIr3C,MAAM,8BAEpB,OAAOw3C,EAAGH,cAAcD,EAC5B,GAEJ,YAAa,CACT95C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAUqxC,EAAIJ,EAAGngC,GAEjB,KADAugC,EAAKvgC,EAAIwgC,QAAQD,EAAI,aAAa,IAC1BF,iBACJ,MAAM,IAAIt3C,MAAM,+BAEpB,OAAOZ,MAAM8L,KAAKssC,EAAGF,iBAAiBF,GAC1C,GAEJ,YAAa,CACT95C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAK5gD,EAAO6gD,EAAS1gC,IAC/BygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,aAAa,IAChC5gD,GAASmgB,EAAII,UAAUsgC,EAAS,KACxC,EACAnpC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKvoC,EAAM8H,GAErB,MAAM/W,GADNw3C,EAAMzgC,EAAIwgC,QAAQC,EAAK,aAAa,IACpB94C,QAAQ1D,cACxB,GAAY,UAARgF,GAA2B,aAARA,EACnBw3C,EAAI5xC,MAAQqJ,OAEX,GAAY,WAARjP,EACL,IAAK,IAAIzE,EAAI,EAAGA,EAAIi8C,EAAI5qC,QAAQ7V,OAAQwE,IAAK,CACzC,MAAM4H,EAAIq0C,EAAI5qC,QAAQrR,GAAGqK,MACzB,GAAI4E,OAAOrH,KAAO8L,EAAM,CACpBuoC,EAAIE,cAAgBn8C,EACpB,KACJ,CACJ,MAGAi8C,EAAIlD,UAAYrlC,CAExB,EACAX,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,GAEf,KADAygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,aAAa,IAEhC,MAAO,GAEX,MAAMx3C,EAAMw3C,EAAI94C,QAAQ1D,cAExB,GAAY,UAARgF,GAA2B,aAARA,EACnB,OAAOw3C,EAAI5xC,MAGf,GAAY,WAAR5F,EAAkB,CAClB,MAAMie,EAAMu5B,EAAIE,cAChB,OAAIz5B,EAAM,EACC,KAEJu5B,EAAI5qC,QAAQqR,GAAKrY,KAC5B,CACA,OAAO4xC,EAAIlD,SACf,GAEJ,aAAc,CACVl3C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKvoC,EAAM8H,IACrBygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,cAAc,IACjClD,UAAYrlC,CACpB,EACAX,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,GAEf,OADAygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,cAAc,IAI9BA,EAAIlD,UAFA,EAGf,GAEJ,SAAU,CACNl3C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKr0C,EAAG4T,GAClB,OAAOA,EAAIgB,OAAO,YAAa,CAACy/B,EAAKr0C,EAAG4T,GAC5C,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,GACf,OAAOA,EAAIgB,OAAO,YAAa,CAACy/B,EAAKzgC,GACzC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,MACzBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKr0C,EAAG4T,GAClB,OAAOA,EAAIgB,OAAO,aAAc,CAACy/B,EAAKr0C,EAAG4T,GAC7C,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,GACf,OAAOA,EAAIgB,OAAO,aAAc,CAACy/B,EAAKzgC,GAC1C,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BgxC,KAAM,CAAC,UACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAKn8C,EAAG8H,EAAG4T,GACrBygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,WAAW,GAClC,MAAMI,EAAK7gC,EAAIE,KAAK,UAChB2gC,EAAGv8C,KACHA,EAAIu8C,EAAGv8C,IAGPA,KAAKm8C,EACLA,EAAIn8C,GAAK8H,EAGTq0C,EAAIpH,aAAa/0C,EAAG8H,EAE5B,EACAmL,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MAAO,CAAC,MACrBgxC,KAAM,CAAC,UACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAKn8C,EAAG0b,GAElB,KADAygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,WAAW,IAE9B,MAAO,GAEX,MAAMI,EAAK7gC,EAAIE,KAAK,UAKpB,OAJI2gC,EAAGv8C,KACHA,EAAIu8C,EAAGv8C,IAGPA,KAAKm8C,EACEA,EAAIn8C,GAERm8C,EAAIK,aAAax8C,EAC5B,GAEJ,SAAU,CACN+B,KAAM,QACNwI,MAAO,CACH,IAAK,QACL,KAAM,SACN,IAAK,SACL,MAAO,OACP,MAAO,OACP,KAAM,OACN,GAAM,KACN,OAAQ,WACR,SAAU,WACV,MAAO,aAGf,WAAY,CACRxI,KAAM,QACNwI,MAAO,CACH,IAAK,QACL,KAAM,SACN,IAAK,SACL,MAAO,mBACP,IAAK,QACL,OAAQ,SACR,KAAM,UACN,QAAS,YACT,MAAO,aACP,IAAK,OACL,IAAK,QACL,KAAM,SACN,OAAQ,SACR,SAAU,UACV,KAAM,OACN,OAAQ,QACR,OAAQ,QACR,MAAO,UACP,OAAQ,WACR,SAAU,WACV,SAAY,aAGpB,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BgxC,KAAM,CAAC,YACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAKn8C,EAAG8H,EAAG4T,GACrBygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,aAAa,GACpC,MAAMI,EAAK7gC,EAAIE,KAAK,iBACN9W,IAAVy3C,EAAGv8C,KACHA,EAAIu8C,EAAGv8C,SAEG8E,IAAVy3C,EAAGz0C,KACHA,EAAIy0C,EAAGz0C,IAEXq0C,EAAI3b,MAAMxgC,GAAK8H,CACnB,EACAmL,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBgxC,KAAM,CAAC,YACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAKvsC,EAAQ8L,IACvBygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,eAAe,cACnB7gD,OAAOmhD,cACtBN,EAAM,CAACA,IAEX,MAAMI,EAAK7gC,EAAIE,KAAK,YAEpB,IAAK,IAAI1b,EAAI,EAAGA,EAAIi8C,EAAIzgD,OAAQwE,IAAK,CACjC,MAAMnF,EAAIohD,EAAIj8C,GACd,IAAK,MAAMI,KAAOsP,EAAQ,CACtB,IAAI5P,EAAIM,EACJwH,EAAI8H,EAAOtP,QACDwE,IAAVy3C,EAAGv8C,KACHA,EAAIu8C,EAAGv8C,SAEG8E,IAAVy3C,EAAGz0C,KACHA,EAAIy0C,EAAGz0C,IAEX/M,EAAEylC,MAAMxgC,GAAK8H,CACjB,CACJ,CACJ,EACAmL,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfgxC,KAAM,CAAC,YACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAK3b,EAAO9kB,GAEtB,KADAygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,aAAa,IAEhC,MAAO,GAEX,MAAMI,EAAK7gC,EAAIE,KAAK,YAIpB,OAHI2gC,EAAG/b,KACHA,EAAQ+b,EAAG/b,IAER2b,EAAI3b,MAAMA,EACrB,GAEJ,cAAe,CACXz+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfgxC,KAAM,CAAC,YACP9oC,MAAM,EACN5I,GAAI,SAAUuxC,EAAK3b,EAAO9kB,GACtB,MAAM/M,EAAM,CAAC,EAEb,KADAwtC,EAAMzgC,EAAIwgC,QAAQC,EAAK,eAAe,IAElC,OAAOxtC,EAEP6xB,aAAiBrxB,SACjBqxB,EAAQ,CAACA,IAEb,MAAM+b,EAAK7gC,EAAIE,KAAK,YACpB,GAAI4kB,aAAiB38B,MAOjB,OANA28B,EAAMjgC,SAASD,IACPi8C,EAAGj8C,KACHA,EAAMi8C,EAAGj8C,IAEbqO,EAAIrO,GAAO67C,EAAI3b,MAAMlgC,EAAI,IAEtBqO,EAEX,GAAI6xB,aAAiB3/B,OAAQ,CACzB,IAAK,IAAIP,KAAOkgC,EACR+b,EAAGj8C,KACHA,EAAMi8C,EAAGj8C,IAEbqO,EAAIrO,GAAO67C,EAAI3b,MAAMlgC,GAEzB,OAAOqO,CACX,CACA,OAAOwtC,EAAI3b,MAAMA,EACrB,GAEJ,UAAW,CACPz+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUjG,GACV,OAAOlC,SAASs2C,cAAcp0C,EAClC,GAEJ,WAAY,CACR5C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAUqxC,EAAI3f,EAAI5gB,GAClBugC,EAAKvgC,EAAIwgC,QAAQD,EAAI,YAAY,GACjC3f,EAAK5gB,EAAIwgC,QAAQ5f,EAAI,YAAY,GACjC2f,EAAGjD,YAAY1c,EACnB,GAEJ,WAAY,CACRv6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,MAChBkI,MAAM,EACN5I,GAAI,SAAUqxC,EAAI3f,EAAI5gB,GAClBugC,EAAKvgC,EAAIwgC,QAAQD,EAAI,YAAY,GACjC3f,EAAK5gB,EAAIwgC,QAAQ5f,EAAI,YAAY,GACjC2f,EAAGS,YAAYpgB,EACnB,GAEJ,KAAM,CACFv6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,IACfygC,EAAMzgC,EAAIwgC,QAAQC,EAAK,MAAM,KAClBA,EAAIQ,OACXR,EAAIQ,OAEZ,EACA1pC,aAAa,IC/YrB,IAEI,SAAU,CAAElR,KAAM,QAASwI,MAAO,IAClC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,KAAM,CAAC,MAC3BkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAK5gD,EAAO6gD,EAAS1gC,GAC/BA,EAAIkhC,WAAWT,EAAK5gD,EAAO6gD,EAAS,KACxC,EACAnpC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MAAO,CAAC,MACvBkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAK5gD,EAAO6gD,EAAS1gC,GAC/BA,EAAImhC,cAAcV,EAAK5gD,EAAO6gD,EAClC,EACAnpC,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUoc,EAAK5gD,EAAOmgB,GAChCA,EAAIkhC,WAAWT,EAAK5gD,EAAOwkC,EAAU,KACzC,EACA9sB,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUrP,EAAOmgB,GACjBngB,EAAM2F,gBACV,EACA+R,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,QAASnpC,EAAM,KACvC,EACAC,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,OAAQnpC,EAAM,KACtC,EACAC,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,SAAUnpC,EAAM,KACxC,EACAC,aAAa,GAEjB,MAAO,CAAElR,KAAM,QAASwI,MAAO,IAC/B,OAAQ,CACJxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,UAAWnpC,EAAM0I,EAAIohC,aAC7C,EACA7pC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,QAASnpC,EAAM0I,EAAIohC,aAC3C,EACA7pC,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,WAAYnpC,EAAM0I,EAAIohC,aAC9C,EACA7pC,aAAa,GAEjB,OAAQ,CAAElR,KAAM,QAASwI,MAAO,GAChC,OAAQ,CAAExI,KAAM,QAASwI,MAAO,GAChC,QAAS,CACLxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,YAAanpC,EAAM0I,EAAIqhC,eAC/C,EACA9pC,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,YAAanpC,EAAM0I,EAAIqhC,eAC/C,EACA9pC,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,UAAWnpC,EAAM0I,EAAIqhC,eAC7C,EACA9pC,aAAa,GAEjB,OAAQ,CAAElR,KAAM,QAASwI,MAAO,GAChC,OAAQ,CAAExI,KAAM,QAASwI,MAAO,GAChC,QAAS,CAAExI,KAAM,QAASwI,MAAO,IACjC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU7P,EAAG2gB,GACb,OAAOA,EAAIshC,eAAejiD,EAAG2gB,EACjC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,aAAcnpC,EAAM0I,EAAIshC,eAChD,EACA/pC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,YAAanpC,EAAM0I,EAAIshC,eAC/C,EACA/pC,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,WAAYnpC,EAAM0I,EAAIshC,eAC9C,EACA/pC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMmpC,EAAKzgC,GACrBA,EAAIkhC,WAAWT,EAAK,cAAenpC,EAAM0I,EAAIshC,eACjD,EACA/pC,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUoI,EAAM0I,GAEhB,KADA1I,EAAO0I,EAAII,UAAU9I,EAAM,OAEvB,MAAM,IAAIvO,MAAM,2BAGpB,OADAiX,EAAIuhC,8BAAgC3hD,OAAO4hD,sBAAsBlqC,GAC1D0I,EAAIuhC,6BACf,GAEJ,WAAY,CACRl7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU0G,EAAIoK,GACdpgB,OAAO6hD,qBAAqB7rC,GACxBoK,EAAIuhC,gCAAkC3rC,IACtCoK,EAAIuhC,8BAAgC,EAE5C,EACAhqC,aAAa,IClMrB,IAEI,SAAU,CAAElR,KAAM,QAASwI,MAAO,IAClC,UAAW,CAAExI,KAAM,QAASwI,MAAO,GACnC,aAAc,CAAExI,KAAM,QAASwI,MAAO,CAAE,QAAQ,EAAO,UAAW,CAAC,UAAW,UAAW,aACzF,WAAY,CACRxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU0xB,EAAI5gB,GAKd,MAJkB,iBAAP4gB,IACPA,EAAK75B,SAASq5C,cAAcxf,IAAO75B,SAAS6xC,eAAehY,IAE/D5gB,EAAIE,KAAK,UAAY0gB,EACdA,CACX,GAEJ,WAAY,CACRv6B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU0xB,EAAI5gB,GACd,OAAOA,EAAIgB,OAAO,WAAY,CAAC4f,EAAI5gB,GACvC,GAEJ,SAAU,CAAE3Z,KAAM,QAASwI,MAAO,IAClC,WAAY,CAAExI,KAAM,QAASwI,MAAO,CAAC,GACrC,WAAY,CACRxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUwyC,EAAM1hC,GAChBA,EAAIE,KAAK,UAAYwhC,CACzB,EACAnqC,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUyyC,EAAK3hC,GACf,MAAMkvB,EAASlvB,EAAIE,KAAK,UAClB0hC,EAAwB,iBAAV,EAAsB76C,SAASs2C,cAAcsE,GAAOA,EACxEC,EAAIhsC,GAAK,cAAgBoK,EAAIE,KAAK,WAElC,MAAM5I,EAAO0I,EAAIE,KAAK,YAAYF,EAAIE,KAAK,WACrB,mBAAX,GACP5I,EAAKqqC,EAAKC,EAAK5hC,GAGnBkvB,EAAOoO,YAAYsE,GACnB5hC,EAAIE,KAAK,aAMT,OAJYF,EAAIE,KAAK,cACb,SACJgvB,EAAOoO,YAAYv2C,SAASs2C,cAAc,OAEvCuE,CACX,GAEJ,QAAS,CACLv7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUsO,EAAOwC,GACjB,MAAM4hC,EAAM5hC,EAAIgB,OAAO,UAAW,CAAC,SAAUhB,IAE7C,OADA4hC,EAAIrE,UAAY//B,EACTokC,CACX,GAEJ,SAAU,CACNv7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgJ,EAAM8H,GAChB,MAAM6hC,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAG5C,OAFA6hC,EAAIx7C,KAAO,OACXw7C,EAAIhzC,MAAQqJ,EACL2pC,CACX,GAEJ,YAAa,CACTx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgJ,EAAM8H,GAChB,MAAM8hC,EAAK9hC,EAAIgB,OAAO,UAAW,CAAC,WAAYhB,IAE9C,OADA8hC,EAAGjzC,MAAQqJ,EACJ4pC,CACX,GAEJ,QAAS,CACLz7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgJ,EAAM8H,GAChB,MAAM+hC,EAAM/hC,EAAIgB,OAAO,UAAW,CAAC,OAAQhB,IAE3C,OADA+hC,EAAIxE,UAAYrlC,EACT6pC,CACX,GAEJ,UAAW,CACP17C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUiP,EAAM6B,GAChB,MAAMgiC,EAAKhiC,EAAIgB,OAAO,UAAW,CAAC,SAAUhB,IAO5C,OANAgiC,EAAGC,MAAQ9jC,EAAK,GAChB6jC,EAAGE,OAAS/jC,EAAK,GACjB6jC,EAAGld,MAAMmd,MAAQ9jC,EAAK,GACtB6jC,EAAGld,MAAMod,OAAS/jC,EAAK,GAEvB6B,EAAIgB,OAAO,OAAQ,CAACghC,EAAIhiC,IACjBgiC,CACX,GAEJ,OAAQ,CACJ37C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,MAAMmiC,EAAMniC,EAAIgB,OAAO,UAAW,CAAC,MAAOhB,IAE1C,OADAmiC,EAAIr+B,IAAMiG,EACHo4B,CACX,GAEJ,OAAQ,CACJ97C,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEV,OADWA,EAAIgB,OAAO,UAAW,CAAC,KAAMhB,GAE5C,GAEJ,aAAc,CACV3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgJ,EAAM8H,GAEhB,MAAMoiC,EAAOr7C,SAASs2C,cAAc,QAC9BwE,EAAM96C,SAASs2C,cAAc,SACnCwE,EAAIx7C,KAAO,WACXw7C,EAAIjsC,GAAK,cAAgBoK,EAAIE,KAAK,WAClCF,EAAIE,KAAK,aACT,MAAM1C,EAAQzW,SAASs2C,cAAc,SAOrC,OANA7/B,EAAM+/B,UAAYrlC,EAClBsF,EAAM6kC,QAAUR,EAAIjsC,GACpBwsC,EAAK9E,YAAYuE,GACjBO,EAAK9E,YAAY9/B,GAEjBwC,EAAIgB,OAAO,UAAW,CAACohC,EAAMpiC,IACtB6hC,CACX,GAEJ,aAAc,CACVx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU2G,EAASmK,GACnB,MAAMygC,EAAM15C,SAASs2C,cAAc,UACnC,IAAK,IAAI74C,EAAI,EAAGA,EAAIqR,EAAQ7V,OAAQwE,IAAK,CACrC,MAAM6oB,EAAOtmB,SAASs2C,cAAc,UACpChwB,EAAKxe,MAAQgH,EAAQrR,GACrB6oB,EAAKiwB,YAAYv2C,SAASu7C,eAAezsC,EAAQrR,KACjDi8C,EAAInD,YAAYjwB,EACpB,CAGA,OADArN,EAAIgB,OAAO,UAAW,CAACy/B,EAAKzgC,IACrBygC,CACX,GAEJ,iBAAkB,CACdp6C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAU2G,EAAS4qC,EAAKzgC,GACL,iBAARygC,IACPA,EAAM15C,SAASq5C,cAAcK,IAGjCA,EAAI5qC,QAAQ7V,OAAS,EAErB,IAAK,IAAIwE,EAAI,EAAGA,EAAIqR,EAAQ7V,OAAQwE,IAAK,CACrC,MAAM6oB,EAAOtmB,SAASs2C,cAAc,UACpChwB,EAAKxe,MAAQgH,EAAQrR,GACrB6oB,EAAKiwB,YAAYv2C,SAASu7C,eAAezsC,EAAQrR,KACjDi8C,EAAInD,YAAYjwB,EACpB,CACJ,EACA9V,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAM6hC,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAE5C,OADA6hC,EAAIx7C,KAAO,QACJw7C,CACX,GAEJ,aAAc,CACVx7C,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAM6hC,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAE5C,OADA6hC,EAAIx7C,KAAO,OACJw7C,CACX,GAEJ,gBAAiB,CACbx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAM6hC,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAG5C,OAFA6hC,EAAIx7C,KAAO,WACXw7C,EAAIhzC,MAAQvK,EACLu9C,CACX,GAEJ,UAAW,CACPx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUiiC,EAAOnxB,GACXmxB,aAAiBhpC,SAAUgpC,EAAMnxC,OAAS,KAC5CmxC,EAAQ,CAAC,EAAG,IAAK,KAEjBA,EAAMnxC,QAAU,GAChBmxC,EAAMjrC,KAAKsU,KAAKC,OAAO02B,EAAM,GAAKA,EAAM,IAAM,IAElD,MAAM0Q,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAK5C,OAJA6hC,EAAIx7C,KAAO,QACXw7C,EAAIl7B,IAAMwqB,EAAM,GAChB0Q,EAAIn7B,IAAMyqB,EAAM,GAChB0Q,EAAIhzC,MAAQsiC,EAAM,GACX0Q,CACX,GAEJ,UAAW,CACPx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUsO,EAAOwC,GACjB,MAAM6hC,EAAM7hC,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAG5C,OAFA6hC,EAAIx7C,KAAO,SACXw7C,EAAIhzC,MAAQ2O,EACLqkC,CACX,GAEJ,SAAU,CACNx7C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAUgV,EAAK5f,EAAG0b,GAClB,MAAMuiC,EAAMviC,EAAIgB,OAAO,UAAW,CAAC,OAAQhB,IAE3C,GAAIkE,aAAe/e,OACf,IAAK,MAAMP,KAAOsf,EACVq+B,EAAI39C,KACJ29C,EAAI39C,GAAOsf,EAAItf,IAK3B,MAAMqiB,EAAO3iB,EAAEnE,MAAM,MACf2uB,EAAQ/nB,SAASs2C,cAAc,SACrC,IAAK,MAAMmF,KAAYv7B,EAAM,CACzB,IAAI/J,EAAM,GAAM+J,EAAKu7B,GACrB,GAAY,KAARtlC,EACA,SAEAA,EAAI/d,QAAQ,KAAO,IACnB+d,GAAO,KAEX,MAAM8J,EAAO9J,EAAI/c,MAAM,KACjByE,EAAMoiB,EAAK,GACXiP,EAAMjP,EAAK,GAEXy7B,EAAK17C,SAASs2C,cAAc,MAClCoF,EAAGlF,UAAYv9B,EAAI0iC,UAAU99C,GAE7B,MAAM+9C,EAAK57C,SAASs2C,cAAc,MAClC,GAA4B,OAAxBpnB,EAAIzU,UAAU,EAAG,GAAa,CAE9B,MACMohC,GADK3sB,EAAIzU,UAAU,GAAK,KACfrhB,MAAM,KACf0iD,EAAMD,EAAI,GACVtiC,EAAMsiC,EAAI,GACV5K,EAAQ6K,EAAI1iD,MAAM,KAClB2iD,EAAS/7C,SAASs2C,cAAc,UACtCyF,EAAOt5C,KAAO5E,EACd,IAAK,MAAMm+C,KAAM/K,EAAO,CACpB,MAAMj1C,EAASgE,SAASs2C,cAAc,UACtCt6C,EAAO8L,MAAQk0C,EACfhgD,EAAOmV,KAAO6qC,EACdD,EAAOxF,YAAYv6C,EACvB,CACA,MAAMmkB,EAAM8wB,EAAM74C,QAAQmhB,GACtB4G,GAAO,IACP47B,EAAOnC,cAAgBz5B,GAE3By7B,EAAGrF,YAAYwF,EACnB,KACK,CAED,MAAMjB,EAAM96C,SAASs2C,cAAc,SACnCsF,EAAGrF,YAAYuE,GACfA,EAAIjsC,GAAK,aAAehR,EACZ,QAARqxB,GAAyB,YAARA,GACjB4rB,EAAIx7C,KAAO,SACXw7C,EAAIhzC,MAAQonB,EAAIzU,UAAU,GACd,KAAR5c,IACAi9C,EAAIr4C,KAAO5E,IAGc,OAAxBqxB,EAAIzU,UAAU,EAAG,IACtBqgC,EAAIx7C,KAAO,QACXw7C,EAAIhzC,MAAQonB,EAAIzU,UAAU,GAC1BqgC,EAAIr4C,KAAO5E,IAGXi9C,EAAIx7C,KAAO,OACXw7C,EAAIhzC,MAAQonB,EACZ4rB,EAAIr4C,KAAO5E,EAEnB,CACA,MAAMo+C,EAAKj8C,SAASs2C,cAAc,MAClC2F,EAAG1F,YAAYmF,GACfO,EAAG1F,YAAYqF,GACf7zB,EAAMwuB,YAAY0F,EACtB,CAEA,OADAT,EAAIjF,YAAYxuB,GACTyzB,CACX,GAEJ,aAAc,CACVl8C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuxC,GACW,iBAAV,IACPA,EAAM15C,SAASq5C,cAAcK,IAEjC,MAAMxtC,EAAM,CAAC,EACPgwC,EAAe1C,IACjB,GAAKA,GAAOA,EAAG2C,WAGf,IAAK,IAAI1+C,EAAI,EAAGA,EAAI+7C,EAAG2C,WAAWljD,OAAQwE,IAAK,CAC3C,MAAMo8B,EAAK2f,EAAG2C,WAAW1+C,GACzB,IAAKo8B,EAAGj5B,QACJ,OAEJ,MAAMsB,EAAM23B,EAAGj5B,QAAQzI,cACvB,GAAY,UAAR+J,EAQa,aAARA,EACLgK,EAAI2tB,EAAGp3B,MAAQo3B,EAAG/xB,MAEL,WAAR5F,IACD23B,EAAG+f,eAAiB,EACpB1tC,EAAI2tB,EAAGp3B,MAAQo3B,EAAG/qB,QAAQ+qB,EAAG+f,eAAe9xC,MAG5CoE,EAAI2tB,EAAGp3B,MAAQ,IAGvBy5C,EAAYriB,OAnBZ,CACI,GAAgB,aAAZA,EAAGv6B,KAAqB,CACxB4M,EAAI2tB,EAAGp3B,MAAQo3B,EAAGuiB,QAAUviB,EAAG/xB,MAAQ,GACvC,QACJ,CACAoE,EAAI2tB,EAAGp3B,MAAQo3B,EAAG/xB,KAatB,CAEJ,GAGJ,OADAo0C,EAAYxC,GACLxtC,CACX,GAEJ,SAAU,CACN5M,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUuU,EAAIzD,GACd,GAAoB,iBAAT,EAAmB,CAC1B,MAAMojC,EAAK,GACLn8B,EAAOxD,EAAGtjB,MAAM,MACtB,IAAK,MAAM+c,KAAO+J,EACdm8B,EAAGl9C,KAAKgX,EAAI/c,MAAM,MAEtBsjB,EAAK2/B,CACT,CACA,MAAMC,EAAUp1C,KAAK+X,MAAM/X,KAAKC,UAAU8R,EAAIE,KAAK,cAAc,aACjE,IAAK,IAAI1b,EAAI,EAAGA,EAAI,EAAGA,IACnB6+C,EAAQn9C,KAAK,IAEjB,MAAMo9C,EAASD,EAAQxgD,QACjBisB,EAAQ9O,EAAIgB,OAAO,UAAW,CAAC,QAAShB,IAC9C,IAAK,IAAIxb,EAAI,EAAGA,EAAIif,EAAGzjB,OAAQwE,IAAK,CAChC,MAAM++C,EAAQ/+C,EACR0Y,EAAMuG,EAAG8/B,GACTP,EAAKj8C,SAASs2C,cAAc,MAClC,IAAK,IAAIt2B,KAAO7J,EAAK,CACjB6J,EAAM,GAAKA,EACX,MAAM47B,EAAK57C,SAASs2C,cAAyB,IAAVkG,EAAe,KAAO,MACzDZ,EAAGpF,UAAYv9B,EAAIwjC,SAASz8B,GAEb,KAAXu8B,IACAX,EAAG7d,MAAM2e,gBAA6B,IAAVF,EAAeD,EAASD,EAAQE,EAAQ,GACpEZ,EAAG7d,MAAM4e,MAAmB,IAAVH,EAAe,QAAU,SAE3Cx8B,EAAIvE,MAAM,0BACVmgC,EAAG7d,MAAM6e,UAAY,SAEzBX,EAAG1F,YAAYqF,EACnB,CACA7zB,EAAMwuB,YAAY0F,EACtB,CACA,OAAOl0B,CACX,ICxaR,IAEI,SAAU,CACNzoB,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgJ,GACV,OAAOzE,OAAOyE,GACThY,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,OACvB,GAGJ,YAAa,CACTmG,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgB9L,GAEhB,GAAIlZ,UAAU4kD,UAEV,kBADM5kD,UAAU4kD,UAAUC,UAAU3rC,GAIxC,MAAMqO,EAAMxf,SAASs2C,cAAc,OAC7ByG,EAAM/8C,SAASs2C,cAAc,OACnCyG,EAAIhf,MAAMif,iBAAmB,OAC7BD,EAAIhf,MAAMkf,WAAa,OACvBz9B,EAAI+2B,YAAYwG,GAAKG,YAAc/rC,EAEnCqO,EAAIue,MAAM9xB,SAAW,QACrBuT,EAAItlB,MAAQ,OACZ8F,SAASmP,KAAKonC,YAAY/2B,GAC1Bxf,SAASm9C,eAAeC,kBAAkB59B,GAC1Cxf,SAASq3C,YAAY,QACrBr3C,SAASmP,KAAK8qC,YAAYz6B,EAC9B,EACAhP,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGqZ,GAEb,IAAIhhB,UAAU4kD,UAWV,MAAM,IAAI76C,MAAM,yBAVG,iBAAR,IACPpC,EAAIqZ,EAAIc,WAAWna,EAAG,eAEf3H,UAAU4kD,UAAUQ,WAC5B76B,MAAKrR,IACJ8H,EAAIE,KAAK,MAAQhI,EACjBvR,EAAEqZ,EAAI,GAMlB,GAEJ,YAAa,CACT3Z,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN3I,SAAS,EACTD,GAAI8U,eAAgBhE,GAEhB,GAAIhhB,UAAU4kD,UAAW,CAErB,aADqB5kD,UAAU4kD,UAAUQ,UAE7C,CAEI,MAAM,IAAIr7C,MAAM,wBAExB,IC5ER,IAEI,KAAM,CACF1C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAU9C,EAAGxH,EAAKob,GAClBA,EAAIgB,OAAO,cAAe,CAAC5U,EAAGxH,EAAKob,GACvC,EACAzI,aAAa,GAEjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN5I,GAAI,SAAUtK,EAAKob,GACf,OAAOA,EAAIgB,OAAO,aAAc,CAACpc,EAAKob,GAC1C,EACAzI,aAAa,GAEjB,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN5I,GAAI,SAAUtK,EAAKob,GACf,OAAOA,EAAIgB,OAAO,aAAc,CAACpc,EAAKob,GAC1C,EACAzI,aAAa,GAEjB,KAAM,CACFlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUtK,GAEV,OAAc,OADJhF,OAAOq3C,aAAaE,QAAQvyC,EAE1C,EACA2S,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAU9C,EAAGxH,EAAKob,GAClB,IAAI9J,EAAO9J,EACP4T,EAAIE,KAAK,YAAeF,EAAIE,KAAK,WAAW/gB,QAAQ,SAAW,IAC/D+W,EAAOjI,KAAKC,UAAUgI,IAE1BtW,OAAOq3C,aAAaryC,GAAOsR,CAC/B,EACAqB,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,MACnBkI,MAAM,EACN5I,GAAI,SAAUtK,EAAKob,GACf,MAAM5T,EAAIxM,OAAOq3C,aAAaryC,GAC9B,GAAIob,EAAIE,KAAK,YAAeF,EAAIE,KAAK,WAAW/gB,QAAQ,SAAW,EAC/D,IACI,OAAO8O,KAAK+X,MAAM5Z,EACtB,CACA,MAAO/M,GACHkkB,QAAQC,IAAI,aAAe5e,EAAM,YACrC,CAEJ,OAAOwH,CACX,EACAmL,aAAa,GAEjB,gBAAiB,CACblR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMhY,EAAO,GACb,IAAK,MAAMpD,KAAOhF,OAAOq3C,aACrBjvC,EAAK9B,KAAKtB,GAEd,OAAOoD,CACX,EACAuP,aAAa,GAEjB,gBAAiB,CACblR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUtK,GACVhF,OAAOq3C,aAAaoN,WAAWz/C,EACnC,EACA2S,aAAa,GAEjB,eAAgB,CACZlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACAtP,OAAOq3C,aAAax2C,OACxB,EACA8W,aAAa,GAEjB,gBAAiB,CACblR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,WACA,YAAuC,IAAxBtP,OAAOq3C,YAC1B,EACA1/B,aAAa,GAEjB,UAAW,CAAElR,KAAM,QAASwI,MAAO,QACnC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GACb5T,EAAIA,EAAEnI,YAAYmI,GAClB4T,EAAIE,KAAK,WAAa9T,CAC1B,EACAmL,aAAa,ICvHrB,MAAM+sC,GAAmB,mDACzB,QAEI,OAAQ,CACJj+C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU8yC,EAAIhiC,GAId,GAHkB,iBAAPgiC,IACPA,EAAKj7C,SAASq5C,cAAc4B,IAAOj7C,SAAS6xC,eAAeoJ,KAE1DA,EACD,MAAM,IAAIj5C,MAAM,6BAEpBiX,EAAIukC,SAAWvC,EACfhiC,EAAIwkC,MAAQxC,EAAGyC,WAAW,MAC1BzkC,EAAI0kC,YAAc,QAClB1kC,EAAI2kC,cAAgB,QACpB3kC,EAAIE,KAAK,YAAc8hC,EACvBhiC,EAAIE,KAAK,aAAeF,EAAIwkC,KAChC,EACAjtC,aAAa,GAEjB,WAAY,CAAElR,KAAM,QAASwI,MAAO,MACpC,YAAa,CAAExI,KAAM,QAASwI,MAAO,MACrC,YAAa,CACTxI,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMnM,MACd,EACA9gC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMI,SACd,EACArtC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAI2kC,cAAgBv4C,EACV,KAANA,IACA4T,EAAIwkC,MAAMK,YAAcz4C,EAEhC,EACAmL,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAI0kC,YAAct4C,EACR,KAANA,IACA4T,EAAIwkC,MAAMM,UAAY14C,EAE9B,EACAmL,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MAAO,CAAC,IAAK,OACrBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGoK,EAAGoP,GAChB,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMO,YACV/kC,EAAIwkC,MAAMQ,OAAOx+C,EAAE,GAAIA,EAAE,IACzBwZ,EAAIwkC,MAAMS,OAAOr0C,EAAE,GAAIA,EAAE,IACzBoP,EAAIwkC,MAAMU,QACd,EACA3tC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMW,UAAY/4C,CAC1B,EACAmL,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU0B,EAAGoP,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEI,KAApBtkC,EAAI0kC,aAA4C,KAAtB1kC,EAAI2kC,gBAGlC3kC,EAAIwkC,MAAMO,YACV/kC,EAAIwkC,MAAMY,KAAKx0C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACX,KAApBoP,EAAI0kC,aACJ1kC,EAAIwkC,MAAMvV,OAEY,KAAtBjvB,EAAI2kC,eACJ3kC,EAAIwkC,MAAMU,SAElB,EACA3tC,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMa,UAAU,EAAG,EAAGrlC,EAAIukC,SAAStC,MAAOjiC,EAAIukC,SAASrC,OAC/D,EACA3qC,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU0B,EAAGoP,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEd1zC,aAAazI,QACfyI,EAAI,IAES,IAAbA,EAAE5Q,OACF4Q,EAAI,CAAC,EAAG,EAAGoP,EAAIukC,SAAStC,MAAOjiC,EAAIukC,SAASrC,QAEvCtxC,EAAE5Q,QAAU,IACjB4Q,EAAEgX,QAAQ,GACVhX,EAAEgX,QAAQ,IAEd5H,EAAIwkC,MAAMa,UAAUz0C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAC5C,EACA2G,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAUo2C,EAAI3gD,EAAGqb,GACjB,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEI,KAApBtkC,EAAI0kC,aAA4C,KAAtB1kC,EAAI2kC,gBAGlC3kC,EAAIwkC,MAAMO,YACV/kC,EAAIwkC,MAAMe,IAAID,EAAG,GAAIA,EAAG,GAAI3gD,EAAG,EAAG,EAAI6V,KAAK0I,IAAI,GACvB,KAApBlD,EAAI0kC,aACJ1kC,EAAIwkC,MAAMvV,OAEY,KAAtBjvB,EAAI2kC,eACJ3kC,EAAIwkC,MAAMU,SAElB,EACA3tC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU4H,EAAMkJ,GAChB,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpB,IAAKxtC,EACD,MAAM,IAAI/N,MAAM,kBAEpB,GAAI+N,EAAK9W,OAAS,EACd,MAAM,IAAI+I,MAAM,qBAEhB+N,EAAK9W,OAAS,IACT8W,EAAK,KACNA,EAAK,GAAK,GAETA,EAAK,KACNA,EAAK,GAAK,GAETA,EAAK,KACNA,EAAK,GAAe,EAAV0D,KAAK0I,IAEdpM,EAAK,KACNA,EAAK,IAAK,IAGM,KAApBkJ,EAAI0kC,aAA4C,KAAtB1kC,EAAI2kC,gBAGlC3kC,EAAIwkC,MAAMO,YACV/kC,EAAIwkC,MAAMgB,QAAQrkC,MAAMnB,EAAIwkC,MAAO1tC,GACX,KAApBkJ,EAAI0kC,aACJ1kC,EAAIwkC,MAAMvV,OAEY,KAAtBjvB,EAAI2kC,eACJ3kC,EAAIwkC,MAAMU,SAElB,EACA3tC,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpB,GAAwB,KAApBtkC,EAAI0kC,aAA4C,KAAtB1kC,EAAI2kC,cAC9B,OAEJ3kC,EAAIwkC,MAAMO,YACV,MAAMnhC,EAAIpd,EAAE,GACZwZ,EAAIwkC,MAAMQ,OAAOphC,EAAE,GAAIA,EAAE,IACzB,IAAK,IAAIpf,EAAI,EAAGA,EAAIgC,EAAExG,OAAQwE,IAAK,CAC/B,MAAMjF,EAAIiH,EAAEhC,GACZwb,EAAIwkC,MAAMS,OAAO1lD,EAAE,GAAIA,EAAE,GAC7B,CACAygB,EAAIwkC,MAAMS,OAAOrhC,EAAE,GAAIA,EAAE,IACD,KAApB5D,EAAI0kC,aACJ1kC,EAAIwkC,MAAMvV,OAEY,KAAtBjvB,EAAI2kC,eACJ3kC,EAAIwkC,MAAMU,QAElB,EACA3tC,aAAa,GAEjB,MAAO,CACHlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,MAAMmiC,EAAM,IAAIviD,OAAO6lD,MAGvB,OAFAtD,EAAIr+B,IAAMiG,EACVo4B,EAAIuD,YAAc,YACXvD,CACX,GAEJ,OAAQ,CACJ97C,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU6a,GACV,OAAO,IAAI1C,SAAQ,CAACC,EAASC,KACzB,MAAM46B,EAAM,IAAIviD,OAAO6lD,MACvBtD,EAAIr+B,IAAMiG,EACVo4B,EAAIuD,YAAc,YAClBvD,EAAIwD,OAAS,KAAQr+B,EAAQ66B,EAAI,EACjCA,EAAIyD,QAAU,KACVr+B,EAAO,IAAIxe,MAAM,sBAAsBghB,MAAQ,CAClD,GAET,GAEJ,QAAS,CACL1jB,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,QAAoB5W,IAAhB4W,EAAIsH,QACJ,MAAM,IAAIve,MAAM,6BAEpBiX,EAAIkgC,eACJ,MAAMiC,EAAM,IAAIviD,OAAO6lD,MAWvB,OAVAtD,EAAIr+B,IAAMiG,EACVo4B,EAAIuD,YAAc,YAClBvD,EAAIwD,OAAS,KACT3lC,EAAIE,KAAK,MAAQiiC,EACjBniC,EAAIsH,SAAS,EAEjB66B,EAAIyD,QAAU,KACV5lC,EAAIE,KAAK,MAAQ,GACjBF,EAAIuH,QAAQ,EAET46B,CACX,GAEJ,OAAQ,CACJ97C,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUvI,EAAGojB,EAAK/J,GAElB,MAAM1I,EAAO0I,EAAII,UAAUzZ,EAAG,MAExBw7C,EAAM,IAAIviD,OAAO6lD,MACvBtD,EAAIr+B,IAAMiG,EACVo4B,EAAIuD,YAAc,YAClBvD,EAAIwD,OAAS,KACT3lC,EAAIE,KAAK,MAAQiiC,EACjB7qC,EAAK0I,EAAI,EAEbmiC,EAAIyD,QAAU,KACV5lC,EAAIE,KAAK,MAAQ,GACjB5I,EAAK0I,EAAI,CAEjB,EACAzI,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUizC,EAAKmD,EAAItlC,GACnB,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpB,MAAMuB,EAAW,CAACC,EAAIC,KAClB,GAAkB,IAAdT,EAAGtlD,OACH+lD,EAAIC,UAAUF,EAAIR,EAAG,GAAIA,EAAG,SAE3B,GAAkB,IAAdA,EAAGtlD,OACR+lD,EAAIC,UAAUF,EAAIR,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,QAEzC,IAAkB,IAAdA,EAAGtlD,OAIR,MAAM,IAAI+I,MAAM,mCAHhBg9C,EAAIC,UAAUF,EAAIR,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAI1E,GAEJ,GAAmB,iBAARnD,EAAkB,CACzB,MAAM8D,EAAQ,IAAIrmD,OAAO6lD,MAMzB,OALAQ,EAAMniC,IAAMq+B,EACZ8D,EAAMP,YAAc,YACpBO,EAAMN,OAAS,KACXE,EAASI,EAAOjmC,EAAIwkC,MAAM,EAEvByB,CACX,CAGI,OADAJ,EAAS1D,EAAKniC,EAAIwkC,OACXrC,CAEf,EACA5qC,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MAAO,CAAC,IAAK,MACjCkI,MAAM,EACN5I,GAAI,SAAUizC,EAAK+D,EAAKC,EAAKnmC,GACzB,MAAMomC,EAAY,iFAElB,GAAIjE,GAAO+D,IACF/9C,MAAMC,QAAQ89C,IAAQ/9C,MAAMC,QAAQ+5C,KAElB,iBAAR+D,GAA8C,8BAA1BzyC,OAAOyyC,EAAIG,YAA4C,CAClF,MAAMC,EAAKnE,EACXA,EAAM+D,EACNA,EAAMI,CACV,CAGR,IAAKtmC,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpB,MAAMuB,EAAW,CAACC,EAAIC,KAUlB,GATKI,IACID,EAGIA,EAAIlmD,QAAU,IACnBmmD,EAAMD,EACNA,OAAM98C,GAJN28C,EAAIC,UAAUF,IAOH,IAAfK,EAAInmD,OACJ+lD,EAAIC,UAAUF,EAAIK,EAAI,GAAIA,EAAI,QAE7B,IAAmB,IAAfA,EAAInmD,OAYT,MAAM,IAAI+I,MAAMq9C,GAXhB,GAAKF,EAGA,IAAmB,IAAfA,EAAIlmD,OAIT,MAAM,IAAI+I,MAAMq9C,GAHhBL,EAAIC,UAAUF,EAAII,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIC,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAIlF,MAPIJ,EAAIC,UAAUF,EAAIK,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAWtD,GAEJ,GAAmB,iBAARhE,EAAkB,CACzB,MAAM8D,EAAQ,IAAIrmD,OAAO6lD,MAMzB,OALAQ,EAAMniC,IAAMq+B,EACZ8D,EAAMP,YAAc,YACpBO,EAAMN,OAAS,KACXE,EAASI,EAAOjmC,EAAIwkC,MAAM,EAEvByB,CACX,CAGI,OADAJ,EAAS1D,EAAKniC,EAAIwkC,OACXrC,CAEf,EACA5qC,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,IAAK,MACvBkI,MAAM,EACN5I,GAAI,SAAU5P,EAAG0gB,GAEI,iBAAN1gB,IACPA,GAAQ,iBAGR,kBAAkBoO,KAAKpO,KACvBA,GAAQ,eAEZ0gB,EAAIwkC,MAAM+B,KAAOjnD,CACrB,EACAiY,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUo2C,EAAIhhD,EAAG0b,GACjB,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMgC,SAASliD,EAAGghD,EAAG,GAAIA,EAAG,GACpC,EACA/tC,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpB,OAAOtkC,EAAIwkC,MAAMiC,YAAYniD,EACjC,EACAiT,aAAa,GAEjB,SAAU,CACNlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUo2C,EAAItlC,GACd,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMkC,UAAUpB,EAAG,GAAIA,EAAG,GAClC,EACA/tC,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMmC,OAAOngD,EAAIgU,KAAK0I,GAAK,IACnC,EACA3L,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAUo2C,EAAItlC,GACd,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMoC,MAAMtB,EAAG,GAAIA,EAAG,GAC9B,EACA/tC,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMqC,aAAargD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACjE,EACA+Q,aAAa,GAEjB,cAAe,CACXlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,IAAK,MACnBkI,MAAM,EACN5I,GAAI,SAAU1I,EAAGwZ,GACb,IAAKA,EAAIwkC,MACL,MAAM,IAAIz7C,MAAMu7C,IAEpBtkC,EAAIwkC,MAAMsC,UAAUtgD,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAC9D,EACA+Q,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAGV,OAFWA,EAAIE,KAAK,YACL6mC,UAAU,YAE7B,GAEJ,cAAe,CACX1gD,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU8Q,GACV,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACdvH,EAAIE,KAAK,YACjB8mC,QAAQx2C,IAAa8W,EAAQ9W,EAAO,GAAK,YAAY,GAEhE,GAEJ,gBAAiB,CACbnK,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUuxC,EAAKzgC,GAIf,GAHmB,iBAARygC,IACPA,EAAM15C,SAASq5C,cAAcK,KAE5BA,EACD,MAAM,IAAI13C,MAAM,gCAEpB,MAAMi5C,EAAKhiC,EAAIE,KAAK,YACpB,IAAK8hC,EACD,MAAM,IAAIj5C,MAAM,kCAEpB03C,EAAInB,KAAO0C,EAAG+E,UAAU,aACxBtG,EAAIwG,SAAW,YACnB,EACA1vC,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACV,MAAMgiC,EAAKhiC,EAAIE,KAAK,YACpB,IAAK8hC,EACD,MAAM,IAAIj5C,MAAM,kCAEpB,MAAMvC,EAAIO,SAASs2C,cAAc,KAIjC,OAHA72C,EAAE84C,KAAO0C,EAAG+E,UAAU,aACtBvgD,EAAEygD,SAAW,aACbzgD,EAAE0gD,SACK,CACX,IC1kBR,IAEI,UAAW,CACP7gD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAM0I,GAChB,IAAI8P,EAAKxY,EAIT,GAHkB,iBAAPwY,IACPA,EAAK9P,EAAII,UAAU0P,MAEjB,gBAAiB9wB,WACnB,MAAM,IAAI+J,MAAM,sBAEpB/J,UAAUmoD,YAAYC,oBAAoBp0C,IACtCgN,EAAIE,KAAK,MAAQ,CACblN,EAASq0C,OAAOC,SAChBt0C,EAASq0C,OAAOE,WAEpBz3B,EAAG9c,EAAS,GAEpB,EACAuE,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAM0I,GAChB,IAAI8P,EAAKxY,EAIT,GAHkB,iBAAPwY,IACPA,EAAK9P,EAAII,UAAU0P,MAEjB,gBAAiB9wB,WACnB,MAAM,IAAI+J,MAAM,sBAEpB,OAAO/J,UAAUmoD,YAAYK,eAAex0C,IACxCgN,EAAIE,KAAK,MAAQ,CACblN,EAASq0C,OAAOC,SAChBt0C,EAASq0C,OAAOE,WAEpBz3B,EAAG9c,EAAS,GAEpB,EACAuE,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUu4C,EAAKznC,GACfhhB,UAAUmoD,YAAYO,WAAWD,EACrC,EACAlwC,aAAa,ICrDrB,IAEI,IAAK,CACDlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAM9W,EAAM8W,EAAIgB,OAAO,iBAAkB,CAAC1c,EAAG0b,IAG7C,OAFApgB,OAAO+nD,gBAAgBC,MAAM1+C,GAC7Bqa,QAAQC,IAAI,OAAQlf,GACbA,CACX,GAEJ,KAAM,CACF+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN3I,SAAS,EACTD,GAAI,SAAU5K,EAAG0b,GACb,OAAO,IAAIqH,SAAQ,CAACC,EAASC,KACzB,IACI,MAAMre,EAAM8W,EAAIgB,OAAO,iBAAkB,CAAC1c,EAAG0b,IAC7C9W,EAAI2+C,MAAQ,KAAQvgC,GAAS,EAC7B1nB,OAAO+nD,gBAAgBC,MAAM1+C,GAC7Bqa,QAAQC,IAAI,OAAQlf,EACxB,CACA,MAAOojB,GACHH,EAAOG,EACX,IAER,GAEJ,MAAO,CACHrhB,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,IAAK,MACzBkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAU//B,EAAG0b,GACvB,MAAM9W,EAAM8W,EAAIgB,OAAO,iBAAkB,CAAC1c,EAAG0b,IAQ7C,OAPA9W,EAAI2+C,MAASxoD,IACTkkB,QAAQC,IAAI,QACZxD,EAAIE,KAAK,UAAY7gB,EACrBglC,EAASrkB,EAAI,EAEjBpgB,OAAO+nD,gBAAgBC,MAAM1+C,GAC7Bqa,QAAQC,IAAI,OAAQlf,GACbA,CACX,GAEJ,iBAAkB,CACd+B,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GAEb,IAAI8nC,EAAQ9nC,EAAIE,KAAK,QAChB4nC,IACDA,EAAQ9nC,EAAIgB,OAAO,OAAQ,CAAC,KAAMhB,KAGtC,MAAM9W,EAAM,IAAI6+C,yBAAyBzjD,GAQzC,OAPA4E,EAAI4+C,MAAQA,EACRA,IACA5+C,EAAI8+C,KAAOF,EAAME,MAErB9+C,EAAI++C,KAAOjoC,EAAIE,KAAK,QACpBhX,EAAIg/C,MAAQloC,EAAIE,KAAK,QACrBhX,EAAIi/C,OAASnoC,EAAIE,KAAK,QACfhX,CACX,GAEJ,SAAU,CACN7C,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEV,KAAM,6BAA8BpgB,QAChC,MAAM,IAAImJ,MAAM,oBAEpB,OAAOnJ,OAAO+nD,gBAAgBS,WAClC,GAEJ,OAAQ,CACJ/hD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU9C,EAAG4T,GAEb,KAAM,6BAA8BpgB,QAChC,MAAM,IAAImJ,MAAM,oBAGpB,GAAiB,iBAANqD,EAAgB,CAEvB,MAAMi8C,EAASzoD,OAAO+nD,gBAAgBS,YACtC,IAAK,MAAM5jD,KAAK6jD,EACZ,GAAI7jD,EAAEwjD,KAAK7oD,QAAQiN,IAAM,GAAK5H,EAAEgF,OAAS4C,EAAG,CACxC,MAAMlD,EAAM,IAAI6+C,yBAKhB,OAJA7+C,EAAI4+C,MAAQtjD,EACZ0E,EAAI8+C,KAAOxjD,EAAEwjD,KACbhoC,EAAIE,KAAK,QAAU1b,EACnB+e,QAAQC,IAAI,OAAQhf,EAAEgF,MACfhF,CACX,CAER,CAEA,GAAiB,iBAAN4H,EAEP,OADA4T,EAAIE,KAAK,QAAU9T,EACZA,CAGf,GAEJ,OAAQ,CAAE/F,KAAM,QAASwI,MAAO,GAChC,OAAQ,CAAExI,KAAM,QAASwI,MAAO,GAChC,OAAQ,CAAExI,KAAM,QAASwI,MAAO,GAChC,SAAU,CACNxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,MAAMsoC,EAAa,CAAC1jD,EAAKwH,KACT,OAARxH,IACAob,EAAIE,KAAK,QAAU9T,GAEX,OAARxH,GAAwB,QAARA,IAChBob,EAAIE,KAAK,QAAU9T,GAEX,OAARxH,IACAob,EAAIE,KAAK,QAAU9T,EACvB,EAGJ,IAAK,MAAMxH,KAAOsf,EAAK,CAEnBokC,EAAW1jD,EADDsf,EAAItf,GAElB,CACJ,IC1IR,IAEI,UAAW,CACPyB,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUrkB,GACpBA,EAAIE,KAAK,aAAemkB,CAC5B,EACA9sB,aAAa,GAEjB,QAAS,CACLlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUrkB,GACpBA,EAAIE,KAAK,gBAAkBmkB,CAC/B,EACA9sB,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUm1B,EAAUrkB,GACpBA,EAAIE,KAAK,cAAgBmkB,CAC7B,EACA9sB,aAAa,GAEjB,OAAQ,CACJlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACb,MAAMuoC,EAAK,IAAIC,UAAUlkD,GAsBzB,OArBAikD,EAAGE,OAAS,KACR,MAAMC,EAAS1oC,EAAIE,KAAK,aACpBwoC,GACAA,EAAO1oC,EACX,EAEJuoC,EAAG3C,QAAWl+B,IACV,MAAMihC,EAAU3oC,EAAIE,KAAK,cACrByoC,GACAA,EAAQjhC,EAAK1H,GAEjBuD,QAAQC,IAAI,QAASkE,EAAI,EAE7B6gC,EAAGK,UAAavpD,IACZ2gB,EAAIE,KAAK,MAAQ7gB,EAAE0lC,KACnB,MAAM8jB,EAAQ7oC,EAAIE,KAAK,gBACnB2oC,GACAA,EAAM7oC,EACV,EAEJA,EAAIE,KAAK,aAAeqoC,EACjBA,CACX,GAEJ,OAAQ,CACJliD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU5K,EAAG0b,GACFA,EAAIE,KAAK,aACjBmD,KAAK/e,EACZ,GAEJ,OAAQ,CACJ+B,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GACCA,EAAIE,KAAK,aACjB4oC,OACP,IC3ER,IAEI,SAAU,CACNziD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAU6a,EAAK/J,GACf,MAAMxZ,EAAI,IAAIuiD,MAEd,OADAviD,EAAEsd,IAAMiG,EACDvjB,CACX,EACA+Q,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,wCAEpBmb,EAAI8kC,MAAO,EACX9kC,EAAI+kC,MACR,EACA1xC,aAAa,GAEjB,aAAc,CACVlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,wCAEpBmb,EAAI8kC,MAAO,EACX9kC,EAAI+kC,MACR,EACA1xC,aAAa,GAEjB,UAAW,CACPlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,wCAEpBmb,EAAIglC,QACJhlC,EAAIilC,YAAc,EAElB1hC,YAAW,KACPvD,EAAIilC,YAAc,CAAC,GACpB,GACP,EACA5xC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,MACRkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,0CAEpBmb,EAAIglC,OACR,EACA3xC,aAAa,GAEjB,YAAa,CACTlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,yCAEpB,OAAOmb,EAAIikC,MACf,GAEJ,YAAa,CACT9hD,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUgV,EAAK9X,EAAG4T,GAClB,IAAKkE,EACD,MAAM,IAAInb,MAAM,yCAEpBmb,EAAIikC,OAAS/7C,CACjB,EACAmL,aAAa,GAEjB,WAAY,CACRlR,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,yCAEpB,OAAOmb,EAAIklC,QACf,GAEJ,cAAe,CACX/iD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,OACbkI,MAAM,EACN5I,GAAI,SAAUgV,EAAKlE,GACf,IAAKkE,EACD,MAAM,IAAInb,MAAM,4CAEpB,OAAOmb,EAAIilC,WACf,GAEJ,cAAe,CACX9iD,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,IAAK,MACpBkI,MAAM,EACN5I,GAAI,SAAUgV,EAAK9X,EAAG4T,GAClB,IAAKkE,EACD,MAAM,IAAInb,MAAM,wCAEpBmb,EAAIilC,YAAc/8C,CACtB,EACAmL,aAAa,iCCxGrB,MAoBM8xC,GAAgB,CAClB,KAAQ,CACJhjD,KAAM,QACNwI,MAAO,CACH+Q,WAAY,iBACZC,cAAe,SACfC,YAAa,CAAC,SACdC,YAAa,YAGrB,MAAO,CACH1Z,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAEV,MAAM+vB,EAA2B,oBAAbhpC,SAA4B,CAAE,KAAQ,CAAC,GAAMA,SAC3DuiD,EAAyB,oBAAX1pD,OAA0B,CAAE,SAAY,CAAE,KAAQ,sBAA0BA,OAC1F2pD,EAA4B,oBAAdvqD,UAA6B,CAAC,EAAIA,UAChDwqD,OAA+B,IAAjBF,EAAIjK,SAA4B,CAAE,KAAQ,qBAAwBiK,EAAIjK,SAE1Fr/B,EAAIE,KAAK,gBAAmBwH,IAAUnE,QAAQC,IAAIkE,EAAI,EAEtD1H,EAAIE,KAAKupC,SAAW1Z,EACpB/vB,EAAIE,KAAKwpC,OAASJ,EAClBtpC,EAAIE,KAAKypC,UAAYJ,EACrBvpC,EAAIE,KAAK,UAAY6vB,EAAI75B,KACzB8J,EAAIE,KAAK,WAAaspC,EAAIlK,KAE1Bt/B,EAAIwjC,SAAYtrC,IACJ,GAAKA,GACRhY,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAEvB8f,EAAI0iC,UAAaxqC,GACN8H,EAAIwjC,SAAStrC,GACfhY,QAAQ,KAAM,SACdA,QAAQ,KAAM,SAGvB8f,EAAI4pC,aAAe,GAEnB5pC,EAAIkhC,WAAa,CAACT,EAAK5gD,EAAOyX,EAAMuyC,KAEhC,GAAqB,iBAAV,KACPpJ,EAAM1Q,EAAIqQ,cAAcK,IAEpB,MAAM,IAAI13C,MAAM,+BAIxB,GAAsB,iBAAX,KACPuO,EAAO0I,EAAII,UAAU9I,EAAM,OAEvB,MAAM,IAAIvO,MAAM,+BAIxB,MAAM+gD,EAAezqD,IACjB2gB,EAAIE,KAAK,MAAQ7gB,EAAEoI,OACnBuY,EAAIE,KAAK,UAAY7gB,EAEjBwqD,GACAA,EAAWxqD,EAAG2gB,GAEI,WAAlBA,EAAIgD,YACJhD,EAAI2H,QAAS,GAEVrQ,EAAKjY,EAAG2gB,IAGnBA,EAAI4pC,aAAa1jD,KAAK,CAAEu6C,MAAK5gD,QAAOyX,KAAMwyC,EAAaC,QAASzyC,IAChEmpC,EAAIhhD,iBAAiBI,EAAOiqD,EAAY,EAG5C9pC,EAAIohC,aAAe,CAAC/hD,EAAG2gB,KACnBA,EAAIE,KAAK,OAAS7gB,EAAEuF,GAAG,EAG3Bob,EAAIqhC,eAAiB,CAAChiD,EAAG2gB,KACrB,MAAMgqC,EAAM3qD,EAAEoI,OAAOwiD,wBACrBjqC,EAAIE,KAAK,QAAU7gB,EAAEs7C,QAAUqP,EAAIjpD,KACnCif,EAAIE,KAAK,QAAU7gB,EAAEu7C,QAAUoP,EAAIjU,GAAG,EAG1C/1B,EAAIshC,eAAiB,CAACjiD,EAAG2gB,KACrB,MAAMgqC,EAAM3qD,EAAEoI,OAAOwiD,wBACfC,EAAU7qD,EAAE8qD,eAClB,GAAID,EAAQlqD,QAAU,EAClB,OAEJ,MAAMoqD,EAAK,GACX,IAAK,IAAI5lD,EAAI,EAAGA,EAAI0lD,EAAQlqD,OAAQwE,IAAK,CACrC,MAAMjF,EAAI2qD,EAAQ1lD,GACZ6lD,EAAK9qD,EAAEo7C,QAAUqP,EAAIjpD,KACrB08B,EAAKl+B,EAAEq7C,QAAUoP,EAAIjU,IACjB,IAANvxC,IACAwb,EAAIE,KAAK,QAAUmqC,EACnBrqC,EAAIE,KAAK,QAAUud,GAEvB2sB,EAAGlkD,KAAK,CAACmkD,EAAI5sB,GACjB,CAEA,OADAzd,EAAIE,KAAK,SAAWkqC,EACbA,CAAE,EAGbpqC,EAAImhC,cAAgB,CAACV,EAAK5gD,EAAOyX,KAE7B,GAAqB,iBAAV,KACPmpC,EAAM1Q,EAAIqQ,cAAcK,IAEpB,MAAM,IAAI13C,MAAM,+BAIxB,GAAsB,iBAAX,KACPuO,EAAO0I,EAAII,UAAU9I,EAAM,OAEvB,MAAM,IAAIvO,MAAM,+BAIxB,IAAK,IAAIvE,EAAI,EAAGA,EAAIwb,EAAI4pC,aAAa5pD,OAAQwE,IAAK,CAC9C,MAAMnF,EAAI2gB,EAAI4pC,aAAaplD,GAC3B,GAAInF,EAAEohD,MAAQA,GAAOphD,EAAEQ,QAAUA,GAASR,EAAE0qD,UAAYzyC,EAAM,CAC1DjY,EAAEohD,IAAI6J,oBAAoBjrD,EAAEQ,MAAOR,EAAEiY,MACrC0I,EAAI4pC,aAAavpD,OAAOmE,EAAG,GAC3B,KACJ,CACJ,GAGJwb,EAAIuhC,8BAAgC,EAEpCvhC,EAAIuqC,oBAAsB,KACtBvqC,EAAI4pC,aAAa/kD,SAAQxF,IACrBkkB,QAAQC,IAAInkB,EAAEQ,MAAOR,EAAEohD,IAAKphD,GAC5BA,EAAEohD,IAAI6J,oBAAoBjrD,EAAEQ,MAAOR,EAAEiY,KAAK,IAE9C0I,EAAI4pC,aAAe,GAEf5pC,EAAIuhC,8BAAgC,IACpC+H,EAAI7H,qBAAqBzhC,EAAIuhC,+BAC7BvhC,EAAIuhC,8BAAgC,EACxC,EAGJvhC,EAAIwgC,QAAU,CAACC,EAAK+J,EAAaC,KAC7B,MAAM9I,EAAsB,iBAARlB,EAAoB15C,SAASq5C,cAAcK,GAAOA,EACtE,IAAKkB,EAAK,CACN,IAAI8I,EAIC,CAED,MAAM/2B,EAAuB,iBAAR+sB,EAAoBA,EAAMhtC,OAAOgtC,GACtD,MAAM,IAAI13C,MAAM,IAAIyhD,UAAoB92B,mBAC5C,CANInQ,QAAQlQ,KAAK,SAAS2M,EAAIE,KAAK7W,SAASmhD,wBAAmC/J,EAOnF,CACA,OAAOkB,CAAG,CAElB,GAEJ,OAAQ,CACJt7C,KAAM,OACNuJ,KAAM,GACNkI,MAAM,EACN5I,GAAI,SAAU8Q,GAENA,EAAI0qC,WACJ1qC,EAAI0qC,UAAUrkB,UAGlBrmB,EAAIuqC,qBACR,IApMa,CACjB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GCjCJ,CAEI,UAAW,CACPlkD,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,KAAM,CAAC,MACpBkI,MAAM,EACN5I,GAAI,SAAUtK,EAAKsG,EAAO8U,GACtB,GAAQpb,GAAK,SAAU/E,EAAO8qD,GAC1B9qD,EAAM2F,iBACIwa,EAAIc,WAAW5V,EACzBvE,CAAEqZ,EACN,GACJ,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,MACbkI,MAAM,EACN5I,GAAI,SAAUtK,GACV,UAAeA,EACnB,ICrBR,CAEI,QAAS,CACLyB,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,IAAKpgB,OAAOgrD,MACR,MAAM,IAAI7hD,MAAM,mCAGpB,IAAKiX,EAAIukC,SACL,MAAM,IAAIx7C,MAAM,8CAGhBg8B,EAAK,SACLA,EAAK1+B,KAAO0+B,EAAK,QAEjBA,EAAK,SACLA,EAAKA,KAAOA,EAAK,QAEjBA,EAAK,WACLA,EAAKlvB,QAAUkvB,EAAK,UAEpB/kB,EAAI0qC,WACJ1qC,EAAI0qC,UAAUrkB,UAGlB,MAAMwkB,EAAQ,IAAID,MAAM5qC,EAAIukC,SAAUxf,GAEtC,OADA/kB,EAAI0qC,UAAYG,EACTA,CACX,GAEJ,WAAY,CAAExkD,KAAM,QAASwI,MAAO,CAAC,GACrC,SAAU,CACNxI,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM5Z,EAAI,CACNC,KAAM,OACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,OAAQ+jB,EAAM/kB,IAI5CnK,QAASmK,EAAIE,KAAK,aAEtB,OAAOF,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM8qC,EAAO3lD,OAAOskB,OAAO,CAAC,EAAGzJ,EAAIE,KAAK,YAAa,CAAE,UAAa,MAE9D9Z,EAAI,CACNC,KAAM,MACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASi1C,GAEb,OAAO9qC,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,UAAW,CACP3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM8qC,EAAO3lD,OAAOskB,OAAO,CAAC,EAAGzJ,EAAIE,KAAK,YAAa,CAAE,UAAa,MAE9D9Z,EAAI,CACNC,KAAM,MACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASi1C,GAEb,OAAO9qC,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,WAAY,CACR3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM8qC,EAAO3lD,OAAOskB,OAAO,CAAC,EAAGzJ,EAAIE,KAAK,YAAa,CACjD,UAAa,IACb,OAAU,CACNuG,EAAG,CAAEskC,SAAS,GACdnkD,EAAG,CAAEmkD,SAAS,MAIhB3kD,EAAI,CACNC,KAAM,MACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASi1C,GAEb,OAAO9qC,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,YAAa,CACT3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM8qC,EAAO3lD,OAAOskB,OAAO,CAAC,EAAGzJ,EAAIE,KAAK,YAAa,CACjD,UAAa,IACb,OAAU,CACNuG,EAAG,CAAEskC,SAAS,GACdnkD,EAAG,CAAEmkD,SAAS,MAIhB3kD,EAAI,CACNC,KAAM,MACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASi1C,GAEb,OAAO9qC,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,QAAS,CACL3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM8qC,EAAO3lD,OAAOskB,OAAO,CAAC,EAAGzJ,EAAIE,KAAK,YAAa,CAAC,GAEhD9Z,EAAI,CACNC,KAAM,UACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,UAAW+jB,EAAM/kB,IAI/CnK,QAASi1C,GAEb,OAAO9qC,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,SAAU,CACN3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM5Z,EAAI,CACNC,KAAM,MACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASmK,EAAIE,KAAK,aAEtB,OAAOF,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,YAAa,CACT3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM5Z,EAAI,CACNC,KAAM,WACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASmK,EAAIE,KAAK,aAEtB,OAAOF,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,YAAa,CACT3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM5Z,EAAI,CACNC,KAAM,YACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASmK,EAAIE,KAAK,aAEtB,OAAOF,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,YAAa,CACT3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,IAAK,IAAK,MAClBkI,MAAM,EACN5I,GAAI,SAAU61B,EAAM/kB,GAEhB,MAAM5Z,EAAI,CACNC,KAAM,QACN0+B,KAHJA,EAAO/kB,EAAIgB,OAAO,cAAe,CAAC,MAAO+jB,EAAM/kB,IAI3CnK,QAASmK,EAAIE,KAAK,aAEtB,OAAOF,EAAIgB,OAAO,QAAS,CAAC5a,EAAG4Z,GACnC,GAEJ,cAAe,CACX3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,MACfkI,MAAM,EACN5I,GAAI,SAAU3P,EAAGyrD,EAAShrC,GAEtB,MAAM+kB,EAAO92B,KAAK+X,MAAM/X,KAAKC,UAAU88C,IACjCC,EAAc,CAChB,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEEC,EAAc,CAChB,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEEj4C,EAAM,CAAC,EACPk4C,EAAW,GACXC,EAAW,GAGjB,GAFAn4C,EAAIuJ,OAAS,GAETuoB,aAAgB58B,MAAO,CAEvB,GAAI48B,EAAK,aAAc58B,MAAO,CAC1B,GAAU,QAAN5I,EAAa,CACb,MAAMC,EAAI,CACVA,KAAS,IACTyT,EAAIo4C,SAAW,CAAC7rD,GAChB,IAAK,IAAIgF,EAAI,EAAGA,EAAIugC,EAAK/kC,OAAQwE,IAC7ByO,EAAIuJ,OAAOtW,KAAK6+B,EAAKvgC,GAAG,IACxBhF,EAAEulC,KAAK7+B,KAAK6+B,EAAKvgC,GAAG,IACpB2mD,EAASjlD,KAAK+kD,EAAYzmD,EAAI,IAC9B4mD,EAASllD,KAAKglD,EAAY1mD,EAAI,IAIlC,OAFAhF,EAAEikD,gBAAkB0H,EACpB3rD,EAAE8rD,YAAcF,EACTn4C,CACX,CAGA,GAA4B,iBAAhB8xB,EAAK,GAAG,GAAkB,CAClC,IAAK,IAAIvgC,EAAI,EAAGA,EAAIugC,EAAK/kC,OAAQwE,IAC7ByO,EAAIuJ,OAAOtW,KAAK6+B,EAAKvgC,GAAG,IACxBugC,EAAKvgC,GAAKugC,EAAKvgC,GAAGzE,MAAM,GAE5BglC,EAAK,GAAKA,EAAK,GAAGhlC,MAAM,EAC5B,MAGI,IAAK,IAAIyE,EAAI,EAAGA,EAAIugC,EAAK/kC,OAAQwE,IAC7ByO,EAAIuJ,OAAOtW,KAAK1B,GAGxByO,EAAIo4C,SAAW,GACf,IAAK,IAAI7mD,EAAI,EAAGA,EAAIugC,EAAK,GAAG/kC,OAAQwE,IAAK,CACrC,MAAMhF,EAAI,CAAC,EACXyT,EAAIo4C,SAASnlD,KAAK1G,GAClBA,EAAEge,MAAQunB,EAAK,GAAGvgC,GAClBhF,EAAEikD,gBAAkBwH,EAAYzmD,EAAI,GACpChF,EAAE8rD,YAAcJ,EAAY1mD,EAAI,GAChChF,EAAEulC,KAAO,GACT,IAAK,IAAIhf,EAAI,EAAGA,EAAIgf,EAAK/kC,OAAQ+lB,IAC7BvmB,EAAEulC,KAAK7+B,KAAK6+B,EAAKhf,GAAGvhB,GAE5B,CACA,OAAOyO,CACX,CAGA,IAAK,IAAIzO,EAAI,EAAGA,EAAIugC,EAAK/kC,OAAQwE,IAC7ByO,EAAIuJ,OAAOtW,KAAK1B,EAAI,GACpB2mD,EAASjlD,KAAK+kD,EAAYzmD,EAAI,IAC9B4mD,EAASllD,KAAKglD,EAAY1mD,EAAI,IAElC,MAAM+mD,EAAK,CAAC,EAMZ,OALAt4C,EAAIo4C,SAAW,CAACE,GAChBA,EAAG/tC,MAAQ,MACX+tC,EAAGxmB,KAAOA,EACVwmB,EAAG9H,gBAAkB0H,EACrBI,EAAGD,YAAcF,EACVn4C,CACX,CACA,OAAI8xB,aAAgB5/B,OACT4/B,EAGJ/kB,EAAIgB,OAAO,cAAe,CAAC,CAAC+jB,GAAO/kB,GAC9C,ICpSR,CAEI,WAAY,CACR3Z,KAAM,OACNuJ,KAAM,CAAC,CAAC,KAAM,CAAC,KAAM,CAAC,MACtBkI,MAAM,EACN5I,GAAI,SAAUoI,EAAMhT,EAAGknD,EAAKxrC,GACxB1I,EAAO0I,EAAII,UAAU9I,EAAM,MAE3B,MAAMm0C,GAAS,IAAIthC,aAAcC,OAAO9lB,GACxConD,OAAOC,OAAOC,OAAOJ,EAAKC,GAAQliC,MAAK,SAAUsiC,GAC7C,MAAMlvC,EAAQ,GACRmvC,EAAO,IAAIC,SAASF,GAC1B,IAAK,IAAIrnD,EAAI,EAAGA,EAAIsnD,EAAKE,WAAYxnD,GAAK,EAAG,CACzC,MAEMynD,EAAM,KAFFH,EAAKI,UAAU1nD,GACbwC,SAAS,IAErB2V,EAAMzW,KAAK+lD,EAAI/7B,OAAO+7B,EAAIjsD,OAAS,EAAG,GAC1C,CACA,MAAMiT,EAAM+M,EAAIE,KAAK,MAAQvD,EAAM7V,KAAK,IACxCwQ,EAAKrE,EACT,GACJ,EACAsE,aAAa,KHoMR1S,SAAS2B,IAClB,MAAMoK,EAAI,CAAC,EACXzL,OAAOskB,OAAO7Y,EAAGpK,QAEO,IAAboK,EAAE,eACFA,EAAE,OAEbzL,OAAOskB,OAAO4/B,GAAez4C,EAAE,IAEnC,UI5NA,MAAMu7C,GAAiB,2BAChB,MAAMC,WAAwB3jB,GACjCz/B,cACIO,MAAM,CAAEm/B,gBAAgB,IACxBziC,KAAKomD,aAAe,GACpBpmD,KAAK84C,WAAa,CAAC,EAEnB94C,KAAKsJ,gBAAgB,gBAAiB,IAEtCtJ,KAAKm+B,YAAY,aAAcpf,IAE3BA,EAAE9Y,WAAW,GAAG,UAAY,SAC5B8Y,EAAE9Y,WAAW,GAAG,aAAe,WAC/B8Y,EAAE9Y,WAAW,GAAG,cAAgB,UAAmB,GAE3D,CAIA8X,sBAEI,IAAIsoC,EAAkB,EACtB,MAAMC,EAAUxlD,SAASs5C,iBAAiB,UAC1C,IAAK,IAAI77C,EAAI,EAAGA,EAAI+nD,EAAQvsD,OAAQwE,IAAK,CACrC,MAAMgoD,EAASD,EAAQ/nD,GACvB,GAAIgoD,EAAOnmD,KAAKmc,MAAM2pC,IAAiB,CACnCG,IAEA,MACMphD,EAAQ,GAD4B,iBAArBtL,OAAe,SAAkBA,OAAOy/C,SAASC,KAAO,uBAC/CgN,UACxBtoD,EAAOwoD,EAAOt0C,WAEdjS,KAAK64C,iBAAiB96C,EAAMkH,SAE5BjF,KAAK6/B,SAAS0mB,EAAOt0C,KAAMhN,EACrC,CACJ,CACIohD,EAAkB,GAClB/oC,QAAQC,IAAI,eAAgB8oC,EAEpC,CAEAtoC,uBAAuBhgB,EAAM2sB,EAAUsR,EAAU,GAAI8c,EAAa,CAAC,GAE/D,OADA94C,KAAK84C,WAAaA,GAAc,CAAC,EAC1B94C,KAAK4jC,kBAAkB7lC,EAAM2sB,EAAUsR,EAASh8B,KAAKwmD,gBAChE,CAKAC,sBACI,MAAMH,EAAUxlD,SAASs5C,iBAAiB,UAC1C,IAAK,IAAI77C,EAAI,EAAGA,EAAI+nD,EAAQvsD,OAAQwE,IAAK,CACrC,MACMsf,EADSyoC,EAAQ/nD,GACJsf,KAAO,GAC1B,GAAIA,EAAI3kB,QAAQ,kBAAoB,GAChC2kB,EAAI3kB,QAAQ,kBAAoB,EAChC,OAAO,CAEf,CACA,OAAO,CACX,CAMAq5C,YAAYC,GACR,OAAOD,GAAYC,EAAaxyC,KAAMrG,OAAO84C,IACjD,CAEA+T,gBAEI,MADa,CAAExiB,OAAQhkC,KAAKgkC,OAAQM,UAAWtkC,KAAKskC,UAAWM,YAAa5kC,KAAK4kC,YAErF,CAEAZ,OAAOC,EAAUjc,GACb,OAAIhoB,KAAK84C,YAAc94C,KAAK84C,WAAW7U,GAC5B,CACHC,KAAM,UAAa,KAEflmB,SAAShe,KAAK84C,WAAW7U,GAAzBjmB,GACO,CAAC,GAHN,IAOP,CACHkmB,KAAM,WAEF,MAAMwiB,GAAY,IAAMziB,GAAU/pC,MAAM,KAAKoU,OAAS,IAUhDtB,QAAYusC,MAAMtV,GACxB,IAAKj3B,EAAI0f,GACL,MAAM,IAAI,KAAgB,QAAQuX,qBAA4Bj3B,EAAIwsC,UAAUxsC,EAAI25C,aAAc3+B,EAAM9kB,KAAM8kB,EAAM5kB,MAEpH,IAAIwjD,QAAe55C,EAAIiF,OAEvB,MACM40C,EAAa,eADTtyC,KAAKC,MAAsB,IAAhBD,KAAKE,YAO1B,GALImyC,EAAOv4C,SAAS,oBAChBu4C,EAASA,EAAO3sD,QAAQ,iBAAkB,QAAQ4sD,QAClDD,GAAU,uCAAuCF,OAAcG,UAG9DD,EAAOv4C,SAAS,mCACjB,MAAM,IAAI,KAAgB,QAAQ41B,gGAAwGjc,EAAM9kB,KAAM8kB,EAAM5kB,MAEhK,MAAM0jD,EAAa/tD,UACbguD,EAAQD,EAAW5tC,MAEzB,MAAO,KAEH,MAAM8tC,EAAkBF,EAClBG,EAAcD,EAAgB9tC,MACpC8tC,EAAgB9tC,MAAQ6tC,EACxB,IAEc/oC,SAAS4oC,GACjB1rC,MAAM6rC,EAAMlkB,YAClB,CACA,MAAOphB,GACH,MAAM,IAAI,KAAgB,SAASwiB,eAAsBxiB,aAAe3e,MAAQ2e,EAAIld,QAAUkd,EAAM,KAAMuG,EAAM9kB,KAAM8kB,EAAM5kB,KAChI,CACA,QACI4jD,EAAgB9tC,MAAQ+tC,CAC5B,CACA,MAAO,CAAC,CAAC,CAEhB,EAjDK,GAmDd,CAEA3iB,UAAUL,EAAUjc,GAChB,OAAIhoB,KAAK84C,YAAc94C,KAAK84C,WAAW7U,GAC5B,CACHC,KAAM,KACK,IAAK9iB,SAAQ,CAACC,EAASC,KAE1BD,EADUrhB,KAAK84C,WAAW7U,GAChB,IAHZ,IAQP,CACHC,KAAM,WACF,MAAMl3B,QAAYusC,MAAMtV,GACxB,IAAKj3B,EAAI0f,GACL,MAAM,IAAI,KAAgB,QAAQuX,qBAA4Bj3B,EAAIwsC,UAAUxsC,EAAI25C,aAAc3+B,EAAM9kB,KAAM8kB,EAAM5kB,MAEpH,aAAa4J,EAAIiF,MACpB,EANK,GAQd,CAEA2yB,YAAYrhC,EAAMykB,EAAOk/B,GACrB,IAAIC,EAAW5jD,EAEf,GAAI4jD,EAAS5qC,MAAM,sBAEd,GAAIvc,KAAK84C,YAAc94C,KAAK84C,WAAWv1C,GACxC4jD,EAAWnnD,KAAK84C,WAAWv1C,QAG3B,IACI4jD,EAAW,IAAIC,IAAI7jD,GAAM4jD,QAC7B,CACA,MAAO/tD,GAEH,IACI,IAAIiuD,EA6CxB,SAAiBhpD,GACb,MAAMkC,EAAIlC,EAAEnE,MAAM,KAClB,GAAIqG,GAAKA,EAAExG,OAAS,EAChB,OAAOwG,EAAEzG,MAAM,EAAGyG,EAAExG,OAAS,GAAG8G,KAAK,KAEzC,MAAO,EACX,CAnDkCymD,CAAQJ,GACtB,GAAgB,KAAZG,EAAgB,CAEhB,MAAM9mD,EAAI5G,OAAOy/C,SAASC,KAAKn/C,MAAM,KACrCmtD,EAAU,IAAM9mD,EAAEzG,MAAM,EAAGyG,EAAExG,OAAS,GAAG8G,KAAK,IAClD,CACAsmD,EA8CpB,SAAoB9lB,EAAMhjC,GACtB,MAAMkpD,EAAQlmB,EAAKnnC,MAAM,KACnBstD,EAAKnpD,EAAEnE,MAAM,KACnB,IAAK,MAAMyjB,KAAK6pC,EACF,KAAN7pC,GAGM,MAANA,IAGM,OAANA,EAIJ4pC,EAAMtnD,KAAK0d,GAHP4pC,EAAMj5C,OAKd,OAAOi5C,EAAM1mD,KAAK,IACtB,CA/D+B4mD,CAAWJ,EAAS9jD,EACnC,CACA,MAAOnK,GACH,MAAM,IAAI,KAAgB,8DAA8DA,IAAK4uB,EAAM9kB,KAAM8kB,EAAM5kB,KACnH,CACJ,CAGJ,MAAMskD,EAAW,CAACnkD,EAAMokD,KACpB,IAAK,MAAMC,KAAOD,EAAS,CACvB,GAAIpkD,EAAKskD,SAASD,GACd,OAAO,EAEX,GAAIrkD,EAAKskD,SAASD,EAAM,QACpB,OAAO,CAEf,CACA,OAAO,CAAK,EAGVE,GAASX,EAAW,KAAKjtD,MAAM,KAAK,GAG1C,GAAIwtD,EAASI,EAAO,CAAC,MAAO,SACxB,MAAO,CAAE7jB,SAAUkjB,EAAU/mD,KAAM,MAEvC,GAAIsnD,EAASI,EAAO,CAAC,SAAU,UAC3B,MAAO,CAAE7jB,SAAUkjB,EAAU/mD,KAAM,SAEvC,GAAIsnD,EAASP,EAAU,CAAC,MAAO,SAC3B,MAAO,CAAEljB,SAAUkjB,EAAU/mD,KAAM,MAEvC,GAAIsnD,EAASP,EAAU,CAAC,SAAU,UAC9B,MAAO,CAAEljB,SAAUkjB,EAAU/mD,KAAM,SAGvC,MAAM,IAAI,KAAgB,QAAQmD,yDAA6DykB,EAAM9kB,KAAM8kB,EAAM5kB,KACrH,ECjOJ,GAA2B,iBAAfrK,YAA4BA,UAAUgvD,aAAc,CAC5D,MAAMC,EAASjvD,UAAUmgB,MAAQ,IAAIitC,GACrCxsD,OAAOH,iBAAiB,oBAAqBJ,IACvB4uD,EAAOvB,uBAErBuB,EAAOC,eACX,IACD,EACP","sources":["webpack://nadesiko3/./node_modules/hotkeys-js/dist/hotkeys.common.min.js","webpack://nadesiko3/./node_modules/hotkeys-js/index.js","webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_gen_async.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./core/src/nako_indent.mjs","webpack://nadesiko3/./src/wnako3_editor.mjs","webpack://nadesiko3/./src/nako_version.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_system.mjs","webpack://nadesiko3/./src/plugin_browser_dialog.mjs","webpack://nadesiko3/./src/plugin_browser_location.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_dom_basic.mjs","webpack://nadesiko3/./src/plugin_browser_dom_event.mjs","webpack://nadesiko3/./src/plugin_browser_dom_parts.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_storage.mjs","webpack://nadesiko3/./src/plugin_browser_canvas.mjs","webpack://nadesiko3/./src/plugin_browser_geolocation.mjs","webpack://nadesiko3/./src/plugin_browser_speech.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_browser_audio.mjs","webpack://nadesiko3/./src/plugin_browser.mjs","webpack://nadesiko3/./src/plugin_browser_hotkey.mjs","webpack://nadesiko3/./src/plugin_browser_chart.mjs","webpack://nadesiko3/./src/plugin_browser_crypto.mjs","webpack://nadesiko3/./src/wnako3mod.mjs","webpack://nadesiko3/./src/wnako3.mjs"],"sourcesContent":["/*! hotkeys-js v3.9.4 | MIT © 2022 kenny wong <wowohoo@qq.com> http://jaywcjlove.github.io/hotkeys */\n\"use strict\";var isff=\"undefined\"!=typeof navigator&&0<navigator.userAgent.toLowerCase().indexOf(\"firefox\");function addEvent(e,n,t,o){e.addEventListener?e.addEventListener(n,t,o):e.attachEvent&&e.attachEvent(\"on\".concat(n),function(){t(window.event)})}function getMods(e,n){for(var t=n.slice(0,n.length-1),o=0;o<t.length;o++)t[o]=e[t[o].toLowerCase()];return t}function getKeys(e){for(var n=(e=(e=\"string\"!=typeof e?\"\":e).replace(/\\s/g,\"\")).split(\",\"),t=n.lastIndexOf(\"\");0<=t;)n[t-1]+=\",\",n.splice(t,1),t=n.lastIndexOf(\"\");return n}function compareArray(e,n){for(var t=e.length<n.length?n:e,o=e.length<n.length?e:n,s=!0,i=0;i<t.length;i++)~o.indexOf(t[i])||(s=!1);return s}for(var _keyMap={backspace:8,tab:9,clear:12,enter:13,return:13,esc:27,escape:27,space:32,left:37,up:38,right:39,down:40,del:46,delete:46,ins:45,insert:45,home:36,end:35,pageup:33,pagedown:34,capslock:20,num_0:96,num_1:97,num_2:98,num_3:99,num_4:100,num_5:101,num_6:102,num_7:103,num_8:104,num_9:105,num_multiply:106,num_add:107,num_enter:108,num_subtract:109,num_decimal:110,num_divide:111,\"\\u21ea\":20,\",\":188,\".\":190,\"/\":191,\"`\":192,\"-\":isff?173:189,\"=\":isff?61:187,\";\":isff?59:186,\"'\":222,\"[\":219,\"]\":221,\"\\\\\":220},_modifier={\"\\u21e7\":16,shift:16,\"\\u2325\":18,alt:18,option:18,\"\\u2303\":17,ctrl:17,control:17,\"\\u2318\":91,cmd:91,command:91},modifierMap={16:\"shiftKey\",18:\"altKey\",17:\"ctrlKey\",91:\"metaKey\",shiftKey:16,ctrlKey:17,altKey:18,metaKey:91},_mods={16:!1,18:!1,17:!1,91:!1},_handlers={},k=1;k<20;k++)_keyMap[\"f\".concat(k)]=111+k;var _downKeys=[],winListendFocus=!1,_scope=\"all\",elementHasBindEvent=[],code=function(e){return _keyMap[e.toLowerCase()]||_modifier[e.toLowerCase()]||e.toUpperCase().charCodeAt(0)};function setScope(e){_scope=e||\"all\"}function getScope(){return _scope||\"all\"}function getPressedKeyCodes(){return _downKeys.slice(0)}function filter(e){var e=e.target||e.srcElement,n=e.tagName;return!e.isContentEditable&&(\"INPUT\"!==n&&\"TEXTAREA\"!==n&&\"SELECT\"!==n||e.readOnly)?!0:!1}function isPressed(e){return\"string\"==typeof e&&(e=code(e)),!!~_downKeys.indexOf(e)}function deleteScope(e,n){var t,o,s;for(s in e=e||getScope(),_handlers)if(Object.prototype.hasOwnProperty.call(_handlers,s))for(t=_handlers[s],o=0;o<t.length;)t[o].scope===e?t.splice(o,1):o++;getScope()===e&&setScope(n||\"all\")}function clearModifier(e){var n=e.keyCode||e.which||e.charCode,t=_downKeys.indexOf(n);if(t<0||_downKeys.splice(t,1),e.key&&\"meta\"==e.key.toLowerCase()&&_downKeys.splice(0,_downKeys.length),(n=93!==n&&224!==n?n:91)in _mods)for(var o in _mods[n]=!1,_modifier)_modifier[o]===n&&(hotkeys[o]=!1)}function unbind(e){if(void 0===e)Object.keys(_handlers).forEach(function(e){return delete _handlers[e]});else if(Array.isArray(e))e.forEach(function(e){e.key&&eachUnbind(e)});else if(\"object\"==typeof e)e.key&&eachUnbind(e);else if(\"string\"==typeof e){for(var n=arguments.length,t=Array(1<n?n-1:0),o=1;o<n;o++)t[o-1]=arguments[o];var s=t[0],i=t[1];\"function\"==typeof s&&(i=s,s=\"\"),eachUnbind({key:e,scope:s,method:i,splitKey:\"+\"})}}var eachUnbind=function(e){var s=e.scope,i=e.method,n=e.splitKey,r=void 0===n?\"+\":n;getKeys(e.key).forEach(function(e){var n,e=e.split(r),t=e.length,o=e[t-1],o=\"*\"===o?\"*\":code(o);_handlers[o]&&(s=s||getScope(),n=1<t?getMods(_modifier,e):[],_handlers[o]=_handlers[o].filter(function(e){return!((!i||e.method===i)&&e.scope===s&&compareArray(e.mods,n))}))})};function eventHandler(e,n,t,o){var s;if(n.element===o&&(n.scope===t||\"all\"===n.scope)){for(var i in s=0<n.mods.length,_mods)Object.prototype.hasOwnProperty.call(_mods,i)&&(!_mods[i]&&~n.mods.indexOf(+i)||_mods[i]&&!~n.mods.indexOf(+i))&&(s=!1);(0!==n.mods.length||_mods[16]||_mods[18]||_mods[17]||_mods[91])&&!s&&\"*\"!==n.shortcut||!1===n.method(e,n)&&(e.preventDefault?e.preventDefault():e.returnValue=!1,e.stopPropagation&&e.stopPropagation(),e.cancelBubble&&(e.cancelBubble=!0))}}function dispatch(t,e){var n=_handlers[\"*\"],o=t.keyCode||t.which||t.charCode;if(hotkeys.filter.call(this,t)){if(~_downKeys.indexOf(o=93!==o&&224!==o?o:91)||229===o||_downKeys.push(o),[\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\"].forEach(function(e){var n=modifierMap[e];t[e]&&!~_downKeys.indexOf(n)?_downKeys.push(n):!t[e]&&~_downKeys.indexOf(n)?_downKeys.splice(_downKeys.indexOf(n),1):\"metaKey\"!==e||!t[e]||3!==_downKeys.length||t.ctrlKey||t.shiftKey||t.altKey||(_downKeys=_downKeys.slice(_downKeys.indexOf(n)))}),o in _mods){for(var s in _mods[o]=!0,_modifier)_modifier[s]===o&&(hotkeys[s]=!0);if(!n)return}for(var i in _mods)Object.prototype.hasOwnProperty.call(_mods,i)&&(_mods[i]=t[modifierMap[i]]);t.getModifierState&&(!t.altKey||t.ctrlKey)&&t.getModifierState(\"AltGraph\")&&(~_downKeys.indexOf(17)||_downKeys.push(17),~_downKeys.indexOf(18)||_downKeys.push(18),_mods[17]=!0,_mods[18]=!0);var r=getScope();if(n)for(var d=0;d<n.length;d++)n[d].scope===r&&(\"keydown\"===t.type&&n[d].keydown||\"keyup\"===t.type&&n[d].keyup)&&eventHandler(t,n[d],r,e);if(o in _handlers)for(var a=0;a<_handlers[o].length;a++)if((\"keydown\"===t.type&&_handlers[o][a].keydown||\"keyup\"===t.type&&_handlers[o][a].keyup)&&_handlers[o][a].key){for(var c=_handlers[o][a],l=c.key.split(c.splitKey),f=[],y=0;y<l.length;y++)f.push(code(l[y]));f.sort().join(\"\")===_downKeys.sort().join(\"\")&&eventHandler(t,c,r,e)}}}function isElementBind(e){return!!~elementHasBindEvent.indexOf(e)}function hotkeys(e,n,t){_downKeys=[];var o=getKeys(e),s=[],i=\"all\",r=document,d=0,a=!1,c=!0,l=\"+\",f=!1;for(void 0===t&&\"function\"==typeof n&&(t=n),\"[object Object]\"===Object.prototype.toString.call(n)&&(n.scope&&(i=n.scope),n.element&&(r=n.element),n.keyup&&(a=n.keyup),void 0!==n.keydown&&(c=n.keydown),void 0!==n.capture&&(f=n.capture),\"string\"==typeof n.splitKey&&(l=n.splitKey)),\"string\"==typeof n&&(i=n);d<o.length;d++)s=[],1<(e=o[d].split(l)).length&&(s=getMods(_modifier,e)),(e=\"*\"===(e=e[e.length-1])?\"*\":code(e))in _handlers||(_handlers[e]=[]),_handlers[e].push({keyup:a,keydown:c,scope:i,mods:s,shortcut:o[d],method:t,key:o[d],splitKey:l,element:r});void 0!==r&&!isElementBind(r)&&window&&(elementHasBindEvent.push(r),addEvent(r,\"keydown\",function(e){dispatch(e,r)},f),winListendFocus||(winListendFocus=!0,addEvent(window,\"focus\",function(){_downKeys=[]},f)),addEvent(r,\"keyup\",function(e){dispatch(e,r),clearModifier(e)},f))}function trigger(n){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"all\";Object.keys(_handlers).forEach(function(e){e=_handlers[e].find(function(e){return e.scope===t&&e.shortcut===n});e&&e.method&&e.method()})}var a,_hotkeys,_api={setScope:setScope,getScope:getScope,deleteScope:deleteScope,getPressedKeyCodes:getPressedKeyCodes,isPressed:isPressed,filter:filter,trigger:trigger,unbind:unbind,keyMap:_keyMap,modifier:_modifier,modifierMap:modifierMap};for(a in _api)Object.prototype.hasOwnProperty.call(_api,a)&&(hotkeys[a]=_api[a]);\"undefined\"!=typeof window&&(_hotkeys=window.hotkeys,hotkeys.noConflict=function(e){return e&&window.hotkeys===hotkeys&&(window.hotkeys=_hotkeys),hotkeys},window.hotkeys=hotkeys),module.exports=hotkeys;","if (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.min.js');\n} else {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.js');\n}\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\r\nconst coreVersion = {\r\n    version: '3.4.12',\r\n    major: 3,\r\n    minor: 4,\r\n    patch: 12\r\n};\r\nexport default coreVersion;\r\n","/**\r\n * なでしこ言語が投げる全てのエラーが継承するクラス\r\n */\r\nexport class NakoError extends Error {\r\n    constructor(tag, msg, file = undefined, line = undefined) {\r\n        // エラー位置を分かりやすく日本語に変換\r\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\r\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\r\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\r\n        // 親のErrorを呼ぶ\r\n        super(`[${tag}]${positionJa}${msg}`);\r\n        // エラーの種類を設定\r\n        this.name = 'NakoError';\r\n        this.type = 'NakoError';\r\n        this.tag = '[' + tag + ']';\r\n        this.positionJa = positionJa;\r\n        this.msg = msg;\r\n    }\r\n}\r\nexport class NakoIndentError extends NakoError {\r\n    /**\r\n     * @param {string} msg\r\n     * @param {number} line\r\n     * @param {string} file\r\n     */\r\n    constructor(msg, line, file) {\r\n        super('インデントエラー', msg, file, line);\r\n        this.type = 'NakoIndentError';\r\n        this.line = line;\r\n        this.file = file;\r\n    }\r\n}\r\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\r\nexport class InternalLexerError extends NakoError {\r\n    /**\r\n     * @param {string} msg\r\n     * @param {number} preprocessedCodeStartOffset\r\n     * @param {number} preprocessedCodeEndOffset\r\n     * @param {number | undefined} [line]\r\n     * @param {string | undefined} [file]\r\n     */\r\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\r\n        super('字句解析エラー（内部エラー）', msg, file, line);\r\n        this.type = 'InternalLexerError';\r\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\r\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\r\n        this.line = line;\r\n        this.file = file;\r\n    }\r\n}\r\nexport class NakoLexerError extends NakoError {\r\n    /**\r\n     * @param {string} msg\r\n     * @param {number | null} startOffset\r\n     * @param {number | null} endOffset,\r\n     * @param {number | undefined} line\r\n     * @param {string | undefined} file\r\n     */\r\n    constructor(msg, startOffset, endOffset, line, file) {\r\n        super('字句解析エラー', msg, file, line);\r\n        this.type = 'NakoLexerError';\r\n        this.startOffset = startOffset;\r\n        this.endOffset = endOffset;\r\n        this.line = line;\r\n        this.file = file;\r\n    }\r\n}\r\nexport class NakoSyntaxError extends NakoError {\r\n    /**\r\n     * @param {string} msg\r\n     * @param {number | undefined} line\r\n     * @param {number | undefined} startOffset\r\n     * @param {number | undefined} endOffset\r\n     * @param {string | undefined} file\r\n     */\r\n    constructor(msg, line, startOffset, endOffset, file) {\r\n        super('文法エラー', msg, file, line);\r\n        this.type = 'NakoSyntaxError';\r\n        this.file = file;\r\n        this.line = line;\r\n        this.startOffset = startOffset;\r\n        this.endOffset = endOffset;\r\n    }\r\n    /**\r\n     * @param {string} msg\r\n     * @param {Ast} first\r\n     * @param {Ast} [last]\r\n     */\r\n    static fromNode(msg, first, last = undefined) {\r\n        if (!first) {\r\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\r\n        }\r\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\r\n        const endOffset = (last && typeof last.endOffset === 'number')\r\n            ? last.endOffset\r\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\r\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\r\n    }\r\n}\r\nexport class NakoRuntimeError extends NakoError {\r\n    /**\r\n     * @param error エラー\r\n     * @param lineNo 発生行\r\n     */\r\n    constructor(error, lineNo) {\r\n        let msg = 'unknown';\r\n        if (typeof error === 'string') {\r\n            msg = error;\r\n        }\r\n        else {\r\n            if (error instanceof NakoRuntimeError) {\r\n                msg = error.msg;\r\n            }\r\n            else if (error instanceof NakoError) {\r\n                msg = error.msg;\r\n            }\r\n            else if (error instanceof Error) {\r\n                if (error.name === 'Error') {\r\n                    msg = error.message;\r\n                }\r\n                else {\r\n                    msg = `${error.name}: ${error.message}`;\r\n                }\r\n            }\r\n        }\r\n        // 行番号を表す文字列をパースする。\r\n        let line;\r\n        let file;\r\n        let matches;\r\n        if (lineNo === undefined) {\r\n            line = undefined;\r\n            file = undefined;\r\n            // eslint-disable-next-line no-cond-assign\r\n        }\r\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\r\n            line = parseInt(matches[1]);\r\n            file = matches[2];\r\n            // eslint-disable-next-line no-cond-assign\r\n        }\r\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\r\n            line = parseInt(matches[1]);\r\n            file = 'main.nako3';\r\n        }\r\n        else {\r\n            line = 0;\r\n            file = lineNo;\r\n        }\r\n        super('実行時エラー', msg, file, line);\r\n        this.type = 'NakoRuntimeError';\r\n        this.lineNo = lineNo;\r\n        this.line = line;\r\n        this.file = file;\r\n    }\r\n}\r\nexport class NakoImportError extends NakoError {\r\n    /**\r\n     * @param {string} msg\r\n     * @param {string} file\r\n     * @param {number} line\r\n     */\r\n    constructor(msg, file, line) {\r\n        super('取り込みエラー', msg, file, line);\r\n        this.file = file;\r\n        this.line = line;\r\n    }\r\n}\r\n","/**\r\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\r\n * なお速度優先で忠実にJavaScriptのコードを生成する。\r\n */\r\nimport { NakoSyntaxError } from './nako_errors.mjs';\r\n// なでしこで定義した関数の開始コードと終了コード\r\nconst topOfFunction = '(function(){\\n';\r\nconst endOfFunction = '})';\r\nconst topOfFunctionAsync = '(async function(){\\n';\r\n/** コード生成オプション */\r\nexport class NakoGenOptions {\r\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\r\n        this.isTest = isTest;\r\n        this.codeStandalone = codeStandalone;\r\n        this.codeEnv = convEnv;\r\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\r\n        for (const fname of importFiles) {\r\n            this.importFiles.push(fname);\r\n        }\r\n    }\r\n}\r\n/**\r\n * 構文木からJSのコードを生成するクラス\r\n */\r\nexport class NakoGen {\r\n    /** constructor\r\n     * @param com コンパイラのインスタンス\r\n     */\r\n    constructor(com) {\r\n        /**\r\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\r\n         * プラグイン関数は含まれない。\r\n         */\r\n        this.nakoFuncList = { ...com.getNakoFuncList() };\r\n        /**\r\n         * なでしこで定義したテストの一覧\r\n         */\r\n        this.nakoTestFuncs = {};\r\n        /**\r\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\r\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\r\n         */\r\n        this.usedFuncSet = new Set();\r\n        /**\r\n         * ループ時の一時変数が被らないようにIDで管理\r\n         */\r\n        this.loopId = 1;\r\n        /**\r\n         * 非同関数を何回使ったか\r\n         */\r\n        this.numAsyncFn = 0;\r\n        /**\r\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\r\n         */\r\n        this.usedAsyncFn = false;\r\n        /** 変換中の処理が、ループの中かどうかを判定する */\r\n        this.flagLoop = false;\r\n        this.__self = com;\r\n        /** コードジェネレータの種類 */\r\n        this.genMode = 'sync';\r\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\r\n        this.lastLineNo = null;\r\n        /** スタック */\r\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\r\n        /** スタックトップ */\r\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\r\n        this.varslistSet[2] = this.varsSet;\r\n        // 1以上のとき高速化する。\r\n        // 実行速度優先ブロック内で1増える。\r\n        this.speedMode = {\r\n            lineNumbers: 0,\r\n            implicitTypeCasting: 0,\r\n            invalidSore: 0,\r\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\r\n        };\r\n        // 1以上のとき測定をinjectする。\r\n        // パフォーマンスモニタのブロック内で1増える。\r\n        this.performanceMonitor = {\r\n            userFunction: 0,\r\n            systemFunction: 0,\r\n            systemFunctionBody: 0,\r\n            mumeiId: 0\r\n        };\r\n        /**\r\n         * 未定義の変数の警告を行う\r\n         */\r\n        this.warnUndefinedVar = true;\r\n        this.constPools = [];\r\n        // 暫定変数\r\n        this.warnUndefinedReturnUserFunc = 1;\r\n        this.warnUndefinedCallingUserFunc = 1;\r\n        this.warnUndefinedCallingSystemFunc = 1;\r\n        this.warnUndefinedCalledUserFuncArgs = 1;\r\n        this.debugOption = com.debugOption;\r\n    }\r\n    static isValidIdentifier(name) {\r\n        // TODO: いらなそうな部分は削る\r\n        // https://stackoverflow.com/a/9337047\r\n        // eslint-disable-next-line no-misleading-character-class\r\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\r\n    }\r\n    /**\r\n     * 改行を埋め込む\r\n     */\r\n    convLineno(node, forceUpdate = false, incLine = 0) {\r\n        // スピードモードでは行番号を埋め込まない\r\n        if (this.speedMode.lineNumbers > 0) {\r\n            return '';\r\n        }\r\n        const lineNo = node.line + incLine;\r\n        let lineNoStr;\r\n        if (typeof node.line !== 'number') {\r\n            lineNoStr = 'unknown';\r\n        }\r\n        else if (typeof node.file !== 'string') {\r\n            lineNoStr = `l${lineNo}`;\r\n        }\r\n        else {\r\n            lineNoStr = `l${lineNo}:${node.file}`;\r\n        }\r\n        // 強制的に行番号をアップデートするか\r\n        if (!forceUpdate) {\r\n            if (lineNoStr === this.lastLineNo) {\r\n                return '';\r\n            }\r\n            this.lastLineNo = lineNoStr;\r\n        }\r\n        // 実行行のデータ\r\n        const lineDataJSON = JSON.stringify(lineNoStr);\r\n        // デバッグ実行か\r\n        let debugCode = '';\r\n        if (this.debugOption.useDebug) {\r\n            // messageAction\r\n            if (this.debugOption.messageAction) {\r\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\r\n                    `line: ${lineDataJSON}});`;\r\n            }\r\n            // waitTime\r\n            if (lineNo >= 1) {\r\n                if (this.debugOption.waitTime > 0) {\r\n                    debugCode += `await __v0['秒待'](${this.debugOption.waitTime},__self);`;\r\n                }\r\n                // breakpoints\r\n                this.numAsyncFn += 1;\r\n                this.usedAsyncFn = true;\r\n                debugCode += `await __v0['__DEBUG_BP_WAIT'](${lineNo}, __self);`;\r\n            }\r\n            // end\r\n            debugCode += 'if(__v0.forceClose){return-1};';\r\n        }\r\n        // 例: __v0.line='l1:main.nako3'\r\n        return `__v0.line=${lineDataJSON};` + debugCode;\r\n    }\r\n    /**\r\n     * ローカル変数のJavaScriptコードを生成する。\r\n     * @param {string} name\r\n     */\r\n    varname(name) {\r\n        if (this.varslistSet.length === 3) {\r\n            // グローバル\r\n            return `__varslist[${2}][${JSON.stringify(name)}]`;\r\n        }\r\n        else {\r\n            // 関数内\r\n            if (NakoGen.isValidIdentifier(name)) {\r\n                return name;\r\n            }\r\n            else {\r\n                return `__vars[${JSON.stringify(name)}]`;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {string} name\r\n     * @returns {string}\r\n    */\r\n    static getFuncName(name) {\r\n        if (name.indexOf('__') >= 0) { // スコープがある場合\r\n            const a = name.split('__');\r\n            const scope = a[0];\r\n            const name3 = NakoGen.getFuncName(a[1]);\r\n            return `${scope}__${name3}`;\r\n        }\r\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\r\n        if (name2 === '') {\r\n            name2 = name;\r\n        }\r\n        return name2;\r\n    }\r\n    /** @param {Ast} node */\r\n    static convPrint(node) {\r\n        return `__print(${node});`;\r\n    }\r\n    /** @param {Ast} node */\r\n    convRequire(node) {\r\n        const moduleName = node.value;\r\n        return this.convLineno(node, false) +\r\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\r\n    }\r\n    /**\r\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\r\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\r\n     * @param com\r\n     * @param opt\r\n     */\r\n    getDefFuncCode(com, opt) {\r\n        let code = '';\r\n        // よく使う変数のショートカット\r\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\r\n        code += 'const __self = self;\\n';\r\n        code += 'self.__self = self;\\n';\r\n        code += 'const __varslist = self.__varslist;\\n';\r\n        code += 'const __module = self.__module;\\n';\r\n        code += 'const __v0 = self.__v0 = self.__varslist[0];\\n';\r\n        code += 'const __v1 = self.__v1 = self.__varslist[1];\\n';\r\n        code += 'const __vars = self.__vars = self.__varslist[2];\\n';\r\n        code += `const __modList = self.__modList = ${JSON.stringify(com.getModList())}\\n`;\r\n        code += '__v0.line = 0;\\n';\r\n        code += '__v0.forceClose = false;\\n';\r\n        code += `__v0.useDebug = ${this.debugOption.useDebug};\\n`;\r\n        // 定数を埋め込む\r\n        code += 'self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\r\n        // なでしこの関数定義を行う\r\n        let nakoFuncCode = '';\r\n        for (const key in this.nakoFuncList) {\r\n            const f = this.nakoFuncList[key].fn;\r\n            const isAsync = this.nakoFuncList[key].asyncFn ? 'true' : 'false';\r\n            nakoFuncCode += '' +\r\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\r\n                `self.__varslist[1][\"${key}\"]=${f};\\n;` +\r\n                `//[/DEF_FUNC name='${key}']\\n`;\r\n        }\r\n        if (nakoFuncCode !== '') {\r\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\r\n        }\r\n        // テストの定義を行う\r\n        if (opt.isTest) {\r\n            let testCode = 'const __tests = [];\\n';\r\n            for (const key in this.nakoTestFuncs) {\r\n                const f = this.nakoTestFuncs[key].fn;\r\n                testCode += `${f};\\n;`;\r\n            }\r\n            if (testCode !== '') {\r\n                code += '__v0.line=\\'テストの定義\\';\\n';\r\n                code += testCode + '\\n';\r\n            }\r\n        }\r\n        return code;\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加\r\n     * @param po プラグイン・オブジェクト\r\n     */\r\n    addPlugin(po) {\r\n        return this.__self.addPlugin(po);\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\r\n     * @param name オブジェクト名\r\n     * @param po 関数リスト\r\n     */\r\n    addPluginObject(name, po) {\r\n        this.__self.addPluginObject(name, po);\r\n    }\r\n    /**\r\n     * プラグイン・ファイルを追加(Node.js向け)\r\n     * @param objName オブジェクト名\r\n     * @param path ファイルパス\r\n     * @param po 登録するオブジェクト\r\n     */\r\n    addPluginFile(objName, path, po) {\r\n        this.__self.addPluginFile(objName, path, po);\r\n    }\r\n    /**\r\n     * 関数を追加する\r\n     * @param key 関数名\r\n     * @param josi 助詞\r\n     * @param fn 関数\r\n     */\r\n    addFunc(key, josi, fn) {\r\n        this.__self.addFunc(key, josi, fn);\r\n    }\r\n    /**\r\n     * プラグイン関数を参照する\r\n     * @param key プラグイン関数の関数名\r\n     * @returns プラグイン・オブジェクト\r\n     */\r\n    getFunc(key) {\r\n        return this.__self.getFunc(key);\r\n    }\r\n    /**\r\n     * 関数を先に登録してしまう\r\n     */\r\n    registerFunction(ast) {\r\n        if (ast.type !== 'block') {\r\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\r\n        }\r\n        /** 関数一覧 */\r\n        const funcList = [];\r\n        // なでしこ関数を定義して this.nako_func[name] に定義する\r\n        const registFunc = (node) => {\r\n            if (!node.block) {\r\n                return;\r\n            }\r\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\r\n            for (let i = 0; i < blockList.length; i++) {\r\n                const t = blockList[i];\r\n                if (t.type === 'def_func') {\r\n                    if (!t.name) {\r\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\r\n                    }\r\n                    const name = t.name.value;\r\n                    this.usedFuncSet.add(name);\r\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\r\n                    this.varslistSet[1].names.add(name); // global\r\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\r\n                    this.nakoFuncList[name] = {\r\n                        josi: meta.josi,\r\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                        fn: () => { },\r\n                        type: 'func',\r\n                        asyncFn: t.asyncFn\r\n                    };\r\n                    funcList.push({ name, node: t });\r\n                    // eslint-disable-next-line brace-style\r\n                }\r\n                // 実行速度優先 などのオプションが付いている場合の処理\r\n                else if (t.type === 'speed_mode') {\r\n                    if (!t.block) {\r\n                        continue;\r\n                    }\r\n                    if (t.block.type === 'block') {\r\n                        registFunc(t.block);\r\n                    }\r\n                    else {\r\n                        registFunc(t);\r\n                    }\r\n                }\r\n                else if (t.type === 'performance_monitor') {\r\n                    if (!t.block) {\r\n                        continue;\r\n                    }\r\n                    if (t.block.type === 'block') {\r\n                        registFunc(t.block);\r\n                    }\r\n                    else {\r\n                        registFunc(t);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // 関数の登録\r\n        registFunc(ast);\r\n        // __self.__varslistの変更を反映\r\n        const initialNames = new Set();\r\n        if (this.speedMode.invalidSore === 0) {\r\n            initialNames.add('それ');\r\n        }\r\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\r\n        this.varslistSet = this.__self.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\r\n        this.varslistSet[2] = this.varsSet;\r\n    }\r\n    /**\r\n     * @param node\r\n     * @param opt\r\n     */\r\n    convGen(node, opt) {\r\n        const result = this.convLineno(node, false) + this._convGen(node, true);\r\n        if (opt.isTest) {\r\n            return '';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     */\r\n    _convGen(node, isExpression) {\r\n        if (!node) {\r\n            return '';\r\n        }\r\n        let code = '';\r\n        if (node instanceof Array) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                const n = node[i];\r\n                code += this._convGen(n, isExpression);\r\n            }\r\n            return code;\r\n        }\r\n        if (node === null) {\r\n            return 'null';\r\n        }\r\n        if (node === undefined) {\r\n            return 'undefined';\r\n        }\r\n        if (typeof (node) !== 'object') {\r\n            return '' + node;\r\n        }\r\n        // switch\r\n        switch (node.type) {\r\n            case 'nop':\r\n                break;\r\n            case 'block':\r\n                if (!node.block) {\r\n                    return code;\r\n                }\r\n                // eslint-disable-next-line no-case-declarations\r\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\r\n                for (let i = 0; i < blocks.length; i++) {\r\n                    const b = blocks[i];\r\n                    code += this._convGen(b, false);\r\n                }\r\n                break;\r\n            case 'comment':\r\n            case 'eol':\r\n                code += this.convComment(node);\r\n                break;\r\n            case 'break':\r\n                code += this.convCheckLoop(node, 'break');\r\n                break;\r\n            case 'continue':\r\n                code += this.convCheckLoop(node, 'continue');\r\n                break;\r\n            case 'end':\r\n                code += '__v0[\\'終\\'](__self);';\r\n                break;\r\n            case 'number':\r\n                code += node.value;\r\n                break;\r\n            case 'string':\r\n                code += this.convString(node);\r\n                break;\r\n            case 'def_local_var':\r\n                code += this.convDefLocalVar(node);\r\n                break;\r\n            case 'def_local_varlist':\r\n                code += this.convDefLocalVarlist(node);\r\n                break;\r\n            case 'let':\r\n                code += this.convLet(node);\r\n                break;\r\n            case 'inc':\r\n                code += this.convInc(node);\r\n                break;\r\n            case 'word':\r\n            case 'variable':\r\n                code += this.convGetVar(node);\r\n                break;\r\n            case 'op':\r\n            case 'calc':\r\n                code += this.convOp(node);\r\n                break;\r\n            case 'renbun':\r\n                code += this.convRenbun(node);\r\n                break;\r\n            case 'not':\r\n                code += '((' + this._convGen(node.value, true) + ')?0:1)';\r\n                break;\r\n            case 'func':\r\n            case 'func_pointer':\r\n            case 'calc_func':\r\n                code += this.convCallFunc(node, isExpression);\r\n                break;\r\n            case 'if':\r\n                code += this.convIf(node);\r\n                break;\r\n            case 'tikuji':\r\n                code += this.convTikuji(node);\r\n                break;\r\n            case 'for':\r\n                code += this.convFor(node);\r\n                break;\r\n            case 'foreach':\r\n                code += this.convForeach(node);\r\n                break;\r\n            case 'repeat_times':\r\n                code += this.convRepeatTimes(node);\r\n                break;\r\n            case 'speed_mode':\r\n                code += this.convSpeedMode(node, isExpression);\r\n                break;\r\n            case 'performance_monitor':\r\n                code += this.convPerformanceMonitor(node, isExpression);\r\n                break;\r\n            case 'while':\r\n                code += this.convWhile(node);\r\n                break;\r\n            case 'atohantei':\r\n                code += this.convAtohantei(node);\r\n                break;\r\n            case 'switch':\r\n                code += this.convSwitch(node);\r\n                break;\r\n            case 'let_array':\r\n                code += this.convLetArray(node);\r\n                break;\r\n            case '配列参照':\r\n                code += this.convRefArray(node);\r\n                break;\r\n            case 'json_array':\r\n                code += this.convJsonArray(node);\r\n                break;\r\n            case 'json_obj':\r\n                code += this.convJsonObj(node);\r\n                break;\r\n            case 'func_obj':\r\n                code += this.convFuncObj(node);\r\n                break;\r\n            case 'bool':\r\n                code += (node.value) ? 'true' : 'false';\r\n                break;\r\n            case 'null':\r\n                code += 'null';\r\n                break;\r\n            case 'def_test':\r\n                code += this.convDefTest(node);\r\n                break;\r\n            case 'def_func':\r\n                code += this.convDefFunc(node);\r\n                break;\r\n            case 'return':\r\n                code += this.convReturn(node);\r\n                break;\r\n            case 'try_except':\r\n                code += this.convTryExcept(node);\r\n                break;\r\n            case 'require':\r\n                code += this.convRequire(node);\r\n                break;\r\n            default:\r\n                throw new Error('System Error: unknown_type=' + node.type);\r\n        }\r\n        return code;\r\n    }\r\n    /** 変数を検索 */\r\n    findVar(name) {\r\n        // __vars ? (ローカル変数)\r\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\r\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: this.varname(name) };\r\n        }\r\n        // __varslist ?\r\n        for (let i = 2; i >= 0; i--) {\r\n            if (this.varslistSet[i].names.has(name)) {\r\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\r\n                // それ以外の変数は、必ず__varslistに入っている。\r\n                return { i, name, isTop: false, js: `__varslist[${i}][${JSON.stringify(name)}]` };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 定義済みの変数の参照\r\n     * @param {string} name\r\n     * @param {Ast} position\r\n     */\r\n    genVar(name, position) {\r\n        const res = this.findVar(name);\r\n        const lno = position.line;\r\n        if (res === null) {\r\n            // 定義されていない名前の参照は変数の定義とみなす。\r\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\r\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\r\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\r\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\r\n                // デフォルト定義されている変数名\r\n            }\r\n            else {\r\n                if (this.warnUndefinedVar) {\r\n                    // main__は省略して表示するように。 #1223\r\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\r\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\r\n                }\r\n            }\r\n            this.varsSet.names.add(name);\r\n            return this.varname(name);\r\n        }\r\n        const i = res.i;\r\n        // システム関数・変数の場合\r\n        if (i === 0) {\r\n            const pv = this.__self.getNakoFunc(name);\r\n            if (!pv) {\r\n                return `${res.js}/*err:${lno}*/`;\r\n            }\r\n            if (pv.type === 'const' || pv.type === 'var') {\r\n                return res.js;\r\n            }\r\n            if (pv.type === 'func') {\r\n                if (!pv.josi || pv.josi.length === 0) {\r\n                    return `(${res.js}())`;\r\n                }\r\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\r\n            }\r\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\r\n        }\r\n        return res.js;\r\n    }\r\n    convGetVar(node) {\r\n        const name = node.value;\r\n        return this.genVar(name, node);\r\n    }\r\n    convComment(node) {\r\n        let commentSrc = String(node.value);\r\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\r\n        const lineNo = this.convLineno(node, false);\r\n        if (commentSrc === '' && lineNo === '') {\r\n            return ';';\r\n        }\r\n        if (commentSrc === '') {\r\n            return ';' + lineNo + '\\n';\r\n        }\r\n        return ';' + lineNo + '//' + commentSrc + '\\n';\r\n    }\r\n    convReturn(node) {\r\n        // 関数の中であれば利用可能\r\n        if (this.varsSet.names.has('!関数')) {\r\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\r\n        }\r\n        const lno = this.convLineno(node, false);\r\n        let value;\r\n        if (node.value) {\r\n            value = this._convGen(node.value, true);\r\n        }\r\n        else if (this.speedMode.invalidSore === 0) {\r\n            value = this.varname('それ');\r\n        }\r\n        else {\r\n            return lno + 'return;';\r\n        }\r\n        if (this.warnUndefinedReturnUserFunc === 0) {\r\n            return lno + `return ${value};`;\r\n        }\r\n        else {\r\n            const poolIndex = this.constPools.length;\r\n            this.constPools.push({\r\n                msg: 'ユーザ関数からundefinedが返されています',\r\n                file: node.file,\r\n                line: node.line\r\n            });\r\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\r\n        }\r\n    }\r\n    convCheckLoop(node, cmd) {\r\n        // ループの中であれば利用可能\r\n        if (!this.flagLoop) {\r\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\r\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\r\n        }\r\n        return this.convLineno(node) + cmd + ';';\r\n    }\r\n    convDefFuncCommon(node, name) {\r\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\r\n        let performanceMonitorInjectAtStart = '';\r\n        let performanceMonitorInjectAtEnd = '';\r\n        if (this.performanceMonitor.userFunction !== 0) {\r\n            let key = name;\r\n            if (!key) {\r\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\r\n                    this.performanceMonitor.mumeiId = 0;\r\n                }\r\n                this.performanceMonitor.mumeiId++;\r\n                key = `anous_${this.performanceMonitor.mumeiId}`;\r\n            }\r\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\r\n                'const uf_start = performance.now() * 1000;\\n' +\r\n                'return function () {\\n' +\r\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\r\n                'if (!__self.__performance_monitor) {\\n' +\r\n                '__self.__performance_monitor={};\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\r\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\r\n                '} else {\\n' +\r\n                '__self.__performance_monitor[key].called++;\\n' +\r\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\r\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\r\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\r\n                `}};})('${key}', 'user');` +\r\n                'try {\\n';\r\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\r\n        }\r\n        let variableDeclarations = '';\r\n        const popStack = '';\r\n        const initialNames = new Set();\r\n        if (this.speedMode.invalidSore === 0) {\r\n            initialNames.add('それ');\r\n        }\r\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\r\n        // ローカル変数をPUSHする\r\n        this.varslistSet.push(this.varsSet);\r\n        // JSの引数と引数をバインド\r\n        variableDeclarations += '  var 引数 = arguments;\\n';\r\n        // ローカル変数を生成\r\n        variableDeclarations += '  var __vars = {};\\n';\r\n        // 宣言済みの名前を保存\r\n        const varsDeclared = Array.from(this.varsSet.names.values());\r\n        let code = '';\r\n        // 引数をローカル変数に設定\r\n        const meta = (!name) ? node.meta : node.name.meta;\r\n        for (let i = 0; i < meta.varnames.length; i++) {\r\n            const word = meta.varnames[i];\r\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\r\n                code += `  ${this.varname(word)} = arguments[${i}];\\n`;\r\n            }\r\n            else if (name) {\r\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('ユーザ関数(${name})の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\r\n            }\r\n            else {\r\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('匿名関数の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\r\n            }\r\n            this.varsSet.names.add(word);\r\n        }\r\n        // 関数定義は、グローバル領域で。\r\n        if (name) {\r\n            this.usedFuncSet.add(name);\r\n            this.varslistSet[1].names.add(name);\r\n            if (this.nakoFuncList[name] === undefined) {\r\n                // 既に generate で作成済みのはず(念のため)\r\n                this.nakoFuncList[name] = {\r\n                    josi: node.name.meta.josi,\r\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                    fn: () => { },\r\n                    type: 'func',\r\n                    asyncFn: false\r\n                };\r\n            }\r\n        }\r\n        // ブロックを解析\r\n        const oldUsedAsyncFn = this.usedAsyncFn;\r\n        this.usedAsyncFn = false || this.debugOption.useDebug;\r\n        const block = this._convGen(node.block, false);\r\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\r\n        // 関数の最後に、変数「それ」をreturnするようにする\r\n        if (this.speedMode.invalidSore === 0) {\r\n            code += `  return (${this.varname('それ')});\\n`;\r\n        }\r\n        // パフォーマンスモニタ:ユーザ関数のinject\r\n        code += performanceMonitorInjectAtEnd;\r\n        // ブロックでasyncFnを使ったか\r\n        if (name && this.usedAsyncFn) {\r\n            this.nakoFuncList[name].asyncFn = true;\r\n        }\r\n        // 関数の末尾に、ローカル変数をPOP\r\n        // 関数内で定義されたローカル変数の宣言\r\n        for (const name of Array.from(this.varsSet.names.values())) {\r\n            if (!varsDeclared.includes(name)) {\r\n                if (NakoGen.isValidIdentifier(name)) {\r\n                    variableDeclarations += `  var ${name};\\n`;\r\n                }\r\n            }\r\n        }\r\n        if (this.speedMode.invalidSore === 0) {\r\n            if (NakoGen.isValidIdentifier('それ')) {\r\n                variableDeclarations += '  var それ = \\'\\';\\n';\r\n            }\r\n            else {\r\n                variableDeclarations += `  ${this.varname('それ')} = '';`;\r\n            }\r\n        }\r\n        // usedAsyncFnの値に応じて関数定義の方法を変更\r\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\r\n        // 関数コード全体を構築\r\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\r\n        code = tof + performanceMonitorInjectAtStart + variableDeclarations + lineInfo + code + popStack;\r\n        code += endOfFunction;\r\n        // 名前があれば、関数を登録する\r\n        if (name) {\r\n            this.nakoFuncList[name].fn = code;\r\n            this.nakoFuncList[name].asyncFn = this.usedAsyncFn;\r\n            meta.asyncFn = this.usedAsyncFn;\r\n        }\r\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\r\n        this.varslistSet.pop();\r\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\r\n        if (name) {\r\n            this.__self.__varslist[1][name] = code;\r\n        }\r\n        return code;\r\n    }\r\n    convDefTest(node) {\r\n        const name = node.name.value;\r\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\r\n        // ブロックを解析\r\n        const block = this._convGen(node.block, false);\r\n        code += `   ${block}\\n` +\r\n            '}});';\r\n        this.nakoTestFuncs[name] = {\r\n            josi: node.name.meta.josi,\r\n            fn: code,\r\n            type: 'test_func'\r\n        };\r\n        // ★この時点ではテストコードを生成しない★\r\n        // プログラム冒頭でコード生成時にテストの定義を行う\r\n        return '';\r\n    }\r\n    convDefFunc(node) {\r\n        // ※ [関数定義のメモ]\r\n        // ※ 関数の定義はプログラムの冒頭に移される。\r\n        // ※ そのため、生成されたコードはここでは返さない\r\n        // ※ registerFunction を参照\r\n        if (!node.name) {\r\n            return '';\r\n        }\r\n        const name = NakoGen.getFuncName(node.name.value);\r\n        this.convDefFuncCommon(node, name);\r\n        return '';\r\n    }\r\n    convFuncObj(node) {\r\n        return this.convDefFuncCommon(node, '');\r\n    }\r\n    convJsonObj(node) {\r\n        const list = node.value;\r\n        const codelist = list.map((e) => {\r\n            const key = this._convGen(e.key, true);\r\n            const val = this._convGen(e.value, true);\r\n            return `${key}:${val}`;\r\n        });\r\n        return '{' + codelist.join(',') + '}';\r\n    }\r\n    convJsonArray(node) {\r\n        const list = node.value;\r\n        const codelist = list.map((e) => {\r\n            return this._convGen(e, true);\r\n        });\r\n        return '[' + codelist.join(',') + ']';\r\n    }\r\n    convRefArray(node) {\r\n        const name = this._convGen(node.name, true);\r\n        const list = node.index;\r\n        let code = name;\r\n        if (!list) {\r\n            return code;\r\n        }\r\n        for (let i = 0; i < list.length; i++) {\r\n            const idx = this._convGen(list[i], true);\r\n            code += '[' + idx + ']';\r\n        }\r\n        return code;\r\n    }\r\n    convLetArray(node) {\r\n        const name = this._convGen(node.name, true);\r\n        const list = node.index || [];\r\n        let codeInit = '';\r\n        let code = name;\r\n        let codeArray = '';\r\n        // codeInit?\r\n        if (node.checkInit) {\r\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\r\n            codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${name} = ${arrayDefCode}; /*console.log('初期化:${name}')*/ };`;\r\n            for (let i = 0; i < list.length - 1; i++) {\r\n                const idx = this._convGen(list[i], true);\r\n                codeArray += `[${idx}]`;\r\n                codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; };`;\r\n                // codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; console.log('初期化:${i}:${name}${codeArray}',JSON.stringify(${name})) }; `\r\n            }\r\n            codeInit += '\\n';\r\n        }\r\n        // array\r\n        for (let i = 0; i < list.length; i++) {\r\n            const idx = this._convGen(list[i], true);\r\n            code += '[' + idx + ']';\r\n        }\r\n        // value\r\n        let value = null;\r\n        if (this.speedMode.invalidSore === 0) {\r\n            value = this.varname('それ');\r\n        }\r\n        if (node.value) {\r\n            value = this._convGen(node.value, true);\r\n        }\r\n        if (value == null) {\r\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\r\n        }\r\n        code += ' = ' + value + ';\\n';\r\n        // generate code\r\n        const src = this.convLineno(node, false) + codeInit + code;\r\n        return src;\r\n    }\r\n    convGenLoop(node) {\r\n        const tmpflag = this.flagLoop;\r\n        this.flagLoop = true;\r\n        try {\r\n            return this._convGen(node, false);\r\n        }\r\n        finally {\r\n            this.flagLoop = tmpflag;\r\n        }\r\n    }\r\n    convFor(node) {\r\n        // ループ変数について\r\n        let word;\r\n        if (node.word !== null) { // ループ変数を使う時\r\n            const varName = node.word.value; // todo: Forの最初のパラメータが Token か Astか確認\r\n            this.varsSet.names.add(varName);\r\n            word = this.varname(varName);\r\n        }\r\n        else {\r\n            this.varsSet.names.add('dummy');\r\n            word = this.varname('dummy');\r\n        }\r\n        const idLoop = this.loopId++;\r\n        const varI = `$nako_i${idLoop}`;\r\n        // ループ条件を確認\r\n        const kara = this._convGen(node.from, true);\r\n        const made = this._convGen(node.to, true);\r\n        const flagDown = node.flagDown;\r\n        let inc = '1';\r\n        if (node.inc && node.inc !== 'null') {\r\n            inc = this._convGen(node.inc, true);\r\n        }\r\n        // ループ内のブロック内容を得る\r\n        const block = this.convGenLoop(node.block);\r\n        // ループ条件を変数に入れる用\r\n        const varFrom = `$nako_from${idLoop}`;\r\n        const varTo = `$nako_to${idLoop}`;\r\n        let sorePrefex = '';\r\n        if (this.speedMode.invalidSore === 0) {\r\n            sorePrefex = `${this.varname('それ')} = `;\r\n        }\r\n        const code = `\\n//[FOR id=${idLoop}]\\n` +\r\n            `const ${varFrom} = ${kara};\\n` +\r\n            `const ${varTo} = ${made};\\n` +\r\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\r\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\r\n            `    ${sorePrefex}${word} = ${varI};\\n` +\r\n            `    ${block}\\n` +\r\n            '  };\\n' +\r\n            '} else { // down\\n' +\r\n            `  if (${flagDown}) {` +\r\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\r\n            `      ${sorePrefex}${word} = ${varI};` + '\\n' +\r\n            `      ${block}\\n` +\r\n            '    }\\n' +\r\n            '  };\\n' +\r\n            `};\\n//[/FOR id=${idLoop}]\\n`;\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convForeach(node) {\r\n        let target;\r\n        if (node.target === null) {\r\n            if (this.speedMode.invalidSore === 0) {\r\n                target = this.varname('それ');\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\r\n            }\r\n        }\r\n        else {\r\n            target = this._convGen(node.target, true);\r\n        }\r\n        // blockより早く変数を定義する必要がある\r\n        let nameS = '__v0[\"対象\"]';\r\n        if (node.name) {\r\n            nameS = this.varname(node.name.value);\r\n            this.varsSet.names.add(node.name.value);\r\n        }\r\n        const block = this.convGenLoop(node.block);\r\n        const id = this.loopId++;\r\n        const key = '__v0[\"対象キー\"]';\r\n        let sorePrefex = '';\r\n        if (this.speedMode.invalidSore === 0) {\r\n            sorePrefex = `${this.varname('それ')} = `;\r\n        }\r\n        const code = `let $nako_foreach_v${id}=${target};\\n` +\r\n            `for (let $nako_i${id} in $nako_foreach_v${id})` + '{\\n' +\r\n            `  if ($nako_foreach_v${id}.hasOwnProperty($nako_i${id})) {\\n` +\r\n            `    ${nameS} = ${sorePrefex}$nako_foreach_v${id}[$nako_i${id}];` + '\\n' +\r\n            `    ${key} = $nako_i${id};\\n` +\r\n            `    ${block}\\n` +\r\n            '  }\\n' +\r\n            '};\\n';\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convRepeatTimes(node) {\r\n        const id = this.loopId++;\r\n        const value = this._convGen(node.value, true);\r\n        const block = this.convGenLoop(node.block);\r\n        const kaisu = '__v0[\"回数\"]';\r\n        let sorePrefex = '';\r\n        if (this.speedMode.invalidSore === 0) {\r\n            sorePrefex = `${this.varname('それ')} = `;\r\n        }\r\n        const code = `let $nako_times_v${id} = ${value};\\n` +\r\n            `for(var $nako_i${id} = 1; $nako_i${id} <= $nako_times_v${id}; $nako_i${id}++)` + '{\\n' +\r\n            `  ${sorePrefex}${kaisu} = $nako_i${id};` + '\\n' +\r\n            '  ' + block + '\\n}\\n';\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     */\r\n    convSpeedMode(node, isExpression) {\r\n        if (!node.options) {\r\n            return '';\r\n        }\r\n        const prev = { ...this.speedMode };\r\n        if (node.options['行番号無し']) {\r\n            this.speedMode.lineNumbers++;\r\n        }\r\n        if (node.options['暗黙の型変換無し']) {\r\n            this.speedMode.implicitTypeCasting++;\r\n        }\r\n        if (node.options['強制ピュア']) {\r\n            this.speedMode.forcePure++;\r\n        }\r\n        if (node.options['それ無効']) {\r\n            this.speedMode.invalidSore++;\r\n        }\r\n        try {\r\n            return this._convGen(node.block, isExpression);\r\n        }\r\n        finally {\r\n            this.speedMode = prev;\r\n        }\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     */\r\n    convPerformanceMonitor(node, isExpression) {\r\n        const prev = { ...this.performanceMonitor };\r\n        if (!node.options) {\r\n            return '';\r\n        }\r\n        if (node.options['ユーザ関数']) {\r\n            this.performanceMonitor.userFunction++;\r\n        }\r\n        if (node.options['システム関数本体']) {\r\n            this.performanceMonitor.systemFunctionBody++;\r\n        }\r\n        if (node.options['システム関数']) {\r\n            this.performanceMonitor.systemFunction++;\r\n        }\r\n        try {\r\n            return this._convGen(node.block, isExpression);\r\n        }\r\n        finally {\r\n            this.performanceMonitor = prev;\r\n        }\r\n    }\r\n    convWhile(node) {\r\n        const cond = this._convGen(node.cond, true);\r\n        const block = this.convGenLoop(node.block);\r\n        const code = `while (${cond})` + '{\\n' +\r\n            `  ${block}` + '\\n' +\r\n            '}\\n';\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convAtohantei(node) {\r\n        const id = this.loopId++;\r\n        const varId = `$nako_i${id}`;\r\n        const cond = this._convGen(node.cond, true);\r\n        const block = this.convGenLoop(node.block);\r\n        const code = 'for(;;) {\\n' +\r\n            `  ${block}\\n` +\r\n            `  let ${varId} = ${cond};\\n` +\r\n            `  if (${varId}) { continue } else { break }\\n` +\r\n            '}\\n\\n';\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convSwitch(node) {\r\n        const value = this._convGen(node.value, true);\r\n        const cases = node.cases || [];\r\n        let body = '';\r\n        for (let i = 0; i < cases.length; i++) {\r\n            const cvalue = cases[i][0];\r\n            const cblock = this.convGenLoop(cases[i][1]);\r\n            if (cvalue.type === '違えば') {\r\n                body += '  default:\\n';\r\n            }\r\n            else {\r\n                const cvalueCode = this._convGen(cvalue, true);\r\n                body += `  case ${cvalueCode}:\\n`;\r\n            }\r\n            body += `    ${cblock}\\n` +\r\n                '    break\\n';\r\n        }\r\n        const code = `switch (${value})` + '{\\n' +\r\n            `${body}` + '\\n' +\r\n            '}\\n';\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convIf(node) {\r\n        const expr = this._convGen(node.expr, true);\r\n        const block = this._convGen(node.block, false);\r\n        const falseBlock = (node.false_block === null)\r\n            ? ''\r\n            : 'else {' + this._convGen(node.false_block, false) + '};\\n';\r\n        return this.convLineno(node, false) +\r\n            `if (${expr}) {\\n  ${block}\\n}` + falseBlock + ';\\n';\r\n    }\r\n    convTikuji(node) {\r\n        // #1164 により「逐次実行」構文は近いうちに廃止する\r\n        const pid = this.loopId++;\r\n        // gen tikuji blocks\r\n        const curName = `__tikuji${pid}`;\r\n        let code = `const ${curName} = []\\n`;\r\n        const blocks = (node.blocks) ? node.blocks : [];\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            const block = this._convGen(blocks[i], false).replace(/\\s+$/, '') + '\\n';\r\n            const blockLineNo = this.convLineno(blocks[i], true);\r\n            const blockCode = `${curName}.push(async function(resolve, reject) {\\n` +\r\n                '  __self.resolve = resolve;\\n' +\r\n                '  __self.reject = reject;\\n' +\r\n                '  __self.resolveCount = 0;\\n' +\r\n                `  ${blockLineNo}\\n` +\r\n                `  ${block}` +\r\n                '  if (__self.resolveCount === 0) resolve();\\n' +\r\n                // eslint-disable-next-line no-template-curly-in-string\r\n                '}); // end of tikuji__${pid}[{$i}]\\n';\r\n            code += blockCode;\r\n        }\r\n        code += `// end of ${curName} \\n`;\r\n        // gen error block\r\n        let errorCode = `  ${curName}.splice(0);\\n` + // clear\r\n            '  __v0[\"エラーメッセージ\"]=errMsg;\\n';\r\n        if (node.errorBlock != null) {\r\n            const errBlock = this._convGen(node.errorBlock, false).replace(/\\s+$/, '') + '\\n';\r\n            errorCode += errBlock;\r\n        }\r\n        code += `const ${curName}__reject = function(errMsg){\\n${errorCode}};\\n`;\r\n        // gen run block\r\n        code += '__self.resolve = undefined;\\n';\r\n        code += `const ${curName}__resolve = function(){\\n`;\r\n        code += '  setTimeout(async function(){\\n';\r\n        code += `    if (${curName}.length == 0) {return}\\n`;\r\n        code += `    const f = ${curName}.shift()\\n`;\r\n        code += `    await f(${curName}__resolve, ${curName}__reject);\\n`;\r\n        code += '  }, 0);\\n';\r\n        code += '};\\n';\r\n        code += `${curName}__resolve()\\n`;\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convFuncGetArgsCalcType(_funcName, _func, node) {\r\n        const args = [];\r\n        const opts = {};\r\n        const nodeArgs = (node.args) ? node.args : [];\r\n        for (let i = 0; i < nodeArgs.length; i++) {\r\n            const arg = nodeArgs[i];\r\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\r\n                args.push(this.varname('それ'));\r\n                opts.sore = true;\r\n            }\r\n            else {\r\n                args.push(this._convGen(arg, true));\r\n            }\r\n        }\r\n        return [args, opts];\r\n    }\r\n    getPluginList() {\r\n        const r = [];\r\n        for (const name in this.__self.__module) {\r\n            r.push(name);\r\n        }\r\n        return r;\r\n    }\r\n    /**\r\n     * 関数の呼び出し\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     * @returns string コード\r\n     */\r\n    convCallFunc(node, isExpression) {\r\n        const funcName = NakoGen.getFuncName(node.name);\r\n        const res = this.findVar(funcName);\r\n        if (res === null) {\r\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\r\n        }\r\n        // どの関数を呼び出すのか関数を特定する\r\n        let func;\r\n        if (res.i === 0) { // plugin function\r\n            func = this.__self.getFunc(funcName);\r\n            if (!func) {\r\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\r\n            }\r\n            if (func.type !== 'func') {\r\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\r\n            }\r\n        }\r\n        else {\r\n            func = this.nakoFuncList[funcName];\r\n            // 無名関数の可能性\r\n            if (func === undefined) {\r\n                func = { return_none: false };\r\n            }\r\n        }\r\n        // 関数の参照渡しか？\r\n        if (node.type === 'func_pointer') {\r\n            return res.js;\r\n        }\r\n        // 関数の参照渡しでない場合\r\n        // 関数定義より助詞を一つずつ調べる\r\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\r\n        const args = argsInfo[0];\r\n        const argsOpts = argsInfo[1];\r\n        // function\r\n        this.usedFuncSet.add(funcName);\r\n        if (funcName === '名前空間設定') {\r\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__varslist[0]['名前空間設定'](${args[0]}, __self);__self.__modName=${args[0]};\\n`;\r\n        }\r\n        else if (funcName === 'プラグイン名設定') {\r\n            return `\\n__varslist[0]['プラグイン名設定'](${args[0]}, __self);\\n`;\r\n        }\r\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\r\n        args.push('__self');\r\n        let funcDef = 'function';\r\n        let funcBegin = '';\r\n        let funcEnd = '';\r\n        // setter?\r\n        if (node.setter) {\r\n            funcBegin += ';__self.isSetter = true;\\n';\r\n            funcEnd += ';__self.isSetter = false;\\n';\r\n        }\r\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\r\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\r\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\r\n            // 展開されたローカル変数の列挙\r\n            const localVars = [];\r\n            for (const name of Array.from(this.varsSet.names.values())) {\r\n                if (NakoGen.isValidIdentifier(name)) {\r\n                    localVars.push({ str: JSON.stringify(name), js: this.varname(name) });\r\n                }\r\n            }\r\n            // --- 実行前 ---\r\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\r\n            funcBegin += '__self.__locals = __vars;\\n';\r\n            // 全ての展開されたローカル変数を __self.__locals に保存する\r\n            for (const v of localVars) {\r\n                funcBegin += `__self.__locals[${v.str}] = ${v.js};\\n`;\r\n            }\r\n            // --- 実行後 ---\r\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\r\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\r\n            for (const v of localVars) {\r\n                if (v.js !== 'それ') {\r\n                    funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\r\n                }\r\n            }\r\n        }\r\n        // 変数「それ」が補完されていることをヒントとして出力\r\n        if (argsOpts.sore) {\r\n            funcBegin += '/*[sore]*/';\r\n        }\r\n        const indent = (text, n) => {\r\n            let result = '';\r\n            for (const line of text.split('\\n')) {\r\n                if (line !== '') {\r\n                    result += '  '.repeat(n) + line + '\\n';\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        // 引数チェックの例外 #1260\r\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\r\n        // 関数呼び出しコードの構築\r\n        let argsCode;\r\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\r\n            argsCode = args.join(',');\r\n        }\r\n        else {\r\n            const argsA = [];\r\n            args.forEach((arg) => {\r\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\r\n                    argsA.push(`${arg}`);\r\n                }\r\n                else {\r\n                    // 引数のundefinedチェックのコードを入れる\r\n                    const poolIndex = this.constPools.length;\r\n                    if (res.i === 0) {\r\n                        this.constPools.push({\r\n                            msg: `命令『${funcName}』の引数にundefinedを渡しています。`,\r\n                            file: node.file,\r\n                            line: node.line\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.constPools.push({\r\n                            msg: `ユーザ関数『『${funcName}』の引数にundefinedを渡しています。`,\r\n                            file: node.file,\r\n                            line: node.line\r\n                        });\r\n                    }\r\n                    // argが空になる対策 #1315\r\n                    const argStr = (arg === '') ? '\"\"' : arg;\r\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\r\n                }\r\n            });\r\n            argsCode = argsA.join(', ');\r\n        }\r\n        let funcCall = `${res.js}(${argsCode})`;\r\n        if (func.asyncFn) {\r\n            funcDef = `async ${funcDef}`;\r\n            funcCall = `await ${funcCall}`;\r\n            this.numAsyncFn++;\r\n            this.usedAsyncFn = true;\r\n        }\r\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\r\n            let key = funcName;\r\n            if (!key) {\r\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\r\n                    this.performanceMonitor.mumeiId = 0;\r\n                }\r\n                this.performanceMonitor.mumeiId++;\r\n                key = `anous_${this.performanceMonitor.mumeiId}`;\r\n            }\r\n            funcCall = `(${funcDef} (key, type) {\\n` +\r\n                'const sbf_start = performance.now() * 1000;\\n' +\r\n                'try {\\n' +\r\n                'return ' + funcCall + ';\\n' +\r\n                '} finally {\\n' +\r\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\r\n                'if (!__self.__performance_monitor) {\\n' +\r\n                '__self.__performance_monitor={};\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\r\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\r\n                '} else {\\n' +\r\n                '__self.__performance_monitor[key].called++;\\n' +\r\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\r\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\r\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\r\n                `}}})('${funcName}_body', 'sysbody')\\n`;\r\n        }\r\n        let code = '';\r\n        if (func.return_none) {\r\n            // 戻り値のない関数の場合\r\n            if (funcEnd === '') {\r\n                if (funcBegin === '') {\r\n                    code = `${funcCall};\\n`;\r\n                }\r\n                else {\r\n                    code = `${funcBegin} ${funcCall};\\n`;\r\n                }\r\n            }\r\n            else {\r\n                code = `${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\r\n            }\r\n        }\r\n        else {\r\n            // 戻り値のある関数の場合\r\n            let sorePrefex = '';\r\n            if (this.speedMode.invalidSore === 0) {\r\n                sorePrefex = `${this.varname('それ')} = `;\r\n            }\r\n            if (funcBegin === '' && funcEnd === '') {\r\n                code = `(${sorePrefex}${funcCall})`;\r\n            }\r\n            else {\r\n                if (funcEnd === '') {\r\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin};\\nreturn ${sorePrefex} ${funcCall}`, 1)}}).call(this)`;\r\n                }\r\n                else {\r\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\r\n                }\r\n            }\r\n            // ...して\r\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\r\n                code += ';\\n';\r\n            }\r\n        }\r\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\r\n            code = '(function (key, type) {\\n' +\r\n                'const sf_start = performance.now() * 1000;\\n' +\r\n                'try {\\n' +\r\n                'return ' + code + ';\\n' +\r\n                '} finally {\\n' +\r\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\r\n                'if (!__self.__performance_monitor) {\\n' +\r\n                '__self.__performance_monitor={};\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\r\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\r\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\r\n                '} else {\\n' +\r\n                '__self.__performance_monitor[key].called++;\\n' +\r\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\r\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\r\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\r\n                `}}})('${funcName}_sys', 'system')\\n`;\r\n        }\r\n        return code;\r\n    }\r\n    convRenbun(node) {\r\n        const right = this._convGen(node.right, true);\r\n        const left = this._convGen(node.left, false);\r\n        this.numAsyncFn++;\r\n        this.usedAsyncFn = true;\r\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\r\n    }\r\n    convOp(node) {\r\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\r\n        const OP_TBL = {\r\n            '&': '+\"\"+',\r\n            eq: '==',\r\n            noteq: '!=',\r\n            '===': '===',\r\n            '!==': '!==',\r\n            gt: '>',\r\n            lt: '<',\r\n            gteq: '>=',\r\n            lteq: '<=',\r\n            and: '&&',\r\n            or: '||',\r\n            shift_l: '<<',\r\n            shift_r: '>>',\r\n            shift_r0: '>>>',\r\n            '÷': '/'\r\n        };\r\n        let op = node.operator || ''; // 演算子\r\n        let right = this._convGen(node.right, true);\r\n        let left = this._convGen(node.left, true);\r\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\r\n            if (node.left && node.left.type !== 'number') {\r\n                left = `parseFloat(${left})`;\r\n            }\r\n            if (node.right && node.right.type !== 'number') {\r\n                right = `parseFloat(${right})`;\r\n            }\r\n        }\r\n        // 階乗\r\n        if (op === '^' || op === '**') {\r\n            return `(Math.pow(${left}, ${right}))`;\r\n        }\r\n        // 整数の割り算 #1152\r\n        if (op === '÷÷') {\r\n            return `(Math.floor(${left} / ${right}))`;\r\n        }\r\n        // 一般的なオペレータに変換\r\n        if (OP_TBL[op]) {\r\n            op = OP_TBL[op];\r\n        }\r\n        //\r\n        return `(${left} ${op} ${right})`;\r\n    }\r\n    convInc(node) {\r\n        // もし値が省略されていたら、変数「それ」に代入する\r\n        let value = null;\r\n        if (this.speedMode.invalidSore === 0) {\r\n            value = this.varname('それ');\r\n        }\r\n        if (node.value) {\r\n            value = this._convGen(node.value, true);\r\n        }\r\n        if (value == null) {\r\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\r\n        }\r\n        // 配列への代入か(core#86)\r\n        let code = '';\r\n        let jsName;\r\n        const nodeName = node.name;\r\n        if (nodeName.type === '配列参照') {\r\n            jsName = this.convRefArray(nodeName);\r\n        }\r\n        else {\r\n            // 変数名\r\n            const name = nodeName.value;\r\n            let res = this.findVar(name);\r\n            if (res === null) {\r\n                this.varsSet.names.add(name);\r\n                res = this.findVar(name);\r\n                if (!res) {\r\n                    throw new Error('『増』または『減』で変数が見当たりません。');\r\n                }\r\n            }\r\n            jsName = res.js;\r\n        }\r\n        // 自動初期化するか\r\n        code += `if (typeof(${jsName}) === 'undefined') { ${jsName} = 0; }`;\r\n        code += `${jsName} += ${value}`;\r\n        return ';' + this.convLineno(node, false) + code + '\\n';\r\n    }\r\n    convLet(node) {\r\n        // もし値が省略されていたら、変数「それ」に代入する\r\n        let value = null;\r\n        if (this.speedMode.invalidSore === 0) {\r\n            value = this.varname('それ');\r\n        }\r\n        if (node.value) {\r\n            value = this._convGen(node.value, true);\r\n        }\r\n        if (value == null) {\r\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\r\n        }\r\n        // 変数名\r\n        const name = node.name.value;\r\n        const res = this.findVar(name);\r\n        let code = '';\r\n        if (res === null) {\r\n            this.varsSet.names.add(name);\r\n            code = `${this.varname(name)} = ${value};`;\r\n        }\r\n        else {\r\n            // 定数ならエラーを出す\r\n            if (this.varslistSet[res.i].readonly.has(name)) {\r\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\r\n            }\r\n            code = `${res.js} = ${value};`;\r\n        }\r\n        return ';' + this.convLineno(node, false) + code + '\\n';\r\n    }\r\n    convDefLocalVar(node) {\r\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\r\n        const name = node.name.value;\r\n        const vtype = node.vartype; // 変数 or 定数\r\n        // 二重定義？\r\n        if (this.varsSet.names.has(name)) {\r\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\r\n        }\r\n        //\r\n        this.varsSet.names.add(name);\r\n        if (vtype === '定数') {\r\n            this.varsSet.readonly.add(name);\r\n        }\r\n        const code = `${this.varname(name)}=${value};\\n`;\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    // #563 複数変数への代入\r\n    convDefLocalVarlist(node) {\r\n        let code = '';\r\n        const vtype = node.vartype; // 変数 or 定数\r\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\r\n        this.loopId++;\r\n        const varI = `$nako_i${this.loopId}`;\r\n        code += `${varI}=${value}\\n`;\r\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\r\n        const names = (node.names) ? node.names : [];\r\n        for (let i = 0; i < names.length; i++) {\r\n            const nameObj = names[i];\r\n            const name = nameObj.value;\r\n            // 二重定義？\r\n            if (this.varsSet.names.has(name)) {\r\n                // 複数変数文では、二重定義も許容する #1027\r\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\r\n            }\r\n            this.varsSet.names.add(name);\r\n            if (vtype === '定数') {\r\n                this.varsSet.readonly.add(name);\r\n            }\r\n            const vname = this.varname(name);\r\n            code += `${vname}=${varI}[${i}];\\n`;\r\n        }\r\n        return this.convLineno(node, false) + code;\r\n    }\r\n    convString(node) {\r\n        let value = '' + node.value;\r\n        const mode = node.mode;\r\n        value = value.replace(/\\\\/g, '\\\\\\\\');\r\n        value = value.replace(/\"/g, '\\\\\"');\r\n        value = value.replace(/\\r/g, '\\\\r');\r\n        value = value.replace(/\\n/g, '\\\\n');\r\n        if (mode === 'ex') {\r\n            const rf = (a, name) => {\r\n                return '\"+' + this.genVar(name, node) + '+\"';\r\n            };\r\n            value = value.replace(/\\{(.+?)\\}/g, rf);\r\n            value = value.replace(/｛(.+?)｝/g, rf);\r\n        }\r\n        return '\"' + value + '\"';\r\n    }\r\n    convTryExcept(node) {\r\n        const block = this._convGen(node.block, false);\r\n        const errBlock = this._convGen(node.errBlock, false);\r\n        return this.convLineno(node, false) +\r\n            `try {\\n${block}\\n} catch (e) {\\n` +\r\n            '  __v0[\"エラーメッセージ\"] = e.message;\\n' +\r\n            ';\\n' +\r\n            `${errBlock}}\\n`;\r\n    }\r\n    getUsedFuncSet() {\r\n        return this.usedFuncSet;\r\n    }\r\n    getPluginInitCode() {\r\n        // プラグインの初期化関数を実行する\r\n        let code = '';\r\n        let pluginCode = '';\r\n        for (const name in this.__self.__module) {\r\n            const initkey = `!${name}:初期化`;\r\n            if (this.varslistSet[0].names.has(initkey)) {\r\n                this.usedFuncSet.add(`!${name}:初期化`);\r\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\r\n            }\r\n        }\r\n        if (pluginCode !== '') {\r\n            code += '__v0.line=\\'l0:プラグインの初期化\\';\\n' + pluginCode;\r\n        }\r\n        return code;\r\n    }\r\n}\r\n/**\r\n * @param com\r\n * @param ast\r\n * @param opt\r\n */\r\nexport function generateJS(com, ast, opt) {\r\n    // NakoGenのインスタンスを作成\r\n    const gen = new NakoGen(com);\r\n    // ※ [関数定義に関するコード生成のヒント]\r\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\r\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\r\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\r\n    // (1) ユーザー定義関数をシステムに登録する\r\n    gen.registerFunction(ast);\r\n    // (2) JSコードを生成する\r\n    let js = gen.convGen(ast, opt);\r\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\r\n    const jsInit = gen.getDefFuncCode(com, opt);\r\n    // ランダムな関数名を生成\r\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\r\n    // テストの実行\r\n    if (js && opt.isTest) {\r\n        js += '\\n__self._runTests(__tests);\\n';\r\n    }\r\n    // async method\r\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\r\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\r\n        js = `\r\n// --------------------------------------------------\r\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\r\nasync function ${asyncMain}(self) {\r\n${jsInit}\r\n${js}\r\n} // end of ${asyncMain}\r\n${asyncMain}.call(self, self)\r\n.then(() => {\r\n  // ok\r\n})\r\n.catch(err => {\r\n  if (err.message === '__終わる__') { return }\r\n  self.numFailures++\r\n  // send errors to logger\r\n  let rterr = self.logger.runtimeError(err, self.__v0.line)\r\n  self.logger.error(rterr)\r\n})\r\n// </nadesiko3::gen::async id=\"${funcID}\">\r\n// --------------------------------------------------\r\n`;\r\n    }\r\n    else {\r\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\r\n        js = `\r\n// --------------------------------------------------\r\n// <nadesiko3::gen::syncMode>\r\nfunction ${syncMain}(self) {\r\ntry {\r\n  ${jsInit}\r\n  ${js}\r\n} catch (err) {\r\n  if (err.message === '__終わる__') { return }\r\n  self.numFailures++\r\n  throw self.logger.runtimeError(err, self.__v0.line)\r\n}\r\n} // end of ${syncMain}\r\n${syncMain}(self)\r\n// </nadesiko3::gen::syncMode>\r\n// --------------------------------------------------\r\n`;\r\n    }\r\n    // デバッグメッセージ\r\n    com.getLogger().trace('--- generate ---\\n' + js);\r\n    let codeImportFiles = '';\r\n    const importNames = [];\r\n    for (const f of opt.importFiles) {\r\n        if (f === 'nako_errors.mjs') {\r\n            continue;\r\n        }\r\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\r\n        importNames.push(ff);\r\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\r\n    }\r\n    const standaloneJSCode = `\\\r\n// <standaloneCode>\r\nimport path from 'path'\r\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\r\n${codeImportFiles}\r\nconst self = {}\r\nself.coreVersion = '${com.coreVersion}'\r\nself.version = '${com.version}'\r\nself.logger = {\r\n  error: (message) => { console.error(message) },\r\n  warn: (message) => { console.warn(message) },\r\n  send: (level, message) => { console.log(message) },\r\n};\r\nself.__varslist = [{}, {}, {}]\r\nself.__v0 = self.__varslist[0]\r\nself.initFuncList = []\r\nself.clearFuncList = []\r\n// Copy module functions\r\nfor (const mod of [${importNames.join(', ')}]) {\r\n  for (const funcName in mod) {\r\n    if (funcName === '初期化') {\r\n      self.initFuncList.push(mod[funcName].fn)\r\n      continue\r\n    }\r\n    if (funcName === '!クリア') {\r\n      self.clearFuncList.push(mod[funcName].fn)\r\n      continue\r\n    }\r\n    self.__varslist[0][funcName] = mod[funcName].fn\r\n  }\r\n}\r\nself.__vars = self.__varslist[2];\r\nself.__module = {};\r\nself.__locals = {};\r\nself.__genMode = 'sync';\r\n\r\n// プラグインの初期化コードを実行\r\nself.initFuncList.map(f => f(self))\r\n\r\ntry {\r\n${opt.codeStandalone}\r\n// <JS:standalone>\r\n${js}\r\n// </JS:standalone>\r\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\r\n  self.clearFuncList.map(f => f(self))\r\n} catch (err) {\r\n  self.logger.error(err);\r\n  throw err;\r\n}\r\n// </standaloneCode>\r\n`;\r\n    // ---\r\n    const initCode = gen.getPluginInitCode();\r\n    const runtimeEnvCode = `\r\n// <runtimeEnvCode>\r\nconst self = this\r\n${opt.codeEnv}\r\n${jsInit}\r\n${initCode}\r\n${js}\r\n// </runtimeEnvCode>\r\n`;\r\n    return {\r\n        // なでしこの実行環境ありの場合(thisが有効)\r\n        runtimeEnv: runtimeEnvCode,\r\n        // JavaScript単体で動かす場合\r\n        standalone: standaloneJSCode,\r\n        // コード生成に使ったNakoGenのインスタンス\r\n        gen\r\n    };\r\n}\r\n","/**\r\n * file: nako_gen_async\r\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\r\n * なお、扱いやすさ優先で、なでしこの一文を一つの関数として生成し、非同期実行する。\r\n */\r\nimport { NakoSyntaxError, NakoError, NakoRuntimeError } from './nako_errors.mjs';\r\nimport nakoVersion from './nako_core_version.mjs';\r\nimport { NakoGen } from './nako_gen.mjs';\r\n/**\r\n * なでしこのインタプリタコード\r\n */\r\nconst NakoCodeNop = 'NOP';\r\nconst NakoCodeLabel = 'LBL';\r\nconst NakoCodeEOL = 'EOL';\r\nconst NakoCodeJump = 'JMP'; // JUMP addr\r\nconst NakoCodeJumpIfTrue = 'JMP_T'; // pop and jump addr\r\nconst NakoCodeJumpIfFalse = 'JMP_F'; // pop and jump addr\r\nconst NakoCodeCall = 'CALL'; // call addr\r\nconst NakoCodeCallObj = 'CALL_OBJ'; // call addr\r\nconst NakoCodeReturn = 'RET';\r\nconst NakoCodeTry = 'TRY';\r\nconst NakoCodeCode = 'CODE';\r\nconst NakoCodeTagIsFuncpoint = 0x0F;\r\n/**\r\n * なでしこのインタプリタが用いる簡易コードを表現するクラス\r\n */\r\nclass NakoCode {\r\n    /**\r\n     * @param type\r\n     * @param value\r\n     */\r\n    constructor(type, value) {\r\n        /** Codeのタイプ\r\n         * @type {string}\r\n         */\r\n        this.type = type;\r\n        /** Codeの値 / ラベルならラベル名\r\n         * @type {string}\r\n         */\r\n        this.value = value;\r\n        /** ラベルならジャンプ先\r\n         * @type {number}\r\n         */\r\n        this.no = -1;\r\n        /** タグ\r\n         * @type {number}\r\n         */\r\n        this.tag = 0;\r\n    }\r\n}\r\n/**\r\n * 構文木からJSのコードを生成するクラス\r\n */\r\nexport class NakoGenASync {\r\n    /**\r\n     * @param com コンパイラのインスタンス\r\n     */\r\n    constructor(com) {\r\n        this.com = com;\r\n        /**\r\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\r\n         * プラグイン関数は含まれない。\r\n         */\r\n        this.nakoFuncList = { ...com.getNakoFuncList() };\r\n        /**\r\n         * なでしこで定義したテストの一覧\r\n         * @type {Record<string, { josi: string[][], fn: string, type: 'test_func' }>}\r\n         */\r\n        this.nakoTestList = {};\r\n        /**\r\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\r\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\r\n         * @type {Set<string>}\r\n         */\r\n        this.usedFuncSet = new Set();\r\n        /**\r\n         * ループ時の一時変数が被らないようにIDで管理\r\n         * @type {number}\r\n         */\r\n        this.loopId = 1;\r\n        /**\r\n         * 変換中の処理が、ループの中かどうかを判定する\r\n         * @type {boolean}\r\n         */\r\n        this.flagLoop = false;\r\n        /**\r\n         * 変換後のコード管理番号\r\n         * @type {number}\r\n         */\r\n        this.codeId = 0;\r\n        /**\r\n         * 変換後のコードを保持する配列\r\n         * @type {Array<NakoCode>}\r\n         */\r\n        this.codeArray = [];\r\n        /** @type {NakoCode | null} */\r\n        this.labelContinue = null;\r\n        /** @type {NakoCode | null} */\r\n        this.labelBreak = null;\r\n        /**\r\n         * ジャンプ先を表現するラベル\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.labels = {};\r\n        // コンパイラのインスタンス\r\n        this.__self = com;\r\n        /**\r\n         * コードジェネレータの種類\r\n         * @type {string}\r\n         */\r\n        this.genMode = '非同期モード';\r\n        /**\r\n         * 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。\r\n         * @type {string | null}\r\n         */\r\n        this.lastLineNo = null;\r\n        /**\r\n         * スタック\r\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }[]}\r\n         */\r\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\r\n        /**\r\n         * スタックトップ\r\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }}\r\n         */\r\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\r\n        this.varslistSet[2] = this.varsSet;\r\n        // 1以上のとき高速化する。\r\n        // 実行速度優先ブロック内で1増える。\r\n        this.speedMode = {\r\n            lineNumbers: 0,\r\n            implicitTypeCasting: 0,\r\n            invalidSore: 0,\r\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\r\n        };\r\n        // 1以上のとき測定をinjectする。\r\n        // パフォーマンスモニタのブロック内で1増える。\r\n        this.performanceMonitor = {\r\n            userFunction: 0,\r\n            systemFunction: 0,\r\n            systemFunctionBody: 0 // システム関数(呼び出しコードを除く)\r\n        };\r\n    }\r\n    /**\r\n     * @param com\r\n     * @param {Ast} ast\r\n     * @param {boolean | string} isTest 文字列なら1つのテストだけを実行する\r\n     */\r\n    static generate(com, ast, isTest) {\r\n        const gen = new NakoGenASync(com);\r\n        // ユーザー定義関数をシステムに登録する\r\n        gen.registerFunction(ast);\r\n        // JSコードを生成する\r\n        let js = gen.convGen(ast, !!isTest);\r\n        // JSコードを実行するための事前ヘッダ部分の生成\r\n        js = gen.getDefFuncCode(isTest) + js;\r\n        com.getLogger().trace('--- generate(非同期モード) ---\\n' + js);\r\n        // テストの実行\r\n        if (js && isTest) {\r\n            js += '\\n__self._runTests(__tests);\\n';\r\n        }\r\n        return {\r\n            // なでしこの実行環境ありの場合\r\n            runtimeEnv: js,\r\n            // JavaScript単体で動かす場合\r\n            standalone: `\\\r\nconst nakoVersion = ${JSON.stringify(nakoVersion)};\r\n${NakoError.toString()}\r\n${NakoRuntimeError.toString()}\r\nthis.logger = {\r\n  error(message) { console.error(message) },\r\n  send(level, message) { console.log(message) },\r\n};\r\nthis.__varslist = [{}, {}, {}];\r\nthis.__vars = this.__varslist[2];\r\nthis.__module = {};\r\nthis.__locals = {};\r\nthis.__labels = {};\r\nthis.__code = [];\r\nthis.__callstack = [];\r\nthis.__stack = [];\r\nthis.__genMode = '非同期モード';\r\ntry {\r\n  ${gen.getVarsCode()}\r\n  ${js}\r\n} catch (err) {\r\n  if (!(err instanceof NakoRuntimeError)) {\r\n    err = new NakoRuntimeError(err, this.__varslist[0].line);\r\n  }\r\n  this.logger.error(err);\r\n  throw err;\r\n}`,\r\n            gen // コード生成に使ったNakoGenのインスタンス\r\n        };\r\n    }\r\n    /**\r\n     * @param {import(\"./nako3\").Ast} node\r\n     * @param {boolean} forceUpdate\r\n     */\r\n    convLineno(node, forceUpdate) {\r\n        if (this.speedMode.lineNumbers > 0) {\r\n            return '';\r\n        }\r\n        /** @type {string} */\r\n        let lineNo;\r\n        if (typeof node.line !== 'number') {\r\n            lineNo = 'unknown';\r\n        }\r\n        else if (typeof node.file !== 'string') {\r\n            lineNo = `l${node.line}`;\r\n        }\r\n        else {\r\n            lineNo = `l${node.line}:${node.file}`;\r\n        }\r\n        // 強制的に行番号をアップデートするか\r\n        if (!forceUpdate) {\r\n            if (lineNo === this.lastLineNo) {\r\n                return '';\r\n            }\r\n            this.lastLineNo = lineNo;\r\n        }\r\n        // 例: __v0.line='l1:main.nako3'\r\n        return `__v0.line=${JSON.stringify(lineNo)};`;\r\n    }\r\n    /**\r\n     * ローカル変数のJavaScriptコードを生成する。\r\n     * 基本的に取得のために利用\r\n     * @param {string} name\r\n     */\r\n    varname(name) {\r\n        const keys = JSON.stringify(name);\r\n        return `sys.__vars[${keys}]`;\r\n    }\r\n    /**\r\n     * プログラムの実行に必要な関数を書き出す(システム領域)\r\n     * @returns {string}\r\n     */\r\n    getVarsCode() {\r\n        let code = '';\r\n        // プログラム中で使った関数を列挙して書き出す\r\n        for (const key of Array.from(this.usedFuncSet.values())) {\r\n            const f = this.__self.__varslist[0][key];\r\n            const name = `this.__varslist[0][\"${key}\"]`;\r\n            if (typeof (f) === 'function') {\r\n                code += name + '=' + f.toString() + ';\\n';\r\n            }\r\n            else {\r\n                code += name + '=' + JSON.stringify(f) + ';\\n';\r\n            }\r\n        }\r\n        return code;\r\n    }\r\n    /**\r\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\r\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\r\n     * @param {boolean | string} isTest テストかどうか。stringの場合は1つのテストのみ。\r\n     * @returns {string}\r\n     */\r\n    getDefFuncCode(isTest) {\r\n        let code = '';\r\n        // よく使う変数のショートカット\r\n        code += 'const __self = this.__self = this;\\n';\r\n        code += 'const __varslist = this.__varslist;\\n';\r\n        code += 'const __module = this.__module;\\n';\r\n        code += 'const __v0 = this.__v0 = this.__varslist[0];\\n';\r\n        code += 'const __v1 = this.__v1 = this.__varslist[1];\\n';\r\n        code += 'const __vars = this.__vars = this.__varslist[2];\\n';\r\n        code += 'const __code = this.__code;\\n';\r\n        // なでしこの関数定義を行う\r\n        let nakoFuncCode = '';\r\n        for (const key in this.nakoFuncList) {\r\n            const f = this.nakoFuncList[key].fn;\r\n            nakoFuncCode += '' +\r\n                `//[DEF_FUNC name='${key}']\\n` +\r\n                `__v1[\"${key}\"]=${f};\\n;` +\r\n                `//[/DEF_FUNC name='${key}']\\n`;\r\n        }\r\n        if (nakoFuncCode !== '') {\r\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\r\n        }\r\n        // プラグインの初期化関数を実行する\r\n        let pluginCode = '';\r\n        for (const name in this.__self.__module) {\r\n            const initkey = `!${name}:初期化`;\r\n            if (this.varslistSet[0].names.has(initkey)) {\r\n                this.usedFuncSet.add(`!${name}:初期化`);\r\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\r\n            }\r\n        }\r\n        if (pluginCode !== '') {\r\n            code += '__v0.line=\\'プラグインの初期化\\';\\n' + pluginCode;\r\n        }\r\n        // テストの定義を行う\r\n        if (isTest) {\r\n            let testCode = 'const __tests = [];\\n';\r\n            for (const key in this.nakoTestList) {\r\n                if (isTest === true || (typeof isTest === 'string' && isTest === key)) {\r\n                    const f = this.nakoTestList[key].fn;\r\n                    testCode += `${f};\\n;`;\r\n                }\r\n            }\r\n            if (testCode !== '') {\r\n                code += '__v0.line=\\'テストの定義\\';\\n';\r\n                code += testCode + '\\n';\r\n            }\r\n        }\r\n        return code;\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加\r\n     * @param po プラグイン・オブジェクト\r\n     */\r\n    addPlugin(po) {\r\n        return this.__self.addPlugin(po);\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\r\n     * @param name オブジェクト名\r\n     * @param po 関数リスト\r\n     */\r\n    addPluginObject(name, po) {\r\n        this.__self.addPluginObject(name, po);\r\n    }\r\n    /**\r\n     * プラグイン・ファイルを追加(Node.js向け)\r\n     * @param objName オブジェクト名\r\n     * @param path ファイルパス\r\n     * @param po 登録するオブジェクト\r\n     */\r\n    addPluginFile(objName, path, po) {\r\n        this.__self.addPluginFile(objName, path, po);\r\n    }\r\n    /**\r\n     * 関数を追加する\r\n     * @param key 関数名\r\n     * @param josi 助詞\r\n     * @param fn 関数\r\n     */\r\n    addFunc(key, josi, fn) {\r\n        this.__self.addFunc(key, josi, fn);\r\n    }\r\n    /**\r\n     * プラグイン関数を参照する\r\n     * @param key プラグイン関数の関数名\r\n     * @returns プラグイン・オブジェクト\r\n     */\r\n    getFunc(key) {\r\n        return this.__self.getFunc(key);\r\n    }\r\n    /**\r\n     * 関数を先に登録してしまう\r\n     */\r\n    registerFunction(ast) {\r\n        if (ast.type !== 'block') {\r\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\r\n        }\r\n        const registFunc = (node) => {\r\n            for (let i = 0; i < node.block.length; i++) {\r\n                const t = node.block[i];\r\n                if (t.type === 'def_func') {\r\n                    const name = t.name.value;\r\n                    this.usedFuncSet.add(name);\r\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\r\n                    this.nakoFuncList[name] = {\r\n                        josi: t.name.meta.josi,\r\n                        fn: '',\r\n                        type: 'func'\r\n                    };\r\n                }\r\n                else if (t.type === 'speed_mode') {\r\n                    if (t.block.type === 'block') {\r\n                        registFunc(t.block);\r\n                    }\r\n                    else {\r\n                        registFunc(t);\r\n                    }\r\n                }\r\n                else if (t.type === 'performance_monitor') {\r\n                    if (t.block.type === 'block') {\r\n                        registFunc(t.block);\r\n                    }\r\n                    else {\r\n                        registFunc(t);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        registFunc(ast);\r\n        // __self.__varslistの変更を反映\r\n        const initialNames = new Set();\r\n        if (this.speedMode.invalidSore === 0) {\r\n            initialNames.add('それ');\r\n        }\r\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\r\n        this.varslistSet = this.__self.__varslist.map(v => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\r\n        this.varslistSet[2] = this.varsSet;\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isTest\r\n     */\r\n    convGen(node, isTest) {\r\n        // convert\r\n        this._convGen(node, true);\r\n        // ラベルアドレスの解決が必要なコード一覧\r\n        const needToFixAddr = new Set([\r\n            NakoCodeJump, NakoCodeJumpIfTrue, NakoCodeJumpIfFalse, NakoCodeCall, NakoCodeTry\r\n        ]);\r\n        // コードの最適化をするか?\r\n        const optimization = true;\r\n        let codes = this.codeArray;\r\n        //\r\n        if (optimization) {\r\n            // NOPを削除\r\n            codes = codes.filter((code) => {\r\n                return code.type !== NakoCodeNop;\r\n            });\r\n            // 未参照のラベルを探す - ただし関数呼び出しは削除しない\r\n            const usedLabels = new Set();\r\n            codes.forEach((code) => {\r\n                if (needToFixAddr.has(code.type)) {\r\n                    usedLabels.add(code.value);\r\n                }\r\n            });\r\n            // 未参照のラベルを削除\r\n            codes = codes.filter((code) => {\r\n                if (code.type !== NakoCodeLabel) {\r\n                    return true;\r\n                }\r\n                if (code.tag === NakoCodeTagIsFuncpoint) {\r\n                    return true;\r\n                }\r\n                return usedLabels.has(code.value);\r\n            });\r\n            // EOLが連続していたら削除する\r\n            let i = 0;\r\n            while (i < codes.length - 1) {\r\n                if (codes[i].type === NakoCodeEOL && codes[i + 1].type === NakoCodeEOL) {\r\n                    codes.splice(i + 1, 1);\r\n                    continue;\r\n                }\r\n                i++;\r\n            }\r\n            this.codeArray = codes;\r\n        }\r\n        // ラベルアドレスの解決\r\n        codes.forEach((code, index) => {\r\n            if (code.type === NakoCodeLabel) {\r\n                this.labels[code.value] = index;\r\n            }\r\n        });\r\n        codes.forEach((code) => {\r\n            if (needToFixAddr.has(code.type)) {\r\n                if (code.no < 0) {\r\n                    code.no = this.labels[code.value];\r\n                }\r\n            }\r\n        });\r\n        let result = '';\r\n        // コードの生成\r\n        codes.forEach((code, index) => {\r\n            switch (code.type) {\r\n                case NakoCodeNop:\r\n                    result += `case ${index}: break; // [NOP] ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeLabel:\r\n                    result += `case ${index}: break; // [LABEL] ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeEOL:\r\n                    result += `case ${index}: ${code.value}; break; // [EOL]\\n`;\r\n                    break;\r\n                case NakoCodeJump:\r\n                    result += `case ${index}: sys.nextIndex = ${code.no}; break; // ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeJumpIfTrue:\r\n                    result += `case ${index}: if (sys.__stack.pop()) { sys.nextIndex = ${code.no};} break; // ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeJumpIfFalse:\r\n                    result += `case ${index}: if (!sys.__stack.pop()) { sys.nextIndex = ${code.no}} break; // ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeReturn:\r\n                    result += `case ${index}: sys.__return(sys); break;\\n`;\r\n                    break;\r\n                case NakoCodeCall:\r\n                    result += `case ${index}: sys.__call(${code.no}, sys); break; // ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeCallObj:\r\n                    result += `case ${index}: sys.__callObj('${code.value}', ${index}, sys); break; // ${code.value}\\n`;\r\n                    break;\r\n                case NakoCodeTry:\r\n                    result += `case ${index}: sys.tryIndex = ${code.no}; break; // TRY \\n`;\r\n                    break;\r\n                case NakoCodeCode:\r\n                    {\r\n                        // trim last\r\n                        const s = code.value.replace(/\\s+$/, '');\r\n                        result += `case ${index}: {\\n${s}\\n};break;\\n`;\r\n                        break;\r\n                    }\r\n                default:\r\n                    throw new Error('invalid code type');\r\n            }\r\n        });\r\n        result = `\r\n    //-------------------------\r\n    // main_code\r\n    this.__labels = ${JSON.stringify(this.labels)};\r\n    this.nextAsync = (sys) => {\r\n      if (sys.index >= sys.codeSize || sys.index < 0) {return}\r\n      const __v0 = sys.__v0\r\n      try {\r\n        sys.inLoop = true\r\n        while (sys.index < sys.codeSize && sys.index >= 0) {\r\n          // console.log('@@[run]', sys.index)\r\n          switch (sys.index) {\r\n            // --- CODE.BEGIN ---\r\n            ${result}\r\n            // --- CODE.END ---\r\n            default:\r\n              sys.inLoop = false\r\n              console.log(sys.index, sys.__stack)\r\n              throw new Error('Invalid sys.index:' + sys.index)\r\n              break\r\n          }\r\n          // check next\r\n          if (sys.nextIndex >= 0) {\r\n            sys.index = sys.nextIndex\r\n            sys.nextIndex = -1\r\n          } else {\r\n            sys.index++\r\n          }\r\n          if (sys.async) {\r\n            sys.__saveSysenv(sys)\r\n            sys.async = false\r\n            break\r\n          }\r\n        } // end of while\r\n        sys.inLoop = false\r\n      } catch (e) {\r\n        sys.__errorAsync(e, sys)\r\n      }\r\n    }\r\n    this.__errorAsync = (e, sys) => { // エラーが起きた時呼び出す\r\n      sys.__v0[\"エラーメッセージ\"] = e.message;\r\n      if (e.message == '__終わる__') {\r\n        sys.__stopAsync(sys)\r\n        return\r\n      }\r\n      if (sys.tryIndex >= 0) {\r\n        sys.index = sys.tryIndex;\r\n        setTimeout(() => {sys.nextAsync(sys)}, 1)\r\n      } else {\r\n        throw e\r\n      }\r\n    }\r\n    this.__call = (no, sys) => {\r\n      const info = {lastVars:sys.__vars, backNo: this.index + 1}\r\n      sys.__callstack.push(info);\r\n      sys.__vars = {\"それ\":\"\"}\r\n      sys.__varslist.push(sys.__vars)\r\n      sys.nextIndex = no;\r\n    }\r\n    this.__return = sys => {\r\n      if (sys.__callstack.length === 0) {\r\n        sys.__destroySysenv(sys, sys.curSysenv.envid)\r\n        sys.index = -2\r\n        sys.nextIndex = -1\r\n        return\r\n      }\r\n      const sore = sys.__vars['それ'];\r\n      sys.__varslist.pop();\r\n      const info = sys.__callstack.pop();\r\n      sys.nextIndex = info.backNo;\r\n      sys.__vars = info.lastVars;\r\n      sys.__vars['それ'] = sore\r\n      sys.__stack.push(sore);\r\n    }\r\n    this.__resetAsync = sys => {\r\n      sys.index = 0\r\n      sys.codeSize = ${codes.length};\r\n      sys.async = false\r\n      sys.nextIndex = -1\r\n      sys.tryIndex = -1\r\n    }\r\n    this.__stopAsync = sys => {\r\n      sys.__resetAsync(sys)\r\n      sys.index = -1 // force stop!!\r\n    }\r\n    this.__callNakoCode = (no, backNo, sys) => {\r\n      this.__call(backNo, sys)\r\n      sys.nextIndex = no\r\n      const sysenv = sys.setAsync(sys)\r\n      setTimeout(() => {\r\n        // console.log('//__callNakoCode, back=', backNo, 'no=', no)\r\n        sys.compAsync(sys, sysenv)\r\n      } ,1)\r\n    }\r\n    this.__callNakoCodeEntry = (no, sys) => {\r\n      sys.__saveSysenv(sys)\r\n      sys.curSysenv = sys.__generateSysenv(sys)\r\n      sys.__restoreSysenv(sys)\r\n      sys.__vars = {\"それ\":\"\"}\r\n      sys.__varslist.push(sys.__vars)\r\n      sys.index = no;\r\n      sys.nextAsync(sys)\r\n    }\r\n    this.__callObj = (vname, curNo, sys) => {\r\n      if (sys.__vars[vname]) {\r\n        const fname = sys.__vars[vname]\r\n        // console.log(sys.__labels)\r\n        if (fname && sys.__labels[fname]) {\r\n          const no = sys.__labels[fname]\r\n          sys.__call(no, sys)\r\n          return\r\n        } else {\r\n          console.log('vname=', vname, 'label=', fname)\r\n        }\r\n      }\r\n      throw new Error('async error in __callObj::', vname)\r\n    }\r\n    this.__generateSysenv = sys => {\r\n      sys.envid = ( sys.envid == null ? 0 : sys.envid ) + 1\r\n      const sysenv = {\r\n        callstack: [],\r\n        varstack: [],\r\n        varslist: [sys.__varslist[0], sys.__varslist[1], sys.__varslist[2]],\r\n        index: -1,\r\n        nextIndex: -1,\r\n        tryIndex: -1,\r\n        envid: sys.envid\r\n      }\r\n      sysenv.vars = sysenv.varslist[2]\r\n      if (sys.sysenvs == null) { sys.sysenvs={} }\r\n      sys.sysenvs[sys.envid] = sysenv\r\n      // console.log('generete envid '+sys.envid)\r\n      return sysenv\r\n    }\r\n    this.__destroySysenv = (sys, envid) => {\r\n      delete sys.sysenvs[envid]\r\n      // console.log('destroy envid '+envid)\r\n    }\r\n    this.__saveSysenv = sys => {\r\n      const sysenv = sys.curSysenv\r\n      sysenv.callstack = sys.__callstack\r\n      sysenv.varstack = sys.__stack\r\n      sysenv.varslist = sys.__varslist\r\n      sysenv.vars = sys.__vars\r\n      sysenv.index = sys.index\r\n      sysenv.nextIndex = sys.nextIndex\r\n      sysenv.tryIndex = sys.tryIndex\r\n    }\r\n    this.__restoreSysenv = sys => {\r\n      const sysenv = sys.curSysenv\r\n      sys.__callstack = sysenv.callstack\r\n      sys.__stack = sysenv.varstack\r\n      sys.__varslist = sysenv.varslist\r\n      sys.__vars = sysenv.vars\r\n      ___vars = sys.__vars\r\n      sys.index = sysenv.index\r\n      sys.nextIndex = sysenv.nextIndex\r\n      sys.tryIndex = sysenv.tryIndex\r\n    }\r\n    this.setAsync = sys => {\r\n      sys.async = true\r\n      return sys.curSysenv\r\n    }\r\n    this.compAsync = (sys,sysenv) => {\r\n      if (sys.async && sys.curSysenv != null && sysenv != null && sys.curSysenv.envid === sysenv.envid) {\r\n        sys.async = false\r\n      } else {\r\n        if (sys.curSysenv == null || sysenv == null || sys.curSysenv.envid !== sysenv.envid) {\r\n          sys.__saveSysenv(sys)\r\n          const envid = sys.curSysenv.envid\r\n          sys.curSysenv = sysenv\r\n          sys.__restoreSysenv(sys)\r\n          // console.log('switch envid '+envid+' to '+sys.curSysenv.envid)\r\n        }\r\n        sys.nextAsync(sys)\r\n      }\r\n    }\r\n\r\n    this.__resetAsync(this)\r\n    this.curSysenv = this.__generateSysenv(this)\r\n    this.nextAsync(this)\r\n    //-------------------------\r\n    `;\r\n        if (isTest) {\r\n            return '';\r\n        }\r\n        else {\r\n            return result;\r\n        }\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     */\r\n    _convGen(node, isExpression) {\r\n        let code = '';\r\n        if (node instanceof Array) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                const n = node[i];\r\n                code += this._convGen(n, isExpression);\r\n            }\r\n            return code;\r\n        }\r\n        if (node === null) {\r\n            return 'null';\r\n        }\r\n        if (node === undefined) {\r\n            return 'undefined';\r\n        }\r\n        if (typeof (node) !== 'object') {\r\n            return '' + node;\r\n        }\r\n        // switch\r\n        switch (node.type) {\r\n            // === NOP ===\r\n            case 'nop':\r\n                break;\r\n            case 'comment':\r\n                if (!node.value) {\r\n                    node.value = '';\r\n                }\r\n                this.addCode(new NakoCode(NakoCodeNop, node.value));\r\n                break;\r\n            case 'eol':\r\n                this.addCode(new NakoCode(NakoCodeEOL, this.convLineno(node, true)));\r\n                break;\r\n            // === 単純なコード変換 ===\r\n            case 'number':\r\n                this.addCodeStr(`sys.__stack.push(${node.value});//number`);\r\n                break;\r\n            case 'string':\r\n                this.convString(node);\r\n                break;\r\n            case 'word':\r\n            case 'variable':\r\n                this.convGetVar(node);\r\n                break;\r\n            case 'op':\r\n            case 'calc':\r\n                this.convOp(node);\r\n                break;\r\n            case 'renbun':\r\n                this.convRenbun(node);\r\n                break;\r\n            case 'not':\r\n                this._convGen(node.value, true);\r\n                this.addCodeStr('if (sys.__stack.length==0) throw new Error(\\'NOTでスタックに値がありません\\');' +\r\n                    'sys.__stack[sys.__stack.length-1] = (sys.__stack[sys.__stack.length-1]) ? 0:1');\r\n                break;\r\n            case '配列参照':\r\n                this.convRefArray(node);\r\n                break;\r\n            case 'json_array':\r\n                this.convJsonArray(node);\r\n                break;\r\n            case 'json_obj':\r\n                this.convJsonObj(node);\r\n                break;\r\n            case 'bool':\r\n                {\r\n                    const b = (node.value) ? 'true' : 'false';\r\n                    this.addCodeStr(`sys.__stack.push(${b})`);\r\n                    break;\r\n                }\r\n            case 'null':\r\n                this.addCodeStr('sys.__stack.push(null)');\r\n                break;\r\n            case 'func':\r\n            case 'func_pointer':\r\n            case 'calc_func':\r\n                this.convFunc(node, isExpression); // 関数の呼び出し\r\n                break;\r\n            // === 文の変換 ===\r\n            case 'let':\r\n                this.convLet(node);\r\n                break;\r\n            case 'let_array':\r\n                this.convLetArray(node);\r\n                break;\r\n            case 'block':\r\n                for (let i = 0; i < node.block.length; i++) {\r\n                    const b = node.block[i];\r\n                    this._convGen(b, false);\r\n                }\r\n                break;\r\n            case 'if':\r\n                this.convIf(node);\r\n                break;\r\n            case 'repeat_times':\r\n                this.convRepeatTimes(node);\r\n                break;\r\n            case 'break':\r\n                this.addCodeStr(this.convCheckLoop(node, 'break'));\r\n                break;\r\n            case 'continue':\r\n                this.addCodeStr(this.convCheckLoop(node, 'continue'));\r\n                break;\r\n            case 'for':\r\n                this.convFor(node);\r\n                break;\r\n            case 'foreach':\r\n                this.convForeach(node);\r\n                break;\r\n            case 'while':\r\n                this.convWhile(node);\r\n                break;\r\n            case 'switch':\r\n                this.convSwitch(node);\r\n                break;\r\n            case 'return':\r\n                this.convReturn(node);\r\n                break;\r\n            case 'end':\r\n                code += this.addCodeStr('__varslist[0][\\'終\\']();');\r\n                break;\r\n            case 'def_local_var':\r\n                this.convDefLocalVar(node);\r\n                break;\r\n            case 'def_local_varlist':\r\n                code += this.addCodeStr(this.convDefLocalVarlist(node));\r\n                break;\r\n            case 'tikuji':\r\n                throw NakoSyntaxError.fromNode('「逐次実行」構文は「!非同期モード」では使えません。', node);\r\n            case 'speed_mode':\r\n                throw NakoSyntaxError.fromNode('「速度有線」構文は「!非同期モード」では使えません。', node);\r\n            case 'performance_monitor':\r\n                this.convPerformanceMonitor(node, isExpression);\r\n                break;\r\n            case 'func_obj':\r\n                this.convFuncObj(node);\r\n                break;\r\n            case 'def_test':\r\n                this.convDefTest(node);\r\n                break;\r\n            case 'def_func':\r\n                code += this.addCodeStr(this.convDefFunc(node));\r\n                break;\r\n            // TODO\r\n            case 'try_except':\r\n                code += this.convTryExcept(node);\r\n                break;\r\n            case 'require':\r\n                code += this.convRequire(node);\r\n                break;\r\n            default:\r\n                throw new Error('System Error: unknown_type=' + node.type);\r\n        }\r\n        return code;\r\n    }\r\n    convRequire(node) {\r\n        const gen = new NakoGen(this.com);\r\n        this.addCodeStr(gen.convRequire(node));\r\n        return '';\r\n    }\r\n    /**\r\n     * add code to array\r\n     * @param {string} codeStr\r\n     * @returns {string}\r\n     */\r\n    addCodeStr(codeStr) {\r\n        if (codeStr === '') {\r\n            return '';\r\n        }\r\n        const a = codeStr.split('\\n');\r\n        const a2 = a.map((row) => '  ' + row.replace(/\\s+$/, ''));\r\n        const c = new NakoCode(NakoCodeCode, a2.join('\\n'));\r\n        return this.addCode(c);\r\n    }\r\n    /**\r\n     * add code to array\r\n     * @param {NakoCode} code\r\n     * @returns {string}\r\n     */\r\n    addCode(code) {\r\n        this.codeArray[this.codeId] = code;\r\n        this.codeId++;\r\n        return '';\r\n    }\r\n    /**\r\n     * make label for jump\r\n     * @param {string} name\r\n     * @returns {NakoCode}\r\n     */\r\n    makeLabel(name) {\r\n        const uniqLabel = name + '_' + (this.loopId++);\r\n        return this.makeLabelDirectly(uniqLabel);\r\n    }\r\n    /**\r\n     * make label for function\r\n     * @param {string} labelName\r\n     * @returns {NakoCode}\r\n     */\r\n    makeLabelDirectly(labelName) {\r\n        const c = new NakoCode(NakoCodeLabel, labelName);\r\n        this.labels[labelName] = -1;\r\n        return c;\r\n    }\r\n    /**\r\n     * make Jump\r\n     * @param {NakoCode} label\r\n     * @returns {NakoCode}\r\n     */\r\n    makeJump(label) {\r\n        return new NakoCode(NakoCodeJump, label.value);\r\n    }\r\n    /**\r\n     * make Jump if true\r\n     * @param {NakoCode} label\r\n     * @returns {NakoCode}\r\n     */\r\n    makeJumpIfTrue(label) {\r\n        return new NakoCode(NakoCodeJumpIfTrue, label.value);\r\n    }\r\n    /**\r\n     * make Jump if false\r\n     * @param {NakoCode} label\r\n     * @returns {NakoCode}\r\n     */\r\n    makeJumpIfFalse(label) {\r\n        return new NakoCode(NakoCodeJumpIfFalse, label.value);\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     */\r\n    convIf(node) {\r\n        const labelBegin = this.makeLabel('もし:ここから');\r\n        const labelEnd = this.makeLabel('もし:ここまで');\r\n        const labelIfFalse = this.makeLabel('もし:違えば');\r\n        //\r\n        this.addCode(labelBegin);\r\n        this._convGen(node.expr, true);\r\n        this.addCode(this.makeJumpIfFalse(labelIfFalse));\r\n        this._convGen(node.block, false);\r\n        this.addCode(this.makeJump(labelEnd));\r\n        this.addCode(labelIfFalse);\r\n        if (node.falseBlock) {\r\n            this._convGen(node.falseBlock, false);\r\n        }\r\n        this.addCode(labelEnd);\r\n        return '';\r\n    }\r\n    convRepeatTimes(node) {\r\n        this.flagLoop = true;\r\n        this.varsSet.names.add('回数');\r\n        this.varsSet.readonly.add('回数');\r\n        // ループ管理変数を作成\r\n        const loopVar = `sys.__tmp_i${this.loopId}`;\r\n        this.loopId++;\r\n        // ループ回数を取得\r\n        const loopCount = `sys.__tmp_count${this.loopId}`;\r\n        this.loopId++;\r\n        this._convGen(node.value, true);\r\n        this.addCodeStr(`${loopCount} = sys.__stack.pop(); ${loopVar} = 0;`);\r\n        const labelCheck = this.makeLabel('回:条件チェック');\r\n        this.addCode(labelCheck);\r\n        const labelEnd = this.makeLabel('回:ここまで');\r\n        this.labelBreak = labelEnd;\r\n        this.labelContinue = labelCheck;\r\n        // 繰り返し判定\r\n        const kaisu = 'sys.__vars[\"回数\"]';\r\n        const cond = `${kaisu} = ++${loopVar}\\n` +\r\n            `sys.__stack.push(${loopVar} > ${loopCount})\\n`;\r\n        this.addCodeStr(cond);\r\n        this.addCode(this.makeJumpIfTrue(labelEnd));\r\n        this.convGenLoop(node.block); // read block\r\n        this.addCode(this.makeJump(labelCheck));\r\n        this.addCode(labelEnd);\r\n        this.flagLoop = false;\r\n        return '';\r\n    }\r\n    /**\r\n     * @param {string} name\r\n     * @returns {{i: number, name: string, isTop: boolean, js: string} | null}\r\n     */\r\n    findVar(name) {\r\n        // __vars ? (ローカル変数)\r\n        if (this.varsSet.names.has(name)) {\r\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: `sys.__vars[${JSON.stringify(name)}]` };\r\n        }\r\n        // __varslist ?\r\n        for (let i = 2; i >= 0; i--) {\r\n            if (this.varslistSet[i].names.has(name)) {\r\n                return { i, name, isTop: false, js: `sys.__varslist[${i}][${JSON.stringify(name)}]` };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 定義済みの変数の参照\r\n     * @param {string} name\r\n     * @param {Ast} position\r\n     */\r\n    genVar(name, position) {\r\n        const res = this.findVar(name);\r\n        const lno = position.line;\r\n        if (res === null) {\r\n            // 定義されていない名前の参照は変数の定義とみなす。\r\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\r\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\r\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\r\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー' || name === '回数') {\r\n                // デフォルト定義されている変数名\r\n            }\r\n            else {\r\n                this.__self.getLogger().warn(`変数『${name}』は定義されていません。`, position);\r\n            }\r\n            this.varsSet.names.add(name);\r\n            return this.varname(name);\r\n        }\r\n        const i = res.i;\r\n        // システム関数・変数の場合\r\n        if (i === 0) {\r\n            const pv = this.__self.getFunc(name);\r\n            if (!pv) {\r\n                return `${res.js}/*err:${lno}*/`;\r\n            }\r\n            if (pv.type === 'const' || pv.type === 'var') {\r\n                return res.js;\r\n            }\r\n            if (pv.type === 'func') {\r\n                if (!pv.josi) {\r\n                    throw new Error('[System Error]');\r\n                }\r\n                if (pv.josi.length === 0) {\r\n                    return `(${res.js}())`;\r\n                }\r\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\r\n            }\r\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\r\n        }\r\n        return res.js;\r\n    }\r\n    convGetVar(node) {\r\n        const name = node.value;\r\n        let varName = `sys.__vars[${JSON.stringify(name)}]`;\r\n        const o = this.findVar(name);\r\n        if (o != null) {\r\n            varName = o.js;\r\n        }\r\n        this.addCodeStr(`sys.__stack.push(${varName});`);\r\n    }\r\n    convComment(node) {\r\n        let commentSrc = String(node.value);\r\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\r\n        const lineNo = this.convLineno(node, false);\r\n        if (commentSrc === '' && lineNo === '') {\r\n            return ';';\r\n        }\r\n        if (commentSrc === '') {\r\n            return ';' + lineNo + '\\n';\r\n        }\r\n        return ';' + lineNo + '//' + commentSrc + '\\n';\r\n    }\r\n    convReturn(node) {\r\n        // 関数の中であれば利用可能\r\n        if (this.varsSet.names.has('!関数')) {\r\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\r\n        }\r\n        if (node.value) {\r\n            this._convGen(node.value, true);\r\n            this.addCodeStr('sys.__vars[\"それ\"] = sys.__stack.pop()');\r\n        }\r\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\r\n        return '';\r\n    }\r\n    convCheckLoop(node, cmd) {\r\n        // ループの中であれば利用可能\r\n        if (!this.flagLoop) {\r\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\r\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\r\n        }\r\n        if (cmd === 'continue') {\r\n            if (this.labelContinue) {\r\n                this.addCode(this.makeJump(this.labelContinue));\r\n            }\r\n        }\r\n        else {\r\n            if (this.labelBreak) {\r\n                this.addCode(this.makeJump(this.labelBreak));\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n    convDefFuncCommon(node, name) {\r\n        // deffunc_code\r\n        const isMumeiFunc = (name === '');\r\n        let funcName = name;\r\n        if (isMumeiFunc) {\r\n            funcName = `無名関数:${this.loopId++}`;\r\n        }\r\n        const labelEnd = this.makeLabel(`関数「${funcName}」:ここまで`);\r\n        this.addCode(this.makeJump(labelEnd));\r\n        const labelBegin = this.makeLabelDirectly(funcName);\r\n        labelBegin.tag = NakoCodeTagIsFuncpoint; // 削除対象からはずすため\r\n        this.addCode(labelBegin);\r\n        //\r\n        const initialNames = new Set();\r\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\r\n        this.varsSet.names.add('それ');\r\n        // ローカル変数をPUSHする\r\n        this.varslistSet.push(this.varsSet);\r\n        // JSの引数と引数をバインド\r\n        const meta = isMumeiFunc ? node.meta : node.name.meta;\r\n        let code = '';\r\n        let codeCall = '';\r\n        code += `//関数『${funcName}』の初期化処理\\n`;\r\n        // 宣言済みの名前を保存\r\n        // const varsDeclared = Array.from(this.varsSet.names.values())\r\n        // 引数をローカル変数に設定 (スタックの末尾から取得する必要があるので、逆順に値を得る)\r\n        code += '// 引数をローカル変数として登録\\n';\r\n        for (let i = meta.varnames.length - 1; i >= 0; i--) {\r\n            const word = meta.varnames[i];\r\n            code += `  ${this.varname(word)} = sys.__stack.pop();\\n`;\r\n            this.varsSet.names.add(word);\r\n            codeCall += ''; //  sys.__stack.push(arguments[${i}]);\\n\r\n        }\r\n        code += '// ここまで:引数をローカル変数として登録\\n';\r\n        this.addCodeStr(code);\r\n        // 関数定義は、グローバル領域で。\r\n        this.usedFuncSet.add(funcName);\r\n        this.varslistSet[1].names.add(funcName);\r\n        this.nakoFuncList[funcName] = {\r\n            josi: meta.josi,\r\n            fn: '(function(){\\n' +\r\n                '  const sys = (arguments.length > 0) ? arguments[arguments.length-1] : {}; \\n' +\r\n                '  if (sys.newenv) { \\n' +\r\n                '    sys.newenv = false\\n' +\r\n                `    sys.__callNakoCodeEntry(sys.__labels['${funcName}'], sys);` + '\\n' +\r\n                '  } else {\\n' +\r\n                '  ' + codeCall + '\\n' +\r\n                `    sys.__callNakoCode(sys.__labels['${funcName}'], sys.nextIndex, sys);` + '\\n' +\r\n                '    if (!sys.inLoop) { sys.nextAsync(sys) }\\n' +\r\n                '  }  })',\r\n            type: 'func'\r\n        };\r\n        // ブロックを解析\r\n        this._convGen(node.block, false);\r\n        this.varslistSet.pop();\r\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        this.__self.__varslist[1][funcName] = function () { };\r\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\r\n        this.addCode(labelEnd);\r\n        // 無名関数の定義であれば無名関数をPUSH\r\n        if (!name) {\r\n            this.addCodeStr(`sys.__stack.push('${funcName}')`);\r\n        }\r\n        return '';\r\n    }\r\n    convDefTest(node) {\r\n        throw NakoSyntaxError.fromNode('テスト構文は!非同期モードでは使えません。', node);\r\n    }\r\n    convDefFunc(node) {\r\n        const name = NakoGen.getFuncName(node.name.value);\r\n        this.convDefFuncCommon(node, name);\r\n        // ★この時点では関数のコードを生成しない★\r\n        // プログラム冒頭でコード生成時に関数定義を行う\r\n        return '';\r\n    }\r\n    convFuncObj(node) {\r\n        return this.convDefFuncCommon(node, '');\r\n    }\r\n    convJsonObj(node) {\r\n        const list = node.value;\r\n        const objName = `sys.__tmp_obj${this.loopId++}`;\r\n        this.addCodeStr(objName + '={}; // convJsonObj::ここから');\r\n        list.forEach((e) => {\r\n            this._convGen(e.value, true);\r\n            this._convGen(e.key, true);\r\n            this.addCodeStr(`${objName}[sys.__stack.pop()]=sys.__stack.pop()`);\r\n        });\r\n        this.addCodeStr(`this.__stack.push(${objName}); delete $objName; // convJsonObj::ここまで`);\r\n        return '';\r\n    }\r\n    convJsonArray(node) {\r\n        const list = node.value;\r\n        this.addCode(this.makeLabel('convJsonArray::ここから'));\r\n        list.forEach((e) => this._convGen(e, true));\r\n        const size = list.length;\r\n        this.addCodeStr(`sys.__stack.push(sys.__stack.splice(sys.__stack.length-${size},${size}))`);\r\n        return '';\r\n    }\r\n    convRefArray(node) {\r\n        // 名前をPUSH\r\n        this._convGen(node.name, true);\r\n        const list = node.index;\r\n        for (let i = 0; i < list.length; i++) {\r\n            // push index\r\n            this._convGen(list[i], true);\r\n            // pop index & push value\r\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\r\n                'const obj = sys.__stack.pop();\\n' +\r\n                'sys.__stack.push(obj[idx]);');\r\n        }\r\n        return '';\r\n    }\r\n    convLetArray(node) {\r\n        // 代入する値をPUSH\r\n        this._convGen(node.value, true);\r\n        // 変数を取得\r\n        this._convGen(node.name, true);\r\n        const list = node.index;\r\n        for (let i = 0; i < list.length; i++) {\r\n            this._convGen(list[i], true);\r\n            if (i === list.length - 1) { // 代入\r\n                this.addCodeStr('const idx = this.__stack.pop();' +\r\n                    'const obj = this.__stack.pop();' +\r\n                    'const val = this.__stack.pop();' +\r\n                    'obj[idx]=val;');\r\n                break;\r\n            }\r\n            // index アクセス\r\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\r\n                'const obj = sys.__stack.pop();\\n' +\r\n                'sys.__stack.push(obj[idx]);');\r\n        }\r\n        return '';\r\n    }\r\n    convGenLoop(node) {\r\n        const tmpflag = this.flagLoop;\r\n        this.flagLoop = true;\r\n        try {\r\n            return this._convGen(node, false);\r\n        }\r\n        finally {\r\n            this.flagLoop = tmpflag;\r\n        }\r\n    }\r\n    convFor(node) {\r\n        this.flagLoop = true;\r\n        // ループ変数について\r\n        let word;\r\n        if (node.word !== null) { // ループ変数を使う時\r\n            const varName = node.word.value;\r\n            this.varsSet.names.add(varName);\r\n            word = this.varname(varName);\r\n        }\r\n        else {\r\n            this.varsSet.names.add('dummy');\r\n            word = this.varname('dummy');\r\n        }\r\n        const sore = this.varname('それ');\r\n        const idLoop = this.loopId++;\r\n        const varI = `sys.__tmp__i${idLoop}`;\r\n        // ループ条件を変数に入れる用\r\n        const varTo = `sys.__tmp__to${idLoop}`;\r\n        // ループ条件を確認\r\n        this._convGen(node.from, true);\r\n        this._convGen(node.to, true);\r\n        this.addCodeStr(`${varTo}=sys.__stack.pop();${varI}=sys.__stack.pop();`);\r\n        // ループ変数を初期化\r\n        this.addCodeStr(`${sore} = ${word} = ${varI}`);\r\n        // 繰り返し判定\r\n        const labelCheck = this.makeLabel('繰返:条件確認');\r\n        const labelInc = this.makeLabel('繰返:加算');\r\n        this.addCode(labelCheck);\r\n        const labelEnd = this.makeLabel('繰返:ここまで');\r\n        this.addCodeStr(`sys.__stack.push(${word} <= ${varTo})`);\r\n        this.addCode(this.makeJumpIfFalse(labelEnd));\r\n        this.labelContinue = labelInc;\r\n        this.labelBreak = labelEnd;\r\n        // ループ内のブロック内容を得る\r\n        this.convGenLoop(node.block); // block\r\n        this.addCode(labelInc);\r\n        this.addCodeStr(`${sore} = ++${word};`);\r\n        this.addCode(this.makeJump(labelCheck));\r\n        this.addCode(labelEnd);\r\n        this.addCodeStr(`delete ${varI};delete ${varTo};//繰返:掃除`);\r\n        this.flagLoop = false;\r\n        return '';\r\n    }\r\n    convForeach(node) {\r\n        this.flagLoop = true;\r\n        // 対象を用意する\r\n        let taisyo = '__v0[\"対象\"]';\r\n        const taisyoKey = '__v0[\"対象キー\"]';\r\n        if (node.name) {\r\n            taisyo = this.varname(node.name.value);\r\n            this.varsSet.names.add(node.name.value);\r\n        }\r\n        // 反復対象を調べる\r\n        const target = node.target;\r\n        if (target === null) {\r\n            throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\r\n        }\r\n        const sore = this.varname('それ');\r\n        const targetArray = `sys.__tmp__target${this.loopId++}`;\r\n        const targetKeys = `sys.__tmp__keys${this.loopId++}`;\r\n        const loopVar = `sys.__tmp__i${this.loopId++}`;\r\n        const loopCount = `sys.__tmp__count${this.loopId++}`;\r\n        // 反復対象を評価\r\n        this._convGen(node.target, true);\r\n        // どのように反復するか判定\r\n        const initCode = '// 反復: 初期化\\n' +\r\n            `${targetArray} = sys.__stack.pop();\\n` +\r\n            `${loopVar} = 0;\\n` +\r\n            // 文字列や数値なら反復できるように配列に入れる\r\n            `if (typeof(${targetArray}) == 'string' || typeof(${targetArray}) == 'number') { ${targetArray} = [${targetArray}]; }\\n` +\r\n            // Objectならキー一覧を得る\r\n            `if (${targetArray} instanceof Array) { ${loopCount} = ${targetArray}.length; }\\n` +\r\n            'else { // キーの一覧を得る\\n' +\r\n            `  ${targetKeys} = Object.keys(${targetArray}); \\n` +\r\n            '  // hasOwnPropertyがfalseならばkeyを消す処理\\n' +\r\n            `  ${targetKeys} = ${targetKeys}.filter((key)=>{ return ${targetArray}.hasOwnProperty(key) })\\n` +\r\n            `  ${loopCount} = ${targetKeys}.length;\\n` +\r\n            '}\\n';\r\n        this.addCodeStr(initCode);\r\n        const labelCheck = this.makeLabel('反復:条件確認');\r\n        const labelInc = this.makeLabel('反復:加算');\r\n        const labelEnd = this.makeLabel('反復:ここまで');\r\n        this.labelBreak = labelEnd;\r\n        this.labelContinue = labelInc;\r\n        this.addCode(labelCheck);\r\n        const setTarget = `if (${targetArray} instanceof Array) {\\n` +\r\n            // eslint-disable-next-line no-irregular-whitespace\r\n            `  ${taisyo} = ${sore} = ${targetArray}[${loopVar}];　${taisyoKey} = ${loopVar};\\n` +\r\n            '} else {\\n' +\r\n            `  ${taisyoKey} = ${targetKeys}[${loopVar}]; ${taisyo} = ${sore} = ${targetArray}[${taisyoKey}];\\n` +\r\n            '}\\n';\r\n        this.addCodeStr(`${setTarget}\\nsys.__stack.push(${loopVar} < ${loopCount});`);\r\n        this.addCode(this.makeJumpIfFalse(labelEnd));\r\n        // 反復ブロックを定義\r\n        this.convGenLoop(node.block); // block\r\n        // 加算\r\n        this.addCode(labelInc);\r\n        this.addCodeStr(`${loopVar}++`);\r\n        this.addCode(this.makeJump(labelCheck));\r\n        this.addCode(labelEnd);\r\n        this.flagLoop = false;\r\n        return '';\r\n    }\r\n    convWhile(node) {\r\n        this.flagLoop = true;\r\n        const labelBegin = this.makeLabel('間:ここから');\r\n        const labelEnd = this.makeLabel('間:ここまで');\r\n        this.labelContinue = labelBegin;\r\n        this.labelBreak = labelEnd;\r\n        this.addCode(labelBegin);\r\n        // 条件をスタックに\r\n        this._convGen(node.cond, true);\r\n        this.addCode(this.makeJumpIfFalse(labelEnd));\r\n        // ブロックを追加\r\n        this.convGenLoop(node.block);\r\n        this.addCode(this.makeJump(labelBegin));\r\n        this.addCode(labelEnd);\r\n        this.flagLoop = false;\r\n        return '';\r\n    }\r\n    /**\r\n     * @param {Ast} _node\r\n     * @param {boolean} _isExpression\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    convSpeedMode(_node, _isExpression) {\r\n        return '';\r\n    }\r\n    /**\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     */\r\n    convPerformanceMonitor(node, isExpression) {\r\n        const prev = { ...this.performanceMonitor };\r\n        if (node.options['ユーザ関数']) {\r\n            this.performanceMonitor.userFunction++;\r\n        }\r\n        if (node.options['システム関数本体']) {\r\n            this.performanceMonitor.systemFunctionBody++;\r\n        }\r\n        if (node.options['システム関数']) {\r\n            this.performanceMonitor.systemFunction++;\r\n        }\r\n        this._convGen(node.block, isExpression);\r\n        this.performanceMonitor = prev;\r\n    }\r\n    convSwitch(node) {\r\n        // 値をPUSH\r\n        this._convGen(node.value, true);\r\n        const varValue = `sys.__tmp__i${this.loopId++}`;\r\n        this.addCodeStr(`${varValue} = sys.__stack.pop()`);\r\n        const labelEnd = this.makeLabel('条件分岐:ここまで');\r\n        const cases = node.cases;\r\n        for (let i = 0; i < cases.length; i++) {\r\n            const cvalue = cases[i][0];\r\n            if (cvalue.type === '違えば') {\r\n                this.convGenLoop(cases[i][1]);\r\n            }\r\n            else {\r\n                const nextLabel = this.makeLabel('条件分岐:次');\r\n                this._convGen(cvalue, true);\r\n                this.addCodeStr(`sys.__stack.push(sys.__stack.pop() == ${varValue})`);\r\n                this.addCode(this.makeJumpIfFalse(nextLabel));\r\n                this.convGenLoop(cases[i][1]);\r\n                this.addCode(this.makeJump(labelEnd));\r\n                this.addCode(nextLabel);\r\n            }\r\n        }\r\n        this.addCode(labelEnd);\r\n        this.addCodeStr(`delete ${varValue}//条件分岐:掃除`);\r\n        return '';\r\n    }\r\n    convFuncGetArgsCalcType(funcName, func, node) {\r\n        const opts = {};\r\n        for (let i = 0; i < node.args.length; i++) {\r\n            const arg = node.args[i];\r\n            if (i === 0 && arg === null) {\r\n                this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\r\n                opts.sore = true;\r\n            }\r\n            else {\r\n                // 関数の引数を評価\r\n                this._convGen(arg, true);\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    getPluginList() {\r\n        const r = [];\r\n        for (const name in this.__self.__module) {\r\n            r.push(name);\r\n        }\r\n        return r;\r\n    }\r\n    /**\r\n     * 関数の呼び出し\r\n     * @param {Ast} node\r\n     * @param {boolean} isExpression\r\n     * @returns string コード\r\n     */\r\n    convFunc(node, isExpression) {\r\n        let isJSFunc = false;\r\n        let isMumeiFunc = false;\r\n        const funcName = NakoGen.getFuncName(node.name);\r\n        const res = this.findVar(funcName);\r\n        if (res === null) {\r\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\r\n        }\r\n        let func;\r\n        if (res.i === 0) { // plugin function\r\n            func = this.__self.getFunc(funcName);\r\n            if (func.type !== 'func') {\r\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\r\n            }\r\n            isJSFunc = true;\r\n        }\r\n        else {\r\n            func = this.nakoFuncList[funcName];\r\n            // 無名関数の可能性\r\n            if (func === undefined) {\r\n                isMumeiFunc = true;\r\n                func = { return_none: false };\r\n            }\r\n        }\r\n        // 関数の参照渡しか？\r\n        if (node.type === 'func_pointer') {\r\n            return res.js;\r\n        }\r\n        // 関数の参照渡しでない場合\r\n        // 関数定義より助詞を一つずつ調べる\r\n        const argsOpts = this.convFuncGetArgsCalcType(funcName, func, node);\r\n        // function\r\n        this.usedFuncSet.add(funcName);\r\n        let funcBegin = '';\r\n        let funcEnd = '';\r\n        // setter?\r\n        if (node.setter) {\r\n            funcBegin += ';__self.isSetter = true;\\n';\r\n            funcEnd += ';__self.isSetter = false;\\n';\r\n        }\r\n        // 変数「それ」が補完されていることをヒントとして出力\r\n        if (argsOpts.sore) {\r\n            funcBegin += '/*[sore]*/';\r\n        }\r\n        // 引数をスタックに積む\r\n        const arcCount = node.args.length;\r\n        // 必要な引数分だけスタックから下ろして呼び出す\r\n        let code = '';\r\n        if (isJSFunc) {\r\n            code += funcBegin;\r\n            code += `const args = sys.__stack.splice(sys.__stack.length - ${arcCount}, ${arcCount});\\n`;\r\n            // code += `console.log(\"call:${funcName}\", args, 'sys');\\n`\r\n            code += 'args.push(sys);\\n';\r\n            code += `const ret = ${res.js}.apply(sys, args);\\n`;\r\n            if (!func.return_none) {\r\n                code += 'sys.__vars[\\'それ\\'] = ret;\\n';\r\n                if (isExpression) {\r\n                    code += 'sys.__stack.push(ret);\\n';\r\n                }\r\n            }\r\n            code += funcEnd;\r\n            this.addCodeStr(code);\r\n        }\r\n        else {\r\n            if (isMumeiFunc) {\r\n                this.addCode(new NakoCode(NakoCodeCallObj, funcName));\r\n            }\r\n            else {\r\n                this.addCode(new NakoCode(NakoCodeCall, funcName));\r\n            }\r\n            if (!isExpression) {\r\n                this.addCodeStr('sys.__stack.pop();// 戻り値を利用しない関数呼出');\r\n            }\r\n        }\r\n    }\r\n    convRenbun(node) {\r\n        this._convGen(node.left, false);\r\n        this._convGen(node.right, true);\r\n    }\r\n    convOp(node) {\r\n        const OP_TBL = {\r\n            '&': '+\"\"+',\r\n            eq: '==',\r\n            noteq: '!=',\r\n            '===': '===',\r\n            '!==': '!==',\r\n            gt: '>',\r\n            lt: '<',\r\n            gteq: '>=',\r\n            lteq: '<=',\r\n            and: '&&',\r\n            or: '||',\r\n            shift_l: '<<',\r\n            shift_r: '>>',\r\n            shift_r0: '>>>',\r\n            '÷': '/'\r\n        };\r\n        const op = node.operator; // 演算子\r\n        // 値はスタックに載せられる\r\n        // left\r\n        this._convGen(node.left, true);\r\n        // right\r\n        this._convGen(node.right, true);\r\n        // calc\r\n        let code = 'const rv = sys.__stack.pop();\\n' +\r\n            'const lv = sys.__stack.pop();\\n';\r\n        if (op === '^') {\r\n            code += 'const v = (Math.pow(lv, rv))\\n';\r\n        }\r\n        else {\r\n            const op2 = OP_TBL[op] || op;\r\n            code += `const v = ((lv) ${op2} (rv));\\n`;\r\n        }\r\n        // code += `if (isNaN(v) && '${op}' != '&') { console.log('ERROR:${op}', lv, rv) }\\n`\r\n        code += `sys.__stack.push(v); //op:${op}\\n`;\r\n        this.addCodeStr(code);\r\n    }\r\n    convLet(node) {\r\n        let code = '';\r\n        // 値をスタックに載せる\r\n        if (node.value === null) {\r\n            // 値が省略されたら「それ」を載せる\r\n            this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\r\n        }\r\n        else {\r\n            // 値がある場合\r\n            this._convGen(node.value, true);\r\n        }\r\n        // 変数名\r\n        const name = node.name.value;\r\n        const res = this.findVar(name);\r\n        if (res === null) {\r\n            this.varsSet.names.add(name);\r\n            code = `${this.varname(name)}=sys.__stack.pop();`;\r\n        }\r\n        else {\r\n            // 定数ならエラーを出す\r\n            if (this.varslistSet[res.i].readonly.has(name)) {\r\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\r\n            }\r\n            code = `${res.js}=sys.__stack.pop();`;\r\n        }\r\n        this.addCodeStr(code + '//let');\r\n    }\r\n    convDefLocalVar(node) {\r\n        if (node.value === null) {\r\n            this.addCodeStr('sys.__stack.push(null)');\r\n        }\r\n        else {\r\n            this._convGen(node.value, true);\r\n        }\r\n        const name = node.name.value;\r\n        const vtype = node.vartype; // 変数 or 定数\r\n        // 二重定義？\r\n        if (this.varsSet.names.has(name)) {\r\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\r\n        }\r\n        this.varsSet.names.add(name);\r\n        // 定数?\r\n        if (vtype === '定数') {\r\n            this.varsSet.readonly.add(name);\r\n        }\r\n        this.addCodeStr(`${this.varname(name)}=sys.__stack.pop()`);\r\n        return '';\r\n    }\r\n    // #563 複数変数への代入\r\n    convDefLocalVarlist(node) {\r\n        const vtype = node.vartype; // 変数 or 定数\r\n        if (node.value === null) {\r\n            this.addCodeStr('sys.__stack.push(null)');\r\n        }\r\n        else {\r\n            this._convGen(node.value, true);\r\n        }\r\n        const varI = `sys.__tmp_i${this.loopId}`;\r\n        this.loopId++;\r\n        this.addCodeStr(`${varI}=sys.__stack.pop();if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }`);\r\n        for (const nameObj of node.names) {\r\n            const name = nameObj.value;\r\n            // 二重定義？\r\n            if (this.varsSet.names.has(name)) {\r\n                throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\r\n            }\r\n            //\r\n            this.varsSet.names.add(name);\r\n            if (vtype === '定数') {\r\n                this.varsSet.readonly.add(name);\r\n            }\r\n            const vname = this.varname(name);\r\n            this.addCodeStr(`${vname}=${varI}.pop()`);\r\n        }\r\n        this.addCodeStr(`delete ${varI}//複数代入:掃除`);\r\n        return '';\r\n    }\r\n    convString(node) {\r\n        let value = '' + node.value;\r\n        const mode = node.mode;\r\n        value = value.replace(/\\\\/g, '\\\\\\\\');\r\n        value = value.replace(/\"/g, '\\\\\"');\r\n        value = value.replace(/\\r/g, '\\\\r');\r\n        value = value.replace(/\\n/g, '\\\\n');\r\n        if (mode === 'ex') {\r\n            throw new Error('[システムエラー] ジェネレーターでの文字列の展開はサポートしていません');\r\n        }\r\n        this.addCodeStr(`sys.__stack.push(\"${value}\")//string`);\r\n        return '\"' + value + '\"';\r\n    }\r\n    convTryExcept(node) {\r\n        const labelExcept = this.makeLabel('エラー監視:ならば');\r\n        const labelEnd = this.makeLabel('エラー監視:ここまで');\r\n        // エラーをひっかけるように設定\r\n        this.addCode(new NakoCode(NakoCodeTry, labelExcept.value));\r\n        this._convGen(node.block, false);\r\n        this.addCode(this.makeJump(labelEnd));\r\n        this.addCode(labelExcept);\r\n        this._convGen(node.errBlock, false);\r\n        this.addCode(labelEnd);\r\n    }\r\n}\r\n// ブラウザに登録する\r\nif (typeof (navigator) === 'object' && typeof (navigator.nako3) === 'object') {\r\n    // Webブラウザの場合\r\n    const nako3 = navigator.nako3;\r\n    if (nako3.addCodeGenerator) {\r\n        nako3.addCodeGenerator('非同期モード', NakoGenASync);\r\n    }\r\n}\r\n","/**\r\n * 助詞の一覧\r\n */\r\nexport const josiList = [\r\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\r\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\r\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\r\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\r\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\r\n];\r\n// 「もし」文で使う助詞\r\nexport const tararebaJosiList = [\r\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\r\n];\r\n// 意味のない助詞(削除する) #936 #939 #974\r\nexport const removeJosiList = [\r\n    'こと', 'である', 'です', 'します', 'でした'\r\n];\r\n/**\r\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\r\n */\r\nexport const tararebaMap = {};\r\ntararebaJosiList.forEach(josi => {\r\n    josiList.push(josi);\r\n    tararebaMap[josi] = true;\r\n});\r\n/**\r\n * 意味のない助詞(削除する)をマップに変換したもの\r\n */\r\nexport const removeJosiMap = {};\r\nremoveJosiList.forEach(josi => {\r\n    josiList.push(josi);\r\n    removeJosiMap[josi] = true;\r\n});\r\n// 文字数の長い順に並び替え\r\njosiList.sort((a, b) => b.length - a.length);\r\n// 正規表現で助詞をマッチできるようにする\r\nexport const josiRE = new RegExp('^[\\\\t ]*(' + josiList.join('|') + ')');\r\n","/** 予約語 */\r\nconst reserved = {\r\n    '回': '回',\r\n    '回繰返': '回',\r\n    '間': '間',\r\n    '間繰返': '間',\r\n    '繰返': '繰返',\r\n    '増繰返': '増繰返',\r\n    '減繰返': '減繰返',\r\n    '後判定': '後判定',\r\n    '反復': '反復',\r\n    '抜': '抜ける',\r\n    '続': '続ける',\r\n    '戻': '戻る',\r\n    '先': '先に',\r\n    '次': '次に',\r\n    '代入': '代入',\r\n    '実行速度優先': '実行速度優先',\r\n    'パフォーマンスモニタ適用': 'パフォーマンスモニタ適用',\r\n    '定': '定める',\r\n    '逐次実行': '逐次実行',\r\n    '条件分岐': '条件分岐',\r\n    '増': '増',\r\n    '減': '減',\r\n    '変数': '変数',\r\n    '定数': '定数',\r\n    'エラー監視': 'エラー監視',\r\n    'エラー': 'エラー',\r\n    'それ': 'word',\r\n    'そう': 'word',\r\n    '関数': 'def_func',\r\n    'インデント構文': 'インデント構文',\r\n    '非同期モード': '非同期モード',\r\n    'DNCLモード': 'DNCLモード',\r\n    'モード設定': 'モード設定',\r\n    '取込': '取込'\r\n};\r\nexport default reserved;\r\n","import { NakoRuntimeError } from './nako_errors.mjs';\r\nexport default {\r\n    'meta': {\r\n        type: 'const',\r\n        value: {\r\n            pluginName: 'plugin_system',\r\n            pluginVersion: '3.4.5',\r\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'],\r\n            nakoVersion: '^3.4.5' // 要求なでしこバージョン\r\n        }\r\n    },\r\n    '初期化': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            // 言語バージョンを設定\r\n            sys.isDebug = false;\r\n            sys.__v0['ナデシコバージョン'] = sys.version;\r\n            sys.__v0['ナデシコ言語バージョン'] = sys.coreVersion;\r\n            sys.__namespaceList = [];\r\n            // なでしこの関数や変数を探して返す\r\n            sys.__findVar = function (nameStr, def) {\r\n                if (typeof nameStr === 'function') {\r\n                    return nameStr;\r\n                }\r\n                if (sys.__locals[nameStr]) {\r\n                    return sys.__locals[nameStr];\r\n                }\r\n                // 名前空間が指定されている場合\r\n                if (nameStr.indexOf('__') >= 0) {\r\n                    for (let i = 2; i >= 0; i--) {\r\n                        const varScope = sys.__varslist[i];\r\n                        if (varScope[nameStr]) {\r\n                            return varScope[nameStr];\r\n                        }\r\n                    }\r\n                    return def;\r\n                }\r\n                // 名前空間を参照して関数・変数名を解決する\r\n                const modList = sys.__modList ? sys.__modList : [sys.__modName];\r\n                for (const modName of modList) {\r\n                    const gname = modName + '__' + nameStr;\r\n                    for (let i = 2; i >= 0; i--) {\r\n                        const scope = sys.__varslist[i];\r\n                        if (scope[gname]) {\r\n                            return scope[gname];\r\n                        }\r\n                    }\r\n                }\r\n                return def;\r\n            };\r\n            // 文字列から関数を探す\r\n            sys.__findFunc = function (nameStr, parentFunc) {\r\n                const f = sys.__findVar(nameStr);\r\n                if (typeof f === 'function') {\r\n                    return f;\r\n                }\r\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\r\n            };\r\n            // システム関数を実行\r\n            sys.__exec = function (func, params) {\r\n                // システム命令を優先\r\n                const f0 = sys.__v0[func];\r\n                if (f0) {\r\n                    return f0.apply(this, params);\r\n                }\r\n                // グローバル・ローカルを探す\r\n                const f = sys.__findVar(func);\r\n                if (!f) {\r\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\r\n                }\r\n                return f.apply(this, params);\r\n            };\r\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\r\n            sys.__timeout = [];\r\n            sys.__interval = [];\r\n            // 日付処理などに使う\r\n            const z2 = sys.__zero2 = (s) => {\r\n                s = '00' + s;\r\n                return s.substring(s.length - 2);\r\n            };\r\n            sys.__zero = (s, keta) => {\r\n                let zeroS = '';\r\n                for (let i = 0; i < keta; i++) {\r\n                    zeroS += '0';\r\n                }\r\n                s = zeroS + s;\r\n                return s.substring(s.length - keta);\r\n            };\r\n            sys.__formatDate = (t) => {\r\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\r\n            };\r\n            sys.__formatTime = (t) => {\r\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\r\n            };\r\n            sys.__formatDateTime = (t, fmt) => {\r\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\r\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\r\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\r\n                    return dateStr + ' ' + timeStr;\r\n                }\r\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\r\n                    return dateStr;\r\n                }\r\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\r\n                    return timeStr;\r\n                }\r\n                return dateStr + ' ' + timeStr;\r\n            };\r\n            sys.__str2date = (s) => {\r\n                // trim\r\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\r\n                // is unix time\r\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\r\n                    return new Date(parseFloat(s) * 1000);\r\n                }\r\n                // is time ?\r\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\r\n                    const t = new Date();\r\n                    const a = (s + ':0').split(':');\r\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\r\n                }\r\n                // replace splitter to '/'\r\n                s = s.replace(/[\\s:-]/g, '/');\r\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\r\n                const a = s.split('/');\r\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\r\n            };\r\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\r\n            sys.__printPool = '';\r\n            // undefinedチェック\r\n            sys.chk = (value, constId) => {\r\n                if (typeof value === 'undefined') {\r\n                    const cp = sys.constPools[constId];\r\n                    sys.logger.warn(cp.msg, { file: cp.file, line: cp.line });\r\n                }\r\n                return value;\r\n            };\r\n        }\r\n    },\r\n    '!クリア': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            if (sys.__exec) {\r\n                sys.__exec('全タイマー停止', [sys]);\r\n            }\r\n            if (sys.__genMode === '非同期モード') {\r\n                sys.__stopAsync(sys);\r\n            }\r\n            sys.__v0['表示ログ'] = '';\r\n        }\r\n    },\r\n    // @システム定数\r\n    'ナデシコバージョン': { type: 'const', value: '?' },\r\n    'ナデシコ言語バージョン': { type: 'const', value: '?' },\r\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' },\r\n    'ナデシコ種類': { type: 'const', value: '?' },\r\n    'はい': { type: 'const', value: 1 },\r\n    'いいえ': { type: 'const', value: 0 },\r\n    '真': { type: 'const', value: 1 },\r\n    '偽': { type: 'const', value: 0 },\r\n    '永遠': { type: 'const', value: 1 },\r\n    'オン': { type: 'const', value: 1 },\r\n    'オフ': { type: 'const', value: 0 },\r\n    '改行': { type: 'const', value: '\\n' },\r\n    'タブ': { type: 'const', value: '\\t' },\r\n    'カッコ': { type: 'const', value: '「' },\r\n    'カッコ閉': { type: 'const', value: '」' },\r\n    '波カッコ': { type: 'const', value: '{' },\r\n    '波カッコ閉': { type: 'const', value: '}' },\r\n    'OK': { type: 'const', value: true },\r\n    'NG': { type: 'const', value: false },\r\n    'キャンセル': { type: 'const', value: 0 },\r\n    'TRUE': { type: 'const', value: true },\r\n    'FALSE': { type: 'const', value: false },\r\n    'PI': { type: 'const', value: Math.PI },\r\n    '空': { type: 'const', value: '' },\r\n    'NULL': { type: 'const', value: null },\r\n    'undefined': { type: 'const', value: undefined },\r\n    '未定義': { type: 'const', value: undefined },\r\n    'エラーメッセージ': { type: 'const', value: '' },\r\n    '対象': { type: 'const', value: '' },\r\n    '対象キー': { type: 'const', value: '' },\r\n    '回数': { type: 'const', value: '' },\r\n    'CR': { type: 'const', value: '\\r' },\r\n    'LF': { type: 'const', value: '\\n' },\r\n    '非数': { type: 'const', value: NaN },\r\n    '無限大': { type: 'const', value: Infinity },\r\n    '空配列': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return [];\r\n        }\r\n    },\r\n    '空辞書': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return {};\r\n        }\r\n    },\r\n    '空ハッシュ': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return {};\r\n        }\r\n    },\r\n    '空オブジェクト': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            return sys.__exec('空ハッシュ', [sys]);\r\n        }\r\n    },\r\n    // @標準出力\r\n    '表示': {\r\n        type: 'func',\r\n        josi: [['を', 'と']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            // 継続表示の一時プールを出力\r\n            s = sys.__printPool + s;\r\n            sys.__printPool = '';\r\n            //\r\n            sys.__varslist[0]['表示ログ'] += (s + '\\n');\r\n            sys.logger.send('stdout', s + '');\r\n        },\r\n        return_none: true\r\n    },\r\n    '継続表示': {\r\n        type: 'func',\r\n        josi: [['を', 'と']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            sys.__printPool += s;\r\n        },\r\n        return_none: true\r\n    },\r\n    '連続表示': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        isVariableJosi: true,\r\n        pure: true,\r\n        fn: function (...a) {\r\n            const sys = a.pop();\r\n            const v = a.join('');\r\n            sys.__exec('表示', [v, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '連続無改行表示': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        isVariableJosi: true,\r\n        pure: true,\r\n        fn: function (...a) {\r\n            const sys = a.pop();\r\n            const v = a.join('');\r\n            sys.__exec('継続表示', [v, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '表示ログ': { type: 'const', value: '' },\r\n    '表示ログクリア': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            sys.__varslist[0]['表示ログ'] = '';\r\n        },\r\n        return_none: true\r\n    },\r\n    '言': {\r\n        type: 'func',\r\n        josi: [['を', 'と']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            sys.logger.send('stdout', s + '');\r\n        },\r\n        return_none: true\r\n    },\r\n    'コンソール表示': {\r\n        type: 'func',\r\n        josi: [['を', 'と']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            console.log(s);\r\n        },\r\n        return_none: true\r\n    },\r\n    // @四則演算\r\n    '足': {\r\n        type: 'func',\r\n        josi: [['に', 'と'], ['を']],\r\n        isVariableJosi: false,\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a + b;\r\n        }\r\n    },\r\n    '引': {\r\n        type: 'func',\r\n        josi: [['から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a - b;\r\n        }\r\n    },\r\n    '掛': {\r\n        type: 'func',\r\n        josi: [['に', 'と'], ['を']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            // 数値の掛け算\r\n            if (typeof a === 'number') {\r\n                return a * b;\r\n            }\r\n            // 文字列の掛け算(文字列の繰り返し)\r\n            if (typeof a === 'string') {\r\n                let s = '';\r\n                for (let i = 0; i < parseInt(b); i++) {\r\n                    s += a;\r\n                }\r\n                return s;\r\n            }\r\n            // 配列の繰り返し\r\n            if (a instanceof Array) {\r\n                const aa = [];\r\n                for (let i = 0; i < parseInt(b); i++) {\r\n                    aa.push(...a);\r\n                }\r\n                return aa;\r\n            }\r\n            return a * b;\r\n        }\r\n    },\r\n    '倍': {\r\n        type: 'func',\r\n        josi: [['の', 'を'], ['']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a * b;\r\n        }\r\n    },\r\n    '割': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a / b;\r\n        }\r\n    },\r\n    '割余': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a % b;\r\n        }\r\n    },\r\n    '偶数': {\r\n        type: 'func',\r\n        josi: [['が']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return (parseInt(a) % 2 === 0);\r\n        }\r\n    },\r\n    '奇数': {\r\n        type: 'func',\r\n        josi: [['が']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return (parseInt(a) % 2 === 1);\r\n        }\r\n    },\r\n    '二乗': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return a * a;\r\n        }\r\n    },\r\n    'べき乗': {\r\n        type: 'func',\r\n        josi: [['の'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return Math.pow(a, b);\r\n        }\r\n    },\r\n    '以上': {\r\n        type: 'func',\r\n        josi: [['が'], ['']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a >= b;\r\n        }\r\n    },\r\n    '以下': {\r\n        type: 'func',\r\n        josi: [['が'], ['']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a <= b;\r\n        }\r\n    },\r\n    '未満': {\r\n        type: 'func',\r\n        josi: [['が'], ['']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a < b;\r\n        }\r\n    },\r\n    '超': {\r\n        type: 'func',\r\n        josi: [['が'], ['']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a > b;\r\n        }\r\n    },\r\n    '等': {\r\n        type: 'func',\r\n        josi: [['が'], ['と']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a === b;\r\n        }\r\n    },\r\n    '等無': {\r\n        type: 'func',\r\n        josi: [['が'], ['と']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return a !== b;\r\n        }\r\n    },\r\n    '一致': {\r\n        type: 'func',\r\n        josi: [['が'], ['と']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            // オブジェクトの場合、JSONに変換して比較\r\n            if (typeof (a) === 'object') {\r\n                const jsonA = JSON.stringify(a);\r\n                const jsonB = JSON.stringify(b);\r\n                return jsonA === jsonB;\r\n            }\r\n            return a === b;\r\n        }\r\n    },\r\n    '不一致': {\r\n        type: 'func',\r\n        josi: [['が'], ['と']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            // オブジェクトの場合、JSONに変換して比較\r\n            if (typeof (a) === 'object') {\r\n                const jsonA = JSON.stringify(a);\r\n                const jsonB = JSON.stringify(b);\r\n                return jsonA !== jsonB;\r\n            }\r\n            return a !== b;\r\n        }\r\n    },\r\n    '範囲内': {\r\n        type: 'func',\r\n        josi: [['が'], ['から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (v, a, b) {\r\n            return (a <= v) && (v <= b);\r\n        }\r\n    },\r\n    '連続加算': {\r\n        type: 'func',\r\n        josi: [['を'], ['に', 'と']],\r\n        isVariableJosi: true,\r\n        pure: true,\r\n        fn: function (b, ...a) {\r\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\r\n            a.push(b);\r\n            return a.reduce((p, c) => p + c);\r\n        }\r\n    },\r\n    // @敬語\r\n    'ください': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__reisetu) {\r\n                sys.__reisetu = 0;\r\n            }\r\n            sys.__reisetu++;\r\n        },\r\n        return_none: true\r\n    },\r\n    'お願': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__reisetu) {\r\n                sys.__reisetu = 0;\r\n            }\r\n            sys.__reisetu++;\r\n        },\r\n        return_none: true\r\n    },\r\n    'です': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__reisetu) {\r\n                sys.__reisetu = 0;\r\n            }\r\n            sys.__reisetu++;\r\n        },\r\n        return_none: true\r\n    },\r\n    '拝啓': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            sys.__reisetu = 0;\r\n        },\r\n        return_none: true\r\n    },\r\n    '敬具': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            sys.__reisetu += 100; // bonus point\r\n        },\r\n        return_none: true\r\n    },\r\n    '礼節レベル取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__reisetu) {\r\n                sys.__reisetu = 0;\r\n            }\r\n            return sys.__reisetu;\r\n        }\r\n    },\r\n    // @特殊命令\r\n    'JS実行': {\r\n        type: 'func',\r\n        josi: [['を', 'で']],\r\n        pure: true,\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        fn: function (src, sys) {\r\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\r\n            // https://github.com/kujirahand/nadesiko3/issues/1237\r\n            return eval(src); // eslint-disable-line\r\n        }\r\n    },\r\n    'JSオブジェクト取得': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (name, sys) {\r\n            return sys.__findVar(name, null);\r\n        }\r\n    },\r\n    'JS関数実行': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        fn: function (name, args) {\r\n            // nameが文字列ならevalして関数を得る\r\n            // eslint-disable-next-line no-eval\r\n            if (typeof name === 'string') {\r\n                name = eval(name);\r\n            }\r\n            if (typeof name !== 'function') {\r\n                throw new Error('JS関数取得で実行できません。');\r\n            }\r\n            // argsがArrayでなければArrayに変換する\r\n            if (!(args instanceof Array)) {\r\n                args = [args];\r\n            }\r\n            // 実行\r\n            // eslint-disable-next-line prefer-spread\r\n            return name.apply(null, args);\r\n        }\r\n    },\r\n    'ASYNC': {\r\n        type: 'func',\r\n        josi: [],\r\n        asyncFn: true,\r\n        fn: async function () {\r\n            // empty\r\n        },\r\n        return_none: true\r\n    },\r\n    'AWAIT実行': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        asyncFn: true,\r\n        fn: async function (f, args, sys) {\r\n            // nameが文字列ならevalして関数を得る\r\n            if (typeof f === 'string') {\r\n                f = sys.__findFunc(f, 'AWAIT実行');\r\n            }\r\n            if (!(f instanceof Function)) {\r\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\r\n            }\r\n            // 実行\r\n            return await f(...args);\r\n        }\r\n    },\r\n    'JSメソッド実行': {\r\n        type: 'func',\r\n        josi: [['の'], ['を'], ['で']],\r\n        fn: function (obj, m, args) {\r\n            // objが文字列ならevalして関数を得る\r\n            // eslint-disable-next-line no-eval\r\n            if (typeof obj === 'string') {\r\n                obj = eval(obj);\r\n            }\r\n            if (typeof obj !== 'object') {\r\n                throw new Error('JSオブジェクトを取得できませんでした。');\r\n            }\r\n            // method を求める\r\n            if (typeof m !== 'function') {\r\n                m = obj[m];\r\n            }\r\n            // argsがArrayでなければArrayに変換する\r\n            if (!(args instanceof Array)) {\r\n                args = [args];\r\n            }\r\n            // 実行\r\n            return m.apply(obj, args);\r\n        }\r\n    },\r\n    'ナデシコ': {\r\n        type: 'func',\r\n        josi: [['を', 'で']],\r\n        pure: false,\r\n        fn: function (code, sys) {\r\n            if (sys.__genMode === '非同期モード') {\r\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\r\n            }\r\n            sys.__varslist[0]['表示ログ'] = '';\r\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\r\n            const out = sys.__varslist[0]['表示ログ'] + '';\r\n            if (out) {\r\n                sys.logger.trace(out);\r\n            }\r\n            return out;\r\n        }\r\n    },\r\n    'ナデシコ続': {\r\n        type: 'func',\r\n        josi: [['を', 'で']],\r\n        fn: function (code, sys) {\r\n            if (sys.__genMode === '非同期モード') {\r\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\r\n            }\r\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\r\n            const out = sys.__varslist[0]['表示ログ'] + '';\r\n            if (out) {\r\n                sys.logger.trace(out);\r\n            }\r\n            return out;\r\n        }\r\n    },\r\n    '実行': {\r\n        type: 'func',\r\n        josi: [['を', 'に', 'で']],\r\n        pure: false,\r\n        fn: function (f, sys) {\r\n            // #938 の規則に従って処理\r\n            // 引数が関数なら実行\r\n            if (typeof f === 'function') {\r\n                return f(sys);\r\n            }\r\n            // 文字列なら関数に変換できるか判定して実行\r\n            if (typeof f === 'string') {\r\n                const tf = sys.__findFunc(f, '実行');\r\n                if (typeof tf === 'function') {\r\n                    return tf(sys);\r\n                }\r\n            }\r\n            // それ以外ならそのまま値を返す\r\n            return f;\r\n        }\r\n    },\r\n    '実行時間計測': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (f, sys) {\r\n            if (typeof f === 'string') {\r\n                f = sys.__findFunc(f, '実行時間計測');\r\n            }\r\n            //\r\n            if (performance && performance.now) {\r\n                const t1 = performance.now();\r\n                f(sys);\r\n                const t2 = performance.now();\r\n                return (t2 - t1);\r\n            }\r\n            else {\r\n                const t1 = Date.now();\r\n                f(sys);\r\n                const t2 = Date.now();\r\n                return (t2 - t1);\r\n            }\r\n        }\r\n    },\r\n    '終': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\r\n            sys.__v0.forceClose = true;\r\n            if (!sys.__v0.useDebug) {\r\n                throw new Error('__終わる__');\r\n            }\r\n        }\r\n    },\r\n    // @型変換\r\n    '変数型確認': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (typeof v);\r\n        }\r\n    },\r\n    'TYPEOF': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (typeof v);\r\n        }\r\n    },\r\n    '文字列変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return String(v);\r\n        }\r\n    },\r\n    'TOSTR': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return String(v);\r\n        }\r\n    },\r\n    '整数変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseInt(v);\r\n        }\r\n    },\r\n    'TOINT': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseInt(v);\r\n        }\r\n    },\r\n    '実数変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseFloat(v);\r\n        }\r\n    },\r\n    'TOFLOAT': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseFloat(v);\r\n        }\r\n    },\r\n    'INT': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseInt(v);\r\n        }\r\n    },\r\n    'FLOAT': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseFloat(v);\r\n        }\r\n    },\r\n    'NAN判定': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return isNaN(v);\r\n        }\r\n    },\r\n    '非数判定': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\n            return Number.isNaN(v);\r\n        }\r\n    },\r\n    'HEX': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return parseInt(a).toString(16);\r\n        }\r\n    },\r\n    '進数変換': {\r\n        type: 'func',\r\n        josi: [['を', 'の'], ['']],\r\n        pure: true,\r\n        fn: function (v, n) {\r\n            return parseInt(v).toString(n);\r\n        }\r\n    },\r\n    '二進': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'から']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return parseInt(v).toString(2);\r\n        }\r\n    },\r\n    '二進表示': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'から']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            const s = parseInt(v).toString(2);\r\n            sys.__exec('表示', [s, sys]);\r\n        }\r\n    },\r\n    'RGB': {\r\n        type: 'func',\r\n        josi: [['と'], ['の'], ['で']],\r\n        pure: true,\r\n        fn: function (r, g, b) {\r\n            const z2 = (v) => {\r\n                const v2 = '00' + (parseInt('' + v).toString(16));\r\n                return v2.substring(v2.length - 2, v2.length);\r\n            };\r\n            return '#' + z2(r) + z2(g) + z2(b);\r\n        }\r\n    },\r\n    // @論理演算\r\n    '論理OR': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a || b);\r\n        }\r\n    },\r\n    '論理AND': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a && b);\r\n        }\r\n    },\r\n    '論理NOT': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (!v) ? 1 : 0;\r\n        }\r\n    },\r\n    // @ビット演算\r\n    'OR': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a | b);\r\n        }\r\n    },\r\n    'AND': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a & b);\r\n        }\r\n    },\r\n    'XOR': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a ^ b);\r\n        }\r\n    },\r\n    'NOT': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (~v);\r\n        }\r\n    },\r\n    'SHIFT_L': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a << b);\r\n        }\r\n    },\r\n    'SHIFT_R': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a >> b);\r\n        }\r\n    },\r\n    'SHIFT_UR': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (a >>> b);\r\n        }\r\n    },\r\n    // @文字列処理\r\n    '文字数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            if (!Array.from) {\r\n                return String(v).length;\r\n            }\r\n            return Array.from(v).length;\r\n        }\r\n    },\r\n    '何文字目': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['が']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            return String(s).indexOf(a) + 1;\r\n        }\r\n    },\r\n    'CHR': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            if (!String.fromCodePoint) {\r\n                return String.fromCharCode(v);\r\n            }\r\n            return String.fromCodePoint(v);\r\n        }\r\n    },\r\n    'ASC': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            if (!String.prototype.codePointAt) {\r\n                return String(v).charCodeAt(0);\r\n            }\r\n            return String(v).codePointAt(0);\r\n        }\r\n    },\r\n    '文字挿入': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (s, i, a) {\r\n            if (i <= 0) {\r\n                i = 1;\r\n            }\r\n            const ss = String(s);\r\n            const mae = ss.substring(0, i - 1);\r\n            const usi = ss.substring(i - 1);\r\n            return mae + a + usi;\r\n        }\r\n    },\r\n    '文字検索': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['から'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a, b) {\r\n            let str = String(s);\r\n            str = str.substring(a);\r\n            const res = str.indexOf(b);\r\n            if (res === -1) {\r\n                return 0;\r\n            }\r\n            return res + 1 + a;\r\n        }\r\n    },\r\n    '追加': {\r\n        type: 'func',\r\n        josi: [['で', 'に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            if (s instanceof Array) {\r\n                s.push(a);\r\n                return s;\r\n            }\r\n            return String(s) + String(a);\r\n        }\r\n    },\r\n    '一行追加': {\r\n        type: 'func',\r\n        josi: [['で', 'に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            if (s instanceof Array) {\r\n                s.push(a);\r\n                return s;\r\n            }\r\n            return String(s) + String(a) + '\\n';\r\n        }\r\n    },\r\n    '文字列分解': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'で']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            if (!Array.from) {\r\n                return String(v).split('');\r\n            }\r\n            return Array.from(v);\r\n        }\r\n    },\r\n    'リフレイン': {\r\n        type: 'func',\r\n        josi: [['を', 'の'], ['で']],\r\n        pure: true,\r\n        fn: function (v, cnt) {\r\n            let s = '';\r\n            for (let i = 0; i < cnt; i++) {\r\n                s += String(v);\r\n            }\r\n            return s;\r\n        }\r\n    },\r\n    '出現回数': {\r\n        type: 'func',\r\n        josi: [['で'], ['の']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            s = '' + s;\r\n            a = '' + a;\r\n            return s.split(a).length - 1;\r\n        }\r\n    },\r\n    'MID': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['から'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a, cnt) {\r\n            cnt = cnt || 1;\r\n            return (String(s).substring(a - 1, a + cnt - 1));\r\n        }\r\n    },\r\n    '文字抜出': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['から'], ['を', '']],\r\n        pure: true,\r\n        fn: function (s, a, cnt) {\r\n            cnt = cnt || 1;\r\n            return (String(s).substring(a - 1, a + cnt - 1));\r\n        }\r\n    },\r\n    'LEFT': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['だけ']],\r\n        pure: true,\r\n        fn: function (s, cnt) {\r\n            return (String(s).substring(0, cnt));\r\n        }\r\n    },\r\n    '文字左部分': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['だけ', '']],\r\n        pure: true,\r\n        fn: function (s, cnt) {\r\n            return (String(s).substring(0, cnt));\r\n        }\r\n    },\r\n    'RIGHT': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['だけ']],\r\n        pure: true,\r\n        fn: function (s, cnt) {\r\n            s = '' + s;\r\n            return (s.substring(s.length - cnt, s.length));\r\n        }\r\n    },\r\n    '文字右部分': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['だけ', '']],\r\n        pure: true,\r\n        fn: function (s, cnt) {\r\n            s = '' + s;\r\n            return (s.substring(s.length - cnt, s.length));\r\n        }\r\n    },\r\n    '区切': {\r\n        type: 'func',\r\n        josi: [['の', 'を'], ['で']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            return ('' + s).split('' + a);\r\n        }\r\n    },\r\n    '文字列分割': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            s = '' + s;\r\n            a = '' + a;\r\n            const i = s.indexOf(a);\r\n            if (i < 0) {\r\n                return [s];\r\n            }\r\n            return [s.substring(0, i), s.substring(i + a.length)];\r\n        }\r\n    },\r\n    '切取': {\r\n        type: 'func',\r\n        josi: [['から', 'の'], ['まで', 'を']],\r\n        pure: true,\r\n        fn: function (s, a, sys) {\r\n            s = String(s);\r\n            const i = s.indexOf(a);\r\n            if (i < 0) {\r\n                sys.__v0['対象'] = '';\r\n                return s;\r\n            }\r\n            sys.__v0['対象'] = s.substring(i + a.length);\r\n            return s.substring(0, i);\r\n        }\r\n    },\r\n    '文字削除': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\r\n        pure: true,\r\n        fn: function (s, a, b) {\r\n            s = '' + s;\r\n            const mae = s.substring(0, a - 1);\r\n            const usi = s.substring((a - 1 + b));\r\n            return mae + usi;\r\n        }\r\n    },\r\n    // @置換・トリム\r\n    '置換': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\r\n        pure: true,\r\n        fn: function (s, a, b) {\r\n            return String(s).split(a).join(b);\r\n        }\r\n    },\r\n    '単置換': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\r\n        pure: true,\r\n        fn: function (s, a, b) {\r\n            // replaceは最初の一度だけ置換する\r\n            return String(s).replace(a, b);\r\n        }\r\n    },\r\n    'トリム': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n            return s;\r\n        }\r\n    },\r\n    '空白除去': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n            return s;\r\n        }\r\n    },\r\n    // @文字変換\r\n    '大文字変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).toUpperCase();\r\n        }\r\n    },\r\n    '小文字変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).toLowerCase();\r\n        }\r\n    },\r\n    '平仮名変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const kanaToHira = (str) => {\r\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\r\n                    const chr = m.charCodeAt(0) - 0x60;\r\n                    return String.fromCharCode(chr);\r\n                });\r\n            };\r\n            return kanaToHira('' + s);\r\n        }\r\n    },\r\n    'カタカナ変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const hiraToKana = (str) => {\r\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\r\n                    const chr = m.charCodeAt(0) + 0x60;\r\n                    return String.fromCharCode(chr);\r\n                });\r\n            };\r\n            return hiraToKana('' + s);\r\n        }\r\n    },\r\n    '英数全角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\r\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\r\n            });\r\n        }\r\n    },\r\n    '英数半角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\r\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\r\n            });\r\n        }\r\n    },\r\n    '英数記号全角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\r\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\r\n            });\r\n        }\r\n    },\r\n    '英数記号半角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\r\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\r\n            });\r\n        }\r\n    },\r\n    'カタカナ全角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            // 半角カタカナ\r\n            const zen1 = sys.__v0['全角カナ一覧'];\r\n            const han1 = sys.__v0['半角カナ一覧'];\r\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\r\n            const han2 = sys.__v0['半角カナ濁音一覧'];\r\n            let str = '';\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                // 濁点の変換\r\n                const c2 = s.substring(i, i + 2);\r\n                const n2 = han2.indexOf(c2);\r\n                if (n2 >= 0) {\r\n                    str += zen2.charAt(n2 / 2);\r\n                    i += 2;\r\n                    continue;\r\n                }\r\n                // 濁点以外の変換\r\n                const c = s.charAt(i);\r\n                const n = han1.indexOf(c);\r\n                if (n >= 0) {\r\n                    str += zen1.charAt(n);\r\n                    i++;\r\n                    continue;\r\n                }\r\n                str += c;\r\n                i++;\r\n            }\r\n            return str;\r\n        }\r\n    },\r\n    'カタカナ半角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            // 半角カタカナ\r\n            const zen1 = sys.__v0['全角カナ一覧'];\r\n            const han1 = sys.__v0['半角カナ一覧'];\r\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\r\n            const han2 = sys.__v0['半角カナ濁音一覧'];\r\n            return s.split('').map((c) => {\r\n                const i = zen1.indexOf(c);\r\n                if (i >= 0) {\r\n                    return han1.charAt(i);\r\n                }\r\n                const j = zen2.indexOf(c);\r\n                if (j >= 0) {\r\n                    return han2.substring(j * 2, j * 2 + 2);\r\n                }\r\n                return c;\r\n            }).join('');\r\n        }\r\n    },\r\n    '全角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: false,\r\n        fn: function (s, sys) {\r\n            let result = s;\r\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\r\n            result = sys.__exec('英数記号全角変換', [result, sys]);\r\n            return result;\r\n        }\r\n    },\r\n    '半角変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: false,\r\n        fn: function (s, sys) {\r\n            let result = s;\r\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\r\n            result = sys.__exec('英数記号半角変換', [result, sys]);\r\n            return result;\r\n        }\r\n    },\r\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' },\r\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' },\r\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' },\r\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' },\r\n    // @JSON\r\n    'JSONエンコード': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return JSON.stringify(v);\r\n        }\r\n    },\r\n    'JSONエンコード整形': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return JSON.stringify(v, null, 2);\r\n        }\r\n    },\r\n    'JSONデコード': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'から']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return JSON.parse(s);\r\n        }\r\n    },\r\n    // @正規表現\r\n    '正規表現マッチ': {\r\n        type: 'func',\r\n        josi: [['を', 'が'], ['で', 'に']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            let re;\r\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\r\n            // パターンがない場合\r\n            if (f === null) {\r\n                re = new RegExp(b, 'g');\r\n            }\r\n            else {\r\n                re = new RegExp(f[1], f[2]);\r\n            }\r\n            const sa = sys.__varslist[0]['抽出文字列'] = [];\r\n            const m = String(a).match(re);\r\n            let result = m;\r\n            if (re.global) {\r\n                // no groups\r\n            }\r\n            else if (m) {\r\n                // has group?\r\n                if (m.length > 0) {\r\n                    result = m[0];\r\n                    for (let i = 1; i < m.length; i++) {\r\n                        sa[i - 1] = m[i];\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    '抽出文字列': { type: 'const', value: [] },\r\n    '正規表現置換': {\r\n        type: 'func',\r\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (s, a, b) {\r\n            let re;\r\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\r\n            if (f === null) {\r\n                re = new RegExp(a, 'g');\r\n            }\r\n            else {\r\n                re = new RegExp(f[1], f[2]);\r\n            }\r\n            return String(s).replace(re, b);\r\n        }\r\n    },\r\n    '正規表現区切': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (s, a) {\r\n            let re;\r\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\r\n            if (f === null) {\r\n                re = new RegExp(a, 'g');\r\n            }\r\n            else {\r\n                re = new RegExp(f[1], f[2]);\r\n            }\r\n            return String(s).split(re);\r\n        }\r\n    },\r\n    // @指定形式\r\n    '通貨形式': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\r\n        }\r\n    },\r\n    'ゼロ埋': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (v, a) {\r\n            v = String(v);\r\n            let z = '0';\r\n            for (let i = 0; i < a; i++) {\r\n                z += '0';\r\n            }\r\n            a = parseInt(a);\r\n            if (a < v.length) {\r\n                a = v.length;\r\n            }\r\n            const s = z + String(v);\r\n            return s.substring(s.length - a, s.length);\r\n        }\r\n    },\r\n    '空白埋': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (v, a) {\r\n            v = String(v);\r\n            let z = ' ';\r\n            for (let i = 0; i < a; i++) {\r\n                z += ' ';\r\n            }\r\n            a = parseInt(a);\r\n            if (a < v.length) {\r\n                a = v.length;\r\n            }\r\n            const s = z + String(v);\r\n            return s.substring(s.length - a, s.length);\r\n        }\r\n    },\r\n    // @文字種類\r\n    'かなか判定': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'が']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const c = String(s).charCodeAt(0);\r\n            return (c >= 0x3041 && c <= 0x309F);\r\n        }\r\n    },\r\n    'カタカナ判定': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'が']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const c = String(s).charCodeAt(0);\r\n            return (c >= 0x30A1 && c <= 0x30FA);\r\n        }\r\n    },\r\n    '数字判定': {\r\n        type: 'func',\r\n        josi: [['を', 'が']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const c = String(s).charAt(0);\r\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\r\n        }\r\n    },\r\n    '数列判定': {\r\n        type: 'func',\r\n        josi: [['を', 'が']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\r\n            return String(s).match(checkerRE) !== null;\r\n        }\r\n    },\r\n    // @配列操作\r\n    '配列結合': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, s) {\r\n            // 配列ならOK\r\n            if (a instanceof Array) {\r\n                return a.join('' + s);\r\n            }\r\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\r\n            return a2.join('' + s);\r\n        }\r\n    },\r\n    '配列検索': {\r\n        type: 'func',\r\n        josi: [['の', 'から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, s) {\r\n            if (a instanceof Array) {\r\n                return a.indexOf(s);\r\n            } // 配列ならOK\r\n            return -1;\r\n        }\r\n    },\r\n    '配列要素数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) {\r\n                return a.length;\r\n            } // 配列ならOK\r\n            if (a instanceof Object) {\r\n                return Object.keys(a).length;\r\n            }\r\n            return 1;\r\n        }\r\n    },\r\n    '要素数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (a, sys) {\r\n            return sys.__exec('配列要素数', [a]);\r\n        }\r\n    },\r\n    '配列挿入': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i, s) {\r\n            if (a instanceof Array) {\r\n                return a.splice(i, 0, s);\r\n            } // 配列ならOK\r\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\r\n        }\r\n    },\r\n    '配列一括挿入': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i, b) {\r\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\r\n                for (let j = 0; j < b.length; j++) {\r\n                    a.splice(i + j, 0, b[j]);\r\n                }\r\n                return a;\r\n            }\r\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\r\n        }\r\n    },\r\n    '配列ソート': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) {\r\n                return a.sort();\r\n            } // 配列ならOK\r\n            throw new Error('『配列ソート』で配列以外が指定されました。');\r\n        }\r\n    },\r\n    '配列数値ソート': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            // 配列ならOK\r\n            if (a instanceof Array) {\r\n                return a.sort((a, b) => {\r\n                    return parseFloat(a) - parseFloat(b);\r\n                });\r\n            }\r\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\r\n        }\r\n    },\r\n    '配列カスタムソート': {\r\n        type: 'func',\r\n        josi: [['で'], ['の', 'を']],\r\n        pure: false,\r\n        fn: function (f, a, sys) {\r\n            let ufunc = f;\r\n            if (typeof f === 'string') {\r\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\r\n            }\r\n            if (a instanceof Array) {\r\n                return a.sort(ufunc);\r\n            }\r\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\r\n        }\r\n    },\r\n    '配列逆順': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) {\r\n                return a.reverse();\r\n            } // 配列ならOK\r\n            throw new Error('『配列ソート』で配列以外が指定されました。');\r\n        }\r\n    },\r\n    '配列シャッフル': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) { // 配列ならOK\r\n                for (let i = a.length - 1; i > 0; i--) {\r\n                    const r = Math.floor(Math.random() * (i + 1));\r\n                    const tmp = a[i];\r\n                    a[i] = a[r];\r\n                    a[r] = tmp;\r\n                }\r\n                return a;\r\n            }\r\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\r\n        }\r\n    },\r\n    '配列削除': {\r\n        type: 'func',\r\n        josi: [['の', 'から'], ['を']],\r\n        pure: false,\r\n        fn: function (a, i, sys) {\r\n            return sys.__exec('配列切取', [a, i, sys]);\r\n        }\r\n    },\r\n    '配列切取': {\r\n        type: 'func',\r\n        josi: [['の', 'から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i) {\r\n            // 配列変数のとき\r\n            if (a instanceof Array) {\r\n                const b = a.splice(i, 1);\r\n                if (b instanceof Array) {\r\n                    return b[0];\r\n                } // 切り取った戻り値は必ずArrayになるので。\r\n                return null;\r\n            }\r\n            // 辞書型変数のとき\r\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\r\n                if (a[i]) {\r\n                    const old = a[i];\r\n                    delete a[i];\r\n                    return old;\r\n                }\r\n                return undefined;\r\n            }\r\n            throw new Error('『配列切取』で配列以外を指定。');\r\n        }\r\n    },\r\n    '配列取出': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i, cnt) {\r\n            if (a instanceof Array) {\r\n                return a.splice(i, cnt);\r\n            }\r\n            throw new Error('『配列取出』で配列以外を指定。');\r\n        }\r\n    },\r\n    '配列ポップ': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) {\r\n                return a.pop();\r\n            }\r\n            throw new Error('『配列ポップ』で配列以外の処理。');\r\n        }\r\n    },\r\n    '配列プッシュ': {\r\n        type: 'func',\r\n        josi: [['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            return sys.__exec('配列追加', [a, b, sys]);\r\n        }\r\n    },\r\n    '配列追加': {\r\n        type: 'func',\r\n        josi: [['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            if (a instanceof Array) { // 配列ならOK\r\n                a.push(b);\r\n                return a;\r\n            }\r\n            throw new Error('『配列追加』で配列以外の処理。');\r\n        }\r\n    },\r\n    '配列複製': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return JSON.parse(JSON.stringify(a));\r\n        }\r\n    },\r\n    '配列足': {\r\n        type: 'func',\r\n        josi: [['に', 'へ', 'と'], ['を']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            if (a instanceof Array) {\r\n                return a.concat(b);\r\n            }\r\n            return JSON.parse(JSON.stringify(a));\r\n        }\r\n    },\r\n    '配列最大値': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return a.reduce((x, y) => Math.max(x, y));\r\n        }\r\n    },\r\n    '配列最小値': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return a.reduce((x, y) => Math.min(x, y));\r\n        }\r\n    },\r\n    '配列合計': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (a instanceof Array) {\r\n                let v = 0;\r\n                a.forEach((n) => {\r\n                    const nn = parseFloat(n);\r\n                    if (isNaN(nn)) {\r\n                        return;\r\n                    }\r\n                    v += nn;\r\n                });\r\n                return v;\r\n            }\r\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\r\n        }\r\n    },\r\n    '配列入替': {\r\n        type: 'func',\r\n        josi: [['の'], ['と'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i, j) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\r\n            }\r\n            const tmp = a[i];\r\n            a[i] = a[j];\r\n            a[j] = tmp;\r\n            return a;\r\n        }\r\n    },\r\n    '配列連番作成': {\r\n        type: 'func',\r\n        josi: [['から'], ['までの', 'まで', 'の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            const result = [];\r\n            for (let i = a; i <= b; i++) {\r\n                result.push(i);\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    '配列要素作成': {\r\n        type: 'func',\r\n        josi: [['を'], ['だけ']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            const result = [];\r\n            for (let i = 0; i < b; i++) {\r\n                result.push(a);\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    '配列関数適用': {\r\n        type: 'func',\r\n        josi: [['を'], ['へ', 'に']],\r\n        pure: true,\r\n        fn: function (f, a, sys) {\r\n            let ufunc = f;\r\n            if (typeof f === 'string') {\r\n                ufunc = sys.__findFunc(f, '配列関数適用');\r\n            }\r\n            const result = [];\r\n            for (const e of a) {\r\n                result.push(ufunc(e));\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    '配列マップ': {\r\n        type: 'func',\r\n        josi: [['を'], ['へ', 'に']],\r\n        pure: true,\r\n        fn: function (f, a, sys) {\r\n            return sys.__exec('配列関数適用', [f, a, sys]);\r\n        }\r\n    },\r\n    '配列フィルタ': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['を', 'について']],\r\n        pure: true,\r\n        fn: function (f, a, sys) {\r\n            let ufunc = f;\r\n            if (typeof f === 'string') {\r\n                ufunc = sys.__findFunc(f, '配列フィルタ');\r\n            }\r\n            const result = [];\r\n            for (const e of a) {\r\n                if (ufunc(e)) {\r\n                    result.push(e);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    },\r\n    // @二次元配列処理\r\n    '表ソート': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (a, no) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表ソート』には配列を指定する必要があります。');\r\n            }\r\n            a.sort((n, m) => {\r\n                const ns = n[no];\r\n                const ms = m[no];\r\n                if (ns === ms) {\r\n                    return 0;\r\n                }\r\n                else if (ns < ms) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            });\r\n            return a;\r\n        }\r\n    },\r\n    '表数値ソート': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (a, no) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\r\n            }\r\n            a.sort((n, m) => {\r\n                const ns = n[no];\r\n                const ms = m[no];\r\n                return ns - ms;\r\n            });\r\n            return a;\r\n        }\r\n    },\r\n    '表ピックアップ': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['を', 'で']],\r\n        pure: true,\r\n        fn: function (a, no, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\r\n            }\r\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\r\n        }\r\n    },\r\n    '表完全一致ピックアップ': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['を', 'で']],\r\n        pure: true,\r\n        fn: function (a, no, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\r\n            }\r\n            return a.filter((row) => row[no] === s);\r\n        }\r\n    },\r\n    '表検索': {\r\n        type: 'func',\r\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, col, row, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表検索』には配列を指定する必要があります。');\r\n            }\r\n            for (let i = row; i < a.length; i++) {\r\n                if (a[i][col] === s) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    },\r\n    '表列数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表列数』には配列を指定する必要があります。');\r\n            }\r\n            let cols = 1;\r\n            for (let i = 0; i < a.length; i++) {\r\n                if (a[i].length > cols) {\r\n                    cols = a[i].length;\r\n                }\r\n            }\r\n            return cols;\r\n        }\r\n    },\r\n    '表行数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表行数』には配列を指定する必要があります。');\r\n            }\r\n            return a.length;\r\n        }\r\n    },\r\n    '表行列交換': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: false,\r\n        fn: function (a, sys) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\r\n            }\r\n            const cols = sys.__exec('表列数', [a]);\r\n            const rows = a.length;\r\n            const res = [];\r\n            for (let r = 0; r < cols; r++) {\r\n                const row = [];\r\n                res.push(row);\r\n                for (let c = 0; c < rows; c++) {\r\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    '表右回転': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: false,\r\n        fn: function (a, sys) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表右回転』には配列を指定する必要があります。');\r\n            }\r\n            const cols = sys.__exec('表列数', [a]);\r\n            const rows = a.length;\r\n            const res = [];\r\n            for (let r = 0; r < cols; r++) {\r\n                const row = [];\r\n                res.push(row);\r\n                for (let c = 0; c < rows; c++) {\r\n                    row[c] = a[rows - c - 1][r];\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    '表重複削除': {\r\n        type: 'func',\r\n        josi: [['の'], ['を', 'で']],\r\n        pure: true,\r\n        fn: function (a, i) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\r\n            }\r\n            const res = [];\r\n            const keys = {};\r\n            for (let n = 0; n < a.length; n++) {\r\n                const k = a[n][i];\r\n                if (undefined === keys[k]) {\r\n                    keys[k] = true;\r\n                    res.push(a[n]);\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    '表列取得': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表列取得』には配列を指定する必要があります。');\r\n            }\r\n            const res = a.map(row => row[i]);\r\n            return res;\r\n        }\r\n    },\r\n    '表列挿入': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\r\n            }\r\n            const res = [];\r\n            a.forEach((row, idx) => {\r\n                let nr = [];\r\n                if (i > 0) {\r\n                    nr = nr.concat(row.slice(0, i));\r\n                }\r\n                nr.push(s[idx]);\r\n                nr = nr.concat(row.slice(i));\r\n                res.push(nr);\r\n            });\r\n            return res;\r\n        }\r\n    },\r\n    '表列削除': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (a, i) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表列削除』には配列を指定する必要があります。');\r\n            }\r\n            const res = [];\r\n            a.forEach((row) => {\r\n                const nr = row.slice(0);\r\n                nr.splice(i, 1);\r\n                res.push(nr);\r\n            });\r\n            return res;\r\n        }\r\n    },\r\n    '表列合計': {\r\n        type: 'func',\r\n        josi: [['の'], ['を', 'で']],\r\n        pure: true,\r\n        fn: function (a, i) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表列合計』には配列を指定する必要があります。');\r\n            }\r\n            let sum = 0;\r\n            a.forEach((row) => { sum += row[i]; });\r\n            return sum;\r\n        }\r\n    },\r\n    '表曖昧検索': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['で'], ['を']],\r\n        pure: true,\r\n        fn: function (a, row, col, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\r\n            }\r\n            const re = new RegExp(s);\r\n            for (let i = row; i < a.length; i++) {\r\n                const line = a[i];\r\n                if (re.test(line[col])) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    },\r\n    '表正規表現ピックアップ': {\r\n        type: 'func',\r\n        josi: [['の', 'で'], ['から'], ['を']],\r\n        pure: true,\r\n        fn: function (a, col, s) {\r\n            if (!(a instanceof Array)) {\r\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\r\n            }\r\n            const re = new RegExp(s);\r\n            const res = [];\r\n            for (let i = 0; i < a.length; i++) {\r\n                const row = a[i];\r\n                if (re.test(row[col])) {\r\n                    res.push(row.slice(0));\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    // @辞書型変数の操作\r\n    '辞書キー列挙': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            const keys = [];\r\n            if (a instanceof Object) { // オブジェクトのキーを返す\r\n                for (const key in a) {\r\n                    keys.push(key);\r\n                }\r\n                return keys;\r\n            }\r\n            if (a instanceof Array) { // 配列なら数字を返す\r\n                for (let i = 0; i < a.length; i++) {\r\n                    keys.push(i);\r\n                }\r\n                return keys;\r\n            }\r\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\r\n        }\r\n    },\r\n    '辞書キー削除': {\r\n        type: 'func',\r\n        josi: [['から', 'の'], ['を']],\r\n        pure: true,\r\n        fn: function (a, key) {\r\n            if (a instanceof Object) { // オブジェクトのキーを返す\r\n                if (key in a) {\r\n                    delete a[key];\r\n                }\r\n                return a;\r\n            }\r\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\r\n        }\r\n    },\r\n    '辞書キー存在': {\r\n        type: 'func',\r\n        josi: [['の', 'に'], ['が']],\r\n        pure: true,\r\n        fn: function (a, key) {\r\n            return key in a;\r\n        }\r\n    },\r\n    // @ハッシュ\r\n    'ハッシュキー列挙': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (a, sys) {\r\n            return sys.__exec('辞書キー列挙', [a, sys]);\r\n        }\r\n    },\r\n    'ハッシュ内容列挙': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            const body = [];\r\n            if (a instanceof Object) { // オブジェクトのキーを返す\r\n                for (const key in a) {\r\n                    body.push(a[key]);\r\n                }\r\n                return body;\r\n            }\r\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\r\n        }\r\n    },\r\n    'ハッシュキー削除': {\r\n        type: 'func',\r\n        josi: [['から', 'の'], ['を']],\r\n        pure: false,\r\n        fn: function (a, key, sys) {\r\n            return sys.__exec('辞書キー削除', [a, key, sys]);\r\n        }\r\n    },\r\n    'ハッシュキー存在': {\r\n        type: 'func',\r\n        josi: [['の', 'に'], ['が']],\r\n        pure: true,\r\n        fn: function (a, key) {\r\n            return key in a;\r\n        }\r\n    },\r\n    // @タイマー\r\n    '秒待': {\r\n        type: 'func',\r\n        josi: [['']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function (n, sys) {\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    // タイマーを仕掛ける\r\n                    const timerId = setTimeout(() => {\r\n                        // タイマー使用中リストに追加したIDを削除\r\n                        const i = sys.__timeout.indexOf(timerId);\r\n                        if (i >= 0) {\r\n                            sys.__timeout.splice(i, 1);\r\n                        }\r\n                        // Promiseを終了\r\n                        resolve();\r\n                    }, parseFloat(n) * 1000);\r\n                    // タイマー使用中リストに追加\r\n                    sys.__timeout.push(timerId);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            });\r\n        },\r\n        return_none: true\r\n    },\r\n    '秒待機': {\r\n        type: 'func',\r\n        josi: [['']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (n, sys) {\r\n            const p = sys.__exec('秒待', [n, sys]);\r\n            return await p;\r\n        },\r\n        return_none: true\r\n    },\r\n    '秒逐次待機': {\r\n        type: 'func',\r\n        josi: [['']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (n, sys) {\r\n            const p = sys.__exec('秒待', [n, sys]);\r\n            return await p;\r\n        },\r\n        return_none: true\r\n    },\r\n    '秒後': {\r\n        type: 'func',\r\n        josi: [['を'], ['']],\r\n        pure: false,\r\n        fn: function (f, n, sys) {\r\n            // 文字列で指定された関数をオブジェクトに変換\r\n            if (typeof f === 'string') {\r\n                f = sys.__findFunc(f, '秒後');\r\n            }\r\n            // 1回限りのタイマーをセット\r\n            const timerId = setTimeout(() => {\r\n                // 使用中リストに追加したIDを削除\r\n                const i = sys.__timeout.indexOf(timerId);\r\n                if (i >= 0) {\r\n                    sys.__timeout.splice(i, 1);\r\n                }\r\n                if (sys.__genMode === '非同期モード') {\r\n                    sys.newenv = true;\r\n                }\r\n                try {\r\n                    f(timerId, sys);\r\n                }\r\n                catch (e) {\r\n                    let err = e;\r\n                    if (!(e instanceof NakoRuntimeError)) {\r\n                        err = new NakoRuntimeError(e, sys.__varslist[0].line);\r\n                    }\r\n                    sys.logger.error(err);\r\n                }\r\n            }, parseFloat(n) * 1000);\r\n            sys.__timeout.unshift(timerId);\r\n            sys.__v0['対象'] = timerId;\r\n            return timerId;\r\n        }\r\n    },\r\n    '秒毎': {\r\n        type: 'func',\r\n        josi: [['を'], ['']],\r\n        pure: false,\r\n        fn: function (f, n, sys) {\r\n            // 文字列で指定された関数をオブジェクトに変換\r\n            if (typeof f === 'string') {\r\n                f = sys.__findFunc(f, '秒毎');\r\n            }\r\n            // タイマーをセット\r\n            const timerId = setInterval(() => {\r\n                if (sys.__genMode === '非同期モード') {\r\n                    sys.newenv = true;\r\n                }\r\n                f(timerId, sys);\r\n            }, parseFloat(n) * 1000);\r\n            // タイマーIDを追加\r\n            sys.__interval.unshift(timerId);\r\n            sys.__v0['対象'] = timerId;\r\n            return timerId;\r\n        }\r\n    },\r\n    '秒タイマー開始時': {\r\n        type: 'func',\r\n        josi: [['を'], ['']],\r\n        pure: false,\r\n        fn: function (f, n, sys) {\r\n            return sys.__exec('秒毎', [f, n, sys]);\r\n        }\r\n    },\r\n    'タイマー停止': {\r\n        type: 'func',\r\n        josi: [['の', 'で']],\r\n        pure: true,\r\n        fn: function (timerId, sys) {\r\n            const i = sys.__interval.indexOf(timerId);\r\n            if (i >= 0) {\r\n                sys.__interval.splice(i, 1);\r\n                clearInterval(timerId);\r\n                return true;\r\n            }\r\n            const j = sys.__timeout.indexOf(timerId);\r\n            if (j >= 0) {\r\n                sys.__timeout.splice(j, 1);\r\n                clearTimeout(timerId);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        return_none: false\r\n    },\r\n    '全タイマー停止': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            // clearInterval\r\n            for (let i = 0; i < sys.__interval.length; i++) {\r\n                const timerId = sys.__interval[i];\r\n                clearInterval(timerId);\r\n            }\r\n            sys.__interval = [];\r\n            // clearTimeout\r\n            for (let i = 0; i < sys.__timeout.length; i++) {\r\n                const timerId = sys.__timeout[i];\r\n                clearTimeout(timerId);\r\n            }\r\n            sys.__timeout = [];\r\n        },\r\n        return_none: true\r\n    },\r\n    // @日時処理(簡易)\r\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] },\r\n    '今': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            const z2 = (n) => {\r\n                n = '00' + n;\r\n                return n.substring(n.length - 2, n.length);\r\n            };\r\n            const t = new Date();\r\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\r\n        }\r\n    },\r\n    'システム時間': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            const now = new Date();\r\n            return Math.floor(now.getTime() / 1000);\r\n        }\r\n    },\r\n    'システム時間ミリ秒': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            const now = new Date();\r\n            return now.getTime();\r\n        }\r\n    },\r\n    '今日': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            return sys.__formatDate(new Date());\r\n        }\r\n    },\r\n    '明日': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const t = Date.now() + (24 * 60 * 60 * 1000);\r\n            return sys.__formatDate(new Date(t));\r\n        }\r\n    },\r\n    '昨日': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const t = Date.now() - (24 * 60 * 60 * 1000);\r\n            return sys.__formatDate(new Date(t));\r\n        }\r\n    },\r\n    '今年': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getFullYear();\r\n        }\r\n    },\r\n    '来年': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getFullYear() + 1;\r\n        }\r\n    },\r\n    '去年': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getFullYear() - 1;\r\n        }\r\n    },\r\n    '今月': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getMonth() + 1;\r\n        }\r\n    },\r\n    '来月': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getMonth() + 2;\r\n        }\r\n    },\r\n    '先月': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (new Date()).getMonth();\r\n        }\r\n    },\r\n    '曜日': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const d = sys.__str2date(s);\r\n            return '日月火水木金土'.charAt(d.getDay() % 7);\r\n        }\r\n    },\r\n    '曜日番号取得': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            const a = s.split('/');\r\n            const t = new Date(a[0], a[1] - 1, a[2]);\r\n            return t.getDay();\r\n        }\r\n    },\r\n    'UNIXTIME変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を', 'から']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const d = sys.__str2date(s);\r\n            return d.getTime() / 1000;\r\n        }\r\n    },\r\n    'UNIX時間変換': {\r\n        type: 'func',\r\n        josi: [['の', 'を', 'から']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const d = sys.__str2date(s);\r\n            return d.getTime() / 1000;\r\n        }\r\n    },\r\n    '日時変換': {\r\n        type: 'func',\r\n        josi: [['を', 'から']],\r\n        pure: true,\r\n        fn: function (tm, sys) {\r\n            const t = tm * 1000;\r\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\r\n        }\r\n    },\r\n    '日時書式変換': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (tm, fmt, sys) {\r\n            const t = sys.__str2date(tm);\r\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\r\n                switch (m) {\r\n                    case 'YYYY': return t.getFullYear();\r\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\r\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\r\n                    case 'DD': return sys.__zero2(t.getDate());\r\n                    case 'M': return (t.getMonth() + 1);\r\n                    case 'D': return (t.getDate());\r\n                    case 'HH': return sys.__zero2(t.getHours());\r\n                    case 'mm': return sys.__zero2(t.getMinutes());\r\n                    case 'ss': return sys.__zero2(t.getSeconds());\r\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\r\n                    case 'H': return (t.getHours());\r\n                    case 'm': return (t.getMinutes());\r\n                    case 's': return (t.getSeconds());\r\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\r\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\r\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\r\n                }\r\n                return m;\r\n            });\r\n            return fmt;\r\n        }\r\n    },\r\n    '和暦変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const d = sys.__str2date(s);\r\n            const t = d.getTime();\r\n            for (const era of sys.__v0['元号データ']) {\r\n                const gengo = era['元号'];\r\n                const d2 = sys.__str2date(era['改元日']);\r\n                const t2 = d2.getTime();\r\n                if (t2 <= t) {\r\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\r\n                    if (y === 1) {\r\n                        y = '元';\r\n                    }\r\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\r\n                }\r\n            }\r\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\r\n        }\r\n    },\r\n    '年数差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = sys.__str2date(a);\r\n            const t2 = sys.__str2date(b);\r\n            return (t2.getFullYear() - t1.getFullYear());\r\n        }\r\n    },\r\n    '月数差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = sys.__str2date(a);\r\n            const t2 = sys.__str2date(b);\r\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\r\n                (t1.getFullYear() * 12 + t1.getMonth()));\r\n        }\r\n    },\r\n    '日数差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\r\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\r\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\r\n            return days;\r\n        }\r\n    },\r\n    '時間差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\r\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\r\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\r\n            return hours;\r\n        }\r\n    },\r\n    '分差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\r\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\r\n            const min = Math.ceil((t2 - t1) / (60));\r\n            return min;\r\n        }\r\n    },\r\n    '秒差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\r\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\r\n            const sec = Math.ceil((t2 - t1));\r\n            return sec;\r\n        }\r\n    },\r\n    '日時差': {\r\n        type: 'func',\r\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\r\n        pure: true,\r\n        fn: function (a, b, unit, sys) {\r\n            switch (unit) {\r\n                case '年': return sys.__exec('年数差', [a, b, sys]);\r\n                case '月': return sys.__exec('月数差', [a, b, sys]);\r\n                case '日': return sys.__exec('日数差', [a, b, sys]);\r\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\r\n                case '分': return sys.__exec('分差', [a, b, sys]);\r\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\r\n            }\r\n            throw new Error('『日時差』で不明な単位です。');\r\n        }\r\n    },\r\n    '時間加算': {\r\n        type: 'func',\r\n        josi: [['に'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a, sys) {\r\n            const op = a.charAt(0);\r\n            if (op === '-' || op === '+') {\r\n                a = a.substring(1);\r\n            }\r\n            const d = sys.__str2date(s);\r\n            const aa = (a + ':0:0').split(':');\r\n            let sec = parseInt(aa[0]) * 60 * 60 +\r\n                parseInt(aa[1]) * 60 +\r\n                parseInt(aa[2]);\r\n            if (op === '-') {\r\n                sec *= -1;\r\n            }\r\n            const rd = new Date(d.getTime() + (sec * 1000));\r\n            return sys.__formatDateTime(rd, s);\r\n        }\r\n    },\r\n    '日付加算': {\r\n        type: 'func',\r\n        josi: [['に'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a, sys) {\r\n            let op = 1;\r\n            const opc = a.charAt(0);\r\n            if (opc === '-' || opc === '+') {\r\n                a = a.substring(1);\r\n                if (opc === '-') {\r\n                    op *= -1;\r\n                }\r\n            }\r\n            const d = sys.__str2date(s);\r\n            const aa = (a + '/0/0').split('/');\r\n            const addY = parseInt(aa[0]) * op;\r\n            const addM = parseInt(aa[1]) * op;\r\n            const addD = parseInt(aa[2]) * op;\r\n            d.setFullYear(d.getFullYear() + addY);\r\n            d.setMonth(d.getMonth() + addM);\r\n            d.setDate(d.getDate() + addD);\r\n            return sys.__formatDateTime(d, s);\r\n        }\r\n    },\r\n    '日時加算': {\r\n        type: 'func',\r\n        josi: [['に'], ['を']],\r\n        pure: true,\r\n        fn: function (s, a, sys) {\r\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\r\n            if (!r) {\r\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\r\n            }\r\n            switch (r[3]) {\r\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\r\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\r\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\r\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\r\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\r\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\r\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\r\n            }\r\n        }\r\n    },\r\n    '時間ミリ秒取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            if (performance && performance.now) {\r\n                return performance.now();\r\n            }\r\n            else if (Date.now) {\r\n                return Date.now();\r\n            }\r\n            else {\r\n                const now = new Date();\r\n                return now.getTime();\r\n            }\r\n        }\r\n    },\r\n    // @デバッグ支援\r\n    'エラー発生': {\r\n        type: 'func',\r\n        josi: [['の', 'で']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            throw new Error(s);\r\n        }\r\n    },\r\n    '__DEBUG': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            sys.isDebug = true;\r\n            console.log(sys);\r\n        }\r\n    },\r\n    '__DEBUG強制待機': { type: 'const', value: 0 },\r\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] },\r\n    '__DEBUG待機フラグ': { type: 'const', value: 0 },\r\n    '__DEBUG_BP_WAIT': {\r\n        type: 'func',\r\n        josi: [['で']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function (curLine, sys) {\r\n            return new Promise((resolve) => {\r\n                const breakpoints = sys.__v0['__DEBUGブレイクポイント一覧'];\r\n                const forceLine = sys.__v0['__DEBUG強制待機'];\r\n                sys.__v0['__DEBUG強制待機'] = 0;\r\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\r\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\r\n                    console.log('@STOP!!!! cur=', curLine);\r\n                    const timerId = setInterval(() => {\r\n                        if (sys.__v0['__DEBUG待機フラグ'] === 1) {\r\n                            sys.__v0['__DEBUG待機フラグ'] = 0;\r\n                            clearInterval(timerId);\r\n                            resolve(curLine);\r\n                        }\r\n                    }, 500);\r\n                }\r\n                else {\r\n                    resolve(curLine);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    'グローバル関数一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const vars = sys.__varslist[1];\r\n            const res = [];\r\n            for (const key in vars) {\r\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\r\n                    res.push(key);\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    'システム関数一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const vars = sys.__varslist[0];\r\n            const res = [];\r\n            for (const key in vars) {\r\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\r\n                    res.push(key);\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    'システム関数存在': {\r\n        type: 'func',\r\n        josi: [['が', 'の']],\r\n        pure: true,\r\n        fn: function (fname, sys) {\r\n            return (typeof sys.__v0[fname] !== 'undefined');\r\n        }\r\n    },\r\n    'プラグイン一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const a = [];\r\n            for (const f in sys.pluginfiles) {\r\n                a.push(f);\r\n            }\r\n            return a;\r\n        }\r\n    },\r\n    'モジュール一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const a = [];\r\n            for (const f in sys.__module) {\r\n                a.push(f);\r\n            }\r\n            return a;\r\n        }\r\n    },\r\n    '助詞一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function () {\r\n            return new Promise((resolve, reject) => {\r\n                import('./nako_josi_list.mjs')\r\n                    .then((mod) => {\r\n                    const obj = Object.assign({}, mod);\r\n                    resolve(obj.josiList);\r\n                })\r\n                    .catch((err) => {\r\n                    reject(err);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    '予約語一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function () {\r\n            // const words = require('./nako_reserved_words.mjs')\r\n            return new Promise((resolve, reject) => {\r\n                import('./nako_reserved_words.mjs')\r\n                    .then((mod) => {\r\n                    const obj = Object.assign({}, mod);\r\n                    const w = [];\r\n                    for (const key in obj.default) {\r\n                        w.push(key);\r\n                    }\r\n                    resolve(w);\r\n                })\r\n                    .catch((err) => {\r\n                    reject(err);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    // @プラグイン管理\r\n    'プラグイン名': { type: 'const', value: 'メイン' },\r\n    'プラグイン名設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            sys.__v0['プラグイン名'] = s;\r\n        },\r\n        return_none: true\r\n    },\r\n    '名前空間': { type: 'const', value: '' },\r\n    '名前空間設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            // push namespace\r\n            sys.__namespaceList.push([sys.__v0['名前空間'], sys.__v0['プラグイン名']]);\r\n            sys.__v0['名前空間'] = s;\r\n        },\r\n        return_none: true\r\n    },\r\n    '名前空間ポップ': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            // pop namespace\r\n            const a = sys.__namespaceList.pop();\r\n            if (a) {\r\n                sys.__v0['名前空間'] = a[0];\r\n                sys.__v0['プラグイン名'] = a[1];\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    // @URLエンコードとパラメータ\r\n    'URLエンコード': {\r\n        type: 'func',\r\n        josi: [['を', 'から']],\r\n        pure: true,\r\n        fn: function (text) {\r\n            return encodeURIComponent(text);\r\n        }\r\n    },\r\n    'URLデコード': {\r\n        type: 'func',\r\n        josi: [['を', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (text) {\r\n            return decodeURIComponent(text);\r\n        }\r\n    },\r\n    'URLパラメータ解析': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'から']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            const res = {};\r\n            if (typeof url !== 'string') {\r\n                return res;\r\n            }\r\n            const p = url.split('?');\r\n            if (p.length <= 1) {\r\n                return res;\r\n            }\r\n            const params = p[1].split('&');\r\n            for (const line of params) {\r\n                const line2 = line + '=';\r\n                const kv = line2.split('=');\r\n                const k = sys.__exec('URLデコード', [kv[0]]);\r\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\r\n            }\r\n            return res;\r\n        }\r\n    },\r\n    // @BASE64\r\n    'BASE64エンコード': {\r\n        type: 'func',\r\n        josi: [['を', 'から']],\r\n        pure: true,\r\n        fn: function (text) {\r\n            // browser?\r\n            if (typeof (window) !== 'undefined' && window.btoa) {\r\n                const u8a = new TextEncoder().encode(text);\r\n                const utf8str = String.fromCharCode.apply(null, u8a);\r\n                return btoa(utf8str);\r\n            }\r\n            // Node?\r\n            if (typeof (Buffer) !== 'undefined') {\r\n                return Buffer.from(text).toString('base64');\r\n            }\r\n            throw new Error('『BASE64エンコード』は利用できません。');\r\n        }\r\n    },\r\n    'BASE64デコード': {\r\n        type: 'func',\r\n        josi: [['を', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (text) {\r\n            if (typeof (window) !== 'undefined' && window.atob) {\r\n                const decodedUtf8str = atob(text);\r\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\r\n                const decodedArray = new Uint8Array(dec);\r\n                return new TextDecoder('UTF-8').decode(decodedArray);\r\n            }\r\n            // Node?\r\n            if (typeof (Buffer) !== 'undefined') {\r\n                return Buffer.from(text, 'base64').toString();\r\n            }\r\n            throw new Error('『BASE64デコード』は利用できません。');\r\n        }\r\n    }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\r\nexport const opPriority = {\r\n    // and or\r\n    'and': 1,\r\n    'or': 1,\r\n    // compare\r\n    'eq': 2,\r\n    'noteq': 2,\r\n    '===': 2,\r\n    '!==': 2,\r\n    'gt': 2,\r\n    'gteq': 2,\r\n    'lt': 2,\r\n    'lteq': 2,\r\n    '&': 3,\r\n    // + - << >> >>>\r\n    '+': 4,\r\n    '-': 4,\r\n    'shift_l': 4,\r\n    'shift_r': 4,\r\n    'shift_r0': 4,\r\n    // * /\r\n    '*': 5,\r\n    '/': 5,\r\n    '÷': 5,\r\n    '÷÷': 5,\r\n    '%': 5,\r\n    // ^\r\n    '^': 6,\r\n    '**': 6\r\n};\r\nexport const RenbunJosi = [\r\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\r\n];\r\nexport const operatorList = [];\r\nfor (const key in opPriority) {\r\n    operatorList.push(key);\r\n}\r\n","/**\r\n * なでしこ3 の TypeScript のための型定義\r\n */\r\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\r\n    return {\r\n        type,\r\n        value,\r\n        indent,\r\n        line,\r\n        column: 0,\r\n        file,\r\n        josi: ''\r\n    };\r\n}\r\n","import { NewEmptyToken } from './nako_types.mjs';\r\n/**\r\n * なでしこの構文解析のためのユーティリティクラス\r\n */\r\nexport class NakoParserBase {\r\n    constructor(logger) {\r\n        this.logger = logger;\r\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\r\n        this.tokens = [];\r\n        this.usedFuncs = new Set();\r\n        /** @type {import('./nako3.mjs').Ast[]} */\r\n        this.stack = [];\r\n        this.index = 0;\r\n        /** トークン出現チェック(accept関数)に利用する\r\n         * @type {import('./nako3.mjs').Ast[]}\r\n         */\r\n        this.y = [];\r\n        /** モジュル名 @type {string} */\r\n        this.modName = 'inline';\r\n        this.namespaceStack = [];\r\n        /**\r\n         * 利用するモジュールの名前一覧\r\n         * @type {Array<string>}\r\n         */\r\n        this.modList = [];\r\n        /** グローバル変数・関数の確認用 */\r\n        this.funclist = {};\r\n        this.funcLevel = 0;\r\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\r\n        /**\r\n         * ローカル変数の確認用\r\n         * @type {Object.<string,Object>}\r\n         */\r\n        this.localvars = { 'それ': { type: 'var', value: '' } };\r\n        /** コード生成器の名前 @type {string} */\r\n        this.genMode = 'sync'; // #637\r\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\r\n        this.arrayIndexFrom = 0;\r\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\r\n        this.flagReverseArrayIndex = false;\r\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\r\n        this.flagCheckArrayInit = false;\r\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\r\n        this.recentlyCalledFunc = [];\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.funclist = {}; // 関数の一覧\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\r\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\r\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\r\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\r\n        this.genMode = 'sync'; // #637, #1056\r\n    }\r\n    setFuncList(funclist) {\r\n        this.funclist = funclist;\r\n    }\r\n    /**\r\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\r\n     * @param {string[]} josiList 下ろしたい助詞の配列\r\n     */\r\n    popStack(josiList = undefined) {\r\n        if (!josiList) {\r\n            const t = this.stack.pop();\r\n            if (t) {\r\n                return t;\r\n            }\r\n            return null;\r\n        }\r\n        // josiList にマッチする助詞を探す\r\n        for (let i = this.stack.length - 1; i >= 0; i--) {\r\n            const t = this.stack[i];\r\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\r\n                this.stack.splice(i, 1); // remove stack\r\n                this.logger.trace('POP :' + JSON.stringify(t));\r\n                return t;\r\n            }\r\n        }\r\n        // 該当する助詞が見つからなかった場合\r\n        return null;\r\n    }\r\n    /**\r\n     * saveStack と loadStack は対で使う。\r\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\r\n     */\r\n    saveStack() {\r\n        this.stackList.push(this.stack);\r\n        this.stack = [];\r\n    }\r\n    loadStack() {\r\n        this.stack = this.stackList.pop();\r\n    }\r\n    /** 変数名を探す\r\n     * @param {string} name\r\n     * @returns {any}変数名の情報\r\n     */\r\n    findVar(name) {\r\n        // ローカル変数？\r\n        if (this.localvars[name]) {\r\n            return {\r\n                name,\r\n                scope: 'local',\r\n                info: this.localvars[name]\r\n            };\r\n        }\r\n        // モジュール名を含んでいる?\r\n        if (name.indexOf('__') >= 0) {\r\n            if (this.funclist[name]) {\r\n                return {\r\n                    name,\r\n                    scope: 'global',\r\n                    info: this.funclist[name]\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n        // グローバル変数（自身）？\r\n        const gnameSelf = `${this.modName}__${name}`;\r\n        if (this.funclist[gnameSelf]) {\r\n            return {\r\n                name: gnameSelf,\r\n                scope: 'global',\r\n                info: this.funclist[gnameSelf]\r\n            };\r\n        }\r\n        // グローバル変数（モジュールを検索）？\r\n        for (const mod of this.modList) {\r\n            const gname = `${mod}__${name}`;\r\n            if (this.funclist[gname]) {\r\n                return {\r\n                    name: gname,\r\n                    scope: 'global',\r\n                    info: this.funclist[gname]\r\n                };\r\n            }\r\n        }\r\n        // システム変数 (funclistを普通に検索)\r\n        if (this.funclist[name]) {\r\n            return {\r\n                name,\r\n                scope: 'system',\r\n                info: this.funclist[name]\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * 計算用に要素をスタックに積む\r\n     */\r\n    pushStack(item) {\r\n        this.logger.trace('PUSH:' + JSON.stringify(item));\r\n        this.stack.push(item);\r\n    }\r\n    /**\r\n     * トークンの末尾に達したか\r\n     */\r\n    isEOF() {\r\n        return (this.index >= this.tokens.length);\r\n    }\r\n    getIndex() {\r\n        return this.index;\r\n    }\r\n    /**\r\n     * カーソル位置にある単語の型を確かめる\r\n     */\r\n    check(ttype) {\r\n        return (this.tokens[this.index].type === ttype);\r\n    }\r\n    /**\r\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\r\n     * @param a [単語1の型, 単語2の型, ... ]\r\n     */\r\n    check2(a) {\r\n        for (let i = 0; i < a.length; i++) {\r\n            const idx = i + this.index;\r\n            if (this.tokens.length <= idx) {\r\n                return false;\r\n            }\r\n            if (a[i] === '*') {\r\n                continue;\r\n            } // ワイルドカード(どんなタイプも許容)\r\n            const t = this.tokens[idx];\r\n            if (a[i] instanceof Array) {\r\n                if (a[i].indexOf(t.type) < 0) {\r\n                    return false;\r\n                }\r\n                continue;\r\n            }\r\n            if (t.type !== a[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\r\n     */\r\n    checkTypes(a) {\r\n        const type = this.tokens[this.index].type;\r\n        return (a.indexOf(type) >= 0);\r\n    }\r\n    /**\r\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\r\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\r\n     */\r\n    accept(types) {\r\n        const y = [];\r\n        const tmpIndex = this.index;\r\n        const rollback = () => {\r\n            this.index = tmpIndex;\r\n            return false;\r\n        };\r\n        for (let i = 0; i < types.length; i++) {\r\n            if (this.isEOF()) {\r\n                return rollback();\r\n            }\r\n            const type = types[i];\r\n            if (type == null) {\r\n                return rollback();\r\n            }\r\n            if (typeof type === 'string') {\r\n                const token = this.get();\r\n                if (token && token.type !== type) {\r\n                    return rollback();\r\n                }\r\n                y[i] = token;\r\n                continue;\r\n            }\r\n            if (typeof type === 'function') {\r\n                const f = type.bind(this);\r\n                const r = f(y);\r\n                if (r === null) {\r\n                    return rollback();\r\n                }\r\n                y[i] = r;\r\n                continue;\r\n            }\r\n            if (type instanceof Array) {\r\n                if (!this.checkTypes(type)) {\r\n                    return rollback();\r\n                }\r\n                y[i] = this.get();\r\n                continue;\r\n            }\r\n            throw new Error('System Error : accept broken : ' + typeof type);\r\n        }\r\n        this.y = y;\r\n        return true;\r\n    }\r\n    /**\r\n     * カーソル語句を取得して、カーソルを後ろに移動する\r\n     */\r\n    get() {\r\n        if (this.isEOF()) {\r\n            return null;\r\n        }\r\n        return this.tokens[this.index++];\r\n    }\r\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\r\n    getCur() {\r\n        if (this.isEOF()) {\r\n            throw new Error('トークンが取得できません。');\r\n        }\r\n        const t = this.tokens[this.index++];\r\n        if (!t) {\r\n            throw new Error('トークンが取得できません。');\r\n        }\r\n        return t;\r\n    }\r\n    unget() {\r\n        if (this.index > 0) {\r\n            this.index--;\r\n        }\r\n    }\r\n    /** 解析中のトークンを返す */\r\n    peek(i = 0) {\r\n        if (this.isEOF()) {\r\n            return null;\r\n        }\r\n        return this.tokens[this.index + i];\r\n    }\r\n    /** 解析中のトークンを返す、無理なら def を返す */\r\n    peekDef(def = null) {\r\n        if (this.isEOF()) {\r\n            if (!def) {\r\n                def = NewEmptyToken();\r\n            }\r\n            return def;\r\n        }\r\n        return this.tokens[this.index];\r\n    }\r\n    /**\r\n     * 現在のカーソル語句のソースコード上の位置を取得する。\r\n     */\r\n    peekSourceMap() {\r\n        const token = this.peek();\r\n        if (token === null) {\r\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\r\n        }\r\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\r\n    }\r\n    /**\r\n     * depth: 表示する深さ\r\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\r\n     * @param {{ depth: number, typeName?: string }} opts\r\n     * @param {boolean} debugMode\r\n     */\r\n    nodeToStr(node, opts, debugMode) {\r\n        const depth = opts.depth - 1;\r\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\r\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\r\n        if (!node) {\r\n            return '(NULL)';\r\n        }\r\n        switch (node.type) {\r\n            case 'not':\r\n                if (depth >= 0) {\r\n                    const subNode = node.value;\r\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\r\n                }\r\n                else {\r\n                    return `${typeName('演算子')}『not』`;\r\n                }\r\n            case 'op': {\r\n                const node2 = node;\r\n                let operator = node2.operator || '';\r\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\r\n                if (operator in table) {\r\n                    operator = table[operator];\r\n                }\r\n                if (depth >= 0) {\r\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\r\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\r\n                    if (node2.operator === 'eq') {\r\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\r\n                    }\r\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\r\n                }\r\n                else {\r\n                    return `${typeName('演算子')}『${operator}${debug}』`;\r\n                }\r\n            }\r\n            case 'number':\r\n                return `${typeName('数値')}${node.value}`;\r\n            case 'string':\r\n                return `${typeName('文字列')}『${node.value}${debug}』`;\r\n            case 'word':\r\n                return `${typeName('単語')}『${node.value}${debug}』`;\r\n            case 'func':\r\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\r\n            case 'eol':\r\n                return '行の末尾';\r\n            case 'eof':\r\n                return 'ファイルの末尾';\r\n            default: {\r\n                let name = node.name;\r\n                if (name) {\r\n                    name = node.value;\r\n                }\r\n                if (typeof name !== 'string') {\r\n                    name = node.type;\r\n                }\r\n                return `${typeName('')}『${name}${debug}』`;\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\r\n */\r\nexport function isIndentChars(ch) {\r\n    const code = ch.charCodeAt(0);\r\n    // 特別なコード\r\n    if (ch === '\\t') {\r\n        return 4;\r\n    }\r\n    if (ch === ' ' || ch === '|') {\r\n        return 1;\r\n    }\r\n    if (ch === '・' || ch === '　') {\r\n        return 2;\r\n    }\r\n    if (ch === '⏋' || ch === '⏌') {\r\n        return 2;\r\n    } // 0x23CB, 0x23CC\r\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\r\n    if (code >= 0x2500 && code <= 0x257F) {\r\n        return 2;\r\n    }\r\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\r\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\r\n        (code >= 0x23B8 && code <= 0x23BF)) {\r\n        return 2;\r\n    }\r\n    return 0;\r\n}\r\n","/**\r\n * なでしこ3字句解析のためのルール\r\n */\r\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\r\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\r\nconst hira = /^[ぁ-ん]/;\r\nconst allHiragana = /^[ぁ-ん]+$/;\r\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\r\nconst wordSpecial = /^(かつ|または)/;\r\nconst errorRead = (ch) => {\r\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\r\n};\r\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\r\n/** トークンに区切るルールの一覧 */\r\nexport const rules = [\r\n    // 上から順にマッチさせていく\r\n    { name: 'ここまで', pattern: /^;;;/ },\r\n    { name: 'eol', pattern: /^\\n/ },\r\n    { name: 'eol', pattern: /^;/ },\r\n    // eslint-disable-next-line no-control-regex\r\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ },\r\n    { name: 'comma', pattern: /^,/ },\r\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\r\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\r\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\r\n    { name: 'def_test', pattern: /^●テスト:/ },\r\n    { name: 'def_func', pattern: /^●/ },\r\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\r\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\r\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\r\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\r\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\r\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\r\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\r\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\r\n    { name: 'ここから', pattern: /^(ここから),?/ },\r\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\r\n    { name: 'もし', pattern: /^もしも?/ },\r\n    // 「ならば」は助詞として定義している\r\n    { name: '違えば', pattern: /^違(えば)?/ },\r\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\r\n    // @see nako_reserved_words.js\r\n    { name: 'shift_r0', pattern: /^>>>/ },\r\n    { name: 'shift_r', pattern: /^>>/ },\r\n    { name: 'shift_l', pattern: /^<</ },\r\n    { name: '===', pattern: /^===/ },\r\n    { name: '!==', pattern: /^!==/ },\r\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\r\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\r\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\r\n    { name: '←', pattern: /^(←|<--)/ },\r\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\r\n    { name: 'eq', pattern: /^(=|🟰)/ },\r\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ },\r\n    { name: 'not', pattern: /^(!|💡)/ },\r\n    { name: 'gt', pattern: /^>/ },\r\n    { name: 'lt', pattern: /^</ },\r\n    { name: 'and', pattern: /^(かつ|&&)/ },\r\n    { name: 'or', pattern: /^(または|或いは|あるいは|\\|\\|)/ },\r\n    { name: '@', pattern: /^@/ },\r\n    { name: '+', pattern: /^\\+/ },\r\n    { name: '-', pattern: /^-/ },\r\n    { name: '**', pattern: /^(××|\\*\\*)/ },\r\n    { name: '*', pattern: /^(×|\\*)/ },\r\n    { name: '÷÷', pattern: /^÷÷/ },\r\n    { name: '÷', pattern: /^(÷|\\/)/ },\r\n    { name: '%', pattern: /^%/ },\r\n    { name: '^', pattern: /^\\^/ },\r\n    { name: '&', pattern: /^&/ },\r\n    { name: '[', pattern: /^\\[/ },\r\n    { name: ']', pattern: /^]/, readJosi: true },\r\n    { name: '(', pattern: /^\\(/ },\r\n    { name: ')', pattern: /^\\)/, readJosi: true },\r\n    { name: '|', pattern: /^\\|/ },\r\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\r\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\r\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\r\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\r\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\r\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\r\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\r\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') },\r\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') },\r\n    { name: 'func', pattern: /^\\{関数\\},?/ },\r\n    { name: '{', pattern: /^\\{/ },\r\n    { name: '}', pattern: /^\\}/, readJosi: true },\r\n    { name: ':', pattern: /^:/ },\r\n    { name: '_eol', pattern: /^_\\s*\\n/ },\r\n    { name: 'dec_lineno', pattern: /^‰/ },\r\n    // 絵文字変数 = (絵文字)英数字*\r\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\r\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true },\r\n    { name: 'word', pattern: /^《.+?》/, readJosi: true },\r\n    // 単語句\r\n    {\r\n        name: 'word',\r\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\r\n        cbParser: cbWordParser\r\n    }\r\n];\r\nexport function trimOkurigana(s) {\r\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\r\n    if (!hira.test(s)) {\r\n        return s.replace(/[ぁ-ん]+/g, '');\r\n    }\r\n    // 全てひらがな？ (例) どうぞ\r\n    if (allHiragana.test(s)) {\r\n        return s;\r\n    }\r\n    // 末尾のひらがなのみ (例)お願いします →お願\r\n    return s.replace(/[ぁ-ん]+$/g, '');\r\n}\r\n// Utility for Rule\r\nfunction cbRangeComment(src) {\r\n    let res = '';\r\n    const josi = '';\r\n    let numEOL = 0;\r\n    src = src.substring(2); // skip /*\r\n    const i = src.indexOf('*/');\r\n    if (i < 0) { // not found\r\n        res = src;\r\n        src = '';\r\n    }\r\n    else {\r\n        res = src.substring(0, i);\r\n        src = src.substring(i + 2);\r\n    }\r\n    // 改行を数える\r\n    for (let i = 0; i < res.length; i++) {\r\n        if (res.charAt(i) === '\\n') {\r\n            numEOL++;\r\n        }\r\n    }\r\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\r\n    return { src, res, josi, numEOL };\r\n}\r\n/**\r\n * @param {string} src\r\n */\r\nfunction cbWordParser(src, isTrimOkurigana = true) {\r\n    /*\r\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\r\n      hiragana = [ぁ-ん]\r\n      katakana = [ァ-ヶー]\r\n      emoji    = [\\u1F60-\\u1F6F]\r\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\r\n      alphabet = [_a-zA-Z]\r\n      numchars = [0-9]\r\n    */\r\n    let res = '';\r\n    let josi = '';\r\n    while (src !== '') {\r\n        // 1文字以上のとき\r\n        if (res.length > 0) {\r\n            // 「かつ」「または」なら分割する (#1379 core#84)\r\n            const jsw = wordSpecial.exec(src);\r\n            if (jsw) {\r\n                break;\r\n            }\r\n            // 助詞の判定\r\n            const j = josiRE.exec(src);\r\n            if (j) {\r\n                josi = j[0].replace(/^\\s+/, '');\r\n                src = src.substring(j[0].length);\r\n                // 助詞の直後にある「,」を飛ばす #877\r\n                if (src.charAt(0) === ',') {\r\n                    src = src.substr(1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        // カタカナ漢字英数字か？\r\n        const m = kanakanji.exec(src);\r\n        if (m) {\r\n            res += m[0];\r\n            src = src.substring(m[0].length);\r\n            continue;\r\n        }\r\n        // ひらがな？\r\n        const h = hira.test(src);\r\n        if (h) {\r\n            res += src.charAt(0);\r\n            src = src.substring(1);\r\n            continue;\r\n        }\r\n        break; // other chars\r\n    }\r\n    // --- 単語分割における特殊ルール ---\r\n    // 「間」の特殊ルール (#831)\r\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\r\n    if (/[ぁ-ん]間$/.test(res)) {\r\n        src = res.charAt(res.length - 1) + src;\r\n        res = res.slice(0, -1);\r\n    }\r\n    // 「以上」「以下」「超」「未満」 #918\r\n    const ii = wordHasIjoIka.exec(res);\r\n    if (ii) {\r\n        src = ii[1] + josi + src;\r\n        josi = '';\r\n        res = res.substring(0, res.length - ii[1].length);\r\n    }\r\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\r\n    if (removeJosiMap[josi]) {\r\n        josi = '';\r\n    }\r\n    // 送り仮名の省略ルール\r\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\r\n    if (isTrimOkurigana) {\r\n        res = trimOkurigana(res);\r\n    }\r\n    // 助詞だけの語句の場合\r\n    if (res === '' && josi !== '') {\r\n        res = josi;\r\n        josi = '';\r\n    }\r\n    return { src, res, josi, numEOL: 0 };\r\n}\r\nfunction cbString(beginTag, closeTag, src) {\r\n    let res = '';\r\n    let josi = '';\r\n    let numEOL = 0;\r\n    src = src.substr(beginTag.length); // skip beginTag\r\n    const i = src.indexOf(closeTag);\r\n    if (i < 0) { // not found\r\n        res = src;\r\n        src = '';\r\n    }\r\n    else {\r\n        res = src.substr(0, i);\r\n        src = src.substr(i + closeTag.length);\r\n        // res の中に beginTag があればエラーにする #953\r\n        if (res.indexOf(beginTag) >= 0) {\r\n            if (beginTag === '『') {\r\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\r\n            }\r\n            else {\r\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\r\n            }\r\n        }\r\n    }\r\n    // 文字列直後の助詞を取得\r\n    const j = josiRE.exec(src);\r\n    if (j) {\r\n        josi = j[0].replace(/^\\s+/, '');\r\n        src = src.substr(j[0].length);\r\n        // 助詞の後のカンマ #877\r\n        if (src.charAt(0) === ',') {\r\n            src = src.substr(1);\r\n        }\r\n    }\r\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\r\n    if (removeJosiMap[josi]) {\r\n        josi = '';\r\n    }\r\n    // 改行を数える\r\n    for (let i = 0; i < res.length; i++) {\r\n        if (res.charAt(i) === '\\n') {\r\n            numEOL++;\r\n        }\r\n    }\r\n    return { src, res, josi, numEOL };\r\n}\r\nfunction parseNumber(n) {\r\n    return Number(n.replace(/_/g, ''));\r\n}\r\n","// なでしこの字句解析を行う\r\n// 既に全角半角を揃えたコードに対して字句解析を行う\r\nimport { opPriority } from './nako_parser_const.mjs';\r\n// 予約語句\r\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\r\n/** @types {Record<string, string>} */\r\nimport reservedWords from './nako_reserved_words.mjs';\r\nimport { isIndentChars } from './nako_indent_chars.mjs';\r\n// 助詞の一覧\r\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\r\n// 字句解析ルールの一覧\r\nimport { rules, unitRE } from './nako_lex_rules.mjs';\r\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\r\nexport class NakoLexer {\r\n    /**\r\n     * @param logger\r\n     */\r\n    constructor(logger) {\r\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\r\n        this.funclist = {};\r\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\r\n        this.result = [];\r\n        this.modName = 'main.nako3'; // モジュール名\r\n    }\r\n    /** 関数一覧をセット */\r\n    setFuncList(listObj) {\r\n        this.funclist = listObj;\r\n    }\r\n    /**\r\n     * @param tokens\r\n     * @param {boolean} isFirst\r\n     * @param {string} filename\r\n     */\r\n    replaceTokens(tokens, isFirst, filename) {\r\n        this.result = tokens;\r\n        this.modName = NakoLexer.filenameToModName(filename);\r\n        // 関数の定義があれば funclist を更新\r\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist);\r\n        this._replaceWord(this.result);\r\n        if (isFirst) {\r\n            if (this.result.length > 0) {\r\n                const eof = this.result[this.result.length - 1];\r\n                this.result.push({\r\n                    type: 'eol',\r\n                    line: eof.line,\r\n                    column: 0,\r\n                    indent: -1,\r\n                    file: eof.file,\r\n                    josi: '',\r\n                    value: '---',\r\n                    startOffset: eof.startOffset,\r\n                    endOffset: eof.endOffset,\r\n                    rawJosi: ''\r\n                }); // 改行\r\n                this.result.push({\r\n                    type: 'eof',\r\n                    line: eof.line,\r\n                    indent: -1,\r\n                    column: 0,\r\n                    file: eof.file,\r\n                    josi: '',\r\n                    value: '',\r\n                    startOffset: eof.startOffset,\r\n                    endOffset: eof.endOffset,\r\n                    rawJosi: ''\r\n                }); // ファイル末尾\r\n            }\r\n            else {\r\n                this.result.push({\r\n                    type: 'eol',\r\n                    line: 0,\r\n                    column: 0,\r\n                    indent: -1,\r\n                    file: '',\r\n                    josi: '',\r\n                    value: '---',\r\n                    startOffset: 0,\r\n                    endOffset: 0,\r\n                    rawJosi: ''\r\n                }); // 改行\r\n                this.result.push({\r\n                    type: 'eof',\r\n                    line: 0,\r\n                    column: 0,\r\n                    indent: -1,\r\n                    file: '',\r\n                    josi: '',\r\n                    value: '',\r\n                    startOffset: 0,\r\n                    endOffset: 0,\r\n                    rawJosi: ''\r\n                }); // ファイル末尾\r\n            }\r\n        }\r\n        return this.result;\r\n    }\r\n    /**\r\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\r\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\r\n     */\r\n    static preDefineFunc(tokens, logger, funclist) {\r\n        // 関数を先読みして定義\r\n        let i = 0;\r\n        let isFuncPointer = false;\r\n        const readArgs = () => {\r\n            const args = [];\r\n            const keys = {};\r\n            if (tokens[i].type !== '(') {\r\n                return [];\r\n            }\r\n            i++;\r\n            while (tokens[i]) {\r\n                const t = tokens[i];\r\n                i++;\r\n                if (t.type === ')') {\r\n                    break;\r\n                }\r\n                if (t.type === 'func') {\r\n                    isFuncPointer = true;\r\n                }\r\n                else if (t.type !== '|' && t.type !== 'comma') {\r\n                    if (isFuncPointer) {\r\n                        t.funcPointer = true;\r\n                        isFuncPointer = false;\r\n                    }\r\n                    args.push(t);\r\n                    if (!keys[t.value]) {\r\n                        keys[t.value] = [];\r\n                    }\r\n                    keys[t.value].push(t.josi);\r\n                }\r\n            }\r\n            const varnames = [];\r\n            const funcPointers = [];\r\n            const result = [];\r\n            const already = {};\r\n            for (const arg of args) {\r\n                if (!already[arg.value]) {\r\n                    const josi = keys[arg.value];\r\n                    result.push(josi);\r\n                    varnames.push(arg.value);\r\n                    if (arg.funcPointer) {\r\n                        funcPointers.push(arg.value);\r\n                    }\r\n                    else {\r\n                        funcPointers.push(null);\r\n                    }\r\n                    already[arg.value] = true;\r\n                }\r\n            }\r\n            return [result, varnames, funcPointers];\r\n        };\r\n        // トークンを一つずつ確認\r\n        while (i < tokens.length) {\r\n            // タイプの置換\r\n            const t = tokens[i];\r\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\r\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\r\n                t.josi = 'には';\r\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\r\n                i++;\r\n                continue;\r\n            }\r\n            // N回をN|回に置換\r\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\r\n                if (t.value.match(/回$/)) {\r\n                    t.value = t.value.substring(0, t.value.length - 1);\r\n                    // N回を挿入\r\n                    if (!t.endOffset) {\r\n                        t.endOffset = 1;\r\n                    }\r\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\r\n                    tokens.splice(i + 1, 0, kai);\r\n                    t.endOffset--;\r\n                    i++;\r\n                }\r\n            }\r\n            // 予約語の置換\r\n            if (t.type === 'word' && reservedWords[t.value]) {\r\n                t.type = reservedWords[t.value];\r\n                if (t.value === 'そう') {\r\n                    t.value = 'それ';\r\n                }\r\n            }\r\n            // 関数定義の確認\r\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\r\n                i++;\r\n                continue;\r\n            }\r\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\r\n            let isMumei = true;\r\n            let prevToken = { type: 'eol' };\r\n            if (i >= 1) {\r\n                prevToken = tokens[i - 1];\r\n            }\r\n            if (prevToken.type === 'eol') {\r\n                isMumei = false;\r\n            }\r\n            // 関数名や引数を得る\r\n            const defToken = t;\r\n            i++; // skip \"●\" or \"関数\"\r\n            let josi = [];\r\n            let varnames = [];\r\n            let funcPointers = [];\r\n            let funcName = '';\r\n            let funcNameToken = null;\r\n            // 関数名の前に引数定義\r\n            if (tokens[i] && tokens[i].type === '(') {\r\n                [josi, varnames, funcPointers] = readArgs();\r\n            }\r\n            // 関数名を得る\r\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\r\n                funcNameToken = tokens[i++];\r\n                funcName = funcNameToken.value;\r\n            }\r\n            // 関数名の後で引数定義\r\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\r\n                [josi, varnames, funcPointers] = readArgs();\r\n            }\r\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\r\n            // 無名関数は登録しないように気をつける\r\n            if (funcName !== '' && funcNameToken) {\r\n                const modName = NakoLexer.filenameToModName(t.file);\r\n                funcName = modName + '__' + funcName;\r\n                if (funcName in funclist) { // 関数の二重定義を警告\r\n                    // main__は省略 #1223\r\n                    const dispName = funcName.replace(/^main__/, '');\r\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\r\n                }\r\n                funcNameToken.value = funcName;\r\n                funclist[funcName] = {\r\n                    type: 'func',\r\n                    josi,\r\n                    fn: null,\r\n                    asyncFn: false,\r\n                    varnames,\r\n                    funcPointers\r\n                };\r\n            }\r\n            // 無名関数のために\r\n            defToken.meta = {\r\n                type: 'func',\r\n                josi,\r\n                varnames,\r\n                funcPointers\r\n            };\r\n        }\r\n    }\r\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\r\n    splitStringEx(code) {\r\n        /** @type {string[]} */\r\n        const list = [];\r\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\r\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\r\n        const arr = code.split(/[{｛]/);\r\n        list.push(arr[0]);\r\n        for (const s of arr.slice(1)) {\r\n            const end = s.replace('｝', '}').indexOf('}');\r\n            if (end === -1) {\r\n                return null;\r\n            }\r\n            list.push(s.slice(0, end), s.slice(end + 1));\r\n        }\r\n        return list;\r\n    }\r\n    _replaceWord(tokens) {\r\n        let comment = [];\r\n        let i = 0;\r\n        const getLastType = () => {\r\n            if (i <= 0) {\r\n                return 'eol';\r\n            }\r\n            return tokens[i - 1].type;\r\n        };\r\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main.nako3';\r\n        while (i < tokens.length) {\r\n            const t = tokens[i];\r\n            // モジュール名の変更に対応\r\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\r\n                modSelf = tokens[i - 1].value;\r\n            }\r\n            // 関数を強制的に置換( word => func )\r\n            if (t.type === 'word' && t.value !== 'それ') {\r\n                // 関数を変換\r\n                const funcName = t.value;\r\n                if (funcName.indexOf('__') < 0) {\r\n                    // 自身のモジュール名を検索\r\n                    const gname1 = `${modSelf}__${funcName}`;\r\n                    const gfo1 = this.funclist[gname1];\r\n                    if (gfo1 && gfo1.type === 'func') {\r\n                        t.type = 'func';\r\n                        t.meta = gfo1;\r\n                        t.value = gname1;\r\n                        continue;\r\n                    }\r\n                    // モジュール関数を置換\r\n                    for (const mod of this.modList) {\r\n                        const gname = `${mod}__${funcName}`;\r\n                        const gfo = this.funclist[gname];\r\n                        if (gfo && gfo.type === 'func') {\r\n                            t.type = 'func';\r\n                            t.meta = gfo;\r\n                            t.value = gname;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (t.type === 'func') {\r\n                        continue;\r\n                    }\r\n                }\r\n                const fo = this.funclist[funcName];\r\n                if (fo && fo.type === 'func') {\r\n                    t.type = 'func';\r\n                    t.meta = fo;\r\n                }\r\n            }\r\n            // 数字につくマイナス記号を判定\r\n            // (ng) 5 - 3 || word - 3\r\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\r\n            if (t.type === '-' && tokens[i + 1] && tokens[i + 1].type === 'number') {\r\n                // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\r\n                const ltype = getLastType();\r\n                if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\r\n                    tokens.splice(i, 1); // remove '-'\r\n                    tokens[i].value *= -1;\r\n                }\r\n            }\r\n            // 助詞の「は」を = に展開\r\n            if (t.josi === undefined) {\r\n                t.josi = '';\r\n            }\r\n            if (t.josi === 'は') {\r\n                if (!t.rawJosi) {\r\n                    t.rawJosi = t.josi;\r\n                }\r\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\r\n                tokens.splice(i + 1, 0, {\r\n                    type: 'eq',\r\n                    indent: t.indent,\r\n                    line: t.line,\r\n                    column: t.column,\r\n                    file: t.file,\r\n                    startOffset,\r\n                    endOffset: t.endOffset,\r\n                    josi: '',\r\n                    rawJosi: '',\r\n                    value: undefined\r\n                });\r\n                i += 2;\r\n                t.josi = t.rawJosi = '';\r\n                t.endOffset = startOffset;\r\n                continue;\r\n            }\r\n            // 「とは」を一つの単語にする\r\n            if (t.josi === 'とは') {\r\n                if (!t.rawJosi) {\r\n                    t.rawJosi = t.josi;\r\n                }\r\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\r\n                tokens.splice(i + 1, 0, {\r\n                    type: t.josi,\r\n                    indent: t.indent,\r\n                    line: t.line,\r\n                    column: t.column,\r\n                    file: t.file,\r\n                    startOffset,\r\n                    endOffset: t.endOffset,\r\n                    josi: '',\r\n                    rawJosi: '',\r\n                    value: undefined\r\n                });\r\n                t.josi = t.rawJosi = '';\r\n                t.endOffset = startOffset;\r\n                i += 2;\r\n                continue;\r\n            }\r\n            // 助詞のならばをトークンとする\r\n            if (tararebaMap[t.josi]) {\r\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\r\n                if (!t.rawJosi) {\r\n                    t.rawJosi = josi;\r\n                }\r\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\r\n                tokens.splice(i + 1, 0, {\r\n                    type: 'ならば',\r\n                    value: josi,\r\n                    indent: t.indent,\r\n                    line: t.line,\r\n                    column: t.column,\r\n                    file: t.file,\r\n                    startOffset,\r\n                    endOffset: t.endOffset,\r\n                    josi: '',\r\n                    rawJosi: ''\r\n                });\r\n                t.josi = t.rawJosi = '';\r\n                t.endOffset = startOffset;\r\n                i += 2;\r\n                continue;\r\n            }\r\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\r\n            if (t.type === '_eol') {\r\n                tokens.splice(i, 1);\r\n                continue;\r\n            }\r\n            // コメントを飛ばす\r\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\r\n                comment.push(t.value);\r\n                tokens.splice(i, 1);\r\n                continue;\r\n            }\r\n            // 改行にコメントを埋め込む\r\n            if (t.type === 'eol') {\r\n                t.value = comment.join('/');\r\n                comment = [];\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    /**\r\n     * インデントの個数を数える\r\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\r\n     */\r\n    countIndent(src) {\r\n        let indent = 0;\r\n        for (let i = 0; i < src.length; i++) {\r\n            const c = src.charAt(i);\r\n            const n = isIndentChars(c);\r\n            if (n === 0) {\r\n                return [indent, i];\r\n            }\r\n            indent += n;\r\n        }\r\n        return [indent, src.length];\r\n    }\r\n    /**\r\n     * ソースコードをトークンに分割する\r\n     * @param src なでしこのソースコード\r\n     * @param line 先頭行の行番号\r\n     * @param filename ファイル名\r\n     */\r\n    tokenize(src, line, filename) {\r\n        const srcLength = src.length;\r\n        const result = [];\r\n        let columnCurrent;\r\n        let lineCurrent;\r\n        let column = 1;\r\n        let isDefTest = false;\r\n        let indent = 0;\r\n        // 最初にインデントを数える\r\n        const ia = this.countIndent(src);\r\n        indent = ia[0]; // インデント数\r\n        src = src.substring(ia[1]); // 読み飛ばす文字数\r\n        column += ia[1];\r\n        while (src !== '') {\r\n            let ok = false;\r\n            // 各ルールについて\r\n            for (const rule of rules) {\r\n                // 正規表現でマッチ\r\n                const m = rule.pattern.exec(src);\r\n                if (!m) {\r\n                    continue;\r\n                }\r\n                ok = true;\r\n                // 空白ならスキップ\r\n                if (rule.name === 'space') {\r\n                    column += m[0].length;\r\n                    src = src.substring(m[0].length);\r\n                    continue;\r\n                }\r\n                // マッチしたルールがコールバックを持つなら\r\n                if (rule.cbParser) {\r\n                    // コールバックを呼ぶ\r\n                    let rp;\r\n                    if (isDefTest && rule.name === 'word') {\r\n                        rp = rule.cbParser(src, false);\r\n                    }\r\n                    else {\r\n                        try {\r\n                            rp = rule.cbParser(src);\r\n                        }\r\n                        catch (e) {\r\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\r\n                        }\r\n                    }\r\n                    if (rule.name === 'string_ex') {\r\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\r\n                        const list = this.splitStringEx(rp.res);\r\n                        if (list === null) {\r\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\r\n                        }\r\n                        let offset = 0;\r\n                        for (let i = 0; i < list.length; i++) {\r\n                            const josi = (i === list.length - 1) ? rp.josi : '';\r\n                            if (i % 2 === 0) {\r\n                                result.push({\r\n                                    type: 'string',\r\n                                    value: list[i],\r\n                                    file: filename,\r\n                                    josi,\r\n                                    indent,\r\n                                    line,\r\n                                    column,\r\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\r\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\r\n                                });\r\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\r\n                                offset += list[i].length + 2;\r\n                            }\r\n                            else {\r\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\r\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\r\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\r\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\r\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\r\n                                offset += list[i].length;\r\n                            }\r\n                        }\r\n                        line += rp.numEOL;\r\n                        column += src.length - rp.src.length;\r\n                        src = rp.src;\r\n                        if (rp.numEOL > 0) {\r\n                            column = 1;\r\n                        }\r\n                        break;\r\n                    }\r\n                    columnCurrent = column;\r\n                    column += src.length - rp.src.length;\r\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\r\n                    src = rp.src;\r\n                    line += rp.numEOL;\r\n                    if (rp.numEOL > 0) {\r\n                        column = 1;\r\n                    }\r\n                    break;\r\n                }\r\n                // ソースを進める前に位置を計算\r\n                const srcOffset = srcLength - src.length;\r\n                // 値を変換する必要があるか？\r\n                let value = m[0];\r\n                if (rule.cb) {\r\n                    value = rule.cb(value);\r\n                }\r\n                // ソースを進める\r\n                columnCurrent = column;\r\n                lineCurrent = line;\r\n                column += m[0].length;\r\n                src = src.substring(m[0].length);\r\n                // 改行の時の処理\r\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\r\n                    value = line++;\r\n                    column = 1;\r\n                }\r\n                // 数値なら単位を持つか？ --- #994\r\n                if (rule.name === 'number') {\r\n                    // 単位があれば読み飛ばす\r\n                    const um = unitRE.exec(src);\r\n                    if (um) {\r\n                        src = src.substring(um[0].length);\r\n                        column += m[0].length;\r\n                    }\r\n                }\r\n                let josi = '';\r\n                if (rule.readJosi) {\r\n                    const j = josiRE.exec(src);\r\n                    if (j) {\r\n                        josi = j[0].replace(/^\\s+/, '');\r\n                        column += j[0].length;\r\n                        src = src.substring(j[0].length);\r\n                        // 助詞の直後にあるカンマを無視 #877\r\n                        if (src.charAt(0) === ',') {\r\n                            src = src.substring(1);\r\n                        }\r\n                        // 「＊＊である」なら削除 #939 #974\r\n                        if (removeJosiMap[josi]) {\r\n                            josi = '';\r\n                        }\r\n                    }\r\n                }\r\n                switch (rule.name) {\r\n                    case 'def_test': {\r\n                        isDefTest = true;\r\n                        break;\r\n                    }\r\n                    case 'eol': { // eolの処理はほかに↑と↓にある\r\n                        isDefTest = false;\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        break;\r\n                    }\r\n                }\r\n                // ここまで‰(#682) を処理\r\n                if (rule.name === 'dec_lineno') {\r\n                    line--;\r\n                    continue;\r\n                }\r\n                result.push({\r\n                    type: rule.name,\r\n                    value,\r\n                    indent,\r\n                    line: lineCurrent,\r\n                    column: columnCurrent,\r\n                    file: filename,\r\n                    josi,\r\n                    preprocessedCodeOffset: srcOffset,\r\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\r\n                });\r\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\r\n                if (rule.name === 'eol' && column === 1) {\r\n                    const ia = this.countIndent(src);\r\n                    indent = ia[0];\r\n                    column += ia[1];\r\n                    src = src.substring(ia[1]); // インデントを飛ばす\r\n                }\r\n                break;\r\n            }\r\n            if (!ok) {\r\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    // トークン配列をtype文字列に変換\r\n    static tokensToTypeStr(tokens, sep) {\r\n        const a = tokens.map((v) => {\r\n            return v.type;\r\n        });\r\n        return a.join(sep);\r\n    }\r\n    /**\r\n     * ファイル名からモジュール名へ変換\r\n     * @param {string} filename\r\n     * @returns {string}\r\n     */\r\n    static filenameToModName(filename) {\r\n        if (!filename) {\r\n            return 'main';\r\n        }\r\n        // パスがあればパスを削除\r\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\r\n        if (filename.indexOf('/') >= 0) {\r\n            const a = filename.split('/');\r\n            filename = a[a.length - 1];\r\n        }\r\n        filename = filename.replace(/\\.nako3?$/, '');\r\n        return filename;\r\n    }\r\n}\r\n","/**\r\n * nadesiko v3 parser\r\n */\r\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\r\nimport { NakoParserBase } from './nako_parser_base.mjs';\r\nimport { NakoSyntaxError } from './nako_errors.mjs';\r\nimport { NakoLexer } from './nako_lexer.mjs';\r\nimport { NewEmptyToken } from './nako_types.mjs';\r\n/**\r\n * 構文解析を行うクラス\r\n */\r\nexport class NakoParser extends NakoParserBase {\r\n    /**\r\n     * 構文解析を実行する\r\n     */\r\n    parse(tokens, filename) {\r\n        this.reset();\r\n        this.tokens = tokens;\r\n        this.modName = NakoLexer.filenameToModName(filename);\r\n        this.modList.push(this.modName);\r\n        // 解析開始\r\n        return this.startParser();\r\n    }\r\n    /** パーサーの一番最初に呼び出す構文規則 */\r\n    startParser() {\r\n        const b = this.ySentenceList();\r\n        const c = this.get();\r\n        if (c && c.type !== 'eof') {\r\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\r\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\r\n        }\r\n        return b;\r\n    }\r\n    /** 複数文を返す */\r\n    ySentenceList() {\r\n        const blocks = [];\r\n        let line = -1;\r\n        const map = this.peekSourceMap();\r\n        while (!this.isEOF()) {\r\n            const n = this.ySentence();\r\n            if (!n) {\r\n                break;\r\n            }\r\n            blocks.push(n);\r\n            if (line < 0) {\r\n                line = n.line;\r\n            }\r\n        }\r\n        if (blocks.length === 0) {\r\n            const token = this.peek() || this.tokens[0];\r\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\r\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\r\n        }\r\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\r\n    }\r\n    /** 余剰スタックのレポートを作る */\r\n    makeStackBalanceReport() {\r\n        const words = [];\r\n        this.stack.forEach((t) => {\r\n            let w = this.nodeToStr(t, { depth: 1 }, false);\r\n            if (t.josi) {\r\n                w += t.josi;\r\n            }\r\n            words.push(w);\r\n        });\r\n        const desc = words.join(',');\r\n        // 最近使った関数の使い方レポートを作る #1093\r\n        let descFunc = '';\r\n        const chA = 'A'.charCodeAt(0);\r\n        for (const f of this.recentlyCalledFunc) {\r\n            descFunc += ' - ';\r\n            let no = 0;\r\n            const josiA = f.josi;\r\n            if (josiA) {\r\n                for (const arg of josiA) {\r\n                    const ch = String.fromCharCode(chA + no);\r\n                    descFunc += ch;\r\n                    if (arg.length === 1) {\r\n                        descFunc += arg[0];\r\n                    }\r\n                    else {\r\n                        descFunc += `(${arg.join('|')})`;\r\n                    }\r\n                    no++;\r\n                }\r\n            }\r\n            descFunc += f.name + '\\n';\r\n        }\r\n        this.recentlyCalledFunc = [];\r\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\r\n    }\r\n    yEOL() {\r\n        // 行末のチェック #1009\r\n        const eol = this.get();\r\n        if (!eol) {\r\n            return null;\r\n        }\r\n        // 余剰スタックの確認\r\n        if (this.stack.length > 0) {\r\n            const report = this.makeStackBalanceReport();\r\n            throw NakoSyntaxError.fromNode(report, eol);\r\n        }\r\n        this.recentlyCalledFunc = [];\r\n        return eol; // Token to Ast\r\n    }\r\n    /** @returns {Ast | null} */\r\n    ySentence() {\r\n        const map = this.peekSourceMap();\r\n        // 最初の語句が決まっている構文\r\n        if (this.check('eol')) {\r\n            return this.yEOL();\r\n        }\r\n        if (this.check('もし')) {\r\n            return this.yIF();\r\n        }\r\n        if (this.check('後判定')) {\r\n            return this.yAtohantei();\r\n        }\r\n        if (this.check('エラー監視')) {\r\n            return this.yTryExcept();\r\n        }\r\n        if (this.check('逐次実行')) {\r\n            return this.yTikuji();\r\n        }\r\n        if (this.accept(['抜ける'])) {\r\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\r\n        }\r\n        if (this.accept(['続ける'])) {\r\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\r\n        }\r\n        if (this.accept(['require', 'string', '取込'])) {\r\n            return this.yRequire();\r\n        }\r\n        if (this.accept(['not', '非同期モード'])) {\r\n            return this.yASyncMode();\r\n        }\r\n        if (this.accept(['DNCLモード'])) {\r\n            return this.yDNCLMode(1);\r\n        }\r\n        if (this.accept(['DNCL2モード'])) {\r\n            return this.yDNCLMode(2);\r\n        }\r\n        if (this.accept(['not', 'string', 'モード設定'])) {\r\n            return this.ySetGenMode(this.y[1].value);\r\n        }\r\n        // 関数呼び出し演算子\r\n        if (this.check2(['func', '←'])) {\r\n            const word = this.get() || NewEmptyToken();\r\n            throw NakoSyntaxError.fromNode(`関数代入演算子『←』は廃止されました。『${word.value}←』の部分。`, word);\r\n        }\r\n        if (this.check2(['func', 'eq'])) {\r\n            const word = this.get() || NewEmptyToken();\r\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\r\n        }\r\n        // 先読みして初めて確定する構文\r\n        if (this.accept([this.ySpeedMode])) {\r\n            return this.y[0];\r\n        }\r\n        if (this.accept([this.yPerformanceMonitor])) {\r\n            return this.y[0];\r\n        }\r\n        if (this.accept([this.yLet])) {\r\n            return this.y[0];\r\n        }\r\n        if (this.accept([this.yDefTest])) {\r\n            return this.y[0];\r\n        }\r\n        if (this.accept([this.yDefFunc])) {\r\n            return this.y[0];\r\n        }\r\n        // 関数呼び出しの他、各種構文の実装\r\n        if (this.accept([this.yCall])) {\r\n            const c1 = this.y[0];\r\n            if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\r\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\r\n                    const report = this.makeStackBalanceReport();\r\n                    throw NakoSyntaxError.fromNode(report, c1);\r\n                }\r\n                const c2 = this.ySentence();\r\n                if (c2 !== null) {\r\n                    return {\r\n                        type: 'block',\r\n                        block: [c1, c2],\r\n                        josi: c2.josi,\r\n                        ...map,\r\n                        end: this.peekSourceMap()\r\n                    };\r\n                }\r\n            }\r\n            return c1;\r\n        }\r\n        return null;\r\n    }\r\n    /** @returns {Ast} */\r\n    yASyncMode() {\r\n        const map = this.peekSourceMap();\r\n        this.genMode = '非同期モード';\r\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\r\n    }\r\n    /** set DNCL mode */\r\n    yDNCLMode(ver) {\r\n        const map = this.peekSourceMap();\r\n        if (ver === 1) {\r\n            // 配列インデックスは1から\r\n            this.arrayIndexFrom = 1;\r\n            // 配列アクセスをJSと逆順で指定する\r\n            this.flagReverseArrayIndex = true;\r\n        }\r\n        else {\r\n            // ver2はPythonに近いとのこと\r\n        }\r\n        // 配列代入時自動で初期化チェックする\r\n        this.flagCheckArrayInit = true;\r\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\r\n    }\r\n    /** @returns {Ast} */\r\n    ySetGenMode(mode) {\r\n        const map = this.peekSourceMap();\r\n        this.genMode = mode;\r\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\r\n    }\r\n    /** @returns {Ast} */\r\n    yRequire() {\r\n        const nameToken = this.y[1];\r\n        const filename = nameToken.value;\r\n        const modName = NakoLexer.filenameToModName(filename);\r\n        if (this.modList.indexOf(modName) < 0) {\r\n            // 優先度が最も高いのは modList[0]\r\n            // [memo] モジュールの検索優先度は、下に書くほど高くなる\r\n            const modSelf = this.modList.shift();\r\n            if (modSelf) {\r\n                this.modList.unshift(modName);\r\n                this.modList.unshift(modSelf);\r\n            }\r\n        }\r\n        return {\r\n            type: 'require',\r\n            value: filename,\r\n            josi: '',\r\n            ...this.peekSourceMap(),\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast} */\r\n    yBlock() {\r\n        const map = this.peekSourceMap();\r\n        const blocks = [];\r\n        if (this.check('ここから')) {\r\n            this.get();\r\n        }\r\n        while (!this.isEOF()) {\r\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\r\n                break;\r\n            }\r\n            if (!this.accept([this.ySentence])) {\r\n                break;\r\n            }\r\n            blocks.push(this.y[0]);\r\n        }\r\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\r\n    }\r\n    yDefFuncReadArgs() {\r\n        if (!this.check('(')) {\r\n            return null;\r\n        }\r\n        const a = [];\r\n        this.get(); // skip '('\r\n        while (!this.isEOF()) {\r\n            if (this.check(')')) {\r\n                this.get(); // skip ''\r\n                break;\r\n            }\r\n            const t = this.get();\r\n            if (t) {\r\n                a.push(t);\r\n            } // Token to Ast\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    yDefTest() {\r\n        return this.yDef('def_test');\r\n    }\r\n    yDefFunc() {\r\n        return this.yDef('def_func');\r\n    }\r\n    /** ユーザー関数の定義 */\r\n    yDef(type) {\r\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\r\n            return null;\r\n        }\r\n        const map = this.peekSourceMap();\r\n        const def = this.get(); // ●\r\n        if (!def) {\r\n            return null;\r\n        }\r\n        let defArgs = [];\r\n        if (this.check('(')) {\r\n            defArgs = this.yDefFuncReadArgs() || [];\r\n        } // // lexerでも解析しているが再度詳しく\r\n        const funcName = this.get();\r\n        if (!funcName || funcName.type !== 'func') {\r\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\r\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\r\n        }\r\n        if (this.check('(')) {\r\n            // 関数引数の二重定義\r\n            if (defArgs.length > 0) {\r\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\r\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\r\n            }\r\n            defArgs = this.yDefFuncReadArgs() || [];\r\n        }\r\n        if (this.check('とは')) {\r\n            this.get();\r\n        }\r\n        let block = null;\r\n        let multiline = false;\r\n        let asyncFn = false;\r\n        if (this.check('ここから')) {\r\n            multiline = true;\r\n        }\r\n        if (this.check('eol')) {\r\n            multiline = true;\r\n        }\r\n        try {\r\n            this.funcLevel++;\r\n            this.usedAsyncFn = false;\r\n            // ローカル変数を生成\r\n            const backupLocalvars = this.localvars;\r\n            this.localvars = { 'それ': { type: 'var', value: '' } };\r\n            if (multiline) {\r\n                this.saveStack();\r\n                // 関数の引数をローカル変数として登録する\r\n                for (const arg of defArgs) {\r\n                    const fnName = (arg.value) ? arg.value + '' : '';\r\n                    this.localvars[fnName] = { 'type': 'var', 'value': '' };\r\n                }\r\n                block = this.yBlock();\r\n                if (this.check('ここまで')) {\r\n                    this.get();\r\n                }\r\n                else {\r\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\r\n                }\r\n                this.loadStack();\r\n            }\r\n            else {\r\n                this.saveStack();\r\n                block = this.ySentence();\r\n                this.loadStack();\r\n            }\r\n            this.funcLevel--;\r\n            asyncFn = this.usedAsyncFn;\r\n            this.localvars = backupLocalvars;\r\n        }\r\n        catch (err) {\r\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\r\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\r\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\r\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\r\n        }\r\n        return {\r\n            type,\r\n            name: funcName,\r\n            args: defArgs,\r\n            block: block || [],\r\n            asyncFn,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yIFCond() {\r\n        const map = this.peekSourceMap();\r\n        let a = this.yGetArg();\r\n        if (!a) {\r\n            return null;\r\n        }\r\n        // console.log('@@yIFCond=', a)\r\n        // チェック : Aならば\r\n        if (a.josi === 'ならば') {\r\n            return a;\r\n        }\r\n        if (a.josi === 'でなければ') {\r\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\r\n            return a;\r\n        }\r\n        // チェック : AがBならば --- 「関数B(A)」のとき\r\n        if ((a.josi !== '') && (this.check('func'))) {\r\n            // もし文で関数呼び出しがある場合\r\n            this.stack.push(a);\r\n            a = this.yCall();\r\n        }\r\n        else \r\n        // チェック : AがBならば --- 「A = B」のとき\r\n        if (a.josi === 'が') {\r\n            const tmpI = this.index;\r\n            const b = this.yGetArg();\r\n            if (!b) {\r\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\r\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\r\n            }\r\n            if (this.check('ならば')) {\r\n                const naraba = this.get() || { 'value': 'ならば' };\r\n                b.josi = naraba.value;\r\n            }\r\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\r\n                return {\r\n                    type: 'op',\r\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\r\n                    left: a,\r\n                    right: b,\r\n                    josi: '',\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n            this.index = tmpI;\r\n        }\r\n        // もし文で追加の関数呼び出しがある場合\r\n        if (!this.check('ならば')) {\r\n            this.stack.push(a);\r\n            a = this.yCall();\r\n        }\r\n        // (ならば|でなければ)を確認\r\n        if (!this.check('ならば')) {\r\n            const smap = a || { type: '?', ...map };\r\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\r\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\r\n        }\r\n        const naraba = this.get();\r\n        // 否定形のチェック\r\n        if (naraba && naraba.value === 'でなければ') {\r\n            a = {\r\n                type: 'not',\r\n                value: a,\r\n                josi: '',\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        return a;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yIF() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('もし')) {\r\n            return null;\r\n        }\r\n        const mosi = this.get(); // skip もし\r\n        if (mosi == null) {\r\n            return null;\r\n        }\r\n        while (this.check('comma')) {\r\n            this.get();\r\n        } // skip comma\r\n        let cond = null;\r\n        try {\r\n            cond = this.yIFCond();\r\n        }\r\n        catch (err) {\r\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\r\n        }\r\n        if (cond === null) {\r\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\r\n        }\r\n        let trueBlock = null;\r\n        let falseBlock = null;\r\n        let tanbun = false;\r\n        // True Block\r\n        if (this.check('eol')) {\r\n            trueBlock = this.yBlock();\r\n        }\r\n        else {\r\n            trueBlock = this.ySentence();\r\n            tanbun = true;\r\n        }\r\n        // skip EOL\r\n        while (this.check('eol')) {\r\n            this.get();\r\n        }\r\n        // Flase Block\r\n        if (this.check('違えば')) {\r\n            this.get(); // skip 違えば\r\n            while (this.check('comma')) {\r\n                this.get();\r\n            }\r\n            if (this.check('eol')) {\r\n                falseBlock = this.yBlock();\r\n            }\r\n            else {\r\n                falseBlock = this.ySentence();\r\n                tanbun = true;\r\n            }\r\n        }\r\n        if (tanbun === false) {\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', mosi);\r\n            }\r\n        }\r\n        return {\r\n            type: 'if',\r\n            expr: cond || [],\r\n            block: trueBlock || [],\r\n            false_block: falseBlock || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    ySpeedMode() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check2(['string', '実行速度優先'])) {\r\n            return null;\r\n        }\r\n        const optionNode = this.get();\r\n        this.get();\r\n        let val = '';\r\n        if (optionNode && optionNode.value) {\r\n            val = optionNode.value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\r\n        for (const name of val.split('/')) {\r\n            // 全て有効化\r\n            if (name === '全て') {\r\n                for (const k of Object.keys(options)) {\r\n                    options[k] = true;\r\n                }\r\n                break;\r\n            }\r\n            // 個別に有効化\r\n            if (Object.keys(options).includes(name)) {\r\n                options[name] = true;\r\n            }\r\n            else {\r\n                // 互換性を考えて、警告に留める。\r\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\r\n            }\r\n        }\r\n        let multiline = false;\r\n        if (this.check('ここから')) {\r\n            this.get();\r\n            multiline = true;\r\n        }\r\n        else if (this.check('eol')) {\r\n            multiline = true;\r\n        }\r\n        let block = null;\r\n        if (multiline) {\r\n            block = this.yBlock();\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n        }\r\n        else {\r\n            block = this.ySentence();\r\n        }\r\n        return {\r\n            type: 'speed_mode',\r\n            options,\r\n            block: block || [],\r\n            josi: '',\r\n            ...map\r\n        };\r\n    }\r\n    yPerformanceMonitor() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\r\n            return null;\r\n        }\r\n        const optionNode = this.get();\r\n        if (!optionNode) {\r\n            return null;\r\n        }\r\n        this.get();\r\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\r\n        for (const name of optionNode.value.split('/')) {\r\n            // 全て有効化\r\n            if (name === '全て') {\r\n                for (const k of Object.keys(options)) {\r\n                    options[k] = true;\r\n                }\r\n                break;\r\n            }\r\n            // 個別に有効化\r\n            if (Object.keys(options).includes(name)) {\r\n                options[name] = true;\r\n            }\r\n            else {\r\n                // 互換性を考えて、警告に留める。\r\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\r\n            }\r\n        }\r\n        let multiline = false;\r\n        if (this.check('ここから')) {\r\n            this.get();\r\n            multiline = true;\r\n        }\r\n        else if (this.check('eol')) {\r\n            multiline = true;\r\n        }\r\n        let block = null;\r\n        if (multiline) {\r\n            block = this.yBlock();\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n        }\r\n        else {\r\n            block = this.ySentence();\r\n        }\r\n        return {\r\n            type: 'performance_monitor',\r\n            options,\r\n            block: block || [],\r\n            josi: '',\r\n            ...map\r\n        };\r\n    }\r\n    /** (非推奨) 「逐次実行」構文 @returns {Ast | null} */\r\n    yTikuji() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('逐次実行')) {\r\n            return null;\r\n        }\r\n        const tikuji = this.getCur(); // skip 逐次実行\r\n        this.logger.warn('『逐次実行』構文の使用は非推奨になりました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\r\n        const blocks = [];\r\n        let errorBlock = null;\r\n        if (!tikuji || !this.check('eol')) {\r\n            throw NakoSyntaxError.fromNode('『逐次実行』の直後は改行が必要です。', tikuji);\r\n        }\r\n        // ブロックを読む\r\n        for (;;) {\r\n            if (this.check('ここまで')) {\r\n                break;\r\n            }\r\n            if (this.check('eol')) {\r\n                this.get(); // skip EOL\r\n                continue;\r\n            }\r\n            if (this.check2(['エラー', 'ならば'])) {\r\n                this.get(); // skip エラー\r\n                this.get(); // skip ならば\r\n                errorBlock = this.yBlock();\r\n                break;\r\n            }\r\n            let block = null;\r\n            // 「先に」「次に」句はブロック宣言 #717 (ただしブロック以外も可能)\r\n            if (this.check('先に') || this.check('次に')) {\r\n                const tugini = this.get(); // skip 先に | 次に\r\n                if (this.check('comma')) {\r\n                    this.get();\r\n                }\r\n                if (this.check('eol')) { // block\r\n                    block = this.yBlock();\r\n                    if (!this.check('ここまで')) {\r\n                        let tuginiType = '次に';\r\n                        if (tugini != null) {\r\n                            tuginiType = tugini.type;\r\n                        }\r\n                        throw NakoSyntaxError.fromNode(`『${tuginiType}』...『ここまで』を対応させてください。`, map);\r\n                    }\r\n                    this.get(); // skip 'ここまで'\r\n                }\r\n                else { // line\r\n                    block = this.ySentence();\r\n                }\r\n            }\r\n            else {\r\n                block = this.ySentence();\r\n            }\r\n            // add block\r\n            if (block != null) {\r\n                blocks.push(block);\r\n            }\r\n        }\r\n        if (!this.check('ここまで')) {\r\n            console.log(blocks, this.peek());\r\n            throw NakoSyntaxError.fromNode('『逐次実行』...『ここまで』を対応させてください。', tikuji);\r\n        }\r\n        this.get(); // skip 'ここまで'\r\n        return {\r\n            type: 'tikuji',\r\n            blocks: blocks || [],\r\n            errorBlock: errorBlock || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /**\r\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\r\n     * @param {Ast} firstValue\r\n     */\r\n    yGetArgOperator(firstValue) {\r\n        const args = [firstValue];\r\n        while (!this.isEOF()) {\r\n            // 演算子がある？\r\n            let op = this.peek();\r\n            if (op && opPriority[op.type]) {\r\n                op = this.getCur();\r\n                args.push(op); // Token to Ast\r\n                // 演算子後の値を取得\r\n                const v = this.yValue();\r\n                if (v === null) {\r\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\r\n                }\r\n                args.push(v);\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (args.length === 0) {\r\n            return null;\r\n        }\r\n        if (args.length === 1) {\r\n            return args[0];\r\n        }\r\n        return this.infixToAST(args);\r\n    }\r\n    yGetArg() {\r\n        // 値を一つ読む\r\n        const value1 = this.yValue();\r\n        if (value1 === null) {\r\n            return null;\r\n        }\r\n        // 計算式がある場合を考慮\r\n        return this.yGetArgOperator(value1);\r\n    }\r\n    infixToPolish(list) {\r\n        // 中間記法から逆ポーランドに変換\r\n        const priority = (t) => {\r\n            if (opPriority[t.type]) {\r\n                return opPriority[t.type];\r\n            }\r\n            return 10;\r\n        };\r\n        const stack = [];\r\n        const polish = [];\r\n        while (list.length > 0) {\r\n            const t = list.shift();\r\n            if (!t) {\r\n                break;\r\n            }\r\n            while (stack.length > 0) { // 優先順位を見て移動する\r\n                const sTop = stack[stack.length - 1];\r\n                if (priority(t) > priority(sTop)) {\r\n                    break;\r\n                }\r\n                const tpop = stack.pop();\r\n                if (!tpop) {\r\n                    this.logger.error('計算式に間違いがあります。', t);\r\n                    break;\r\n                }\r\n                polish.push(tpop);\r\n            }\r\n            stack.push(t);\r\n        }\r\n        // 残った要素を積み替える\r\n        while (stack.length > 0) {\r\n            const t = stack.pop();\r\n            if (t) {\r\n                polish.push(t);\r\n            }\r\n        }\r\n        return polish;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    infixToAST(list) {\r\n        if (list.length === 0) {\r\n            return null;\r\n        }\r\n        // 逆ポーランドを構文木に\r\n        const josi = list[list.length - 1].josi;\r\n        const node = list[list.length - 1];\r\n        const polish = this.infixToPolish(list);\r\n        /** @type {Ast[]} */\r\n        const stack = [];\r\n        for (const t of polish) {\r\n            if (!opPriority[t.type]) { // 演算子ではない\r\n                stack.push(t);\r\n                continue;\r\n            }\r\n            const b = stack.pop();\r\n            const a = stack.pop();\r\n            if (a === undefined || b === undefined) {\r\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\r\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\r\n            }\r\n            /** @type {Ast} */\r\n            const op = {\r\n                type: 'op',\r\n                operator: t.type,\r\n                left: a,\r\n                right: b,\r\n                josi,\r\n                startOffset: a.startOffset,\r\n                endOffset: a.endOffset,\r\n                line: a.line,\r\n                column: a.column,\r\n                file: a.file\r\n            };\r\n            stack.push(op);\r\n        }\r\n        const ans = stack.pop();\r\n        if (!ans) {\r\n            return null;\r\n        }\r\n        return ans;\r\n    }\r\n    yGetArgParen(y) {\r\n        let isClose = false;\r\n        const si = this.stack.length;\r\n        while (!this.isEOF()) {\r\n            if (this.check(')')) {\r\n                isClose = true;\r\n                break;\r\n            }\r\n            const v = this.yGetArg();\r\n            if (v) {\r\n                this.pushStack(v);\r\n                if (this.check('comma')) {\r\n                    this.get();\r\n                }\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (!isClose) {\r\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\r\n        }\r\n        const a = [];\r\n        while (si < this.stack.length) {\r\n            const v = this.popStack();\r\n            if (v) {\r\n                a.unshift(v);\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yRepeatTime() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('回')) {\r\n            return null;\r\n        }\r\n        this.get(); // skip '回'\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        } // skip comma\r\n        if (this.check('繰返')) {\r\n            this.get();\r\n        } // skip 'N回、繰り返す' (#924)\r\n        let num = this.popStack([]);\r\n        let multiline = false;\r\n        let block = null;\r\n        if (num === null) {\r\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\r\n        }\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        if (this.check('ここから')) {\r\n            this.get();\r\n            multiline = true;\r\n        }\r\n        else if (this.check('eol')) {\r\n            multiline = true;\r\n        }\r\n        if (multiline) { // multiline\r\n            block = this.yBlock();\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\r\n            }\r\n        }\r\n        else {\r\n            // singleline\r\n            block = this.ySentence();\r\n        }\r\n        return {\r\n            type: 'repeat_times',\r\n            value: num,\r\n            block: block || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yWhile() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('間')) {\r\n            return null;\r\n        }\r\n        this.get(); // skip '間'\r\n        while (this.check('comma')) {\r\n            this.get();\r\n        } // skip ','\r\n        if (this.check('繰返')) {\r\n            this.get();\r\n        } // skip '繰り返す' #927\r\n        const cond = this.popStack();\r\n        if (cond === null) {\r\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\r\n        }\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        if (!this.checkTypes(['ここから', 'eol'])) {\r\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\r\n        }\r\n        const block = this.yBlock();\r\n        if (this.check('ここまで')) {\r\n            this.get();\r\n        }\r\n        return {\r\n            type: 'while',\r\n            cond,\r\n            block,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yAtohantei() {\r\n        const map = this.peekSourceMap();\r\n        if (this.check('後判定')) {\r\n            this.get();\r\n        } // skip 後判定\r\n        if (this.check('繰返')) {\r\n            this.get();\r\n        } // skip 繰り返す\r\n        if (this.check('ここから')) {\r\n            this.get();\r\n        }\r\n        const block = this.yBlock();\r\n        if (this.check('ここまで')) {\r\n            this.get();\r\n        }\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        let cond = this.yGetArg(); // 条件\r\n        let bUntil = false;\r\n        const t = this.peek();\r\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\r\n            this.get(); // skip なるまで\r\n            bUntil = true;\r\n        }\r\n        if (this.check('間')) {\r\n            this.get();\r\n        } // skip 間\r\n        if (bUntil) { // 条件を反転する\r\n            cond = {\r\n                type: 'not',\r\n                value: cond,\r\n                josi: '',\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        return {\r\n            type: 'atohantei',\r\n            cond: cond || [],\r\n            block,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yFor() {\r\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\r\n        const map = this.peekSourceMap();\r\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\r\n            // pass\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        const kurikaesu = this.getCur(); // skip 繰り返す\r\n        // スタックに(増や|減ら)してがある？\r\n        const incdec = this.stack.pop();\r\n        if (incdec) {\r\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\r\n                if (incdec.value === '増') {\r\n                    flagDown = false;\r\n                }\r\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\r\n            }\r\n            else {\r\n                // 普通の繰り返しの場合\r\n                this.stack.push(incdec); // 違ったので改めて追加\r\n            }\r\n        }\r\n        let vInc = null;\r\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\r\n            vInc = this.popStack(['ずつ']);\r\n            if (kurikaesu.type === '増繰返') {\r\n                flagDown = false;\r\n            }\r\n        }\r\n        const vTo = this.popStack(['まで']);\r\n        const vFrom = this.popStack(['から']);\r\n        const word = this.popStack(['を', 'で']);\r\n        if (vFrom === null || vTo === null) {\r\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\r\n        }\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        } // skip comma\r\n        let multiline = false;\r\n        if (this.check('ここから')) {\r\n            multiline = true;\r\n            this.get();\r\n        }\r\n        else if (this.check('eol')) {\r\n            multiline = true;\r\n            this.get();\r\n        }\r\n        let block = null;\r\n        if (multiline) {\r\n            block = this.yBlock();\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\r\n            }\r\n        }\r\n        else {\r\n            block = this.ySentence();\r\n        }\r\n        return {\r\n            type: 'for',\r\n            from: vFrom,\r\n            to: vTo,\r\n            inc: vInc,\r\n            flagDown,\r\n            word,\r\n            block: block || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yReturn() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('戻る')) {\r\n            return null;\r\n        }\r\n        this.get(); // skip '戻る'\r\n        const v = this.popStack(['で', 'を']);\r\n        if (this.stack.length > 0) {\r\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\r\n        }\r\n        return {\r\n            type: 'return',\r\n            value: v,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yForEach() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('反復')) {\r\n            return null;\r\n        }\r\n        this.get(); // skip '反復'\r\n        while (this.check('comma')) {\r\n            this.get();\r\n        } // skip ','\r\n        const target = this.popStack(['を']);\r\n        const name = this.popStack(['で']);\r\n        let block = null;\r\n        let multiline = false;\r\n        if (this.check('ここから')) {\r\n            multiline = true;\r\n            this.get();\r\n        }\r\n        else if (this.check('eol')) {\r\n            multiline = true;\r\n        }\r\n        if (multiline) {\r\n            block = this.yBlock();\r\n            if (this.check('ここまで')) {\r\n                this.get();\r\n            }\r\n        }\r\n        else {\r\n            block = this.ySentence();\r\n        }\r\n        return {\r\n            type: 'foreach',\r\n            name,\r\n            target,\r\n            block: block || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** 条件分岐構文 */\r\n    ySwitch() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('条件分岐')) {\r\n            return null;\r\n        }\r\n        const joukenbunki = this.get(); // skip '条件分岐'\r\n        if (!joukenbunki) {\r\n            return null;\r\n        }\r\n        const eol = this.get(); // skip 'eol'\r\n        if (!eol) {\r\n            return null;\r\n        }\r\n        const value = this.popStack(['で']);\r\n        if (!value) {\r\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\r\n        }\r\n        if (eol.type !== 'eol') {\r\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\r\n        }\r\n        let isDefaultClause = false; // 「違えば」内かどうか\r\n        let skippedKokomade = false;\r\n        const cases = [];\r\n        while (!this.isEOF()) {\r\n            if (this.check('ここまで')) {\r\n                if (skippedKokomade) {\r\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\r\n                }\r\n                this.get(); // skip ここまで\r\n                break;\r\n            }\r\n            if (this.check('eol')) {\r\n                this.get();\r\n                continue;\r\n            }\r\n            if (isDefaultClause) {\r\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\r\n            }\r\n            // 違えば？\r\n            let cond = null;\r\n            const condToken = this.peek();\r\n            if (condToken && condToken.type === '違えば') {\r\n                // 違えば\r\n                skippedKokomade = false;\r\n                isDefaultClause = true;\r\n                cond = this.get(); // skip 違えば // Token to Ast\r\n                if (this.check('comma')) {\r\n                    this.get();\r\n                } // skip ','\r\n            }\r\n            else {\r\n                // ＊＊＊ならば\r\n                if (skippedKokomade) {\r\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\r\n                }\r\n                // 「＊＊ならば」を得る\r\n                cond = this.yValue();\r\n                if (!cond) {\r\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\r\n                }\r\n                const naraba = this.get(); // skip ならば\r\n                if (!naraba || naraba.type !== 'ならば') {\r\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\r\n                }\r\n                if (this.check('comma')) {\r\n                    this.get();\r\n                } // skip ','\r\n            }\r\n            // 条件にあったときに実行すること\r\n            const condBlock = this.yBlock();\r\n            const kokomade = this.peek();\r\n            if (kokomade && kokomade.type === 'ここまで') {\r\n                this.get(); // skip ここまで\r\n            }\r\n            else {\r\n                if (isDefaultClause) {\r\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\r\n                }\r\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\r\n                skippedKokomade = true;\r\n            }\r\n            cases.push([cond, condBlock]);\r\n        }\r\n        return {\r\n            type: 'switch',\r\n            value,\r\n            cases: cases || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** 無名関数 */\r\n    yMumeiFunc() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('def_func')) {\r\n            return null;\r\n        }\r\n        const def = this.get();\r\n        if (!def) {\r\n            return null;\r\n        }\r\n        let args = [];\r\n        // 「,」を飛ばす\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        // 関数の引数定義は省略できる\r\n        if (this.check('(')) {\r\n            args = this.yDefFuncReadArgs() || [];\r\n        }\r\n        // 「,」を飛ばす\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        // ブロックを読む\r\n        this.funcLevel++;\r\n        this.saveStack();\r\n        const block = this.yBlock();\r\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\r\n        if (!this.check('ここまで')) {\r\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\r\n        }\r\n        this.get(); // skip ここまで\r\n        this.loadStack();\r\n        this.funcLevel--;\r\n        return {\r\n            type: 'func_obj',\r\n            args,\r\n            block,\r\n            meta: def.meta,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** 代入構文 */\r\n    yDainyu() {\r\n        const map = this.peekSourceMap();\r\n        const dainyu = this.get(); // 代入\r\n        if (dainyu === null) {\r\n            return null;\r\n        }\r\n        const value = this.popStack(['を']);\r\n        const word = this.popStack(['へ', 'に']);\r\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\r\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\r\n        }\r\n        // 配列への代入\r\n        if (word.type === '配列参照') {\r\n            return {\r\n                type: 'let_array',\r\n                name: word.name,\r\n                index: word.index,\r\n                value,\r\n                josi: '',\r\n                checkInit: this.flagCheckArrayInit,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 一般的な変数への代入\r\n        const word2 = this.getVarName(word);\r\n        return {\r\n            type: 'let',\r\n            name: word2,\r\n            value,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** 定める構文 */\r\n    ySadameru() {\r\n        const map = this.peekSourceMap();\r\n        const sadameru = this.get(); // 定める\r\n        if (sadameru === null) {\r\n            return null;\r\n        }\r\n        const word = this.popStack(['を']);\r\n        const value = this.popStack(['へ', 'に', 'と']);\r\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\r\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\r\n        }\r\n        // 変数を生成する\r\n        const nameToken = this.createVar(word, true);\r\n        return {\r\n            type: 'def_local_var',\r\n            name: nameToken,\r\n            vartype: '定数',\r\n            value,\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    yIncDec() {\r\n        const map = this.peekSourceMap();\r\n        const action = this.get(); // (増やす|減らす)\r\n        if (action === null) {\r\n            return null;\r\n        }\r\n        // 『Nずつ増やして繰り返す』文か？\r\n        if (this.check('繰返')) {\r\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\r\n            return this.yFor();\r\n        }\r\n        // スタックから引数をポップ\r\n        let value = this.popStack(['だけ', '']);\r\n        if (!value) {\r\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\r\n        }\r\n        const word = this.popStack(['を']);\r\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\r\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\r\n        }\r\n        // 減らすなら-1かける\r\n        if (action.value === '減') {\r\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\r\n        }\r\n        return {\r\n            type: 'inc',\r\n            name: word,\r\n            value,\r\n            josi: action.josi,\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    yCall() {\r\n        if (this.isEOF()) {\r\n            return null;\r\n        }\r\n        // スタックに積んでいく\r\n        while (!this.isEOF()) {\r\n            if (this.check('ここから')) {\r\n                this.get();\r\n            }\r\n            // 代入\r\n            if (this.check('代入')) {\r\n                return this.yDainyu();\r\n            }\r\n            if (this.check('定める')) {\r\n                return this.ySadameru();\r\n            }\r\n            // 制御構文\r\n            if (this.check('回')) {\r\n                return this.yRepeatTime();\r\n            }\r\n            if (this.check('間')) {\r\n                return this.yWhile();\r\n            }\r\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\r\n                return this.yFor();\r\n            }\r\n            if (this.check('反復')) {\r\n                return this.yForEach();\r\n            }\r\n            if (this.check('条件分岐')) {\r\n                return this.ySwitch();\r\n            }\r\n            if (this.check('戻る')) {\r\n                return this.yReturn();\r\n            }\r\n            if (this.check('増') || this.check('減')) {\r\n                return this.yIncDec();\r\n            }\r\n            // C言語風関数\r\n            if (this.check2([['func', 'word'], '('])) { // C言語風\r\n                const cur = this.peek();\r\n                if (cur && cur.josi === '') {\r\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\r\n                    if (t) {\r\n                        const josi = t.josi || '';\r\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\r\n                            t.josi = '';\r\n                            return t; // 関数なら値とする\r\n                        }\r\n                        this.pushStack(t);\r\n                    }\r\n                    if (this.check('comma')) {\r\n                        this.get();\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n            // なでしこ式関数\r\n            if (this.check('func')) {\r\n                const r = this.yCallFunc();\r\n                if (r === null) {\r\n                    continue;\r\n                }\r\n                // 「〜する間」の形ならスタックに積む。\r\n                if (this.check('間')) {\r\n                    this.pushStack(r);\r\n                    continue;\r\n                }\r\n                // 関数呼び出しの直後に、四則演算があるか?\r\n                if (!this.checkTypes(operatorList)) {\r\n                    return r;\r\n                } // なければ関数呼び出しを戻す\r\n                // 四則演算があった場合、計算してスタックに載せる\r\n                this.pushStack(this.yGetArgOperator(r));\r\n                continue;\r\n            }\r\n            // 値のとき → スタックに載せる\r\n            const t = this.yGetArg();\r\n            if (t) {\r\n                this.pushStack(t);\r\n                continue;\r\n            }\r\n            break;\r\n        } // end of while\r\n        // 助詞が余ってしまった場合\r\n        if (this.stack.length > 0) {\r\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\r\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\r\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\r\n            // 各ノードについて、更に詳細な情報があるなら表示\r\n            for (const n of this.stack) {\r\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\r\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\r\n                if (d0 !== d1) {\r\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\r\n                    msg += `${d0}は${d1}として使われています。`;\r\n                }\r\n            }\r\n            const first = this.stack[0];\r\n            const last = this.stack[this.stack.length - 1];\r\n            this.logger.debug(msgDebug, first);\r\n            throw NakoSyntaxError.fromNode(msg, first, last);\r\n        }\r\n        return this.popStack([]);\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yCallFunc() {\r\n        const map = this.peekSourceMap();\r\n        const t = this.get();\r\n        if (!t) {\r\n            return null;\r\n        }\r\n        const f = t.meta;\r\n        const funcName = t.value;\r\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\r\n        let funcObj = null;\r\n        if (t.josi === 'には') {\r\n            try {\r\n                funcObj = this.yMumeiFunc();\r\n            }\r\n            catch (err) {\r\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\r\n            }\r\n            if (funcObj === null) {\r\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\r\n            }\r\n        }\r\n        if (!f || typeof f.josi === 'undefined') {\r\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\r\n        }\r\n        // 最近使った関数を記録\r\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\r\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\r\n        if (f && f.asyncFn) {\r\n            this.usedAsyncFn = true;\r\n        }\r\n        // 関数の引数を取り出す処理\r\n        const args = [];\r\n        let nullCount = 0;\r\n        let valueCount = 0;\r\n        for (let i = f.josi.length - 1; i >= 0; i--) {\r\n            while (true) {\r\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\r\n                let popArg = this.popStack(f.josi[i]);\r\n                if (popArg !== null) {\r\n                    valueCount++;\r\n                }\r\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\r\n                    nullCount++;\r\n                    popArg = funcObj;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\r\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\r\n                        popArg.type = 'func_pointer';\r\n                    }\r\n                    else {\r\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\r\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\r\n                    }\r\n                }\r\n                args.unshift(popArg);\r\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\r\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\r\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\r\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\r\n        }\r\n        this.usedFuncs.add(t.value);\r\n        // 関数呼び出しのAstを構築\r\n        const funcNode = {\r\n            type: 'func',\r\n            name: t.value,\r\n            args,\r\n            josi: t.josi,\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\r\n        if (funcNode.name === 'プラグイン名設定') {\r\n            if (args.length > 0 && args[0]) {\r\n                let fname = '' + args[0].value;\r\n                if (fname === 'メイン') {\r\n                    fname = '' + args[0].file;\r\n                }\r\n                this.namespaceStack.push(this.modName);\r\n                this.modName = NakoLexer.filenameToModName(fname);\r\n                this.modList.push(this.modName);\r\n            }\r\n        }\r\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\r\n            const space = this.namespaceStack.pop();\r\n            if (space) {\r\n                this.modName = space;\r\n            }\r\n        }\r\n        // 言い切りならそこで一度切る\r\n        if (t.josi === '') {\r\n            return funcNode;\r\n        }\r\n        // 「**して、**」の場合も一度切る\r\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\r\n            funcNode.josi = 'して';\r\n            return funcNode;\r\n        }\r\n        // 続き\r\n        funcNode.meta = f;\r\n        this.pushStack(funcNode);\r\n        return null;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yLet() {\r\n        const map = this.peekSourceMap();\r\n        // 通常の変数\r\n        if (this.check2(['word', 'eq'])) {\r\n            const word = this.peek();\r\n            let threw = false;\r\n            try {\r\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\r\n                    if (this.y[2].type === 'eol') {\r\n                        throw new Error('値が空です。');\r\n                    }\r\n                    if (this.check('comma')) {\r\n                        this.get();\r\n                    } // skip comma (ex) name1=val1, name2=val2\r\n                    const nameToken = this.getVarName(this.y[0]);\r\n                    const valueToken = this.y[2];\r\n                    return {\r\n                        type: 'let',\r\n                        name: nameToken,\r\n                        value: valueToken,\r\n                        ...map,\r\n                        end: this.peekSourceMap()\r\n                    };\r\n                }\r\n                else {\r\n                    threw = true;\r\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\r\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\r\n                }\r\n            }\r\n            catch (err) {\r\n                if (threw) {\r\n                    throw err;\r\n                }\r\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\r\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\r\n            }\r\n        }\r\n        // let_array ?\r\n        if (this.check2(['word', '@'])) {\r\n            const la = this.yLetArrayAt(map);\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            } // skip comma (ex) name1=val1, name2=val2\r\n            if (la) {\r\n                la.checkInit = this.flagCheckArrayInit;\r\n                return la;\r\n            }\r\n        }\r\n        if (this.check2(['word', '['])) {\r\n            const lb = this.yLetArrayBracket(map);\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            } // skip comma (ex) name1=val1, name2=val2\r\n            if (lb) {\r\n                lb.checkInit = this.flagCheckArrayInit;\r\n                return lb;\r\n            }\r\n        }\r\n        // ローカル変数定義\r\n        if (this.accept(['word', 'とは'])) {\r\n            const wordToken = this.y[0];\r\n            if (!this.checkTypes(['変数', '定数'])) {\r\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\r\n            }\r\n            const vtype = this.getCur(); // 変数 or 定数\r\n            const word = this.createVar(wordToken, vtype.type === '定数');\r\n            // 初期値がある？\r\n            let value = null;\r\n            if (this.check('eq')) {\r\n                this.get();\r\n                value = this.yCalc();\r\n            }\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            } // skip comma (ex) name1=val1, name2=val2\r\n            return {\r\n                type: 'def_local_var',\r\n                name: word,\r\n                vartype: vtype.type,\r\n                value,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // ローカル変数定義（その２）\r\n        if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\r\n            const word = this.createVar(this.y[1], false);\r\n            return {\r\n                type: 'def_local_var',\r\n                name: word,\r\n                vartype: '変数',\r\n                value: this.y[3],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\r\n            const word = this.createVar(this.y[1], true);\r\n            return {\r\n                type: 'def_local_var',\r\n                name: word,\r\n                vartype: '定数',\r\n                value: this.y[3],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 複数定数への代入 #563\r\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\r\n            const names = this.y[1];\r\n            // check array\r\n            if (names && names.value instanceof Array) {\r\n                for (const i in names.value) {\r\n                    if (names.value[i].type !== 'word') {\r\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\r\n            }\r\n            names.value = this.createVarList(names.value, true);\r\n            return {\r\n                type: 'def_local_varlist',\r\n                names: names.value,\r\n                vartype: '定数',\r\n                value: this.y[3],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 複数変数への代入 #563\r\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\r\n            const names = this.y[1];\r\n            // check array\r\n            if (names && names.value instanceof Array) {\r\n                for (const i in names.value) {\r\n                    if (names.value[i].type !== 'word') {\r\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\r\n            }\r\n            names.value = this.createVarList(names.value, false);\r\n            return {\r\n                type: 'def_local_varlist',\r\n                names: names.value,\r\n                vartype: '変数',\r\n                value: this.y[3],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 複数変数への代入 #563\r\n        if (this.check2(['word', 'comma', 'word'])) {\r\n            // 2 word\r\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\r\n                let names = [this.y[0], this.y[2]];\r\n                names = this.createVarList(names, false);\r\n                return {\r\n                    type: 'def_local_varlist',\r\n                    names,\r\n                    vartype: '変数',\r\n                    value: this.y[4],\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n            // 3 word\r\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\r\n                let names = [this.y[0], this.y[2], this.y[4]];\r\n                names = this.createVarList(names, false);\r\n                return {\r\n                    type: 'def_local_varlist',\r\n                    names,\r\n                    vartype: '変数',\r\n                    value: this.y[6],\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n            // 4 word\r\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\r\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\r\n                names = this.createVarList(names, false);\r\n                return {\r\n                    type: 'def_local_varlist',\r\n                    names,\r\n                    vartype: '変数',\r\n                    value: this.y[8],\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n            // 5 word\r\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\r\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\r\n                names = this.createVarList(names, false);\r\n                return {\r\n                    type: 'def_local_varlist',\r\n                    names,\r\n                    vartype: '変数',\r\n                    value: this.y[10],\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 配列のインデックスが1から始まる場合を考慮するか\r\n     * @param {Ast} node\r\n     * @returns\r\n     */\r\n    checkArrayIndex(node) {\r\n        // 配列が0から始まるのであればそのまま返す\r\n        if (this.arrayIndexFrom === 0) {\r\n            return node;\r\n        }\r\n        // 配列が1から始まるのであれば演算を加えて返す\r\n        return {\r\n            ...node,\r\n            'type': 'op',\r\n            'operator': '-',\r\n            'left': node,\r\n            'right': {\r\n                ...node,\r\n                'type': 'number',\r\n                'value': this.arrayIndexFrom\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * 配列のインデックスを逆順にするのを考慮するか\r\n     * @param {Ast[]| null} ary\r\n     */\r\n    checkArrayReverse(ary) {\r\n        if (!ary) {\r\n            return [];\r\n        }\r\n        if (!this.flagReverseArrayIndex) {\r\n            return ary;\r\n        }\r\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\r\n        if (ary.length <= 1) {\r\n            return ary;\r\n        }\r\n        return ary.reverse();\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yLetArrayAt(map) {\r\n        // 一次元配列\r\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: [this.checkArrayIndex(this.y[2])],\r\n                value: this.y[4],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 二次元配列\r\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\r\n                value: this.y[6],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 三次元配列\r\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\r\n                value: this.y[8],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 二次元配列(カンマ指定)\r\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\r\n                value: this.y[6],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 三次元配列(カンマ指定)\r\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\r\n                value: this.y[8],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yLetArrayBracket(map) {\r\n        // 一次元配列\r\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: [this.checkArrayIndex(this.y[2])],\r\n                value: this.y[5],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 二次元配列\r\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\r\n                value: this.y[8],\r\n                tag: '2',\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\r\n                value: this.y[7],\r\n                tag: '2',\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 三次元配列\r\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\r\n                value: this.y[11],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\r\n            return {\r\n                type: 'let_array',\r\n                name: this.getVarName(this.y[0]),\r\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\r\n                value: this.y[9],\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yCalc() {\r\n        const map = this.peekSourceMap();\r\n        if (this.check('eol')) {\r\n            return null;\r\n        }\r\n        // 値を一つ読む\r\n        const t = this.yGetArg();\r\n        if (!t) {\r\n            return null;\r\n        }\r\n        // 助詞がある？ つまり、関数呼び出しがある？\r\n        if (t.josi === '') {\r\n            return t;\r\n        } // 値だけの場合\r\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\r\n        this.pushStack(t);\r\n        const t1 = this.yCall();\r\n        if (!t1) {\r\n            return this.popStack();\r\n        }\r\n        // それが連文か確認\r\n        if (RenbunJosi.indexOf(t1.josi || '') < 0) {\r\n            return t1;\r\n        } // 連文ではない\r\n        // 連文なら右側を読んで左側とくっつける\r\n        const t2 = this.yCalc();\r\n        if (!t2) {\r\n            return t1;\r\n        }\r\n        return {\r\n            type: 'renbun',\r\n            left: t1,\r\n            right: t2,\r\n            josi: t2.josi,\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yValueKakko() {\r\n        if (!this.check('(')) {\r\n            return null;\r\n        }\r\n        const t = this.get(); // skip '('\r\n        if (!t) {\r\n            throw new Error('[System Error] check したのに get できない');\r\n        }\r\n        this.saveStack();\r\n        const v = this.yCalc() || this.ySentence();\r\n        if (v === null) {\r\n            const v2 = this.get();\r\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\r\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\r\n        }\r\n        if (!this.check(')')) {\r\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\r\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\r\n        }\r\n        const closeParent = this.get(); // skip ')'\r\n        this.loadStack();\r\n        if (closeParent) {\r\n            v.josi = closeParent.josi;\r\n        }\r\n        return v;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yValue() {\r\n        const map = this.peekSourceMap();\r\n        // カンマなら飛ばす #877\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        // プリミティブな値\r\n        if (this.checkTypes(['number', 'string'])) {\r\n            return this.getCur();\r\n        } // Token To Ast\r\n        // 丸括弧\r\n        if (this.check('(')) {\r\n            return this.yValueKakko();\r\n        }\r\n        // マイナス記号\r\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\r\n            const m = this.get(); // skip '-'\r\n            const v = this.yValue();\r\n            const josi = (v && v.josi) ? v.josi : '';\r\n            const line = (m && m.line) ? m.line : 0;\r\n            return {\r\n                type: 'op',\r\n                operator: '*',\r\n                left: { type: 'number', value: -1, line },\r\n                right: v || [],\r\n                josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // NOT\r\n        if (this.check('not')) {\r\n            this.get(); // skip '!'\r\n            const v = this.yValue();\r\n            const josi = (v && v.josi) ? v.josi : '';\r\n            return {\r\n                type: 'not',\r\n                value: v,\r\n                josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // JSON object\r\n        const a = this.yJSONArray();\r\n        if (a) {\r\n            return a;\r\n        }\r\n        const o = this.yJSONObject();\r\n        if (o) {\r\n            return o;\r\n        }\r\n        // 一語関数\r\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\r\n        if (this.check2(['func', splitType])) {\r\n            const tt = this.get();\r\n            if (!tt) {\r\n                throw new Error('[System Error] 正しく値が取れませんでした。');\r\n            }\r\n            const f = this.getVarNameRef(tt);\r\n            this.usedFuncs.add(f.value);\r\n            // 引数の個数をチェック\r\n            const meta = f.meta;\r\n            const args = [];\r\n            if (!meta) {\r\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\r\n            }\r\n            if (meta.josi && meta.josi.length === 1) {\r\n                args.push({ type: 'word', value: 'それ' });\r\n            }\r\n            else if (meta.josi && meta.josi.length >= 2) {\r\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\r\n            }\r\n            return {\r\n                type: 'func',\r\n                name: f.value,\r\n                args,\r\n                josi: f.josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // C風関数呼び出し FUNC(...)\r\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\r\n            const f = this.peek();\r\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\r\n                const ff = this.getVarNameRef(this.y[0]);\r\n                const args = this.y[2];\r\n                const funcName = ff.value;\r\n                this.usedFuncs.add(funcName);\r\n                // 引数の個数をチェック\r\n                const meta = ff.meta;\r\n                if (meta && meta.josi) {\r\n                    // 引数の個数が異なる場合\r\n                    if (meta.josi.length === args.length) {\r\n                        // ok\r\n                    }\r\n                    else if (meta.isVariableJosi) {\r\n                        // ok\r\n                    }\r\n                    else { // 引数の個数が違う\r\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\r\n                    }\r\n                }\r\n                return {\r\n                    type: 'func',\r\n                    name: funcName,\r\n                    args,\r\n                    josi: this.y[3].josi,\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n            }\r\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\r\n        }\r\n        // 関数呼び出し演算子(core #83)で廃止\r\n        if (this.check2(['func', '←'])) {\r\n            throw new Error('関数呼び出し演算子は廃止されました。');\r\n        }\r\n        // 無名関数(関数オブジェクト)\r\n        if (this.check('def_func')) {\r\n            return this.yMumeiFunc();\r\n        }\r\n        // 変数\r\n        const word = this.yValueWord();\r\n        if (word) {\r\n            return word;\r\n        }\r\n        // その他\r\n        return null;\r\n    }\r\n    yValueWordGetIndex(ast) {\r\n        if (!ast.index) {\r\n            ast.index = [];\r\n        }\r\n        // word @ a, b, c\r\n        if (this.check('@')) {\r\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\r\n                ast.index.push(this.checkArrayIndex(this.y[1]));\r\n                ast.index.push(this.checkArrayIndex(this.y[3]));\r\n                ast.index.push(this.checkArrayIndex(this.y[5]));\r\n                ast.index = this.checkArrayReverse(ast.index);\r\n                ast.josi = this.y[5].josi;\r\n                return true;\r\n            }\r\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\r\n                ast.index.push(this.checkArrayIndex(this.y[1]));\r\n                ast.index.push(this.checkArrayIndex(this.y[3]));\r\n                ast.index = this.checkArrayReverse(ast.index);\r\n                ast.josi = this.y[3].josi;\r\n                return true;\r\n            }\r\n            if (this.accept(['@', this.yValue])) {\r\n                ast.index.push(this.checkArrayIndex(this.y[1]));\r\n                ast.josi = this.y[1].josi;\r\n                return true;\r\n            }\r\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\r\n        }\r\n        if (this.check('[')) {\r\n            if (this.accept(['[', this.yCalc, ']'])) {\r\n                ast.index.push(this.checkArrayIndex(this.y[1]));\r\n                ast.josi = this.y[2].josi;\r\n                return true;\r\n            }\r\n        }\r\n        if (this.check('[')) {\r\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\r\n                const index = [\r\n                    this.checkArrayIndex(this.y[1]),\r\n                    this.checkArrayIndex(this.y[3])\r\n                ];\r\n                ast.index = this.checkArrayReverse(index);\r\n                ast.josi = this.y[4].josi;\r\n                return true;\r\n            }\r\n        }\r\n        if (this.check('[')) {\r\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\r\n                const index = [\r\n                    this.checkArrayIndex(this.y[1]),\r\n                    this.checkArrayIndex(this.y[3]),\r\n                    this.checkArrayIndex(this.y[5])\r\n                ];\r\n                ast.index = this.checkArrayReverse(index);\r\n                ast.josi = this.y[6].josi;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yValueWord() {\r\n        const map = this.peekSourceMap();\r\n        if (this.check('word')) {\r\n            const t = this.getCur();\r\n            const word = this.getVarNameRef(t);\r\n            // word[n] || word@n\r\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\r\n                const ast = {\r\n                    type: '配列参照',\r\n                    name: word,\r\n                    index: [],\r\n                    josi: '',\r\n                    ...map,\r\n                    end: this.peekSourceMap()\r\n                };\r\n                while (!this.isEOF()) {\r\n                    if (!this.yValueWordGetIndex(ast)) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (ast.index && ast.index.length === 0) {\r\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\r\n                }\r\n                return ast;\r\n            }\r\n            return word; // Token to Ast\r\n        }\r\n        return null;\r\n    }\r\n    /** 変数を生成 */\r\n    createVar(word, isConst) {\r\n        let gname = word.value;\r\n        const typeName = isConst ? 'const' : 'var';\r\n        if (this.funcLevel === 0) {\r\n            // global ?\r\n            if (gname.indexOf('__') < 0) {\r\n                gname = this.modName + '__' + gname;\r\n            }\r\n            this.funclist[gname] = { type: typeName, value: '' };\r\n            word.value = gname;\r\n            return word;\r\n        }\r\n        else {\r\n            // local\r\n            this.localvars[gname] = { type: typeName, value: '' };\r\n            return word;\r\n        }\r\n    }\r\n    /** 変数名を検索して解決する\r\n     * @param {Ast|Token} word\r\n     * @return {Ast|Token}\r\n     */\r\n    getVarName(word) {\r\n        // check word name\r\n        const f = this.findVar(word.value);\r\n        if (f) {\r\n            if (f && f.scope === 'global') {\r\n                word.value = f.name;\r\n            }\r\n            return word;\r\n        }\r\n        // 変数が見つからない\r\n        this.createVar(word, false);\r\n        return word;\r\n    }\r\n    /** 変数名を検索して解決する */\r\n    getVarNameRef(word) {\r\n        // check word name\r\n        const f = this.findVar(word.value);\r\n        if (!f) { // 変数が見つからない\r\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\r\n                word.value = this.modName + '__' + word.value;\r\n            }\r\n        }\r\n        else if (f && f.scope === 'global') {\r\n            word.value = f.name;\r\n        }\r\n        return word;\r\n    }\r\n    /** 複数の変数名を検索して解決する */\r\n    createVarList(words, isConst) {\r\n        for (let i = 0; i < words.length; i++) {\r\n            words[i] = this.createVar(words[i], isConst);\r\n        }\r\n        return words;\r\n    }\r\n    yJSONObjectValue() {\r\n        const a = [];\r\n        const firstToken = this.peek();\r\n        if (!firstToken) {\r\n            return null;\r\n        }\r\n        while (!this.isEOF()) {\r\n            while (this.check('eol')) {\r\n                this.get();\r\n            }\r\n            if (this.check('}')) {\r\n                break;\r\n            }\r\n            if (this.accept(['word', ':', this.yCalc])) {\r\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\r\n                a.push({\r\n                    key: this.y[0],\r\n                    value: this.y[2]\r\n                });\r\n            }\r\n            else if (this.accept(['string', ':', this.yCalc])) {\r\n                a.push({\r\n                    key: this.y[0],\r\n                    value: this.y[2]\r\n                });\r\n            }\r\n            else if (this.check('word')) {\r\n                const w = this.getCur();\r\n                w.type = 'string';\r\n                a.push({\r\n                    key: w,\r\n                    value: w\r\n                });\r\n            }\r\n            else if (this.checkTypes(['string', 'number'])) {\r\n                const w = this.getCur();\r\n                a.push({\r\n                    key: w,\r\n                    value: w\r\n                });\r\n            }\r\n            else {\r\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\r\n            }\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            }\r\n        }\r\n        return a;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yJSONObject() {\r\n        const map = this.peekSourceMap();\r\n        if (this.accept(['{', '}'])) {\r\n            return {\r\n                type: 'json_obj',\r\n                value: [],\r\n                josi: this.y[1].josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\r\n            return {\r\n                type: 'json_obj',\r\n                value: this.y[1],\r\n                josi: this.y[2].josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\r\n        if (this.accept(['{', this.yJSONObjectValue])) {\r\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\r\n        }\r\n        return null;\r\n    }\r\n    yJSONArrayValue() {\r\n        if (this.check('eol')) {\r\n            this.get();\r\n        }\r\n        const v1 = this.yCalc();\r\n        if (v1 === null) {\r\n            return null;\r\n        }\r\n        if (this.check('comma')) {\r\n            this.get();\r\n        }\r\n        const a = [v1];\r\n        while (!this.isEOF()) {\r\n            if (this.check('eol')) {\r\n                this.get();\r\n            }\r\n            if (this.check(']')) {\r\n                break;\r\n            }\r\n            const v2 = this.yCalc();\r\n            if (v2 === null) {\r\n                break;\r\n            }\r\n            if (this.check('comma')) {\r\n                this.get();\r\n            }\r\n            a.push(v2);\r\n        }\r\n        return a;\r\n    }\r\n    /** @returns {Ast | null} */\r\n    yJSONArray() {\r\n        const map = this.peekSourceMap();\r\n        if (this.accept(['[', ']'])) {\r\n            return {\r\n                type: 'json_array',\r\n                value: [],\r\n                josi: this.y[1].josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\r\n            return {\r\n                type: 'json_array',\r\n                value: this.y[1],\r\n                josi: this.y[2].josi,\r\n                ...map,\r\n                end: this.peekSourceMap()\r\n            };\r\n        }\r\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\r\n        if (this.accept(['[', this.yJSONArrayValue])) {\r\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\r\n        }\r\n        return null;\r\n    }\r\n    /** エラー監視構文 */\r\n    yTryExcept() {\r\n        const map = this.peekSourceMap();\r\n        if (!this.check('エラー監視')) {\r\n            return null;\r\n        }\r\n        const kansi = this.getCur(); // skip エラー監視\r\n        const block = this.yBlock();\r\n        if (!this.check2(['エラー', 'ならば'])) {\r\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\r\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\r\n        }\r\n        this.get(); // skip エラー\r\n        this.get(); // skip ならば\r\n        const errBlock = this.yBlock();\r\n        if (this.check('ここまで')) {\r\n            this.get();\r\n        }\r\n        else {\r\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\r\n        }\r\n        return {\r\n            type: 'try_except',\r\n            block,\r\n            errBlock: errBlock || [],\r\n            josi: '',\r\n            ...map,\r\n            end: this.peekSourceMap()\r\n        };\r\n    }\r\n}\r\n","/**\r\n * nako_prepare.js\r\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\r\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\r\n */\r\nclass ReplaceHistory {\r\n    constructor(from, to, index) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.index = index;\r\n    }\r\n}\r\nclass ConvertResult {\r\n    constructor(text, sourcePosition) {\r\n        this.text = text;\r\n        this.sourcePosition = sourcePosition;\r\n    }\r\n}\r\n/**\r\n * 置換後の位置から置換前の位置へマッピングできる文字列\r\n */\r\nexport class Replace {\r\n    constructor(code) {\r\n        this.history = [];\r\n        this.code = code;\r\n    }\r\n    getText() {\r\n        return this.code;\r\n    }\r\n    replaceAll(from, to) {\r\n        while (true) {\r\n            const index = this.getText().indexOf(from);\r\n            if (index === -1) {\r\n                break;\r\n            }\r\n            if (from.length !== to.length) {\r\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\r\n            }\r\n            this.code = this.code.replace(from, to);\r\n        }\r\n    }\r\n    getSourcePosition(i) {\r\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\r\n        for (const item of this.history) {\r\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\r\n                i += item.from - item.to;\r\n            }\r\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\r\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\r\n                if (item.to >= 2 && i === item.index + item.to - 1) {\r\n                    i = item.index + item.from - 1;\r\n                }\r\n                else {\r\n                    i = item.index;\r\n                }\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n}\r\n/**\r\n * 字句解析を行う前に全角文字を半角に揃える\r\n *    [memo]\r\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\r\n *    for https://github.com/kujirahand/nadesiko3/issues/94\r\n */\r\nexport class NakoPrepare {\r\n    constructor() {\r\n        // 単純な変換テーブル\r\n        this.convertTable = new Map([\r\n            // ハイフンへの変換\r\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\r\n            // 0x2d: true, // ASCIIのハイフン\r\n            [0x2010, '-'],\r\n            [0x2011, '-'],\r\n            [0x2013, '-'],\r\n            [0x2014, '-'],\r\n            [0x2015, '-'],\r\n            [0x2212, '-'],\r\n            // チルダの変換\r\n            // 0x7e: true,\r\n            [0x02dc, '~'],\r\n            [0x02F7, '~'],\r\n            [0x2053, '~'],\r\n            [0x223c, '~'],\r\n            [0x301c, '~'],\r\n            [0xFF5E, '~'],\r\n            // スペースの変換\r\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\r\n            // 0x20: true,\r\n            [0x2000, ' '],\r\n            [0x2002, ' '],\r\n            [0x2003, ' '],\r\n            [0x2004, ' '],\r\n            [0x2005, ' '],\r\n            [0x2006, ' '],\r\n            [0x2007, ' '],\r\n            [0x2009, ' '],\r\n            [0x200A, ' '],\r\n            [0x200B, ' '],\r\n            [0x202F, ' '],\r\n            [0x205F, ' '],\r\n            [0x3000, ' '],\r\n            [0x3164, ' '],\r\n            // その他の変換\r\n            // [0x09, ' '], // TAB --> SPC\r\n            [0x203B, '#'],\r\n            [0x3002, ';'],\r\n            [0x3010, '['],\r\n            [0x3011, ']'],\r\n            // 読点は「,」に変換する (#877)\r\n            [0x3001, ','],\r\n            [0xFF0C, ','],\r\n            [0x2716, '*'],\r\n            [0x2795, '+'],\r\n            [0x2796, '-'],\r\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\r\n        ]);\r\n    }\r\n    /** 唯一のインスタンスを返す */\r\n    static getInstance() {\r\n        if (!NakoPrepare._instance) {\r\n            NakoPrepare._instance = new NakoPrepare();\r\n        }\r\n        return NakoPrepare._instance;\r\n    }\r\n    // 一文字だけ変換\r\n    /**\r\n     * @param {string} ch\r\n     */\r\n    convert1ch(ch) {\r\n        if (!ch) {\r\n            return '';\r\n        }\r\n        const c = ch.codePointAt(0) || 0;\r\n        // テーブルによる変換\r\n        const c2 = this.convertTable.get(c) || '';\r\n        if (c2) {\r\n            return c2;\r\n        }\r\n        // ASCIIエリア\r\n        if (c < 0x7F) {\r\n            return ch;\r\n        }\r\n        // 全角半角単純変換可能 --- '！' - '～'\r\n        if (c >= 0xFF01 && c <= 0xFF5E) {\r\n            const c2 = c - 0xFEE0;\r\n            return String.fromCodePoint(c2);\r\n        }\r\n        return ch;\r\n    }\r\n    /** convert code */\r\n    convert(code) {\r\n        if (!code) {\r\n            return [];\r\n        }\r\n        const src = new Replace(code);\r\n        // 改行コードを統一\r\n        src.replaceAll('\\r\\n', '\\n');\r\n        src.replaceAll('\\r', '\\n');\r\n        let flagStr = false; // 文字列リテラル内かどうか\r\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\r\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\r\n        const res = [];\r\n        let left = 0; // 現在処理中の部分文字列の左端の位置\r\n        let str = ''; // 文字列リテラルの値\r\n        // 一文字ずつ全角を半角に置換する\r\n        let i = 0;\r\n        while (i < src.getText().length) {\r\n            const c = src.getText().charAt(i);\r\n            const ch2 = src.getText().substr(i, 2);\r\n            // 文字列のとき\r\n            if (flagStr) {\r\n                if (c === endOfStr) {\r\n                    flagStr = false;\r\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\r\n                    i++;\r\n                    left = i;\r\n                    continue;\r\n                }\r\n                str += c;\r\n                i++;\r\n                continue;\r\n            }\r\n            // 絵文字制御による文字列のとき\r\n            if (flagStr2) {\r\n                if (ch2 === endOfStr) {\r\n                    flagStr2 = false;\r\n                    if (endOfStr === '＊／') {\r\n                        endOfStr = '*/';\r\n                    } // 強制変換\r\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\r\n                    i += 2;\r\n                    left = i;\r\n                    continue;\r\n                }\r\n                str += c;\r\n                i++;\r\n                continue;\r\n            }\r\n            // 文字列判定\r\n            if (c === '「') {\r\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\r\n                i++;\r\n                left = i;\r\n                flagStr = true;\r\n                endOfStr = '」';\r\n                str = '';\r\n                continue;\r\n            }\r\n            if (c === '『') {\r\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\r\n                i++;\r\n                left = i;\r\n                flagStr = true;\r\n                endOfStr = '』';\r\n                str = '';\r\n                continue;\r\n            }\r\n            if (c === '“') {\r\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\r\n                i++;\r\n                left = i;\r\n                flagStr = true;\r\n                endOfStr = '”';\r\n                str = '';\r\n                continue;\r\n            }\r\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\r\n            if (ch2 === '🌴' || ch2 === '🌿') {\r\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\r\n                i += 2;\r\n                left = i;\r\n                flagStr2 = true;\r\n                endOfStr = ch2;\r\n                str = '';\r\n                continue;\r\n            }\r\n            const c1 = this.convert1ch(c);\r\n            if (c1 === '\"' || c1 === '\\'') {\r\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\r\n                i++;\r\n                left = i;\r\n                flagStr = true;\r\n                endOfStr = c;\r\n                str = '';\r\n                continue;\r\n            }\r\n            // ラインコメントを飛ばす (#725)\r\n            if (c1 === '#') {\r\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\r\n                i++;\r\n                left = i;\r\n                flagStr = true; // 本当はコメントだけど便宜上\r\n                endOfStr = '\\n';\r\n                str = '';\r\n                continue;\r\n            }\r\n            // ラインコメントを飛ばす\r\n            if (ch2 === '//' || ch2 === '／／') {\r\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\r\n                i += 2;\r\n                left = i;\r\n                flagStr = true;\r\n                endOfStr = '\\n';\r\n                str = '';\r\n                continue;\r\n            }\r\n            // 複数行コメント内を飛ばす\r\n            if (ch2 === '／＊') {\r\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\r\n                i += 2;\r\n                left = i;\r\n                flagStr2 = true;\r\n                endOfStr = '＊／';\r\n                str = '';\r\n                continue;\r\n            }\r\n            // 複数行コメント内を飛ばす (#731)\r\n            if (ch2 === '/*') {\r\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\r\n                i += 2;\r\n                left = i;\r\n                flagStr2 = true;\r\n                endOfStr = '*/';\r\n                str = '';\r\n                continue;\r\n            }\r\n            // 変換したものを追加\r\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\r\n            i++;\r\n            left = i;\r\n        }\r\n        if (flagStr || flagStr2) {\r\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\r\n        }\r\n        return res;\r\n    }\r\n}\r\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\r\nexport function checkNakoMode(code, modeNames) {\r\n    // 先頭の256文字について調べる\r\n    code = code.substring(0, 256);\r\n    // 全角半角の揺れを吸収\r\n    code = code.replace(/(！|💡)/, '!');\r\n    // 範囲コメントを削除\r\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\r\n    // 毎文調べる\r\n    const lines = code.split(/[;。\\n]/, 30);\r\n    for (let line of lines) {\r\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\r\n        if (modeNames.indexOf(line) >= 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","/**\r\n * よく使う処理をまとめたもの\r\n */\r\nimport { NewEmptyToken } from './nako_types.mjs';\r\n/**\r\n * トークンの内容をデバッグ出力する関数\r\n * @param tokens トークンの一覧\r\n * @returns 文字列\r\n */\r\nexport function debugTokens(tokens) {\r\n    const result = [];\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const t = tokens[i];\r\n        const ftype = t.type;\r\n        const fvalue = t.value;\r\n        let s = `[${ftype}:${fvalue}]`;\r\n        if (ftype === fvalue) {\r\n            s = ftype;\r\n        }\r\n        if (ftype === 'comma') {\r\n            s = ',';\r\n        }\r\n        if (ftype === 'string') {\r\n            s = `\"${fvalue}\"`;\r\n        }\r\n        if (ftype === 'number') {\r\n            s = `(${fvalue})`;\r\n        }\r\n        if (ftype === 'word') {\r\n            s = `[word:${fvalue}]`;\r\n        }\r\n        if (!result[t.line]) {\r\n            result[t.line] = makeIndent(t.indent);\r\n        }\r\n        result[t.line] += s + t.josi + '|';\r\n    }\r\n    return result.join('\\n');\r\n}\r\nexport function makeIndent(n) {\r\n    let s = '';\r\n    for (let i = 0; i < n; i++) {\r\n        s += ' ';\r\n    }\r\n    return s;\r\n}\r\nlet lastTokenInfo = NewEmptyToken();\r\nexport function newToken(type, value, templateToken = undefined) {\r\n    if (templateToken) {\r\n        lastTokenInfo = templateToken;\r\n    }\r\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\r\n    return t;\r\n}\r\n","/** インデント構文を処理するモジュール */\r\nimport { NewEmptyToken } from './nako_types.mjs';\r\nimport { NakoIndentError } from '../src/nako_errors.mjs';\r\nimport { debugTokens, newToken } from './nako_tools.mjs';\r\nconst IS_DEBUG = false;\r\nfunction isSkipWord(t) {\r\n    if (t.type === '違えば') {\r\n        return true;\r\n    }\r\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\r\nexport function convertInlineIndent(tokens) {\r\n    //\r\n    // 0:もし、A=0ならば:\r\n    // 2:  もし、B=0ならば:\r\n    // 4:    「A=0,B=0」を表示。\r\n    // 2:  違えば:\r\n    // 4:    「A=0,B!=0」を表示。\r\n    // 5:違えば:\r\n    // 6:  「A!=0」を表示。\r\n    //\r\n    const lines = splitTokens(tokens, 'eol');\r\n    const blockIndents = [];\r\n    let checkICount = -1;\r\n    let jsonObjLevel = 0;\r\n    let jsonArrayLevel = 0;\r\n    const checkJsonSyntax = (line) => {\r\n        // JSONのオブジェクトがあるか？\r\n        line.forEach((t) => {\r\n            if (t.type === '{') {\r\n                jsonObjLevel++;\r\n            }\r\n            if (t.type === '}') {\r\n                jsonObjLevel--;\r\n            }\r\n            if (t.type === '[') {\r\n                jsonArrayLevel++;\r\n            }\r\n            if (t.type === ']') {\r\n                jsonArrayLevel--;\r\n            }\r\n        });\r\n    };\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        // 空行は飛ばす || コメント行だけの行も飛ばす\r\n        if (IsEmptyLine(line)) {\r\n            continue;\r\n        }\r\n        const leftToken = GetLeftTokens(line);\r\n        // JSONの途中であればブロックの変更は行わない\r\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\r\n            checkJsonSyntax(line);\r\n            continue;\r\n        }\r\n        // インデントの終了を確認する必要があるか？\r\n        if (checkICount >= 0) {\r\n            const lineICount = leftToken.indent;\r\n            while (checkICount >= lineICount) {\r\n                const tFirst = leftToken;\r\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\r\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\r\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\r\n                }\r\n                else {\r\n                    // ここまでを挿入する\r\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\r\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\r\n                }\r\n                blockIndents.pop();\r\n                if (blockIndents.length > 0) {\r\n                    checkICount = blockIndents[blockIndents.length - 1];\r\n                }\r\n                else {\r\n                    checkICount = -1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // JSONの途中であればブロックの変更は行わない\r\n        checkJsonSyntax(line);\r\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\r\n            continue;\r\n        }\r\n        // 末尾の「:」をチェック\r\n        const tLast = getLastTokenWithoutEOL(line);\r\n        if (tLast.type === ':') {\r\n            // 末尾の「:」を削除\r\n            lines[i] = lines[i].filter(t => t !== tLast);\r\n            checkICount = tLast.indent;\r\n            blockIndents.push(checkICount);\r\n        }\r\n    }\r\n    if (lines.length > 0 && blockIndents.length > 0) {\r\n        // トークン情報を得るため、直近のトークンを得る\r\n        let t = tokens[0];\r\n        for (let i = lines.length - 1; i >= 0; i--) {\r\n            const line = lines[i];\r\n            if (line.length > 0) {\r\n                t = line[line.length - 1];\r\n                break;\r\n            }\r\n        }\r\n        // ここまでを差し込む\r\n        for (let i = 0; i < blockIndents.length; i++) {\r\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\r\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\r\n        }\r\n    }\r\n    const result = joinTokenLines(lines);\r\n    if (IS_DEBUG) {\r\n        console.log('###', debugTokens(result));\r\n    }\r\n    return result;\r\n}\r\n/** 行ごとに分割していたトークンをくっつける */\r\nexport function joinTokenLines(lines) {\r\n    const r = [];\r\n    for (const line of lines) {\r\n        for (const t of line) {\r\n            r.push(t);\r\n        }\r\n    }\r\n    return r;\r\n}\r\nfunction getLastTokenWithoutEOL(line) {\r\n    const len = line.length;\r\n    if (len === 0) {\r\n        return NewEmptyToken('?');\r\n    }\r\n    let res = line[len - 1];\r\n    if (res.type === 'eol') {\r\n        if (len >= 2) {\r\n            res = line[len - 2];\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexport function splitTokens(tokens, delimiter) {\r\n    const result = [];\r\n    let line = [];\r\n    let kakko = 0;\r\n    for (const t of tokens) {\r\n        line.push(t);\r\n        if (t.type === '{') {\r\n            kakko++;\r\n        }\r\n        else if (t.type === '}') {\r\n            kakko--;\r\n        }\r\n        else if (kakko === 0 && t.type === delimiter) {\r\n            result.push(line);\r\n            line = [];\r\n        }\r\n    }\r\n    if (line.length > 0) {\r\n        result.push(line);\r\n    }\r\n    return result;\r\n}\r\n/** トークン行が空かどうか調べる */\r\nfunction IsEmptyLine(line) {\r\n    if (line.length === 0) {\r\n        return true;\r\n    }\r\n    for (let j = 0; j < line.length; j++) {\r\n        const ty = line[j].type;\r\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\r\n            continue;\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/** コメントを除去した最初のトークンを返す */\r\nfunction GetLeftTokens(line) {\r\n    for (let i = 0; i < line.length; i++) {\r\n        const t = line[i].type;\r\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\r\n            continue;\r\n        }\r\n        return line[i];\r\n    }\r\n    return line[0];\r\n}\r\n// インデント構文のキーワード\r\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\r\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\r\nexport function convertIndentSyntax(tokens) {\r\n    // インデント構文の変換が必要か?\r\n    if (!useIndentSynax(tokens)) {\r\n        return tokens;\r\n    }\r\n    // 『ここまで』があったらエラーを出す\r\n    for (const t of tokens) {\r\n        if (t.type === 'ここまで') {\r\n            // エラーを出す\r\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\r\n        }\r\n    }\r\n    // JSON構文のチェック\r\n    let jsonObjLevel = 0;\r\n    let jsonArrayLevel = 0;\r\n    const checkJsonSyntax = (line) => {\r\n        // JSONのオブジェクトがあるか？\r\n        line.forEach((t) => {\r\n            if (t.type === '{') {\r\n                jsonObjLevel++;\r\n            }\r\n            if (t.type === '}') {\r\n                jsonObjLevel--;\r\n            }\r\n            if (t.type === '[') {\r\n                jsonArrayLevel++;\r\n            }\r\n            if (t.type === ']') {\r\n                jsonArrayLevel--;\r\n            }\r\n        });\r\n    };\r\n    // 行ごとにトークンを分割\r\n    const blockIndents = [];\r\n    const lines = splitTokens(tokens, 'eol');\r\n    let lastI = 0;\r\n    // 各行を確認する\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        // 空行は飛ばす || コメント行だけの行も飛ばす\r\n        if (IsEmptyLine(line)) {\r\n            continue;\r\n        }\r\n        // JSON構文のチェック\r\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\r\n            checkJsonSyntax(line);\r\n            continue;\r\n        }\r\n        const leftToken = GetLeftTokens(line);\r\n        const curI = leftToken.indent;\r\n        if (curI === lastI) {\r\n            continue;\r\n        }\r\n        // ブロックの終了?\r\n        // 0: 3回\r\n        // 2:   もし、1 > 1ならば\r\n        // 4:     1を表示\r\n        // 2:   違えば\r\n        // 4:     2を表示\r\n        // 0:\r\n        // ブロックの終了?\r\n        if (lastI >= 0) {\r\n            while (lastI > curI) {\r\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\r\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\r\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\r\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\r\n                }\r\n                else {\r\n                    const t = lines[i - 1][0];\r\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\r\n                    lines[i - 1].push(newToken('eol', '\\n', t));\r\n                }\r\n                blockIndents.pop();\r\n                if (blockIndents.length > 0) {\r\n                    lastI = blockIndents[blockIndents.length - 1][0];\r\n                }\r\n                else {\r\n                    lastI = 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\r\n            continue;\r\n        }\r\n        // JSON構文のチェック\r\n        checkJsonSyntax(line);\r\n        // ブロックの開始？\r\n        if (curI > lastI) {\r\n            blockIndents.push([curI, lastI]);\r\n            // console.log('@@@push', curI)\r\n            lastI = curI;\r\n            continue;\r\n        }\r\n    }\r\n    // 末尾に「ここまで」を追加する\r\n    for (let i = 0; i < blockIndents.length; i++) {\r\n        // トークン情報を得るため、直近のトークンを得る\r\n        let t = tokens[0];\r\n        for (let i = lines.length - 1; i >= 0; i--) {\r\n            const line = lines[i];\r\n            if (line.length > 0) {\r\n                t = line[line.length - 1];\r\n                break;\r\n            }\r\n        }\r\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\r\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\r\n    }\r\n    const result = joinTokenLines(lines);\r\n    // console.log('###', debugTokens(result))\r\n    return result;\r\n}\r\nfunction useIndentSynax(tokens) {\r\n    // インデント構文が必要かチェック (最初の100個をチェック)\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        if (i > 100) {\r\n            break;\r\n        }\r\n        const t = tokens[i];\r\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","/**\r\n * DNCLに対応する構文\r\n */\r\n// import { NakoIndentError } from './nako_errors.mjs'\r\nimport { NewEmptyToken } from './nako_types.mjs';\r\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\r\n// DNCLモードのキーワード\r\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\r\n// 単純な置換チェック\r\nconst DNCL_SIMPLES = {\r\n    '←:←': ['eq', '='],\r\n    '÷:÷': ['÷÷', '÷÷'],\r\n    '{:{': ['[', '['],\r\n    '}:}': [']', ']'],\r\n    'word:を実行': ['ここまで', 'ここまで'],\r\n    'word:乱数': ['word', '乱数範囲'],\r\n    'word:表示': ['word', '連続表示']\r\n};\r\n/**\r\n * DNCLのソースコードをなでしこに変換する\r\n */\r\nexport function convertDNCL(tokens) {\r\n    if (!useDNCLmode(tokens)) {\r\n        return tokens;\r\n    }\r\n    // 一行ずつに分ける\r\n    const lines = splitTokens(tokens, 'eol');\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        if (line.length <= 1) {\r\n            continue;\r\n        } // 空行は飛ばす\r\n        // 行頭の | はただのインデント\r\n        for (let j = 0; j < line.length; j++) {\r\n            if (line[j].type === '|') {\r\n                line[j].type = 'range_comment';\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        // 後判定の繰り返しの実装のため\r\n        const t = line[0];\r\n        if (t.type === 'word' && t.value === '繰返') {\r\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\r\n        }\r\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\r\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\r\n        if (fi > 0) {\r\n            replaceAtohantei(line, fi);\r\n        }\r\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\r\n        if (fi2 > 0) {\r\n            replaceAtohantei(line, fi2);\r\n        }\r\n        // もし(条件)でないならば → もし(条件)でなければ\r\n        const nai = findTokens(line, ['word:ない']);\r\n        if (nai >= 1) {\r\n            const tt = line[nai];\r\n            if (tt.josi === 'ならば') {\r\n                line[nai - 1].josi = 'でなければ';\r\n                line.splice(nai, 1);\r\n            }\r\n        }\r\n        // 二進で表示 (255) → 二進表示(255)\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            line[ni].value = '二進表示';\r\n            line[ni].josi = '';\r\n            line.splice(ni + 1, 1);\r\n        }\r\n        // '改行なしで表示' → '連続無改行表示'\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\r\n            // なでしこの制限のため仕方なし\r\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\r\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\r\n            const t = line[ni];\r\n            t.value = '連続無改行表示';\r\n            t.josi = '';\r\n            line.splice(ni + 1, 1);\r\n        }\r\n        // 'を実行し,そうでなければ': '違えば',\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const sou = line[ni + 2];\r\n            if (sou.josi === 'でなければ') {\r\n                sou.type = '違えば';\r\n                sou.value = '違えば';\r\n                sou.josi = '';\r\n                line.splice(ni, 3, sou);\r\n                continue;\r\n            }\r\n            else if (sou.josi === 'で') {\r\n                const nakumosi = line[ni + 3];\r\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\r\n                    sou.type = '違えば';\r\n                    sou.value = '違えば';\r\n                    sou.josi = '';\r\n                    line.splice(ni, 3, sou);\r\n                    if (nakumosi.value.length > 4) {\r\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\r\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\r\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\r\n                            nakumosiToken.type = 'number';\r\n                        }\r\n                        line.splice(ni + 2, 0, nakumosiToken);\r\n                        nakumosi.value = nakumosi.value.substring(0, 4);\r\n                    }\r\n                    nakumosi.type = 'もし';\r\n                    nakumosi.value = 'もし';\r\n                    nakumosi.josi = '';\r\n                    continue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:増', 'word:ら']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '増繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:減', 'word:ら']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '減繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // を繰り返す → ここまで\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:を繰り返']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'ここまで';\r\n            fu.value = 'ここまで';\r\n            fu.josi = '';\r\n        }\r\n        // 'のすべての要素を0にする'\r\n        // 'のすべての要素に0を代入する'\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\r\n            if (ni >= 1) {\r\n                replaceAllElementV(line, ni);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        // 'のすべての値を0にする'\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\r\n            if (ni >= 1) {\r\n                replaceAllElementV(line, ni);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        // 一つずつチェック\r\n        let j = 0;\r\n        while (j < line.length) {\r\n            const t = line[j];\r\n            // 減と増の分割\r\n            if (t.type === 'word' && t.value.length >= 2) {\r\n                const c = t.value.charAt(t.value.length - 1);\r\n                if (c === '減' || c === '増') {\r\n                    t.value = t.value.substring(0, t.value.length - 1);\r\n                    t.josi = 'だけ';\r\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\r\n                }\r\n                j++;\r\n                continue;\r\n            }\r\n            j++;\r\n        }\r\n    }\r\n    // 最後に単純な置換を行う\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const t = tokens[i];\r\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\r\n        if (a !== undefined) {\r\n            t.type = a[0];\r\n            t.value = a[1];\r\n        }\r\n    }\r\n    tokens = joinTokenLines(lines);\r\n    return tokens;\r\n}\r\nfunction replaceAllElementV(line, ni) {\r\n    //\r\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\r\n    //\r\n    const t = line[ni];\r\n    line[ni - 1].josi = '';\r\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\r\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\r\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\r\n    end.josi = 'に';\r\n    const val = line[ni + 2];\r\n    val.josi = '';\r\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\r\n    times.josi = 'を';\r\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\r\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\r\n}\r\nfunction replaceAtohantei(tokens, fi) {\r\n    // `ここまで、(${r[1]})になるまでの間`\r\n    const wo = findTokens(tokens, ['word:を']);\r\n    if (wo >= 0) {\r\n        tokens[wo].type = 'ここまで';\r\n        tokens[wo].value = 'ここまで';\r\n    }\r\n    const ga = findTokens(tokens, ['word:が']);\r\n    if (ga >= 0) {\r\n        tokens[ga].type = 'ここまで';\r\n        tokens[ga].value = 'ここまで';\r\n    }\r\n    // なる:まで(fi) 実行(fi+1)\r\n    tokens[fi + 1].value = '間';\r\n}\r\nfunction findTokens(tokens, findTypeValue) {\r\n    const findA = findTypeValue.map(s => s.split(':'));\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let flag = true;\r\n        for (let j = 0; j < findA.length; j++) {\r\n            const f = findA[j];\r\n            const idx = i + j;\r\n            if (idx >= tokens.length) {\r\n                return -1;\r\n            }\r\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\r\n                continue;\r\n            }\r\n            else {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flag) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction useDNCLmode(tokens) {\r\n    // 先頭の100語調べる\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        if (i > 100) {\r\n            break;\r\n        }\r\n        const t = tokens[i];\r\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\r\n            t.type = 'DNCLモード';\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport const NakoDncl = {\r\n    convert: convertDNCL\r\n};\r\n","/**\r\n * DNCL ver2 に対応する構文\r\n */\r\n// import { NakoIndentError } from './nako_errors.mjs'\r\nimport { NewEmptyToken } from './nako_types.mjs';\r\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\r\nimport { newToken, debugTokens } from './nako_tools.mjs';\r\nconst IS_DEBUG = false;\r\nconst DNCL_ARRAY_INIT_COUNT = 30;\r\n// DNCL2モードのキーワード\r\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\r\n// 単純な置換チェック\r\nconst DNCL_SIMPLES = {\r\n    '←:←': ['eq', '='],\r\n    '÷:÷': ['÷÷', '÷÷'],\r\n    '{:{': ['[', '['],\r\n    '}:}': [']', ']'],\r\n    'word:and': ['and', 'かつ'],\r\n    'word:or': ['or', 'または'],\r\n    'word:not': ['not', '!'],\r\n    'word:乱数': ['word', '乱数範囲'],\r\n    'word:表示': ['word', '連続表示']\r\n};\r\n/**\r\n * DNCLのソースコードをなでしこに変換する\r\n */\r\nexport function convertDNCL2(tokens) {\r\n    if (!useDNCL2mode(tokens)) {\r\n        return tokens;\r\n    }\r\n    // 一行ずつに分ける\r\n    const lines = splitTokens(tokens, 'eol');\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n        if (line.length <= 1) {\r\n            continue;\r\n        } // 空行は飛ばす\r\n        // --- 制御構文の変換 ---\r\n        // もし(条件)でないならば → もし(条件)でなければ\r\n        const nai = findTokens(line, ['word:ない']);\r\n        if (nai >= 1) {\r\n            const tt = line[nai];\r\n            if (tt.josi === 'ならば') {\r\n                line[nai - 1].josi = 'でなければ';\r\n                line.splice(nai, 1);\r\n            }\r\n        }\r\n        // そうでなければ(そう|でなければ) → 違えば\r\n        for (let ni = 0; ni < line.length; ni++) {\r\n            const t = line[ni];\r\n            if (t.value === 'そう' && t.josi === 'でなければ') {\r\n                t.type = '違えば';\r\n                t.value = '違えば';\r\n                t.josi = '';\r\n            }\r\n        }\r\n        // 'を実行し,そうでなければ': '違えば',\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const sou = line[ni + 2];\r\n            if (sou.josi === 'でなければ') {\r\n                sou.type = '違えば';\r\n                sou.value = '違えば';\r\n                sou.josi = '';\r\n                line.splice(ni, 3, sou);\r\n                continue;\r\n            }\r\n            else if (sou.josi === 'で') {\r\n                const nakumosi = line[ni + 3];\r\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\r\n                    sou.type = '違えば';\r\n                    sou.value = '違えば';\r\n                    sou.josi = '';\r\n                    line.splice(ni, 3, sou);\r\n                    if (nakumosi.value.length > 4) {\r\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\r\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\r\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\r\n                            nakumosiToken.type = 'number';\r\n                        }\r\n                        line.splice(ni + 2, 0, nakumosiToken);\r\n                        nakumosi.value = nakumosi.value.substring(0, 4);\r\n                    }\r\n                    nakumosi.type = 'もし';\r\n                    nakumosi.value = 'もし';\r\n                    nakumosi.josi = '';\r\n                    continue;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:増', 'word:ら']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '増繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:減', 'word:ら']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '減繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '増繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            const fu = line[ni];\r\n            fu.type = 'word';\r\n            fu.value = '減繰返';\r\n            fu.josi = '';\r\n            line.splice(ni, 2, fu);\r\n        }\r\n        // --- 配列変数周りの変換 ---\r\n        for (let i = 0; i < line.length; i++) {\r\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\r\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\r\n                const varToken = line[i + 1];\r\n                varToken.josi = '';\r\n                const valToken = line[i + 4];\r\n                valToken.josi = '';\r\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\r\n                i += 6; // skip\r\n            }\r\n            // Hensuの|すべての|(要素を|値を)|0に|する\r\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\r\n                const varToken = line[i];\r\n                varToken.josi = '';\r\n                const valToken = line[i + 3];\r\n                valToken.josi = '';\r\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\r\n            }\r\n            // 配列変数 | xxを | 初期化する\r\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\r\n                const varToken = line[i + 1];\r\n                varToken.josi = '';\r\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\r\n            }\r\n        }\r\n        // --- その他の変換 ---\r\n        // 二進で表示 (255) → 二進表示(255)\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            line[ni].value = '二進表示';\r\n            line[ni].josi = '';\r\n            line.splice(ni + 1, 1);\r\n        }\r\n        // '改行なしで表示' → '連続無改行表示'\r\n        for (;;) {\r\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\r\n            if (ni < 0) {\r\n                break;\r\n            }\r\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\r\n            // なでしこの制限のため仕方なし\r\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\r\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\r\n            const t = line[ni];\r\n            t.value = '連続無改行表示';\r\n            t.josi = '';\r\n            line.splice(ni + 1, 1);\r\n        }\r\n        // 一つずつチェック\r\n        let j = 0;\r\n        while (j < line.length) {\r\n            const t = line[j];\r\n            // 減と増の分割\r\n            if (t.type === 'word' && t.value.length >= 2) {\r\n                const c = t.value.charAt(t.value.length - 1);\r\n                if (c === '減' || c === '増') {\r\n                    t.value = t.value.substring(0, t.value.length - 1);\r\n                    t.josi = 'だけ';\r\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\r\n                }\r\n                j++;\r\n                continue;\r\n            }\r\n            j++;\r\n        }\r\n    }\r\n    // 最後に単純な置換を行う\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        const t = tokens[i];\r\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\r\n        if (a !== undefined) {\r\n            t.type = a[0];\r\n            t.value = a[1];\r\n        }\r\n    }\r\n    tokens = joinTokenLines(lines);\r\n    if (IS_DEBUG) {\r\n        console.log('@@@---DNCL:tokens---');\r\n        console.log(debugTokens(tokens));\r\n        console.log('@@@/---DNCL:tokens---');\r\n    }\r\n    return tokens;\r\n}\r\n/**\r\n * トークンが合致するかを確認する\r\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\r\n * @param lines 差し替え\r\n * @param fromIndex 検索場所\r\n * @returns 合致したかどうか\r\n */\r\nfunction tokenEq(typeValues, lines, fromIndex) {\r\n    const check = (pattern, t) => {\r\n        if (pattern instanceof Array) {\r\n            for (let i = 0; i < pattern.length; i++) {\r\n                if (check(pattern[i], t)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        if (pattern === '*') {\r\n            return true;\r\n        }\r\n        if (pattern.indexOf(':') < 0) {\r\n            if (pattern === t.type) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        const tv = `${t.type}:${t.value}`;\r\n        if (pattern === tv) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    for (let i = 0; i < typeValues.length; i++) {\r\n        const idx = i + fromIndex;\r\n        if (idx >= lines.length) {\r\n            return false;\r\n        }\r\n        const pat = typeValues[i];\r\n        const t = lines[idx];\r\n        if (!check(pat, t)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction findTokens(tokens, findTypeValue) {\r\n    const findA = findTypeValue.map(s => s.split(':'));\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        let flag = true;\r\n        for (let j = 0; j < findA.length; j++) {\r\n            const f = findA[j];\r\n            const idx = i + j;\r\n            if (idx >= tokens.length) {\r\n                return -1;\r\n            }\r\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\r\n                continue;\r\n            }\r\n            else {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flag) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nfunction useDNCL2mode(tokens) {\r\n    // 先頭の100語調べる\r\n    for (let i = 0; i < tokens.length; i++) {\r\n        if (i > 100) {\r\n            break;\r\n        }\r\n        const t = tokens[i];\r\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\r\n            t.type = 'DNCL2モード';\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","/** prepareとtokenizeのソースマッピング */\r\nexport class SourceMappingOfTokenization {\r\n    /**\r\n       * @param {number} sourceCodeLength\r\n       * @param {PreprocessItem[]} preprocessed\r\n       */\r\n    constructor(sourceCodeLength, preprocessed) {\r\n        /** @private @readonly */\r\n        this.sourceCodeLength = sourceCodeLength;\r\n        /** @private @readonly */\r\n        this.preprocessed = preprocessed;\r\n        let i = 0;\r\n        /** @private @readonly @type {number[]} */\r\n        this.cumulativeSum = [];\r\n        for (const el of preprocessed) {\r\n            this.cumulativeSum.push(i);\r\n            i += el.text.length;\r\n        }\r\n        /** @private */\r\n        this.lastIndex = 0;\r\n        /** @private */\r\n        this.lastPreprocessedCodePosition = 0;\r\n    }\r\n    /**\r\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\r\n       * @param {number} preprocessedCodePosition\r\n       * @returns {number}\r\n       */\r\n    map(preprocessedCodePosition) {\r\n        const i = this.findIndex(preprocessedCodePosition);\r\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\r\n    }\r\n    /**\r\n       * @param {number} preprocessedCodePosition\r\n       * @returns {number}\r\n       */\r\n    findIndex(preprocessedCodePosition) {\r\n        // 連続アクセスに対する高速化\r\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\r\n            this.lastIndex = 0;\r\n        }\r\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\r\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\r\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\r\n                this.lastIndex = i;\r\n                return i;\r\n            }\r\n        }\r\n        this.lastIndex = this.preprocessed.length - 1;\r\n        return this.preprocessed.length - 1;\r\n    }\r\n}\r\nexport class SourceMappingOfIndentSyntax {\r\n    /**\r\n       * @param {string} codeAfterProcessingIndentationSyntax\r\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\r\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\r\n       */\r\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\r\n        /** @private @type {{ offset: number, len: number }[]} */\r\n        this.lines = [];\r\n        /** @private @readonly */\r\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\r\n        /** @private @readonly */\r\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\r\n        let offset = 0;\r\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\r\n            this.lines.push({ offset, len: line.length });\r\n            offset += line.length + 1;\r\n        }\r\n        /** @private */\r\n        this.lastLineNumber = 0;\r\n        /** @private */\r\n        this.lastOffset = 0;\r\n    }\r\n    /**\r\n       * @param {number | null} startOffset\r\n       * @param {number | null} endOffset\r\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\r\n       */\r\n    map(startOffset, endOffset) {\r\n        if (startOffset === null) {\r\n            return { startOffset, endOffset };\r\n        }\r\n        // 何行目かを判定\r\n        const tokenLine = this.getLineNumber(startOffset);\r\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\r\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\r\n            if (tokenLine === insertedLine) {\r\n                startOffset = null;\r\n                endOffset = null;\r\n                break;\r\n            }\r\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\r\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\r\n            if (tokenLine > insertedLine) {\r\n                // \"\\n\"の分1足す\r\n                startOffset -= this.lines[insertedLine].len + 1;\r\n                if (endOffset !== null) {\r\n                    endOffset -= this.lines[insertedLine].len + 1;\r\n                }\r\n            }\r\n        }\r\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\r\n            if (tokenLine >= deletedLine.lineNumber) {\r\n                // \"\\n\"の分1足す\r\n                if (startOffset !== null) {\r\n                    startOffset += deletedLine.len + 1;\r\n                }\r\n                if (endOffset !== null) {\r\n                    endOffset += deletedLine.len + 1;\r\n                }\r\n            }\r\n        }\r\n        return { startOffset, endOffset };\r\n    }\r\n    /**\r\n       * @param {number} offset\r\n       * @returns {number}\r\n       * @private\r\n       */\r\n    getLineNumber(offset) {\r\n        // 連続アクセスに対する高速化\r\n        if (offset < this.lastOffset) {\r\n            this.lastLineNumber = 0;\r\n        }\r\n        this.lastOffset = offset;\r\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\r\n            if (offset < this.lines[i + 1].offset) {\r\n                this.lastLineNumber = i;\r\n                return i;\r\n            }\r\n        }\r\n        this.lastLineNumber = this.lines.length - 1;\r\n        return this.lines.length - 1;\r\n    }\r\n}\r\n/** offsetから (line, column) へ変換する。 */\r\nexport class OffsetToLineColumn {\r\n    /**\r\n       * @param {string} code\r\n       */\r\n    constructor(code) {\r\n        /** @private @type {number[]} */\r\n        this.lineOffsets = [];\r\n        // 各行の先頭位置を先に計算しておく\r\n        let offset = 0;\r\n        for (const line of code.split('\\n')) {\r\n            this.lineOffsets.push(offset);\r\n            offset += line.length + 1;\r\n        }\r\n        /** @private */\r\n        this.lastLineNumber = 0;\r\n        /** @private */\r\n        this.lastOffset = 0;\r\n    }\r\n    /**\r\n       * @param {number} offset\r\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\r\n       * @returns {{ line: number, column: number }}\r\n       */\r\n    map(offset, oneBasedLineNumber) {\r\n        // 連続アクセスに対する高速化\r\n        if (offset < this.lastOffset) {\r\n            this.lastLineNumber = 0;\r\n        }\r\n        this.lastOffset = offset;\r\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\r\n            if (offset < this.lineOffsets[i + 1]) {\r\n                this.lastLineNumber = i;\r\n                return {\r\n                    line: i + (oneBasedLineNumber ? 1 : 0),\r\n                    column: offset - this.lineOffsets[i]\r\n                };\r\n            }\r\n        }\r\n        this.lastLineNumber = this.lineOffsets.length - 1;\r\n        return {\r\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\r\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\r\n        };\r\n    }\r\n}\r\n/**\r\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\r\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\r\n */\r\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\r\n    // offsetは単純に引くだけでよい\r\n    if (typeof sourceMap.startOffset === 'number') {\r\n        sourceMap.startOffset -= preCode.length;\r\n    }\r\n    if (typeof sourceMap.endOffset === 'number') {\r\n        sourceMap.endOffset -= preCode.length;\r\n    }\r\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\r\n    if (preCode !== '') {\r\n        const lines = preCode.split('\\n');\r\n        if (typeof sourceMap.line === 'number') {\r\n            sourceMap.line -= lines.length - 1;\r\n        }\r\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\r\n            sourceMap.column -= lines[lines.length - 1].length;\r\n        }\r\n    }\r\n    return sourceMap;\r\n}\r\n","/**\r\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\r\n */\r\n/**\r\n * ANSI escape code の一部\r\n */\r\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\r\n// 30 ~ 37\r\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\r\n/** @param {string} t */\r\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\r\n/**\r\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\r\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\r\n * @param {string} text\r\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\r\n */\r\nconst convertColorTextFormat = (text) => {\r\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\r\n    // eslint-disable-next-line no-control-regex\r\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\r\n    // nodeConsoleからbrowserConsoleを作る\r\n    /** @type {string[]} */\r\n    const browserConsoleStyles = [];\r\n    let consoleColor = 'inherit'; // 文字色\r\n    let consoleFontWeight = 'inherit'; // 文字の太さ\r\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\r\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\r\n    const browserConsoleText = text === noColor\r\n        ? noColor\r\n        // eslint-disable-next-line no-control-regex\r\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\r\n            const m1 = +m1str;\r\n            if (m1 === 0) {\r\n                consoleColor = 'inherit';\r\n                consoleFontWeight = 'inherit';\r\n            }\r\n            if (m1 === 1) {\r\n                consoleFontWeight = 'bold';\r\n            }\r\n            if (m1 >= 30 && m1 <= 37) {\r\n                consoleColor = colorNames[m1 - 30];\r\n            }\r\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\r\n            return '%c';\r\n        });\r\n    // nodeConsoleからhtmlを作る\r\n    let htmlColor = 'inherit'; // 文字色\r\n    let htmlFontWeight = 'inherit'; // 文字の太さ\r\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\r\n    // eslint-disable-next-line multiline-ternary\r\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\r\n        // eslint-disable-next-line no-control-regex\r\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\r\n        const m1 = +m1str;\r\n        if (m1 === 0) { // リセット\r\n            htmlColor = 'inherit';\r\n            htmlFontWeight = 'inherit';\r\n        }\r\n        if (m1 === 1) { // 太字化\r\n            htmlFontWeight = 'bold';\r\n        }\r\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\r\n            htmlColor = colorNames[m1 - 30];\r\n        }\r\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\r\n    }) + '</span>');\r\n    // 各表現を返す。\r\n    return {\r\n        noColor,\r\n        nodeConsole: text === noColor\r\n            ? noColor // textが色の情報を含まないならnoColorを返す。\r\n            : text + '\\x1b[0m',\r\n        html,\r\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\r\n    };\r\n};\r\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\r\n","/** NakoLogger */\r\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\r\nimport { NakoColors } from './nako_colors.mjs';\r\n/** ログレベル - 数字が高いほど優先度が高い。 */\r\nexport class LogLevel {\r\n    // string to level no\r\n    static fromS(levelStr) {\r\n        let level = LogLevel.trace;\r\n        switch (levelStr) {\r\n            case 'all':\r\n                level = LogLevel.all;\r\n                break;\r\n            case 'trace':\r\n                level = LogLevel.trace;\r\n                break;\r\n            case 'debug':\r\n                level = LogLevel.debug;\r\n                break;\r\n            case 'info':\r\n                level = LogLevel.info;\r\n                break;\r\n            case 'warn':\r\n                level = LogLevel.warn;\r\n                break;\r\n            case 'error':\r\n                level = LogLevel.error;\r\n                break;\r\n            case 'stdout':\r\n                level = LogLevel.stdout;\r\n                break;\r\n            default:\r\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\r\n        }\r\n        return level;\r\n    }\r\n    static toString(level) {\r\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\r\n        return levels[level];\r\n    }\r\n}\r\n// level no\r\nLogLevel.all = 0;\r\nLogLevel.trace = 1;\r\nLogLevel.debug = 2;\r\nLogLevel.info = 3;\r\nLogLevel.warn = 4;\r\nLogLevel.error = 5;\r\nLogLevel.stdout = 6;\r\n/**\r\n * エラー位置を日本語で表示する。\r\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\r\n */\r\nfunction stringifyPosition(p) {\r\n    if (!p) {\r\n        return '';\r\n    }\r\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\r\n}\r\n/**\r\n * コンパイラのログ情報を出力するためのクラス。\r\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\r\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\r\n */\r\nexport class NakoLogger {\r\n    constructor() {\r\n        this.listeners = [];\r\n        this.logs = '';\r\n        this.position = '';\r\n    }\r\n    getErrorLogs() {\r\n        return [this.logs.replace(/\\s+$/, ''), this.position];\r\n    }\r\n    clear() {\r\n        this.logs = '';\r\n        this.position = '';\r\n    }\r\n    /**\r\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\r\n     * @param levelStr\r\n     * @param callback\r\n     */\r\n    addListener(levelStr, callback) {\r\n        const level = LogLevel.fromS(levelStr);\r\n        this.listeners.push({ level, callback });\r\n    }\r\n    /**\r\n     * addListenerメソッドで設定したコールバックを取り外す。\r\n     * @param {LogListener} callback\r\n     */\r\n    removeListener(callback) {\r\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\r\n    }\r\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\r\n     * @param {string} message\r\n     * @param {Position | null} position\r\n     */\r\n    trace(message, position = null) {\r\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\r\n    }\r\n    /** 本体開発時のデバッグ情報\r\n     * @param {string} message\r\n     * @param {Position | null} position\r\n     */\r\n    debug(message, position = null) {\r\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\r\n    }\r\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\r\n     * @param {string} message\r\n     * @param {Position | null} position\r\n     */\r\n    info(message, position = null) {\r\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\r\n    }\r\n    /** ユーザープログラムのデバッグ情報（重要なもの）\r\n     * @param {string} message\r\n     * @param {Position | null} position\r\n     */\r\n    warn(message, position = null) {\r\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\r\n    }\r\n    /** エラーメッセージ\r\n     * @param {string | Error} message\r\n     * @param {Position | null} position\r\n     */\r\n    error(message, position = null) {\r\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\r\n        if (message instanceof Error && typeof message.type === 'string') {\r\n            // NakoErrorか\r\n            const etype = message.type;\r\n            switch (etype) {\r\n                case 'NakoRuntimeError':\r\n                case 'NakoError':\r\n                    if (message instanceof NakoError) {\r\n                        const e = message;\r\n                        let pos = position;\r\n                        if (pos === null || pos === undefined) {\r\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\r\n                        }\r\n                        this.sendI(LogLevel.error, e.message, pos);\r\n                        return;\r\n                    }\r\n            }\r\n        }\r\n        if (message instanceof Error) {\r\n            // 一般のエラーの場合は、messageのみ取得できる。\r\n            message = message.message;\r\n        }\r\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\r\n    }\r\n    /** RuntimeErrorを生成する */\r\n    runtimeError(error, posStr) {\r\n        const e = new NakoRuntimeError(error, posStr);\r\n        return e;\r\n    }\r\n    /** ユーザープログラムのデバッグ情報（すべて)\r\n     * @param {string} message\r\n     * @param {Position | null} position\r\n     */\r\n    stdout(message, position = null) {\r\n        this.sendI(LogLevel.stdout, `${message}`, position);\r\n    }\r\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\r\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\r\n        const i = LogLevel.fromS(levelStr);\r\n        this.sendI(i, nodeConsole, position, html, browserConsole);\r\n    }\r\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\r\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\r\n        const makeData = () => {\r\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\r\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\r\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\r\n            let style = '';\r\n            if (nodeConsole.includes('\\n')) {\r\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\r\n            }\r\n            // 各イベントリスナーが受け取るデータ\r\n            const data = {\r\n                noColor: formats.noColor,\r\n                nodeConsole: formats.nodeConsole,\r\n                browserConsole: browserConsole || formats.browserConsole,\r\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>',\r\n                level: LogLevel.toString(level),\r\n                position\r\n            };\r\n            return data;\r\n        };\r\n        // エラーならログに追加\r\n        if (level === LogLevel.error) {\r\n            const data = makeData();\r\n            this.logs += data.noColor + '\\n';\r\n            if (position && this.position !== null) {\r\n                this.position = `l${position.line}:${position.file}`;\r\n            }\r\n        }\r\n        // 登録したリスナーに通知する\r\n        for (const l of this.listeners) {\r\n            if (l.level <= level) {\r\n                const data = makeData();\r\n                l.callback(data);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NakoColors } from './nako_colors.mjs';\r\n/**\r\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\r\n */\r\nexport class NakoGlobal {\r\n    /**\r\n     * @param compiler\r\n     * @param gen\r\n     */\r\n    constructor(compiler, gen, guid = 0) {\r\n        this.guid = guid;\r\n        this.lastJSCode = '';\r\n        // ユーザーのプログラムから編集される変数\r\n        this.__locals = {};\r\n        this.__varslist = [\r\n            { ...compiler.__varslist[0] },\r\n            { ...compiler.__varslist[1] },\r\n            { ...compiler.__varslist[2] } // local [2][3][4][5] ...\r\n        ];\r\n        this.numFailures = 0;\r\n        this.index = 0;\r\n        this.nextIndex = -1;\r\n        this.__code = [];\r\n        this.__callstack = [];\r\n        this.__stack = [];\r\n        this.__labels = [];\r\n        this.__genMode = gen.genMode;\r\n        // バージョン情報の引き継ぎ\r\n        this.version = compiler.version;\r\n        this.coreVersion = compiler.coreVersion;\r\n        // PluginSystemとdestroy()から参照するため\r\n        this.__module = { ...compiler.__module }; // shallow copy\r\n        this.pluginfiles = { ...compiler.getPluginfiles() };\r\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\r\n        this.gen = gen;\r\n        // 以下のメソッドで使うため\r\n        this.logger = compiler.getLogger();\r\n        this.compiler = compiler;\r\n    }\r\n    clearLog() {\r\n        this.__varslist[0]['表示ログ'] = '';\r\n    }\r\n    get log() {\r\n        let s = this.__varslist[0]['表示ログ'];\r\n        s = s.replace(/\\s+$/, '');\r\n        return s;\r\n    }\r\n    /**\r\n     * 「ナデシコ」命令のためのメソッド\r\n     */\r\n    runEx(code, fname, opts, preCode = '') {\r\n        // スコープを共有して実行\r\n        opts.preCode = preCode;\r\n        opts.nakoGlobal = this;\r\n        return this.compiler.runSync(code, fname, opts);\r\n    }\r\n    async runAsync(code, fname, opts, preCode = '') {\r\n        // スコープを共有して実行\r\n        opts.preCode = preCode;\r\n        opts.nakoGlobal = this;\r\n        return await this.compiler.runAsync(code, fname, opts);\r\n    }\r\n    /**\r\n     * テスト実行のためのメソッド\r\n     * @param {{ name: string, f: () => void }[]} tests\r\n     */\r\n    _runTests(tests) {\r\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\r\n        let pass = 0;\r\n        let numFailures = 0;\r\n        for (const t of tests) {\r\n            try {\r\n                t.f();\r\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\r\n                pass++;\r\n            }\r\n            catch (err) {\r\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\r\n                numFailures++;\r\n            }\r\n        }\r\n        if (numFailures > 0) {\r\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\r\n        }\r\n        else {\r\n            text += `${NakoColors.color.green}成功 ${pass}件`;\r\n        }\r\n        this.numFailures = numFailures;\r\n        this.logger.stdout(text);\r\n    }\r\n    /**\r\n     * 毎プラグインの「!クリア」関数を実行\r\n     */\r\n    clearPlugins() {\r\n        // 実行している関数をすべて終了させる\r\n        // プラグインのクリア関数を呼び出す\r\n        const clearName = '!クリア';\r\n        for (const pname in this.pluginfiles) {\r\n            const po = this.__module[pname];\r\n            if (po[clearName] && po[clearName].fn) {\r\n                po[clearName].fn(this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 各種リセット処理\r\n     */\r\n    reset() {\r\n        this.clearPlugins();\r\n    }\r\n    destroy() {\r\n        this.reset();\r\n    }\r\n}\r\n","/** plugin_math */\r\nexport default {\r\n    '初期化': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            // 初期化不要\r\n        }\r\n    },\r\n    // @三角関数\r\n    'SIN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.sin(v);\r\n        }\r\n    },\r\n    'COS': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.cos(v);\r\n        }\r\n    },\r\n    'TAN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.tan(v);\r\n        }\r\n    },\r\n    'ARCSIN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.asin(v);\r\n        }\r\n    },\r\n    'ARCCOS': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.acos(v);\r\n        }\r\n    },\r\n    'ARCTAN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.atan(v);\r\n        }\r\n    },\r\n    'ATAN2': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (y, x) {\r\n            return Math.atan2(y, x);\r\n        }\r\n    },\r\n    '座標角度計算': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (XY) {\r\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\r\n        }\r\n    },\r\n    'RAD2DEG': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return v / Math.PI * 180;\r\n        }\r\n    },\r\n    'DEG2RAD': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (v / 180) * Math.PI;\r\n        }\r\n    },\r\n    '度変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return v / Math.PI * 180;\r\n        }\r\n    },\r\n    'ラジアン変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (v / 180) * Math.PI;\r\n        }\r\n    },\r\n    // @算術関数\r\n    'SIGN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\r\n        }\r\n    },\r\n    '符号': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n        fn: function (v, sys) {\r\n            return sys.__exec('SIGN', [v]);\r\n        }\r\n    },\r\n    'ABS': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.abs(a);\r\n        }\r\n    },\r\n    '絶対値': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.abs(a);\r\n        }\r\n    },\r\n    'EXP': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.exp(a);\r\n        }\r\n    },\r\n    'HYPOT': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return Math.hypot(a, b);\r\n        }\r\n    },\r\n    '斜辺': {\r\n        type: 'func',\r\n        josi: [['と'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return Math.hypot(a, b);\r\n        }\r\n    },\r\n    'LN': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.log(a);\r\n        }\r\n    },\r\n    'LOG': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.log(a);\r\n        }\r\n    },\r\n    'LOGN': {\r\n        type: 'func',\r\n        josi: [['で'], ['の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            if (a === 2) {\r\n                return Math.LOG2E * Math.log(b);\r\n            }\r\n            if (a === 10) {\r\n                return Math.LOG10E * Math.log(b);\r\n            }\r\n            return Math.log(b) / Math.log(a);\r\n        }\r\n    },\r\n    'FRAC': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return a % 1;\r\n        }\r\n    },\r\n    '小数部分': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return a % 1;\r\n        }\r\n    },\r\n    '整数部分': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.trunc(a);\r\n        }\r\n    },\r\n    '乱数': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.floor(Math.random() * a);\r\n        }\r\n    },\r\n    '乱数範囲': {\r\n        type: 'func',\r\n        josi: [['から'], ['までの', 'の']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\r\n        }\r\n    },\r\n    'SQRT': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.sqrt(a);\r\n        }\r\n    },\r\n    '平方根': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            return Math.sqrt(a);\r\n        }\r\n    },\r\n    // @数値切上切捨丸め\r\n    'ROUND': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.round(v);\r\n        }\r\n    },\r\n    '四捨五入': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.round(v);\r\n        }\r\n    },\r\n    '小数点切上': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            const base = Math.pow(10, b);\r\n            return Math.ceil(a * base) / base;\r\n        }\r\n    },\r\n    '小数点切下': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            const base = Math.pow(10, b);\r\n            return Math.floor(a * base) / base;\r\n        }\r\n    },\r\n    '小数点四捨五入': {\r\n        type: 'func',\r\n        josi: [['を'], ['で']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            const base = Math.pow(10, b);\r\n            return Math.round(a * base) / base;\r\n        }\r\n    },\r\n    'CEIL': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.ceil(v);\r\n        }\r\n    },\r\n    '切上': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.ceil(v);\r\n        }\r\n    },\r\n    'FLOOR': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.floor(v);\r\n        }\r\n    },\r\n    '切捨': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (v) {\r\n            return Math.floor(v);\r\n        }\r\n    }\r\n};\r\n","export const options = {\r\n    delimiter: ',',\r\n    eol: '\\r\\n'\r\n};\r\nexport function resetEnv() {\r\n    options.delimiter = ',';\r\n    options.eol = '\\r\\n';\r\n}\r\nexport function parse(txt, delimiter = undefined) {\r\n    // delimiter\r\n    if (delimiter === undefined) {\r\n        delimiter = options.delimiter;\r\n    }\r\n    // check txt\r\n    txt = '' + txt + '\\n';\r\n    // convert CRLF to LF, and CR to LF\r\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\r\n    // trim right\r\n    txt = txt.replace(/\\s+$/, '') + '\\n';\r\n    // set pattern\r\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\r\n    const reToDelim = new RegExp(patToDelim);\r\n    // if value is number then convert to float\r\n    const convType = function (v) {\r\n        if (typeof (v) === 'string') {\r\n            if (v.search(/^[0-9.]+$/) >= 0) {\r\n                v = parseFloat(v); // convert number\r\n            }\r\n        }\r\n        return v;\r\n    };\r\n    // parse txt\r\n    const res = [];\r\n    let cells = [];\r\n    let c = '';\r\n    while (txt !== '') {\r\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\r\n        c = txt.charAt(0);\r\n        if (c === delimiter) {\r\n            txt = txt.substring(1);\r\n            cells.push('');\r\n            continue;\r\n        }\r\n        // second check LF (#7)\r\n        if (c === '\\n') {\r\n            cells.push('');\r\n            res.push(cells);\r\n            cells = [];\r\n            txt = txt.substring(1);\r\n            continue;\r\n        }\r\n        // trim white space\r\n        txt = txt.replace(/^\\s+/, '');\r\n        c = txt.charAt(0);\r\n        // no data\r\n        if (c === delimiter) {\r\n            console.log('delimiter');\r\n            cells.push('');\r\n            txt = txt.substring(delimiter.length);\r\n            continue;\r\n        }\r\n        // written using the dialect of Excel\r\n        if (c === '=' && txt.charAt(1) === '\"') {\r\n            txt = txt.substring(1);\r\n            continue;\r\n        }\r\n        // number or simple string\r\n        if (c !== '\"') { // number or simple str\r\n            const m = reToDelim.exec(txt);\r\n            if (!m) {\r\n                cells.push(convType(txt));\r\n                res.push(cells);\r\n                cells = [];\r\n                break;\r\n            }\r\n            if (m[2] === '\\n') {\r\n                cells.push(convType(m[1]));\r\n                res.push(cells);\r\n                cells = [];\r\n            }\r\n            else if (m[2] === delimiter) {\r\n                cells.push(convType(m[1]));\r\n            }\r\n            txt = txt.substring(m[0].length);\r\n            continue;\r\n        }\r\n        // \"\" ... blank data\r\n        if (txt.substring(0, 2) === '\"\"') {\r\n            cells.push('');\r\n            txt = txt.substring(2);\r\n            continue;\r\n        }\r\n        // \"...\"\r\n        let i = 1;\r\n        let s = '';\r\n        while (i < txt.length) {\r\n            const c1 = txt.charAt(i);\r\n            const c2 = txt.charAt(i + 1);\r\n            // console.log(\"@\" + c1 + c2);\r\n            // 2quote => 1quote char\r\n            if (c1 === '\"' && c2 === '\"') {\r\n                i += 2;\r\n                s += '\"';\r\n                continue;\r\n            }\r\n            if (c1 === '\"') {\r\n                i++;\r\n                if (c2 === delimiter) {\r\n                    i++;\r\n                    cells.push(convType(s));\r\n                    s = '';\r\n                    break;\r\n                }\r\n                if (c2 === '\\n') {\r\n                    i++;\r\n                    cells.push(convType(s));\r\n                    res.push(cells);\r\n                    cells = [];\r\n                    break;\r\n                }\r\n                // if (c2 === \" \" || c2 === \"\\t\") {\r\n                i++;\r\n                continue;\r\n            }\r\n            s += c1;\r\n            i++;\r\n        }\r\n        txt = txt.substr(i);\r\n    }\r\n    if (cells.length > 0)\r\n        res.push(cells);\r\n    return res;\r\n}\r\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\r\n    // check arguments\r\n    if (delimiter === undefined) {\r\n        delimiter = options.delimiter;\r\n    }\r\n    if (eol === undefined) {\r\n        eol = options.eol;\r\n    }\r\n    const valueConv = genValueConverter(delimiter);\r\n    if (ary === undefined)\r\n        return '';\r\n    let r = '';\r\n    for (let i = 0; i < ary.length; i++) {\r\n        const cells = ary[i];\r\n        if (cells === undefined) {\r\n            r += eol;\r\n            continue;\r\n        }\r\n        for (let j = 0; j < cells.length; j++) {\r\n            cells[j] = valueConv(cells[j]);\r\n        }\r\n        r += cells.join(delimiter) + eol;\r\n    }\r\n    // replace return code\r\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\r\n    return r;\r\n}\r\nexport function replaceEolMark(eol) {\r\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\r\n    eol = eol.replace(/\\r/g, '[CR]');\r\n    eol = eol.replace(/\\n/g, '[LF]');\r\n    return eol;\r\n}\r\nfunction genValueConverter(delimiter) {\r\n    return function (s) {\r\n        s = '' + s;\r\n        let fQuot = false;\r\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\r\n            fQuot = true;\r\n        }\r\n        if (s.indexOf(delimiter) >= 0) {\r\n            fQuot = true;\r\n        }\r\n        if (s.indexOf('\"') >= 0) {\r\n            fQuot = true;\r\n            s = s.replace(/\"/g, '\"\"');\r\n        }\r\n        if (fQuot)\r\n            s = '\"' + s + '\"';\r\n        return s;\r\n    };\r\n}\r\n","import { options, parse, stringify } from './nako_csv.mjs';\r\nconst PluginCSV = {\r\n    '初期化': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            // 基本的に初期化不要\r\n        }\r\n    },\r\n    // @CSV操作\r\n    'CSV取得': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'で']],\r\n        pure: true,\r\n        fn: function (str) {\r\n            options.delimiter = ',';\r\n            return parse(str);\r\n        }\r\n    },\r\n    'TSV取得': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'で']],\r\n        pure: true,\r\n        fn: function (str) {\r\n            options.delimiter = '\\t';\r\n            return parse(str);\r\n        }\r\n    },\r\n    '表CSV変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            options.delimiter = ',';\r\n            return stringify(a);\r\n        }\r\n    },\r\n    '表TSV変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            options.delimiter = '\\t';\r\n            return stringify(a);\r\n        }\r\n    }\r\n};\r\nexport default PluginCSV;\r\n","export default {\r\n    '初期化': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (sys.__promise == null) {\r\n                sys.__promise = {\r\n                    setLastPromise: function (promise) {\r\n                        sys.__v0['そ'] = promise;\r\n                        return promise;\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    },\r\n    // @非同期処理の保証の定数\r\n    'そ': { type: 'const', value: '' },\r\n    // @非同期処理の保証\r\n    '動時': {\r\n        type: 'func',\r\n        josi: [['を', 'で']],\r\n        pure: true,\r\n        fn: function (callback, sys) {\r\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\r\n                return callback(resolve, reject);\r\n            }));\r\n        },\r\n        return_none: false\r\n    },\r\n    '成功時': {\r\n        type: 'func',\r\n        josi: [['を'], ['の', 'が', 'に']],\r\n        pure: true,\r\n        fn: function (callback, promise, sys) {\r\n            return sys.__promise.setLastPromise(promise.then((result) => {\r\n                sys.__v0['対象'] = result;\r\n                return callback(result);\r\n            }));\r\n        },\r\n        return_none: false\r\n    },\r\n    '処理時': {\r\n        type: 'func',\r\n        josi: [['を'], ['の', 'が', 'に']],\r\n        pure: true,\r\n        fn: function (cbFunc, promise, sys) {\r\n            return sys.__promise.setLastPromise(promise.then((result) => {\r\n                sys.__v0['対象'] = result;\r\n                return cbFunc(true, result, sys);\r\n            }, (reason) => {\r\n                sys.__v0['対象'] = reason;\r\n                return cbFunc(false, reason, sys);\r\n            }));\r\n        },\r\n        return_none: false\r\n    },\r\n    '失敗時': {\r\n        type: 'func',\r\n        josi: [['を'], ['の', 'が', 'に']],\r\n        pure: true,\r\n        fn: function (callback, promise, sys) {\r\n            return sys.__promise.setLastPromise(promise.catch((err) => {\r\n                sys.__v0['対象'] = err;\r\n                return callback(err);\r\n            }));\r\n        },\r\n        return_none: false\r\n    },\r\n    '終了時': {\r\n        type: 'func',\r\n        josi: [['を'], ['の', 'が', 'に']],\r\n        pure: true,\r\n        fn: function (callback, promise, sys) {\r\n            return sys.__promise.setLastPromise(promise.finally(() => {\r\n                return callback();\r\n            }));\r\n        },\r\n        return_none: false\r\n    },\r\n    '束': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        pure: true,\r\n        fn: function (...args) {\r\n            const sys = args.pop();\r\n            return sys.__promise.setLastPromise(Promise.all(args));\r\n        },\r\n        return_none: false\r\n    }\r\n};\r\n","/**\r\n * file: plugin_test.js\r\n * テスト実行用プラグイン\r\n */\r\nexport default {\r\n    // @テスト\r\n    'ASSERT等': {\r\n        type: 'func',\r\n        josi: [['と'], ['が']],\r\n        pure: true,\r\n        fn: function (a, b) {\r\n            if (a !== b) {\r\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\r\n            }\r\n            return true;\r\n        }\r\n    },\r\n    'テスト実行': {\r\n        type: 'func',\r\n        josi: [['と'], ['で']],\r\n        pure: false,\r\n        fn: function (a, b, sys) {\r\n            sys.__exec('ASSERT等', [a, b, sys]);\r\n        }\r\n    },\r\n    'テスト等': {\r\n        type: 'func',\r\n        josi: [['と'], ['が']],\r\n        pure: false,\r\n        fn: function (a, b, sys) {\r\n            sys.__exec('ASSERT等', [a, b, sys]);\r\n        }\r\n    }\r\n};\r\n","// parser / lexer\r\nimport { NakoParser } from './nako_parser3.mjs';\r\nimport { NakoLexer } from './nako_lexer.mjs';\r\nimport { NakoPrepare } from './nako_prepare.mjs';\r\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\r\nimport { NakoGenASync } from './nako_gen_async.mjs';\r\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\r\nimport { convertDNCL } from './nako_from_dncl.mjs';\r\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\r\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\r\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\r\nimport { NakoLogger } from './nako_logger.mjs';\r\nimport { NakoGlobal } from './nako_global.mjs';\r\n// version info\r\nimport coreVersion from './nako_core_version.mjs';\r\n// basic plugins\r\nimport PluginSystem from './plugin_system.mjs';\r\nimport PluginMath from './plugin_math.mjs';\r\nimport PluginCSV from './plugin_csv.mjs';\r\nimport PluginPromise from './plugin_promise.mjs';\r\nimport PluginTest from './plugin_test.mjs';\r\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\r\n/** コンパイラ実行オプションを生成 */\r\nexport function newCompilerOptions(initObj = {}) {\r\n    if (typeof initObj !== 'object') {\r\n        initObj = {};\r\n    }\r\n    initObj.testOnly = initObj.testOnly || false;\r\n    initObj.resetEnv = initObj.resetEnv || false;\r\n    initObj.resetAll = initObj.resetAll || false;\r\n    initObj.preCode = initObj.preCode || '';\r\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\r\n    return initObj;\r\n}\r\n/** なでしこコンパイラ */\r\nexport class NakoCompiler {\r\n    /**\r\n     * @param {undefined | {'useBasicPlugin':true|false}} options\r\n     */\r\n    constructor(options = undefined) {\r\n        if (options === undefined) {\r\n            options = { useBasicPlugin: true };\r\n        }\r\n        // 環境のリセット\r\n        this.__varslist = [{}, {}, {}]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\r\n        this.__locals = {}; // ローカル変数\r\n        this.__self = this;\r\n        this.__vars = this.__varslist[2];\r\n        this.__v0 = this.__varslist[0];\r\n        this.__v1 = this.__varslist[1];\r\n        // バージョンを設定\r\n        this.version = coreVersion.version;\r\n        this.coreVersion = coreVersion.version;\r\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\r\n        this.__globalObj = null;\r\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\r\n        this.pluginFunclist = {}; // プラグインで定義された関数\r\n        this.funclist = {}; // プラグインで定義された関数 + ユーザーが定義した関数\r\n        this.pluginfiles = {}; // 取り込んだファイル一覧\r\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\r\n        this.nakoFuncList = {}; // __v1に配置するJavaScriptのコードで定義された関数\r\n        this.eventList = []; // 実行前に環境を変更するためのイベント\r\n        this.codeGenerateor = {}; // コードジェネレータ\r\n        this.debugOption = { useDebug: false, waitTime: 0 };\r\n        this.logger = new NakoLogger();\r\n        this.filename = 'main.nako3';\r\n        /**\r\n         * 取り込み文を置換するためのオブジェクト。\r\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\r\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\r\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\r\n         */\r\n        this.dependencies = {};\r\n        this.usedFuncs = new Set();\r\n        this.numFailures = 0;\r\n        if (options.useBasicPlugin) {\r\n            this.addBasicPlugins();\r\n        }\r\n        // 必要なオブジェクトを覚えておく\r\n        this.prepare = NakoPrepare.getInstance();\r\n        this.parser = new NakoParser(this.logger);\r\n        this.lexer = new NakoLexer(this.logger);\r\n        // 関数一覧を設定\r\n        this.lexer.setFuncList(this.funclist);\r\n    }\r\n    /** モジュール(名前空間)の一覧を取得する */\r\n    getModList() {\r\n        return this.lexer.modList;\r\n    }\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    getNakoFuncList() {\r\n        return this.nakoFuncList;\r\n    }\r\n    getNakoFunc(name) {\r\n        return this.nakoFuncList[name];\r\n    }\r\n    getPluginfiles() {\r\n        return this.pluginfiles;\r\n    }\r\n    /**\r\n     * 基本的なプラグインを追加する\r\n     */\r\n    addBasicPlugins() {\r\n        this.addPluginObject('PluginSystem', PluginSystem);\r\n        this.addPluginObject('PluginMath', PluginMath);\r\n        this.addPluginObject('PluginPromise', PluginPromise);\r\n        this.addPluginObject('PluginAssert', PluginTest);\r\n        this.addPluginObject('PluginCSV', PluginCSV);\r\n    }\r\n    /**\r\n     * loggerを新しいインスタンスで置き換える。\r\n     */\r\n    replaceLogger() {\r\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\r\n        return logger;\r\n    }\r\n    /**\r\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\r\n     * @param {Token[]} tokens rawtokenizeの出力\r\n     */\r\n    static listRequireStatements(tokens) {\r\n        const requireStatements = [];\r\n        for (let i = 0; i + 2 < tokens.length; i++) {\r\n            // not (string|string_ex) '取り込み'\r\n            if (!(tokens[i].type === 'not' &&\r\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\r\n                tokens[i + 2].value === '取込')) {\r\n                continue;\r\n            }\r\n            requireStatements.push({\r\n                ...tokens[i],\r\n                start: i,\r\n                end: i + 3,\r\n                value: tokens[i + 1].value + '',\r\n                firstToken: tokens[i],\r\n                lastToken: tokens[i + 2]\r\n            });\r\n            i += 2;\r\n        }\r\n        return requireStatements;\r\n    }\r\n    /**\r\n     * プログラムが依存するファイルを再帰的に取得する。\r\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\r\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\r\n     *\r\n     * @param {string} code\r\n     * @param {string} filename\r\n     * @param {string} preCode\r\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\r\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\r\n     *  - readNako3は指定されたファイルの中身を返す関数。\r\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\r\n     * @returns {Promise<unknown> | void}\r\n     * @protected\r\n     */\r\n    _loadDependencies(code, filename, preCode, tools) {\r\n        const dependencies = {};\r\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\r\n        /**\r\n         * @param {any} item\r\n         * @param {any} tasks\r\n         */\r\n        const loadJS = (item, tasks) => {\r\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\r\n            const obj = tools.readJs(item.filePath, item.firstToken);\r\n            tasks.push(obj.task.then((res) => {\r\n                const pluginFuncs = res();\r\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\r\n                dependencies[item.filePath].funclist = pluginFuncs;\r\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\r\n            }));\r\n        };\r\n        const loadNako3 = (item, tasks) => {\r\n            // nako3ならファイルを読んでdependenciesに保存する。\r\n            const content = tools.readNako3(item.filePath, item.firstToken);\r\n            const registerFile = (code) => {\r\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\r\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\r\n                // 「プラグイン名設定」を行う (#956)\r\n                const modName = NakoLexer.filenameToModName(item.filePath);\r\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\r\n                const tokens = this.rawtokenize(code, 0, item.filePath);\r\n                dependencies[item.filePath].tokens = tokens;\r\n                const funclist = {};\r\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist);\r\n                dependencies[item.filePath].funclist = funclist;\r\n                // 再帰\r\n                return loadRec(code, item.filePath, '');\r\n            };\r\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\r\n            tasks.push(content.task.then((res) => registerFile(res)));\r\n        };\r\n        const loadRec = (code, filename, preCode) => {\r\n            const tasks = [];\r\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\r\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\r\n            // パスを解決する\r\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\r\n            // 取り込み開始\r\n            for (const item of tagsResolvePath) {\r\n                // 2回目以降の読み込み\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (dependencies.hasOwnProperty(item.filePath)) {\r\n                    dependencies[item.filePath].alias.add(item.value);\r\n                    continue;\r\n                }\r\n                // 初回の読み込み\r\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {} };\r\n                if (item.type === 'js' || item.type === 'mjs') {\r\n                    loadJS(item, tasks);\r\n                }\r\n                else if (item.type === 'nako3') {\r\n                    loadNako3(item, tasks);\r\n                }\r\n                else {\r\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\r\n                }\r\n            }\r\n            if (tasks.length > 0) {\r\n                return Promise.all(tasks);\r\n            }\r\n            return undefined;\r\n        };\r\n        try {\r\n            const result = loadRec(code, filename, preCode);\r\n            // 非同期な場合のエラーハンドリング\r\n            if (result !== undefined) {\r\n                result.catch((err) => {\r\n                    // 読み込みに失敗したら処理を中断する\r\n                    this.logger.error(err.msg);\r\n                    this.numFailures++;\r\n                });\r\n            }\r\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\r\n            // loadDependencies() が並列実行されるときに正しく動作しない。\r\n            this.dependencies = dependencies;\r\n            return result;\r\n        }\r\n        catch (err) {\r\n            // 同期処理では素直に例外を投げる\r\n            this.logger.error('' + err);\r\n            throw err;\r\n        }\r\n    }\r\n    /**\r\n     * コードを単語に分割する\r\n     * @param code なでしこのプログラム\r\n     * @param line なでしこのプログラムの行番号\r\n     * @param filename\r\n     * @param preCode\r\n     * @returns トークンのリスト\r\n     */\r\n    rawtokenize(code, line, filename, preCode = '') {\r\n        if (!code.startsWith(preCode)) {\r\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\r\n        }\r\n        // 名前空間のモジュールリストに自身を追加\r\n        const modName = NakoLexer.filenameToModName(filename);\r\n        const modList = this.getModList();\r\n        if (modList.indexOf(modName) < 0) {\r\n            modList.unshift(modName);\r\n        }\r\n        // 全角半角の統一処理\r\n        const preprocessed = this.prepare.convert(code);\r\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\r\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\r\n        const offsetToLineColumn = new OffsetToLineColumn(code);\r\n        // トークン分割\r\n        let tokens;\r\n        try {\r\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\r\n        }\r\n        catch (err) {\r\n            if (!(err instanceof InternalLexerError)) {\r\n                throw err;\r\n            }\r\n            // エラー位置をソースコード上の位置に変換して返す\r\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\r\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\r\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\r\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\r\n        }\r\n        // DNCL ver2 (core #41)\r\n        tokens = convertDNCL2(tokens);\r\n        // DNCL ver1 (#1140)\r\n        tokens = convertDNCL(tokens);\r\n        // インデント構文を変換 #596\r\n        tokens = convertIndentSyntax(tokens);\r\n        // インラインインデントを変換 #1215\r\n        tokens = convertInlineIndent(tokens);\r\n        // ソースコード上の位置に変換\r\n        tokens = tokens.map((token) => {\r\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\r\n            let line = token.line;\r\n            let column = 0;\r\n            if (token.type === 'eol' && dest.endOffset !== null) {\r\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\r\n                // 行末のeolのlineは次の行の行数を表す必要がある。\r\n                const out = offsetToLineColumn.map(dest.endOffset, false);\r\n                line = out.line;\r\n                column = out.column;\r\n            }\r\n            else if (dest.startOffset !== null) {\r\n                const out = offsetToLineColumn.map(dest.startOffset, false);\r\n                line = out.line;\r\n                column = out.column;\r\n            }\r\n            return {\r\n                ...token,\r\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\r\n                rawJosi: token.josi\r\n            };\r\n        });\r\n        return tokens;\r\n    }\r\n    /**\r\n     * 単語の属性を構文解析に先立ち補正する\r\n     * @param {Token[]} tokens トークンのリスト\r\n     * @param {boolean} isFirst 最初の呼び出しかどうか\r\n     * @param {string} filename\r\n     * @returns コード (なでしこ)\r\n     */\r\n    converttoken(tokens, isFirst, filename) {\r\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\r\n        return tok;\r\n    }\r\n    /**\r\n     * 環境のリセット\r\n     * {NakoResetOption|undefined}\r\n     */\r\n    reset(options = undefined) {\r\n        if (!options || options.needToClearPlugin) {\r\n            // (メモ) #1245\r\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\r\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\r\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\r\n            this.clearPlugins();\r\n        }\r\n        /**\r\n         * なでしこのローカル変数をスタックで管理\r\n         * __varslist[0] プラグイン領域\r\n         * __varslist[1] なでしこグローバル領域\r\n         * __varslist[2] 最初のローカル変数 ( == __vars }\r\n         */\r\n        this.__varslist = [this.__varslist[0], {}, {}];\r\n        this.__v0 = this.__varslist[0];\r\n        this.__v1 = this.__varslist[1];\r\n        this.__vars = this.__varslist[2];\r\n        this.__locals = {};\r\n        // プラグイン命令以外を削除する。\r\n        this.funclist = {};\r\n        for (const name of Object.keys(this.__v0)) {\r\n            const original = this.pluginFunclist[name];\r\n            if (!original) {\r\n                continue;\r\n            }\r\n            this.funclist[name] = JSON.parse(JSON.stringify(original));\r\n        }\r\n        this.lexer.setFuncList(this.funclist);\r\n        this.logger.clear();\r\n    }\r\n    /**\r\n     * typeがcodeのトークンを単語に分割するための処理\r\n     * @param {string} code\r\n     * @param {number} line\r\n     * @param {string} filename\r\n     * @param {number | null} startOffset\r\n     * @returns\r\n     * @private\r\n     */\r\n    lexCodeToken(code, line, filename, startOffset) {\r\n        // 単語に分割\r\n        let tokens = this.rawtokenize(code, line, filename, '');\r\n        // 文字列内位置からファイル内位置へ変換\r\n        if (startOffset === null) {\r\n            for (const token of tokens) {\r\n                token.startOffset = undefined;\r\n                token.endOffset = undefined;\r\n            }\r\n        }\r\n        else {\r\n            for (const token of tokens) {\r\n                if (token.startOffset !== undefined) {\r\n                    token.startOffset += startOffset;\r\n                }\r\n                if (token.endOffset !== undefined) {\r\n                    token.endOffset += startOffset;\r\n                }\r\n            }\r\n        }\r\n        // convertTokenで消されるコメントのトークンを残す\r\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\r\n            .map((v) => ({ ...v })); // clone\r\n        tokens = this.converttoken(tokens, false, filename);\r\n        return { tokens, commentTokens };\r\n    }\r\n    /**\r\n     * 再帰的にrequire文を置換する。\r\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\r\n     * @param {TokenWithSourceMap[]} tokens\r\n     * @param {Set<string>} [includeGuard]\r\n     * @returns {Token[]} 削除された取り込み文のトークン\r\n     */\r\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\r\n        /** @type {TokenWithSourceMap[]} */\r\n        const deletedTokens = [];\r\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\r\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\r\n            if (includeGuard.has(r.value)) {\r\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\r\n                continue;\r\n            }\r\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\r\n            if (filePath === undefined) {\r\n                if (!r.firstToken) {\r\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\r\n                }\r\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\r\n            }\r\n            this.dependencies[filePath].addPluginFile();\r\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\r\n            includeGuard.add(r.value);\r\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\r\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\r\n        }\r\n        return deletedTokens;\r\n    }\r\n    /**\r\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\r\n     * @param {TokenWithSourceMap[]} tokens\r\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\r\n     */\r\n    removeRequireStatements(tokens) {\r\n        /** @type {TokenWithSourceMap[]} */\r\n        const deletedTokens = [];\r\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\r\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\r\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\r\n            if (filePath !== undefined) {\r\n                this.dependencies[filePath].addPluginFile();\r\n            }\r\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\r\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\r\n        }\r\n        return deletedTokens;\r\n    }\r\n    /** 字句解析を行う */\r\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\r\n        // 単語に分割\r\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\r\n        // require文を再帰的に置換する\r\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\r\n        for (const t of requireStatementTokens) {\r\n            if (t.type === 'word' || t.type === 'not') {\r\n                t.type = 'require';\r\n            }\r\n        }\r\n        if (requireStatementTokens.length >= 3) {\r\n            // modList を更新\r\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\r\n                let modName = requireStatementTokens[i + 1].value;\r\n                modName = NakoLexer.filenameToModName(modName);\r\n                if (this.lexer.modList.indexOf(modName) < 0) {\r\n                    this.lexer.modList.push(modName);\r\n                }\r\n            }\r\n        }\r\n        // convertTokenで消されるコメントのトークンを残す\r\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\r\n            .map((v) => ({ ...v })); // clone\r\n        tokens = this.converttoken(tokens, true, filename);\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] && tokens[i].type === 'code') {\r\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\r\n                commentTokens.push(...children.commentTokens);\r\n                tokens.splice(i, 1, ...children.tokens);\r\n                i--;\r\n            }\r\n        }\r\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\r\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\r\n    }\r\n    /**\r\n     * コードをパースしてASTにする\r\n     */\r\n    parse(code, filename, preCode = '') {\r\n        // 関数リストを字句解析と構文解析に登録\r\n        this.lexer.setFuncList(this.funclist);\r\n        this.parser.setFuncList(this.funclist);\r\n        // 字句解析を行う\r\n        const lexerOutput = this.lex(code, filename, preCode);\r\n        // 構文木を作成\r\n        let ast;\r\n        try {\r\n            this.parser.genMode = 'sync'; // set default\r\n            ast = this.parser.parse(lexerOutput.tokens, filename);\r\n        }\r\n        catch (err) {\r\n            if (typeof err.startOffset !== 'number') {\r\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\r\n            }\r\n            throw err;\r\n        }\r\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\r\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\r\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\r\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\r\n        return ast;\r\n    }\r\n    getUsedFuncs(ast) {\r\n        const queue = [ast];\r\n        this.usedFuncs = new Set();\r\n        while (queue.length > 0) {\r\n            const ast_ = queue.pop();\r\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\r\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\r\n            }\r\n        }\r\n        return this.deleteUnNakoFuncs();\r\n    }\r\n    getUsedAndDefFuncs(astQueue, blockQueue) {\r\n        while (blockQueue.length > 0) {\r\n            const block = blockQueue.pop();\r\n            if (block !== null && block !== undefined) {\r\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\r\n            }\r\n        }\r\n    }\r\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\r\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\r\n            this.usedFuncs.add(block.name);\r\n        }\r\n        astQueue.push([block, block.block]);\r\n        // eslint-disable-next-line prefer-spread\r\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\r\n    }\r\n    deleteUnNakoFuncs() {\r\n        for (const func of this.usedFuncs) {\r\n            if (!this.commandlist.has(func)) {\r\n                this.usedFuncs.delete(func);\r\n            }\r\n        }\r\n        return this.usedFuncs;\r\n    }\r\n    /**\r\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\r\n     * @param code コード (なでしこ)\r\n     * @param filename\r\n     * @param isTest テストかどうか\r\n     * @param preCode\r\n     */\r\n    compile(code, filename, isTest = false, preCode = '') {\r\n        const opt = newCompilerOptions();\r\n        opt.testOnly = isTest;\r\n        opt.preCode = preCode;\r\n        const res = this.compileFromCode(code, filename, opt);\r\n        return res.runtimeEnv;\r\n    }\r\n    /** parse & generate  */\r\n    compileFromCode(code, filename, options = undefined) {\r\n        if (filename === '') {\r\n            filename = 'main.nako3';\r\n        }\r\n        if (options === undefined) {\r\n            options = newCompilerOptions();\r\n        }\r\n        try {\r\n            if (options.resetEnv) {\r\n                this.reset();\r\n            }\r\n            if (options.resetAll) {\r\n                this.clearPlugins();\r\n            }\r\n            // onBeforeParse\r\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\r\n            // parse\r\n            const ast = this.parse(code, filename, options.preCode);\r\n            // onBeforeGenerate\r\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\r\n            // generate\r\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\r\n            // onAfterGenerate\r\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\r\n            return outCode;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\r\n     * @param ast\r\n     * @param opt テストかどうか\r\n     */\r\n    generateCode(ast, opt) {\r\n        // Select Code Generator #637\r\n        const mode = ast.genMode || '';\r\n        // normal mode\r\n        if (mode === 'sync') {\r\n            return generateJS(this, ast, opt);\r\n        }\r\n        // 非推奨の非同期モード #1164\r\n        if (mode === '非同期モード') {\r\n            this.logger.warn('『!非同期モード』の利用は非推奨です。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\r\n            return NakoGenASync.generate(this, ast, opt.isTest);\r\n        }\r\n        // その他のコードジェネレータ(PHPなど)\r\n        const genObj = this.codeGenerateor[mode];\r\n        if (!genObj) {\r\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\r\n        }\r\n        return genObj.generate(this, ast, opt.isTest);\r\n    }\r\n    /** コードジェネレータを追加する */\r\n    addCodeGenerator(mode, obj) {\r\n        this.codeGenerateor[mode] = obj;\r\n    }\r\n    /** (非推奨)\r\n     * @param code\r\n     * @param fname\r\n     * @param isReset\r\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\r\n     * @param [preCode]\r\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\r\n     */\r\n    async _run(code, fname, isReset, isTest, preCode = '') {\r\n        const opts = newCompilerOptions({\r\n            resetEnv: isReset,\r\n            resetAll: isReset,\r\n            testOnly: isTest,\r\n            preCode\r\n        });\r\n        return this._runEx(code, fname, opts);\r\n    }\r\n    /** 各プラグインをリセットする */\r\n    clearPlugins() {\r\n        // 他に実行している「なでしこ」があればクリアする\r\n        this.__globals.forEach((sys) => {\r\n            sys.__varslist[0].forceClose = true; // core #56\r\n            sys.reset();\r\n        });\r\n        this.__globals = []; // clear\r\n    }\r\n    /**\r\n     * 環境を指定してJavaScriptのコードを実行する\r\n     * @param code JavaScriptのコード\r\n     * @param nakoGlobal 実行環境\r\n     */\r\n    evalJS(code, nakoGlobal) {\r\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\r\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\r\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\r\n        this.__globalObj.lastJSCode = code;\r\n        try {\r\n            // eslint-disable-next-line no-new-func\r\n            const f = new Function(code);\r\n            f.apply(nakoGlobal);\r\n        }\r\n        catch (err) {\r\n            // なでしこコードのエラーは抑止してログにのみ記録\r\n            nakoGlobal.numFailures++;\r\n            this.getLogger().error(err);\r\n            throw err;\r\n        }\r\n        // 実行後に終了イベントを実行(finish)\r\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\r\n    }\r\n    /**\r\n     * 同期的になでしこのプログラムcodeを実行する\r\n     * @param code なでしこのプログラム\r\n     * @param filename ファイル名\r\n     * @param options オプション\r\n     * @returns 実行に利用したグローバルオブジェクト\r\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\r\n     */\r\n    runSync(code, filename, options = undefined) {\r\n        // コンパイル\r\n        options = newCompilerOptions(options);\r\n        const out = this.compileFromCode(code, filename, options);\r\n        // 実行前に環境を生成\r\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\r\n        // 実行\r\n        this.evalJS(out.runtimeEnv, nakoGlobal);\r\n        return nakoGlobal;\r\n    }\r\n    /**\r\n     * 非同期になでしこのプログラムcodeを実行する\r\n     * @param code なでしこのプログラム\r\n     * @param filename ファイル名\r\n     * @param options オプション\r\n     * @returns 実行に利用したグローバルオブジェクト\r\n     */\r\n    async runAsync(code, filename, options = undefined) {\r\n        // コンパイル\r\n        options = newCompilerOptions(options);\r\n        const out = this.compileFromCode(code, filename, options);\r\n        // 実行前に環境を生成\r\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\r\n        // 実行\r\n        this.evalJS(out.runtimeEnv, nakoGlobal);\r\n        return nakoGlobal;\r\n    }\r\n    getNakoGlobal(options, gen, filename) {\r\n        // オプションを参照\r\n        let g = options.nakoGlobal;\r\n        if (!g) {\r\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\r\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\r\n                g = this.__globals[this.__globals.length - 1];\r\n            }\r\n            else {\r\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\r\n            }\r\n            // 名前空間を設定\r\n            g.__varslist[0]['名前空間'] = NakoLexer.filenameToModName(filename);\r\n        }\r\n        if (this.__globals.indexOf(g) < 0) {\r\n            this.__globals.push(g);\r\n        }\r\n        return g;\r\n    }\r\n    /**\r\n     * イベントを登録する\r\n     * @param eventName イベント名\r\n     * @param callback コールバック関数\r\n     */\r\n    addListener(eventName, callback) {\r\n        this.eventList.push({ eventName, callback });\r\n    }\r\n    /**\r\n     * テストを実行する\r\n     * @param code\r\n     * @param fname\r\n     * @param preCode\r\n     * @param testOnly\r\n     */\r\n    test(code, fname, preCode = '', testOnly = false) {\r\n        const options = newCompilerOptions();\r\n        options.preCode = preCode;\r\n        options.testOnly = testOnly;\r\n        return this.runSync(code, fname, options);\r\n    }\r\n    /**\r\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\r\n     * @param code\r\n     * @param fname\r\n     * @param [preCode]\r\n     * @deprecated 代わりに runAsync を使ってください。\r\n     */\r\n    run(code, fname = 'main.nako3', preCode = '') {\r\n        const options = newCompilerOptions();\r\n        options.preCode = preCode;\r\n        return this.runSync(code, fname, options);\r\n    }\r\n    /**\r\n     * JavaScriptのみで動くコードを取得する場合\r\n     * @param code\r\n     * @param filename\r\n     * @param opt\r\n     */\r\n    compileStandalone(code, filename, opt = null) {\r\n        if (opt === null) {\r\n            opt = new NakoGenOptions();\r\n        }\r\n        const ast = this.parse(code, filename);\r\n        return this.generateCode(ast, opt).standalone;\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加\r\n     * @param po プラグイン・オブジェクト\r\n     * @param persistent falseのとき、次以降の実行では使えない\r\n     */\r\n    addPlugin(po, persistent = true) {\r\n        // 変数のメタ情報を確認\r\n        const __v0 = this.__varslist[0];\r\n        if (__v0.meta === undefined) {\r\n            __v0.meta = {};\r\n        }\r\n        // プラグインの値をオブジェクトにコピー\r\n        for (const key in po) {\r\n            const v = po[key];\r\n            this.funclist[key] = v;\r\n            if (persistent) {\r\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\r\n            }\r\n            if (v.type === 'func') {\r\n                __v0[key] = v.fn;\r\n            }\r\n            else if (v.type === 'const' || v.type === 'var') {\r\n                __v0[key] = v.value;\r\n                __v0.meta[key] = {\r\n                    readonly: (v.type === 'const')\r\n                };\r\n            }\r\n            else {\r\n                console.error('[プラグイン追加エラー]', v);\r\n                throw new Error('プラグインの追加でエラー。');\r\n            }\r\n            // コマンドを登録するか?\r\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\r\n                continue;\r\n            }\r\n            this.commandlist.add(key);\r\n        }\r\n    }\r\n    /**\r\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\r\n     * @param objName オブジェクト名\r\n     * @param po 関数リスト\r\n     * @param persistent falseのとき、次以降の実行では使えない\r\n     */\r\n    addPluginObject(objName, po, persistent = true) {\r\n        this.__module[objName] = po;\r\n        this.pluginfiles[objName] = '*';\r\n        // 初期化をチェック\r\n        if (typeof (po['初期化']) === 'object') {\r\n            const def = po['初期化'];\r\n            delete po['初期化'];\r\n            const initKey = `!${objName}:初期化`;\r\n            po[initKey] = def;\r\n        }\r\n        // メタ情報をチェック (#1034)\r\n        if (po.meta && po.meta.value && typeof (po.meta) === 'object') {\r\n            const meta = po.meta;\r\n            delete po.meta;\r\n            const pluginName = meta.value.pluginName || objName;\r\n            const metaKey = `__${pluginName}`.replace('-', '__');\r\n            po[metaKey] = meta;\r\n        }\r\n        this.addPlugin(po, persistent);\r\n    }\r\n    /**\r\n     * プラグイン・ファイルを追加(Node.js向け)\r\n     * @param objName オブジェクト名\r\n     * @param fpath ファイルパス\r\n     * @param po 登録するオブジェクト\r\n     * @param persistent falseのとき、次以降の実行では使えない\r\n     */\r\n    addPluginFile(objName, fpath, po, persistent = true) {\r\n        // Windowsのパスがあると、JSファイル書き出しでエラーになるので、置換する\r\n        if (objName.indexOf('\\\\') >= 0) {\r\n            objName = objName.replace(/\\\\/g, '/');\r\n        }\r\n        this.addPluginObject(objName, po, persistent);\r\n        if (this.pluginfiles[objName] === undefined) {\r\n            this.pluginfiles[objName] = fpath;\r\n        }\r\n    }\r\n    /**\r\n     * 関数を追加する\r\n     * @param {string} key 関数名\r\n     * @param {string[][]} josi 助詞\r\n     * @param {Function} fn 関数\r\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\r\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\r\n     */\r\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\r\n        this.funclist[key] = { josi, fn, type: 'func', return_none: returnNone, asyncFn };\r\n        this.pluginFunclist[key] = cloneAsJSON(this.funclist[key]);\r\n        this.__varslist[0][key] = fn;\r\n    }\r\n    /** (非推奨) 互換性のため ... 関数を追加する\r\n     * @deprecated 代わりにaddFuncを使ってください\r\n    */\r\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\r\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\r\n    }\r\n    /**\r\n     * プラグイン関数を参照する\r\n     * @param key プラグイン関数の関数名\r\n     * @returns プラグイン・オブジェクト\r\n     */\r\n    getFunc(key) {\r\n        return this.funclist[key];\r\n    }\r\n    /** 同期的になでしこのプログラムcodeを実行する\r\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\r\n     */\r\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\r\n        // コンパイル\r\n        opts.preCode = preCode;\r\n        if (nakoGlobal) {\r\n            opts.nakoGlobal = nakoGlobal;\r\n        }\r\n        return this.runSync(code, filename, opts);\r\n    }\r\n    /** 同期的になでしこのプログラムcodeを実行する\r\n     * @param code\r\n     * @param fname\r\n     * @param opts\r\n     * @param [preCode]\r\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\r\n     */\r\n    runEx(code, fname, opts, preCode = '') {\r\n        return this._runEx(code, fname, opts, preCode);\r\n    }\r\n    /**\r\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\r\n     * @param code\r\n     * @param fname\r\n     * @param [preCode]\r\n     */\r\n    async runReset(code, fname = 'main.nako3', preCode = '') {\r\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\r\n        return this._runEx(code, fname, opts, preCode);\r\n    }\r\n}\r\n","import { NakoIndentError } from './nako_errors.mjs';\r\nimport { NakoPrepare, checkNakoMode } from './nako_prepare.mjs';\r\n// インデント構文のキーワード\r\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい'];\r\n/**\r\n * インデント構文指定があればコードを変換する\r\n */\r\nfunction convert(code, filename = 'main.nako3') {\r\n    // インデント構文の適用が必要か？\r\n    if (checkNakoMode(code, INDENT_MODE_KEYWORDS)) {\r\n        return convertForIndentMode(code, filename);\r\n    }\r\n    return { code, insertedLines: [], deletedLines: [] };\r\n}\r\n/**\r\n * インデント構文指定があるかチェックする\r\n */\r\nfunction isIndentSyntaxEnabled(code) {\r\n    return checkNakoMode(code, INDENT_MODE_KEYWORDS);\r\n}\r\n/** ありえない改行マークを定義 */\r\nconst defSpecialRetMark = '🍷🍷改行🍹黐黑鼘鼶齈▨🍺🍺🍶🍶';\r\nlet SpecialRetMark = defSpecialRetMark;\r\n/** code中にありえない改行マーク生成しモジュール内の変数SpecialRetMarkに設定 */\r\nexport function checkSpecialRetMark(code) {\r\n    SpecialRetMark = defSpecialRetMark;\r\n    while (code.indexOf(SpecialRetMark) >= 0) {\r\n        // 適当な文字を足してユニークにする(一応漢字領域で生成)\r\n        const c = String.fromCodePoint(Math.floor(Math.random() * 40952) + 0x4E00);\r\n        SpecialRetMark += c + c;\r\n    }\r\n    return SpecialRetMark;\r\n}\r\n/**\r\n * ソースコードのある1行の中のコメントを全て取り除く。\r\n * 事前にreplaceRetMarkによって文字列や範囲コメント内の改行文字が置換されている必要がある。\r\n */\r\nexport function removeCommentsFromLine(src) {\r\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\r\n    const len = src.length;\r\n    let result = '';\r\n    let eos = '';\r\n    let i = 0;\r\n    let isComment = false;\r\n    while (i < len) {\r\n        const c = src.charAt(i);\r\n        const ch2 = src.substring(i, 2);\r\n        const cPrepared = prepare.convert1ch(c);\r\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\r\n        // eosか?\r\n        if (eos !== '') {\r\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\r\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\r\n                if (!isComment) {\r\n                    result += src.substr(i, eos.length);\r\n                }\r\n                i += eos.length;\r\n                isComment = false;\r\n                eos = '';\r\n            }\r\n            else {\r\n                if (!isComment) {\r\n                    result += c;\r\n                }\r\n                i++;\r\n            }\r\n            continue;\r\n        }\r\n        // 文字列の改行\bも無視する\r\n        switch (cPrepared) {\r\n            case '\"':\r\n            case '\\'':\r\n                eos = c;\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '「':\r\n                eos = '」';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '『':\r\n                eos = '』';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '“':\r\n                eos = '”';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '{':\r\n                eos = '}';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '[':\r\n                eos = ']';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n        }\r\n        switch (ch2) {\r\n            case '🌴':\r\n                eos = '🌴';\r\n                result += ch2;\r\n                i += 2;\r\n                continue;\r\n            case '🌿':\r\n                eos = '🌿';\r\n                result += ch2;\r\n                i += 2;\r\n                continue;\r\n        }\r\n        // 行コメント\r\n        if (cPrepared === '#') {\r\n            eos = '\\n';\r\n            isComment = true;\r\n            i++;\r\n            continue;\r\n        }\r\n        if (ch2Prepared === '//') {\r\n            eos = '\\n';\r\n            isComment = true;\r\n            i += 2;\r\n            continue;\r\n        }\r\n        // 範囲コメント\r\n        if (ch2Prepared === '/*') {\r\n            eos = '*/';\r\n            isComment = true;\r\n            i += 2;\r\n            continue;\r\n        }\r\n        result += c;\r\n        i++;\r\n    }\r\n    return result;\r\n}\r\n/** インデントモードのための変換処理 */\r\nfunction convertForIndentMode(code, filename) {\r\n    // returns => {{ code: string, insertedLines: number[], deletedLines: { lineNumber: number, len: number }[] }}\r\n    const insertedLines = [];\r\n    const deletedLines = [];\r\n    const END = 'ここまで‰';\r\n    const code2 = replaceRetMark(code); // 文字列の中などの改行を置換\r\n    const lines = code2.split('\\n');\r\n    const lines2 = [];\r\n    const indentStack = [];\r\n    let lastIndent = 0;\r\n    // 元ソースコードの中に特殊改行マークが含まれるかチェックして含まれるならもっと複雑な特殊マークを動的に生成\r\n    checkSpecialRetMark(code);\r\n    let lineCount = -1;\r\n    lines.forEach((line) => {\r\n        lineCount += line.split(SpecialRetMark).length;\r\n        // trim line\r\n        // eslint-disable-next-line no-irregular-whitespace\r\n        if (/^[ 　・\\t]*$/.test(line)) {\r\n            deletedLines.push({ lineNumber: lines2.length, len: line.length });\r\n            return;\r\n        }\r\n        // eslint-disable-next-line no-irregular-whitespace\r\n        const lineTrimed = removeCommentsFromLine(line).replace(/^[ 　・\\t]+/, '').replace(/\\s+$/, '');\r\n        if (lineTrimed === '') {\r\n            lines2.push(line);\r\n            return;\r\n        }\r\n        if (lineTrimed === 'ここまで') {\r\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', lineCount, filename);\r\n        }\r\n        // check indent\r\n        const indent = countIndent(line);\r\n        if (lastIndent === indent) {\r\n            lines2.push(line);\r\n            return;\r\n        }\r\n        // indent\r\n        if (lastIndent < indent) {\r\n            indentStack.push(lastIndent);\r\n            lastIndent = indent;\r\n            lines2.push(line);\r\n            return;\r\n        }\r\n        // unindent\r\n        if (lastIndent > indent) {\r\n            // 5回\r\n            //   3回\r\n            //     1を表示\r\n            //   |\r\n            // |\r\n            lastIndent = indent;\r\n            while (indentStack.length > 0) {\r\n                const n = indentStack.pop() || 0;\r\n                if (n === indent) {\r\n                    if (lineTrimed.substring(0, 3) !== '違えば') {\r\n                        insertedLines.push(lines2.length);\r\n                        lines2.push(makeIndent(n) + END);\r\n                    }\r\n                    lines2.push(line);\r\n                    return;\r\n                }\r\n                if (indent < n) {\r\n                    insertedLines.push(lines2.length);\r\n                    lines2.push(makeIndent(n) + END);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    // 残りのインデントを処理\r\n    while (indentStack.length > 0) {\r\n        const n = indentStack.pop() || 0;\r\n        insertedLines.push(lines2.length);\r\n        lines2.push(makeIndent(n) + END);\r\n    }\r\n    // 特別マーカーを改行に置換\r\n    const lines3 = [];\r\n    for (let i = 0; i < lines2.length; i++) {\r\n        if (lines2[i].includes(SpecialRetMark)) {\r\n            const lines4 = lines2[i].split(SpecialRetMark);\r\n            // 置換されたマーカーの数だけ、それ以降の行数をずらす。\r\n            // unindentによって挿入された行がSpecialRetMarkを含むことはない。\r\n            for (let j = 0; j < insertedLines.length; j++) {\r\n                if (lines3.length < insertedLines[j]) {\r\n                    insertedLines[j] += lines4.length - 1;\r\n                }\r\n            }\r\n            for (let j = 0; j < deletedLines.length; j++) {\r\n                if (lines3.length < deletedLines[j].lineNumber) {\r\n                    deletedLines[j].lineNumber += lines4.length - 1;\r\n                }\r\n            }\r\n            lines3.push(...lines4);\r\n        }\r\n        else {\r\n            lines3.push(lines2[i]);\r\n        }\r\n    }\r\n    return { code: lines3.join('\\n'), insertedLines, deletedLines };\r\n}\r\n/**\r\n * count分だけ字下げする\r\n * @param {number} count\r\n */\r\nfunction makeIndent(count) {\r\n    let s = '';\r\n    for (let i = 0; i < count; i++) {\r\n        s += ' ';\r\n    }\r\n    return s;\r\n}\r\n/**\r\n * インデント部分を取り出す\r\n */\r\nexport function getIndent(line) {\r\n    // eslint-disable-next-line no-irregular-whitespace\r\n    const m = /^([ 　・\\t]*)/.exec(removeCommentsFromLine(line));\r\n    if (!m) {\r\n        return '';\r\n    }\r\n    return m[1];\r\n}\r\n/**\r\n * インデントの個数を数える\r\n */\r\nexport function countIndent(line) {\r\n    let cnt = 0;\r\n    for (let i = 0; i < line.length; i++) {\r\n        const ch = line.charAt(i);\r\n        if (ch === ' ') {\r\n            cnt++;\r\n            continue;\r\n        }\r\n        if (ch === '　') {\r\n            cnt += 2;\r\n            continue;\r\n        }\r\n        if (ch === '・') {\r\n            cnt += 2;\r\n            continue;\r\n        }\r\n        if (ch === '\\t') {\r\n            cnt += 4;\r\n            continue;\r\n        }\r\n        break;\r\n    }\r\n    return cnt;\r\n}\r\nexport function replaceRetMark(src) {\r\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\r\n    const len = src.length;\r\n    let result = '';\r\n    let eos = '';\r\n    let i = 0;\r\n    while (i < len) {\r\n        const c = src.charAt(i);\r\n        const ch2 = src.substr(i, 2);\r\n        const cPrepared = prepare.convert1ch(c);\r\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\r\n        // eosか?\r\n        if (eos !== '') {\r\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\r\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\r\n                result += src.substr(i, eos.length);\r\n                i += eos.length;\r\n                eos = '';\r\n            }\r\n            else {\r\n                if (c === '\\n') {\r\n                    result += SpecialRetMark;\r\n                }\r\n                else {\r\n                    result += c;\r\n                }\r\n                i++;\r\n            }\r\n            continue;\r\n        }\r\n        // 文字列の改行\bも無視する\r\n        switch (cPrepared) {\r\n            case '\"':\r\n            case '\\'':\r\n                eos = c;\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '「':\r\n                eos = '」';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '『':\r\n                eos = '』';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '“':\r\n                eos = '”';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '{':\r\n                eos = '}';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n            case '[':\r\n                eos = ']';\r\n                result += c;\r\n                i++;\r\n                continue;\r\n        }\r\n        switch (ch2) {\r\n            case '🌴':\r\n                eos = '🌴';\r\n                result += ch2;\r\n                i += 2;\r\n                continue;\r\n            case '🌿':\r\n                eos = '🌿';\r\n                result += ch2;\r\n                i += 2;\r\n                continue;\r\n        }\r\n        // 行コメント\r\n        if (cPrepared === '#') {\r\n            eos = '\\n';\r\n            result += c;\r\n            i++;\r\n            continue;\r\n        }\r\n        if (ch2Prepared === '//') {\r\n            eos = '\\n';\r\n            result += ch2;\r\n            i += 2;\r\n            continue;\r\n        }\r\n        // 範囲コメント\r\n        if (ch2Prepared === '/*') {\r\n            eos = '*/';\r\n            result += ch2;\r\n            i += 2;\r\n            continue;\r\n        }\r\n        result += c;\r\n        i++;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * コードのインデントの構造を取得する。\r\n * 空白行や複数行にまたがる構文を考慮する。\r\n * インデント構文が有効化されていない場合にも使われる。\r\n */\r\nexport function getBlockStructure(code) {\r\n    const result = {\r\n        lines: [],\r\n        pairs: [],\r\n        parents: [],\r\n        spaces: [] // 各行のインデントの文字列\r\n    };\r\n    const lines = replaceRetMark(code).split('\\n');\r\n    const stack = [];\r\n    let lineCount = 0;\r\n    let prev = countIndent(lines[0]);\r\n    for (const line of lines) {\r\n        const numLines = line.split(SpecialRetMark).length;\r\n        const line2 = removeCommentsFromLine(line);\r\n        // eslint-disable-next-line no-irregular-whitespace\r\n        const current = (line2.replace(/^[ 　・\\t]+/, '') === '')\r\n            ? prev\r\n            : countIndent(line2);\r\n        result.lines.push(...Array(numLines).fill(current));\r\n        result.spaces.push(...Array(numLines).fill(getIndent(line2)));\r\n        if (prev < current) {\r\n            stack.push(lineCount - 1);\r\n        }\r\n        else if (prev > current) {\r\n            const last = stack.pop();\r\n            if (last !== undefined) {\r\n                result.pairs.push([last, lineCount]);\r\n            }\r\n        }\r\n        const parent = stack[stack.length - 1] !== undefined ? stack[stack.length - 1] : null;\r\n        result.parents.push(...Array(numLines).fill(parent));\r\n        prev = current;\r\n        lineCount += numLines;\r\n    }\r\n    // スタックが余ったらコードの末尾とペアにする。\r\n    for (const item of stack) {\r\n        result.pairs.push([item, lineCount]);\r\n    }\r\n    return result;\r\n}\r\nexport default {\r\n    convert,\r\n    getBlockStructure,\r\n    getIndent,\r\n    countIndent,\r\n    isIndentSyntaxEnabled\r\n};\r\n","// @ts-nocheck\r\n/* eslint-disable no-template-curly-in-string */\r\n/** なでしこのtokenのtypeをscope（CSSのクラス名）に変換する。 */\r\nimport { OffsetToLineColumn } from '../core/src/nako_source_mapping.mjs';\r\nimport { NakoError } from '../core/src/nako_errors.mjs';\r\nimport NakoIndent from '../core/src/nako_indent.mjs';\r\nimport { NakoPrepare } from '../core/src/nako_prepare.mjs';\r\n// alias\r\nconst getBlockStructure = NakoIndent.getBlockStructure;\r\nconst getIndent = NakoIndent.getIndent;\r\nconst countIndent = NakoIndent.countIndent;\r\nconst isIndentSyntaxEnabled = NakoIndent.isIndentSyntaxEnabled;\r\n/**\r\n * シンタックスハイライトでは一般にテキストの各部分に 'comment.line' のようなラベルを付け、各エディタテーマがそのそれぞれの色を設定する。\r\n * ace editor では例えば 'comment.line' が付いた部分はクラス .ace_comment.ace_line が付いたHTMLタグで囲まれ、各テーマはそれに対応するCSSを実装する。\r\n * @returns TokenType\r\n */\r\nexport function getScope(token) {\r\n    switch (token.type) {\r\n        case 'line_comment': return 'comment.line';\r\n        case 'range_comment': return 'comment.block';\r\n        case 'def_test': return 'keyword.control';\r\n        case 'def_func': return 'keyword.control';\r\n        case 'func': return 'entity.name.function';\r\n        case 'number': return 'constant.numeric';\r\n        // 独立した助詞\r\n        case 'とは':\r\n        case 'ならば':\r\n        case 'でなければ':\r\n            return 'keyword.control';\r\n        // 制御構文\r\n        case 'ここから':\r\n        case 'ここまで':\r\n        case 'もし':\r\n        case '違えば':\r\n        case 'require':\r\n            return 'keyword.control';\r\n        // 予約語\r\n        case '回':\r\n        case '間':\r\n        case '繰り返す':\r\n        case '反復':\r\n        case '抜ける':\r\n        case '続ける':\r\n        case '戻る':\r\n        case '先に':\r\n        case '次に':\r\n        case '代入':\r\n        case '逐次実行':\r\n        case '条件分岐':\r\n        case '取込':\r\n        case 'エラー監視':\r\n        case 'エラー':\r\n        case '変数':\r\n        case '実行速度優先':\r\n            return 'keyword.control';\r\n        case '定める':\r\n        case '定数':\r\n            return 'support.constant';\r\n        // 演算子\r\n        case 'shift_r0':\r\n        case 'shift_r':\r\n        case 'shift_l':\r\n        case 'gteq':\r\n        case 'lteq':\r\n        case 'noteq':\r\n        case 'eq':\r\n        case 'not':\r\n        case 'gt':\r\n        case 'lt':\r\n        case 'and':\r\n        case 'or':\r\n        case '@':\r\n        case '+':\r\n        case '-':\r\n        case '**':\r\n        case '*':\r\n        case '÷÷':\r\n        case '/':\r\n        case '%':\r\n        case '^':\r\n        case '&':\r\n            return 'keyword.operator';\r\n        case 'string':\r\n        case 'string_ex':\r\n            return 'string.other';\r\n        case 'word':\r\n            if (['そう', 'それ', '回数', '対象キー', '対象'].includes(token.value)) {\r\n                return 'variable.language';\r\n            }\r\n            else {\r\n                return 'variable.other';\r\n            }\r\n        default:\r\n            return 'markup.other';\r\n    }\r\n}\r\n/**\r\n * @param {TokenWithSourceMap} compilerToken\r\n * @param {NakoCompiler} nako3\r\n * @param {string} value\r\n * @param {boolean} includesLastCharacter\r\n * @param {boolean} underlineJosi\r\n */\r\nexport function getEditorTokens(compilerToken, nako3, value, includesLastCharacter, underlineJosi) {\r\n    const type = getScope(compilerToken);\r\n    const docHTML = getDocumentationHTML(compilerToken, nako3);\r\n    // 助詞があれば助詞の部分を分割する。\r\n    // 最後の文字が現在の行に含まれないときは助詞を表示しない。そうしないと例えば `「文字列\\n」を表示` の「列」の部分に下線が引かれてしまう。\r\n    if (compilerToken.rawJosi && value.length >= compilerToken.rawJosi.length && includesLastCharacter && underlineJosi) {\r\n        return [\r\n            { type, docHTML, value: value.slice(0, -compilerToken.rawJosi.length) },\r\n            { type: type + '.markup.underline', docHTML, value: value.slice(-compilerToken.josi.length) }\r\n        ];\r\n    }\r\n    return [\r\n        { type, docHTML, value }\r\n    ];\r\n}\r\n/**\r\n * `name` が定義されたプラグインの名前を返す。\r\n */\r\nexport function findPluginName(name, nako3) {\r\n    for (const pluginName of Object.keys(nako3.__module)) {\r\n        if (Object.keys(nako3.__module[pluginName]).includes(name)) {\r\n            return pluginName;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * i = 0, 1, 2, ... に対して 'A', 'B', 'C', ... 'Z', 'AA', 'AB', ... を返す。\r\n */\r\nexport function createParameterName(i) {\r\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n    return i.toString(26).split('').map((v) => alphabet[parseInt(v, 26)]).join('');\r\n}\r\n/**\r\n * パラメータの定義を表す文字列を生成する。例えば `[['と', 'の'], ['を']]` に対して `'（Aと|Aの、Bを）'` を返す、パラメータが無い場合、空文字列を返す。\r\n */\r\nexport function createParameterDeclaration(josi) {\r\n    const args = josi.map((union, i) => union.map((v) => `${createParameterName(i)}${v}`).join('|')).join('、');\r\n    if (args !== '') {\r\n        return `（${args}）`;\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n// https://stackoverflow.com/a/6234804\r\nexport function escapeHTML(t) {\r\n    return t\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#039;');\r\n}\r\n/**\r\n * 関数のドキュメントを返す。\r\n */\r\nexport function getDocumentationHTML(token, nako3) {\r\n    const meta = (text) => `<span class=\"tooltip-plugin-name\">${escapeHTML(text)}</span>`;\r\n    if (token.type === 'func') {\r\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\r\n        const josi = (token.meta && token.meta.josi) ? createParameterDeclaration(token.meta.josi) : ''; // {関数} のとき token.meta.josi が存在しない\r\n        if (pluginName) {\r\n            return escapeHTML(josi + token.value) + meta(pluginName);\r\n        }\r\n        return escapeHTML(josi + token.value);\r\n    }\r\n    else if (token.type === 'word') {\r\n        /** @type {string | null} */\r\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\r\n        if (pluginName) {\r\n            return escapeHTML(token.value + '') + meta(pluginName);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ace editor ではエディタの文字列の全ての部分に何らかの `type` を付けなければならない。\r\n * なでしこのエディタでは 'markup.other' をデフォルト値として使うことにした。\r\n * @returns {EditorToken[]}\r\n */\r\nconst getDefaultTokens = (row, doc) => [{ type: 'markup.other', value: doc.getLine(row), docHTML: null }];\r\n/**\r\n * 一時的にloggerを無効化する。そうしないとシンタックスハイライトの更新のたびにloggerへコンパイルエラーや警告が送られて、結果のボックスに行が追加されてしまう。\r\n * @type {<T>(nako3: NakoCompiler, f: () => T) => T}\r\n */\r\nconst withoutLogger = (nako3, f) => {\r\n    const logger = nako3.logger;\r\n    try {\r\n        nako3.replaceLogger();\r\n        return f();\r\n    }\r\n    finally {\r\n        nako3.logger = logger;\r\n    }\r\n};\r\n/**\r\n * プログラムをlexerでtokenizeした後、ace editor 用のトークン列に変換する。\r\n * @param lines\r\n * @param nako3\r\n * @param underlineJosi\r\n */\r\nexport function tokenize(lines, nako3, underlineJosi) {\r\n    const code = lines.join('\\n');\r\n    // 取り込み文を含めてしまうと依存ファイルが大きい時に時間がかかってしまうため、\r\n    // 取り込み文を無視してトークン化してから、依存ファイルで定義された関数名と一致するトークンを関数のトークンへ変換する。\r\n    nako3.reset({ needToClearPlugin: false });\r\n    const lexerOutput = withoutLogger(nako3, () => nako3.lex(code, 'main.nako3', undefined, true));\r\n    lexerOutput.commentTokens = lexerOutput.commentTokens.filter((t) => t.file === 'main.nako3');\r\n    lexerOutput.requireTokens = lexerOutput.requireTokens.filter((t) => t.file === 'main.nako3');\r\n    lexerOutput.tokens = lexerOutput.tokens.filter((t) => t.file === 'main.nako3');\r\n    // 外部ファイルで定義された関数名に一致するトークンのtypeをfuncに変更する。\r\n    // 取り込んでいないファイルも参照される問題や、関数名の重複がある場合に正しくない情報を表示する問題がある。\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n        /** @type {Record<string, object>} */\r\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\r\n            for (const token of lexerOutput.tokens) {\r\n                if (token.type === 'word' && token.value !== 'それ' && funclist[token.value]) {\r\n                    token.type = 'func';\r\n                    // meta.file に定義元のファイル名を持たせる。\r\n                    token.meta = { ...funclist[token.value + ''], file };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // eol、eof、長さが1未満のトークン、位置を特定できないトークンを消す\r\n    /** @type {(TokenWithSourceMap & { startOffset: number, endOffset: number })[]} */\r\n    // @ts-ignore\r\n    const tokens = [...lexerOutput.tokens, ...lexerOutput.commentTokens, ...lexerOutput.requireTokens].filter((t) => t.type !== 'eol' && t.type !== 'eof' &&\r\n        typeof t.startOffset === 'number' && typeof t.endOffset === 'number' &&\r\n        t.startOffset < t.endOffset);\r\n    // startOffsetでソートする\r\n    tokens.sort((a, b) => (a.startOffset || 0) - (b.startOffset || 0));\r\n    // 各行について、余る文字の無いようにエディタのトークンに変換する。\r\n    // 複数のトークンが重なることはないと仮定する。\r\n    let lineStartOffset = 0;\r\n    let tokenIndex = 0;\r\n    // 実際に必要なプロパティはtype, valueだけで、docは独自に追加した。\r\n    /** @type {EditorToken[][]} */\r\n    const editorTokens = []; // 各行のエディタのトークン\r\n    for (let i = 0; i < lines.length; i++) {\r\n        editorTokens.push([]);\r\n        const lineEndOffset = lineStartOffset + lines[i].length;\r\n        let offset = lineStartOffset;\r\n        // 現在の行にかかっているトークンまで飛ばす\r\n        while (tokenIndex < tokens.length &&\r\n            tokens[tokenIndex].endOffset <= lineStartOffset) {\r\n            tokenIndex++;\r\n        }\r\n        // 行全体を完全にまたがっているトークンが存在する場合\r\n        if (tokenIndex < tokens.length &&\r\n            tokens[tokenIndex].startOffset <= lineStartOffset &&\r\n            tokens[tokenIndex].endOffset >= lineEndOffset) {\r\n            editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, lines[i], tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\r\n        }\r\n        else {\r\n            // 行頭をまたがっているトークンが存在する場合\r\n            if (tokenIndex < tokens.length &&\r\n                tokens[tokenIndex].startOffset <= lineStartOffset) {\r\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\r\n                offset = tokens[tokenIndex].endOffset;\r\n                tokenIndex++;\r\n            }\r\n            // 行頭も行末もまたがっていないトークンを処理する\r\n            while (tokenIndex < tokens.length &&\r\n                tokens[tokenIndex].endOffset < lineEndOffset) {\r\n                // このトークンと直前のトークンの間に隙間があるなら、埋める\r\n                if (offset < tokens[tokenIndex].startOffset) {\r\n                    editorTokens[i].push({\r\n                        type: 'markup.other',\r\n                        docHTML: null,\r\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\r\n                    });\r\n                    offset = tokens[tokenIndex].startOffset;\r\n                }\r\n                // 現在のトークンを使う\r\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\r\n                offset = tokens[tokenIndex].endOffset;\r\n                tokenIndex++;\r\n            }\r\n            // 行末をまたがっているトークンが存在する場合\r\n            if (tokenIndex < tokens.length &&\r\n                tokens[tokenIndex].startOffset < lineEndOffset) {\r\n                // トークンの前の隙間\r\n                if (offset < tokens[tokenIndex].startOffset) {\r\n                    editorTokens[i].push({\r\n                        type: 'markup.other',\r\n                        docHTML: null,\r\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\r\n                    });\r\n                    offset = tokens[tokenIndex].startOffset;\r\n                }\r\n                // トークンを使う\r\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(tokens[tokenIndex].startOffset, lineEndOffset), tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\r\n            }\r\n            else {\r\n                editorTokens[i].push({\r\n                    type: 'markup.other',\r\n                    docHTML: null,\r\n                    value: code.slice(offset, lineEndOffset)\r\n                });\r\n            }\r\n        }\r\n        lineStartOffset += lines[i].length + 1;\r\n    }\r\n    return { editorTokens, lexerOutput };\r\n}\r\n/**\r\n * エディタ上にエラーメッセージの波線とgutterの赤いマークとエラーメッセージのポップアップを設定するためのクラス。\r\n */\r\nexport class EditorMarkers {\r\n    /**\r\n       * @param {any} session\r\n       * @param {AceDocument} doc\r\n       * @param {TypeofAceRange} AceRange\r\n       * @param {boolean} disable\r\n       */\r\n    constructor(session, doc, AceRange, disable) {\r\n        this.session = session;\r\n        this.doc = doc;\r\n        this.AceRange = AceRange;\r\n        /** @type {any[]} */\r\n        this.markers = [];\r\n        this.hasAnnotations = false;\r\n        this.disable = disable;\r\n    }\r\n    /**\r\n       * @param {number} startLine\r\n       * @param {number | null} startColumn\r\n       * @param {number | null} endLine\r\n       * @param {number | null} endColumn\r\n       * @param {(row: number) => string} getLine\r\n       * @returns {[number, number, number, number]}\r\n       */\r\n    static fromNullable(startLine, startColumn, endLine, endColumn, getLine) {\r\n        if (startColumn === null) {\r\n            startColumn = 0;\r\n        }\r\n        if (endLine === null) {\r\n            endLine = startLine;\r\n        }\r\n        if (endColumn === null) {\r\n            endColumn = getLine(endLine).length;\r\n        }\r\n        // 最低でも1文字分の長さをとる\r\n        if (startLine === endLine && startColumn === endColumn) {\r\n            endColumn++;\r\n        }\r\n        return [startLine, startColumn, endLine, endColumn];\r\n    }\r\n    /**\r\n       * @param {string} code @param {number} startOffset @param {number} endOffset\r\n       * @returns {[number, number, number, number]}\r\n       */\r\n    static fromOffset(code, startOffset, endOffset) {\r\n        const offsetToLineColumn = new OffsetToLineColumn(code);\r\n        const start = offsetToLineColumn.map(startOffset, false);\r\n        const end = offsetToLineColumn.map(endOffset, false);\r\n        return [start.line, start.column, end.line, end.column];\r\n    }\r\n    /**\r\n       * @param {string} code\r\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\r\n       * @param {(row: number) => string} getLine\r\n       * @returns {[number, number, number, number]}\r\n       */\r\n    static fromError(code, error, getLine) {\r\n        if (typeof error.startOffset === 'number' && typeof error.endOffset === 'number') {\r\n            // 完全な位置を取得できる場合\r\n            return this.fromOffset(code, error.startOffset, error.endOffset);\r\n        }\r\n        else if (typeof error.line === 'number') {\r\n            // 行全体の場合\r\n            return this.fromNullable(error.line, null, null, null, getLine);\r\n        }\r\n        else {\r\n            // 位置が不明な場合\r\n            return this.fromNullable(0, null, null, null, getLine);\r\n        }\r\n    }\r\n    /**\r\n       * @param {number} startLine\r\n       * @param {number | null} startColumn\r\n       * @param {number | null} endLine\r\n       * @param {number | null} endColumn\r\n       * @param {string} message\r\n       * @param {'warn' | 'error'} type\r\n       */\r\n    add(startLine, startColumn, endLine, endColumn, message, type) {\r\n        if (this.disable) {\r\n            return;\r\n        }\r\n        const range = new this.AceRange(...EditorMarkers.fromNullable(startLine, startColumn, endLine, endColumn, (row) => this.doc.getLine(row)));\r\n        this.markers.push(this.session.addMarker(range, 'marker-' + (type === 'warn' ? 'yellow' : 'red'), 'text', false));\r\n        // typeは 'error' | 'warning' | 'info'\r\n        this.session.setAnnotations([{ row: startLine, column: startColumn, text: message, type: type === 'warn' ? 'warning' : 'error' }]);\r\n        this.hasAnnotations = true;\r\n    }\r\n    /**\r\n       * @param {string} code\r\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\r\n       * @param {'warn' | 'error'} type\r\n       */\r\n    addByError(code, error, type) {\r\n        this.add(...EditorMarkers.fromError(code, error, (row) => this.doc.getLine(row)), error.message, type);\r\n    }\r\n    /**\r\n       * 全てのエラーメッセージを削除する。\r\n       */\r\n    clear() {\r\n        for (const marker of this.markers) {\r\n            this.session.removeMarker(marker);\r\n        }\r\n        this.markers.length = 0;\r\n        if (this.hasAnnotations) {\r\n            this.session.clearAnnotations();\r\n            this.hasAnnotations = false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * ace editor のBackgroundTokenizerを上書きして、シンタックスハイライトを自由に表示するためのクラス。\r\n * ace editor ではシンタックスハイライトのために正規表現ベースのBackgroundTokenizerクラスを用意し定期的にトークン化を\r\n * 行っているが、正規表現ではなくなでしこのコンパイラの出力を使うためにはそれを上書きする必要がある。\r\n */\r\nexport class BackgroundTokenizer {\r\n    /**\r\n       * @param {AceDocument} doc\r\n       * @param {NakoCompiler} nako3\r\n       * @param {(firstRow: number, lastRow: number, ms: number) => void} onTokenUpdate\r\n       * @param {(code: string, err: Error) => void} onCompileError\r\n       * @param {boolean} underlineJosi\r\n       */\r\n    constructor(doc, nako3, onTokenUpdate, onCompileError, underlineJosi) {\r\n        this.onUpdate = onTokenUpdate;\r\n        this.doc = doc;\r\n        this.dirty = true;\r\n        this.nako3 = nako3;\r\n        this.onCompileError = onCompileError;\r\n        this.underlineJosi = underlineJosi;\r\n        // オートコンプリートで使うために、直近のtokenizeの結果を保存しておく\r\n        /** @type {ReturnType<NakoCompiler['lex']> | null} */\r\n        this.lastLexerOutput = null;\r\n        // 各行のパース結果。\r\n        // typeはscopeのこと。配列の全要素のvalueを結合した文字列がその行の文字列と等しくなる必要がある。\r\n        /** @type {EditorToken[][]} */\r\n        this.lines = this.doc.getAllLines().map((line) => [{ type: 'markup.other', value: line, docHTML: null }]);\r\n        // this.lines は外部から勝手に編集されてしまうため、コピーを持つ\r\n        /** @type {{ code: string, lines: string } | null} */\r\n        this.cache = null;\r\n        this.deleted = false;\r\n        /** @public */\r\n        this.enabled = true;\r\n        const update = () => {\r\n            if (this.deleted) {\r\n                return;\r\n            }\r\n            if (this.dirty && this.enabled) {\r\n                const startTime = Date.now();\r\n                this.dirty = false;\r\n                const code = this.doc.getAllLines().join('\\n');\r\n                try {\r\n                    const startTime = Date.now();\r\n                    const out = tokenize(this.doc.getAllLines(), nako3, this.underlineJosi);\r\n                    this.lastLexerOutput = out.lexerOutput;\r\n                    this.lines = out.editorTokens;\r\n                    this.cache = { code, lines: JSON.stringify(this.lines) };\r\n                    // ファイル全体の更新を通知する。\r\n                    onTokenUpdate(0, this.doc.getLength() - 1, Date.now() - startTime);\r\n                }\r\n                catch (e) {\r\n                    onCompileError(code, e);\r\n                }\r\n                // tokenizeに時間がかかる場合、文字を入力できるように次回の実行を遅くする。\r\n                setTimeout(update, Math.max(100, Math.min(5000, (Date.now() - startTime) * 5)));\r\n            }\r\n            else {\r\n                setTimeout(update, 100);\r\n            }\r\n        };\r\n        // コンストラクタが返る前にコールバックを呼ぶのはバグの元になるため一瞬待つ。\r\n        // たとえば `const a = new BackgroundTokenizer(..., () => { /* aを使った処理 */ }, ...)` がReferenceErrorになる。\r\n        setTimeout(() => { update(); }, 0);\r\n    }\r\n    dispose() {\r\n        this.deleted = true;\r\n    }\r\n    /**\r\n       * テキストに変更があったときに呼ばれる。IME入力中には呼ばれない。\r\n       * @param {{ action: string, start: { row: number, column: number }, end: { row: number, column: number }, lines: string[] }} delta\r\n       */\r\n    $updateOnChange(delta) {\r\n        this.dirty = true;\r\n        const startRow = delta.start.row;\r\n        const endRow = delta.end.row;\r\n        if (startRow === endRow) { // 1行の編集\r\n            if (delta.action === 'insert' && this.lines[startRow]) { // 行内に文字列を挿入\r\n                const columnStart = delta.start.column;\r\n                // updateOnChangeはIME入力中には呼ばれない。composition_placeholder を消さないとIME確定後の表示がずれる。\r\n                const oldTokens = this.lines[startRow]\r\n                    .filter((v) => v.type !== 'composition_placeholder');\r\n                /** @type {EditorToken[]} */\r\n                const newTokens = [];\r\n                let i = 0;\r\n                let offset = 0;\r\n                // columnStartより左のトークンはそのまま保持する\r\n                while (i < oldTokens.length && offset + oldTokens[i].value.length <= columnStart) {\r\n                    newTokens.push(oldTokens[i]);\r\n                    offset += oldTokens[i].value.length;\r\n                    i++;\r\n                }\r\n                // columnStartに重なっているトークンがあれば、2つに分割する\r\n                if (i < oldTokens.length && offset < columnStart) {\r\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(0, columnStart - offset), docHTML: null });\r\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\r\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(columnStart - offset), docHTML: null });\r\n                    i++;\r\n                }\r\n                else {\r\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\r\n                }\r\n                // columnStartより右のトークンもそのまま保持する\r\n                while (i < oldTokens.length) {\r\n                    newTokens.push(oldTokens[i]);\r\n                    i++;\r\n                }\r\n                this.lines[startRow] = newTokens;\r\n            }\r\n            else {\r\n                this.lines[startRow] = getDefaultTokens(startRow, this.doc);\r\n            }\r\n        }\r\n        else if (delta.action === 'remove') { // 範囲削除\r\n            this.lines.splice(startRow, endRow - startRow + 1, getDefaultTokens(startRow, this.doc));\r\n        }\r\n        else { // 行の挿入\r\n            this.lines.splice(startRow, 1, ...Array(endRow - startRow + 1).fill(null).map((_, i) => getDefaultTokens(i + startRow, this.doc)));\r\n        }\r\n    }\r\n    /**\r\n       * tokenizerの出力を返す。文字入力したときに呼ばれる。\r\n       * @param {number} row\r\n       */\r\n    getTokens(row) {\r\n        // IME入力中はthis.lines[row]に自動的にnullが設定される。その場合新しく行のトークン列を生成して返さなければならない。\r\n        // 返した配列には自動的にIMEの入力用のテキストボックスであるcomposition_placeholderが挿入される。\r\n        if (!this.lines[row]) {\r\n            let ok = false;\r\n            if (this.enabled) {\r\n                // tokenizeは非常に遅いため、キャッシュを使えるならそれを使う。\r\n                const code = this.doc.getAllLines().join('\\n');\r\n                if (this.cache !== null && this.cache.code === code) {\r\n                    ok = true;\r\n                }\r\n                else {\r\n                    try {\r\n                        const lines = tokenize(this.doc.getAllLines(), this.nako3, this.underlineJosi);\r\n                        this.cache = { code, lines: JSON.stringify(lines.editorTokens) };\r\n                        ok = true;\r\n                    }\r\n                    catch (e) {\r\n                        if (!(e instanceof NakoError)) {\r\n                            console.error(e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (ok && this.cache !== null) {\r\n                this.lines[row] = JSON.parse(this.cache.lines)[row];\r\n            }\r\n            else {\r\n                this.lines[row] = getDefaultTokens(row, this.doc);\r\n            }\r\n        }\r\n        return this.lines[row];\r\n    }\r\n    // ace側から呼ばれるが無視するメソッド\r\n    // @ts-ignore\r\n    start(startRow) { }\r\n    // @ts-ignore\r\n    fireUpdateEvent(firstRow, lastRow) { }\r\n    // @ts-ignore\r\n    setDocument(doc) { }\r\n    scheduleStart() { }\r\n    // @ts-ignore\r\n    setTokenizer(tokenizer) { }\r\n    stop() { }\r\n    // @ts-ignore\r\n    getState(row) { return 'start'; }\r\n}\r\n/**\r\n * シンタックスハイライト以外のエディタの挙動の定義。\r\n */\r\nexport class LanguageFeatures {\r\n    /**\r\n       * @param {TypeofAceRange} AceRange\r\n       * @param {NakoCompiler} nako3\r\n       */\r\n    constructor(AceRange, nako3) {\r\n        this.AceRange = AceRange;\r\n        this.nako3 = nako3;\r\n    }\r\n    /**\r\n       * Ctrl + / の動作の定義。\r\n       * @param {string} state\r\n       * @param {Session} session\r\n       * @param {number} startRow\r\n       * @param {number} endRow\r\n       */\r\n    static toggleCommentLines(state, { doc }, startRow, endRow) {\r\n        const prepare = NakoPrepare.getInstance();\r\n        /**\r\n             * @param {string} line\r\n             * @returns {{ type: 'blank' | 'code' } | { type: 'comment', start: number, len: number }}\r\n             */\r\n        const parseLine = (line) => {\r\n            // 先頭の空白を消す\r\n            const indent = getIndent(line);\r\n            if (indent === line) {\r\n                return { type: 'blank' };\r\n            }\r\n            line = line.substring(indent.length);\r\n            // 先頭がコメントの開始文字かどうか確認する\r\n            const ch2 = line.substring(0, 2).split('').map((c) => prepare.convert1ch(c)).join('');\r\n            if (ch2.substring(0, 1) === '#') {\r\n                return { type: 'comment', start: indent.length, len: 1 + (line.charAt(1) === ' ' ? 1 : 0) };\r\n            }\r\n            if (ch2 === '//') {\r\n                return { type: 'comment', start: indent.length, len: 2 + (line.charAt(2) === ' ' ? 1 : 0) };\r\n            }\r\n            return { type: 'code' };\r\n        };\r\n        /** @type {number[]} */\r\n        const rows = [];\r\n        for (let i = startRow; i <= endRow; i++) {\r\n            rows.push(i);\r\n        }\r\n        // 全ての行が空白行ならコメントアウト、全ての行が行コメントで始まるか空白行ならアンコメント、そうでなければコメントアウト。\r\n        if (!rows.every((row) => parseLine(doc.getLine(row)).type === 'blank') &&\r\n            rows.every((row) => parseLine(doc.getLine(row)).type !== 'code')) {\r\n            // アンコメント\r\n            for (const row of rows) {\r\n                // 行コメントで始まる行ならアンコメントする。\r\n                // 行コメントの直後にスペースがあるなら、それも1文字だけ削除する。\r\n                const line = parseLine(doc.getLine(row));\r\n                if (line.type === 'comment') {\r\n                    doc.removeInLine(row, line.start, line.start + line.len);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // 最もインデントの低い行のインデント数を数える\r\n            const minIndent = Math.min(...rows.map((row) => countIndent(doc.getLine(row))));\r\n            // コメントアウトする\r\n            for (const row of rows) {\r\n                const line = doc.getLine(row);\r\n                let column = line.length;\r\n                for (let i = 0; i < line.length; i++) {\r\n                    if (countIndent(line.slice(0, i)) >= minIndent) {\r\n                        column = i;\r\n                        break;\r\n                    }\r\n                }\r\n                doc.insertInLine({ row, column }, '// ');\r\n            }\r\n        }\r\n    }\r\n    /**\r\n       * 文字を入力するたびに呼ばれる。trueを返すとautoOutdentが呼ばれる。\r\n       * @param {string} state\r\n       * @param {string} line\r\n       * @param {string} input\r\n       * @returns {boolean}\r\n       */\r\n    static checkOutdent(state, line, input) {\r\n        // 特定のキーワードの入力が終わったタイミングでインデントを自動修正する。\r\n        // '違えば'のautoOutdentは「もし」と「条件分岐」のどちらのものか見分けが付かないため諦める。\r\n        // 「ここ|ま」（縦線がカーソル）の状態で「で」を打つとtrueになってしまう問題があるが、修正するには引数が足りない。\r\n        // eslint-disable-next-line no-irregular-whitespace\r\n        return /^[ 　・\\t]*ここまで$/.test(line + input);\r\n    }\r\n    /**\r\n       * checkOutdentがtrueを返したときに呼ばれる。\r\n       * @param {string} state\r\n       * @param {Session} session\r\n       * @param {number} row\r\n       * @returns {void}\r\n       */\r\n    autoOutdent(state, { doc }, row) {\r\n        // 1行目なら何もしない\r\n        if (row === 0) {\r\n            return;\r\n        }\r\n        const prevLine = doc.getLine(row - 1);\r\n        let indent;\r\n        if (LanguageFeatures.isBlockStart(prevLine)) {\r\n            // 1つ前の行が「〜ならば」などのブロック開始行なら、その行に合わせる。\r\n            indent = getIndent(prevLine);\r\n        }\r\n        else {\r\n            // そうでなければ、1つ前の行のインデントから1段階outdentした位置に合わせる。\r\n            const s = this.getBlockStructure(doc.getAllLines().join('\\n'));\r\n            const parent = s.parents[row];\r\n            indent = parent !== null ? s.spaces[parent] : '';\r\n        }\r\n        // 置換する\r\n        const oldIndent = getIndent(doc.getLine(row));\r\n        doc.replace(new this.AceRange(row, 0, row, oldIndent.length), indent);\r\n    }\r\n    /**\r\n       * エンターキーを押して行が追加されたときに挿入する文字列を指定する。\r\n       * @param {string} state\r\n       * @param {string} line 改行前にカーソルがあった行の文字列\r\n       * @param {string} tab タブ文字（デフォルトでは \"    \"）\r\n       */\r\n    static getNextLineIndent(state, line, tab) {\r\n        // ●で始まるか、特定のキーワードで終わる場合にマッチする。\r\n        if (this.isBlockStart(line)) {\r\n            return getIndent(line) + tab;\r\n        }\r\n        return getIndent(line);\r\n    }\r\n    /** @param {string} line */\r\n    static isBlockStart(line) {\r\n        // eslint-disable-next-line no-irregular-whitespace\r\n        return /^[ 　・\\t]*●|(ならば|なければ|ここから|条件分岐|違えば|回|繰り返(す|し)|の間|反復|とは|には|エラー監視|エラーならば|実行速度優先)、?\\s*$/.test(line);\r\n    }\r\n    /**\r\n       * オートコンプリート\r\n       * @param {number} row\r\n       * @param {string} prefix getCompletionPrefixの出力\r\n       * @param {NakoCompiler} nako3\r\n       * @param {BackgroundTokenizer} backgroundTokenizer\r\n       */\r\n    static getCompletionItems(row, prefix, nako3, backgroundTokenizer) {\r\n        /**\r\n             * keyはcaption。metaは候補の横に薄く表示されるテキスト。\r\n             * @type {Map<string, { value: string, meta: Set<string>, score: number }>}\r\n             */\r\n        const result = new Map();\r\n        /** 引数のリストを含まない、関数名だけのリスト @type {Set<string>} */\r\n        const values = new Set();\r\n        /**\r\n             * オートコンプリートの項目を追加する。すでに存在するならマージする。\r\n             * @param {string} caption @param {string} value @param {string} meta\r\n             */\r\n        const addItem = (caption, value, meta) => {\r\n            const item = result.get(caption);\r\n            if (item) {\r\n                item.meta.add(meta);\r\n            }\r\n            else {\r\n                // 日本語の文字数は英語よりずっと多いため、ただ一致する文字数を数えるだけで十分。\r\n                const score = prefix.split('').filter((c) => value.includes(c)).length;\r\n                result.set(caption, { value, meta: new Set([meta]), score });\r\n                values.add(value);\r\n            }\r\n        };\r\n        // プラグイン関数\r\n        for (const name of Object.keys(nako3.__varslist[0])) {\r\n            if (name.startsWith('!')) { // 「!PluginBrowser:初期化」などを除外\r\n                continue;\r\n            }\r\n            const f = nako3.funclist[name];\r\n            if (typeof f !== 'object' || f === null) {\r\n                continue;\r\n            }\r\n            const pluginName = findPluginName(name, nako3) || 'プラグイン';\r\n            if (f.type === 'func') {\r\n                addItem(createParameterDeclaration(f.josi) + name, name, pluginName);\r\n            }\r\n            else {\r\n                addItem(name, name, pluginName);\r\n            }\r\n        }\r\n        // 依存ファイルが定義した関数名\r\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\r\n            for (const [name, f] of Object.entries(funclist)) {\r\n                const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\r\n                addItem(josi + name, name, file);\r\n            }\r\n        }\r\n        // 現在のファイル内に存在する名前\r\n        if (backgroundTokenizer.lastLexerOutput !== null) {\r\n            for (const token of backgroundTokenizer.lastLexerOutput.tokens) {\r\n                const name = token.value + '';\r\n                // 同じ行のトークンの場合、自分自身にマッチしている可能性が高いため除外する。\r\n                // すでに定義されている場合も、定義ではなく参照の可能性が高いため除外する。\r\n                if (token.line === row || values.has(name)) {\r\n                    continue;\r\n                }\r\n                if (token.type === 'word') {\r\n                    addItem(name, name, '変数');\r\n                }\r\n                else if (token.type === 'func') {\r\n                    const f = nako3.funclist[name];\r\n                    const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\r\n                    addItem(josi + name, name, '関数');\r\n                }\r\n            }\r\n        }\r\n        return Array.from(result.entries()).map(([caption, data]) => ({ caption, ...data, meta: Array.from(data.meta).join(', ') }));\r\n    }\r\n    /**\r\n       * スニペット\r\n       */\r\n    /** @param {string} text */\r\n    static getSnippets(text) {\r\n        // インデント構文が有効化されているなら「ここまで」を消す\r\n        const indentSyntax = isIndentSyntaxEnabled(text);\r\n        /** @param {string} en @param {string} jp @param {string} snippet */\r\n        const item = (en, jp, snippet) => indentSyntax\r\n            ? { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t*ここまで(\\n|$)/g, '').replace(/\\t/g, '    ') }\r\n            : { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t/g, '    ') };\r\n        return [\r\n            item('if', 'もし〜ならば', 'もし${1:1=1}ならば\\n\\t${2:1を表示}\\n違えば\\n\\t${3:2を表示}\\nここまで\\n'),\r\n            item('times', '〜回', '${1:3}回\\n\\t${2:1を表示}\\nここまで\\n'),\r\n            item('for', '繰り返す', '${1:N}で${2:1}から${3:3}まで繰り返す\\n\\t${4:Nを表示}\\nここまで\\n'),\r\n            item('while', '〜の間', '${1:N<2の間}\\n\\tN=N+1\\nここまで\\n'),\r\n            item('foreach', '〜を反復', '${1:[1,2,3]}を反復\\n\\t${2:対象を表示}\\nここまで\\n'),\r\n            item('switch', '〜で条件分岐', '${1:N}で条件分岐\\n\\t${2:1}ならば\\n\\t\\t${3:1を表示}\\n\\tここまで\\n\\t${4:2}ならば\\n\\t\\t${5:2を表示}\\n\\tここまで\\n\\t違えば\\n\\t\\t${6:3を表示}\\n\\tここまで\\nここまで\\n'),\r\n            item('function', '●〜とは', '●（${1:AとBを}）${2:足す}とは\\n\\t${3:A+Bを戻す}\\nここまで\\n'),\r\n            item('test', '●テスト:〜とは', '●テスト:${2:足す}とは\\n\\t1と2を足す\\n\\tそれと3がASSERT等しい\\nここまで\\n'),\r\n            item('try', 'エラー監視', 'エラー監視\\n\\t${1:1のエラー発生}\\nエラーならば\\n\\t${2:2を表示}\\nここまで\\n')\r\n        ];\r\n    }\r\n    /**\r\n       * @param {string} line\r\n       * @param {NakoCompiler} nako3\r\n       */\r\n    static getCompletionPrefix(line, nako3) {\r\n        /** @type {ReturnType<NakoCompiler['lex']>[\"tokens\"] | null} */\r\n        let tokens = null;\r\n        // ひらがなとアルファベットとカタカナと漢字のみオートコンプリートする。\r\n        if (line.length === 0 || !/[ぁ-んa-zA-Zァ-ヶー\\u3005\\u4E00-\\u9FCF]/.test(line[line.length - 1])) {\r\n            return '';\r\n        }\r\n        // 現在の行のカーソルより前の部分をlexerにかける。速度を優先して1行だけ処理する。\r\n        try {\r\n            nako3.reset();\r\n            tokens = withoutLogger(nako3, () => nako3.lex(line, 'completion.nako3', undefined, true)).tokens\r\n                .filter((t) => t.type !== 'eol' && t.type !== 'eof');\r\n        }\r\n        catch (e) {\r\n            if (!(e instanceof NakoError)) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        if (tokens === null || tokens.length === 0 || !tokens[tokens.length - 1].value) {\r\n            return '';\r\n        }\r\n        const prefix = tokens[tokens.length - 1].value + '';\r\n        // 単語の先頭がひらがなではなく末尾がひらがなのとき、助詞を打っている可能性が高いためオートコンプリートしない。\r\n        if (/[ぁ-ん]/.test(prefix[prefix.length - 1]) && !/[ぁ-ん]/.test(prefix[0])) {\r\n            return '';\r\n        }\r\n        // 最後のトークンの値を、オートコンプリートで既に入力した部分とする。\r\n        return prefix;\r\n    }\r\n    /**\r\n       * 文字を打つたびに各行についてこの関数が呼ばれる。'start'を返した行はfold可能な範囲の先頭の行になる。\r\n       * @param {Session} session\r\n       * @param {string} foldStyle\r\n       * @param {number} row\r\n       * @returns {'start' | ''}\r\n       */\r\n    getFoldWidget({ doc }, foldStyle, row) {\r\n        // 速度が重要なため正規表現でマッチする。\r\n        return LanguageFeatures.isBlockStart(doc.getLine(row)) ? 'start' : '';\r\n    }\r\n    /**\r\n       * getFoldWidgetが'start'を返した行に設置されるfold用のボタンが押されたときに呼ばれる。\r\n       * @param {Session} session\r\n       * @param {string} foldStyle\r\n       * @param {number} row\r\n       * @returns {AceRange | null} foldする範囲\r\n       */\r\n    getFoldWidgetRange({ doc }, foldStyle, row) {\r\n        const pair = this.getBlockStructure(doc.getAllLines().join('\\n')).pairs.find((v) => v[0] === row);\r\n        if (pair !== undefined) {\r\n            return new this.AceRange(pair[0], doc.getLine(pair[0]).length, pair[1] - 1, doc.getLine(pair[1] - 1).length);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n       * @param {AceDocument} doc\r\n       * @returns {CodeLens[]}\r\n       */\r\n    static getCodeLens(doc) {\r\n        const results = [];\r\n        for (const [row, line] of Array.from(doc.getAllLines().entries())) {\r\n            // eslint-disable-next-line no-irregular-whitespace\r\n            const matches = /^[ 　・\\t]*●テスト:(.+?)(?:とは|$)/.exec(line);\r\n            if (matches !== null) {\r\n                results.push({\r\n                    start: { row },\r\n                    command: { title: 'テストを実行', id: 'runTest', arguments: [matches[1]] }\r\n                });\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    /**\r\n       * @param {string} code\r\n       * @returns {ReturnType<getBlockStructure>}\r\n       * @private\r\n       */\r\n    getBlockStructure(code) {\r\n        // キャッシュ\r\n        if (!this.blockStructure || this.blockStructure.code !== code) {\r\n            // @ts-ignore\r\n            this.blockStructure = { code, data: getBlockStructure(code) };\r\n        }\r\n        return this.blockStructure.data;\r\n    }\r\n}\r\n/**\r\n * 複数ファイルを表示するための最低限のAPIを提供する。\r\n * @typedef {{ content: string, cursor: { range: AceRange, reversed: boolean }, scroll: { top: number, left: number }, undoManger: any }} EditorTabState\r\n */\r\nclass EditorTabs {\r\n    /**\r\n       * @param {AceEditor} editor\r\n       * @param {TypeofAceRange} AceRange\r\n       * @param {any} UndoManager\r\n       */\r\n    constructor(editor, AceRange, UndoManager) {\r\n        this.editor = editor;\r\n        this.AceRange = AceRange;\r\n        this.UndoManager = UndoManager;\r\n    }\r\n    /** @param {string} content @returns {EditorTabState} */\r\n    newTab(content) {\r\n        return {\r\n            content,\r\n            cursor: { range: new this.AceRange(0, 0, 0, 0), reversed: false },\r\n            scroll: { left: 0, top: 0 },\r\n            undoManger: new this.UndoManager()\r\n        };\r\n    }\r\n    /** @returns {EditorTabState} */\r\n    getTab() {\r\n        return {\r\n            content: this.editor.getValue(),\r\n            cursor: { range: this.editor.session.selection.getRange(), reversed: this.editor.session.selection.isBackwards() },\r\n            scroll: { left: this.editor.session.getScrollLeft(), top: this.editor.session.getScrollTop() },\r\n            undoManger: this.editor.session.getUndoManager()\r\n        };\r\n    }\r\n    /** @param {EditorTabState} state */\r\n    setTab(state) {\r\n        this.editor.setValue(state.content);\r\n        this.editor.session.selection.setRange(state.cursor.range, state.cursor.reversed);\r\n        this.editor.session.setScrollLeft(state.scroll.left);\r\n        this.editor.session.setScrollTop(state.scroll.top);\r\n        this.editor.session.setUndoManager(state.undoManger);\r\n    }\r\n}\r\nclass Options {\r\n    /** Save Options */\r\n    static save(editor) {\r\n        try {\r\n            /** @type {any} */\r\n            const obj = {};\r\n            for (const key of ['syntaxHighlighting', 'keyboardHandler', 'theme', 'fontSize', 'wrap', 'useSoftTabs', 'tabSize', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\r\n                obj[key] = editor.getOption(key);\r\n            }\r\n            localStorage.setItem('nako3EditorOptions', JSON.stringify(obj));\r\n        }\r\n        catch (e) {\r\n            // JSON.stringify のエラー、localStorageのエラーなど\r\n            console.error(e);\r\n            return null;\r\n        }\r\n    }\r\n    /** @param {AceEditor} editor */\r\n    static load(editor) {\r\n        try {\r\n            if (!window.localStorage) {\r\n                return null;\r\n            }\r\n            const text = window.localStorage.getItem('nako3EditorOptions');\r\n            if (text === null) {\r\n                return null;\r\n            }\r\n            const json = JSON.parse(text);\r\n            if (['ace/keyboard/vscode', 'ace/keyboard/emacs', 'ace/keyboard/sublime', 'ace/keyboard/vim'].includes(json.keyboardHandler)) {\r\n                editor.setOption('keyboardHandler', json.keyboardHandler);\r\n            }\r\n            if (['ace/theme/xcode', 'ace/theme/monokai'].includes(json.theme)) {\r\n                editor.setOption('theme', json.theme);\r\n            }\r\n            if (typeof json.fontSize === 'number') {\r\n                editor.setOption('fontSize', Math.min(48, Math.max(6, json.fontSize)));\r\n            }\r\n            for (const key of ['syntaxHighlighting', 'wrap', 'useSoftTabs', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\r\n                if (typeof json[key] === 'boolean') {\r\n                    editor.setOption(key, json[key]);\r\n                }\r\n            }\r\n            if (typeof json.tabSize === 'number') {\r\n                editor.setOption('tabSize', Math.min(16, Math.max(0, json.tabSize)));\r\n            }\r\n        }\r\n        catch (e) {\r\n            // JSONのパースエラー、localStorageのエラーなど\r\n            console.error(e);\r\n            return null;\r\n        }\r\n    }\r\n    /** OptionPanelクラスをなでしこ用に書き換える。 */\r\n    static initPanel(OptionPanel, editor) {\r\n        const panel = new OptionPanel(editor); // editorはエラーが飛ばなければ何でも良い\r\n        // ページ内で一度だけ呼ぶ\r\n        if (this.done) {\r\n            return;\r\n        }\r\n        this.done = true;\r\n        // renderメソッドを呼ぶとrenderOptionGroupにoptionGroups.Main、optionGroups.More が順に渡されることを利用して、optionGroupsを書き換える。\r\n        let isMain = true;\r\n        panel.renderOptionGroup = (group) => {\r\n            if (isMain) { // Main\r\n                for (const key of Object.keys(group)) {\r\n                    delete group[key];\r\n                }\r\n                // スマートフォンでも見れるように、文字数は最小限にする\r\n                group['シンタックスハイライト'] = {\r\n                    path: 'syntaxHighlighting'\r\n                };\r\n                group['キーバインド'] = {\r\n                    path: 'keyboardHandler',\r\n                    type: 'select',\r\n                    items: [\r\n                        { caption: 'VSCode', value: 'ace/keyboard/vscode' },\r\n                        { caption: 'Emacs', value: 'ace/keyboard/emacs' },\r\n                        { caption: 'Sublime', value: 'ace/keyboard/sublime' },\r\n                        { caption: 'Vim', value: 'ace/keyboard/vim' }\r\n                    ]\r\n                };\r\n                group['カラーテーマ'] = {\r\n                    path: 'theme',\r\n                    type: 'select',\r\n                    items: [\r\n                        { caption: 'ライト', value: 'ace/theme/xcode' },\r\n                        { caption: 'ダーク', value: 'ace/theme/monokai' }\r\n                    ]\r\n                };\r\n                group['文字サイズ'] = {\r\n                    path: 'fontSize',\r\n                    type: 'number',\r\n                    defaultValue: 16\r\n                };\r\n                group['行の折り返し'] = {\r\n                    path: 'wrap',\r\n                    type: 'select',\r\n                    items: [\r\n                        { caption: 'なし', value: 'off' },\r\n                        { caption: 'あり', value: 'free' }\r\n                    ]\r\n                };\r\n                group['ソフトタブ'] = [{\r\n                        path: 'useSoftTabs'\r\n                    }, {\r\n                        ariaLabel: 'Tab Size',\r\n                        path: 'tabSize',\r\n                        type: 'number',\r\n                        values: [2, 3, 4, 8, 16]\r\n                    }];\r\n                group['空白文字を表示'] = {\r\n                    path: 'showInvisibles'\r\n                };\r\n                group['常に自動補完'] = {\r\n                    path: 'enableLiveAutocompletion'\r\n                };\r\n                group['折り返した行をインデント'] = {\r\n                    path: 'indentedSoftWrap'\r\n                };\r\n                group['助詞に下線を引く'] = {\r\n                    path: 'underlineJosi'\r\n                };\r\n                isMain = false;\r\n            }\r\n            else { // More\r\n                for (const key of Object.keys(group)) {\r\n                    delete group[key];\r\n                }\r\n            }\r\n        };\r\n        panel.render();\r\n        // 設定メニューは ace/ext/settings_menu.js の showSettingsMenu 関数によって開かれる。\r\n        // showSettingsMenu 関数は new OptionPanel(editor).render() で新しい設定パネルのインスタンスを生成するため、\r\n        // renderメソッドを上書きすることで、生成されたインスタンスにアクセスできる。\r\n        const render = OptionPanel.prototype.render;\r\n        OptionPanel.prototype.render = function (...args) {\r\n            render.apply(this, ...args); // 元の処理\r\n            // OptionPanel.setOption() で発火される setOption イベントをキャッチする\r\n            this.on('setOption', () => {\r\n                console.log('設定を保存しました。');\r\n                Options.save(this.editor);\r\n            });\r\n        };\r\n    }\r\n}\r\n/**\r\n * ace/ext/language_tools の設定がグローバル変数で保持されているため、こちら側でもグローバル変数で管理しないと、エディタが複数あるときに正しく動かない。\r\n * - captionはオートコンプリートの候補として表示されるテキスト\r\n * - metaはcaptionのテキストの右に薄く表示されるテキスト\r\n * - docHTMLはその更に右に独立したウィンドウで表示されるHTMLによる説明\r\n * - valueは決定したときに実際に挿入される文字列。プレースホルダーを配置するなら代わりにsnippetに値を設定する。\r\n *\r\n * @typedef {{\r\n *     getCompletions(\r\n *         editor: any,\r\n *         session: Session,\r\n *         pos: { row: number, column: number },\r\n *         prefix: any,\r\n *         callback: (\r\n *             a: null,\r\n *             b: { meta: string, caption: string, value?: string, score: number, docHTML?: string, snippet?: string }[]\r\n *         ) => void\r\n *     ): void\r\n *     getDocTooltip?(item: any): void\r\n * }} Completer\r\n * @type {Completer[]}\r\n */\r\nconst completers = [];\r\nlet editorIdCounter = 0;\r\n/**\r\n * 指定したidのHTML要素をなでしこ言語のエディタにする。\r\n *\r\n * - ace editor がグローバルに読み込まれている必要がある。\r\n * - wnako3_editor.css を読み込む必要がある。\r\n * - readonly にするには data-nako3-readonly=\"true\" を設定する。\r\n * - エラー位置の表示を無効化するには data-nako3-disable-marker=\"true\" を設定する。\r\n * - 縦方向にリサイズ可能にするには nako3-resizable=\"true\" を設定する。\r\n * - デバイスが遅いときにシンタックスハイライトを無効化する機能を切るには nako3-force-syntax-highlighting=\"true\" を設定する。\r\n *\r\n * @param {string | Element} idOrElement HTML要素\r\n * @param {import('./wnako3')} nako3\r\n * @param {any} ace\r\n */\r\nexport function setupEditor(idOrElement, nako3, ace) {\r\n    /** @type {AceEditor} */\r\n    const editor = ace.edit(idOrElement);\r\n    const element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\r\n    if (element === null) {\r\n        throw new Error(`[wnako3_editor] idが ${idOrElement} のHTML要素は存在しません。`);\r\n    }\r\n    /** @type {TypeofAceRange} */\r\n    const AceRange = ace.require('ace/range').Range;\r\n    const editorMarkers = new EditorMarkers(editor.session, editor.session.bgTokenizer.doc, AceRange, !!element.dataset.nako3DisableMarker);\r\n    if (element.classList.contains('nako3_ace_mounted')) {\r\n        // 同じエディタを誤って複数回初期化すると、ace editor の挙動を書き換えているせいで\r\n        // 意図しない動作をしたため、すでにエディタとして使われていないことを確認する。\r\n        throw new Error('なでしこ言語のエディタの初期化処理を同一のHTML要素に対して複数回適用しました。');\r\n    }\r\n    // lang=\"ja\" があると表示がずれる問題の修正 #839\r\n    element.setAttribute('lang', 'en');\r\n    // 以前のバージョンではnako3_editorをhtmlに直接付けていたため、互換性のためnako3_editorとは別のクラス名を使用する。\r\n    element.classList.add('nako3_ace_mounted');\r\n    element.classList.add('nako3_editor'); // CSSのため\r\n    const readonly = element.dataset.nako3Readonly;\r\n    // eslint-disable-next-line no-extra-boolean-cast\r\n    if (!!readonly) {\r\n        element.classList.add('readonly');\r\n        editor.setReadOnly(true);\r\n    }\r\n    editor.setFontSize(16);\r\n    /** @param {Session} session */\r\n    const resetEditorTokens = (session) => {\r\n        // 一旦テキスト全体を消してから、元に戻す\r\n        /** @type {AceDocument} */\r\n        const doc = session.doc;\r\n        const lines = doc.getAllLines();\r\n        const range = session.selection.getRange();\r\n        doc.removeFullLines(0, doc.getLength());\r\n        doc.insert({ row: 0, column: 0 }, lines.join('\\n'));\r\n        session.selection.setRange(range, false);\r\n    };\r\n    ace.require('ace/config').defineOptions(editor.constructor.prototype, 'editor', {\r\n        syntaxHighlighting: {\r\n            /** @type {(this: AceEditor, value: boolean) => void} */\r\n            set: function (value) {\r\n                this.session.bgTokenizer.enabled = value;\r\n                resetEditorTokens(this.session);\r\n            },\r\n            initialValue: true\r\n        },\r\n        underlineJosi: {\r\n            /** @type {(this: AceEditor, value: boolean) => void} */\r\n            set: function (value) {\r\n                this.session.bgTokenizer.underlineJosi = value;\r\n                resetEditorTokens(this.session);\r\n            },\r\n            initialValue: true\r\n        }\r\n    });\r\n    editor.setOptions({\r\n        wrap: 'free',\r\n        indentedSoftWrap: false,\r\n        showPrintMargin: false\r\n    });\r\n    ace.require('ace/keybindings/vscode');\r\n    editor.setKeyboardHandler('ace/keyboard/vscode');\r\n    // ドキュメントのホバー\r\n    const Tooltip = ace.require('ace/tooltip').Tooltip;\r\n    const tooltip = new Tooltip(editor.container);\r\n    const event = ace.require('ace/lib/event');\r\n    event.addListener(editor.renderer.content, 'mouseout', () => {\r\n        // マウスカーソルがエディタの外に出たら、tooltipを隠す\r\n        tooltip.hide();\r\n    });\r\n    editor.on('mousemove', (e) => {\r\n        // マウスカーソルがトークンに重なったときにtooltipを表示する。モバイル端末の場合はトークンにカーソルが当たったときに表示される。\r\n        const pos = e.getDocumentPosition();\r\n        // getTokenAtはcolumnが行末より大きいとき行末のトークンを返してしまう。\r\n        if (pos.column >= e.editor.session.getLine(pos.row).length) {\r\n            tooltip.hide();\r\n            return;\r\n        }\r\n        // getTokenAtは実際よりも1文字右のトークンを取得してしまうため、columnに1を足している。\r\n        /** @type {EditorToken} */\r\n        const token = e.editor.session.getTokenAt(pos.row, pos.column + 1);\r\n        if (token === null || !token.docHTML) {\r\n            // ドキュメントが存在しないトークンならtooltipを表示しない\r\n            tooltip.hide();\r\n            return;\r\n        }\r\n        tooltip.setHtml(token.docHTML);\r\n        tooltip.show(null, e.clientX, e.clientY);\r\n    });\r\n    editor.session.on('change', () => {\r\n        // モバイル端末でドキュメントが存在するトークンを編集するときにツールチップが消えない問題を解消するために、文字を打ったらtooltipを隠す。\r\n        tooltip.hide();\r\n        // 文字入力したらマーカーを消す\r\n        editorMarkers.clear();\r\n    });\r\n    editor.on('guttermousedown', (e) => {\r\n        const target = e.domEvent.target;\r\n        if (target.className.indexOf('ace_gutter-cell') === -1) {\r\n            return;\r\n        }\r\n        if (!editor.isFocused()) {\r\n            return;\r\n        }\r\n        const row = e.getDocumentPosition().row;\r\n        const editorId = e.editor.editorId || 0;\r\n        if (target.className.indexOf('ace_breakpoint') === -1) {\r\n            e.editor.session.setBreakpoint(row);\r\n            window.postMessage({ action: 'breakpoint:on', row, editorId });\r\n        }\r\n        else {\r\n            e.editor.session.clearBreakpoint(row);\r\n            window.postMessage({ action: 'breakpoint:off', row, editorId });\r\n        }\r\n        // console.log('BREAKPOINT=', row, 'editorId=', editorId)\r\n        e.stop();\r\n    });\r\n    const forceSyntaxHighlighting = !!element.dataset.nako3ForceSyntaxHighlighting;\r\n    let isFirstTime = true;\r\n    const oldBgTokenizer = editor.session.bgTokenizer;\r\n    const backgroundTokenizer = new BackgroundTokenizer(editor.session.bgTokenizer.doc, nako3, (firstRow, lastRow, ms) => {\r\n        oldBgTokenizer._signal('update', { data: { first: firstRow, last: lastRow } });\r\n        // 処理が遅い場合シンタックスハイライトを無効化する。\r\n        if (ms > 220 && editor.getOption('syntaxHighlighting') && !readonly && !forceSyntaxHighlighting && isFirstTime) {\r\n            isFirstTime = false;\r\n            slowSpeedMessage.classList.add('visible');\r\n            editor.setOption('syntaxHighlighting', false);\r\n            setTimeout(() => {\r\n                slowSpeedMessage.classList.remove('visible');\r\n            }, 13000);\r\n        }\r\n    }, (code, err) => { editorMarkers.addByError(code, err, 'error'); }, \r\n    /** @type {boolean} */ (editor.getOption('underlineJosi')));\r\n    // オートコンプリートを有効化する\r\n    editor.setOptions({\r\n        enableBasicAutocompletion: true,\r\n        enableSnippets: true,\r\n        enableLiveAutocompletion: true\r\n    });\r\n    const editorId = editorIdCounter++;\r\n    editor.wnako3EditorId = editorId;\r\n    // オートコンプリートのcompleterを設定する\r\n    completers.push({\r\n        getCompletions(editor, session, pos, prefix, callback) {\r\n            if (editor.wnako3EditorId !== editorId) {\r\n                callback(null, []);\r\n            }\r\n            else {\r\n                const items = LanguageFeatures.getCompletionItems(pos.row, prefix, nako3, backgroundTokenizer);\r\n                // 完全に一致する候補があればオートコンプリートしない。（Aceエディタでの挙動が微妙なため。）\r\n                if (items.some((v) => v.value === prefix)) {\r\n                    callback(null, []);\r\n                    return;\r\n                }\r\n                callback(null, items);\r\n            }\r\n        }\r\n    }, { getCompletions(editor, session, pos, prefix, callback) { callback(null, (editor.wnako3EditorId !== editorId) ? [] : LanguageFeatures.getSnippets(editor.session.doc.getAllLines().join('\\n'))); } });\r\n    ace.require('ace/ext/language_tools').setCompleters(completers);\r\n    // オートコンプリートの単語の区切りが日本語に対応していないため、メソッドを上書きして対応させる。\r\n    // 文字を入力するたびに呼ばれ、''以外を返すとその文字列をもとにしてautocompletionが始まる。\r\n    ace.require('ace/autocomplete/util').getCompletionPrefix = (/** @type {AceEditor} */ editor) => {\r\n        const pos = editor.getCursorPosition();\r\n        return LanguageFeatures.getCompletionPrefix(editor.session.doc.getLine(pos.row).slice(0, pos.column), nako3);\r\n    };\r\n    // エディタの挙動の設定\r\n    const languageFeatures = new LanguageFeatures(AceRange, nako3);\r\n    const oop = ace.require('ace/lib/oop');\r\n    const TextMode = ace.require('ace/mode/text').Mode;\r\n    const Mode = function () {\r\n        this.HighlightRules = new TextMode().HighlightRules;\r\n        this.foldingRules = {\r\n            getFoldWidget: languageFeatures.getFoldWidget.bind(languageFeatures),\r\n            getFoldWidgetRange: languageFeatures.getFoldWidgetRange.bind(languageFeatures)\r\n        };\r\n    };\r\n    oop.inherits(Mode, TextMode);\r\n    Mode.prototype.toggleCommentLines = LanguageFeatures.toggleCommentLines.bind(LanguageFeatures);\r\n    Mode.prototype.getNextLineIndent = LanguageFeatures.getNextLineIndent.bind(LanguageFeatures);\r\n    Mode.prototype.checkOutdent = LanguageFeatures.checkOutdent.bind(LanguageFeatures);\r\n    Mode.prototype.autoOutdent = languageFeatures.autoOutdent.bind(languageFeatures);\r\n    editor.session.setMode(new Mode());\r\n    // tokenizer （シンタックスハイライト）の上書き\r\n    editor.session.bgTokenizer.stop();\r\n    editor.session.bgTokenizer = backgroundTokenizer;\r\n    editor.setTheme('ace/theme/xcode');\r\n    // 設定メニューの上書き\r\n    // なでしこ用に上書きした設定の削除やテキストの和訳をする。\r\n    Options.load(editor);\r\n    const OptionPanel = ace.require('ace/ext/options').OptionPanel;\r\n    Options.initPanel(OptionPanel, editor);\r\n    // 右下のボタン全体を囲むdiv\r\n    const buttonContainer = document.createElement('div');\r\n    buttonContainer.classList.add('button-container');\r\n    editor.container.appendChild(buttonContainer);\r\n    // 遅い端末へのメッセージのボタン\r\n    const slowSpeedMessage = document.createElement('span');\r\n    slowSpeedMessage.classList.add('slow-speed-message');\r\n    slowSpeedMessage.innerHTML = '<span>エディタの|応答速度が|低下したため|シンタックス|ハイライトを|無効化|しました。</span>'.replace(/\\|/g, '</span><span>');\r\n    buttonContainer.appendChild(slowSpeedMessage);\r\n    // テストの定義の上に「テストを実行」ボタンを表示する\r\n    /** @type {{ name: 'test', callback: (testName: string | undefined) => void }[]} */\r\n    const codeLensListeners = [];\r\n    try {\r\n        const CodeLens = ace.require('ace/ext/code_lens');\r\n        editor.setOption('enableCodeLens', true);\r\n        editor.commands.addCommand({\r\n            name: 'runTest',\r\n            exec: (/** @type {AceEditor} */ editor, /** @type {any[]} */ args) => {\r\n                codeLensListeners\r\n                    .filter((v) => v.name === 'test')\r\n                    .forEach((f) => f.callback(args[0]));\r\n            }\r\n        });\r\n        CodeLens.registerCodeLensProvider(editor, {\r\n            provideCodeLenses: (/** @type {Session} */ session, /** @type {(_: null, arr: CodeLens[]) => void} */ callback) => {\r\n                callback(null, codeLensListeners.some((v) => v.name === 'test') ? LanguageFeatures.getCodeLens(session.doc) : []);\r\n            }\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.error(e); // ext/code_lens のscriptタグが読み込まれていない場合など。\r\n    }\r\n    // 「全画面」ボタン\r\n    const exitFullscreen = () => {\r\n        editor.container.classList.remove('fullscreen');\r\n        editor.renderer.setScrollMargin(0, 0, 0, 0); // marginを元に戻す\r\n    };\r\n    const fullscreenButton = document.createElement('span');\r\n    fullscreenButton.classList.add('editor-button');\r\n    fullscreenButton.innerText = '全画面';\r\n    fullscreenButton.addEventListener('click', (e) => {\r\n        if (editor.container.classList.contains('fullscreen')) {\r\n            exitFullscreen();\r\n        }\r\n        else {\r\n            editor.container.classList.add('fullscreen');\r\n            editor.renderer.setScrollMargin(20, 20, 0, 0); // 上下に少し隙間を開ける\r\n        }\r\n        e.preventDefault();\r\n    });\r\n    buttonContainer.appendChild(fullscreenButton);\r\n    // 「設定」ボタン\r\n    const settingsButton = document.createElement('span');\r\n    settingsButton.classList.add('editor-button');\r\n    settingsButton.innerText = '設定';\r\n    settingsButton.addEventListener('click', (e) => {\r\n        exitFullscreen();\r\n        editor.execCommand('showSettingsMenu');\r\n        e.preventDefault();\r\n    });\r\n    buttonContainer.appendChild(settingsButton);\r\n    // 複数ファイルの切り替え\r\n    const UndoManager = ace.require('ace/undomanager').UndoManager;\r\n    const editorTabs = new EditorTabs(editor, AceRange, UndoManager);\r\n    // リサイズ可能にする\r\n    const resizable = element.dataset.nako3Resizable;\r\n    if (resizable) {\r\n        new MutationObserver(() => { editor.resize(); }).observe(editor.container, { attributes: true });\r\n        editor.renderer.setScrollMargin(4, 0, 4, 0);\r\n        editor.container.classList.add('resizable');\r\n    }\r\n    const retokenize = () => { backgroundTokenizer.dirty = true; };\r\n    /**\r\n       * プログラムを実行して、エラーがあればエディタ上に波線を表示する。出力はoutputContainerに表示する。\r\n       * methodが'test'のとき、testNameを指定すると1つのテストだけ実行できる。\r\n       */\r\n    const run = (opts) => {\r\n        const code = editor.getValue();\r\n        const preCode = opts.preCode || ''; // プログラムの前に自動的に挿入されるコード\r\n        // loggerを新しいインスタンスに置き換える。そうしないとどのエディタで起きたエラー（や警告や出力）なのかが分からない。\r\n        const logger = nako3.replaceLogger();\r\n        if (opts.outputContainer) {\r\n            const c = opts.outputContainer;\r\n            logger.addListener('info', ({ html }) => {\r\n                if (!c) {\r\n                    console.log(html);\r\n                }\r\n                c.style.display = 'block';\r\n                c.innerHTML += html;\r\n            });\r\n            opts.outputContainer.classList.add('nako3-output-container');\r\n        }\r\n        let filename = opts.file || 'main.nako3';\r\n        // 警告とエラーをエディタ上に表示する。\r\n        logger.addListener('info', ({ position, noColor, level }) => {\r\n            if (position && (position.file === filename && (level === 'warn' || level === 'error'))) {\r\n                editorMarkers.addByError(code, { ...position, message: noColor }, level);\r\n            }\r\n        });\r\n        // 依存ファイルを読み込む。\r\n        const promise = nako3.loadDependencies(preCode + code, filename, preCode, opts.localFiles || {})\r\n            .then(async () => {\r\n            // プログラムを実行する。\r\n            if (!filename) {\r\n                filename = 'main.nako3';\r\n            }\r\n            if (opts.method === 'test') {\r\n                return nako3.test(preCode + code, filename, preCode, opts.testName);\r\n            }\r\n            else if (opts.method === 'compile') {\r\n                return nako3.compile(preCode + code, filename, false, preCode);\r\n            }\r\n            else {\r\n                const opt = { resetEnv: true, resetAll: true, preCode };\r\n                return await nako3.runAsync(preCode + code, filename, opt);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n            // エラーはloggerに送られるため何もしなくて良い\r\n            // しかし念のため console.error で出力\r\n            console.error('[wnako3_editor]', err, nako3.__globalObj);\r\n        })\r\n            .then(async (res) => {\r\n            // 読み込んだ依存ファイルの情報を使って再度シンタックスハイライトする。\r\n            retokenize();\r\n            // シンタックスハイライトが終わるのを待つ\r\n            while (backgroundTokenizer.dirty) {\r\n                await new Promise((resolve) => setTimeout(resolve, 0));\r\n            }\r\n            return res;\r\n        })\r\n            .catch((err) => {\r\n            console.error('[wnako3_editor::run::promise::catch]', err);\r\n        });\r\n        return { promise, logger, code };\r\n    };\r\n    return { editor, editorMarkers, editorTabs, retokenize, run, codeLensListeners };\r\n}\r\nexport default {\r\n    tokenize,\r\n    setupEditor,\r\n    LanguageFeatures,\r\n    EditorMarkers,\r\n    BackgroundTokenizer\r\n};\r\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\r\nconst nakoVersion = {\r\n    version: '3.4.12',\r\n    major: 3,\r\n    minor: 4,\r\n    patch: 12\r\n};\r\nexport default nakoVersion;\r\n","// @ts-nocheck\r\nexport default {\r\n    // @色定数\r\n    '水色': { type: 'const', value: 'aqua' },\r\n    '紫色': { type: 'const', value: 'fuchsia' },\r\n    '緑色': { type: 'const', value: 'lime' },\r\n    '青色': { type: 'const', value: 'blue' },\r\n    '赤色': { type: 'const', value: 'red' },\r\n    '黄色': { type: 'const', value: 'yellow' },\r\n    '黒色': { type: 'const', value: 'black' },\r\n    '白色': { type: 'const', value: 'white' },\r\n    '茶色': { type: 'const', value: 'maroon' },\r\n    '灰色': { type: 'const', value: 'gray' },\r\n    '金色': { type: 'const', value: 'gold' },\r\n    '黄金色': { type: 'const', value: 'gold' },\r\n    '銀色': { type: 'const', value: 'silver' },\r\n    '白金色': { type: 'const', value: 'silver' },\r\n    'オリーブ色': { type: 'const', value: 'olive' },\r\n    'ベージュ色': { type: 'const', value: 'beige' },\r\n    'アリスブルー色': { type: 'const', value: 'aliceblue' },\r\n    'RGB': {\r\n        type: 'func',\r\n        josi: [['と'], ['と'], ['で', 'の']],\r\n        pure: true,\r\n        fn: function (r, g, b) {\r\n            const z2 = (v) => {\r\n                const v2 = '00' + v.toString(16);\r\n                return v2.substr(v2.length - 2, 2);\r\n            };\r\n            return '#' + z2(r) + z2(g) + z2(b);\r\n        },\r\n        return_none: false\r\n    },\r\n    '色混': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (a) {\r\n            const z2 = (v) => {\r\n                const v2 = '00' + v.toString(16);\r\n                return v2.substr(v2.length - 2, 2);\r\n            };\r\n            if (!a) {\r\n                throw new Error('『色混ぜる』の引数には配列を指定します');\r\n            }\r\n            if (a.length < 3) {\r\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\r\n            }\r\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\r\n        },\r\n        return_none: false\r\n    }\r\n};\r\n","export default {\r\n    // @システム\r\n    'WNAKOバージョン': { type: 'const', value: '?' },\r\n    '終': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            // v3.3.74以降 plguin_system.mjsと挙動が同じになった\r\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\r\n            if (sys && sys.__v0) {\r\n                sys.__v0.forceClose = true;\r\n                if (!sys.__v0.useDebug) {\r\n                    throw new Error('__終わる__');\r\n                }\r\n            }\r\n            else {\r\n                throw new Error('__終わる__');\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    'OS取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            const ua = window.navigator.userAgent.toLowerCase();\r\n            if (ua.indexOf('windows') !== -1) {\r\n                return 'windows';\r\n            }\r\n            if (ua.indexOf('android') !== -1) {\r\n                return 'android';\r\n            }\r\n            if (ua.indexOf('iphone') !== -1) {\r\n                return 'iphone';\r\n            }\r\n            if (ua.indexOf('ipad') !== -1) {\r\n                return 'ipad';\r\n            }\r\n            if (ua.indexOf('mac os x') !== -1) {\r\n                return 'darwin';\r\n            }\r\n            if (ua.indexOf('macintosh') !== -1) {\r\n                return 'darwin';\r\n            }\r\n            if (ua.indexOf('cros') !== -1) {\r\n                return 'chromeos';\r\n            }\r\n            if (ua.indexOf('ubuntu') !== -1) {\r\n                return 'ubuntu';\r\n            }\r\n            if (ua.indexOf('linux') !== -1) {\r\n                return 'linux';\r\n            }\r\n            return 'unknown';\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @ダイアログ\r\n    '言': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            window.alert(s);\r\n        },\r\n        return_none: true\r\n    },\r\n    '尋': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const r = window.prompt(s);\r\n            if (!r) {\r\n                return sys.__v0['空'];\r\n            }\r\n            if (/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(r)) {\r\n                return parseFloat(r);\r\n            }\r\n            if (/^[-+－＋]?[0-9０-９]+([.．][0-9０-９]+)?$/.test(r)) {\r\n                return parseFloat(r.replace(/[－＋０-９．]/g, c => {\r\n                    return String.fromCharCode(c.charCodeAt(0) - 0xFEE0);\r\n                }));\r\n            }\r\n            return r;\r\n        }\r\n    },\r\n    '文字尋': {\r\n        type: 'func',\r\n        josi: [['と', 'を']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const r = window.prompt(s);\r\n            if (!r) {\r\n                return sys.__v0['空'];\r\n            }\r\n            return r;\r\n        }\r\n    },\r\n    '二択': {\r\n        type: 'func',\r\n        josi: [['で', 'の', 'と', 'を']],\r\n        pure: true,\r\n        fn: function (s) {\r\n            return window.confirm(s);\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @ブラウザ操作\r\n    'ブラウザ移動': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            window.location.href = url;\r\n        }\r\n    },\r\n    'ブラウザ戻': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            window.history.back(-1);\r\n        }\r\n    },\r\n    'ブラウザURL': { type: 'const', value: '' } // @NぶらうざURL\r\n};\r\n","export default {\r\n    // @HTTPとAJAX\r\n    'HTTP取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から', 'を']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\r\n        }\r\n    },\r\n    'AJAX受信': {\r\n        type: 'func',\r\n        josi: [['から', 'を']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\r\n        }\r\n    },\r\n    'AJAX受信時': {\r\n        type: 'func',\r\n        josi: [['で'], ['から', 'を']],\r\n        pure: true,\r\n        fn: function (callback, url, sys) {\r\n            sys.__exec('AJAX送信時', [callback, url, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    'AJAX送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\r\n        }\r\n    },\r\n    'AJAX送信時': {\r\n        type: 'func',\r\n        josi: [['の'], ['まで', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (callback, url, sys) {\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            fetch(url, options).then(res => {\r\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\r\n                if (res.status !== 200) {\r\n                    return sys.__v0['AJAX:ONERROR'](res.status);\r\n                }\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                callback(text, sys);\r\n            }).catch(err => {\r\n                sys.__v0['AJAX:ONERROR'](err);\r\n            });\r\n        },\r\n        return_none: true\r\n    },\r\n    'AJAXオプション': { type: 'const', value: '' },\r\n    'AJAXオプション設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ', 'と']],\r\n        pure: true,\r\n        fn: function (option, sys) {\r\n            sys.__v0['AJAXオプション'] = option;\r\n        },\r\n        return_none: true\r\n    },\r\n    'AJAXオプションPOST設定': {\r\n        type: 'func',\r\n        josi: [['を', 'で']],\r\n        pure: true,\r\n        fn: function (params, sys) {\r\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: bodyData\r\n            };\r\n            sys.__v0['AJAXオプション'] = options;\r\n        },\r\n        return_none: true\r\n    },\r\n    'AJAX失敗時': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (callback, sys) {\r\n            sys.__v0['AJAX:ONERROR'] = callback;\r\n        }\r\n    },\r\n    'AJAXテキスト取得': {\r\n        type: 'func',\r\n        josi: [['から', 'を']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            const res = await fetch(url, options);\r\n            const txt = await res.text();\r\n            return txt;\r\n        },\r\n        return_none: false\r\n    },\r\n    'AJAX_JSON取得': {\r\n        type: 'func',\r\n        josi: [['から']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            const res = await fetch(url, options);\r\n            const txt = await res.json();\r\n            return txt;\r\n        },\r\n        return_none: false\r\n    },\r\n    'AJAXバイナリ取得': {\r\n        type: 'func',\r\n        josi: [['から']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (url, sys) {\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            const res = await fetch(url, options);\r\n            const bin = await res.blob();\r\n            return bin;\r\n        },\r\n        return_none: false\r\n    },\r\n    // @GETとPOST\r\n    'GET送信時': {\r\n        type: 'func',\r\n        josi: [['の'], ['まで', 'へ', 'に']],\r\n        pure: false,\r\n        fn: function (callback, url, sys) {\r\n            sys.__exec('AJAX送信時', [callback, url, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    'POST送信時': {\r\n        type: 'func',\r\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\r\n        pure: false,\r\n        fn: function (callback, url, params, sys) {\r\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: bodyData\r\n            };\r\n            fetch(url, options).then(res => {\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                callback(text);\r\n            }).catch(err => {\r\n                sys.__v0['AJAX:ONERROR'](err);\r\n            });\r\n        }\r\n    },\r\n    'POSTフォーム送信時': {\r\n        type: 'func',\r\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\r\n        pure: true,\r\n        fn: function (callback, url, params, sys) {\r\n            const fd = new FormData();\r\n            for (const key in params) {\r\n                fd.set(key, params[key]);\r\n            }\r\n            const options = {\r\n                method: 'POST',\r\n                body: fd\r\n            };\r\n            fetch(url, options).then(res => {\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                callback(text);\r\n            }).catch(err => {\r\n                sys.__v0['AJAX:ONERROR'](err);\r\n            });\r\n        }\r\n    },\r\n    'POSTデータ生成': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (params, sys) {\r\n            const flist = [];\r\n            for (const key in params) {\r\n                const v = params[key];\r\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\r\n                flist.push(kv);\r\n            }\r\n            return flist.join('&');\r\n        }\r\n    },\r\n    'POST送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: false,\r\n        asyncFn: true,\r\n        fn: function (url, params, sys) {\r\n            return new Promise((resolve, reject) => {\r\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\r\n                const options = {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded'\r\n                    },\r\n                    body: bodyData\r\n                };\r\n                fetch(url, options).then(res => {\r\n                    return res.text();\r\n                }).then(text => {\r\n                    resolve(text);\r\n                }).catch(err => {\r\n                    reject(err.message);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    'POSTフォーム送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: false,\r\n        asyncFn: true,\r\n        fn: function (url, params, sys) {\r\n            return new Promise((resolve, reject) => {\r\n                const fd = new FormData();\r\n                for (const key in params) {\r\n                    fd.set(key, params[key]);\r\n                }\r\n                const options = {\r\n                    method: 'POST',\r\n                    body: fd\r\n                };\r\n                fetch(url, options).then(res => {\r\n                    return res.text();\r\n                }).then(text => {\r\n                    resolve(text);\r\n                }).catch(err => {\r\n                    reject(err.message);\r\n                });\r\n            });\r\n        }\r\n    },\r\n    // @HTTPとAJAX(保証)\r\n    'AJAX保障送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            return fetch(url, options);\r\n        },\r\n        return_none: false\r\n    },\r\n    'HTTP保障取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から', 'を']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            return sys.__exec('AJAX保障送信', [url, sys]);\r\n        },\r\n        return_none: false\r\n    },\r\n    'POST保障送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: true,\r\n        fn: function (url, params, sys) {\r\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: bodyData\r\n            };\r\n            return fetch(url, options);\r\n        },\r\n        return_none: false\r\n    },\r\n    'POSTフォーム保障送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: true,\r\n        fn: function (url, params, sys) {\r\n            const fd = new FormData();\r\n            for (const key in params) {\r\n                fd.set(key, params[key]);\r\n            }\r\n            const options = {\r\n                method: 'POST',\r\n                body: fd\r\n            };\r\n            return fetch(url, options);\r\n        },\r\n        return_none: false\r\n    },\r\n    'AJAX内容取得': {\r\n        type: 'func',\r\n        josi: [['から'], ['で']],\r\n        pure: true,\r\n        fn: function (res, type, sys) {\r\n            type = type.toString().toUpperCase();\r\n            if (type === 'TEXT' || type === 'テキスト') {\r\n                return res.text();\r\n            }\r\n            else if (type === 'JSON') {\r\n                return res.json();\r\n            }\r\n            else if (type === 'BLOB') {\r\n                return res.blob();\r\n            }\r\n            else if (type === 'ARRAY' || type === '配列') {\r\n                return res.arrayBuffer();\r\n            }\r\n            else if (type === 'BODY' || type === '本体') {\r\n                return res.body;\r\n            }\r\n            return res.body();\r\n        },\r\n        return_none: false\r\n    },\r\n    // @Blob\r\n    'BLOB作成': {\r\n        type: 'func',\r\n        josi: [['を', 'から'], ['で']],\r\n        pure: true,\r\n        fn: function (data, options) {\r\n            if (!(data instanceof Array)) {\r\n                data = [data];\r\n            }\r\n            return new Blob(data, options);\r\n        }\r\n    },\r\n    // @HTTPとAJAX(非推奨)\r\n    'AJAX逐次送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            if (!sys.resolve) {\r\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\r\n            }\r\n            sys.resolveCount++;\r\n            const resolve = sys.resolve;\r\n            const reject = sys.reject;\r\n            let options = sys.__v0['AJAXオプション'];\r\n            if (options === '') {\r\n                options = { method: 'GET' };\r\n            }\r\n            fetch(url, options).then(res => {\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                resolve();\r\n            }).catch(err => {\r\n                reject(err.message);\r\n            });\r\n        },\r\n        return_none: true\r\n    },\r\n    'HTTP逐次取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から', 'を']],\r\n        pure: false,\r\n        fn: function (url, sys) {\r\n            if (!sys.resolve) {\r\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\r\n            }\r\n            sys.__exec('AJAX逐次送信', [url, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    'POST逐次送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: false,\r\n        fn: function (url, params, sys) {\r\n            if (!sys.resolve) {\r\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\r\n            }\r\n            sys.resolveCount++;\r\n            const resolve = sys.resolve;\r\n            const reject = sys.reject;\r\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: bodyData\r\n            };\r\n            fetch(url, options).then(res => {\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                resolve(text);\r\n            }).catch(err => {\r\n                reject(err.message);\r\n            });\r\n        },\r\n        return_none: true\r\n    },\r\n    'POSTフォーム逐次送信': {\r\n        type: 'func',\r\n        josi: [['まで', 'へ', 'に'], ['を']],\r\n        pure: true,\r\n        fn: function (url, params, sys) {\r\n            if (!sys.resolve) {\r\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\r\n            }\r\n            sys.resolveCount++;\r\n            const resolve = sys.resolve;\r\n            const reject = sys.reject;\r\n            const fd = new FormData();\r\n            for (const key in params) {\r\n                fd.set(key, params[key]);\r\n            }\r\n            const options = {\r\n                method: 'POST',\r\n                body: fd\r\n            };\r\n            fetch(url, options).then(res => {\r\n                return res.text();\r\n            }).then(text => {\r\n                sys.__v0['対象'] = text;\r\n                resolve(text);\r\n            }).catch(err => {\r\n                reject(err.message);\r\n            });\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @DOM操作\r\n    'DOCUMENT': { type: 'const', value: '' },\r\n    'WINDOW': { type: 'const', value: '' },\r\n    'NAVIGATOR': { type: 'const', value: '' },\r\n    'DOM要素ID取得': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (id) {\r\n            return document.getElementById(id);\r\n        }\r\n    },\r\n    'DOM要素取得': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (q) {\r\n            if (typeof q === 'string') {\r\n                return document.querySelector(q);\r\n            }\r\n            return q;\r\n        }\r\n    },\r\n    'DOM要素全取得': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (q) {\r\n            return Array.from(document.querySelectorAll(q));\r\n        }\r\n    },\r\n    'タグ一覧取得': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (tag) {\r\n            return Array.from(document.getElementsByTagName(tag));\r\n        }\r\n    },\r\n    'DOM子要素取得': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (pa, q, sys) {\r\n            pa = sys.__query(pa, 'DOM子要素取得', true);\r\n            if (!pa.querySelector) {\r\n                throw new Error('『DOM子要素取得』で親要素がDOMではありません。');\r\n            }\r\n            return pa.querySelector(q);\r\n        }\r\n    },\r\n    'DOM子要素全取得': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: true,\r\n        fn: function (pa, q, sys) {\r\n            pa = sys.__query(pa, 'DOM子要素全取得', true);\r\n            if (!pa.querySelectorAll) {\r\n                throw new Error('『DOM子要素全取得』で親要素がDOMではありません。');\r\n            }\r\n            return Array.from(pa.querySelectorAll(q));\r\n        }\r\n    },\r\n    'DOMイベント設定': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        pure: false,\r\n        fn: function (dom, event, funcStr, sys) {\r\n            dom = sys.__query(dom, 'DOMイベント設定', false);\r\n            dom[event] = sys.__findVar(funcStr, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMテキスト設定': {\r\n        type: 'func',\r\n        josi: [['に', 'の', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (dom, text, sys) {\r\n            dom = sys.__query(dom, 'DOMテキスト設定', false);\r\n            const tag = dom.tagName.toUpperCase();\r\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\r\n                dom.value = text;\r\n            }\r\n            else if (tag === 'SELECT') {\r\n                for (let i = 0; i < dom.options.length; i++) {\r\n                    const v = dom.options[i].value;\r\n                    if (String(v) === text) {\r\n                        dom.selectedIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                dom.innerHTML = text;\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMテキスト取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (dom, sys) {\r\n            dom = sys.__query(dom, 'DOMテキスト取得', true);\r\n            if (!dom) {\r\n                return '';\r\n            }\r\n            const tag = dom.tagName.toUpperCase();\r\n            // input or textarea\r\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\r\n                return dom.value;\r\n            }\r\n            // select\r\n            if (tag === 'SELECT') {\r\n                const idx = dom.selectedIndex;\r\n                if (idx < 0) {\r\n                    return null;\r\n                }\r\n                return dom.options[idx].value;\r\n            }\r\n            return dom.innerHTML;\r\n        }\r\n    },\r\n    'DOM_HTML設定': {\r\n        type: 'func',\r\n        josi: [['に', 'の', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (dom, text, sys) {\r\n            dom = sys.__query(dom, 'DOM_HTML設定', false);\r\n            dom.innerHTML = text;\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOM_HTML取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (dom, sys) {\r\n            dom = sys.__query(dom, 'DOM_HTML取得', true);\r\n            if (!dom) {\r\n                return '';\r\n            }\r\n            return dom.innerHTML;\r\n        }\r\n    },\r\n    'テキスト設定': {\r\n        type: 'func',\r\n        josi: [['に', 'の', 'へ'], ['を']],\r\n        pure: false,\r\n        fn: function (dom, v, sys) {\r\n            return sys.__exec('DOMテキスト設定', [dom, v, sys]);\r\n        }\r\n    },\r\n    'テキスト取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: false,\r\n        fn: function (dom, sys) {\r\n            return sys.__exec('DOMテキスト取得', [dom, sys]);\r\n        }\r\n    },\r\n    'HTML設定': {\r\n        type: 'func',\r\n        josi: [['に', 'の', 'へ'], ['を']],\r\n        pure: false,\r\n        fn: function (dom, v, sys) {\r\n            return sys.__exec('DOM_HTML設定', [dom, v, sys]);\r\n        }\r\n    },\r\n    'HTML取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: false,\r\n        fn: function (dom, sys) {\r\n            return sys.__exec('DOM_HTML取得', [dom, sys]);\r\n        }\r\n    },\r\n    'DOM属性設定': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        uses: ['DOM和属性'],\r\n        pure: true,\r\n        fn: function (dom, s, v, sys) {\r\n            dom = sys.__query(dom, 'DOM属性設定', false);\r\n            const wa = sys.__v0['DOM和属性'];\r\n            if (wa[s]) {\r\n                s = wa[s];\r\n            }\r\n            // domのプロパティを確認して存在すればその値を設定する #1392\r\n            if (s in dom) {\r\n                dom[s] = v;\r\n            }\r\n            else {\r\n                dom.setAttribute(s, v);\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOM属性取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から'], ['を']],\r\n        uses: ['DOM和属性'],\r\n        pure: true,\r\n        fn: function (dom, s, sys) {\r\n            dom = sys.__query(dom, 'DOM属性取得', true);\r\n            if (!dom) {\r\n                return '';\r\n            }\r\n            const wa = sys.__v0['DOM和属性'];\r\n            if (wa[s]) {\r\n                s = wa[s];\r\n            }\r\n            // domのプロパティを確認して存在すればその値を取得する #1392\r\n            if (s in dom) {\r\n                return dom[s];\r\n            }\r\n            return dom.getAttribute(s);\r\n        }\r\n    },\r\n    'DOM和属性': {\r\n        type: 'const',\r\n        value: {\r\n            '幅': 'width',\r\n            '高さ': 'height',\r\n            '高': 'height',\r\n            'タイプ': 'type',\r\n            'データ': 'data',\r\n            '名前': 'name',\r\n            'ID': 'id',\r\n            '読取専用': 'readOnly',\r\n            '読み取り専用': 'readOnly',\r\n            '無効化': 'disabled'\r\n        }\r\n    },\r\n    'DOM和スタイル': {\r\n        type: 'const',\r\n        value: {\r\n            '幅': 'width',\r\n            '高さ': 'height',\r\n            '高': 'height',\r\n            '背景色': 'background-color',\r\n            '色': 'color',\r\n            'マージン': 'margin',\r\n            '余白': 'padding',\r\n            '文字サイズ': 'font-size',\r\n            '行揃え': 'text-align',\r\n            '左': 'left',\r\n            '右': 'right',\r\n            '中央': 'center',\r\n            'ボーダー': 'border',\r\n            'ボックス表示': 'display',\r\n            'なし': 'none',\r\n            'ブロック': 'block',\r\n            '表示位置': 'float',\r\n            '重なり': 'z-index',\r\n            '読取専用': 'readOnly',\r\n            '読み取り専用': 'readOnly',\r\n            'readonly': 'readOnly'\r\n        }\r\n    },\r\n    'DOMスタイル設定': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        uses: ['DOM和スタイル'],\r\n        pure: true,\r\n        fn: function (dom, s, v, sys) {\r\n            dom = sys.__query(dom, 'DOMスタイル設定', false);\r\n            const wa = sys.__v0['DOM和スタイル'];\r\n            if (wa[s] !== undefined) {\r\n                s = wa[s];\r\n            }\r\n            if (wa[v] !== undefined) {\r\n                v = wa[v];\r\n            }\r\n            dom.style[s] = v;\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMスタイル一括設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ'], ['を']],\r\n        uses: ['DOM和スタイル'],\r\n        pure: true,\r\n        fn: function (dom, values, sys) {\r\n            dom = sys.__query(dom, 'DOMスタイル一括設定', false);\r\n            if (dom instanceof window.HTMLElement) {\r\n                dom = [dom];\r\n            }\r\n            const wa = sys.__v0['DOM和スタイル'];\r\n            // 列挙したDOM一覧を全てスタイル変更する\r\n            for (let i = 0; i < dom.length; i++) {\r\n                const e = dom[i];\r\n                for (const key in values) {\r\n                    let s = key;\r\n                    let v = values[key];\r\n                    if (wa[s] !== undefined) {\r\n                        s = wa[s];\r\n                    }\r\n                    if (wa[v] !== undefined) {\r\n                        v = wa[v];\r\n                    }\r\n                    e.style[s] = v;\r\n                }\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMスタイル取得': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        uses: ['DOM和スタイル'],\r\n        pure: true,\r\n        fn: function (dom, style, sys) {\r\n            dom = sys.__query(dom, 'DOMスタイル取得', true);\r\n            if (!dom) {\r\n                return '';\r\n            }\r\n            const wa = sys.__v0['DOM和スタイル'];\r\n            if (wa[style]) {\r\n                style = wa[style];\r\n            }\r\n            return dom.style[style];\r\n        }\r\n    },\r\n    'DOMスタイル一括取得': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        uses: ['DOM和スタイル'],\r\n        pure: true,\r\n        fn: function (dom, style, sys) {\r\n            const res = {};\r\n            dom = sys.__query(dom, 'DOMスタイル一括取得', true);\r\n            if (!dom) {\r\n                return res;\r\n            }\r\n            if (style instanceof String) {\r\n                style = [style];\r\n            }\r\n            const wa = sys.__v0['DOM和スタイル'];\r\n            if (style instanceof Array) {\r\n                style.forEach((key) => {\r\n                    if (wa[key]) {\r\n                        key = wa[key];\r\n                    }\r\n                    res[key] = dom.style[key];\r\n                });\r\n                return res;\r\n            }\r\n            if (style instanceof Object) {\r\n                for (let key in style) {\r\n                    if (wa[key]) {\r\n                        key = wa[key];\r\n                    }\r\n                    res[key] = dom.style[key];\r\n                }\r\n                return res;\r\n            }\r\n            return dom.style[style];\r\n        }\r\n    },\r\n    'DOM要素作成': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (tag) {\r\n            return document.createElement(tag);\r\n        }\r\n    },\r\n    'DOM子要素追加': {\r\n        type: 'func',\r\n        josi: [['に', 'へ'], ['を']],\r\n        pure: true,\r\n        fn: function (pa, el, sys) {\r\n            pa = sys.__query(pa, 'DOM子要素追加', false);\r\n            el = sys.__query(el, 'DOM子要素追加', false);\r\n            pa.appendChild(el);\r\n        }\r\n    },\r\n    'DOM子要素削除': {\r\n        type: 'func',\r\n        josi: [['から'], ['を']],\r\n        pure: true,\r\n        fn: function (pa, el, sys) {\r\n            pa = sys.__query(pa, 'DOM子要素削除', false);\r\n            el = sys.__query(el, 'DOM子要素削除', false);\r\n            pa.removeChild(el);\r\n        }\r\n    },\r\n    '注目': {\r\n        type: 'func',\r\n        josi: [['を', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (dom, sys) {\r\n            dom = sys.__query(dom, '注目', true);\r\n            if (dom && dom.focus) {\r\n                dom.focus();\r\n            }\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @DOM操作とイベント\r\n    '対象イベント': { type: 'const', value: '' },\r\n    'DOMイベント追加': {\r\n        type: 'func',\r\n        josi: [['の'], ['に', 'へ'], ['を']],\r\n        pure: false,\r\n        fn: function (dom, event, funcStr, sys) {\r\n            sys.__addEvent(dom, event, funcStr, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMイベント削除': {\r\n        type: 'func',\r\n        josi: [['の'], ['から'], ['を']],\r\n        pure: false,\r\n        fn: function (dom, event, funcStr, sys) {\r\n            sys.__removeEvent(dom, event, funcStr);\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMイベント発火時': {\r\n        type: 'func',\r\n        josi: [['で'], ['の'], ['が']],\r\n        pure: true,\r\n        fn: function (callback, dom, event, sys) {\r\n            sys.__addEvent(dom, event, callback, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOMイベント処理停止': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (event, sys) {\r\n            event.preventDefault();\r\n        },\r\n        return_none: true\r\n    },\r\n    'クリック時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'click', func, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    '読込時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'load', func, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    'フォーム送信時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'submit', func, null);\r\n        },\r\n        return_none: true\r\n    },\r\n    '押キー': { type: 'const', value: '' },\r\n    'キー押時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'keydown', func, sys.__keyHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'キー離時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'keyup', func, sys.__keyHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'キータイピング時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'keypress', func, sys.__keyHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'マウスX': { type: 'const', value: 0 },\r\n    'マウスY': { type: 'const', value: 0 },\r\n    'マウス押時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'mousedown', func, sys.__mouseHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'マウス移動時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'mousemove', func, sys.__mouseHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'マウス離時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'mouseup', func, sys.__mouseHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'タッチX': { type: 'const', value: 0 },\r\n    'タッチY': { type: 'const', value: 0 },\r\n    'タッチ配列': { type: 'const', value: [] },\r\n    'タッチイベント計算': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (e, sys) {\r\n            return sys.__touchHandler(e, sys);\r\n        }\r\n    },\r\n    'タッチ開始時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'touchstart', func, sys.__touchHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'タッチ時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'touchmove', func, sys.__touchHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'タッチ終了時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'touchend', func, sys.__touchHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    'タッチキャンセル時': {\r\n        type: 'func',\r\n        josi: [['で'], ['を', 'の']],\r\n        pure: false,\r\n        fn: function (func, dom, sys) {\r\n            sys.__addEvent(dom, 'touchcancel', func, sys.__touchHandler);\r\n        },\r\n        return_none: true\r\n    },\r\n    '画面更新時実行': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: false,\r\n        fn: function (func, sys) {\r\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\r\n            if (!func) {\r\n                throw new Error('『画面更新時実行』で関数の取得に失敗しました。');\r\n            }\r\n            sys.__requestAnimationFrameLastId = window.requestAnimationFrame(func);\r\n            return sys.__requestAnimationFrameLastId;\r\n        }\r\n    },\r\n    '画面更新処理取消': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: false,\r\n        fn: function (id, sys) {\r\n            window.cancelAnimationFrame(id);\r\n            if (sys.__requestAnimationFrameLastId === id) {\r\n                sys.__requestAnimationFrameLastId = 0;\r\n            }\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","export default {\r\n    // @DOM部品操作\r\n    'DOM親要素': { type: 'const', value: '' },\r\n    'DOM部品個数': { type: 'const', value: 0 },\r\n    'DOM部品オプション': { type: 'const', value: { '自動改行': false, 'テーブル背景色': ['#AA4040', '#ffffff', '#fff0f0'] } },\r\n    'DOM親要素設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: false,\r\n        fn: function (el, sys) {\r\n            if (typeof el === 'string') {\r\n                el = document.querySelector(el) || document.getElementById(el);\r\n            }\r\n            sys.__v0['DOM親要素'] = el;\r\n            return el;\r\n        }\r\n    },\r\n    'DOM親部品設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: false,\r\n        fn: function (el, sys) {\r\n            return sys.__exec('DOM親要素設定', [el, sys]);\r\n        }\r\n    },\r\n    'DOMスキン': { type: 'const', value: '' },\r\n    'DOMスキン辞書': { type: 'const', value: {} },\r\n    'DOMスキン設定': {\r\n        type: 'func',\r\n        josi: [['を', 'に', 'の']],\r\n        pure: false,\r\n        fn: function (skin, sys) {\r\n            sys.__v0['DOMスキン'] = skin;\r\n        },\r\n        return_none: true\r\n    },\r\n    'DOM部品作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (elm, sys) {\r\n            const parent = sys.__v0['DOM親要素'];\r\n            const btn = (typeof (elm) === 'string') ? document.createElement(elm) : elm;\r\n            btn.id = 'nadesi-dom-' + sys.__v0['DOM部品個数'];\r\n            // スキン適用\r\n            const func = sys.__v0['DOMスキン辞書'][sys.__v0['DOMスキン']];\r\n            if (typeof (func) === 'function') {\r\n                func(elm, btn, sys);\r\n            }\r\n            // DOM追加\r\n            parent.appendChild(btn);\r\n            sys.__v0['DOM部品個数']++;\r\n            // オプションを適用\r\n            const opt = sys.__v0['DOM部品オプション'];\r\n            if (opt['自動改行']) {\r\n                parent.appendChild(document.createElement('br'));\r\n            }\r\n            return btn;\r\n        }\r\n    },\r\n    'ボタン作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (label, sys) {\r\n            const btn = sys.__exec('DOM部品作成', ['button', sys]);\r\n            btn.innerHTML = label;\r\n            return btn;\r\n        }\r\n    },\r\n    'エディタ作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (text, sys) {\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'text';\r\n            inp.value = text;\r\n            return inp;\r\n        }\r\n    },\r\n    'テキストエリア作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (text, sys) {\r\n            const te = sys.__exec('DOM部品作成', ['textarea', sys]);\r\n            te.value = text;\r\n            return te;\r\n        }\r\n    },\r\n    'ラベル作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (text, sys) {\r\n            const lbl = sys.__exec('DOM部品作成', ['span', sys]);\r\n            lbl.innerHTML = text;\r\n            return lbl;\r\n        }\r\n    },\r\n    'キャンバス作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (size, sys) {\r\n            const cv = sys.__exec('DOM部品作成', ['canvas', sys]);\r\n            cv.width = size[0];\r\n            cv.height = size[1];\r\n            cv.style.width = size[0];\r\n            cv.style.height = size[1];\r\n            // 描画中キャンバスを移動する\r\n            sys.__exec('描画開始', [cv, sys]);\r\n            return cv;\r\n        }\r\n    },\r\n    '画像作成': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: false,\r\n        fn: function (url, sys) {\r\n            const img = sys.__exec('DOM部品作成', ['img', sys]);\r\n            img.src = url;\r\n            return img;\r\n        }\r\n    },\r\n    '改行作成': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            const br = sys.__exec('DOM部品作成', ['br', sys]);\r\n            return br;\r\n        }\r\n    },\r\n    'チェックボックス作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (text, sys) {\r\n            // チェックボックスは、<span><input><label></span>で成り立つように構築\r\n            const span = document.createElement('span');\r\n            const inp = document.createElement('input');\r\n            inp.type = 'checkbox';\r\n            inp.id = 'nadesi-dom-' + sys.__v0['DOM部品個数'];\r\n            sys.__v0['DOM部品個数']++;\r\n            const label = document.createElement('label');\r\n            label.innerHTML = text;\r\n            label.htmlFor = inp.id;\r\n            span.appendChild(inp);\r\n            span.appendChild(label);\r\n            // 親部品に追加\r\n            sys.__exec('DOM部品作成', [span, sys]);\r\n            return inp;\r\n        }\r\n    },\r\n    'セレクトボックス作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (options, sys) {\r\n            const dom = document.createElement('select');\r\n            for (let i = 0; i < options.length; i++) {\r\n                const item = document.createElement('option');\r\n                item.value = options[i];\r\n                item.appendChild(document.createTextNode(options[i]));\r\n                dom.appendChild(item);\r\n            }\r\n            // 親部品に追加\r\n            sys.__exec('DOM部品作成', [dom, sys]);\r\n            return dom;\r\n        }\r\n    },\r\n    'セレクトボックスアイテム設定': {\r\n        type: 'func',\r\n        josi: [['を'], ['へ', 'に']],\r\n        pure: false,\r\n        fn: function (options, dom, sys) {\r\n            if (typeof dom === 'string') {\r\n                dom = document.querySelector(dom);\r\n            }\r\n            // 既存のoptionsをクリア\r\n            dom.options.length = 0;\r\n            // アイテムを追加\r\n            for (let i = 0; i < options.length; i++) {\r\n                const item = document.createElement('option');\r\n                item.value = options[i];\r\n                item.appendChild(document.createTextNode(options[i]));\r\n                dom.appendChild(item);\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '色選択ボックス作成': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'color';\r\n            return inp;\r\n        }\r\n    },\r\n    '日付選択ボックス作成': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'date';\r\n            return inp;\r\n        }\r\n    },\r\n    'パスワード入力エディタ作成': {\r\n        type: 'func',\r\n        josi: [['の', 'で']],\r\n        pure: false,\r\n        fn: function (s, sys) {\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'password';\r\n            inp.value = s;\r\n            return inp;\r\n        }\r\n    },\r\n    '値指定バー作成': {\r\n        type: 'func',\r\n        josi: [['の', 'で']],\r\n        pure: false,\r\n        fn: function (range, sys) {\r\n            if (!(range instanceof Array) || range.length < 2) {\r\n                range = [0, 100, 50];\r\n            }\r\n            if (range.length <= 2) { // 3つ目を省略したとき\r\n                range.push(Math.floor((range[1] - range[0]) / 2));\r\n            }\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'range';\r\n            inp.min = range[0];\r\n            inp.max = range[1];\r\n            inp.value = range[2];\r\n            return inp;\r\n        }\r\n    },\r\n    '送信ボタン作成': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: false,\r\n        fn: function (label, sys) {\r\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\r\n            inp.type = 'submit';\r\n            inp.value = label;\r\n            return inp;\r\n        }\r\n    },\r\n    'フォーム作成': {\r\n        type: 'func',\r\n        josi: [['で', 'の'], ['を']],\r\n        pure: false,\r\n        fn: function (obj, s, sys) {\r\n            const frm = sys.__exec('DOM部品作成', ['form', sys]);\r\n            // 可能ならformにobjの値を移し替える\r\n            if (obj instanceof Object) {\r\n                for (const key in obj) {\r\n                    if (frm[key]) {\r\n                        frm[key] = obj[key];\r\n                    }\r\n                }\r\n            }\r\n            // 入力項目をtableで作る\r\n            const rows = s.split('\\n');\r\n            const table = document.createElement('table');\r\n            for (const rowIndex in rows) {\r\n                let row = '' + (rows[rowIndex]);\r\n                if (row === '') {\r\n                    continue;\r\n                }\r\n                if (row.indexOf('=') < 0) {\r\n                    row += '=';\r\n                }\r\n                const cols = row.split('=');\r\n                const key = cols[0];\r\n                const val = cols[1];\r\n                // key\r\n                const th = document.createElement('th');\r\n                th.innerHTML = sys.__tohtmlQ(key);\r\n                // val\r\n                const td = document.createElement('td');\r\n                if (val.substring(0, 2) === '?(') {\r\n                    // select box\r\n                    const it = val.substring(2) + ')';\r\n                    const ita = it.split(')');\r\n                    const its = ita[0];\r\n                    const def = ita[1];\r\n                    const items = its.split('|');\r\n                    const select = document.createElement('select');\r\n                    select.name = key;\r\n                    for (const it of items) {\r\n                        const option = document.createElement('option');\r\n                        option.value = it;\r\n                        option.text = it;\r\n                        select.appendChild(option);\r\n                    }\r\n                    const idx = items.indexOf(def);\r\n                    if (idx >= 0) {\r\n                        select.selectedIndex = idx;\r\n                    }\r\n                    td.appendChild(select);\r\n                }\r\n                else {\r\n                    // input element\r\n                    const inp = document.createElement('input');\r\n                    td.appendChild(inp);\r\n                    inp.id = 'nako3form_' + key;\r\n                    if (val === '?送信' || val === '?submit') {\r\n                        inp.type = 'submit';\r\n                        inp.value = val.substring(1);\r\n                        if (key !== '') {\r\n                            inp.name = key;\r\n                        }\r\n                    }\r\n                    else if (val.substring(0, 2) === '?c') {\r\n                        inp.type = 'color';\r\n                        inp.value = val.substring(2);\r\n                        inp.name = key;\r\n                    }\r\n                    else {\r\n                        inp.type = 'text';\r\n                        inp.value = val;\r\n                        inp.name = key;\r\n                    }\r\n                }\r\n                const tr = document.createElement('tr');\r\n                tr.appendChild(th);\r\n                tr.appendChild(td);\r\n                table.appendChild(tr);\r\n            }\r\n            frm.appendChild(table);\r\n            return frm;\r\n        }\r\n    },\r\n    'フォーム入力一括取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (dom) {\r\n            if (typeof (dom) === 'string') {\r\n                dom = document.querySelector(dom);\r\n            }\r\n            const res = {};\r\n            const getChildren = (pa) => {\r\n                if (!pa || !pa.childNodes) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < pa.childNodes.length; i++) {\r\n                    const el = pa.childNodes[i];\r\n                    if (!el.tagName) {\r\n                        return;\r\n                    }\r\n                    const tag = el.tagName.toLowerCase();\r\n                    if (tag === 'input') {\r\n                        if (el.type === 'checkbox') {\r\n                            res[el.name] = el.checked ? el.value : '';\r\n                            continue;\r\n                        }\r\n                        res[el.name] = el.value;\r\n                        continue;\r\n                    }\r\n                    else if (tag === 'textarea') {\r\n                        res[el.name] = el.value;\r\n                    }\r\n                    else if (tag === 'select') {\r\n                        if (el.selectedIndex >= 0) {\r\n                            res[el.name] = el.options[el.selectedIndex].value;\r\n                        }\r\n                        else {\r\n                            res[el.name] = '';\r\n                        }\r\n                    }\r\n                    getChildren(el);\r\n                }\r\n            };\r\n            getChildren(dom);\r\n            return res;\r\n        }\r\n    },\r\n    'テーブル作成': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: false,\r\n        fn: function (aa, sys) {\r\n            if (typeof (aa) === 'string') {\r\n                const rr = [];\r\n                const rows = aa.split('\\n');\r\n                for (const row of rows) {\r\n                    rr.push(row.split(','));\r\n                }\r\n                aa = rr;\r\n            }\r\n            const bgColor = JSON.parse(JSON.stringify(sys.__v0['DOM部品オプション']['テーブル背景色']));\r\n            for (let i = 0; i < 3; i++) {\r\n                bgColor.push('');\r\n            }\r\n            const bgHead = bgColor.shift();\r\n            const table = sys.__exec('DOM部品作成', ['table', sys]);\r\n            for (let i = 0; i < aa.length; i++) {\r\n                const rowNo = i;\r\n                const row = aa[rowNo];\r\n                const tr = document.createElement('tr');\r\n                for (let col of row) {\r\n                    col = '' + col;\r\n                    const td = document.createElement((rowNo === 0) ? 'th' : 'td');\r\n                    td.innerHTML = sys.__tohtml(col);\r\n                    // 色指定\r\n                    if (bgHead !== '') {\r\n                        td.style.backgroundColor = (rowNo === 0) ? bgHead : bgColor[rowNo % 2];\r\n                        td.style.color = (rowNo === 0) ? 'white' : 'black';\r\n                    }\r\n                    if (col.match(/^(\\+|-)?\\d+(\\.\\d+)?$/)) { // number?\r\n                        td.style.textAlign = 'right';\r\n                    }\r\n                    tr.appendChild(td);\r\n                }\r\n                table.appendChild(tr);\r\n            }\r\n            return table;\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @HTML操作\r\n    'HTML変換': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (text) {\r\n            return String(text)\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/</g, '&lt;');\r\n        }\r\n    },\r\n    // @クリップボード\r\n    'クリップボード設定': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (text) {\r\n            // Clipboard APIをサポートしているか\r\n            if (navigator.clipboard) {\r\n                await navigator.clipboard.writeText(text);\r\n                return;\r\n            }\r\n            // Clipboard APIをサポートしていない場合\r\n            const tmp = document.createElement('div');\r\n            const pre = document.createElement('pre');\r\n            pre.style.webkitUserSelect = 'auto';\r\n            pre.style.userSelect = 'auto';\r\n            tmp.appendChild(pre).textContent = text;\r\n            // 画面外へ表示する\r\n            tmp.style.position = 'fixed';\r\n            tmp.right = '200%';\r\n            document.body.appendChild(tmp);\r\n            document.getSelection().selectAllChildren(tmp);\r\n            document.execCommand('copy');\r\n            document.body.removeChild(tmp);\r\n        },\r\n        return_none: true\r\n    },\r\n    'クリップボード取得時': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (f, sys) {\r\n            // Clipboard APIをサポートしているか\r\n            if (navigator.clipboard) {\r\n                if (typeof (f) === 'string') {\r\n                    f = sys.__findFunc(f, 'クリップボード取得時');\r\n                }\r\n                const pm = navigator.clipboard.readText();\r\n                pm.then(text => {\r\n                    sys.__v0['対象'] = text;\r\n                    f(sys);\r\n                });\r\n            }\r\n            else {\r\n                throw new Error('Clipbard APIが利用できません。');\r\n            }\r\n        }\r\n    },\r\n    'クリップボード取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: async function (sys) {\r\n            // Clipboard APIをサポートしているか\r\n            if (navigator.clipboard) {\r\n                const result = await navigator.clipboard.readText();\r\n                return result;\r\n            }\r\n            else {\r\n                throw new Error('Clipbard APIが利用できません。');\r\n            }\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @ローカルストレージ\r\n    '保存': {\r\n        type: 'func',\r\n        josi: [['を'], ['に', 'へ']],\r\n        pure: false,\r\n        fn: function (v, key, sys) {\r\n            sys.__exec('ローカルストレージ保存', [v, key, sys]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '開': {\r\n        type: 'func',\r\n        josi: [['を', 'から', 'の']],\r\n        pure: false,\r\n        fn: function (key, sys) {\r\n            return sys.__exec('ローカルストレージ読', [key, sys]);\r\n        },\r\n        return_none: false\r\n    },\r\n    '読': {\r\n        type: 'func',\r\n        josi: [['を', 'から', 'の']],\r\n        pure: false,\r\n        fn: function (key, sys) {\r\n            return sys.__exec('ローカルストレージ読', [key, sys]);\r\n        },\r\n        return_none: false\r\n    },\r\n    '存在': {\r\n        type: 'func',\r\n        josi: [['が']],\r\n        pure: true,\r\n        fn: function (key) {\r\n            const s = window.localStorage.getItem(key);\r\n            return (s !== null);\r\n        },\r\n        return_none: false\r\n    },\r\n    'ローカルストレージ保存': {\r\n        type: 'func',\r\n        josi: [['を'], ['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, key, sys) {\r\n            let body = v;\r\n            if (sys.__v0['保存オプション'] && (sys.__v0['保存オプション'].indexOf('json') >= 0)) {\r\n                body = JSON.stringify(body);\r\n            }\r\n            window.localStorage[key] = body;\r\n        },\r\n        return_none: true\r\n    },\r\n    'ローカルストレージ読': {\r\n        type: 'func',\r\n        josi: [['を', 'から', 'の']],\r\n        pure: true,\r\n        fn: function (key, sys) {\r\n            const v = window.localStorage[key];\r\n            if (sys.__v0['保存オプション'] && (sys.__v0['保存オプション'].indexOf('json') >= 0)) {\r\n                try {\r\n                    return JSON.parse(v);\r\n                }\r\n                catch (e) {\r\n                    console.log('ローカルストレージ『' + key + '』の読み込みに失敗');\r\n                }\r\n            }\r\n            return v;\r\n        },\r\n        return_none: false\r\n    },\r\n    'ローカルストレージキー列挙': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const keys = [];\r\n            for (const key in window.localStorage) {\r\n                keys.push(key);\r\n            }\r\n            return keys;\r\n        },\r\n        return_none: false\r\n    },\r\n    'ローカルストレージキー削除': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (key) {\r\n            window.localStorage.removeItem(key);\r\n        },\r\n        return_none: true\r\n    },\r\n    'ローカルストレージ全削除': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            window.localStorage.clear();\r\n        },\r\n        return_none: true\r\n    },\r\n    'ローカルストレージ有効確認': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function () {\r\n            return (typeof window.localStorage !== 'undefined');\r\n        },\r\n        return_none: false\r\n    },\r\n    '保存オプション': { type: 'const', value: 'json' },\r\n    '保存オプション設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            v = v.toUpperCase(v);\r\n            sys.__v0['保存オプション'] = v;\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","/* eslint-disable quote-props */\r\nconst errMsgCanvasInit = '描画を行うためには、HTML内にcanvasを配置し、idを振って『描画開始』命令に指定します。';\r\nexport default {\r\n    // @描画\r\n    '描画開始': {\r\n        type: 'func',\r\n        josi: [['の', 'へ', 'で']],\r\n        pure: true,\r\n        fn: function (cv, sys) {\r\n            if (typeof cv === 'string') {\r\n                cv = document.querySelector(cv) || document.getElementById(cv);\r\n            }\r\n            if (!cv) {\r\n                throw new Error('『描画開始』でCanvasを取得できませんでした。');\r\n            }\r\n            sys.__canvas = cv;\r\n            sys.__ctx = cv.getContext('2d');\r\n            sys.__fillStyle = 'black';\r\n            sys.__strokeStyle = 'black';\r\n            sys.__v0['描画中キャンバス'] = cv;\r\n            sys.__v0['描画中コンテキスト'] = sys.__ctx;\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画中キャンバス': { type: 'const', value: null },\r\n    '描画中コンテキスト': { type: 'const', value: null },\r\n    'キャンバス状態保存': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.save();\r\n        },\r\n        return_none: true\r\n    },\r\n    'キャンバス状態復元': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.restore();\r\n        },\r\n        return_none: true\r\n    },\r\n    '線色設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__strokeStyle = v;\r\n            if (v !== '') {\r\n                sys.__ctx.strokeStyle = v;\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '塗色設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__fillStyle = v;\r\n            if (v !== '') {\r\n                sys.__ctx.fillStyle = v;\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '線描画': {\r\n        type: 'func',\r\n        josi: [['から'], ['へ', 'まで']],\r\n        pure: true,\r\n        fn: function (a, b, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.beginPath();\r\n            sys.__ctx.moveTo(a[0], a[1]);\r\n            sys.__ctx.lineTo(b[0], b[1]);\r\n            sys.__ctx.stroke();\r\n        },\r\n        return_none: true\r\n    },\r\n    '線太設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.lineWidth = v;\r\n        },\r\n        return_none: true\r\n    },\r\n    '四角描画': {\r\n        type: 'func',\r\n        josi: [['の', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (b, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\r\n                return;\r\n            }\r\n            sys.__ctx.beginPath();\r\n            sys.__ctx.rect(b[0], b[1], b[2], b[3]);\r\n            if (sys.__fillStyle !== '') {\r\n                sys.__ctx.fill();\r\n            }\r\n            if (sys.__strokeStyle !== '') {\r\n                sys.__ctx.stroke();\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '全描画クリア': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.clearRect(0, 0, sys.__canvas.width, sys.__canvas.height);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画クリア': {\r\n        type: 'func',\r\n        josi: [['の', 'へ', 'に']],\r\n        pure: true,\r\n        fn: function (b, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            if (!(b instanceof Array)) {\r\n                b = [];\r\n            }\r\n            if (b.length === 0) {\r\n                b = [0, 0, sys.__canvas.width, sys.__canvas.height];\r\n            }\r\n            else if (b.length <= 2) {\r\n                b.unshift(0);\r\n                b.unshift(0);\r\n            }\r\n            sys.__ctx.clearRect(b[0], b[1], b[2], b[3]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '円描画': {\r\n        type: 'func',\r\n        josi: [['へ', 'に'], ['の']],\r\n        pure: true,\r\n        fn: function (xy, r, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\r\n                return;\r\n            }\r\n            sys.__ctx.beginPath();\r\n            sys.__ctx.arc(xy[0], xy[1], r, 0, 2 * Math.PI, false);\r\n            if (sys.__fillStyle !== '') {\r\n                sys.__ctx.fill();\r\n            }\r\n            if (sys.__strokeStyle !== '') {\r\n                sys.__ctx.stroke();\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '楕円描画': {\r\n        type: 'func',\r\n        josi: [['へ', 'に', 'の']],\r\n        pure: true,\r\n        fn: function (args, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            if (!args) {\r\n                throw new Error('楕円描画の引数配列が無効です');\r\n            }\r\n            if (args.length < 4) {\r\n                throw new Error('楕円描画の引数配列が不足しています');\r\n            }\r\n            if (args.length < 7) {\r\n                if (!args[4]) {\r\n                    args[4] = 0;\r\n                }\r\n                if (!args[5]) {\r\n                    args[5] = 0;\r\n                }\r\n                if (!args[6]) {\r\n                    args[6] = Math.PI * 2;\r\n                }\r\n                if (!args[7]) {\r\n                    args[7] = true;\r\n                }\r\n            }\r\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\r\n                return;\r\n            }\r\n            sys.__ctx.beginPath();\r\n            sys.__ctx.ellipse.apply(sys.__ctx, args);\r\n            if (sys.__fillStyle !== '') {\r\n                sys.__ctx.fill();\r\n            }\r\n            if (sys.__strokeStyle !== '') {\r\n                sys.__ctx.stroke();\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '多角形描画': {\r\n        type: 'func',\r\n        josi: [['で', 'の', 'を']],\r\n        pure: true,\r\n        fn: function (a, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\r\n                return;\r\n            }\r\n            sys.__ctx.beginPath();\r\n            const p = a[0];\r\n            sys.__ctx.moveTo(p[0], p[1]);\r\n            for (let i = 1; i < a.length; i++) {\r\n                const t = a[i];\r\n                sys.__ctx.lineTo(t[0], t[1]);\r\n            }\r\n            sys.__ctx.lineTo(p[0], p[1]);\r\n            if (sys.__fillStyle !== '') {\r\n                sys.__ctx.fill();\r\n            }\r\n            if (sys.__strokeStyle !== '') {\r\n                sys.__ctx.stroke();\r\n            }\r\n        },\r\n        return_none: true\r\n    },\r\n    '画像読': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            const img = new window.Image();\r\n            img.src = url;\r\n            img.crossOrigin = 'Anonymous';\r\n            return img;\r\n        }\r\n    },\r\n    '画像読待': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function (url) {\r\n            return new Promise((resolve, reject) => {\r\n                const img = new window.Image();\r\n                img.src = url;\r\n                img.crossOrigin = 'Anonymous';\r\n                img.onload = () => { resolve(img); };\r\n                img.onerror = () => {\r\n                    reject(new Error(`『画像読待』で読込みエラー。URL=『${url}』`));\r\n                };\r\n            });\r\n        }\r\n    },\r\n    '画像逐次読': {\r\n        type: 'func',\r\n        josi: [['の', 'を']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            if (sys.resolve === undefined) {\r\n                throw new Error('『画像逐次読』は『逐次実行』構文で使ってください。');\r\n            }\r\n            sys.resolveCount++;\r\n            const img = new window.Image();\r\n            img.src = url;\r\n            img.crossOrigin = 'Anonymous';\r\n            img.onload = () => {\r\n                sys.__v0['対象'] = img;\r\n                sys.resolve();\r\n            };\r\n            img.onerror = () => {\r\n                sys.__v0['対象'] = '';\r\n                sys.reject();\r\n            };\r\n            return img;\r\n        }\r\n    },\r\n    '画像読時': {\r\n        type: 'func',\r\n        josi: [['で'], ['の', 'を']],\r\n        pure: true,\r\n        fn: function (f, url, sys) {\r\n            // 関数オブジェクトを得る\r\n            const func = sys.__findVar(f, null); // 文字列指定なら関数に変換\r\n            // 画像を読む\r\n            const img = new window.Image();\r\n            img.src = url;\r\n            img.crossOrigin = 'Anonymous';\r\n            img.onload = () => {\r\n                sys.__v0['対象'] = img;\r\n                func(sys);\r\n            };\r\n            img.onerror = () => {\r\n                sys.__v0['対象'] = '';\r\n                func(sys);\r\n            };\r\n        },\r\n        return_none: true\r\n    },\r\n    '画像描画': {\r\n        type: 'func',\r\n        josi: [['の', 'を'], ['へ', 'に']],\r\n        pure: true,\r\n        fn: function (img, xy, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            const drawFunc = (im, ctx) => {\r\n                if (xy.length === 2) {\r\n                    ctx.drawImage(im, xy[0], xy[1]);\r\n                }\r\n                else if (xy.length === 4) {\r\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3]);\r\n                }\r\n                else if (xy.length === 8) {\r\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3], xy[4], xy[5], xy[6], xy[7]);\r\n                }\r\n                else {\r\n                    throw new Error('『画像描画』の第二引数の配列要素は2,4,8個のいずれかです。');\r\n                }\r\n            };\r\n            if (typeof img === 'string') {\r\n                const image = new window.Image();\r\n                image.src = img;\r\n                image.crossOrigin = 'Anonymous';\r\n                image.onload = () => {\r\n                    drawFunc(image, sys.__ctx);\r\n                };\r\n                return image;\r\n            }\r\n            else {\r\n                drawFunc(img, sys.__ctx);\r\n                return img;\r\n            }\r\n        },\r\n        return_none: false\r\n    },\r\n    '画像部分描画': {\r\n        type: 'func',\r\n        josi: [['の'], ['を', 'から'], ['へ', 'に']],\r\n        pure: true,\r\n        fn: function (img, sxy, dxy, sys) {\r\n            const errArgLen = '『画像部分描画』に使える引数は画像と、描画する座標へ2つか、' +\r\n                '描画する座標とその位置の4つか、使用する座標と使用する位置と描画する座標と大きさの8つだけです。';\r\n            if (img && sxy) {\r\n                if (!Array.isArray(sxy) && Array.isArray(img)) { // 逆になっていれば入れ替える\r\n                    // eslint-disable-next-line no-proto\r\n                    if (typeof sxy === 'string' || String(sxy.__proto__) === '[object HTMLImageElement]') {\r\n                        const sw = img;\r\n                        img = sxy;\r\n                        sxy = sw;\r\n                    }\r\n                }\r\n            }\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            const drawFunc = (im, ctx) => {\r\n                if (!dxy) {\r\n                    if (!sxy) {\r\n                        ctx.drawImage(im);\r\n                    }\r\n                    else if (sxy.length >= 2) { // もしsxyがあるのにdxyがなかったらdxyを代わりにする\r\n                        dxy = sxy;\r\n                        sxy = undefined;\r\n                    }\r\n                }\r\n                if (dxy.length === 2) {\r\n                    ctx.drawImage(im, dxy[0], dxy[1]);\r\n                }\r\n                else if (dxy.length === 4) {\r\n                    if (!sxy) {\r\n                        ctx.drawImage(im, dxy[0], dxy[1], dxy[2], dxy[3]);\r\n                    }\r\n                    else if (sxy.length === 4) {\r\n                        ctx.drawImage(im, sxy[0], sxy[1], sxy[2], sxy[3], dxy[0], dxy[1], dxy[2], dxy[3]);\r\n                    }\r\n                    else {\r\n                        throw new Error(errArgLen);\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(errArgLen);\r\n                }\r\n            };\r\n            if (typeof img === 'string') {\r\n                const image = new window.Image();\r\n                image.src = img;\r\n                image.crossOrigin = 'Anonymous';\r\n                image.onload = () => {\r\n                    drawFunc(image, sys.__ctx);\r\n                };\r\n                return image;\r\n            }\r\n            else {\r\n                drawFunc(img, sys.__ctx);\r\n                return img;\r\n            }\r\n        },\r\n        return_none: false\r\n    },\r\n    '描画フォント設定': {\r\n        type: 'func',\r\n        josi: [['を', 'の', 'で', 'に']],\r\n        pure: true,\r\n        fn: function (n, sys) {\r\n            // 数値だけならフォントサイズのみの指定\r\n            if (typeof n === 'number') {\r\n                n = n + 'px sans-serif';\r\n            }\r\n            // ピクセル数のみの指定なら適当にフォントを足す\r\n            if (/^[0-9]+(px|em)$/.test(n)) {\r\n                n = n + ' sans-serif';\r\n            }\r\n            sys.__ctx.font = n;\r\n        },\r\n        return_none: true\r\n    },\r\n    '文字描画': {\r\n        type: 'func',\r\n        josi: [['へ', 'に'], ['の', 'を']],\r\n        pure: true,\r\n        fn: function (xy, s, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.fillText(s, xy[0], xy[1]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '文字描画幅取得': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            return sys.__ctx.measureText(s);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画起点設定': {\r\n        type: 'func',\r\n        josi: [['へ', 'に']],\r\n        pure: true,\r\n        fn: function (xy, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.translate(xy[0], xy[1]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画回転': {\r\n        type: 'func',\r\n        josi: [['だけ', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (a, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.rotate(a * Math.PI / 180);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画拡大': {\r\n        type: 'func',\r\n        josi: [['だけ', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (xy, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.scale(xy[0], xy[1]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画変換マトリクス設定': {\r\n        type: 'func',\r\n        josi: [['だけ', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (a, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.setTransform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画変換マトリクス追加': {\r\n        type: 'func',\r\n        josi: [['だけ', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (a, sys) {\r\n            if (!sys.__ctx) {\r\n                throw new Error(errMsgCanvasInit);\r\n            }\r\n            sys.__ctx.transform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画データURL変換': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const cv = sys.__v0['描画中キャンバス'];\r\n            const url = cv.toDataURL('image/png');\r\n            return url;\r\n        }\r\n    },\r\n    '描画データBLOB変換': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function (sys) {\r\n            return new Promise((resolve, reject) => {\r\n                const cv = sys.__v0['描画中キャンバス'];\r\n                cv.toBlob((result) => { resolve(result); }, 'image/png');\r\n            });\r\n        }\r\n    },\r\n    '描画ダウンロードリンク作成': {\r\n        type: 'func',\r\n        josi: [['へ', 'に']],\r\n        pure: true,\r\n        fn: function (dom, sys) {\r\n            if (typeof dom === 'string') {\r\n                dom = document.querySelector(dom);\r\n            }\r\n            if (!dom) {\r\n                throw new Error('『描画ダウンロードリンク作成』でDOMが見当たりません。');\r\n            }\r\n            const cv = sys.__v0['描画中キャンバス'];\r\n            if (!cv) {\r\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\r\n            }\r\n            dom.href = cv.toDataURL('image/png');\r\n            dom.download = 'canvas.png';\r\n        },\r\n        return_none: true\r\n    },\r\n    '描画ダウンロード': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            const cv = sys.__v0['描画中キャンバス'];\r\n            if (!cv) {\r\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\r\n            }\r\n            const a = document.createElement('a');\r\n            a.href = cv.toDataURL('image/png');\r\n            a.download = 'canvas.png';\r\n            a.click();\r\n            return true;\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @位置情報\r\n    '位置情報取得時': {\r\n        type: 'func',\r\n        josi: [['の', 'に', 'へ']],\r\n        pure: false,\r\n        fn: function (func, sys) {\r\n            let cb = func;\r\n            if (typeof cb === 'string') {\r\n                cb = sys.__findVar(cb);\r\n            }\r\n            if (!('geolocation' in navigator)) {\r\n                throw new Error('関数『位置情報取得時』は使えません。');\r\n            }\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                sys.__v0['対象'] = [\r\n                    position.coords.latitude,\r\n                    position.coords.longitude\r\n                ];\r\n                cb(position);\r\n            });\r\n        },\r\n        return_none: true\r\n    },\r\n    '位置情報監視時': {\r\n        type: 'func',\r\n        josi: [['の', 'に', 'へ']],\r\n        pure: false,\r\n        fn: function (func, sys) {\r\n            let cb = func;\r\n            if (typeof cb === 'string') {\r\n                cb = sys.__findVar(cb);\r\n            }\r\n            if (!('geolocation' in navigator)) {\r\n                throw new Error('関数『位置情報監視時』は使えません。');\r\n            }\r\n            return navigator.geolocation.watchPosition((position) => {\r\n                sys.__v0['対象'] = [\r\n                    position.coords.latitude,\r\n                    position.coords.longitude\r\n                ];\r\n                cb(position);\r\n            });\r\n        },\r\n        return_none: false\r\n    },\r\n    '位置情報監視停止': {\r\n        type: 'func',\r\n        josi: [['の']],\r\n        pure: true,\r\n        fn: function (wid, sys) {\r\n            navigator.geolocation.clearWatch(wid);\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @音声合成\r\n    '話': {\r\n        type: 'func',\r\n        josi: [['と', 'を', 'の']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\r\n            window.speechSynthesis.speak(msg);\r\n            console.log('#話す:', s);\r\n            return s;\r\n        }\r\n    },\r\n    '話終': {\r\n        type: 'func',\r\n        josi: [['と', 'を', 'の']],\r\n        pure: true,\r\n        asyncFn: true,\r\n        fn: function (s, sys) {\r\n            return new Promise((resolve, reject) => {\r\n                try {\r\n                    const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\r\n                    msg.onend = () => { resolve(); };\r\n                    window.speechSynthesis.speak(msg);\r\n                    console.log('#話す:', s);\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    '話終時': {\r\n        type: 'func',\r\n        josi: [['で'], ['と', 'を', 'の']],\r\n        pure: true,\r\n        fn: function (callback, s, sys) {\r\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\r\n            msg.onend = (e) => {\r\n                console.log('#話終時');\r\n                sys.__v0['対象イベント'] = e;\r\n                callback(sys);\r\n            };\r\n            window.speechSynthesis.speak(msg);\r\n            console.log('#話す:', s);\r\n            return s;\r\n        }\r\n    },\r\n    '音声合成発話オブジェクト取得': {\r\n        type: 'func',\r\n        josi: [['の', 'で']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            // 話者の特定\r\n            let voice = sys.__v0['話:話者'];\r\n            if (!voice) {\r\n                voice = sys.__exec('話者設定', ['ja', sys]);\r\n            }\r\n            // インスタンス作成\r\n            const msg = new SpeechSynthesisUtterance(s);\r\n            msg.voice = voice;\r\n            if (voice) {\r\n                msg.lang = voice.lang;\r\n            } // 必ず話者の特定に成功している訳ではない\r\n            msg.rate = sys.__v0['話者速度'];\r\n            msg.pitch = sys.__v0['話者声高'];\r\n            msg.volume = sys.__v0['話者音量'];\r\n            return msg;\r\n        }\r\n    },\r\n    '話者一覧取得': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            // 対応している？\r\n            if (!('SpeechSynthesisUtterance' in window)) {\r\n                throw new Error('音声合成APIに対応していません');\r\n            }\r\n            return window.speechSynthesis.getVoices();\r\n        }\r\n    },\r\n    '話者設定': {\r\n        type: 'func',\r\n        josi: [['に', 'へ']],\r\n        pure: true,\r\n        fn: function (v, sys) {\r\n            // 対応している？\r\n            if (!('SpeechSynthesisUtterance' in window)) {\r\n                throw new Error('音声合成APIに対応していません');\r\n            }\r\n            // 文字列で値を指定\r\n            if (typeof v === 'string') {\r\n                // 話者を特定する\r\n                const voices = window.speechSynthesis.getVoices();\r\n                for (const i of voices) {\r\n                    if (i.lang.indexOf(v) >= 0 || i.name === v) {\r\n                        const msg = new SpeechSynthesisUtterance();\r\n                        msg.voice = i;\r\n                        msg.lang = i.lang;\r\n                        sys.__v0['話:話者'] = i;\r\n                        console.log('#話者:', i.name);\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n            // 話者一覧取得で得たオブジェクトを直接指定した場合\r\n            if (typeof v === 'object') {\r\n                sys.__v0['話:話者'] = v;\r\n                return v;\r\n            }\r\n            return undefined;\r\n        }\r\n    },\r\n    '話者速度': { type: 'const', value: 1.0 },\r\n    '話者声高': { type: 'const', value: 1.0 },\r\n    '話者音量': { type: 'const', value: 1.0 },\r\n    '話者詳細設定': {\r\n        type: 'func',\r\n        josi: [['で', 'に', 'へ']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            const changeFunc = (key, v) => {\r\n                if (key === '速度') {\r\n                    sys.__v0['話者速度'] = v;\r\n                }\r\n                if (key === '声高' || key === 'ピッチ') {\r\n                    sys.__v0['話者声高'] = v;\r\n                }\r\n                if (key === '音量') {\r\n                    sys.__v0['話者音量'] = v;\r\n                }\r\n            };\r\n            // 一括変更\r\n            for (const key in obj) {\r\n                const v = obj[key];\r\n                changeFunc(key, v);\r\n            }\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @WebSocket\r\n    'WS接続完了時': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (callback, sys) {\r\n            sys.__v0['WS:ONOPEN'] = callback;\r\n        },\r\n        return_none: true\r\n    },\r\n    'WS受信時': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (callback, sys) {\r\n            sys.__v0['WS:ONMESSAGE'] = callback;\r\n        },\r\n        return_none: true\r\n    },\r\n    'WSエラー発生時': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (callback, sys) {\r\n            sys.__v0['WS:ONERROR'] = callback;\r\n        },\r\n        return_none: true\r\n    },\r\n    'WS接続': {\r\n        type: 'func',\r\n        josi: [['に', 'へ', 'の']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const ws = new WebSocket(s);\r\n            ws.onopen = () => {\r\n                const cbOpen = sys.__v0['WS:ONOPEN'];\r\n                if (cbOpen) {\r\n                    cbOpen(sys);\r\n                }\r\n            };\r\n            ws.onerror = (err) => {\r\n                const cbError = sys.__v0['WS:ONERROR'];\r\n                if (cbError) {\r\n                    cbError(err, sys);\r\n                }\r\n                console.log('WSエラー', err);\r\n            };\r\n            ws.onmessage = (e) => {\r\n                sys.__v0['対象'] = e.data;\r\n                const cbMsg = sys.__v0['WS:ONMESSAGE'];\r\n                if (cbMsg) {\r\n                    cbMsg(sys);\r\n                }\r\n            };\r\n            sys.__v0['WS:SOCKET'] = ws;\r\n            return ws;\r\n        }\r\n    },\r\n    'WS送信': {\r\n        type: 'func',\r\n        josi: [['を', 'と']],\r\n        pure: true,\r\n        fn: function (s, sys) {\r\n            const ws = sys.__v0['WS:SOCKET'];\r\n            ws.send(s);\r\n        }\r\n    },\r\n    'WS切断': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            const ws = sys.__v0['WS:SOCKET'];\r\n            ws.close();\r\n        }\r\n    }\r\n};\r\n","/* eslint-disable quote-props */\r\nexport default {\r\n    // @オーディオ\r\n    'オーディオ開': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (url, sys) {\r\n            const a = new Audio();\r\n            a.src = url;\r\n            return a;\r\n        },\r\n        return_none: false\r\n    },\r\n    'オーディオ再生': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.loop = false;\r\n            obj.play();\r\n        },\r\n        return_none: true\r\n    },\r\n    'オーディオループ再生': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.loop = true;\r\n            obj.play();\r\n        },\r\n        return_none: true\r\n    },\r\n    'オーディオ停止': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.pause();\r\n            obj.currentTime = 0; // 暫定\r\n            // オーディオ停止で再生位置が0に戻らない問題(#715)\r\n            setTimeout(() => {\r\n                obj.currentTime = 0; // しっかりと設定\r\n            }, 10);\r\n        },\r\n        return_none: true\r\n    },\r\n    'オーディオ一時停止': {\r\n        type: 'func',\r\n        josi: [['を']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ一時停止する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.pause();\r\n        },\r\n        return_none: true\r\n    },\r\n    'オーディオ音量取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            return obj.volume;\r\n        }\r\n    },\r\n    'オーディオ音量設定': {\r\n        type: 'func',\r\n        josi: [['を'], ['に', 'へ']],\r\n        pure: true,\r\n        fn: function (obj, v, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.volume = v;\r\n        },\r\n        return_none: true\r\n    },\r\n    'オーディオ長取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            return obj.duration;\r\n        }\r\n    },\r\n    'オーディオ再生位置取得': {\r\n        type: 'func',\r\n        josi: [['の', 'から']],\r\n        pure: true,\r\n        fn: function (obj, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ再生位置取得する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            return obj.currentTime;\r\n        }\r\n    },\r\n    'オーディオ再生位置設定': {\r\n        type: 'func',\r\n        josi: [['を'], ['に', 'へ']],\r\n        pure: true,\r\n        fn: function (obj, v, sys) {\r\n            if (!obj) {\r\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\r\n            }\r\n            obj.currentTime = v;\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","// plugin_browser\r\n// @ts-nocheck\r\nimport PartBrowserColor from './plugin_browser_color.mjs';\r\nimport PartBrowserSystem from './plugin_browser_system.mjs';\r\nimport PartBrowserDialog from './plugin_browser_dialog.mjs';\r\nimport PartBrowserLocation from './plugin_browser_location.mjs';\r\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\r\nimport PartBrowserDomBasic from './plugin_browser_dom_basic.mjs';\r\nimport PartBrowserDomEvent from './plugin_browser_dom_event.mjs';\r\nimport PartBrowserDomParts from './plugin_browser_dom_parts.mjs';\r\nimport PartBrowserHtml from './plugin_browser_html.mjs';\r\nimport PartBrowserStorage from './plugin_browser_storage.mjs';\r\nimport PartBrowserCanvas from './plugin_browser_canvas.mjs';\r\nimport PartBrowserGeolocation from './plugin_browser_geolocation.mjs';\r\nimport PartBrowserSpeech from './plugin_browser_speech.mjs';\r\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\r\nimport PartBrowserAudio from './plugin_browser_audio.mjs';\r\nimport PartBrowserHotkey from './plugin_browser_hotkey.mjs';\r\nimport PartBrowserChart from './plugin_browser_chart.mjs';\r\nimport PartBrowserCrypto from './plugin_browser_crypto.mjs';\r\nconst BrowserParts = [\r\n    PartBrowserColor,\r\n    PartBrowserSystem,\r\n    PartBrowserDialog,\r\n    PartBrowserLocation,\r\n    PartBrowserAjax,\r\n    PartBrowserDomBasic,\r\n    PartBrowserDomEvent,\r\n    PartBrowserDomParts,\r\n    PartBrowserHtml,\r\n    PartBrowserStorage,\r\n    PartBrowserCanvas,\r\n    PartBrowserGeolocation,\r\n    PartBrowserSpeech,\r\n    PartBrowserWebsocket,\r\n    PartBrowserAudio,\r\n    PartBrowserHotkey,\r\n    PartBrowserChart,\r\n    PartBrowserCrypto\r\n];\r\nconst PluginBrowser = {\r\n    'meta': {\r\n        type: 'const',\r\n        value: {\r\n            pluginName: 'plugin_browser',\r\n            pluginVersion: '3.2.24',\r\n            nakoRuntime: ['wnako'],\r\n            nakoVersion: '^3.2.24' // 要求なでしこバージョン\r\n        }\r\n    },\r\n    '初期化': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: true,\r\n        fn: function (sys) {\r\n            /* eslint no-global-assign: 0 */\r\n            const doc = (typeof document === 'undefined') ? { 'body': {} } : document;\r\n            const win = (typeof window === 'undefined') ? { 'location': { 'href': 'http://localhost/' } } : window;\r\n            const nav = (typeof navigator === 'undefined') ? {} : navigator;\r\n            const loc = (typeof win.location === 'undefined') ? { 'href': 'http://localhost/' } : win.location;\r\n            // 定数を初期化\r\n            sys.__v0['AJAX:ONERROR'] = (err) => { console.log(err); };\r\n            // オブジェクトを初期化\r\n            sys.__v0.DOCUMENT = doc;\r\n            sys.__v0.WINDOW = win;\r\n            sys.__v0.NAVIGATOR = nav;\r\n            sys.__v0['DOM親要素'] = doc.body;\r\n            sys.__v0['ブラウザURL'] = loc.href;\r\n            // 便利なメソッドを定義\r\n            sys.__tohtml = (text) => {\r\n                return ('' + text)\r\n                    .replace(/&/g, '&amp;')\r\n                    .replace(/>/g, '&gt;')\r\n                    .replace(/</g, '&lt;');\r\n            };\r\n            sys.__tohtmlQ = (text) => {\r\n                return sys.__tohtml(text)\r\n                    .replace(/\"/g, '&#34;')\r\n                    .replace(/'/g, '&#39;');\r\n            };\r\n            // 「!クリア」でDOMイベントを削除するため\r\n            sys.__dom_events = []; // [{}, {}, {} ...]\r\n            // DOM追加イベント\r\n            sys.__addEvent = (dom, event, func, setHandler) => {\r\n                // dom\r\n                if (typeof (dom) === 'string') {\r\n                    dom = doc.querySelector(dom);\r\n                    if (!dom) {\r\n                        throw new Error('DOMイベントが追加できません。要素が見当たりません。');\r\n                    }\r\n                }\r\n                // func\r\n                if (typeof (func) === 'string') {\r\n                    func = sys.__findVar(func, null);\r\n                    if (!func) {\r\n                        throw new Error('DOMイベントが追加できません。関数が見当たりません。');\r\n                    }\r\n                }\r\n                // make wrapper func\r\n                const wrapperFunc = (e) => {\r\n                    sys.__v0['対象'] = e.target;\r\n                    sys.__v0['対象イベント'] = e;\r\n                    // 追加データが得られる場合\r\n                    if (setHandler) {\r\n                        setHandler(e, sys);\r\n                    }\r\n                    if (sys.__genMode === '非同期モード') {\r\n                        sys.newenv = true;\r\n                    }\r\n                    return func(e, sys);\r\n                };\r\n                // add\r\n                sys.__dom_events.push({ dom, event, func: wrapperFunc, rawFunc: func });\r\n                dom.addEventListener(event, wrapperFunc);\r\n            };\r\n            // キーイベントハンドラ\r\n            sys.__keyHandler = (e, sys) => {\r\n                sys.__v0['押キー'] = e.key;\r\n            };\r\n            // マウスイベントハンドラ\r\n            sys.__mouseHandler = (e, sys) => {\r\n                const box = e.target.getBoundingClientRect();\r\n                sys.__v0['マウスX'] = e.clientX - box.left;\r\n                sys.__v0['マウスY'] = e.clientY - box.top;\r\n            };\r\n            // タッチイベントハンドラ\r\n            sys.__touchHandler = (e, sys) => {\r\n                const box = e.target.getBoundingClientRect();\r\n                const touches = e.changedTouches;\r\n                if (touches.length <= 0) {\r\n                    return;\r\n                }\r\n                const ts = [];\r\n                for (let i = 0; i < touches.length; i++) {\r\n                    const t = touches[i];\r\n                    const tx = t.clientX - box.left;\r\n                    const ty = t.clientY - box.top;\r\n                    if (i === 0) {\r\n                        sys.__v0['タッチX'] = tx;\r\n                        sys.__v0['タッチY'] = ty;\r\n                    }\r\n                    ts.push([tx, ty]);\r\n                }\r\n                sys.__v0['タッチ配列'] = ts;\r\n                return ts;\r\n            };\r\n            // DOMイベント削除 (探して削除)\r\n            sys.__removeEvent = (dom, event, func) => {\r\n                // dom\r\n                if (typeof (dom) === 'string') {\r\n                    dom = doc.querySelector(dom);\r\n                    if (!dom) {\r\n                        throw new Error('DOMイベントが削除できません。要素が見当たりません。');\r\n                    }\r\n                }\r\n                // func\r\n                if (typeof (func) === 'string') {\r\n                    func = sys.__findVar(func, null);\r\n                    if (!func) {\r\n                        throw new Error('DOMイベントが削除できません。関数が見当たりません。');\r\n                    }\r\n                }\r\n                // find\r\n                for (let i = 0; i < sys.__dom_events.length; i++) {\r\n                    const e = sys.__dom_events[i];\r\n                    if (e.dom === dom && e.event === event && e.rawFunc === func) {\r\n                        e.dom.removeEventListener(e.event, e.func);\r\n                        sys.__dom_events.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            };\r\n            // requestAnimationFrame のためのid\r\n            sys.__requestAnimationFrameLastId = 0;\r\n            // DOMイベント全クリア\r\n            sys.__removeAllDomEvent = () => {\r\n                sys.__dom_events.forEach(e => {\r\n                    console.log(e.event, e.dom, e);\r\n                    e.dom.removeEventListener(e.event, e.func);\r\n                });\r\n                sys.__dom_events = [];\r\n                // requestAnimationFrame\r\n                if (sys.__requestAnimationFrameLastId > 0) {\r\n                    win.cancelAnimationFrame(sys.__requestAnimationFrameLastId);\r\n                    sys.__requestAnimationFrameLastId = 0;\r\n                }\r\n            };\r\n            // DOM取得のために使う\r\n            sys.__query = (dom, commandName, isGetFunc) => {\r\n                const elm = (typeof dom === 'string') ? document.querySelector(dom) : dom;\r\n                if (!elm) {\r\n                    if (isGetFunc) {\r\n                        // 取得イベントではコンソールにヒントを出す\r\n                        console.warn(`[ヒント](${sys.__v0.line})『${commandName}』でDOM取得に失敗しています。DOM=`, dom);\r\n                    }\r\n                    else {\r\n                        // 設定イベントでは実行時エラーにする\r\n                        const desc = (typeof dom === 'string') ? dom : String(dom);\r\n                        throw new Error(`『${commandName}』でクエリ『${desc}』でDOM取得に失敗しました。`);\r\n                    }\r\n                }\r\n                return elm;\r\n            };\r\n        }\r\n    },\r\n    '!クリア': {\r\n        type: 'func',\r\n        josi: [],\r\n        pure: false,\r\n        fn: function (sys) {\r\n            // chart.jsを破棄\r\n            if (sys.__chartjs) {\r\n                sys.__chartjs.destroy();\r\n            }\r\n            // 全DOMイベントをクリア\r\n            sys.__removeAllDomEvent();\r\n        }\r\n    }\r\n};\r\nBrowserParts.forEach((a) => {\r\n    const b = {};\r\n    Object.assign(b, a);\r\n    // 各モジュールでの初期化処理は認めない\r\n    if (typeof b['初期化'] !== 'undefined') {\r\n        delete b['初期化'];\r\n    }\r\n    Object.assign(PluginBrowser, b);\r\n});\r\nexport default PluginBrowser;\r\n","// @ts-nocheck\r\nimport hotkeys from 'hotkeys-js';\r\nexport default {\r\n    // @ホットキー\r\n    'ホットキー登録': {\r\n        type: 'func',\r\n        josi: [['に', 'で'], ['を']],\r\n        pure: true,\r\n        fn: function (key, fname, sys) {\r\n            hotkeys(key, function (event, handler) {\r\n                event.preventDefault();\r\n                const f = sys.__findFunc(fname);\r\n                f(sys);\r\n            });\r\n        }\r\n    },\r\n    'ホットキー解除': {\r\n        type: 'func',\r\n        josi: [['を', 'の']],\r\n        pure: true,\r\n        fn: function (key) {\r\n            hotkeys.unbind(key);\r\n        }\r\n    }\r\n};\r\n","// @ts-nocheck\r\nexport default {\r\n    // @グラフ描画_CHARTJS\r\n    'グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: true,\r\n        fn: function (data, sys) {\r\n            // Chart.jsが使えるかチェック\r\n            if (!window.Chart) {\r\n                throw new Error('『グラフ描画』のエラー。Chart.jsを取り込んでください。');\r\n            }\r\n            // Canvasが有効？\r\n            if (!sys.__canvas) {\r\n                throw new Error('『グラフ描画』のエラー。『描画開始』命令で描画先のCanvasを指定してください。 ');\r\n            }\r\n            // 日本語のキーワードを変換\r\n            if (data['タイプ']) {\r\n                data.type = data['タイプ'];\r\n            }\r\n            if (data['データ']) {\r\n                data.data = data['データ'];\r\n            }\r\n            if (data['オプション']) {\r\n                data.options = data['オプション'];\r\n            }\r\n            if (sys.__chartjs) {\r\n                sys.__chartjs.destroy();\r\n            }\r\n            // eslint-disable-next-line no-undef\r\n            const chart = new Chart(sys.__canvas, data);\r\n            sys.__chartjs = chart;\r\n            return chart;\r\n        }\r\n    },\r\n    'グラフオプション': { type: 'const', value: {} },\r\n    '線グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            data = sys.__exec('二次元グラフデータ変形', ['line', data, sys]);\r\n            const d = {\r\n                type: 'line',\r\n                data,\r\n                options: sys.__v0['グラフオプション']\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '棒グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            // グラフオプションの差分作成\r\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], { 'indexAxis': 'x' });\r\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\r\n            const d = {\r\n                type: 'bar',\r\n                data,\r\n                options: gopt\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '横棒グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            // グラフオプションの差分作成\r\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], { 'indexAxis': 'y' });\r\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\r\n            const d = {\r\n                type: 'bar',\r\n                data,\r\n                options: gopt\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '積上棒グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            // グラフオプションの差分作成\r\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {\r\n                'indexAxis': 'x',\r\n                'scales': {\r\n                    x: { stacked: true },\r\n                    y: { stacked: true }\r\n                }\r\n            });\r\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\r\n            const d = {\r\n                type: 'bar',\r\n                data,\r\n                options: gopt\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '積上横棒グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            // グラフオプションの差分作成\r\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {\r\n                'indexAxis': 'y',\r\n                'scales': {\r\n                    x: { stacked: true },\r\n                    y: { stacked: true }\r\n                }\r\n            });\r\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\r\n            const d = {\r\n                type: 'bar',\r\n                data,\r\n                options: gopt\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '散布図描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            // グラフオプションの差分作成\r\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {});\r\n            data = sys.__exec('二次元グラフデータ変形', ['scatter', data, sys]);\r\n            const d = {\r\n                type: 'scatter',\r\n                data,\r\n                options: gopt\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '円グラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\r\n            const d = {\r\n                type: 'pie',\r\n                data,\r\n                options: sys.__v0['グラフオプション']\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    'ドーナツグラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\r\n            const d = {\r\n                type: 'doughnut',\r\n                data,\r\n                options: sys.__v0['グラフオプション']\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    'ポーラーグラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\r\n            const d = {\r\n                type: 'polarArea',\r\n                data,\r\n                options: sys.__v0['グラフオプション']\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    'レーダーグラフ描画': {\r\n        type: 'func',\r\n        josi: [['を', 'で', 'の']],\r\n        pure: false,\r\n        fn: function (data, sys) {\r\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\r\n            const d = {\r\n                type: 'radar',\r\n                data,\r\n                options: sys.__v0['グラフオプション']\r\n            };\r\n            return sys.__exec('グラフ描画', [d, sys]);\r\n        }\r\n    },\r\n    '二次元グラフデータ変形': {\r\n        type: 'func',\r\n        josi: [['の'], ['を']],\r\n        pure: false,\r\n        fn: function (t, dataOrg, sys) {\r\n            // データを破壊的に変更してしまうので最初にデータをコピー (#1416)\r\n            const data = JSON.parse(JSON.stringify(dataOrg));\r\n            const bgcolorList = [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)'\r\n            ];\r\n            const fgcolorList = [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)'\r\n            ];\r\n            const res = {};\r\n            const bgcolors = [];\r\n            const fgcolors = [];\r\n            res.labels = [];\r\n            // 配列かどうか\r\n            if (data instanceof Array) {\r\n                // 二次元データのとき\r\n                if (data[0] instanceof Array) {\r\n                    if (t === 'pie') { // 円グラフの時だけ整形方法が異なる\r\n                        const o = {};\r\n                        o.data = [];\r\n                        res.datasets = [o];\r\n                        for (let i = 0; i < data.length; i++) {\r\n                            res.labels.push(data[i][0]); // label\r\n                            o.data.push(data[i][1]); // value\r\n                            bgcolors.push(bgcolorList[i % 6]);\r\n                            fgcolors.push(fgcolorList[i % 6]);\r\n                        }\r\n                        o.backgroundColor = bgcolors;\r\n                        o.borderColor = fgcolors;\r\n                        return res;\r\n                    }\r\n                    // 左側のラベルの処理\r\n                    // [1,0]が文字列ならラベルあり\r\n                    if (typeof (data[1][0]) === 'string') {\r\n                        for (let i = 1; i < data.length; i++) {\r\n                            res.labels.push(data[i][0]); // 左ラベルを追加\r\n                            data[i] = data[i].slice(1); // 左ラベル除去\r\n                        }\r\n                        data[0] = data[0].slice(1); // ヘッダ行も左ラベルを削除\r\n                    }\r\n                    else {\r\n                        // 左側ラベルない場合 - ダミーのラベルを追加\r\n                        for (let i = 1; i < data.length; i++) {\r\n                            res.labels.push(i);\r\n                        }\r\n                    }\r\n                    res.datasets = [];\r\n                    for (let i = 0; i < data[0].length; i++) {\r\n                        const o = {};\r\n                        res.datasets.push(o);\r\n                        o.label = data[0][i];\r\n                        o.backgroundColor = bgcolorList[i % 6];\r\n                        o.borderColor = fgcolorList[i % 6];\r\n                        o.data = [];\r\n                        for (let j = 1; j < data.length; j++) {\r\n                            o.data.push(data[j][i]);\r\n                        }\r\n                    }\r\n                    return res;\r\n                }\r\n                // 一次元データのとき\r\n                // ラベルを作成\r\n                for (let i = 0; i < data.length; i++) {\r\n                    res.labels.push(i + 1);\r\n                    bgcolors.push(bgcolorList[i % 6]);\r\n                    fgcolors.push(fgcolorList[i % 6]);\r\n                }\r\n                const o1 = {};\r\n                res.datasets = [o1];\r\n                o1.label = 'データ';\r\n                o1.data = data;\r\n                o1.backgroundColor = bgcolors;\r\n                o1.borderColor = fgcolors;\r\n                return res;\r\n            }\r\n            if (data instanceof Object) {\r\n                return data;\r\n            }\r\n            // データが1つだけのとき\r\n            return sys.__exec('二次元グラフデータ変形', [[data], sys]);\r\n        }\r\n    }\r\n};\r\n","export default {\r\n    // @ハッシュ関数\r\n    'ハッシュ値計算時': {\r\n        type: 'func',\r\n        josi: [['へ'], ['を'], ['で']],\r\n        pure: false,\r\n        fn: function (func, s, alg, sys) {\r\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\r\n            // convert\r\n            const buffer = new TextEncoder().encode(s);\r\n            crypto.subtle.digest(alg, buffer).then(function (hash) {\r\n                const codes = [];\r\n                const view = new DataView(hash);\r\n                for (let i = 0; i < view.byteLength; i += 4) {\r\n                    const v = view.getUint32(i);\r\n                    const h = v.toString(16);\r\n                    const pad = '00' + h;\r\n                    codes.push(pad.substr(pad.length - 2, 2));\r\n                }\r\n                const res = sys.__v0['対象'] = codes.join('');\r\n                func(res);\r\n            });\r\n        },\r\n        return_none: true\r\n    }\r\n};\r\n","// wnako3mod - nadesiko for web browser\r\n// - wnako3 から wnako3mod を取り込む。\r\n// - このファイルはモジュールとして別のファイルから取り込み可能。\r\nimport { NakoCompiler } from '../core/src/nako3.mjs';\r\nimport { NakoImportError } from '../core/src/nako_errors.mjs';\r\nimport { setupEditor } from './wnako3_editor.mjs';\r\nimport nakoVersion from './nako_version.mjs';\r\nimport PluginBrowser from './plugin_browser.mjs';\r\nconst NAKO_SCRIPT_RE = /^(なでしこ|nako|nadesiko)3?$/;\r\nexport class WebNakoCompiler extends NakoCompiler {\r\n    constructor() {\r\n        super({ useBasicPlugin: true });\r\n        this.wnakoVersion = nakoVersion;\r\n        this.localFiles = {};\r\n        // プラグインを追加\r\n        this.addPluginObject('PluginBrowser', PluginBrowser);\r\n        // 必要な定数を設定\r\n        this.addListener('beforeRun', (g) => {\r\n            // バージョン情報を設定\r\n            g.__varslist[0]['ナデシコ種類'] = 'wnako3';\r\n            g.__varslist[0]['ナデシコバージョン'] = nakoVersion.version;\r\n            g.__varslist[0]['WNAKOバージョン'] = nakoVersion.version;\r\n        });\r\n    }\r\n    /**\r\n     * ブラウザでtype=\"なでしこ\"というスクリプトを得て実行する\r\n     */\r\n    async runNakoScript() {\r\n        // スクリプトタグの中身を得る\r\n        let nakoScriptCount = 0;\r\n        const scripts = document.querySelectorAll('script');\r\n        for (let i = 0; i < scripts.length; i++) {\r\n            const script = scripts[i];\r\n            if (script.type.match(NAKO_SCRIPT_RE)) {\r\n                nakoScriptCount++;\r\n                // URLからスクリプト名を見つける\r\n                const url = (typeof (window.location) === 'object') ? window.location.href : 'url_unknown';\r\n                const fname = `${url}#script${nakoScriptCount}.nako3`;\r\n                const code = script.text;\r\n                // 依存するライブラリをロード\r\n                await this.loadDependencies(code, fname);\r\n                // プログラムを実行\r\n                await this.runAsync(script.text, fname);\r\n            }\r\n        }\r\n        if (nakoScriptCount > 1) {\r\n            console.log('実行したなでしこの個数=', nakoScriptCount);\r\n        }\r\n    }\r\n    /** 取り込む文を実行する */\r\n    async loadDependencies(code, filename, preCode = '', localFiles = {}) {\r\n        this.localFiles = localFiles || {};\r\n        return this._loadDependencies(code, filename, preCode, this.getLoaderTool());\r\n    }\r\n    /**\r\n     * type=なでしこ のスクリプトを自動実行するべきかどうかを返す\r\n     * @returns type=なでしこ のスクリプトを自動実行するべきかどうか\r\n     */\r\n    checkScriptTagParam() {\r\n        const scripts = document.querySelectorAll('script');\r\n        for (let i = 0; i < scripts.length; i++) {\r\n            const script = scripts[i];\r\n            const src = script.src || '';\r\n            if (src.indexOf('wnako3.js?run') >= 0 ||\r\n                src.indexOf('wnako3.js&run') >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 指定したidのHTML要素をなでしこ言語のエディタにする。\r\n     * @param {string | Element} idOrElement HTML要素\r\n     * @see {setupEditor}\r\n     */\r\n    setupEditor(idOrElement) {\r\n        return setupEditor(idOrElement, this, window.ace);\r\n    }\r\n    /** なでしこ3の『取り込む』命令のための読み込みツール */\r\n    getLoaderTool() {\r\n        const tool = { readJs: this.readJs, readNako3: this.readNako3, resolvePath: this.resolvePath };\r\n        return tool;\r\n    }\r\n    /** JSプラグインの読み込み */\r\n    readJs(filePath, token) {\r\n        if (this.localFiles && this.localFiles[filePath]) {\r\n            return {\r\n                task: (async () => () => {\r\n                    // eslint-disable-next-line no-new-func\r\n                    Function(this.localFiles[filePath])();\r\n                    return {};\r\n                })()\r\n            };\r\n        }\r\n        return {\r\n            task: (async () => {\r\n                // もし動的インポートに対応していれば動的インポートを試す\r\n                const basename = ('/' + filePath).split('/').pop() || '?';\r\n                /*\r\n                try {\r\n                  const obj = await import(filePath)\r\n                  this.addPluginObject(basename, obj)\r\n                  return {}\r\n                } catch (e) { }\r\n                */\r\n                // WebPackの関係で動的インポートが失敗するので、テキストとしてJSソースを取り出して処理する\r\n                // JavaScriptをテキストとして取得\r\n                const res = await fetch(filePath);\r\n                if (!res.ok) {\r\n                    throw new NakoImportError(`ファイル『${filePath}』のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\r\n                }\r\n                let jstext = await res.text();\r\n                // ESModuleっぽければ `default export`を置き換える\r\n                const r = Math.floor(Math.random() * 1000000);\r\n                const exportName = `exportObject${r}`;\r\n                if (jstext.includes('default export')) {\r\n                    jstext = jstext.replace('default export', `;let ${exportName} = `);\r\n                    jstext += `\\n;navigator.nako3.addPluginObject('${basename}', ${exportName});\\n`;\r\n                }\r\n                // addPluginObjectが存在する\r\n                if (!jstext.includes('navigator.nako3.addPluginObject')) {\r\n                    throw new NakoImportError(`ファイル ${filePath} の中に文字列 \"navigator.nako3.addPluginObject\" が存在しません。現在、ブラウザ版のなでしこ言語v3は自動登録するプラグインのみをサポートしています。`, token.file, token.line);\r\n                }\r\n                const gNavigator = navigator;\r\n                const gSelf = gNavigator.nako3;\r\n                // textの例: `navigator.nako3.addPluginObject('PluginRequireTest', { requiretest: { type: 'var', value: 100 } })`\r\n                return () => {\r\n                    // プラグインの自動登録は navigator.nako3 を参照するため、 navigator.nako3 を一時的に現在のインスタンスにする。\r\n                    const globalNavigator = gNavigator;\r\n                    const globalNako3 = globalNavigator.nako3;\r\n                    globalNavigator.nako3 = gSelf;\r\n                    try {\r\n                        // eslint-disable-next-line no-new-func\r\n                        const f = Function(jstext);\r\n                        f.apply(gSelf.__globalObj);\r\n                    }\r\n                    catch (err) {\r\n                        throw new NakoImportError(`プラグイン ${filePath} の取り込みに失敗: ${err instanceof Error ? err.message : err + ''}`, token.file, token.line);\r\n                    }\r\n                    finally {\r\n                        globalNavigator.nako3 = globalNako3;\r\n                    }\r\n                    return {};\r\n                };\r\n            })()\r\n        };\r\n    }\r\n    /** NAKO3プラグインの読み込み */\r\n    readNako3(filePath, token) {\r\n        if (this.localFiles && this.localFiles[filePath]) { // ローカルファイルを使う場合\r\n            return {\r\n                task: (() => {\r\n                    return (new Promise((resolve, reject) => {\r\n                        const s = this.localFiles[filePath];\r\n                        resolve(s);\r\n                    }));\r\n                })()\r\n            };\r\n        }\r\n        return {\r\n            task: (async () => {\r\n                const res = await fetch(filePath);\r\n                if (!res.ok) {\r\n                    throw new NakoImportError(`ファイル ${filePath} のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\r\n                }\r\n                return await res.text();\r\n            })()\r\n        };\r\n    }\r\n    /** 読み込みでパスを解決する */\r\n    resolvePath(name, token, fromFile) {\r\n        let pathname = name;\r\n        // http から始まっていれば解決は不要\r\n        if (pathname.match(/^https?:\\/\\//)) { // フルパスなら解決不要\r\n        }\r\n        else if (this.localFiles && this.localFiles[name]) {\r\n            pathname = this.localFiles[name];\r\n        }\r\n        else {\r\n            try {\r\n                pathname = new URL(name).pathname;\r\n            }\r\n            catch (e) {\r\n                // 単純にパスに変換できなければ、location.hrefを参考にパスを組み立てる\r\n                try {\r\n                    let baseDir = dirname(fromFile);\r\n                    if (baseDir === '') {\r\n                        // https://2/3/4.html\r\n                        const a = window.location.href.split('/');\r\n                        baseDir = '/' + a.slice(3, a.length - 1).join('/');\r\n                    }\r\n                    pathname = resolveURL(baseDir, name);\r\n                }\r\n                catch (e) {\r\n                    throw new NakoImportError(`取り込み文の引数でパスが解決できません。https:// か http:// で始まるアドレスを指定してください。\\n${e}`, token.file, token.line);\r\n                }\r\n            }\r\n        }\r\n        // 拡張子によってプラグインタイプを分岐する\r\n        const checkExt = (name, extlist) => {\r\n            for (const ext of extlist) {\r\n                if (name.endsWith(ext)) {\r\n                    return true;\r\n                }\r\n                if (name.endsWith(ext + '.txt')) {\r\n                    return true;\r\n                } // '.mjs.txt' にもマッチ\r\n            }\r\n            return false;\r\n        };\r\n        // URLパラメータを考慮する\r\n        const aname = (pathname + '?').split('?')[0];\r\n        // JSプラグイン    → (.js|.mjs)\r\n        // NAKO3プラグイン → (.nako3|.nako)\r\n        if (checkExt(aname, ['.js', '.mjs'])) {\r\n            return { filePath: pathname, type: 'js' };\r\n        }\r\n        if (checkExt(aname, ['.nako3', '.nako'])) {\r\n            return { filePath: pathname, type: 'nako3' };\r\n        }\r\n        if (checkExt(pathname, ['.js', '.mjs'])) {\r\n            return { filePath: pathname, type: 'js' };\r\n        }\r\n        if (checkExt(pathname, ['.nako3', '.nako'])) {\r\n            return { filePath: pathname, type: 'nako3' };\r\n        }\r\n        // ファイル拡張子が未指定の場合\r\n        throw new NakoImportError(`ファイル『${name}』は拡張子が(.nako3|.js|.js.txt|.mjs|.mjs.txt)以外なので取り込めません。`, token.file, token.line);\r\n    }\r\n}\r\nfunction dirname(s) {\r\n    const a = s.split('/');\r\n    if (a && a.length > 1) {\r\n        return a.slice(0, a.length - 1).join('/');\r\n    }\r\n    return '';\r\n}\r\nfunction resolveURL(base, s) {\r\n    const baseA = base.split('/');\r\n    const sA = s.split('/');\r\n    for (const p of sA) {\r\n        if (p === '') {\r\n            continue;\r\n        }\r\n        if (p === '.') {\r\n            continue;\r\n        }\r\n        if (p === '..') {\r\n            baseA.pop();\r\n            continue;\r\n        }\r\n        baseA.push(p);\r\n    }\r\n    return baseA.join('/');\r\n}\r\n","// wnako3 - nadesiko for web browser\r\nimport { WebNakoCompiler } from './wnako3mod.mjs';\r\n// ブラウザから取り込まれる時 navigator.nako3 になでしこを登録\r\nif ((typeof navigator) === 'object' && !navigator.exportWNako3) {\r\n    const wnako3 = navigator.nako3 = new WebNakoCompiler();\r\n    window.addEventListener('DOMContentLoaded', (e) => {\r\n        const isAutoRun = wnako3.checkScriptTagParam();\r\n        if (isAutoRun) {\r\n            wnako3.runNakoScript();\r\n        }\r\n    }, false);\r\n}\r\n"],"names":["isff","navigator","userAgent","toLowerCase","indexOf","addEvent","e","n","t","o","addEventListener","attachEvent","concat","window","event","getMods","slice","length","getKeys","replace","split","lastIndexOf","splice","_keyMap","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","ins","insert","home","end","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementHasBindEvent","code","toUpperCase","charCodeAt","setScope","getScope","eachUnbind","s","scope","i","method","splitKey","r","key","forEach","filter","compareArray","mods","eventHandler","element","Object","prototype","hasOwnProperty","call","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","keyCode","which","charCode","hotkeys","this","push","getModifierState","d","type","keydown","keyup","a","c","l","f","y","sort","join","document","toString","capture","isElementBind","clearModifier","_hotkeys","_api","deleteScope","getPressedKeyCodes","isPressed","target","srcElement","tagName","isContentEditable","readOnly","trigger","arguments","keys","find","unbind","Array","isArray","keyMap","modifier","noConflict","module","exports","version","major","minor","patch","NakoError","Error","constructor","tag","msg","file","undefined","line","positionJa","super","name","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","static","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","fname","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","Set","loopId","numAsyncFn","usedAsyncFn","flagLoop","__self","genMode","lastLineNo","varslistSet","__varslist","map","v","isFunction","names","readonly","varsSet","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","constPools","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","test","convLineno","node","forceUpdate","incLine","lineNoStr","lineDataJSON","JSON","stringify","debugCode","useDebug","messageAction","waitTime","varname","isValidIdentifier","getFuncName","name2","convRequire","moduleName","value","getDefFuncCode","opt","getModList","nakoFuncCode","fn","asyncFn","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","josi","getFunc","registerFunction","ast","funcList","registFunc","block","blockList","add","meta","initialNames","convGen","result","_convGen","isExpression","blocks","b","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convTikuji","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","findVar","has","isTop","js","genVar","position","res","lno","dispName","getLogger","warn","pv","getNakoFunc","commentSrc","String","poolIndex","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","from","values","varnames","word","oldUsedAsyncFn","includes","pop","list","index","codeInit","codeArray","checkInit","arrayDefCode","convGenLoop","tmpflag","varName","idLoop","varI","kara","made","to","flagDown","inc","varFrom","varTo","sorePrefex","nameS","id","options","prev","cond","varId","cases","body","cvalue","cblock","expr","falseBlock","false_block","curName","errorCode","errorBlock","convFuncGetArgsCalcType","_funcName","_func","args","opts","nodeArgs","arg","sore","getPluginList","__module","funcName","func","return_none","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","pure","localVars","str","indent","text","repeat","noCheckFuncs","argsCode","argsA","argStr","funcCall","OP_TBL","eq","noteq","gt","lt","gteq","lteq","and","or","shift_l","shift_r","shift_r0","op","operator","jsName","nodeName","vtype","vartype","mode","rf","errBlock","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","generateJS","gen","jsInit","funcID","Date","getTime","Math","floor","random","asyncMain","syncMain","trace","codeImportFiles","importNames","ff","standaloneJSCode","coreVersion","initCode","runtimeEnv","standalone","NakoCodeNop","NakoCodeLabel","NakoCodeEOL","NakoCodeJump","NakoCodeJumpIfTrue","NakoCodeJumpIfFalse","NakoCodeCall","NakoCodeCallObj","NakoCodeReturn","NakoCodeTry","NakoCodeCode","NakoCode","no","NakoGenASync","nakoTestList","codeId","labelContinue","labelBreak","labels","getVarsCode","needToFixAddr","codes","usedLabels","addCode","addCodeStr","convFunc","codeStr","a2","row","makeLabel","uniqLabel","makeLabelDirectly","labelName","makeJump","label","makeJumpIfTrue","makeJumpIfFalse","labelBegin","labelEnd","labelIfFalse","loopVar","loopCount","labelCheck","isMumeiFunc","codeCall","size","labelInc","taisyo","taisyoKey","targetArray","targetKeys","setTarget","_node","_isExpression","varValue","nextLabel","isJSFunc","arcCount","nameObj","vname","labelExcept","nako3","addCodeGenerator","josiList","tararebaJosiList","removeJosiList","tararebaMap","removeJosiMap","josiRE","RegExp","pluginName","pluginVersion","nakoRuntime","nakoVersion","sys","isDebug","__v0","__namespaceList","__findVar","nameStr","def","__locals","varScope","modList","__modList","__modName","modName","gname","__findFunc","parentFunc","__exec","params","f0","apply","__timeout","__interval","z2","__zero2","substring","__zero","keta","zeroS","__formatDate","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","parseFloat","__printPool","chk","constId","cp","logger","__genMode","__stopAsync","PI","NaN","Infinity","send","isVariableJosi","console","log","aa","pow","reduce","p","__reisetu","src","eval","async","Function","obj","m","runEx","resetEnv","resetLog","out","resetAll","tf","performance","now","t1","forceClose","isNaN","Number","g","v2","fromCodePoint","fromCharCode","codePointAt","ss","cnt","chr","zen1","han1","zen2","han2","c2","n2","charAt","j","parse","re","sa","global","z","ufunc","reverse","tmp","old","x","max","min","nn","ns","ms","col","cols","rows","idx","nr","sum","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","pluginfiles","then","mod","assign","catch","w","default","encodeURIComponent","decodeURIComponent","url","kv","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","get","prop","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","column","NakoParserBase","stackList","tokens","usedFuncs","stack","namespaceStack","funclist","funcLevel","localvars","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","init","reset","setFuncList","popStack","saveStack","loadStack","info","gnameSelf","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","debugMode","depth","typeName","debug","subNode","node2","table","not","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","substr","ii","trimOkurigana","beginTag","closeTag","NakoLexer","listObj","replaceTokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","isFuncPointer","readArgs","funcPointer","funcPointers","already","kai","isMumei","prevToken","defToken","funcNameToken","splitStringEx","arr","comment","modSelf","gname1","gfo1","gfo","fo","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","sep","NakoParser","startParser","ySentenceList","ySentence","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yTikuji","yRequire","yASyncMode","yDNCLMode","ySetGenMode","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","ver","yBlock","yDefFuncReadArgs","yDef","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","tanbun","optionNode","val","tikuji","tugini","tuginiType","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","kurikaesu","incdec","vInc","vTo","vFrom","yReturn","yForEach","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","getVarName","ySadameru","sadameru","createVar","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","funcObj","nullCount","valueCount","popArg","funcNode","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","yJSONArray","createVarList","checkArrayIndex","checkArrayReverse","ary","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","yValueWord","yValueWordGetIndex","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","convertTable","Map","_instance","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","checkNakoMode","modeNames","lines","debugTokens","ftype","fvalue","makeIndent","lastTokenInfo","newToken","templateToken","IS_DEBUG","isSkipWord","joinTokenLines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL_ARRAY_INIT_COUNT","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","pat","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","findIndex","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","addListener","callback","fromS","removeListener","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","clearName","pname","destroy","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__vars","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","getInstance","parser","lexer","replaceLogger","requireStatements","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","listRequireStatements","resolvePath","alias","startsWith","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","compile","compileFromCode","eventName","outCode","generateCode","genObj","generate","isReset","_runEx","evalJS","getNakoGlobal","run","compileStandalone","persistent","fpath","returnNone","setFunc","defSpecialRetMark","SpecialRetMark","removeCommentsFromLine","eos","isComment","cPrepared","ch2Prepared","getIndent","replaceRetMark","pairs","parents","spaces","lineCount","numLines","line2","current","fill","parent","getEditorTokens","compilerToken","includesLastCharacter","underlineJosi","docHTML","findPluginName","createParameterDeclaration","getDocumentationHTML","union","alphabet","createParameterName","getDefaultTokens","doc","getLine","withoutLogger","entries","lineStartOffset","tokenIndex","editorTokens","lineEndOffset","EditorMarkers","session","AceRange","disable","markers","hasAnnotations","startLine","startColumn","endLine","endColumn","fromOffset","fromNullable","range","addMarker","setAnnotations","addByError","fromError","marker","removeMarker","clearAnnotations","BackgroundTokenizer","onTokenUpdate","onCompileError","onUpdate","dirty","lastLexerOutput","getAllLines","cache","deleted","enabled","update","startTime","getLength","dispose","$updateOnChange","delta","startRow","endRow","columnStart","oldTokens","newTokens","getTokens","fireUpdateEvent","firstRow","lastRow","setDocument","scheduleStart","setTokenizer","tokenizer","stop","getState","LanguageFeatures","state","parseLine","every","removeInLine","minIndent","insertInLine","input","autoOutdent","prevLine","isBlockStart","getBlockStructure","oldIndent","prefix","backgroundTokenizer","addItem","caption","score","set","indentSyntax","en","jp","snippet","getFoldWidget","foldStyle","getFoldWidgetRange","pair","results","title","blockStructure","EditorTabs","editor","UndoManager","newTab","cursor","reversed","scroll","top","undoManger","getTab","getValue","selection","getRange","isBackwards","getScrollLeft","getScrollTop","getUndoManager","setTab","setValue","setRange","setScrollLeft","setScrollTop","setUndoManager","Options","getOption","localStorage","setItem","getItem","json","keyboardHandler","setOption","theme","fontSize","tabSize","OptionPanel","panel","done","isMain","renderOptionGroup","group","items","defaultValue","ariaLabel","render","on","save","completers","editorIdCounter","setupEditor","idOrElement","ace","edit","getElementById","require","Range","editorMarkers","bgTokenizer","dataset","nako3DisableMarker","classList","contains","setAttribute","nako3Readonly","setReadOnly","setFontSize","resetEditorTokens","removeFullLines","defineOptions","initialValue","setOptions","wrap","indentedSoftWrap","showPrintMargin","setKeyboardHandler","tooltip","Tooltip","container","renderer","hide","getDocumentPosition","getTokenAt","setHtml","show","clientX","clientY","domEvent","className","isFocused","editorId","setBreakpoint","postMessage","clearBreakpoint","forceSyntaxHighlighting","nako3ForceSyntaxHighlighting","isFirstTime","oldBgTokenizer","_signal","slowSpeedMessage","remove","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","wnako3EditorId","getCompletions","getCompletionItems","some","getSnippets","setCompleters","getCompletionPrefix","getCursorPosition","languageFeatures","oop","TextMode","Mode","HighlightRules","foldingRules","inherits","toggleCommentLines","getNextLineIndent","checkOutdent","setMode","setTheme","load","initPanel","buttonContainer","createElement","appendChild","innerHTML","codeLensListeners","CodeLens","commands","addCommand","registerCodeLensProvider","provideCodeLenses","getCodeLens","exitFullscreen","setScrollMargin","fullscreenButton","innerText","settingsButton","execCommand","editorTabs","nako3Resizable","MutationObserver","resize","observe","attributes","retokenize","outputContainer","display","loadDependencies","localFiles","testName","ua","alert","prompt","confirm","location","href","back","fetch","status","headers","blob","bodyData","fd","FormData","flist","arrayBuffer","Blob","resolveCount","q","querySelector","querySelectorAll","getElementsByTagName","pa","__query","dom","funcStr","selectedIndex","uses","wa","getAttribute","HTMLElement","removeChild","focus","__addEvent","__removeEvent","__keyHandler","__mouseHandler","__touchHandler","__requestAnimationFrameLastId","requestAnimationFrame","cancelAnimationFrame","skin","elm","btn","inp","te","lbl","cv","width","height","img","span","htmlFor","createTextNode","frm","rowIndex","th","__tohtmlQ","td","ita","its","select","it","tr","getChildren","childNodes","checked","rr","bgColor","bgHead","rowNo","__tohtml","backgroundColor","color","textAlign","clipboard","writeText","pre","webkitUserSelect","userSelect","textContent","getSelection","selectAllChildren","readText","removeItem","errMsgCanvasInit","__canvas","__ctx","getContext","__fillStyle","__strokeStyle","restore","strokeStyle","fillStyle","beginPath","moveTo","lineTo","stroke","lineWidth","rect","clearRect","xy","arc","ellipse","Image","crossOrigin","onload","onerror","drawFunc","im","ctx","drawImage","image","sxy","dxy","errArgLen","__proto__","sw","font","fillText","measureText","translate","rotate","scale","setTransform","transform","toDataURL","toBlob","download","click","geolocation","getCurrentPosition","coords","latitude","longitude","watchPosition","wid","clearWatch","speechSynthesis","speak","onend","voice","SpeechSynthesisUtterance","lang","rate","pitch","volume","getVoices","voices","changeFunc","ws","WebSocket","onopen","cbOpen","cbError","onmessage","cbMsg","close","Audio","loop","play","pause","currentTime","duration","PluginBrowser","win","nav","loc","DOCUMENT","WINDOW","NAVIGATOR","__dom_events","setHandler","wrapperFunc","rawFunc","box","getBoundingClientRect","touches","changedTouches","ts","tx","removeEventListener","__removeAllDomEvent","commandName","isGetFunc","__chartjs","handler","Chart","chart","gopt","stacked","dataOrg","bgcolorList","fgcolorList","bgcolors","fgcolors","datasets","borderColor","o1","alg","buffer","crypto","subtle","digest","hash","view","DataView","byteLength","pad","getUint32","NAKO_SCRIPT_RE","WebNakoCompiler","wnakoVersion","nakoScriptCount","scripts","script","getLoaderTool","checkScriptTagParam","basename","statusText","jstext","exportName","gNavigator","gSelf","globalNavigator","globalNako3","fromFile","pathname","URL","baseDir","dirname","baseA","sA","resolveURL","checkExt","extlist","ext","endsWith","aname","exportWNako3","wnako3","runNakoScript"],"sourceRoot":""}