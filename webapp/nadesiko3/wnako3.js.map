{"version":3,"file":"wnako3.js","mappings":"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","sources":["webpack://nadesiko3/./node_modules/hotkeys-js/dist/hotkeys.common.min.js","webpack://nadesiko3/./node_modules/hotkeys-js/index.js","webpack://nadesiko3/./core/src/nako_core_version.mjs","webpack://nadesiko3/./core/src/nako_errors.mjs","webpack://nadesiko3/./core/src/nako_gen.mjs","webpack://nadesiko3/./core/src/nako_gen_async.mjs","webpack://nadesiko3/./core/src/nako_josi_list.mjs","webpack://nadesiko3/./core/src/nako_reserved_words.mjs","webpack://nadesiko3/./core/src/plugin_system.mjs","webpack://nadesiko3/webpack/bootstrap","webpack://nadesiko3/webpack/runtime/define property getters","webpack://nadesiko3/webpack/runtime/hasOwnProperty shorthand","webpack://nadesiko3/webpack/runtime/make namespace object","webpack://nadesiko3/./core/src/nako_parser_const.mjs","webpack://nadesiko3/./core/src/nako_types.mjs","webpack://nadesiko3/./core/src/nako_indent_chars.mjs","webpack://nadesiko3/./core/src/nako_lex_rules.mjs","webpack://nadesiko3/./core/src/nako_lexer.mjs","webpack://nadesiko3/./core/src/nako_parser3.mjs","webpack://nadesiko3/./core/src/nako_parser_base.mjs","webpack://nadesiko3/./core/src/nako_prepare.mjs","webpack://nadesiko3/./core/src/nako_tools.mjs","webpack://nadesiko3/./core/src/nako_indent_inline.mjs","webpack://nadesiko3/./core/src/nako_from_dncl.mjs","webpack://nadesiko3/./core/src/nako_from_dncl2.mjs","webpack://nadesiko3/./core/src/nako_source_mapping.mjs","webpack://nadesiko3/./core/src/nako_colors.mjs","webpack://nadesiko3/./core/src/nako_logger.mjs","webpack://nadesiko3/./core/src/nako_global.mjs","webpack://nadesiko3/./core/src/plugin_math.mjs","webpack://nadesiko3/./core/src/nako_csv.mjs","webpack://nadesiko3/./core/src/plugin_csv.mjs","webpack://nadesiko3/./core/src/plugin_promise.mjs","webpack://nadesiko3/./core/src/plugin_test.mjs","webpack://nadesiko3/./core/src/nako3.mjs","webpack://nadesiko3/./core/src/nako_indent.mjs","webpack://nadesiko3/./src/wnako3_editor.mjs","webpack://nadesiko3/./src/nako_version.mjs","webpack://nadesiko3/./src/plugin_browser_color.mjs","webpack://nadesiko3/./src/plugin_browser_system.mjs","webpack://nadesiko3/./src/plugin_browser_dialog.mjs","webpack://nadesiko3/./src/plugin_browser_location.mjs","webpack://nadesiko3/./src/plugin_browser_ajax.mjs","webpack://nadesiko3/./src/plugin_browser_dom_basic.mjs","webpack://nadesiko3/./src/plugin_browser_dom_event.mjs","webpack://nadesiko3/./src/plugin_browser_dom_parts.mjs","webpack://nadesiko3/./src/plugin_browser_html.mjs","webpack://nadesiko3/./src/plugin_browser_storage.mjs","webpack://nadesiko3/./src/plugin_browser_canvas.mjs","webpack://nadesiko3/./src/plugin_browser_geolocation.mjs","webpack://nadesiko3/./src/plugin_browser_speech.mjs","webpack://nadesiko3/./src/plugin_browser_websocket.mjs","webpack://nadesiko3/./src/plugin_browser_audio.mjs","webpack://nadesiko3/./src/plugin_browser.mjs","webpack://nadesiko3/./src/plugin_browser_hotkey.mjs","webpack://nadesiko3/./src/plugin_browser_chart.mjs","webpack://nadesiko3/./src/plugin_browser_crypto.mjs","webpack://nadesiko3/./src/wnako3mod.mjs","webpack://nadesiko3/./src/wnako3.mjs"],"sourcesContent":["/*! hotkeys-js v3.9.4 | MIT © 2022 kenny wong <wowohoo@qq.com> http://jaywcjlove.github.io/hotkeys */\n\"use strict\";var isff=\"undefined\"!=typeof navigator&&0<navigator.userAgent.toLowerCase().indexOf(\"firefox\");function addEvent(e,n,t,o){e.addEventListener?e.addEventListener(n,t,o):e.attachEvent&&e.attachEvent(\"on\".concat(n),function(){t(window.event)})}function getMods(e,n){for(var t=n.slice(0,n.length-1),o=0;o<t.length;o++)t[o]=e[t[o].toLowerCase()];return t}function getKeys(e){for(var n=(e=(e=\"string\"!=typeof e?\"\":e).replace(/\\s/g,\"\")).split(\",\"),t=n.lastIndexOf(\"\");0<=t;)n[t-1]+=\",\",n.splice(t,1),t=n.lastIndexOf(\"\");return n}function compareArray(e,n){for(var t=e.length<n.length?n:e,o=e.length<n.length?e:n,s=!0,i=0;i<t.length;i++)~o.indexOf(t[i])||(s=!1);return s}for(var _keyMap={backspace:8,tab:9,clear:12,enter:13,return:13,esc:27,escape:27,space:32,left:37,up:38,right:39,down:40,del:46,delete:46,ins:45,insert:45,home:36,end:35,pageup:33,pagedown:34,capslock:20,num_0:96,num_1:97,num_2:98,num_3:99,num_4:100,num_5:101,num_6:102,num_7:103,num_8:104,num_9:105,num_multiply:106,num_add:107,num_enter:108,num_subtract:109,num_decimal:110,num_divide:111,\"\\u21ea\":20,\",\":188,\".\":190,\"/\":191,\"`\":192,\"-\":isff?173:189,\"=\":isff?61:187,\";\":isff?59:186,\"'\":222,\"[\":219,\"]\":221,\"\\\\\":220},_modifier={\"\\u21e7\":16,shift:16,\"\\u2325\":18,alt:18,option:18,\"\\u2303\":17,ctrl:17,control:17,\"\\u2318\":91,cmd:91,command:91},modifierMap={16:\"shiftKey\",18:\"altKey\",17:\"ctrlKey\",91:\"metaKey\",shiftKey:16,ctrlKey:17,altKey:18,metaKey:91},_mods={16:!1,18:!1,17:!1,91:!1},_handlers={},k=1;k<20;k++)_keyMap[\"f\".concat(k)]=111+k;var _downKeys=[],winListendFocus=!1,_scope=\"all\",elementHasBindEvent=[],code=function(e){return _keyMap[e.toLowerCase()]||_modifier[e.toLowerCase()]||e.toUpperCase().charCodeAt(0)};function setScope(e){_scope=e||\"all\"}function getScope(){return _scope||\"all\"}function getPressedKeyCodes(){return _downKeys.slice(0)}function filter(e){var e=e.target||e.srcElement,n=e.tagName;return!e.isContentEditable&&(\"INPUT\"!==n&&\"TEXTAREA\"!==n&&\"SELECT\"!==n||e.readOnly)?!0:!1}function isPressed(e){return\"string\"==typeof e&&(e=code(e)),!!~_downKeys.indexOf(e)}function deleteScope(e,n){var t,o,s;for(s in e=e||getScope(),_handlers)if(Object.prototype.hasOwnProperty.call(_handlers,s))for(t=_handlers[s],o=0;o<t.length;)t[o].scope===e?t.splice(o,1):o++;getScope()===e&&setScope(n||\"all\")}function clearModifier(e){var n=e.keyCode||e.which||e.charCode,t=_downKeys.indexOf(n);if(t<0||_downKeys.splice(t,1),e.key&&\"meta\"==e.key.toLowerCase()&&_downKeys.splice(0,_downKeys.length),(n=93!==n&&224!==n?n:91)in _mods)for(var o in _mods[n]=!1,_modifier)_modifier[o]===n&&(hotkeys[o]=!1)}function unbind(e){if(void 0===e)Object.keys(_handlers).forEach(function(e){return delete _handlers[e]});else if(Array.isArray(e))e.forEach(function(e){e.key&&eachUnbind(e)});else if(\"object\"==typeof e)e.key&&eachUnbind(e);else if(\"string\"==typeof e){for(var n=arguments.length,t=Array(1<n?n-1:0),o=1;o<n;o++)t[o-1]=arguments[o];var s=t[0],i=t[1];\"function\"==typeof s&&(i=s,s=\"\"),eachUnbind({key:e,scope:s,method:i,splitKey:\"+\"})}}var eachUnbind=function(e){var s=e.scope,i=e.method,n=e.splitKey,r=void 0===n?\"+\":n;getKeys(e.key).forEach(function(e){var n,e=e.split(r),t=e.length,o=e[t-1],o=\"*\"===o?\"*\":code(o);_handlers[o]&&(s=s||getScope(),n=1<t?getMods(_modifier,e):[],_handlers[o]=_handlers[o].filter(function(e){return!((!i||e.method===i)&&e.scope===s&&compareArray(e.mods,n))}))})};function eventHandler(e,n,t,o){var s;if(n.element===o&&(n.scope===t||\"all\"===n.scope)){for(var i in s=0<n.mods.length,_mods)Object.prototype.hasOwnProperty.call(_mods,i)&&(!_mods[i]&&~n.mods.indexOf(+i)||_mods[i]&&!~n.mods.indexOf(+i))&&(s=!1);(0!==n.mods.length||_mods[16]||_mods[18]||_mods[17]||_mods[91])&&!s&&\"*\"!==n.shortcut||!1===n.method(e,n)&&(e.preventDefault?e.preventDefault():e.returnValue=!1,e.stopPropagation&&e.stopPropagation(),e.cancelBubble&&(e.cancelBubble=!0))}}function dispatch(t,e){var n=_handlers[\"*\"],o=t.keyCode||t.which||t.charCode;if(hotkeys.filter.call(this,t)){if(~_downKeys.indexOf(o=93!==o&&224!==o?o:91)||229===o||_downKeys.push(o),[\"ctrlKey\",\"altKey\",\"shiftKey\",\"metaKey\"].forEach(function(e){var n=modifierMap[e];t[e]&&!~_downKeys.indexOf(n)?_downKeys.push(n):!t[e]&&~_downKeys.indexOf(n)?_downKeys.splice(_downKeys.indexOf(n),1):\"metaKey\"!==e||!t[e]||3!==_downKeys.length||t.ctrlKey||t.shiftKey||t.altKey||(_downKeys=_downKeys.slice(_downKeys.indexOf(n)))}),o in _mods){for(var s in _mods[o]=!0,_modifier)_modifier[s]===o&&(hotkeys[s]=!0);if(!n)return}for(var i in _mods)Object.prototype.hasOwnProperty.call(_mods,i)&&(_mods[i]=t[modifierMap[i]]);t.getModifierState&&(!t.altKey||t.ctrlKey)&&t.getModifierState(\"AltGraph\")&&(~_downKeys.indexOf(17)||_downKeys.push(17),~_downKeys.indexOf(18)||_downKeys.push(18),_mods[17]=!0,_mods[18]=!0);var r=getScope();if(n)for(var d=0;d<n.length;d++)n[d].scope===r&&(\"keydown\"===t.type&&n[d].keydown||\"keyup\"===t.type&&n[d].keyup)&&eventHandler(t,n[d],r,e);if(o in _handlers)for(var a=0;a<_handlers[o].length;a++)if((\"keydown\"===t.type&&_handlers[o][a].keydown||\"keyup\"===t.type&&_handlers[o][a].keyup)&&_handlers[o][a].key){for(var c=_handlers[o][a],l=c.key.split(c.splitKey),f=[],y=0;y<l.length;y++)f.push(code(l[y]));f.sort().join(\"\")===_downKeys.sort().join(\"\")&&eventHandler(t,c,r,e)}}}function isElementBind(e){return!!~elementHasBindEvent.indexOf(e)}function hotkeys(e,n,t){_downKeys=[];var o=getKeys(e),s=[],i=\"all\",r=document,d=0,a=!1,c=!0,l=\"+\",f=!1;for(void 0===t&&\"function\"==typeof n&&(t=n),\"[object Object]\"===Object.prototype.toString.call(n)&&(n.scope&&(i=n.scope),n.element&&(r=n.element),n.keyup&&(a=n.keyup),void 0!==n.keydown&&(c=n.keydown),void 0!==n.capture&&(f=n.capture),\"string\"==typeof n.splitKey&&(l=n.splitKey)),\"string\"==typeof n&&(i=n);d<o.length;d++)s=[],1<(e=o[d].split(l)).length&&(s=getMods(_modifier,e)),(e=\"*\"===(e=e[e.length-1])?\"*\":code(e))in _handlers||(_handlers[e]=[]),_handlers[e].push({keyup:a,keydown:c,scope:i,mods:s,shortcut:o[d],method:t,key:o[d],splitKey:l,element:r});void 0!==r&&!isElementBind(r)&&window&&(elementHasBindEvent.push(r),addEvent(r,\"keydown\",function(e){dispatch(e,r)},f),winListendFocus||(winListendFocus=!0,addEvent(window,\"focus\",function(){_downKeys=[]},f)),addEvent(r,\"keyup\",function(e){dispatch(e,r),clearModifier(e)},f))}function trigger(n){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:\"all\";Object.keys(_handlers).forEach(function(e){e=_handlers[e].find(function(e){return e.scope===t&&e.shortcut===n});e&&e.method&&e.method()})}var a,_hotkeys,_api={setScope:setScope,getScope:getScope,deleteScope:deleteScope,getPressedKeyCodes:getPressedKeyCodes,isPressed:isPressed,filter:filter,trigger:trigger,unbind:unbind,keyMap:_keyMap,modifier:_modifier,modifierMap:modifierMap};for(a in _api)Object.prototype.hasOwnProperty.call(_api,a)&&(hotkeys[a]=_api[a]);\"undefined\"!=typeof window&&(_hotkeys=window.hotkeys,hotkeys.noConflict=function(e){return e&&window.hotkeys===hotkeys&&(window.hotkeys=_hotkeys),hotkeys},window.hotkeys=hotkeys),module.exports=hotkeys;","if (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.min.js');\n} else {\n  // eslint-disable-next-line global-require\n  module.exports = require('./dist/hotkeys.common.js');\n}\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst coreVersion = {\n    version: '3.4.13',\n    major: 3,\n    minor: 4,\n    patch: 13\n};\nexport default coreVersion;\n","/**\n * なでしこ言語が投げる全てのエラーが継承するクラス\n */\nexport class NakoError extends Error {\n    constructor(tag, msg, file = undefined, line = undefined) {\n        // エラー位置を分かりやすく日本語に変換\n        const positionJa = `${file || ''}${line === undefined ? '' : `(${line + 1}行目): `}`;\n        // #1223 エラーメッセージに「main__関数名」と表示されるので、main__は省略して表示\n        msg = msg.replace(/『main__(.+?)』/g, '『$1』');\n        // 親のErrorを呼ぶ\n        super(`[${tag}]${positionJa}${msg}`);\n        // エラーの種類を設定\n        this.name = 'NakoError';\n        this.type = 'NakoError';\n        this.tag = '[' + tag + ']';\n        this.positionJa = positionJa;\n        this.msg = msg;\n    }\n}\nexport class NakoIndentError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} line\n     * @param {string} file\n     */\n    constructor(msg, line, file) {\n        super('インデントエラー', msg, file, line);\n        this.type = 'NakoIndentError';\n        this.line = line;\n        this.file = file;\n    }\n}\n// コンパイラの内部でのみ使うエラー。投げられたらtryでキャッチしてLexerErrorへ変更する。\nexport class InternalLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number} preprocessedCodeStartOffset\n     * @param {number} preprocessedCodeEndOffset\n     * @param {number | undefined} [line]\n     * @param {string | undefined} [file]\n     */\n    constructor(msg, preprocessedCodeStartOffset, preprocessedCodeEndOffset, line, file) {\n        super('字句解析エラー（内部エラー）', msg, file, line);\n        this.type = 'InternalLexerError';\n        this.preprocessedCodeStartOffset = preprocessedCodeStartOffset;\n        this.preprocessedCodeEndOffset = preprocessedCodeEndOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoLexerError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | null} startOffset\n     * @param {number | null} endOffset,\n     * @param {number | undefined} line\n     * @param {string | undefined} file\n     */\n    constructor(msg, startOffset, endOffset, line, file) {\n        super('字句解析エラー', msg, file, line);\n        this.type = 'NakoLexerError';\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoSyntaxError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {number | undefined} line\n     * @param {number | undefined} startOffset\n     * @param {number | undefined} endOffset\n     * @param {string | undefined} file\n     */\n    constructor(msg, line, startOffset, endOffset, file) {\n        super('文法エラー', msg, file, line);\n        this.type = 'NakoSyntaxError';\n        this.file = file;\n        this.line = line;\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n    }\n    /**\n     * @param {string} msg\n     * @param {Ast} first\n     * @param {Ast} [last]\n     */\n    static fromNode(msg, first, last = undefined) {\n        if (!first) {\n            return new NakoSyntaxError(msg, undefined, undefined, undefined, undefined);\n        }\n        const startOffset = typeof first.startOffset === 'number' ? first.startOffset : undefined;\n        const endOffset = (last && typeof last.endOffset === 'number')\n            ? last.endOffset\n            : (typeof first.endOffset === 'number' ? first.endOffset : undefined);\n        return new NakoSyntaxError(msg, first.line, startOffset, endOffset, first.file);\n    }\n}\nexport class NakoRuntimeError extends NakoError {\n    /**\n     * @param error エラー\n     * @param lineNo 発生行\n     */\n    constructor(error, lineNo) {\n        let msg = 'unknown';\n        if (typeof error === 'string') {\n            msg = error;\n        }\n        else {\n            if (error instanceof NakoRuntimeError) {\n                msg = error.msg;\n            }\n            else if (error instanceof NakoError) {\n                msg = error.msg;\n            }\n            else if (error instanceof Error) {\n                if (error.name === 'Error') {\n                    msg = error.message;\n                }\n                else {\n                    msg = `${error.name}: ${error.message}`;\n                }\n            }\n        }\n        // 行番号を表す文字列をパースする。\n        let line;\n        let file;\n        let matches;\n        if (lineNo === undefined) {\n            line = undefined;\n            file = undefined;\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+):(.*)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = matches[2];\n            // eslint-disable-next-line no-cond-assign\n        }\n        else if (matches = /^l(-?\\d+)$/.exec(lineNo)) {\n            line = parseInt(matches[1]);\n            file = 'main.nako3';\n        }\n        else {\n            line = 0;\n            file = lineNo;\n        }\n        super('実行時エラー', msg, file, line);\n        this.type = 'NakoRuntimeError';\n        this.lineNo = lineNo;\n        this.line = line;\n        this.file = file;\n    }\n}\nexport class NakoImportError extends NakoError {\n    /**\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     */\n    constructor(msg, file, line) {\n        super('取り込みエラー', msg, file, line);\n        this.file = file;\n        this.line = line;\n    }\n}\n","/**\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお速度優先で忠実にJavaScriptのコードを生成する。\n */\nimport { NakoSyntaxError } from './nako_errors.mjs';\n// なでしこで定義した関数の開始コードと終了コード\nconst topOfFunction = '(function(){\\n';\nconst endOfFunction = '})';\nconst topOfFunctionAsync = '(async function(){\\n';\n/** コード生成オプション */\nexport class NakoGenOptions {\n    constructor(isTest = false, importFiles = [], codeStandalone = '', convEnv = '') {\n        this.isTest = isTest;\n        this.codeStandalone = codeStandalone;\n        this.codeEnv = convEnv;\n        this.importFiles = ['plugin_system.mjs', 'plugin_math.mjs', 'plugin_csv.mjs', 'plugin_promise.mjs', 'plugin_test.mjs'];\n        for (const fname of importFiles) {\n            this.importFiles.push(fname);\n        }\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGen {\n    /** constructor\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         */\n        this.nakoTestFuncs = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         */\n        this.loopId = 1;\n        /**\n         * 非同関数を何回使ったか\n         */\n        this.numAsyncFn = 0;\n        /**\n         * 関数定義の際、関数の中でasyncFn=trueの関数を呼び出したかどうかを調べる @see convDefFuncCommon\n         */\n        this.usedAsyncFn = false;\n        /** 変換中の処理が、ループの中かどうかを判定する */\n        this.flagLoop = false;\n        this.__self = com;\n        /** コードジェネレータの種類 */\n        this.genMode = 'sync';\n        /** 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。 */\n        this.lastLineNo = null;\n        /** スタック */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /** スタックトップ */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0,\n            mumeiId: 0\n        };\n        /**\n         * 未定義の変数の警告を行う\n         */\n        this.warnUndefinedVar = true;\n        this.constPools = [];\n        // 暫定変数\n        this.warnUndefinedReturnUserFunc = 1;\n        this.warnUndefinedCallingUserFunc = 1;\n        this.warnUndefinedCallingSystemFunc = 1;\n        this.warnUndefinedCalledUserFuncArgs = 1;\n        this.debugOption = com.debugOption;\n    }\n    static isValidIdentifier(name) {\n        // TODO: いらなそうな部分は削る\n        // https://stackoverflow.com/a/9337047\n        // eslint-disable-next-line no-misleading-character-class\n        return /^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(name);\n    }\n    /**\n     * 改行を埋め込む\n     */\n    convLineno(node, forceUpdate = false, incLine = 0) {\n        // スピードモードでは行番号を埋め込まない\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        const lineNo = node.line + incLine;\n        let lineNoStr;\n        if (typeof node.line !== 'number') {\n            lineNoStr = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNoStr = `l${lineNo}`;\n        }\n        else {\n            lineNoStr = `l${lineNo}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNoStr === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNoStr;\n        }\n        // 実行行のデータ\n        const lineDataJSON = JSON.stringify(lineNoStr);\n        // デバッグ実行か\n        let debugCode = '';\n        if (this.debugOption.useDebug) {\n            // messageAction\n            if (this.debugOption.messageAction) {\n                debugCode += `window.postMessage({action:'${this.debugOption.messageAction}',` +\n                    `line: ${lineDataJSON}});`;\n            }\n            // waitTime\n            if (lineNo >= 1) {\n                if (this.debugOption.waitTime > 0) {\n                    debugCode += `await __v0['秒待'](${this.debugOption.waitTime},__self);`;\n                }\n                // breakpoints\n                this.numAsyncFn += 1;\n                this.usedAsyncFn = true;\n                debugCode += `await __v0['__DEBUG_BP_WAIT'](${lineNo}, __self);`;\n            }\n            // end\n            debugCode += 'if(__v0.forceClose){return-1};';\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${lineDataJSON};` + debugCode;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * @param {string} name\n     */\n    varname(name) {\n        if (this.varslistSet.length === 3) {\n            // グローバル\n            return `__varslist[${2}][${JSON.stringify(name)}]`;\n        }\n        else {\n            // 関数内\n            if (NakoGen.isValidIdentifier(name)) {\n                return name;\n            }\n            else {\n                return `__vars[${JSON.stringify(name)}]`;\n            }\n        }\n    }\n    /**\n     * @param {string} name\n     * @returns {string}\n    */\n    static getFuncName(name) {\n        if (name.indexOf('__') >= 0) { // スコープがある場合\n            const a = name.split('__');\n            const scope = a[0];\n            const name3 = NakoGen.getFuncName(a[1]);\n            return `${scope}__${name3}`;\n        }\n        let name2 = name.replace(/[ぁ-ん]+$/, '');\n        if (name2 === '') {\n            name2 = name;\n        }\n        return name2;\n    }\n    /** @param {Ast} node */\n    static convPrint(node) {\n        return `__print(${node});`;\n    }\n    /** @param {Ast} node */\n    convRequire(node) {\n        const moduleName = node.value;\n        return this.convLineno(node, false) +\n            `__module['${moduleName}'] = require('${moduleName}');\\n`;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param com\n     * @param opt\n     */\n    getDefFuncCode(com, opt) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += `const nakoVersion = { version: ${JSON.stringify(com.version)} }\\n`;\n        code += 'const __self = self;\\n';\n        code += 'self.__self = self;\\n';\n        code += 'const __varslist = self.__varslist;\\n';\n        code += 'const __module = self.__module;\\n';\n        code += 'const __v0 = self.__v0 = self.__varslist[0];\\n';\n        code += 'const __v1 = self.__v1 = self.__varslist[1];\\n';\n        code += 'const __vars = self.__vars = self.__varslist[2];\\n';\n        code += `const __modList = self.__modList = ${JSON.stringify(com.getModList())}\\n`;\n        code += '__v0.line = 0;\\n';\n        code += '__v0.forceClose = false;\\n';\n        code += `__v0.useDebug = ${this.debugOption.useDebug};\\n`;\n        // 定数を埋め込む\n        code += 'self.constPools = ' + JSON.stringify(this.constPools) + ';\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            const isAsync = this.nakoFuncList[key].asyncFn ? 'true' : 'false';\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}' asyncFn=${isAsync}]\\n` +\n                `self.__varslist[1][\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // テストの定義を行う\n        if (opt.isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestFuncs) {\n                const f = this.nakoTestFuncs[key].fn;\n                testCode += `${f};\\n;`;\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        /** 関数一覧 */\n        const funcList = [];\n        // なでしこ関数を定義して this.nako_func[name] に定義する\n        const registFunc = (node) => {\n            if (!node.block) {\n                return;\n            }\n            const blockList = (node.block instanceof Array) ? node.block : [node.block];\n            for (let i = 0; i < blockList.length; i++) {\n                const t = blockList[i];\n                if (t.type === 'def_func') {\n                    if (!t.name) {\n                        throw new Error('[System Error] 関数の定義で関数名が指定されていない');\n                    }\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.varslistSet[1].names.add(name); // global\n                    const meta = (t.name).meta; // todo: 強制変換したが正しいかチェック\n                    this.nakoFuncList[name] = {\n                        josi: meta.josi,\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        fn: () => { },\n                        type: 'func',\n                        asyncFn: t.asyncFn\n                    };\n                    funcList.push({ name, node: t });\n                    // eslint-disable-next-line brace-style\n                }\n                // 実行速度優先 などのオプションが付いている場合の処理\n                else if (t.type === 'speed_mode') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (!t.block) {\n                        continue;\n                    }\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        // 関数の登録\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param node\n     * @param opt\n     */\n    convGen(node, opt) {\n        const result = this.convLineno(node, false) + this._convGen(node, true);\n        if (opt.isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        if (!node) {\n            return '';\n        }\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            case 'nop':\n                break;\n            case 'block':\n                if (!node.block) {\n                    return code;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const blocks = (node.block instanceof Array) ? node.block : [node.block];\n                for (let i = 0; i < blocks.length; i++) {\n                    const b = blocks[i];\n                    code += this._convGen(b, false);\n                }\n                break;\n            case 'comment':\n            case 'eol':\n                code += this.convComment(node);\n                break;\n            case 'break':\n                code += this.convCheckLoop(node, 'break');\n                break;\n            case 'continue':\n                code += this.convCheckLoop(node, 'continue');\n                break;\n            case 'end':\n                code += '__v0[\\'終\\'](__self);';\n                break;\n            case 'number':\n                code += node.value;\n                break;\n            case 'string':\n                code += this.convString(node);\n                break;\n            case 'def_local_var':\n                code += this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.convDefLocalVarlist(node);\n                break;\n            case 'let':\n                code += this.convLet(node);\n                break;\n            case 'inc':\n                code += this.convInc(node);\n                break;\n            case 'word':\n            case 'variable':\n                code += this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                code += this.convOp(node);\n                break;\n            case 'renbun':\n                code += this.convRenbun(node);\n                break;\n            case 'not':\n                code += '((' + this._convGen(node.value, true) + ')?0:1)';\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                code += this.convCallFunc(node, isExpression);\n                break;\n            case 'if':\n                code += this.convIf(node);\n                break;\n            case 'tikuji':\n                code += this.convTikuji(node);\n                break;\n            case 'for':\n                code += this.convFor(node);\n                break;\n            case 'foreach':\n                code += this.convForeach(node);\n                break;\n            case 'repeat_times':\n                code += this.convRepeatTimes(node);\n                break;\n            case 'speed_mode':\n                code += this.convSpeedMode(node, isExpression);\n                break;\n            case 'performance_monitor':\n                code += this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'while':\n                code += this.convWhile(node);\n                break;\n            case 'atohantei':\n                code += this.convAtohantei(node);\n                break;\n            case 'switch':\n                code += this.convSwitch(node);\n                break;\n            case 'let_array':\n                code += this.convLetArray(node);\n                break;\n            case '配列参照':\n                code += this.convRefArray(node);\n                break;\n            case 'json_array':\n                code += this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                code += this.convJsonObj(node);\n                break;\n            case 'func_obj':\n                code += this.convFuncObj(node);\n                break;\n            case 'bool':\n                code += (node.value) ? 'true' : 'false';\n                break;\n            case 'null':\n                code += 'null';\n                break;\n            case 'def_test':\n                code += this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.convDefFunc(node);\n                break;\n            case 'return':\n                code += this.convReturn(node);\n                break;\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    /** 変数を検索 */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varslistSet.length > 3 && this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: this.varname(name) };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                // ユーザーの定義したグローバル変数 (__varslist[2]) は、変数展開されている（そのままの名前で定義されている）可能性がある。\n                // それ以外の変数は、必ず__varslistに入っている。\n                return { i, name, isTop: false, js: `__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                if (this.warnUndefinedVar) {\n                    // main__は省略して表示するように。 #1223\n                    const dispName = name.replace(/^main__(.+)$/, '$1');\n                    this.__self.getLogger().warn(`変数『${dispName}』は定義されていません。`, position);\n                }\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getNakoFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi || pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        return this.genVar(name, node);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        const lno = this.convLineno(node, false);\n        let value;\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        else if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        else {\n            return lno + 'return;';\n        }\n        if (this.warnUndefinedReturnUserFunc === 0) {\n            return lno + `return ${value};`;\n        }\n        else {\n            const poolIndex = this.constPools.length;\n            this.constPools.push({\n                msg: 'ユーザ関数からundefinedが返されています',\n                file: node.file,\n                line: node.line\n            });\n            return lno + `return (__self.chk(${value}, ${poolIndex}));`;\n        }\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        return this.convLineno(node) + cmd + ';';\n    }\n    convDefFuncCommon(node, name) {\n        // パフォーマンスモニタ:ユーザ関数のinjectの定義\n        let performanceMonitorInjectAtStart = '';\n        let performanceMonitorInjectAtEnd = '';\n        if (this.performanceMonitor.userFunction !== 0) {\n            let key = name;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            performanceMonitorInjectAtStart = 'const performanceMonitorEnd = (function (key, type) {\\n' +\n                'const uf_start = performance.now() * 1000;\\n' +\n                'return function () {\\n' +\n                'const el_time = performance.now() * 1000 - uf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: el_time, min_usec: el_time, max_usec: el_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=el_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>el_time){__self.__performance_monitor[key].min_usec=el_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<el_time){__self.__performance_monitor[key].max_usec=el_time;}\\n' +\n                `}};})('${key}', 'user');` +\n                'try {\\n';\n            performanceMonitorInjectAtEnd = '} finally { performanceMonitorEnd(); }\\n';\n        }\n        let variableDeclarations = '';\n        const popStack = '';\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        variableDeclarations += '  var 引数 = arguments;\\n';\n        // ローカル変数を生成\n        variableDeclarations += '  var __vars = {};\\n';\n        // 宣言済みの名前を保存\n        const varsDeclared = Array.from(this.varsSet.names.values());\n        let code = '';\n        // 引数をローカル変数に設定\n        const meta = (!name) ? node.meta : node.name.meta;\n        for (let i = 0; i < meta.varnames.length; i++) {\n            const word = meta.varnames[i];\n            if (this.warnUndefinedCalledUserFuncArgs === 0) {\n                code += `  ${this.varname(word)} = arguments[${i}];\\n`;\n            }\n            else if (name) {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('ユーザ関数(${name})の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            else {\n                code += `  ${this.varname(word)} = (function(a){if(a===undefined){__self.logger.warn('匿名関数の引数(${this.varname(word)})にundefinedが渡されました',{file:'${node.file}',line:${node.line}});};return a;})(arguments[${i}]);\\n`;\n            }\n            this.varsSet.names.add(word);\n        }\n        // 関数定義は、グローバル領域で。\n        if (name) {\n            this.usedFuncSet.add(name);\n            this.varslistSet[1].names.add(name);\n            if (this.nakoFuncList[name] === undefined) {\n                // 既に generate で作成済みのはず(念のため)\n                this.nakoFuncList[name] = {\n                    josi: node.name.meta.josi,\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    fn: () => { },\n                    type: 'func',\n                    asyncFn: false\n                };\n            }\n        }\n        // ブロックを解析\n        const oldUsedAsyncFn = this.usedAsyncFn;\n        this.usedAsyncFn = false || this.debugOption.useDebug;\n        const block = this._convGen(node.block, false);\n        code += block.split('\\n').map((line) => '  ' + line).join('\\n') + '\\n';\n        // 関数の最後に、変数「それ」をreturnするようにする\n        if (this.speedMode.invalidSore === 0) {\n            code += `  return (${this.varname('それ')});\\n`;\n        }\n        // パフォーマンスモニタ:ユーザ関数のinject\n        code += performanceMonitorInjectAtEnd;\n        // ブロックでasyncFnを使ったか\n        if (name && this.usedAsyncFn) {\n            this.nakoFuncList[name].asyncFn = true;\n        }\n        // 関数の末尾に、ローカル変数をPOP\n        // 関数内で定義されたローカル変数の宣言\n        for (const name of Array.from(this.varsSet.names.values())) {\n            if (!varsDeclared.includes(name)) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    variableDeclarations += `  var ${name};\\n`;\n                }\n            }\n        }\n        if (this.speedMode.invalidSore === 0) {\n            if (NakoGen.isValidIdentifier('それ')) {\n                variableDeclarations += '  var それ = \\'\\';\\n';\n            }\n            else {\n                variableDeclarations += `  ${this.varname('それ')} = '';`;\n            }\n        }\n        // usedAsyncFnの値に応じて関数定義の方法を変更\n        const tof = (this.usedAsyncFn) ? topOfFunctionAsync : topOfFunction;\n        // 関数コード全体を構築\n        const lineInfo = '  ' + this.convLineno(node, true, 1) + '\\n';\n        code = tof + performanceMonitorInjectAtStart + variableDeclarations + lineInfo + code + popStack;\n        code += endOfFunction;\n        // 名前があれば、関数を登録する\n        if (name) {\n            this.nakoFuncList[name].fn = code;\n            this.nakoFuncList[name].asyncFn = this.usedAsyncFn;\n            meta.asyncFn = this.usedAsyncFn;\n        }\n        this.usedAsyncFn = oldUsedAsyncFn; // 以前の値を戻す\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        if (name) {\n            this.__self.__varslist[1][name] = code;\n        }\n        return code;\n    }\n    convDefTest(node) {\n        const name = node.name.value;\n        let code = `__tests.push({ name: '${name}', f: () => {\\n`;\n        // ブロックを解析\n        const block = this._convGen(node.block, false);\n        code += `   ${block}\\n` +\n            '}});';\n        this.nakoTestFuncs[name] = {\n            josi: node.name.meta.josi,\n            fn: code,\n            type: 'test_func'\n        };\n        // ★この時点ではテストコードを生成しない★\n        // プログラム冒頭でコード生成時にテストの定義を行う\n        return '';\n    }\n    convDefFunc(node) {\n        // ※ [関数定義のメモ]\n        // ※ 関数の定義はプログラムの冒頭に移される。\n        // ※ そのため、生成されたコードはここでは返さない\n        // ※ registerFunction を参照\n        if (!node.name) {\n            return '';\n        }\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            const key = this._convGen(e.key, true);\n            const val = this._convGen(e.value, true);\n            return `${key}:${val}`;\n        });\n        return '{' + codelist.join(',') + '}';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        const codelist = list.map((e) => {\n            return this._convGen(e, true);\n        });\n        return '[' + codelist.join(',') + ']';\n    }\n    convRefArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index;\n        let code = name;\n        if (!list) {\n            return code;\n        }\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        return code;\n    }\n    convLetArray(node) {\n        const name = this._convGen(node.name, true);\n        const list = node.index || [];\n        let codeInit = '';\n        let code = name;\n        let codeArray = '';\n        // codeInit?\n        if (node.checkInit) {\n            const arrayDefCode = '[0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0]';\n            codeInit += `\\n/*配列初期化*/if (!(${name} instanceof Array)) { ${name} = ${arrayDefCode}; /*console.log('初期化:${name}')*/ };`;\n            for (let i = 0; i < list.length - 1; i++) {\n                const idx = this._convGen(list[i], true);\n                codeArray += `[${idx}]`;\n                codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; };`;\n                // codeInit += `\\n/*配列初期化${i}*/if (!(${name}${codeArray} instanceof Array)) { ${name}${codeArray} = ${arrayDefCode}; console.log('初期化:${i}:${name}${codeArray}',JSON.stringify(${name})) }; `\n            }\n            codeInit += '\\n';\n        }\n        // array\n        for (let i = 0; i < list.length; i++) {\n            const idx = this._convGen(list[i], true);\n            code += '[' + idx + ']';\n        }\n        // value\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        code += ' = ' + value + ';\\n';\n        // generate code\n        const src = this.convLineno(node, false) + codeInit + code;\n        return src;\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value; // todo: Forの最初のパラメータが Token か Astか確認\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const idLoop = this.loopId++;\n        const varI = `$nako_i${idLoop}`;\n        // ループ条件を確認\n        const kara = this._convGen(node.from, true);\n        const made = this._convGen(node.to, true);\n        const flagDown = node.flagDown;\n        let inc = '1';\n        if (node.inc && node.inc !== 'null') {\n            inc = this._convGen(node.inc, true);\n        }\n        // ループ内のブロック内容を得る\n        const block = this.convGenLoop(node.block);\n        // ループ条件を変数に入れる用\n        const varFrom = `$nako_from${idLoop}`;\n        const varTo = `$nako_to${idLoop}`;\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `\\n//[FOR id=${idLoop}]\\n` +\n            `const ${varFrom} = ${kara};\\n` +\n            `const ${varTo} = ${made};\\n` +\n            `if (${varFrom} <= ${varTo}) { // up\\n` +\n            `  for (let ${varI} = ${varFrom}; ${varI} <= ${varTo}; ${varI}+= ${inc}) {\\n` +\n            `    ${sorePrefex}${word} = ${varI};\\n` +\n            `    ${block}\\n` +\n            '  };\\n' +\n            '} else { // down\\n' +\n            `  if (${flagDown}) {` +\n            `    for (let ${varI} = ${varFrom}; ${varI} >= ${varTo}; ${varI}-= ${inc}) {\\n` +\n            `      ${sorePrefex}${word} = ${varI};` + '\\n' +\n            `      ${block}\\n` +\n            '    }\\n' +\n            '  };\\n' +\n            `};\\n//[/FOR id=${idLoop}]\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convForeach(node) {\n        let target;\n        if (node.target === null) {\n            if (this.speedMode.invalidSore === 0) {\n                target = this.varname('それ');\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n            }\n        }\n        else {\n            target = this._convGen(node.target, true);\n        }\n        // blockより早く変数を定義する必要がある\n        let nameS = '__v0[\"対象\"]';\n        if (node.name) {\n            nameS = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        const block = this.convGenLoop(node.block);\n        const id = this.loopId++;\n        const key = '__v0[\"対象キー\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_foreach_v${id}=${target};\\n` +\n            `for (let $nako_i${id} in $nako_foreach_v${id})` + '{\\n' +\n            `  if ($nako_foreach_v${id}.hasOwnProperty($nako_i${id})) {\\n` +\n            `    ${nameS} = ${sorePrefex}$nako_foreach_v${id}[$nako_i${id}];` + '\\n' +\n            `    ${key} = $nako_i${id};\\n` +\n            `    ${block}\\n` +\n            '  }\\n' +\n            '};\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convRepeatTimes(node) {\n        const id = this.loopId++;\n        const value = this._convGen(node.value, true);\n        const block = this.convGenLoop(node.block);\n        const kaisu = '__v0[\"回数\"]';\n        let sorePrefex = '';\n        if (this.speedMode.invalidSore === 0) {\n            sorePrefex = `${this.varname('それ')} = `;\n        }\n        const code = `let $nako_times_v${id} = ${value};\\n` +\n            `for(var $nako_i${id} = 1; $nako_i${id} <= $nako_times_v${id}; $nako_i${id}++)` + '{\\n' +\n            `  ${sorePrefex}${kaisu} = $nako_i${id};` + '\\n' +\n            '  ' + block + '\\n}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convSpeedMode(node, isExpression) {\n        if (!node.options) {\n            return '';\n        }\n        const prev = { ...this.speedMode };\n        if (node.options['行番号無し']) {\n            this.speedMode.lineNumbers++;\n        }\n        if (node.options['暗黙の型変換無し']) {\n            this.speedMode.implicitTypeCasting++;\n        }\n        if (node.options['強制ピュア']) {\n            this.speedMode.forcePure++;\n        }\n        if (node.options['それ無効']) {\n            this.speedMode.invalidSore++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.speedMode = prev;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (!node.options) {\n            return '';\n        }\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        try {\n            return this._convGen(node.block, isExpression);\n        }\n        finally {\n            this.performanceMonitor = prev;\n        }\n    }\n    convWhile(node) {\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = `while (${cond})` + '{\\n' +\n            `  ${block}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convAtohantei(node) {\n        const id = this.loopId++;\n        const varId = `$nako_i${id}`;\n        const cond = this._convGen(node.cond, true);\n        const block = this.convGenLoop(node.block);\n        const code = 'for(;;) {\\n' +\n            `  ${block}\\n` +\n            `  let ${varId} = ${cond};\\n` +\n            `  if (${varId}) { continue } else { break }\\n` +\n            '}\\n\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convSwitch(node) {\n        const value = this._convGen(node.value, true);\n        const cases = node.cases || [];\n        let body = '';\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            const cblock = this.convGenLoop(cases[i][1]);\n            if (cvalue.type === '違えば') {\n                body += '  default:\\n';\n            }\n            else {\n                const cvalueCode = this._convGen(cvalue, true);\n                body += `  case ${cvalueCode}:\\n`;\n            }\n            body += `    ${cblock}\\n` +\n                '    break\\n';\n        }\n        const code = `switch (${value})` + '{\\n' +\n            `${body}` + '\\n' +\n            '}\\n';\n        return this.convLineno(node, false) + code;\n    }\n    convIf(node) {\n        const expr = this._convGen(node.expr, true);\n        const block = this._convGen(node.block, false);\n        const falseBlock = (node.false_block === null)\n            ? ''\n            : 'else {' + this._convGen(node.false_block, false) + '};\\n';\n        return this.convLineno(node, false) +\n            `if (${expr}) {\\n  ${block}\\n}` + falseBlock + ';\\n';\n    }\n    convTikuji(node) {\n        // #1164 により「逐次実行」構文は近いうちに廃止する\n        const pid = this.loopId++;\n        // gen tikuji blocks\n        const curName = `__tikuji${pid}`;\n        let code = `const ${curName} = []\\n`;\n        const blocks = (node.blocks) ? node.blocks : [];\n        for (let i = 0; i < blocks.length; i++) {\n            const block = this._convGen(blocks[i], false).replace(/\\s+$/, '') + '\\n';\n            const blockLineNo = this.convLineno(blocks[i], true);\n            const blockCode = `${curName}.push(async function(resolve, reject) {\\n` +\n                '  __self.resolve = resolve;\\n' +\n                '  __self.reject = reject;\\n' +\n                '  __self.resolveCount = 0;\\n' +\n                `  ${blockLineNo}\\n` +\n                `  ${block}` +\n                '  if (__self.resolveCount === 0) resolve();\\n' +\n                // eslint-disable-next-line no-template-curly-in-string\n                '}); // end of tikuji__${pid}[{$i}]\\n';\n            code += blockCode;\n        }\n        code += `// end of ${curName} \\n`;\n        // gen error block\n        let errorCode = `  ${curName}.splice(0);\\n` + // clear\n            '  __v0[\"エラーメッセージ\"]=errMsg;\\n';\n        if (node.errorBlock != null) {\n            const errBlock = this._convGen(node.errorBlock, false).replace(/\\s+$/, '') + '\\n';\n            errorCode += errBlock;\n        }\n        code += `const ${curName}__reject = function(errMsg){\\n${errorCode}};\\n`;\n        // gen run block\n        code += '__self.resolve = undefined;\\n';\n        code += `const ${curName}__resolve = function(){\\n`;\n        code += '  setTimeout(async function(){\\n';\n        code += `    if (${curName}.length == 0) {return}\\n`;\n        code += `    const f = ${curName}.shift()\\n`;\n        code += `    await f(${curName}__resolve, ${curName}__reject);\\n`;\n        code += '  }, 0);\\n';\n        code += '};\\n';\n        code += `${curName}__resolve()\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    convFuncGetArgsCalcType(_funcName, _func, node) {\n        const args = [];\n        const opts = {};\n        const nodeArgs = (node.args) ? node.args : [];\n        for (let i = 0; i < nodeArgs.length; i++) {\n            const arg = nodeArgs[i];\n            if (i === 0 && arg === null && this.speedMode.invalidSore === 0) {\n                args.push(this.varname('それ'));\n                opts.sore = true;\n            }\n            else {\n                args.push(this._convGen(arg, true));\n            }\n        }\n        return [args, opts];\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convCallFunc(node, isExpression) {\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        // どの関数を呼び出すのか関数を特定する\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (!func) {\n                throw new Error(`[System Error] 関数「${funcName}」NakoCompiler.nakoFuncList の不整合があります。`);\n            }\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsInfo = this.convFuncGetArgsCalcType(funcName, func, node);\n        const args = argsInfo[0];\n        const argsOpts = argsInfo[1];\n        // function\n        this.usedFuncSet.add(funcName);\n        if (funcName === '名前空間設定') {\n            return `\\n// --- 名前空間(${args[0]}) ---\\n__varslist[0]['名前空間設定'](${args[0]}, __self);__self.__modName=${args[0]};\\n`;\n        }\n        else if (funcName === 'プラグイン名設定') {\n            return `\\n__varslist[0]['プラグイン名設定'](${args[0]}, __self);\\n`;\n        }\n        // 関数呼び出しで、引数の末尾にthisを追加する-システム情報を参照するため\n        args.push('__self');\n        let funcDef = 'function';\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 関数内 (__varslist.length > 3) からプラグイン関数 (res.i === 0) を呼び出すとき、 そのプラグイン関数がpureでなければ\n        // 呼び出しの直前に全てのローカル変数をthis.__localsに入れる。\n        if (res.i === 0 && this.varslistSet.length > 3 && func.pure !== true && this.speedMode.forcePure === 0) { // undefinedはfalseとみなす\n            // 展開されたローカル変数の列挙\n            const localVars = [];\n            for (const name of Array.from(this.varsSet.names.values())) {\n                if (NakoGen.isValidIdentifier(name)) {\n                    localVars.push({ str: JSON.stringify(name), js: this.varname(name) });\n                }\n            }\n            // --- 実行前 ---\n            // 全ての展開されていないローカル変数を __self.__locals にコピーする\n            funcBegin += '__self.__locals = __vars;\\n';\n            // 全ての展開されたローカル変数を __self.__locals に保存する\n            for (const v of localVars) {\n                funcBegin += `__self.__locals[${v.str}] = ${v.js};\\n`;\n            }\n            // --- 実行後 ---\n            // 全ての展開されたローカル変数を __self.__locals から受け取る\n            // 「それ」は関数の実行結果を受け取るために使うためスキップ。\n            for (const v of localVars) {\n                if (v.js !== 'それ') {\n                    funcEnd += `${v.js} = __self.__locals[${v.str}];\\n`;\n                }\n            }\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        const indent = (text, n) => {\n            let result = '';\n            for (const line of text.split('\\n')) {\n                if (line !== '') {\n                    result += '  '.repeat(n) + line + '\\n';\n                }\n            }\n            return result;\n        };\n        // 引数チェックの例外 #1260\n        const noCheckFuncs = { 'TYPEOF': true, '変数型確認': true };\n        // 関数呼び出しコードの構築\n        let argsCode;\n        if ((this.warnUndefinedCallingUserFunc === 0 && res.i !== 0) || (this.warnUndefinedCallingSystemFunc === 0 && res.i === 0)) {\n            argsCode = args.join(',');\n        }\n        else {\n            const argsA = [];\n            args.forEach((arg) => {\n                if (arg === '__self' || noCheckFuncs[funcName] === true) { // #1260\n                    argsA.push(`${arg}`);\n                }\n                else {\n                    // 引数のundefinedチェックのコードを入れる\n                    const poolIndex = this.constPools.length;\n                    if (res.i === 0) {\n                        this.constPools.push({\n                            msg: `命令『${funcName}』の引数にundefinedを渡しています。`,\n                            file: node.file,\n                            line: node.line\n                        });\n                    }\n                    else {\n                        this.constPools.push({\n                            msg: `ユーザ関数『『${funcName}』の引数にundefinedを渡しています。`,\n                            file: node.file,\n                            line: node.line\n                        });\n                    }\n                    // argが空になる対策 #1315\n                    const argStr = (arg === '') ? '\"\"' : arg;\n                    argsA.push(`(__self.chk(${argStr}, ${poolIndex}))`);\n                }\n            });\n            argsCode = argsA.join(', ');\n        }\n        let funcCall = `${res.js}(${argsCode})`;\n        if (func.asyncFn) {\n            funcDef = `async ${funcDef}`;\n            funcCall = `await ${funcCall}`;\n            this.numAsyncFn++;\n            this.usedAsyncFn = true;\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunctionBody !== 0) {\n            let key = funcName;\n            if (!key) {\n                if (typeof this.performanceMonitor.mumeiId === 'undefined') {\n                    this.performanceMonitor.mumeiId = 0;\n                }\n                this.performanceMonitor.mumeiId++;\n                key = `anous_${this.performanceMonitor.mumeiId}`;\n            }\n            funcCall = `(${funcDef} (key, type) {\\n` +\n                'const sbf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + funcCall + ';\\n' +\n                '} finally {\\n' +\n                'const sbl_time = performance.now() * 1000 - sbf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sbl_time, min_usec: sbl_time, max_usec: sbl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sbl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sbl_time){__self.__performance_monitor[key].min_usec=sbl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sbl_time){__self.__performance_monitor[key].max_usec=sbl_time;}\\n' +\n                `}}})('${funcName}_body', 'sysbody')\\n`;\n        }\n        let code = '';\n        if (func.return_none) {\n            // 戻り値のない関数の場合\n            if (funcEnd === '') {\n                if (funcBegin === '') {\n                    code = `${funcCall};\\n`;\n                }\n                else {\n                    code = `${funcBegin} ${funcCall};\\n`;\n                }\n            }\n            else {\n                code = `${funcBegin}try {\\n${indent(funcCall, 1)};\\n} finally {\\n${indent(funcEnd, 1)}}\\n`;\n            }\n        }\n        else {\n            // 戻り値のある関数の場合\n            let sorePrefex = '';\n            if (this.speedMode.invalidSore === 0) {\n                sorePrefex = `${this.varname('それ')} = `;\n            }\n            if (funcBegin === '' && funcEnd === '') {\n                code = `(${sorePrefex}${funcCall})`;\n            }\n            else {\n                if (funcEnd === '') {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin};\\nreturn ${sorePrefex} ${funcCall}`, 1)}}).call(this)`;\n                }\n                else {\n                    code = `(${funcDef}(){\\n${indent(`${funcBegin}try {\\n${indent(`return ${sorePrefex}${funcCall};`, 1)}\\n} finally {\\n${indent(funcEnd, 1)}}`, 1)}}).call(this)`;\n                }\n            }\n            // ...して\n            if (node.josi === 'して' || (node.josi === '' && !isExpression)) {\n                code += ';\\n';\n            }\n        }\n        if (res.i === 0 && this.performanceMonitor.systemFunction !== 0) {\n            code = '(function (key, type) {\\n' +\n                'const sf_start = performance.now() * 1000;\\n' +\n                'try {\\n' +\n                'return ' + code + ';\\n' +\n                '} finally {\\n' +\n                'const sl_time = performance.now() * 1000 - sf_start;\\n' +\n                'if (!__self.__performance_monitor) {\\n' +\n                '__self.__performance_monitor={};\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else if (!__self.__performance_monitor[key]) {\\n' +\n                '__self.__performance_monitor[key] = { called:1, totel_usec: sl_time, min_usec: sl_time, max_usec: sl_time, type: type };\\n' +\n                '} else {\\n' +\n                '__self.__performance_monitor[key].called++;\\n' +\n                '__self.__performance_monitor[key].totel_usec+=sl_time;\\n' +\n                'if(__self.__performance_monitor[key].min_usec>sl_time){__self.__performance_monitor[key].min_usec=sl_time;}\\n' +\n                'if(__self.__performance_monitor[key].max_usec<sl_time){__self.__performance_monitor[key].max_usec=sl_time;}\\n' +\n                `}}})('${funcName}_sys', 'system')\\n`;\n        }\n        return code;\n    }\n    convRenbun(node) {\n        const right = this._convGen(node.right, true);\n        const left = this._convGen(node.left, false);\n        this.numAsyncFn++;\n        this.usedAsyncFn = true;\n        return `/*連文*/await (async function(){ ${left}; return ${right} }).call(this)`;\n    }\n    convOp(node) {\n        // トークン名からJS演算子への変換 - 単純な変換が可能なものをここで定義\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        let op = node.operator || ''; // 演算子\n        let right = this._convGen(node.right, true);\n        let left = this._convGen(node.left, true);\n        if (op === '+' && this.speedMode.implicitTypeCasting === 0) {\n            if (node.left && node.left.type !== 'number') {\n                left = `parseFloat(${left})`;\n            }\n            if (node.right && node.right.type !== 'number') {\n                right = `parseFloat(${right})`;\n            }\n        }\n        // 階乗\n        if (op === '^' || op === '**') {\n            return `(Math.pow(${left}, ${right}))`;\n        }\n        // 整数の割り算 #1152\n        if (op === '÷÷') {\n            return `(Math.floor(${left} / ${right}))`;\n        }\n        // 一般的なオペレータに変換\n        if (OP_TBL[op]) {\n            op = OP_TBL[op];\n        }\n        //\n        return `(${left} ${op} ${right})`;\n    }\n    convInc(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('加算する先の変数名がありません。', node);\n        }\n        // 配列への代入か(core#86)\n        let code = '';\n        let jsName;\n        const nodeName = node.name;\n        if (nodeName.type === '配列参照') {\n            jsName = this.convRefArray(nodeName);\n        }\n        else {\n            // 変数名\n            const name = nodeName.value;\n            let res = this.findVar(name);\n            if (res === null) {\n                this.varsSet.names.add(name);\n                res = this.findVar(name);\n                if (!res) {\n                    throw new Error('『増』または『減』で変数が見当たりません。');\n                }\n            }\n            jsName = res.js;\n        }\n        // 自動初期化するか\n        code += `if (typeof(${jsName}) === 'undefined') { ${jsName} = 0; }`;\n        code += `${jsName} += ${value}`;\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convLet(node) {\n        // もし値が省略されていたら、変数「それ」に代入する\n        let value = null;\n        if (this.speedMode.invalidSore === 0) {\n            value = this.varname('それ');\n        }\n        if (node.value) {\n            value = this._convGen(node.value, true);\n        }\n        if (value == null) {\n            throw NakoSyntaxError.fromNode('代入する先の変数名がありません。', node);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        let code = '';\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)} = ${value};`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js} = ${value};`;\n        }\n        return ';' + this.convLineno(node, false) + code + '\\n';\n    }\n    convDefLocalVar(node) {\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        //\n        this.varsSet.names.add(name);\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        const code = `${this.varname(name)}=${value};\\n`;\n        return this.convLineno(node, false) + code;\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        let code = '';\n        const vtype = node.vartype; // 変数 or 定数\n        const value = (node.value === null) ? 'null' : this._convGen(node.value, true);\n        this.loopId++;\n        const varI = `$nako_i${this.loopId}`;\n        code += `${varI}=${value}\\n`;\n        code += `if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }\\n`;\n        const names = (node.names) ? node.names : [];\n        for (let i = 0; i < names.length; i++) {\n            const nameObj = names[i];\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                // 複数変数文では、二重定義も許容する #1027\n                // throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node)\n            }\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            code += `${vname}=${varI}[${i}];\\n`;\n        }\n        return this.convLineno(node, false) + code;\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            const rf = (a, name) => {\n                return '\"+' + this.genVar(name, node) + '+\"';\n            };\n            value = value.replace(/\\{(.+?)\\}/g, rf);\n            value = value.replace(/｛(.+?)｝/g, rf);\n        }\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const block = this._convGen(node.block, false);\n        const errBlock = this._convGen(node.errBlock, false);\n        return this.convLineno(node, false) +\n            `try {\\n${block}\\n} catch (e) {\\n` +\n            '  __v0[\"エラーメッセージ\"] = e.message;\\n' +\n            ';\\n' +\n            `${errBlock}}\\n`;\n    }\n    getUsedFuncSet() {\n        return this.usedFuncSet;\n    }\n    getPluginInitCode() {\n        // プラグインの初期化関数を実行する\n        let code = '';\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'l0:プラグインの初期化\\';\\n' + pluginCode;\n        }\n        return code;\n    }\n}\n/**\n * @param com\n * @param ast\n * @param opt\n */\nexport function generateJS(com, ast, opt) {\n    // NakoGenのインスタンスを作成\n    const gen = new NakoGen(com);\n    // ※ [関数定義に関するコード生成のヒント]\n    // ※ 関数の名前だけを(1)で登録して、(2)で実際に関数のコードを生成する。\n    // ※ ただし(2)では生成するだけなので、(3)でプログラム冒頭に関数定義のコードを記述する。\n    // この順番を変えることはできない (グローバル変数が認識できなくなったり、関数定義のタイミングがずれる)\n    // (1) ユーザー定義関数をシステムに登録する\n    gen.registerFunction(ast);\n    // (2) JSコードを生成する\n    let js = gen.convGen(ast, opt);\n    // (3) JSコードを実行するための事前ヘッダ部分の生成\n    const jsInit = gen.getDefFuncCode(com, opt);\n    // ランダムな関数名を生成\n    const funcID = '' + (new Date()).getTime() + '_' + Math.floor(0xFFFFFFFF * Math.random());\n    // テストの実行\n    if (js && opt.isTest) {\n        js += '\\n__self._runTests(__tests);\\n';\n    }\n    // async method\n    if (gen.numAsyncFn > 0 || gen.debugOption.useDebug) {\n        const asyncMain = '__eval_nako3async_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::async id=\"${funcID}\" times=\"${gen.numAsyncFn}\">\nasync function ${asyncMain}(self) {\n${jsInit}\n${js}\n} // end of ${asyncMain}\n${asyncMain}.call(self, self)\n.then(() => {\n  // ok\n})\n.catch(err => {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  // send errors to logger\n  let rterr = self.logger.runtimeError(err, self.__v0.line)\n  self.logger.error(rterr)\n})\n// </nadesiko3::gen::async id=\"${funcID}\">\n// --------------------------------------------------\n`;\n    }\n    else {\n        const syncMain = '__eval_nako3sync_' + funcID + '__';\n        js = `\n// --------------------------------------------------\n// <nadesiko3::gen::syncMode>\nfunction ${syncMain}(self) {\ntry {\n  ${jsInit}\n  ${js}\n} catch (err) {\n  if (err.message === '__終わる__') { return }\n  self.numFailures++\n  throw self.logger.runtimeError(err, self.__v0.line)\n}\n} // end of ${syncMain}\n${syncMain}(self)\n// </nadesiko3::gen::syncMode>\n// --------------------------------------------------\n`;\n    }\n    // デバッグメッセージ\n    com.getLogger().trace('--- generate ---\\n' + js);\n    let codeImportFiles = '';\n    const importNames = [];\n    for (const f of opt.importFiles) {\n        if (f === 'nako_errors.mjs') {\n            continue;\n        }\n        const ff = 'nako3runtime_' + f.replace(/\\.(js|mjs)$/, '').replace(/[^a-zA-Z0-9_]/g, '_');\n        importNames.push(ff);\n        codeImportFiles += `import ${ff} from './nako3runtime/${f}'\\n`;\n    }\n    const standaloneJSCode = `\\\n// <standaloneCode>\nimport path from 'path'\nimport { NakoRuntimeError } from './nako3runtime/nako_errors.mjs'\n${codeImportFiles}\nconst self = {}\nself.coreVersion = '${com.coreVersion}'\nself.version = '${com.version}'\nself.logger = {\n  error: (message) => { console.error(message) },\n  warn: (message) => { console.warn(message) },\n  send: (level, message) => { console.log(message) },\n};\nself.__varslist = [{}, {}, {}]\nself.__v0 = self.__varslist[0]\nself.initFuncList = []\nself.clearFuncList = []\n// Copy module functions\nfor (const mod of [${importNames.join(', ')}]) {\n  for (const funcName in mod) {\n    if (funcName === '初期化') {\n      self.initFuncList.push(mod[funcName].fn)\n      continue\n    }\n    if (funcName === '!クリア') {\n      self.clearFuncList.push(mod[funcName].fn)\n      continue\n    }\n    self.__varslist[0][funcName] = mod[funcName].fn\n  }\n}\nself.__vars = self.__varslist[2];\nself.__module = {};\nself.__locals = {};\nself.__genMode = 'sync';\n\n// プラグインの初期化コードを実行\nself.initFuncList.map(f => f(self))\n\ntry {\n${opt.codeStandalone}\n// <JS:standalone>\n${js}\n// </JS:standalone>\n  // standaloneCodeでは、即時プラグインのクリアコードを実行\n  self.clearFuncList.map(f => f(self))\n} catch (err) {\n  self.logger.error(err);\n  throw err;\n}\n// </standaloneCode>\n`;\n    // ---\n    const initCode = gen.getPluginInitCode();\n    const runtimeEnvCode = `\n// <runtimeEnvCode>\nconst self = this\n${opt.codeEnv}\n${jsInit}\n${initCode}\n${js}\n// </runtimeEnvCode>\n`;\n    return {\n        // なでしこの実行環境ありの場合(thisが有効)\n        runtimeEnv: runtimeEnvCode,\n        // JavaScript単体で動かす場合\n        standalone: standaloneJSCode,\n        // コード生成に使ったNakoGenのインスタンス\n        gen\n    };\n}\n","/**\n * file: nako_gen_async\n * パーサーが生成した中間オブジェクトを実際のJavaScriptのコードに変換する。\n * なお、扱いやすさ優先で、なでしこの一文を一つの関数として生成し、非同期実行する。\n */\nimport { NakoSyntaxError, NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport nakoVersion from './nako_core_version.mjs';\nimport { NakoGen } from './nako_gen.mjs';\n/**\n * なでしこのインタプリタコード\n */\nconst NakoCodeNop = 'NOP';\nconst NakoCodeLabel = 'LBL';\nconst NakoCodeEOL = 'EOL';\nconst NakoCodeJump = 'JMP'; // JUMP addr\nconst NakoCodeJumpIfTrue = 'JMP_T'; // pop and jump addr\nconst NakoCodeJumpIfFalse = 'JMP_F'; // pop and jump addr\nconst NakoCodeCall = 'CALL'; // call addr\nconst NakoCodeCallObj = 'CALL_OBJ'; // call addr\nconst NakoCodeReturn = 'RET';\nconst NakoCodeTry = 'TRY';\nconst NakoCodeCode = 'CODE';\nconst NakoCodeTagIsFuncpoint = 0x0F;\n/**\n * なでしこのインタプリタが用いる簡易コードを表現するクラス\n */\nclass NakoCode {\n    /**\n     * @param type\n     * @param value\n     */\n    constructor(type, value) {\n        /** Codeのタイプ\n         * @type {string}\n         */\n        this.type = type;\n        /** Codeの値 / ラベルならラベル名\n         * @type {string}\n         */\n        this.value = value;\n        /** ラベルならジャンプ先\n         * @type {number}\n         */\n        this.no = -1;\n        /** タグ\n         * @type {number}\n         */\n        this.tag = 0;\n    }\n}\n/**\n * 構文木からJSのコードを生成するクラス\n */\nexport class NakoGenASync {\n    /**\n     * @param com コンパイラのインスタンス\n     */\n    constructor(com) {\n        this.com = com;\n        /**\n         * 出力するJavaScriptコードのヘッダー部分で定義する必要のある関数。fnはjsのコード。\n         * プラグイン関数は含まれない。\n         */\n        this.nakoFuncList = { ...com.getNakoFuncList() };\n        /**\n         * なでしこで定義したテストの一覧\n         * @type {Record<string, { josi: string[][], fn: string, type: 'test_func' }>}\n         */\n        this.nakoTestList = {};\n        /**\n         * プログラム内で参照された関数のリスト。プラグインの命令を含む。\n         * JavaScript単体で実行するとき、このリストにある関数の定義をJavaScriptコードの先頭に付け足す。\n         * @type {Set<string>}\n         */\n        this.usedFuncSet = new Set();\n        /**\n         * ループ時の一時変数が被らないようにIDで管理\n         * @type {number}\n         */\n        this.loopId = 1;\n        /**\n         * 変換中の処理が、ループの中かどうかを判定する\n         * @type {boolean}\n         */\n        this.flagLoop = false;\n        /**\n         * 変換後のコード管理番号\n         * @type {number}\n         */\n        this.codeId = 0;\n        /**\n         * 変換後のコードを保持する配列\n         * @type {Array<NakoCode>}\n         */\n        this.codeArray = [];\n        /** @type {NakoCode | null} */\n        this.labelContinue = null;\n        /** @type {NakoCode | null} */\n        this.labelBreak = null;\n        /**\n         * ジャンプ先を表現するラベル\n         * @type {Object<string, number>}\n         */\n        this.labels = {};\n        // コンパイラのインスタンス\n        this.__self = com;\n        /**\n         * コードジェネレータの種類\n         * @type {string}\n         */\n        this.genMode = '非同期モード';\n        /**\n         * 行番号とファイル名が分かるときは `l123:main.nako3`、行番号だけ分かるときは `l123`、そうでなければ任意の文字列。\n         * @type {string | null}\n         */\n        this.lastLineNo = null;\n        /**\n         * スタック\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }[]}\n         */\n        this.varslistSet = com.__varslist.map((v) => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        /**\n         * スタックトップ\n         * @type {{ isFunction: boolean, names: Set<string>, readonly: Set<string> }}\n         */\n        this.varsSet = { isFunction: false, names: new Set(), readonly: new Set() };\n        this.varslistSet[2] = this.varsSet;\n        // 1以上のとき高速化する。\n        // 実行速度優先ブロック内で1増える。\n        this.speedMode = {\n            lineNumbers: 0,\n            implicitTypeCasting: 0,\n            invalidSore: 0,\n            forcePure: 0 // 全てのシステム命令をpureとして扱う。命令からローカル変数への参照が出来なくなる。\n        };\n        // 1以上のとき測定をinjectする。\n        // パフォーマンスモニタのブロック内で1増える。\n        this.performanceMonitor = {\n            userFunction: 0,\n            systemFunction: 0,\n            systemFunctionBody: 0 // システム関数(呼び出しコードを除く)\n        };\n    }\n    /**\n     * @param com\n     * @param {Ast} ast\n     * @param {boolean | string} isTest 文字列なら1つのテストだけを実行する\n     */\n    static generate(com, ast, isTest) {\n        const gen = new NakoGenASync(com);\n        // ユーザー定義関数をシステムに登録する\n        gen.registerFunction(ast);\n        // JSコードを生成する\n        let js = gen.convGen(ast, !!isTest);\n        // JSコードを実行するための事前ヘッダ部分の生成\n        js = gen.getDefFuncCode(isTest) + js;\n        com.getLogger().trace('--- generate(非同期モード) ---\\n' + js);\n        // テストの実行\n        if (js && isTest) {\n            js += '\\n__self._runTests(__tests);\\n';\n        }\n        return {\n            // なでしこの実行環境ありの場合\n            runtimeEnv: js,\n            // JavaScript単体で動かす場合\n            standalone: `\\\nconst nakoVersion = ${JSON.stringify(nakoVersion)};\n${NakoError.toString()}\n${NakoRuntimeError.toString()}\nthis.logger = {\n  error(message) { console.error(message) },\n  send(level, message) { console.log(message) },\n};\nthis.__varslist = [{}, {}, {}];\nthis.__vars = this.__varslist[2];\nthis.__module = {};\nthis.__locals = {};\nthis.__labels = {};\nthis.__code = [];\nthis.__callstack = [];\nthis.__stack = [];\nthis.__genMode = '非同期モード';\ntry {\n  ${gen.getVarsCode()}\n  ${js}\n} catch (err) {\n  if (!(err instanceof NakoRuntimeError)) {\n    err = new NakoRuntimeError(err, this.__varslist[0].line);\n  }\n  this.logger.error(err);\n  throw err;\n}`,\n            gen // コード生成に使ったNakoGenのインスタンス\n        };\n    }\n    /**\n     * @param {import(\"./nako3\").Ast} node\n     * @param {boolean} forceUpdate\n     */\n    convLineno(node, forceUpdate) {\n        if (this.speedMode.lineNumbers > 0) {\n            return '';\n        }\n        /** @type {string} */\n        let lineNo;\n        if (typeof node.line !== 'number') {\n            lineNo = 'unknown';\n        }\n        else if (typeof node.file !== 'string') {\n            lineNo = `l${node.line}`;\n        }\n        else {\n            lineNo = `l${node.line}:${node.file}`;\n        }\n        // 強制的に行番号をアップデートするか\n        if (!forceUpdate) {\n            if (lineNo === this.lastLineNo) {\n                return '';\n            }\n            this.lastLineNo = lineNo;\n        }\n        // 例: __v0.line='l1:main.nako3'\n        return `__v0.line=${JSON.stringify(lineNo)};`;\n    }\n    /**\n     * ローカル変数のJavaScriptコードを生成する。\n     * 基本的に取得のために利用\n     * @param {string} name\n     */\n    varname(name) {\n        const keys = JSON.stringify(name);\n        return `sys.__vars[${keys}]`;\n    }\n    /**\n     * プログラムの実行に必要な関数を書き出す(システム領域)\n     * @returns {string}\n     */\n    getVarsCode() {\n        let code = '';\n        // プログラム中で使った関数を列挙して書き出す\n        for (const key of Array.from(this.usedFuncSet.values())) {\n            const f = this.__self.__varslist[0][key];\n            const name = `this.__varslist[0][\"${key}\"]`;\n            if (typeof (f) === 'function') {\n                code += name + '=' + f.toString() + ';\\n';\n            }\n            else {\n                code += name + '=' + JSON.stringify(f) + ';\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プログラムの実行に必要な関数定義を書き出す(グローバル領域)\n     * convGenの結果を利用するため、convGenの後に呼び出すこと。\n     * @param {boolean | string} isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @returns {string}\n     */\n    getDefFuncCode(isTest) {\n        let code = '';\n        // よく使う変数のショートカット\n        code += 'const __self = this.__self = this;\\n';\n        code += 'const __varslist = this.__varslist;\\n';\n        code += 'const __module = this.__module;\\n';\n        code += 'const __v0 = this.__v0 = this.__varslist[0];\\n';\n        code += 'const __v1 = this.__v1 = this.__varslist[1];\\n';\n        code += 'const __vars = this.__vars = this.__varslist[2];\\n';\n        code += 'const __code = this.__code;\\n';\n        // なでしこの関数定義を行う\n        let nakoFuncCode = '';\n        for (const key in this.nakoFuncList) {\n            const f = this.nakoFuncList[key].fn;\n            nakoFuncCode += '' +\n                `//[DEF_FUNC name='${key}']\\n` +\n                `__v1[\"${key}\"]=${f};\\n;` +\n                `//[/DEF_FUNC name='${key}']\\n`;\n        }\n        if (nakoFuncCode !== '') {\n            code += '__v0.line=\\'関数の定義\\';\\n' + nakoFuncCode;\n        }\n        // プラグインの初期化関数を実行する\n        let pluginCode = '';\n        for (const name in this.__self.__module) {\n            const initkey = `!${name}:初期化`;\n            if (this.varslistSet[0].names.has(initkey)) {\n                this.usedFuncSet.add(`!${name}:初期化`);\n                pluginCode += `__v0[\"!${name}:初期化\"](__self);\\n`;\n            }\n        }\n        if (pluginCode !== '') {\n            code += '__v0.line=\\'プラグインの初期化\\';\\n' + pluginCode;\n        }\n        // テストの定義を行う\n        if (isTest) {\n            let testCode = 'const __tests = [];\\n';\n            for (const key in this.nakoTestList) {\n                if (isTest === true || (typeof isTest === 'string' && isTest === key)) {\n                    const f = this.nakoTestList[key].fn;\n                    testCode += `${f};\\n;`;\n                }\n            }\n            if (testCode !== '') {\n                code += '__v0.line=\\'テストの定義\\';\\n';\n                code += testCode + '\\n';\n            }\n        }\n        return code;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     */\n    addPlugin(po) {\n        return this.__self.addPlugin(po);\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param name オブジェクト名\n     * @param po 関数リスト\n     */\n    addPluginObject(name, po) {\n        this.__self.addPluginObject(name, po);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param path ファイルパス\n     * @param po 登録するオブジェクト\n     */\n    addPluginFile(objName, path, po) {\n        this.__self.addPluginFile(objName, path, po);\n    }\n    /**\n     * 関数を追加する\n     * @param key 関数名\n     * @param josi 助詞\n     * @param fn 関数\n     */\n    addFunc(key, josi, fn) {\n        this.__self.addFunc(key, josi, fn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.__self.getFunc(key);\n    }\n    /**\n     * 関数を先に登録してしまう\n     */\n    registerFunction(ast) {\n        if (ast.type !== 'block') {\n            throw NakoSyntaxError.fromNode('構文解析に失敗しています。構文は必ずblockが先頭になります', ast);\n        }\n        const registFunc = (node) => {\n            for (let i = 0; i < node.block.length; i++) {\n                const t = node.block[i];\n                if (t.type === 'def_func') {\n                    const name = t.name.value;\n                    this.usedFuncSet.add(name);\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    this.__self.__varslist[1][name] = function () { }; // 事前に適当な値を設定\n                    this.nakoFuncList[name] = {\n                        josi: t.name.meta.josi,\n                        fn: '',\n                        type: 'func'\n                    };\n                }\n                else if (t.type === 'speed_mode') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n                else if (t.type === 'performance_monitor') {\n                    if (t.block.type === 'block') {\n                        registFunc(t.block);\n                    }\n                    else {\n                        registFunc(t);\n                    }\n                }\n            }\n        };\n        registFunc(ast);\n        // __self.__varslistの変更を反映\n        const initialNames = new Set();\n        if (this.speedMode.invalidSore === 0) {\n            initialNames.add('それ');\n        }\n        this.varsSet = { isFunction: false, names: initialNames, readonly: new Set() };\n        this.varslistSet = this.__self.__varslist.map(v => ({ isFunction: false, names: new Set(Object.keys(v)), readonly: new Set() }));\n        this.varslistSet[2] = this.varsSet;\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isTest\n     */\n    convGen(node, isTest) {\n        // convert\n        this._convGen(node, true);\n        // ラベルアドレスの解決が必要なコード一覧\n        const needToFixAddr = new Set([\n            NakoCodeJump, NakoCodeJumpIfTrue, NakoCodeJumpIfFalse, NakoCodeCall, NakoCodeTry\n        ]);\n        // コードの最適化をするか?\n        const optimization = true;\n        let codes = this.codeArray;\n        //\n        if (optimization) {\n            // NOPを削除\n            codes = codes.filter((code) => {\n                return code.type !== NakoCodeNop;\n            });\n            // 未参照のラベルを探す - ただし関数呼び出しは削除しない\n            const usedLabels = new Set();\n            codes.forEach((code) => {\n                if (needToFixAddr.has(code.type)) {\n                    usedLabels.add(code.value);\n                }\n            });\n            // 未参照のラベルを削除\n            codes = codes.filter((code) => {\n                if (code.type !== NakoCodeLabel) {\n                    return true;\n                }\n                if (code.tag === NakoCodeTagIsFuncpoint) {\n                    return true;\n                }\n                return usedLabels.has(code.value);\n            });\n            // EOLが連続していたら削除する\n            let i = 0;\n            while (i < codes.length - 1) {\n                if (codes[i].type === NakoCodeEOL && codes[i + 1].type === NakoCodeEOL) {\n                    codes.splice(i + 1, 1);\n                    continue;\n                }\n                i++;\n            }\n            this.codeArray = codes;\n        }\n        // ラベルアドレスの解決\n        codes.forEach((code, index) => {\n            if (code.type === NakoCodeLabel) {\n                this.labels[code.value] = index;\n            }\n        });\n        codes.forEach((code) => {\n            if (needToFixAddr.has(code.type)) {\n                if (code.no < 0) {\n                    code.no = this.labels[code.value];\n                }\n            }\n        });\n        let result = '';\n        // コードの生成\n        codes.forEach((code, index) => {\n            switch (code.type) {\n                case NakoCodeNop:\n                    result += `case ${index}: break; // [NOP] ${code.value}\\n`;\n                    break;\n                case NakoCodeLabel:\n                    result += `case ${index}: break; // [LABEL] ${code.value}\\n`;\n                    break;\n                case NakoCodeEOL:\n                    result += `case ${index}: ${code.value}; break; // [EOL]\\n`;\n                    break;\n                case NakoCodeJump:\n                    result += `case ${index}: sys.nextIndex = ${code.no}; break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfTrue:\n                    result += `case ${index}: if (sys.__stack.pop()) { sys.nextIndex = ${code.no};} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeJumpIfFalse:\n                    result += `case ${index}: if (!sys.__stack.pop()) { sys.nextIndex = ${code.no}} break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeReturn:\n                    result += `case ${index}: sys.__return(sys); break;\\n`;\n                    break;\n                case NakoCodeCall:\n                    result += `case ${index}: sys.__call(${code.no}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeCallObj:\n                    result += `case ${index}: sys.__callObj('${code.value}', ${index}, sys); break; // ${code.value}\\n`;\n                    break;\n                case NakoCodeTry:\n                    result += `case ${index}: sys.tryIndex = ${code.no}; break; // TRY \\n`;\n                    break;\n                case NakoCodeCode:\n                    {\n                        // trim last\n                        const s = code.value.replace(/\\s+$/, '');\n                        result += `case ${index}: {\\n${s}\\n};break;\\n`;\n                        break;\n                    }\n                default:\n                    throw new Error('invalid code type');\n            }\n        });\n        result = `\n    //-------------------------\n    // main_code\n    this.__labels = ${JSON.stringify(this.labels)};\n    this.nextAsync = (sys) => {\n      if (sys.index >= sys.codeSize || sys.index < 0) {return}\n      const __v0 = sys.__v0\n      try {\n        sys.inLoop = true\n        while (sys.index < sys.codeSize && sys.index >= 0) {\n          // console.log('@@[run]', sys.index)\n          switch (sys.index) {\n            // --- CODE.BEGIN ---\n            ${result}\n            // --- CODE.END ---\n            default:\n              sys.inLoop = false\n              console.log(sys.index, sys.__stack)\n              throw new Error('Invalid sys.index:' + sys.index)\n              break\n          }\n          // check next\n          if (sys.nextIndex >= 0) {\n            sys.index = sys.nextIndex\n            sys.nextIndex = -1\n          } else {\n            sys.index++\n          }\n          if (sys.async) {\n            sys.__saveSysenv(sys)\n            sys.async = false\n            break\n          }\n        } // end of while\n        sys.inLoop = false\n      } catch (e) {\n        sys.__errorAsync(e, sys)\n      }\n    }\n    this.__errorAsync = (e, sys) => { // エラーが起きた時呼び出す\n      sys.__v0[\"エラーメッセージ\"] = e.message;\n      if (e.message == '__終わる__') {\n        sys.__stopAsync(sys)\n        return\n      }\n      if (sys.tryIndex >= 0) {\n        sys.index = sys.tryIndex;\n        setTimeout(() => {sys.nextAsync(sys)}, 1)\n      } else {\n        throw e\n      }\n    }\n    this.__call = (no, sys) => {\n      const info = {lastVars:sys.__vars, backNo: this.index + 1}\n      sys.__callstack.push(info);\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.nextIndex = no;\n    }\n    this.__return = sys => {\n      if (sys.__callstack.length === 0) {\n        sys.__destroySysenv(sys, sys.curSysenv.envid)\n        sys.index = -2\n        sys.nextIndex = -1\n        return\n      }\n      const sore = sys.__vars['それ'];\n      sys.__varslist.pop();\n      const info = sys.__callstack.pop();\n      sys.nextIndex = info.backNo;\n      sys.__vars = info.lastVars;\n      sys.__vars['それ'] = sore\n      sys.__stack.push(sore);\n    }\n    this.__resetAsync = sys => {\n      sys.index = 0\n      sys.codeSize = ${codes.length};\n      sys.async = false\n      sys.nextIndex = -1\n      sys.tryIndex = -1\n    }\n    this.__stopAsync = sys => {\n      sys.__resetAsync(sys)\n      sys.index = -1 // force stop!!\n    }\n    this.__callNakoCode = (no, backNo, sys) => {\n      this.__call(backNo, sys)\n      sys.nextIndex = no\n      const sysenv = sys.setAsync(sys)\n      setTimeout(() => {\n        // console.log('//__callNakoCode, back=', backNo, 'no=', no)\n        sys.compAsync(sys, sysenv)\n      } ,1)\n    }\n    this.__callNakoCodeEntry = (no, sys) => {\n      sys.__saveSysenv(sys)\n      sys.curSysenv = sys.__generateSysenv(sys)\n      sys.__restoreSysenv(sys)\n      sys.__vars = {\"それ\":\"\"}\n      sys.__varslist.push(sys.__vars)\n      sys.index = no;\n      sys.nextAsync(sys)\n    }\n    this.__callObj = (vname, curNo, sys) => {\n      if (sys.__vars[vname]) {\n        const fname = sys.__vars[vname]\n        // console.log(sys.__labels)\n        if (fname && sys.__labels[fname]) {\n          const no = sys.__labels[fname]\n          sys.__call(no, sys)\n          return\n        } else {\n          console.log('vname=', vname, 'label=', fname)\n        }\n      }\n      throw new Error('async error in __callObj::', vname)\n    }\n    this.__generateSysenv = sys => {\n      sys.envid = ( sys.envid == null ? 0 : sys.envid ) + 1\n      const sysenv = {\n        callstack: [],\n        varstack: [],\n        varslist: [sys.__varslist[0], sys.__varslist[1], sys.__varslist[2]],\n        index: -1,\n        nextIndex: -1,\n        tryIndex: -1,\n        envid: sys.envid\n      }\n      sysenv.vars = sysenv.varslist[2]\n      if (sys.sysenvs == null) { sys.sysenvs={} }\n      sys.sysenvs[sys.envid] = sysenv\n      // console.log('generete envid '+sys.envid)\n      return sysenv\n    }\n    this.__destroySysenv = (sys, envid) => {\n      delete sys.sysenvs[envid]\n      // console.log('destroy envid '+envid)\n    }\n    this.__saveSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sysenv.callstack = sys.__callstack\n      sysenv.varstack = sys.__stack\n      sysenv.varslist = sys.__varslist\n      sysenv.vars = sys.__vars\n      sysenv.index = sys.index\n      sysenv.nextIndex = sys.nextIndex\n      sysenv.tryIndex = sys.tryIndex\n    }\n    this.__restoreSysenv = sys => {\n      const sysenv = sys.curSysenv\n      sys.__callstack = sysenv.callstack\n      sys.__stack = sysenv.varstack\n      sys.__varslist = sysenv.varslist\n      sys.__vars = sysenv.vars\n      ___vars = sys.__vars\n      sys.index = sysenv.index\n      sys.nextIndex = sysenv.nextIndex\n      sys.tryIndex = sysenv.tryIndex\n    }\n    this.setAsync = sys => {\n      sys.async = true\n      return sys.curSysenv\n    }\n    this.compAsync = (sys,sysenv) => {\n      if (sys.async && sys.curSysenv != null && sysenv != null && sys.curSysenv.envid === sysenv.envid) {\n        sys.async = false\n      } else {\n        if (sys.curSysenv == null || sysenv == null || sys.curSysenv.envid !== sysenv.envid) {\n          sys.__saveSysenv(sys)\n          const envid = sys.curSysenv.envid\n          sys.curSysenv = sysenv\n          sys.__restoreSysenv(sys)\n          // console.log('switch envid '+envid+' to '+sys.curSysenv.envid)\n        }\n        sys.nextAsync(sys)\n      }\n    }\n\n    this.__resetAsync(this)\n    this.curSysenv = this.__generateSysenv(this)\n    this.nextAsync(this)\n    //-------------------------\n    `;\n        if (isTest) {\n            return '';\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    _convGen(node, isExpression) {\n        let code = '';\n        if (node instanceof Array) {\n            for (let i = 0; i < node.length; i++) {\n                const n = node[i];\n                code += this._convGen(n, isExpression);\n            }\n            return code;\n        }\n        if (node === null) {\n            return 'null';\n        }\n        if (node === undefined) {\n            return 'undefined';\n        }\n        if (typeof (node) !== 'object') {\n            return '' + node;\n        }\n        // switch\n        switch (node.type) {\n            // === NOP ===\n            case 'nop':\n                break;\n            case 'comment':\n                if (!node.value) {\n                    node.value = '';\n                }\n                this.addCode(new NakoCode(NakoCodeNop, node.value));\n                break;\n            case 'eol':\n                this.addCode(new NakoCode(NakoCodeEOL, this.convLineno(node, true)));\n                break;\n            // === 単純なコード変換 ===\n            case 'number':\n                this.addCodeStr(`sys.__stack.push(${node.value});//number`);\n                break;\n            case 'string':\n                this.convString(node);\n                break;\n            case 'word':\n            case 'variable':\n                this.convGetVar(node);\n                break;\n            case 'op':\n            case 'calc':\n                this.convOp(node);\n                break;\n            case 'renbun':\n                this.convRenbun(node);\n                break;\n            case 'not':\n                this._convGen(node.value, true);\n                this.addCodeStr('if (sys.__stack.length==0) throw new Error(\\'NOTでスタックに値がありません\\');' +\n                    'sys.__stack[sys.__stack.length-1] = (sys.__stack[sys.__stack.length-1]) ? 0:1');\n                break;\n            case '配列参照':\n                this.convRefArray(node);\n                break;\n            case 'json_array':\n                this.convJsonArray(node);\n                break;\n            case 'json_obj':\n                this.convJsonObj(node);\n                break;\n            case 'bool':\n                {\n                    const b = (node.value) ? 'true' : 'false';\n                    this.addCodeStr(`sys.__stack.push(${b})`);\n                    break;\n                }\n            case 'null':\n                this.addCodeStr('sys.__stack.push(null)');\n                break;\n            case 'func':\n            case 'func_pointer':\n            case 'calc_func':\n                this.convFunc(node, isExpression); // 関数の呼び出し\n                break;\n            // === 文の変換 ===\n            case 'let':\n                this.convLet(node);\n                break;\n            case 'let_array':\n                this.convLetArray(node);\n                break;\n            case 'block':\n                for (let i = 0; i < node.block.length; i++) {\n                    const b = node.block[i];\n                    this._convGen(b, false);\n                }\n                break;\n            case 'if':\n                this.convIf(node);\n                break;\n            case 'repeat_times':\n                this.convRepeatTimes(node);\n                break;\n            case 'break':\n                this.addCodeStr(this.convCheckLoop(node, 'break'));\n                break;\n            case 'continue':\n                this.addCodeStr(this.convCheckLoop(node, 'continue'));\n                break;\n            case 'for':\n                this.convFor(node);\n                break;\n            case 'foreach':\n                this.convForeach(node);\n                break;\n            case 'while':\n                this.convWhile(node);\n                break;\n            case 'switch':\n                this.convSwitch(node);\n                break;\n            case 'return':\n                this.convReturn(node);\n                break;\n            case 'end':\n                code += this.addCodeStr('__varslist[0][\\'終\\']();');\n                break;\n            case 'def_local_var':\n                this.convDefLocalVar(node);\n                break;\n            case 'def_local_varlist':\n                code += this.addCodeStr(this.convDefLocalVarlist(node));\n                break;\n            case 'tikuji':\n                throw NakoSyntaxError.fromNode('「逐次実行」構文は「!非同期モード」では使えません。', node);\n            case 'speed_mode':\n                throw NakoSyntaxError.fromNode('「速度有線」構文は「!非同期モード」では使えません。', node);\n            case 'performance_monitor':\n                this.convPerformanceMonitor(node, isExpression);\n                break;\n            case 'func_obj':\n                this.convFuncObj(node);\n                break;\n            case 'def_test':\n                this.convDefTest(node);\n                break;\n            case 'def_func':\n                code += this.addCodeStr(this.convDefFunc(node));\n                break;\n            // TODO\n            case 'try_except':\n                code += this.convTryExcept(node);\n                break;\n            case 'require':\n                code += this.convRequire(node);\n                break;\n            default:\n                throw new Error('System Error: unknown_type=' + node.type);\n        }\n        return code;\n    }\n    convRequire(node) {\n        const gen = new NakoGen(this.com);\n        this.addCodeStr(gen.convRequire(node));\n        return '';\n    }\n    /**\n     * add code to array\n     * @param {string} codeStr\n     * @returns {string}\n     */\n    addCodeStr(codeStr) {\n        if (codeStr === '') {\n            return '';\n        }\n        const a = codeStr.split('\\n');\n        const a2 = a.map((row) => '  ' + row.replace(/\\s+$/, ''));\n        const c = new NakoCode(NakoCodeCode, a2.join('\\n'));\n        return this.addCode(c);\n    }\n    /**\n     * add code to array\n     * @param {NakoCode} code\n     * @returns {string}\n     */\n    addCode(code) {\n        this.codeArray[this.codeId] = code;\n        this.codeId++;\n        return '';\n    }\n    /**\n     * make label for jump\n     * @param {string} name\n     * @returns {NakoCode}\n     */\n    makeLabel(name) {\n        const uniqLabel = name + '_' + (this.loopId++);\n        return this.makeLabelDirectly(uniqLabel);\n    }\n    /**\n     * make label for function\n     * @param {string} labelName\n     * @returns {NakoCode}\n     */\n    makeLabelDirectly(labelName) {\n        const c = new NakoCode(NakoCodeLabel, labelName);\n        this.labels[labelName] = -1;\n        return c;\n    }\n    /**\n     * make Jump\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJump(label) {\n        return new NakoCode(NakoCodeJump, label.value);\n    }\n    /**\n     * make Jump if true\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfTrue(label) {\n        return new NakoCode(NakoCodeJumpIfTrue, label.value);\n    }\n    /**\n     * make Jump if false\n     * @param {NakoCode} label\n     * @returns {NakoCode}\n     */\n    makeJumpIfFalse(label) {\n        return new NakoCode(NakoCodeJumpIfFalse, label.value);\n    }\n    /**\n     * @param {Ast} node\n     */\n    convIf(node) {\n        const labelBegin = this.makeLabel('もし:ここから');\n        const labelEnd = this.makeLabel('もし:ここまで');\n        const labelIfFalse = this.makeLabel('もし:違えば');\n        //\n        this.addCode(labelBegin);\n        this._convGen(node.expr, true);\n        this.addCode(this.makeJumpIfFalse(labelIfFalse));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelIfFalse);\n        if (node.falseBlock) {\n            this._convGen(node.falseBlock, false);\n        }\n        this.addCode(labelEnd);\n        return '';\n    }\n    convRepeatTimes(node) {\n        this.flagLoop = true;\n        this.varsSet.names.add('回数');\n        this.varsSet.readonly.add('回数');\n        // ループ管理変数を作成\n        const loopVar = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        // ループ回数を取得\n        const loopCount = `sys.__tmp_count${this.loopId}`;\n        this.loopId++;\n        this._convGen(node.value, true);\n        this.addCodeStr(`${loopCount} = sys.__stack.pop(); ${loopVar} = 0;`);\n        const labelCheck = this.makeLabel('回:条件チェック');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('回:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelCheck;\n        // 繰り返し判定\n        const kaisu = 'sys.__vars[\"回数\"]';\n        const cond = `${kaisu} = ++${loopVar}\\n` +\n            `sys.__stack.push(${loopVar} > ${loopCount})\\n`;\n        this.addCodeStr(cond);\n        this.addCode(this.makeJumpIfTrue(labelEnd));\n        this.convGenLoop(node.block); // read block\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {string} name\n     * @returns {{i: number, name: string, isTop: boolean, js: string} | null}\n     */\n    findVar(name) {\n        // __vars ? (ローカル変数)\n        if (this.varsSet.names.has(name)) {\n            return { i: this.varslistSet.length - 1, name, isTop: true, js: `sys.__vars[${JSON.stringify(name)}]` };\n        }\n        // __varslist ?\n        for (let i = 2; i >= 0; i--) {\n            if (this.varslistSet[i].names.has(name)) {\n                return { i, name, isTop: false, js: `sys.__varslist[${i}][${JSON.stringify(name)}]` };\n            }\n        }\n        return null;\n    }\n    /**\n     * 定義済みの変数の参照\n     * @param {string} name\n     * @param {Ast} position\n     */\n    genVar(name, position) {\n        const res = this.findVar(name);\n        const lno = position.line;\n        if (res === null) {\n            // 定義されていない名前の参照は変数の定義とみなす。\n            // 多くの場合はundefined値を持つ変数であり分かりづらいバグを引き起こすが、\n            // 「ナデシコする」などの命令の中で定義された変数の参照の場合があるため警告に留める。\n            // ただし、自動的に定義される変数『引数』『それ』などは例外 #952\n            if (name === '引数' || name === 'それ' || name === '対象' || name === '対象キー' || name === '回数') {\n                // デフォルト定義されている変数名\n            }\n            else {\n                this.__self.getLogger().warn(`変数『${name}』は定義されていません。`, position);\n            }\n            this.varsSet.names.add(name);\n            return this.varname(name);\n        }\n        const i = res.i;\n        // システム関数・変数の場合\n        if (i === 0) {\n            const pv = this.__self.getFunc(name);\n            if (!pv) {\n                return `${res.js}/*err:${lno}*/`;\n            }\n            if (pv.type === 'const' || pv.type === 'var') {\n                return res.js;\n            }\n            if (pv.type === 'func') {\n                if (!pv.josi) {\n                    throw new Error('[System Error]');\n                }\n                if (pv.josi.length === 0) {\n                    return `(${res.js}())`;\n                }\n                throw NakoSyntaxError.fromNode(`『${name}』が複文で使われました。単文で記述してください。(v1非互換)`, position);\n            }\n            throw NakoSyntaxError.fromNode(`『${name}』は関数であり参照できません。`, position);\n        }\n        return res.js;\n    }\n    convGetVar(node) {\n        const name = node.value;\n        let varName = `sys.__vars[${JSON.stringify(name)}]`;\n        const o = this.findVar(name);\n        if (o != null) {\n            varName = o.js;\n        }\n        this.addCodeStr(`sys.__stack.push(${varName});`);\n    }\n    convComment(node) {\n        let commentSrc = String(node.value);\n        commentSrc = commentSrc.replace(/\\n/g, '¶');\n        const lineNo = this.convLineno(node, false);\n        if (commentSrc === '' && lineNo === '') {\n            return ';';\n        }\n        if (commentSrc === '') {\n            return ';' + lineNo + '\\n';\n        }\n        return ';' + lineNo + '//' + commentSrc + '\\n';\n    }\n    convReturn(node) {\n        // 関数の中であれば利用可能\n        if (this.varsSet.names.has('!関数')) {\n            throw NakoSyntaxError.fromNode('『戻る』がありますが、関数定義内のみで使用可能です。', node);\n        }\n        if (node.value) {\n            this._convGen(node.value, true);\n            this.addCodeStr('sys.__vars[\"それ\"] = sys.__stack.pop()');\n        }\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        return '';\n    }\n    convCheckLoop(node, cmd) {\n        // ループの中であれば利用可能\n        if (!this.flagLoop) {\n            const cmdj = (cmd === 'continue') ? '続ける' : '抜ける';\n            throw NakoSyntaxError.fromNode(`『${cmdj}』文がありますが、それは繰り返しの中で利用してください。`, node);\n        }\n        if (cmd === 'continue') {\n            if (this.labelContinue) {\n                this.addCode(this.makeJump(this.labelContinue));\n            }\n        }\n        else {\n            if (this.labelBreak) {\n                this.addCode(this.makeJump(this.labelBreak));\n            }\n        }\n        return '';\n    }\n    convDefFuncCommon(node, name) {\n        // deffunc_code\n        const isMumeiFunc = (name === '');\n        let funcName = name;\n        if (isMumeiFunc) {\n            funcName = `無名関数:${this.loopId++}`;\n        }\n        const labelEnd = this.makeLabel(`関数「${funcName}」:ここまで`);\n        this.addCode(this.makeJump(labelEnd));\n        const labelBegin = this.makeLabelDirectly(funcName);\n        labelBegin.tag = NakoCodeTagIsFuncpoint; // 削除対象からはずすため\n        this.addCode(labelBegin);\n        //\n        const initialNames = new Set();\n        this.varsSet = { isFunction: true, names: initialNames, readonly: new Set() };\n        this.varsSet.names.add('それ');\n        // ローカル変数をPUSHする\n        this.varslistSet.push(this.varsSet);\n        // JSの引数と引数をバインド\n        const meta = isMumeiFunc ? node.meta : node.name.meta;\n        let code = '';\n        let codeCall = '';\n        code += `//関数『${funcName}』の初期化処理\\n`;\n        // 宣言済みの名前を保存\n        // const varsDeclared = Array.from(this.varsSet.names.values())\n        // 引数をローカル変数に設定 (スタックの末尾から取得する必要があるので、逆順に値を得る)\n        code += '// 引数をローカル変数として登録\\n';\n        for (let i = meta.varnames.length - 1; i >= 0; i--) {\n            const word = meta.varnames[i];\n            code += `  ${this.varname(word)} = sys.__stack.pop();\\n`;\n            this.varsSet.names.add(word);\n            codeCall += ''; //  sys.__stack.push(arguments[${i}]);\\n\n        }\n        code += '// ここまで:引数をローカル変数として登録\\n';\n        this.addCodeStr(code);\n        // 関数定義は、グローバル領域で。\n        this.usedFuncSet.add(funcName);\n        this.varslistSet[1].names.add(funcName);\n        this.nakoFuncList[funcName] = {\n            josi: meta.josi,\n            fn: '(function(){\\n' +\n                '  const sys = (arguments.length > 0) ? arguments[arguments.length-1] : {}; \\n' +\n                '  if (sys.newenv) { \\n' +\n                '    sys.newenv = false\\n' +\n                `    sys.__callNakoCodeEntry(sys.__labels['${funcName}'], sys);` + '\\n' +\n                '  } else {\\n' +\n                '  ' + codeCall + '\\n' +\n                `    sys.__callNakoCode(sys.__labels['${funcName}'], sys.nextIndex, sys);` + '\\n' +\n                '    if (!sys.inLoop) { sys.nextAsync(sys) }\\n' +\n                '  }  })',\n            type: 'func'\n        };\n        // ブロックを解析\n        this._convGen(node.block, false);\n        this.varslistSet.pop();\n        this.varsSet = this.varslistSet[this.varslistSet.length - 1];\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.__self.__varslist[1][funcName] = function () { };\n        this.addCode(new NakoCode(NakoCodeReturn, ''));\n        this.addCode(labelEnd);\n        // 無名関数の定義であれば無名関数をPUSH\n        if (!name) {\n            this.addCodeStr(`sys.__stack.push('${funcName}')`);\n        }\n        return '';\n    }\n    convDefTest(node) {\n        throw NakoSyntaxError.fromNode('テスト構文は!非同期モードでは使えません。', node);\n    }\n    convDefFunc(node) {\n        const name = NakoGen.getFuncName(node.name.value);\n        this.convDefFuncCommon(node, name);\n        // ★この時点では関数のコードを生成しない★\n        // プログラム冒頭でコード生成時に関数定義を行う\n        return '';\n    }\n    convFuncObj(node) {\n        return this.convDefFuncCommon(node, '');\n    }\n    convJsonObj(node) {\n        const list = node.value;\n        const objName = `sys.__tmp_obj${this.loopId++}`;\n        this.addCodeStr(objName + '={}; // convJsonObj::ここから');\n        list.forEach((e) => {\n            this._convGen(e.value, true);\n            this._convGen(e.key, true);\n            this.addCodeStr(`${objName}[sys.__stack.pop()]=sys.__stack.pop()`);\n        });\n        this.addCodeStr(`this.__stack.push(${objName}); delete $objName; // convJsonObj::ここまで`);\n        return '';\n    }\n    convJsonArray(node) {\n        const list = node.value;\n        this.addCode(this.makeLabel('convJsonArray::ここから'));\n        list.forEach((e) => this._convGen(e, true));\n        const size = list.length;\n        this.addCodeStr(`sys.__stack.push(sys.__stack.splice(sys.__stack.length-${size},${size}))`);\n        return '';\n    }\n    convRefArray(node) {\n        // 名前をPUSH\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            // push index\n            this._convGen(list[i], true);\n            // pop index & push value\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convLetArray(node) {\n        // 代入する値をPUSH\n        this._convGen(node.value, true);\n        // 変数を取得\n        this._convGen(node.name, true);\n        const list = node.index;\n        for (let i = 0; i < list.length; i++) {\n            this._convGen(list[i], true);\n            if (i === list.length - 1) { // 代入\n                this.addCodeStr('const idx = this.__stack.pop();' +\n                    'const obj = this.__stack.pop();' +\n                    'const val = this.__stack.pop();' +\n                    'obj[idx]=val;');\n                break;\n            }\n            // index アクセス\n            this.addCodeStr('const idx = sys.__stack.pop();\\n' +\n                'const obj = sys.__stack.pop();\\n' +\n                'sys.__stack.push(obj[idx]);');\n        }\n        return '';\n    }\n    convGenLoop(node) {\n        const tmpflag = this.flagLoop;\n        this.flagLoop = true;\n        try {\n            return this._convGen(node, false);\n        }\n        finally {\n            this.flagLoop = tmpflag;\n        }\n    }\n    convFor(node) {\n        this.flagLoop = true;\n        // ループ変数について\n        let word;\n        if (node.word !== null) { // ループ変数を使う時\n            const varName = node.word.value;\n            this.varsSet.names.add(varName);\n            word = this.varname(varName);\n        }\n        else {\n            this.varsSet.names.add('dummy');\n            word = this.varname('dummy');\n        }\n        const sore = this.varname('それ');\n        const idLoop = this.loopId++;\n        const varI = `sys.__tmp__i${idLoop}`;\n        // ループ条件を変数に入れる用\n        const varTo = `sys.__tmp__to${idLoop}`;\n        // ループ条件を確認\n        this._convGen(node.from, true);\n        this._convGen(node.to, true);\n        this.addCodeStr(`${varTo}=sys.__stack.pop();${varI}=sys.__stack.pop();`);\n        // ループ変数を初期化\n        this.addCodeStr(`${sore} = ${word} = ${varI}`);\n        // 繰り返し判定\n        const labelCheck = this.makeLabel('繰返:条件確認');\n        const labelInc = this.makeLabel('繰返:加算');\n        this.addCode(labelCheck);\n        const labelEnd = this.makeLabel('繰返:ここまで');\n        this.addCodeStr(`sys.__stack.push(${word} <= ${varTo})`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        this.labelContinue = labelInc;\n        this.labelBreak = labelEnd;\n        // ループ内のブロック内容を得る\n        this.convGenLoop(node.block); // block\n        this.addCode(labelInc);\n        this.addCodeStr(`${sore} = ++${word};`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varI};delete ${varTo};//繰返:掃除`);\n        this.flagLoop = false;\n        return '';\n    }\n    convForeach(node) {\n        this.flagLoop = true;\n        // 対象を用意する\n        let taisyo = '__v0[\"対象\"]';\n        const taisyoKey = '__v0[\"対象キー\"]';\n        if (node.name) {\n            taisyo = this.varname(node.name.value);\n            this.varsSet.names.add(node.name.value);\n        }\n        // 反復対象を調べる\n        const target = node.target;\n        if (target === null) {\n            throw NakoSyntaxError.fromNode('『反復』の対象がありません。', node);\n        }\n        const sore = this.varname('それ');\n        const targetArray = `sys.__tmp__target${this.loopId++}`;\n        const targetKeys = `sys.__tmp__keys${this.loopId++}`;\n        const loopVar = `sys.__tmp__i${this.loopId++}`;\n        const loopCount = `sys.__tmp__count${this.loopId++}`;\n        // 反復対象を評価\n        this._convGen(node.target, true);\n        // どのように反復するか判定\n        const initCode = '// 反復: 初期化\\n' +\n            `${targetArray} = sys.__stack.pop();\\n` +\n            `${loopVar} = 0;\\n` +\n            // 文字列や数値なら反復できるように配列に入れる\n            `if (typeof(${targetArray}) == 'string' || typeof(${targetArray}) == 'number') { ${targetArray} = [${targetArray}]; }\\n` +\n            // Objectならキー一覧を得る\n            `if (${targetArray} instanceof Array) { ${loopCount} = ${targetArray}.length; }\\n` +\n            'else { // キーの一覧を得る\\n' +\n            `  ${targetKeys} = Object.keys(${targetArray}); \\n` +\n            '  // hasOwnPropertyがfalseならばkeyを消す処理\\n' +\n            `  ${targetKeys} = ${targetKeys}.filter((key)=>{ return ${targetArray}.hasOwnProperty(key) })\\n` +\n            `  ${loopCount} = ${targetKeys}.length;\\n` +\n            '}\\n';\n        this.addCodeStr(initCode);\n        const labelCheck = this.makeLabel('反復:条件確認');\n        const labelInc = this.makeLabel('反復:加算');\n        const labelEnd = this.makeLabel('反復:ここまで');\n        this.labelBreak = labelEnd;\n        this.labelContinue = labelInc;\n        this.addCode(labelCheck);\n        const setTarget = `if (${targetArray} instanceof Array) {\\n` +\n            // eslint-disable-next-line no-irregular-whitespace\n            `  ${taisyo} = ${sore} = ${targetArray}[${loopVar}];　${taisyoKey} = ${loopVar};\\n` +\n            '} else {\\n' +\n            `  ${taisyoKey} = ${targetKeys}[${loopVar}]; ${taisyo} = ${sore} = ${targetArray}[${taisyoKey}];\\n` +\n            '}\\n';\n        this.addCodeStr(`${setTarget}\\nsys.__stack.push(${loopVar} < ${loopCount});`);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // 反復ブロックを定義\n        this.convGenLoop(node.block); // block\n        // 加算\n        this.addCode(labelInc);\n        this.addCodeStr(`${loopVar}++`);\n        this.addCode(this.makeJump(labelCheck));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    convWhile(node) {\n        this.flagLoop = true;\n        const labelBegin = this.makeLabel('間:ここから');\n        const labelEnd = this.makeLabel('間:ここまで');\n        this.labelContinue = labelBegin;\n        this.labelBreak = labelEnd;\n        this.addCode(labelBegin);\n        // 条件をスタックに\n        this._convGen(node.cond, true);\n        this.addCode(this.makeJumpIfFalse(labelEnd));\n        // ブロックを追加\n        this.convGenLoop(node.block);\n        this.addCode(this.makeJump(labelBegin));\n        this.addCode(labelEnd);\n        this.flagLoop = false;\n        return '';\n    }\n    /**\n     * @param {Ast} _node\n     * @param {boolean} _isExpression\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    convSpeedMode(_node, _isExpression) {\n        return '';\n    }\n    /**\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     */\n    convPerformanceMonitor(node, isExpression) {\n        const prev = { ...this.performanceMonitor };\n        if (node.options['ユーザ関数']) {\n            this.performanceMonitor.userFunction++;\n        }\n        if (node.options['システム関数本体']) {\n            this.performanceMonitor.systemFunctionBody++;\n        }\n        if (node.options['システム関数']) {\n            this.performanceMonitor.systemFunction++;\n        }\n        this._convGen(node.block, isExpression);\n        this.performanceMonitor = prev;\n    }\n    convSwitch(node) {\n        // 値をPUSH\n        this._convGen(node.value, true);\n        const varValue = `sys.__tmp__i${this.loopId++}`;\n        this.addCodeStr(`${varValue} = sys.__stack.pop()`);\n        const labelEnd = this.makeLabel('条件分岐:ここまで');\n        const cases = node.cases;\n        for (let i = 0; i < cases.length; i++) {\n            const cvalue = cases[i][0];\n            if (cvalue.type === '違えば') {\n                this.convGenLoop(cases[i][1]);\n            }\n            else {\n                const nextLabel = this.makeLabel('条件分岐:次');\n                this._convGen(cvalue, true);\n                this.addCodeStr(`sys.__stack.push(sys.__stack.pop() == ${varValue})`);\n                this.addCode(this.makeJumpIfFalse(nextLabel));\n                this.convGenLoop(cases[i][1]);\n                this.addCode(this.makeJump(labelEnd));\n                this.addCode(nextLabel);\n            }\n        }\n        this.addCode(labelEnd);\n        this.addCodeStr(`delete ${varValue}//条件分岐:掃除`);\n        return '';\n    }\n    convFuncGetArgsCalcType(funcName, func, node) {\n        const opts = {};\n        for (let i = 0; i < node.args.length; i++) {\n            const arg = node.args[i];\n            if (i === 0 && arg === null) {\n                this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n                opts.sore = true;\n            }\n            else {\n                // 関数の引数を評価\n                this._convGen(arg, true);\n            }\n        }\n        return opts;\n    }\n    getPluginList() {\n        const r = [];\n        for (const name in this.__self.__module) {\n            r.push(name);\n        }\n        return r;\n    }\n    /**\n     * 関数の呼び出し\n     * @param {Ast} node\n     * @param {boolean} isExpression\n     * @returns string コード\n     */\n    convFunc(node, isExpression) {\n        let isJSFunc = false;\n        let isMumeiFunc = false;\n        const funcName = NakoGen.getFuncName(node.name);\n        const res = this.findVar(funcName);\n        if (res === null) {\n            throw NakoSyntaxError.fromNode(`関数『${funcName}』が見当たりません。有効プラグイン=[` + this.getPluginList().join(', ') + ']', node);\n        }\n        let func;\n        if (res.i === 0) { // plugin function\n            func = this.__self.getFunc(funcName);\n            if (func.type !== 'func') {\n                throw NakoSyntaxError.fromNode(`『${funcName}』は関数ではありません。`, node);\n            }\n            isJSFunc = true;\n        }\n        else {\n            func = this.nakoFuncList[funcName];\n            // 無名関数の可能性\n            if (func === undefined) {\n                isMumeiFunc = true;\n                func = { return_none: false };\n            }\n        }\n        // 関数の参照渡しか？\n        if (node.type === 'func_pointer') {\n            return res.js;\n        }\n        // 関数の参照渡しでない場合\n        // 関数定義より助詞を一つずつ調べる\n        const argsOpts = this.convFuncGetArgsCalcType(funcName, func, node);\n        // function\n        this.usedFuncSet.add(funcName);\n        let funcBegin = '';\n        let funcEnd = '';\n        // setter?\n        if (node.setter) {\n            funcBegin += ';__self.isSetter = true;\\n';\n            funcEnd += ';__self.isSetter = false;\\n';\n        }\n        // 変数「それ」が補完されていることをヒントとして出力\n        if (argsOpts.sore) {\n            funcBegin += '/*[sore]*/';\n        }\n        // 引数をスタックに積む\n        const arcCount = node.args.length;\n        // 必要な引数分だけスタックから下ろして呼び出す\n        let code = '';\n        if (isJSFunc) {\n            code += funcBegin;\n            code += `const args = sys.__stack.splice(sys.__stack.length - ${arcCount}, ${arcCount});\\n`;\n            // code += `console.log(\"call:${funcName}\", args, 'sys');\\n`\n            code += 'args.push(sys);\\n';\n            code += `const ret = ${res.js}.apply(sys, args);\\n`;\n            if (!func.return_none) {\n                code += 'sys.__vars[\\'それ\\'] = ret;\\n';\n                if (isExpression) {\n                    code += 'sys.__stack.push(ret);\\n';\n                }\n            }\n            code += funcEnd;\n            this.addCodeStr(code);\n        }\n        else {\n            if (isMumeiFunc) {\n                this.addCode(new NakoCode(NakoCodeCallObj, funcName));\n            }\n            else {\n                this.addCode(new NakoCode(NakoCodeCall, funcName));\n            }\n            if (!isExpression) {\n                this.addCodeStr('sys.__stack.pop();// 戻り値を利用しない関数呼出');\n            }\n        }\n    }\n    convRenbun(node) {\n        this._convGen(node.left, false);\n        this._convGen(node.right, true);\n    }\n    convOp(node) {\n        const OP_TBL = {\n            '&': '+\"\"+',\n            eq: '==',\n            noteq: '!=',\n            '===': '===',\n            '!==': '!==',\n            gt: '>',\n            lt: '<',\n            gteq: '>=',\n            lteq: '<=',\n            and: '&&',\n            or: '||',\n            shift_l: '<<',\n            shift_r: '>>',\n            shift_r0: '>>>',\n            '÷': '/'\n        };\n        const op = node.operator; // 演算子\n        // 値はスタックに載せられる\n        // left\n        this._convGen(node.left, true);\n        // right\n        this._convGen(node.right, true);\n        // calc\n        let code = 'const rv = sys.__stack.pop();\\n' +\n            'const lv = sys.__stack.pop();\\n';\n        if (op === '^') {\n            code += 'const v = (Math.pow(lv, rv))\\n';\n        }\n        else {\n            const op2 = OP_TBL[op] || op;\n            code += `const v = ((lv) ${op2} (rv));\\n`;\n        }\n        // code += `if (isNaN(v) && '${op}' != '&') { console.log('ERROR:${op}', lv, rv) }\\n`\n        code += `sys.__stack.push(v); //op:${op}\\n`;\n        this.addCodeStr(code);\n    }\n    convLet(node) {\n        let code = '';\n        // 値をスタックに載せる\n        if (node.value === null) {\n            // 値が省略されたら「それ」を載せる\n            this.addCodeStr('sys.__stack.push(sys.__vars[\\'それ\\'])');\n        }\n        else {\n            // 値がある場合\n            this._convGen(node.value, true);\n        }\n        // 変数名\n        const name = node.name.value;\n        const res = this.findVar(name);\n        if (res === null) {\n            this.varsSet.names.add(name);\n            code = `${this.varname(name)}=sys.__stack.pop();`;\n        }\n        else {\n            // 定数ならエラーを出す\n            if (this.varslistSet[res.i].readonly.has(name)) {\n                throw NakoSyntaxError.fromNode(`定数『${name}』は既に定義済みなので、値を代入することはできません。`, node);\n            }\n            code = `${res.js}=sys.__stack.pop();`;\n        }\n        this.addCodeStr(code + '//let');\n    }\n    convDefLocalVar(node) {\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const name = node.name.value;\n        const vtype = node.vartype; // 変数 or 定数\n        // 二重定義？\n        if (this.varsSet.names.has(name)) {\n            throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n        }\n        this.varsSet.names.add(name);\n        // 定数?\n        if (vtype === '定数') {\n            this.varsSet.readonly.add(name);\n        }\n        this.addCodeStr(`${this.varname(name)}=sys.__stack.pop()`);\n        return '';\n    }\n    // #563 複数変数への代入\n    convDefLocalVarlist(node) {\n        const vtype = node.vartype; // 変数 or 定数\n        if (node.value === null) {\n            this.addCodeStr('sys.__stack.push(null)');\n        }\n        else {\n            this._convGen(node.value, true);\n        }\n        const varI = `sys.__tmp_i${this.loopId}`;\n        this.loopId++;\n        this.addCodeStr(`${varI}=sys.__stack.pop();if (!(${varI} instanceof Array)) { ${varI}=[${varI}] }`);\n        for (const nameObj of node.names) {\n            const name = nameObj.value;\n            // 二重定義？\n            if (this.varsSet.names.has(name)) {\n                throw NakoSyntaxError.fromNode(`${vtype}『${name}』の二重定義はできません。`, node);\n            }\n            //\n            this.varsSet.names.add(name);\n            if (vtype === '定数') {\n                this.varsSet.readonly.add(name);\n            }\n            const vname = this.varname(name);\n            this.addCodeStr(`${vname}=${varI}.pop()`);\n        }\n        this.addCodeStr(`delete ${varI}//複数代入:掃除`);\n        return '';\n    }\n    convString(node) {\n        let value = '' + node.value;\n        const mode = node.mode;\n        value = value.replace(/\\\\/g, '\\\\\\\\');\n        value = value.replace(/\"/g, '\\\\\"');\n        value = value.replace(/\\r/g, '\\\\r');\n        value = value.replace(/\\n/g, '\\\\n');\n        if (mode === 'ex') {\n            throw new Error('[システムエラー] ジェネレーターでの文字列の展開はサポートしていません');\n        }\n        this.addCodeStr(`sys.__stack.push(\"${value}\")//string`);\n        return '\"' + value + '\"';\n    }\n    convTryExcept(node) {\n        const labelExcept = this.makeLabel('エラー監視:ならば');\n        const labelEnd = this.makeLabel('エラー監視:ここまで');\n        // エラーをひっかけるように設定\n        this.addCode(new NakoCode(NakoCodeTry, labelExcept.value));\n        this._convGen(node.block, false);\n        this.addCode(this.makeJump(labelEnd));\n        this.addCode(labelExcept);\n        this._convGen(node.errBlock, false);\n        this.addCode(labelEnd);\n    }\n}\n// ブラウザに登録する\nif (typeof (navigator) === 'object' && typeof (navigator.nako3) === 'object') {\n    // Webブラウザの場合\n    const nako3 = navigator.nako3;\n    if (nako3.addCodeGenerator) {\n        nako3.addCodeGenerator('非同期モード', NakoGenASync);\n    }\n}\n","/**\n * 助詞の一覧\n */\nexport const josiList = [\n    'について', 'くらい', 'なのか', 'までを', 'までの', 'による',\n    'とは', 'から', 'まで', 'だけ', 'より', 'ほど', 'など',\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて',\n    'めて', 'ねて', 'では', 'には', 'は~', 'んで', 'ずつ',\n    'は', 'を', 'に', 'へ', 'で', 'と', 'が', 'の'\n];\n// 「もし」文で使う助詞\nexport const tararebaJosiList = [\n    'でなければ', 'なければ', 'ならば', 'なら', 'たら', 'れば'\n];\n// 意味のない助詞(削除する) #936 #939 #974\nexport const removeJosiList = [\n    'こと', 'である', 'です', 'します', 'でした'\n];\n/**\n * 「もし」文で使う「たら」「れば」などの一覧をプログラムで扱いやすいようマップに変換したもの\n */\nexport const tararebaMap = {};\ntararebaJosiList.forEach(josi => {\n    josiList.push(josi);\n    tararebaMap[josi] = true;\n});\n/**\n * 意味のない助詞(削除する)をマップに変換したもの\n */\nexport const removeJosiMap = {};\nremoveJosiList.forEach(josi => {\n    josiList.push(josi);\n    removeJosiMap[josi] = true;\n});\n// 文字数の長い順に並び替え\njosiList.sort((a, b) => b.length - a.length);\n// 正規表現で助詞をマッチできるようにする\nexport const josiRE = new RegExp('^[\\\\t ]*(' + josiList.join('|') + ')');\n","/** 予約語 */\nconst reserved = {\n    '回': '回',\n    '回繰返': '回',\n    '間': '間',\n    '間繰返': '間',\n    '繰返': '繰返',\n    '増繰返': '増繰返',\n    '減繰返': '減繰返',\n    '後判定': '後判定',\n    '反復': '反復',\n    '抜': '抜ける',\n    '続': '続ける',\n    '戻': '戻る',\n    '先': '先に',\n    '次': '次に',\n    '代入': '代入',\n    '実行速度優先': '実行速度優先',\n    'パフォーマンスモニタ適用': 'パフォーマンスモニタ適用',\n    '定': '定める',\n    '逐次実行': '逐次実行',\n    '条件分岐': '条件分岐',\n    '増': '増',\n    '減': '減',\n    '変数': '変数',\n    '定数': '定数',\n    'エラー監視': 'エラー監視',\n    'エラー': 'エラー',\n    'それ': 'word',\n    'そう': 'word',\n    '関数': 'def_func',\n    'インデント構文': 'インデント構文',\n    '非同期モード': '非同期モード',\n    'DNCLモード': 'DNCLモード',\n    'モード設定': 'モード設定',\n    '取込': '取込'\n};\nexport default reserved;\n","import { NakoRuntimeError } from './nako_errors.mjs';\nexport default {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_system',\n            pluginVersion: '3.4.5',\n            nakoRuntime: ['wnako', 'cnako', 'phpnako'],\n            nakoVersion: '^3.4.5' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // 言語バージョンを設定\n            sys.isDebug = false;\n            sys.__v0['ナデシコバージョン'] = sys.version;\n            sys.__v0['ナデシコ言語バージョン'] = sys.coreVersion;\n            sys.__namespaceList = [];\n            // なでしこの関数や変数を探して返す\n            sys.__findVar = function (nameStr, def) {\n                if (typeof nameStr === 'function') {\n                    return nameStr;\n                }\n                if (sys.__locals[nameStr]) {\n                    return sys.__locals[nameStr];\n                }\n                // 名前空間が指定されている場合\n                if (nameStr.indexOf('__') >= 0) {\n                    for (let i = 2; i >= 0; i--) {\n                        const varScope = sys.__varslist[i];\n                        if (varScope[nameStr]) {\n                            return varScope[nameStr];\n                        }\n                    }\n                    return def;\n                }\n                // 名前空間を参照して関数・変数名を解決する\n                const modList = sys.__modList ? sys.__modList : [sys.__modName];\n                for (const modName of modList) {\n                    const gname = modName + '__' + nameStr;\n                    for (let i = 2; i >= 0; i--) {\n                        const scope = sys.__varslist[i];\n                        if (scope[gname]) {\n                            return scope[gname];\n                        }\n                    }\n                }\n                return def;\n            };\n            // 文字列から関数を探す\n            sys.__findFunc = function (nameStr, parentFunc) {\n                const f = sys.__findVar(nameStr);\n                if (typeof f === 'function') {\n                    return f;\n                }\n                throw new Error(`『${parentFunc}』に実行できない関数が指定されました。`);\n            };\n            // システム関数を実行\n            sys.__exec = function (func, params) {\n                // システム命令を優先\n                const f0 = sys.__v0[func];\n                if (f0) {\n                    return f0.apply(this, params);\n                }\n                // グローバル・ローカルを探す\n                const f = sys.__findVar(func);\n                if (!f) {\n                    throw new Error('システム関数でエイリアスの指定ミス:' + func);\n                }\n                return f.apply(this, params);\n            };\n            // タイマーに関する処理(タイマーは「!クリア」で全部停止する)\n            sys.__timeout = [];\n            sys.__interval = [];\n            // 日付処理などに使う\n            const z2 = sys.__zero2 = (s) => {\n                s = '00' + s;\n                return s.substring(s.length - 2);\n            };\n            sys.__zero = (s, keta) => {\n                let zeroS = '';\n                for (let i = 0; i < keta; i++) {\n                    zeroS += '0';\n                }\n                s = zeroS + s;\n                return s.substring(s.length - keta);\n            };\n            sys.__formatDate = (t) => {\n                return t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n            };\n            sys.__formatTime = (t) => {\n                return z2(t.getHours()) + ':' + z2(t.getSeconds()) + ':' + z2(t.getMinutes());\n            };\n            sys.__formatDateTime = (t, fmt) => {\n                const dateStr = t.getFullYear() + '/' + z2(t.getMonth() + 1) + '/' + z2(t.getDate());\n                const timeStr = z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+\\s+\\d+:\\d+:\\d+$/)) {\n                    return dateStr + ' ' + timeStr;\n                }\n                if (fmt.match(/^\\d+\\/\\d+\\/\\d+$/)) {\n                    return dateStr;\n                }\n                if (fmt.match(/^\\d+:\\d+:\\d+$/)) {\n                    return timeStr;\n                }\n                return dateStr + ' ' + timeStr;\n            };\n            sys.__str2date = (s) => {\n                // trim\n                s = ('' + s).replace(/(^\\s+|\\s+$)/, '');\n                // is unix time\n                if (s.match(/^(\\d+|\\d+\\.\\d+)$/)) {\n                    return new Date(parseFloat(s) * 1000);\n                }\n                // is time ?\n                if (s.match(/^\\d+:\\d+(:\\d+)?$/)) {\n                    const t = new Date();\n                    const a = (s + ':0').split(':');\n                    return new Date(t.getFullYear(), t.getMonth(), t.getDate(), parseInt(a[0]), parseInt(a[1]), parseInt(a[2]));\n                }\n                // replace splitter to '/'\n                s = s.replace(/[\\s:-]/g, '/');\n                s += '/0/0/0'; // 日付だけのときのために時間分を足す\n                const a = s.split('/');\n                return new Date(parseInt(a[0]), parseInt(a[1]) - 1, parseInt(a[2]), parseInt(a[3]), parseInt(a[4]), parseInt(a[5]));\n            };\n            // 『継続表示』のための一時変数(『表示』実行で初期化)\n            sys.__printPool = '';\n            // undefinedチェック\n            sys.chk = (value, constId) => {\n                if (typeof value === 'undefined') {\n                    const cp = sys.constPools[constId];\n                    sys.logger.warn(cp.msg, { file: cp.file, line: cp.line });\n                }\n                return value;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            if (sys.__exec) {\n                sys.__exec('全タイマー停止', [sys]);\n            }\n            if (sys.__genMode === '非同期モード') {\n                sys.__stopAsync(sys);\n            }\n            sys.__v0['表示ログ'] = '';\n        }\n    },\n    // @システム定数\n    'ナデシコバージョン': { type: 'const', value: '?' },\n    'ナデシコ言語バージョン': { type: 'const', value: '?' },\n    'ナデシコエンジン': { type: 'const', value: 'nadesi.com/v3' },\n    'ナデシコ種類': { type: 'const', value: '?' },\n    'はい': { type: 'const', value: 1 },\n    'いいえ': { type: 'const', value: 0 },\n    '真': { type: 'const', value: 1 },\n    '偽': { type: 'const', value: 0 },\n    '永遠': { type: 'const', value: 1 },\n    'オン': { type: 'const', value: 1 },\n    'オフ': { type: 'const', value: 0 },\n    '改行': { type: 'const', value: '\\n' },\n    'タブ': { type: 'const', value: '\\t' },\n    'カッコ': { type: 'const', value: '「' },\n    'カッコ閉': { type: 'const', value: '」' },\n    '波カッコ': { type: 'const', value: '{' },\n    '波カッコ閉': { type: 'const', value: '}' },\n    'OK': { type: 'const', value: true },\n    'NG': { type: 'const', value: false },\n    'キャンセル': { type: 'const', value: 0 },\n    'TRUE': { type: 'const', value: true },\n    'FALSE': { type: 'const', value: false },\n    'PI': { type: 'const', value: Math.PI },\n    '空': { type: 'const', value: '' },\n    'NULL': { type: 'const', value: null },\n    'undefined': { type: 'const', value: undefined },\n    '未定義': { type: 'const', value: undefined },\n    'エラーメッセージ': { type: 'const', value: '' },\n    '対象': { type: 'const', value: '' },\n    '対象キー': { type: 'const', value: '' },\n    '回数': { type: 'const', value: '' },\n    'CR': { type: 'const', value: '\\r' },\n    'LF': { type: 'const', value: '\\n' },\n    '非数': { type: 'const', value: NaN },\n    '無限大': { type: 'const', value: Infinity },\n    '空配列': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return [];\n        }\n    },\n    '空辞書': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空ハッシュ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return {};\n        }\n    },\n    '空オブジェクト': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            return sys.__exec('空ハッシュ', [sys]);\n        }\n    },\n    // @標準出力\n    '表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            // 継続表示の一時プールを出力\n            s = sys.__printPool + s;\n            sys.__printPool = '';\n            //\n            sys.__varslist[0]['表示ログ'] += (s + '\\n');\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    '継続表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__printPool += s;\n        },\n        return_none: true\n    },\n    '連続表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '連続無改行表示': {\n        type: 'func',\n        josi: [['と', 'を']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (...a) {\n            const sys = a.pop();\n            const v = a.join('');\n            sys.__exec('継続表示', [v, sys]);\n        },\n        return_none: true\n    },\n    '表示ログ': { type: 'const', value: '' },\n    '表示ログクリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__varslist[0]['表示ログ'] = '';\n        },\n        return_none: true\n    },\n    '言': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.logger.send('stdout', s + '');\n        },\n        return_none: true\n    },\n    'コンソール表示': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s) {\n            console.log(s);\n        },\n        return_none: true\n    },\n    // @四則演算\n    '足': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        isVariableJosi: false,\n        pure: true,\n        fn: function (a, b) {\n            return a + b;\n        }\n    },\n    '引': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            return a - b;\n        }\n    },\n    '掛': {\n        type: 'func',\n        josi: [['に', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            // 数値の掛け算\n            if (typeof a === 'number') {\n                return a * b;\n            }\n            // 文字列の掛け算(文字列の繰り返し)\n            if (typeof a === 'string') {\n                let s = '';\n                for (let i = 0; i < parseInt(b); i++) {\n                    s += a;\n                }\n                return s;\n            }\n            // 配列の繰り返し\n            if (a instanceof Array) {\n                const aa = [];\n                for (let i = 0; i < parseInt(b); i++) {\n                    aa.push(...a);\n                }\n                return aa;\n            }\n            return a * b;\n        }\n    },\n    '倍': {\n        type: 'func',\n        josi: [['の', 'を'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a * b;\n        }\n    },\n    '割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a / b;\n        }\n    },\n    '割余': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return a % b;\n        }\n    },\n    '偶数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 0);\n        }\n    },\n    '奇数': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (a) {\n            return (parseInt(a) % 2 === 1);\n        }\n    },\n    '二乗': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            return a * a;\n        }\n    },\n    'べき乗': {\n        type: 'func',\n        josi: [['の'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.pow(a, b);\n        }\n    },\n    '以上': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a >= b;\n        }\n    },\n    '以下': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a <= b;\n        }\n    },\n    '未満': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a < b;\n        }\n    },\n    '超': {\n        type: 'func',\n        josi: [['が'], ['']],\n        pure: true,\n        fn: function (a, b) {\n            return a > b;\n        }\n    },\n    '等': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a === b;\n        }\n    },\n    '等無': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            return a !== b;\n        }\n    },\n    '一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA === jsonB;\n            }\n            return a === b;\n        }\n    },\n    '不一致': {\n        type: 'func',\n        josi: [['が'], ['と']],\n        pure: true,\n        fn: function (a, b) {\n            // オブジェクトの場合、JSONに変換して比較\n            if (typeof (a) === 'object') {\n                const jsonA = JSON.stringify(a);\n                const jsonB = JSON.stringify(b);\n                return jsonA !== jsonB;\n            }\n            return a !== b;\n        }\n    },\n    '範囲内': {\n        type: 'func',\n        josi: [['が'], ['から'], ['の', 'までの']],\n        pure: true,\n        fn: function (v, a, b) {\n            return (a <= v) && (v <= b);\n        }\n    },\n    '連続加算': {\n        type: 'func',\n        josi: [['を'], ['に', 'と']],\n        isVariableJosi: true,\n        pure: true,\n        fn: function (b, ...a) {\n            a.pop(); // 必ず末尾に sys があるので、末尾のシステム変数を除外\n            a.push(b);\n            return a.reduce((p, c) => p + c);\n        }\n    },\n    // @敬語\n    'ください': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'お願': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    'です': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            sys.__reisetu++;\n        },\n        return_none: true\n    },\n    '拝啓': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu = 0;\n        },\n        return_none: true\n    },\n    '敬具': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.__reisetu += 100; // bonus point\n        },\n        return_none: true\n    },\n    '礼節レベル取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__reisetu) {\n                sys.__reisetu = 0;\n            }\n            return sys.__reisetu;\n        }\n    },\n    // @特殊命令\n    'JS実行': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        fn: function (src, sys) {\n            // [メモ] ↑のsys は eval の中でも有効なので消さない!!\n            // https://github.com/kujirahand/nadesiko3/issues/1237\n            return eval(src); // eslint-disable-line\n        }\n    },\n    'JSオブジェクト取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (name, sys) {\n            return sys.__findVar(name, null);\n        }\n    },\n    'JS関数実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        fn: function (name, args) {\n            // nameが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof name === 'string') {\n                name = eval(name);\n            }\n            if (typeof name !== 'function') {\n                throw new Error('JS関数取得で実行できません。');\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            // eslint-disable-next-line prefer-spread\n            return name.apply(null, args);\n        }\n    },\n    'ASYNC': {\n        type: 'func',\n        josi: [],\n        asyncFn: true,\n        fn: async function () {\n            // empty\n        },\n        return_none: true\n    },\n    'AWAIT実行': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        asyncFn: true,\n        fn: async function (f, args, sys) {\n            // nameが文字列ならevalして関数を得る\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, 'AWAIT実行');\n            }\n            if (!(f instanceof Function)) {\n                throw new Error('『AWAIT実行』の第一引数はなでしこ関数名かFunction型で指定してください。');\n            }\n            // 実行\n            return await f(...args);\n        }\n    },\n    'JSメソッド実行': {\n        type: 'func',\n        josi: [['の'], ['を'], ['で']],\n        fn: function (obj, m, args) {\n            // objが文字列ならevalして関数を得る\n            // eslint-disable-next-line no-eval\n            if (typeof obj === 'string') {\n                obj = eval(obj);\n            }\n            if (typeof obj !== 'object') {\n                throw new Error('JSオブジェクトを取得できませんでした。');\n            }\n            // method を求める\n            if (typeof m !== 'function') {\n                m = obj[m];\n            }\n            // argsがArrayでなければArrayに変換する\n            if (!(args instanceof Array)) {\n                args = [args];\n            }\n            // 実行\n            return m.apply(obj, args);\n        }\n    },\n    'ナデシコ': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: false,\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ」は利用できません。');\n            }\n            sys.__varslist[0]['表示ログ'] = '';\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetLog: true });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    'ナデシコ続': {\n        type: 'func',\n        josi: [['を', 'で']],\n        fn: function (code, sys) {\n            if (sys.__genMode === '非同期モード') {\n                throw new Error('非同期モードでは「ナデシコ続」は利用できません。');\n            }\n            sys.__self.runEx(code, sys.__modName, { resetEnv: false, resetAll: false });\n            const out = sys.__varslist[0]['表示ログ'] + '';\n            if (out) {\n                sys.logger.trace(out);\n            }\n            return out;\n        }\n    },\n    '実行': {\n        type: 'func',\n        josi: [['を', 'に', 'で']],\n        pure: false,\n        fn: function (f, sys) {\n            // #938 の規則に従って処理\n            // 引数が関数なら実行\n            if (typeof f === 'function') {\n                return f(sys);\n            }\n            // 文字列なら関数に変換できるか判定して実行\n            if (typeof f === 'string') {\n                const tf = sys.__findFunc(f, '実行');\n                if (typeof tf === 'function') {\n                    return tf(sys);\n                }\n            }\n            // それ以外ならそのまま値を返す\n            return f;\n        }\n    },\n    '実行時間計測': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (f, sys) {\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '実行時間計測');\n            }\n            //\n            if (performance && performance.now) {\n                const t1 = performance.now();\n                f(sys);\n                const t2 = performance.now();\n                return (t2 - t1);\n            }\n            else {\n                const t1 = Date.now();\n                f(sys);\n                const t2 = Date.now();\n                return (t2 - t1);\n            }\n        }\n    },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            sys.__v0.forceClose = true;\n            if (!sys.__v0.useDebug) {\n                throw new Error('__終わる__');\n            }\n        }\n    },\n    // @型変換\n    '変数型確認': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    'TYPEOF': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (typeof v);\n        }\n    },\n    '文字列変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    'TOSTR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return String(v);\n        }\n    },\n    '整数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'TOINT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    '実数変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'TOFLOAT': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'INT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v);\n        }\n    },\n    'FLOAT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return parseFloat(v);\n        }\n    },\n    'NAN判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return isNaN(v);\n        }\n    },\n    '非数判定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            // https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n            return Number.isNaN(v);\n        }\n    },\n    'HEX': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return parseInt(a).toString(16);\n        }\n    },\n    '進数変換': {\n        type: 'func',\n        josi: [['を', 'の'], ['']],\n        pure: true,\n        fn: function (v, n) {\n            return parseInt(v).toString(n);\n        }\n    },\n    '二進': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v) {\n            return parseInt(v).toString(2);\n        }\n    },\n    '二進表示': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (v, sys) {\n            const s = parseInt(v).toString(2);\n            sys.__exec('表示', [s, sys]);\n        }\n    },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['の'], ['で']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + (parseInt('' + v).toString(16));\n                return v2.substring(v2.length - 2, v2.length);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        }\n    },\n    // @論理演算\n    '論理OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a || b);\n        }\n    },\n    '論理AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a && b);\n        }\n    },\n    '論理NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (!v) ? 1 : 0;\n        }\n    },\n    // @ビット演算\n    'OR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a | b);\n        }\n    },\n    'AND': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a & b);\n        }\n    },\n    'XOR': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return (a ^ b);\n        }\n    },\n    'NOT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (~v);\n        }\n    },\n    'SHIFT_L': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a << b);\n        }\n    },\n    'SHIFT_R': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >> b);\n        }\n    },\n    'SHIFT_UR': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            return (a >>> b);\n        }\n    },\n    // @文字列処理\n    '文字数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).length;\n            }\n            return Array.from(v).length;\n        }\n    },\n    '何文字目': {\n        type: 'func',\n        josi: [['で', 'の'], ['が']],\n        pure: true,\n        fn: function (s, a) {\n            return String(s).indexOf(a) + 1;\n        }\n    },\n    'CHR': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.fromCodePoint) {\n                return String.fromCharCode(v);\n            }\n            return String.fromCodePoint(v);\n        }\n    },\n    'ASC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            if (!String.prototype.codePointAt) {\n                return String(v).charCodeAt(0);\n            }\n            return String(v).codePointAt(0);\n        }\n    },\n    '文字挿入': {\n        type: 'func',\n        josi: [['で', 'の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, i, a) {\n            if (i <= 0) {\n                i = 1;\n            }\n            const ss = String(s);\n            const mae = ss.substring(0, i - 1);\n            const usi = ss.substring(i - 1);\n            return mae + a + usi;\n        }\n    },\n    '文字検索': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, b) {\n            let str = String(s);\n            str = str.substring(a);\n            const res = str.indexOf(b);\n            if (res === -1) {\n                return 0;\n            }\n            return res + 1 + a;\n        }\n    },\n    '追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a);\n        }\n    },\n    '一行追加': {\n        type: 'func',\n        josi: [['で', 'に', 'へ'], ['を']],\n        pure: true,\n        fn: function (s, a) {\n            if (s instanceof Array) {\n                s.push(a);\n                return s;\n            }\n            return String(s) + String(a) + '\\n';\n        }\n    },\n    '文字列分解': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (v) {\n            if (!Array.from) {\n                return String(v).split('');\n            }\n            return Array.from(v);\n        }\n    },\n    'リフレイン': {\n        type: 'func',\n        josi: [['を', 'の'], ['で']],\n        pure: true,\n        fn: function (v, cnt) {\n            let s = '';\n            for (let i = 0; i < cnt; i++) {\n                s += String(v);\n            }\n            return s;\n        }\n    },\n    '出現回数': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            return s.split(a).length - 1;\n        }\n    },\n    'MID': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    '文字抜出': {\n        type: 'func',\n        josi: [['で', 'の'], ['から'], ['を', '']],\n        pure: true,\n        fn: function (s, a, cnt) {\n            cnt = cnt || 1;\n            return (String(s).substring(a - 1, a + cnt - 1));\n        }\n    },\n    'LEFT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    '文字左部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            return (String(s).substring(0, cnt));\n        }\n    },\n    'RIGHT': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '文字右部分': {\n        type: 'func',\n        josi: [['の', 'で'], ['だけ', '']],\n        pure: true,\n        fn: function (s, cnt) {\n            s = '' + s;\n            return (s.substring(s.length - cnt, s.length));\n        }\n    },\n    '区切': {\n        type: 'func',\n        josi: [['の', 'を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            return ('' + s).split('' + a);\n        }\n    },\n    '文字列分割': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            s = '' + s;\n            a = '' + a;\n            const i = s.indexOf(a);\n            if (i < 0) {\n                return [s];\n            }\n            return [s.substring(0, i), s.substring(i + a.length)];\n        }\n    },\n    '切取': {\n        type: 'func',\n        josi: [['から', 'の'], ['まで', 'を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            s = String(s);\n            const i = s.indexOf(a);\n            if (i < 0) {\n                sys.__v0['対象'] = '';\n                return s;\n            }\n            sys.__v0['対象'] = s.substring(i + a.length);\n            return s.substring(0, i);\n        }\n    },\n    '文字削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['だけ', 'を', '']],\n        pure: true,\n        fn: function (s, a, b) {\n            s = '' + s;\n            const mae = s.substring(0, a - 1);\n            const usi = s.substring((a - 1 + b));\n            return mae + usi;\n        }\n    },\n    // @置換・トリム\n    '置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を', 'から'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            return String(s).split(a).join(b);\n        }\n    },\n    '単置換': {\n        type: 'func',\n        josi: [['の', 'で'], ['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            // replaceは最初の一度だけ置換する\n            return String(s).replace(a, b);\n        }\n    },\n    'トリム': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    '空白除去': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            s = String(s).replace(/^\\s+/, '').replace(/\\s+$/, '');\n            return s;\n        }\n    },\n    // @文字変換\n    '大文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toUpperCase();\n        }\n    },\n    '小文字変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).toLowerCase();\n        }\n    },\n    '平仮名変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const kanaToHira = (str) => {\n                return String(str).replace(/[\\u30a1-\\u30f6]/g, function (m) {\n                    const chr = m.charCodeAt(0) - 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return kanaToHira('' + s);\n        }\n    },\n    'カタカナ変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            const hiraToKana = (str) => {\n                return String(str).replace(/[\\u3041-\\u3096]/g, function (m) {\n                    const chr = m.charCodeAt(0) + 0x60;\n                    return String.fromCharCode(chr);\n                });\n            };\n            return hiraToKana('' + s);\n        }\n    },\n    '英数全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[A-Za-z0-9]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[Ａ-Ｚａ-ｚ０-９]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    '英数記号全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\x20-\\x7F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) + 0xFEE0);\n            });\n        }\n    },\n    '英数記号半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s) {\n            return String(s).replace(/[\\uFF00-\\uFF5F]/g, function (v) {\n                return String.fromCharCode(v.charCodeAt(0) - 0xFEE0);\n            });\n        }\n    },\n    'カタカナ全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            let str = '';\n            let i = 0;\n            while (i < s.length) {\n                // 濁点の変換\n                const c2 = s.substring(i, i + 2);\n                const n2 = han2.indexOf(c2);\n                if (n2 >= 0) {\n                    str += zen2.charAt(n2 / 2);\n                    i += 2;\n                    continue;\n                }\n                // 濁点以外の変換\n                const c = s.charAt(i);\n                const n = han1.indexOf(c);\n                if (n >= 0) {\n                    str += zen1.charAt(n);\n                    i++;\n                    continue;\n                }\n                str += c;\n                i++;\n            }\n            return str;\n        }\n    },\n    'カタカナ半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            // 半角カタカナ\n            const zen1 = sys.__v0['全角カナ一覧'];\n            const han1 = sys.__v0['半角カナ一覧'];\n            const zen2 = sys.__v0['全角カナ濁音一覧'];\n            const han2 = sys.__v0['半角カナ濁音一覧'];\n            return s.split('').map((c) => {\n                const i = zen1.indexOf(c);\n                if (i >= 0) {\n                    return han1.charAt(i);\n                }\n                const j = zen2.indexOf(c);\n                if (j >= 0) {\n                    return han2.substring(j * 2, j * 2 + 2);\n                }\n                return c;\n            }).join('');\n        }\n    },\n    '全角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ全角変換', [result, sys]);\n            result = sys.__exec('英数記号全角変換', [result, sys]);\n            return result;\n        }\n    },\n    '半角変換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (s, sys) {\n            let result = s;\n            result = sys.__exec('カタカナ半角変換', [result, sys]);\n            result = sys.__exec('英数記号半角変換', [result, sys]);\n            return result;\n        }\n    },\n    '全角カナ一覧': { type: 'const', value: 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' },\n    '全角カナ濁音一覧': { type: 'const', value: 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' },\n    '半角カナ一覧': { type: 'const', value: 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' },\n    '半角カナ濁音一覧': { type: 'const', value: 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' },\n    // @JSON\n    'JSONエンコード': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v);\n        }\n    },\n    'JSONエンコード整形': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return JSON.stringify(v, null, 2);\n        }\n    },\n    'JSONデコード': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (s) {\n            return JSON.parse(s);\n        }\n    },\n    // @正規表現\n    '正規表現マッチ': {\n        type: 'func',\n        josi: [['を', 'が'], ['で', 'に']],\n        pure: true,\n        fn: function (a, b, sys) {\n            let re;\n            const f = ('' + b).match(/^\\/(.+)\\/([a-zA-Z]*)$/);\n            // パターンがない場合\n            if (f === null) {\n                re = new RegExp(b, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            const sa = sys.__varslist[0]['抽出文字列'] = [];\n            const m = String(a).match(re);\n            let result = m;\n            if (re.global) {\n                // no groups\n            }\n            else if (m) {\n                // has group?\n                if (m.length > 0) {\n                    result = m[0];\n                    for (let i = 1; i < m.length; i++) {\n                        sa[i - 1] = m[i];\n                    }\n                }\n            }\n            return result;\n        }\n    },\n    '抽出文字列': { type: 'const', value: [] },\n    '正規表現置換': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['で', 'に', 'へ']],\n        pure: true,\n        fn: function (s, a, b) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).replace(re, b);\n        }\n    },\n    '正規表現区切': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (s, a) {\n            let re;\n            const f = a.match(/^\\/(.+)\\/([a-zA-Z]*)/);\n            if (f === null) {\n                re = new RegExp(a, 'g');\n            }\n            else {\n                re = new RegExp(f[1], f[2]);\n            }\n            return String(s).split(re);\n        }\n    },\n    // @指定形式\n    '通貨形式': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return String(v).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\n        }\n    },\n    'ゼロ埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = '0';\n            for (let i = 0; i < a; i++) {\n                z += '0';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    '空白埋': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (v, a) {\n            v = String(v);\n            let z = ' ';\n            for (let i = 0; i < a; i++) {\n                z += ' ';\n            }\n            a = parseInt(a);\n            if (a < v.length) {\n                a = v.length;\n            }\n            const s = z + String(v);\n            return s.substring(s.length - a, s.length);\n        }\n    },\n    // @文字種類\n    'かなか判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x3041 && c <= 0x309F);\n        }\n    },\n    'カタカナ判定': {\n        type: 'func',\n        josi: [['を', 'の', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charCodeAt(0);\n            return (c >= 0x30A1 && c <= 0x30FA);\n        }\n    },\n    '数字判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const c = String(s).charAt(0);\n            return ((c >= '0' && c <= '9') || (c >= '０' && c <= '９'));\n        }\n    },\n    '数列判定': {\n        type: 'func',\n        josi: [['を', 'が']],\n        pure: true,\n        fn: function (s) {\n            const checkerRE = /^[+\\-＋－]?([0-9０-９]*)(([.．][0-9０-９]+)?|([.．][0-9０-９]+[eEｅＥ][+\\-＋－]?[0-9０-９]+)?)$/;\n            return String(s).match(checkerRE) !== null;\n        }\n    },\n    // @配列操作\n    '配列結合': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, s) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.join('' + s);\n            }\n            const a2 = String(a).split('\\n'); // 配列でなければ無理矢理改行で区切ってみる\n            return a2.join('' + s);\n        }\n    },\n    '配列検索': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, s) {\n            if (a instanceof Array) {\n                return a.indexOf(s);\n            } // 配列ならOK\n            return -1;\n        }\n    },\n    '配列要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.length;\n            } // 配列ならOK\n            if (a instanceof Object) {\n                return Object.keys(a).length;\n            }\n            return 1;\n        }\n    },\n    '要素数': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('配列要素数', [a]);\n        }\n    },\n    '配列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (a instanceof Array) {\n                return a.splice(i, 0, s);\n            } // 配列ならOK\n            throw new Error('『配列挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列一括挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, b) {\n            if (a instanceof Array && b instanceof Array) { // 配列ならOK\n                for (let j = 0; j < b.length; j++) {\n                    a.splice(i + j, 0, b[j]);\n                }\n                return a;\n            }\n            throw new Error('『配列一括挿入』で配列以外の要素への挿入。');\n        }\n    },\n    '配列ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.sort();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列数値ソート': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            // 配列ならOK\n            if (a instanceof Array) {\n                return a.sort((a, b) => {\n                    return parseFloat(a) - parseFloat(b);\n                });\n            }\n            throw new Error('『配列数値ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列カスタムソート': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: false,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列カスタムソート');\n            }\n            if (a instanceof Array) {\n                return a.sort(ufunc);\n            }\n            throw new Error('『配列カスタムソート』で配列以外が指定されました。');\n        }\n    },\n    '配列逆順': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.reverse();\n            } // 配列ならOK\n            throw new Error('『配列ソート』で配列以外が指定されました。');\n        }\n    },\n    '配列シャッフル': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) { // 配列ならOK\n                for (let i = a.length - 1; i > 0; i--) {\n                    const r = Math.floor(Math.random() * (i + 1));\n                    const tmp = a[i];\n                    a[i] = a[r];\n                    a[r] = tmp;\n                }\n                return a;\n            }\n            throw new Error('『配列シャッフル』で配列以外が指定されました。');\n        }\n    },\n    '配列削除': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: false,\n        fn: function (a, i, sys) {\n            return sys.__exec('配列切取', [a, i, sys]);\n        }\n    },\n    '配列切取': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            // 配列変数のとき\n            if (a instanceof Array) {\n                const b = a.splice(i, 1);\n                if (b instanceof Array) {\n                    return b[0];\n                } // 切り取った戻り値は必ずArrayになるので。\n                return null;\n            }\n            // 辞書型変数のとき\n            if (a instanceof Object && typeof (i) === 'string') { // 辞書型変数も許容\n                if (a[i]) {\n                    const old = a[i];\n                    delete a[i];\n                    return old;\n                }\n                return undefined;\n            }\n            throw new Error('『配列切取』で配列以外を指定。');\n        }\n    },\n    '配列取出': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, i, cnt) {\n            if (a instanceof Array) {\n                return a.splice(i, cnt);\n            }\n            throw new Error('『配列取出』で配列以外を指定。');\n        }\n    },\n    '配列ポップ': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                return a.pop();\n            }\n            throw new Error('『配列ポップ』で配列以外の処理。');\n        }\n    },\n    '配列プッシュ': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b, sys) {\n            return sys.__exec('配列追加', [a, b, sys]);\n        }\n    },\n    '配列追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) { // 配列ならOK\n                a.push(b);\n                return a;\n            }\n            throw new Error('『配列追加』で配列以外の処理。');\n        }\n    },\n    '配列複製': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列足': {\n        type: 'func',\n        josi: [['に', 'へ', 'と'], ['を']],\n        pure: true,\n        fn: function (a, b) {\n            if (a instanceof Array) {\n                return a.concat(b);\n            }\n            return JSON.parse(JSON.stringify(a));\n        }\n    },\n    '配列最大値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.max(x, y));\n        }\n    },\n    '配列最小値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a.reduce((x, y) => Math.min(x, y));\n        }\n    },\n    '配列合計': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (a instanceof Array) {\n                let v = 0;\n                a.forEach((n) => {\n                    const nn = parseFloat(n);\n                    if (isNaN(nn)) {\n                        return;\n                    }\n                    v += nn;\n                });\n                return v;\n            }\n            throw new Error('『配列合計』で配列変数以外の値が指定されました。');\n        }\n    },\n    '配列入替': {\n        type: 'func',\n        josi: [['の'], ['と'], ['を']],\n        pure: true,\n        fn: function (a, i, j) {\n            if (!(a instanceof Array)) {\n                throw new Error('『配列入替』の第1引数には配列を指定してください。');\n            }\n            const tmp = a[i];\n            a[i] = a[j];\n            a[j] = tmp;\n            return a;\n        }\n    },\n    '配列連番作成': {\n        type: 'func',\n        josi: [['から'], ['までの', 'まで', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = a; i <= b; i++) {\n                result.push(i);\n            }\n            return result;\n        }\n    },\n    '配列要素作成': {\n        type: 'func',\n        josi: [['を'], ['だけ']],\n        pure: true,\n        fn: function (a, b) {\n            const result = [];\n            for (let i = 0; i < b; i++) {\n                result.push(a);\n            }\n            return result;\n        }\n    },\n    '配列関数適用': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列関数適用');\n            }\n            const result = [];\n            for (const e of a) {\n                result.push(ufunc(e));\n            }\n            return result;\n        }\n    },\n    '配列マップ': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: true,\n        fn: function (f, a, sys) {\n            return sys.__exec('配列関数適用', [f, a, sys]);\n        }\n    },\n    '配列フィルタ': {\n        type: 'func',\n        josi: [['で', 'の'], ['を', 'について']],\n        pure: true,\n        fn: function (f, a, sys) {\n            let ufunc = f;\n            if (typeof f === 'string') {\n                ufunc = sys.__findFunc(f, '配列フィルタ');\n            }\n            const result = [];\n            for (const e of a) {\n                if (ufunc(e)) {\n                    result.push(e);\n                }\n            }\n            return result;\n        }\n    },\n    // @二次元配列処理\n    '表ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                if (ns === ms) {\n                    return 0;\n                }\n                else if (ns < ms) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n            });\n            return a;\n        }\n    },\n    '表数値ソート': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, no) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表数値ソート』には配列を指定する必要があります。');\n            }\n            a.sort((n, m) => {\n                const ns = n[no];\n                const ms = m[no];\n                return ns - ms;\n            });\n            return a;\n        }\n    },\n    '表ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => String(row[no]).indexOf(s) >= 0);\n        }\n    },\n    '表完全一致ピックアップ': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を', 'で']],\n        pure: true,\n        fn: function (a, no, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表完全ピックアップ』には配列を指定する必要があります。');\n            }\n            return a.filter((row) => row[no] === s);\n        }\n    },\n    '表検索': {\n        type: 'func',\n        josi: [['の'], ['で', 'に'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, row, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表検索』には配列を指定する必要があります。');\n            }\n            for (let i = row; i < a.length; i++) {\n                if (a[i][col] === s) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表列数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列数』には配列を指定する必要があります。');\n            }\n            let cols = 1;\n            for (let i = 0; i < a.length; i++) {\n                if (a[i].length > cols) {\n                    cols = a[i].length;\n                }\n            }\n            return cols;\n        }\n    },\n    '表行数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行数』には配列を指定する必要があります。');\n            }\n            return a.length;\n        }\n    },\n    '表行列交換': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表行列交換』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = (a[c][r] !== undefined) ? a[c][r] : '';\n                }\n            }\n            return res;\n        }\n    },\n    '表右回転': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (a, sys) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表右回転』には配列を指定する必要があります。');\n            }\n            const cols = sys.__exec('表列数', [a]);\n            const rows = a.length;\n            const res = [];\n            for (let r = 0; r < cols; r++) {\n                const row = [];\n                res.push(row);\n                for (let c = 0; c < rows; c++) {\n                    row[c] = a[rows - c - 1][r];\n                }\n            }\n            return res;\n        }\n    },\n    '表重複削除': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表重複削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            const keys = {};\n            for (let n = 0; n < a.length; n++) {\n                const k = a[n][i];\n                if (undefined === keys[k]) {\n                    keys[k] = true;\n                    res.push(a[n]);\n                }\n            }\n            return res;\n        }\n    },\n    '表列取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列取得』には配列を指定する必要があります。');\n            }\n            const res = a.map(row => row[i]);\n            return res;\n        }\n    },\n    '表列挿入': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (a, i, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列挿入』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row, idx) => {\n                let nr = [];\n                if (i > 0) {\n                    nr = nr.concat(row.slice(0, i));\n                }\n                nr.push(s[idx]);\n                nr = nr.concat(row.slice(i));\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列削除': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列削除』には配列を指定する必要があります。');\n            }\n            const res = [];\n            a.forEach((row) => {\n                const nr = row.slice(0);\n                nr.splice(i, 1);\n                res.push(nr);\n            });\n            return res;\n        }\n    },\n    '表列合計': {\n        type: 'func',\n        josi: [['の'], ['を', 'で']],\n        pure: true,\n        fn: function (a, i) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表列合計』には配列を指定する必要があります。');\n            }\n            let sum = 0;\n            a.forEach((row) => { sum += row[i]; });\n            return sum;\n        }\n    },\n    '表曖昧検索': {\n        type: 'func',\n        josi: [['の'], ['から'], ['で'], ['を']],\n        pure: true,\n        fn: function (a, row, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表曖昧検索』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            for (let i = row; i < a.length; i++) {\n                const line = a[i];\n                if (re.test(line[col])) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    },\n    '表正規表現ピックアップ': {\n        type: 'func',\n        josi: [['の', 'で'], ['から'], ['を']],\n        pure: true,\n        fn: function (a, col, s) {\n            if (!(a instanceof Array)) {\n                throw new Error('『表正規表現ピックアップ』には配列を指定する必要があります。');\n            }\n            const re = new RegExp(s);\n            const res = [];\n            for (let i = 0; i < a.length; i++) {\n                const row = a[i];\n                if (re.test(row[col])) {\n                    res.push(row.slice(0));\n                }\n            }\n            return res;\n        }\n    },\n    // @辞書型変数の操作\n    '辞書キー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const keys = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    keys.push(key);\n                }\n                return keys;\n            }\n            if (a instanceof Array) { // 配列なら数字を返す\n                for (let i = 0; i < a.length; i++) {\n                    keys.push(i);\n                }\n                return keys;\n            }\n            throw new Error('『辞書キー列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: true,\n        fn: function (a, key) {\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                if (key in a) {\n                    delete a[key];\n                }\n                return a;\n            }\n            throw new Error('『辞書キー削除』でハッシュ以外が与えられました。');\n        }\n    },\n    '辞書キー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @ハッシュ\n    'ハッシュキー列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (a, sys) {\n            return sys.__exec('辞書キー列挙', [a, sys]);\n        }\n    },\n    'ハッシュ内容列挙': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const body = [];\n            if (a instanceof Object) { // オブジェクトのキーを返す\n                for (const key in a) {\n                    body.push(a[key]);\n                }\n                return body;\n            }\n            throw new Error('『ハッシュ内容列挙』でハッシュ以外が与えられました。');\n        }\n    },\n    'ハッシュキー削除': {\n        type: 'func',\n        josi: [['から', 'の'], ['を']],\n        pure: false,\n        fn: function (a, key, sys) {\n            return sys.__exec('辞書キー削除', [a, key, sys]);\n        }\n    },\n    'ハッシュキー存在': {\n        type: 'func',\n        josi: [['の', 'に'], ['が']],\n        pure: true,\n        fn: function (a, key) {\n            return key in a;\n        }\n    },\n    // @タイマー\n    '秒待': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: function (n, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    // タイマーを仕掛ける\n                    const timerId = setTimeout(() => {\n                        // タイマー使用中リストに追加したIDを削除\n                        const i = sys.__timeout.indexOf(timerId);\n                        if (i >= 0) {\n                            sys.__timeout.splice(i, 1);\n                        }\n                        // Promiseを終了\n                        resolve();\n                    }, parseFloat(n) * 1000);\n                    // タイマー使用中リストに追加\n                    sys.__timeout.push(timerId);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        },\n        return_none: true\n    },\n    '秒待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒逐次待機': {\n        type: 'func',\n        josi: [['']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (n, sys) {\n            const p = sys.__exec('秒待', [n, sys]);\n            return await p;\n        },\n        return_none: true\n    },\n    '秒後': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒後');\n            }\n            // 1回限りのタイマーをセット\n            const timerId = setTimeout(() => {\n                // 使用中リストに追加したIDを削除\n                const i = sys.__timeout.indexOf(timerId);\n                if (i >= 0) {\n                    sys.__timeout.splice(i, 1);\n                }\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                try {\n                    f(timerId, sys);\n                }\n                catch (e) {\n                    let err = e;\n                    if (!(e instanceof NakoRuntimeError)) {\n                        err = new NakoRuntimeError(e, sys.__varslist[0].line);\n                    }\n                    sys.logger.error(err);\n                }\n            }, parseFloat(n) * 1000);\n            sys.__timeout.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒毎': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            // 文字列で指定された関数をオブジェクトに変換\n            if (typeof f === 'string') {\n                f = sys.__findFunc(f, '秒毎');\n            }\n            // タイマーをセット\n            const timerId = setInterval(() => {\n                if (sys.__genMode === '非同期モード') {\n                    sys.newenv = true;\n                }\n                f(timerId, sys);\n            }, parseFloat(n) * 1000);\n            // タイマーIDを追加\n            sys.__interval.unshift(timerId);\n            sys.__v0['対象'] = timerId;\n            return timerId;\n        }\n    },\n    '秒タイマー開始時': {\n        type: 'func',\n        josi: [['を'], ['']],\n        pure: false,\n        fn: function (f, n, sys) {\n            return sys.__exec('秒毎', [f, n, sys]);\n        }\n    },\n    'タイマー停止': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (timerId, sys) {\n            const i = sys.__interval.indexOf(timerId);\n            if (i >= 0) {\n                sys.__interval.splice(i, 1);\n                clearInterval(timerId);\n                return true;\n            }\n            const j = sys.__timeout.indexOf(timerId);\n            if (j >= 0) {\n                sys.__timeout.splice(j, 1);\n                clearTimeout(timerId);\n                return true;\n            }\n            return false;\n        },\n        return_none: false\n    },\n    '全タイマー停止': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // clearInterval\n            for (let i = 0; i < sys.__interval.length; i++) {\n                const timerId = sys.__interval[i];\n                clearInterval(timerId);\n            }\n            sys.__interval = [];\n            // clearTimeout\n            for (let i = 0; i < sys.__timeout.length; i++) {\n                const timerId = sys.__timeout[i];\n                clearTimeout(timerId);\n            }\n            sys.__timeout = [];\n        },\n        return_none: true\n    },\n    // @日時処理(簡易)\n    '元号データ': { type: 'const', value: [{ '元号': '令和', '改元日': '2019/05/01' }, { '元号': '平成', '改元日': '1989/01/08' }, { '元号': '昭和', '改元日': '1926/12/25' }, { '元号': '大正', '改元日': '1912/07/30' }, { '元号': '明治', '改元日': '1868/10/23' }] },\n    '今': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const z2 = (n) => {\n                n = '00' + n;\n                return n.substring(n.length - 2, n.length);\n            };\n            const t = new Date();\n            return z2(t.getHours()) + ':' + z2(t.getMinutes()) + ':' + z2(t.getSeconds());\n        }\n    },\n    'システム時間': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return Math.floor(now.getTime() / 1000);\n        }\n    },\n    'システム時間ミリ秒': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const now = new Date();\n            return now.getTime();\n        }\n    },\n    '今日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            return sys.__formatDate(new Date());\n        }\n    },\n    '明日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() + (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '昨日': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const t = Date.now() - (24 * 60 * 60 * 1000);\n            return sys.__formatDate(new Date(t));\n        }\n    },\n    '今年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear();\n        }\n    },\n    '来年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() + 1;\n        }\n    },\n    '去年': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getFullYear() - 1;\n        }\n    },\n    '今月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 1;\n        }\n    },\n    '来月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth() + 2;\n        }\n    },\n    '先月': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (new Date()).getMonth();\n        }\n    },\n    '曜日': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return '日月火水木金土'.charAt(d.getDay() % 7);\n        }\n    },\n    '曜日番号取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s) {\n            const a = s.split('/');\n            const t = new Date(a[0], a[1] - 1, a[2]);\n            return t.getDay();\n        }\n    },\n    'UNIXTIME変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    'UNIX時間変換': {\n        type: 'func',\n        josi: [['の', 'を', 'から']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            return d.getTime() / 1000;\n        }\n    },\n    '日時変換': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (tm, sys) {\n            const t = tm * 1000;\n            return sys.__formatDateTime(new Date(t), '2022/01/01 00:00:00');\n        }\n    },\n    '日時書式変換': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (tm, fmt, sys) {\n            const t = sys.__str2date(tm);\n            fmt = fmt.replace(/(YYYY|ccc|WWW|MMM|YY|MM|DD|HH|mm|ss|[MDHmsW])/g, (m) => {\n                switch (m) {\n                    case 'YYYY': return t.getFullYear();\n                    case 'YY': return ('' + t.getFullYear()).substring(2);\n                    case 'MM': return sys.__zero2(t.getMonth() + 1);\n                    case 'DD': return sys.__zero2(t.getDate());\n                    case 'M': return (t.getMonth() + 1);\n                    case 'D': return (t.getDate());\n                    case 'HH': return sys.__zero2(t.getHours());\n                    case 'mm': return sys.__zero2(t.getMinutes());\n                    case 'ss': return sys.__zero2(t.getSeconds());\n                    case 'ccc': return sys.__zero(t.getMilliseconds(), 3);\n                    case 'H': return (t.getHours());\n                    case 'm': return (t.getMinutes());\n                    case 's': return (t.getSeconds());\n                    case 'W': return '日月火水木金土'.charAt(t.getDay() % 7);\n                    case 'WWW': return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][t.getDay() % 7];\n                    case 'MMM': return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][t.getMonth()];\n                }\n                return m;\n            });\n            return fmt;\n        }\n    },\n    '和暦変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (s, sys) {\n            const d = sys.__str2date(s);\n            const t = d.getTime();\n            for (const era of sys.__v0['元号データ']) {\n                const gengo = era['元号'];\n                const d2 = sys.__str2date(era['改元日']);\n                const t2 = d2.getTime();\n                if (t2 <= t) {\n                    let y = (d.getFullYear() - d2.getFullYear()) + 1;\n                    if (y === 1) {\n                        y = '元';\n                    }\n                    return gengo + y + '年' + sys.__zero2(d.getMonth() + 1) + '月' + sys.__zero2(d.getDate()) + '日';\n                }\n            }\n            throw new Error('『和暦変換』は明示以前の日付には対応していません。');\n        }\n    },\n    '年数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return (t2.getFullYear() - t1.getFullYear());\n        }\n    },\n    '月数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = sys.__str2date(a);\n            const t2 = sys.__str2date(b);\n            return ((t2.getFullYear() * 12 + t2.getMonth()) -\n                (t1.getFullYear() * 12 + t1.getMonth()));\n        }\n    },\n    '日数差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const days = Math.ceil((t2 - t1) / (60 * 60 * 24));\n            return days;\n        }\n    },\n    '時間差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const hours = Math.ceil((t2 - t1) / (60 * 60));\n            return hours;\n        }\n    },\n    '分差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const min = Math.ceil((t2 - t1) / (60));\n            return min;\n        }\n    },\n    '秒差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの']],\n        pure: true,\n        fn: function (a, b, sys) {\n            const t1 = Math.ceil(sys.__str2date(a).getTime() / 1000);\n            const t2 = Math.ceil(sys.__str2date(b).getTime() / 1000);\n            const sec = Math.ceil((t2 - t1));\n            return sec;\n        }\n    },\n    '日時差': {\n        type: 'func',\n        josi: [['と', 'から'], ['の', 'までの'], ['による']],\n        pure: true,\n        fn: function (a, b, unit, sys) {\n            switch (unit) {\n                case '年': return sys.__exec('年数差', [a, b, sys]);\n                case '月': return sys.__exec('月数差', [a, b, sys]);\n                case '日': return sys.__exec('日数差', [a, b, sys]);\n                case '時間': return sys.__exec('時間差', [a, b, sys]);\n                case '分': return sys.__exec('分差', [a, b, sys]);\n                case '秒': return sys.__exec('秒差', [a, b, sys]);\n            }\n            throw new Error('『日時差』で不明な単位です。');\n        }\n    },\n    '時間加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const op = a.charAt(0);\n            if (op === '-' || op === '+') {\n                a = a.substring(1);\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + ':0:0').split(':');\n            let sec = parseInt(aa[0]) * 60 * 60 +\n                parseInt(aa[1]) * 60 +\n                parseInt(aa[2]);\n            if (op === '-') {\n                sec *= -1;\n            }\n            const rd = new Date(d.getTime() + (sec * 1000));\n            return sys.__formatDateTime(rd, s);\n        }\n    },\n    '日付加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            let op = 1;\n            const opc = a.charAt(0);\n            if (opc === '-' || opc === '+') {\n                a = a.substring(1);\n                if (opc === '-') {\n                    op *= -1;\n                }\n            }\n            const d = sys.__str2date(s);\n            const aa = (a + '/0/0').split('/');\n            const addY = parseInt(aa[0]) * op;\n            const addM = parseInt(aa[1]) * op;\n            const addD = parseInt(aa[2]) * op;\n            d.setFullYear(d.getFullYear() + addY);\n            d.setMonth(d.getMonth() + addM);\n            d.setDate(d.getDate() + addD);\n            return sys.__formatDateTime(d, s);\n        }\n    },\n    '日時加算': {\n        type: 'func',\n        josi: [['に'], ['を']],\n        pure: true,\n        fn: function (s, a, sys) {\n            const r = ('' + a).match(/([+|-]?)(\\d+)(年|ヶ月|日|週間|時間|分|秒)$/);\n            if (!r) {\n                throw new Error('『日付加算』は『(+｜-)1(年|ヶ月|日|時間|分|秒)』の書式で指定します。');\n            }\n            switch (r[3]) {\n                case '年': return sys.__exec('日付加算', [s, `${r[1]}${r[2]}/0/0`, sys]);\n                case 'ヶ月': return sys.__exec('日付加算', [s, `${r[1]}0/${r[2]}/0`, sys]);\n                case '週間': return sys.__exec('日付加算', [s, `${r[1]}0/0/${parseInt(r[2]) * 7}`, sys]);\n                case '日': return sys.__exec('日付加算', [s, `${r[1]}0/0/${r[2]}`, sys]);\n                case '時間': return sys.__exec('時間加算', [s, `${r[1]}${r[2]}:0:0`, sys]);\n                case '分': return sys.__exec('時間加算', [s, `${r[1]}0:${r[2]}:0`, sys]);\n                case '秒': return sys.__exec('時間加算', [s, `${r[1]}0:0:${r[2]}`, sys]);\n            }\n        }\n    },\n    '時間ミリ秒取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            if (performance && performance.now) {\n                return performance.now();\n            }\n            else if (Date.now) {\n                return Date.now();\n            }\n            else {\n                const now = new Date();\n                return now.getTime();\n            }\n        }\n    },\n    // @デバッグ支援\n    'エラー発生': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s) {\n            throw new Error(s);\n        }\n    },\n    '__DEBUG': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            sys.isDebug = true;\n            console.log(sys);\n        }\n    },\n    '__DEBUG強制待機': { type: 'const', value: 0 },\n    '__DEBUGブレイクポイント一覧': { type: 'const', value: [] },\n    '__DEBUG待機フラグ': { type: 'const', value: 0 },\n    '__DEBUG_BP_WAIT': {\n        type: 'func',\n        josi: [['で']],\n        pure: true,\n        asyncFn: true,\n        fn: function (curLine, sys) {\n            return new Promise((resolve) => {\n                const breakpoints = sys.__v0['__DEBUGブレイクポイント一覧'];\n                const forceLine = sys.__v0['__DEBUG強制待機'];\n                sys.__v0['__DEBUG強制待機'] = 0;\n                // ブレイクポイント or __DEBUG強制待機 が指定されたか？\n                if (breakpoints.indexOf(curLine) >= 0 || forceLine) {\n                    console.log('@STOP!!!! cur=', curLine);\n                    const timerId = setInterval(() => {\n                        if (sys.__v0['__DEBUG待機フラグ'] === 1) {\n                            sys.__v0['__DEBUG待機フラグ'] = 0;\n                            clearInterval(timerId);\n                            resolve(curLine);\n                        }\n                    }, 500);\n                }\n                else {\n                    resolve(curLine);\n                }\n            });\n        }\n    },\n    'グローバル関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[1];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const vars = sys.__varslist[0];\n            const res = [];\n            for (const key in vars) {\n                if (Object.prototype.hasOwnProperty.call(vars, key)) {\n                    res.push(key);\n                }\n            }\n            return res;\n        }\n    },\n    'システム関数存在': {\n        type: 'func',\n        josi: [['が', 'の']],\n        pure: true,\n        fn: function (fname, sys) {\n            return (typeof sys.__v0[fname] !== 'undefined');\n        }\n    },\n    'プラグイン一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.pluginfiles) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    'モジュール一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const a = [];\n            for (const f in sys.__module) {\n                a.push(f);\n            }\n            return a;\n        }\n    },\n    '助詞一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            return new Promise((resolve, reject) => {\n                import('./nako_josi_list.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    resolve(obj.josiList);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    '予約語一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function () {\n            // const words = require('./nako_reserved_words.mjs')\n            return new Promise((resolve, reject) => {\n                import('./nako_reserved_words.mjs')\n                    .then((mod) => {\n                    const obj = Object.assign({}, mod);\n                    const w = [];\n                    for (const key in obj.default) {\n                        w.push(key);\n                    }\n                    resolve(w);\n                })\n                    .catch((err) => {\n                    reject(err);\n                });\n            });\n        }\n    },\n    // @プラグイン管理\n    'プラグイン名': { type: 'const', value: 'メイン' },\n    'プラグイン名設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            sys.__v0['プラグイン名'] = s;\n        },\n        return_none: true\n    },\n    '名前空間': { type: 'const', value: '' },\n    '名前空間設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (s, sys) {\n            // push namespace\n            sys.__namespaceList.push([sys.__v0['名前空間'], sys.__v0['プラグイン名']]);\n            sys.__v0['名前空間'] = s;\n        },\n        return_none: true\n    },\n    '名前空間ポップ': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // pop namespace\n            const a = sys.__namespaceList.pop();\n            if (a) {\n                sys.__v0['名前空間'] = a[0];\n                sys.__v0['プラグイン名'] = a[1];\n            }\n        },\n        return_none: true\n    },\n    // @URLエンコードとパラメータ\n    'URLエンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            return encodeURIComponent(text);\n        }\n    },\n    'URLデコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            return decodeURIComponent(text);\n        }\n    },\n    'URLパラメータ解析': {\n        type: 'func',\n        josi: [['を', 'の', 'から']],\n        pure: true,\n        fn: function (url, sys) {\n            const res = {};\n            if (typeof url !== 'string') {\n                return res;\n            }\n            const p = url.split('?');\n            if (p.length <= 1) {\n                return res;\n            }\n            const params = p[1].split('&');\n            for (const line of params) {\n                const line2 = line + '=';\n                const kv = line2.split('=');\n                const k = sys.__exec('URLデコード', [kv[0]]);\n                res[k] = sys.__exec('URLデコード', [kv[1]]);\n            }\n            return res;\n        }\n    },\n    // @BASE64\n    'BASE64エンコード': {\n        type: 'func',\n        josi: [['を', 'から']],\n        pure: true,\n        fn: function (text) {\n            // browser?\n            if (typeof (window) !== 'undefined' && window.btoa) {\n                const u8a = new TextEncoder().encode(text);\n                const utf8str = String.fromCharCode.apply(null, u8a);\n                return btoa(utf8str);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text).toString('base64');\n            }\n            throw new Error('『BASE64エンコード』は利用できません。');\n        }\n    },\n    'BASE64デコード': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (text) {\n            if (typeof (window) !== 'undefined' && window.atob) {\n                const decodedUtf8str = atob(text);\n                const dec = Array.prototype.map.call(decodedUtf8str, c => c.charCodeAt());\n                const decodedArray = new Uint8Array(dec);\n                return new TextDecoder('UTF-8').decode(decodedArray);\n            }\n            // Node?\n            if (typeof (Buffer) !== 'undefined') {\n                return Buffer.from(text, 'base64').toString();\n            }\n            throw new Error('『BASE64デコード』は利用できません。');\n        }\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable quote-props */\nexport const opPriority = {\n    // and or\n    'and': 1,\n    'or': 1,\n    // compare\n    'eq': 2,\n    'noteq': 2,\n    '===': 2,\n    '!==': 2,\n    'gt': 2,\n    'gteq': 2,\n    'lt': 2,\n    'lteq': 2,\n    '&': 3,\n    // + - << >> >>>\n    '+': 4,\n    '-': 4,\n    'shift_l': 4,\n    'shift_r': 4,\n    'shift_r0': 4,\n    // * /\n    '*': 5,\n    '/': 5,\n    '÷': 5,\n    '÷÷': 5,\n    '%': 5,\n    // ^\n    '^': 6,\n    '**': 6\n};\nexport const RenbunJosi = [\n    'いて', 'えて', 'きて', 'けて', 'して', 'って', 'にて', 'みて', 'めて', 'ねて', 'には', 'んで'\n];\nexport const operatorList = [];\nfor (const key in opPriority) {\n    operatorList.push(key);\n}\n","/**\n * なでしこ3 の TypeScript のための型定義\n */\nexport function NewEmptyToken(type = '?', value = '', indent = -1, line = 0, file = 'main.nako3') {\n    return {\n        type,\n        value,\n        indent,\n        line,\n        column: 0,\n        file,\n        josi: ''\n    };\n}\n","/**\n * なでしこ3で行頭インデントに使える文字とインデントカウント数\n */\nexport function isIndentChars(ch) {\n    const code = ch.charCodeAt(0);\n    // 特別なコード\n    if (ch === '\\t') {\n        return 4;\n    }\n    if (ch === ' ' || ch === '|') {\n        return 1;\n    }\n    if (ch === '・' || ch === '　') {\n        return 2;\n    }\n    if (ch === '⏋' || ch === '⏌') {\n        return 2;\n    } // 0x23CB, 0x23CC\n    // 罫線から --- https://github.com/kujirahand/unicode-sheets/blob/main/box-drawing.md\n    if (code >= 0x2500 && code <= 0x257F) {\n        return 2;\n    }\n    // 記号から --- https://github.com/kujirahand/unicode-sheets/blob/main/misc-technical.md\n    if ((code >= 0x23A0 && code <= 0x23AF) ||\n        (code >= 0x23B8 && code <= 0x23BF)) {\n        return 2;\n    }\n    return 0;\n}\n","/**\n * なでしこ3字句解析のためのルール\n */\nimport { josiRE, removeJosiMap } from './nako_josi_list.mjs';\nconst kanakanji = /^[\\u3005\\u4E00-\\u9FCF_a-zA-Z0-9ァ-ヶー\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]+/;\nconst hira = /^[ぁ-ん]/;\nconst allHiragana = /^[ぁ-ん]+$/;\nconst wordHasIjoIka = /^.+(以上|以下|超|未満)$/;\nconst wordSpecial = /^(かつ|または)/;\nconst errorRead = (ch) => {\n    return function () { throw new Error('突然の『' + ch + '』があります。'); };\n};\nexport const unitRE = /^(円|ドル|元|歩|㎡|坪|度|℃|°|個|つ|本|冊|才|歳|匹|枚|皿|セット|羽|人|件|行|列|機|品|m|mm|cm|km|g|kg|t|px|dot|pt|em|b|mb|kb|gb)/;\n/** トークンに区切るルールの一覧 */\nexport const rules = [\n    // 上から順にマッチさせていく\n    { name: 'ここまで', pattern: /^;;;/ },\n    { name: 'eol', pattern: /^\\n/ },\n    { name: 'eol', pattern: /^;/ },\n    // eslint-disable-next-line no-control-regex\n    { name: 'space', pattern: /^(\\x20|\\x09|・|⎿ |└|｜)+/ },\n    { name: 'comma', pattern: /^,/ },\n    { name: 'line_comment', pattern: /^#[^\\n]*/ },\n    { name: 'line_comment', pattern: /^\\/\\/[^\\n]*/ },\n    { name: 'range_comment', pattern: /^\\/\\*/, cbParser: cbRangeComment },\n    { name: 'def_test', pattern: /^●テスト:/ },\n    { name: 'def_func', pattern: /^●/ },\n    // 数値の判定 --- この後nako_lexerにて単位を読む処理が入る(#994)\n    { name: 'number', pattern: /^0[xX][0-9a-fA-F]+(_[0-9a-fA-F]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[oO][0-7]+(_[0-7]+)*/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^0[bB][0-1]+(_[0-1]+)*/, readJosi: true, cb: parseNumber },\n    // 下の三つは小数点が挟まっている場合、小数点から始まっている場合、小数点がない場合の十進法の数値にマッチします\n    { name: 'number', pattern: /^\\d+(_\\d+)*\\.(\\d+(_\\d+)*)?([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\.\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'number', pattern: /^\\d+(_\\d+)*([eE][+|-]?\\d+(_\\d+)*)?/, readJosi: true, cb: parseNumber },\n    { name: 'ここから', pattern: /^(ここから),?/ },\n    { name: 'ここまで', pattern: /^(ここまで|💧)/ },\n    { name: 'もし', pattern: /^もしも?/ },\n    // 「ならば」は助詞として定義している\n    { name: '違えば', pattern: /^違(えば)?/ },\n    // 「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」「条件分岐」などは NakoLexer._replaceWord で word から変換\n    // @see nako_reserved_words.js\n    { name: 'shift_r0', pattern: /^>>>/ },\n    { name: 'shift_r', pattern: /^>>/ },\n    { name: 'shift_l', pattern: /^<</ },\n    { name: '===', pattern: /^===/ },\n    { name: '!==', pattern: /^!==/ },\n    { name: 'gteq', pattern: /^(≧|>=|=>)/ },\n    { name: 'lteq', pattern: /^(≦|<=|=<)/ },\n    { name: 'noteq', pattern: /^(≠|<>|!=)/ },\n    { name: '←', pattern: /^(←|<--)/ },\n    { name: 'eq', pattern: /^(==|🟰🟰)/ },\n    { name: 'eq', pattern: /^(=|🟰)/ },\n    { name: 'line_comment', pattern: /^(!|💡)(インデント構文|ここまでだるい|DNCLモード|DNCL2モード|DNCL2)[^\\n]*/ },\n    { name: 'not', pattern: /^(!|💡)/ },\n    { name: 'gt', pattern: /^>/ },\n    { name: 'lt', pattern: /^</ },\n    { name: 'and', pattern: /^(かつ|&&)/ },\n    { name: 'or', pattern: /^(または|或いは|あるいは|\\|\\|)/ },\n    { name: '@', pattern: /^@/ },\n    { name: '+', pattern: /^\\+/ },\n    { name: '-', pattern: /^-/ },\n    { name: '**', pattern: /^(××|\\*\\*)/ },\n    { name: '*', pattern: /^(×|\\*)/ },\n    { name: '÷÷', pattern: /^÷÷/ },\n    { name: '÷', pattern: /^(÷|\\/)/ },\n    { name: '%', pattern: /^%/ },\n    { name: '^', pattern: /^\\^/ },\n    { name: '&', pattern: /^&/ },\n    { name: '[', pattern: /^\\[/ },\n    { name: ']', pattern: /^]/, readJosi: true },\n    { name: '(', pattern: /^\\(/ },\n    { name: ')', pattern: /^\\)/, readJosi: true },\n    { name: '|', pattern: /^\\|/ },\n    { name: 'string', pattern: /^🌿/, cbParser: src => cbString('🌿', '🌿', src) },\n    { name: 'string_ex', pattern: /^🌴/, cbParser: src => cbString('🌴', '🌴', src) },\n    { name: 'string_ex', pattern: /^「/, cbParser: src => cbString('「', '」', src) },\n    { name: 'string', pattern: /^『/, cbParser: src => cbString('『', '』', src) },\n    { name: 'string_ex', pattern: /^“/, cbParser: src => cbString('“', '”', src) },\n    { name: 'string_ex', pattern: /^\"/, cbParser: src => cbString('\"', '\"', src) },\n    { name: 'string', pattern: /^'/, cbParser: src => cbString('\\'', '\\'', src) },\n    { name: '」', pattern: /^」/, cbParser: errorRead('」') },\n    { name: '』', pattern: /^』/, cbParser: errorRead('』') },\n    { name: 'func', pattern: /^\\{関数\\},?/ },\n    { name: '{', pattern: /^\\{/ },\n    { name: '}', pattern: /^\\}/, readJosi: true },\n    { name: ':', pattern: /^:/ },\n    { name: '_eol', pattern: /^_\\s*\\n/ },\n    { name: 'dec_lineno', pattern: /^‰/ },\n    // 絵文字変数 = (絵文字)英数字*\n    { name: 'word', pattern: /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^[\\u1F60-\\u1F6F][_a-zA-Z0-9]*/, readJosi: true },\n    { name: 'word', pattern: /^《.+?》/, readJosi: true },\n    // 単語句\n    {\n        name: 'word',\n        pattern: /^[_a-zA-Z\\u3005\\u4E00-\\u9FCFぁ-んァ-ヶ\\u2460-\\u24FF\\u2776-\\u277F\\u3251-\\u32BF]/,\n        cbParser: cbWordParser\n    }\n];\nexport function trimOkurigana(s) {\n    // ひらがなから始まらない場合、送り仮名を削除。(例)置換する\n    if (!hira.test(s)) {\n        return s.replace(/[ぁ-ん]+/g, '');\n    }\n    // 全てひらがな？ (例) どうぞ\n    if (allHiragana.test(s)) {\n        return s;\n    }\n    // 末尾のひらがなのみ (例)お願いします →お願\n    return s.replace(/[ぁ-ん]+$/g, '');\n}\n// Utility for Rule\nfunction cbRangeComment(src) {\n    let res = '';\n    const josi = '';\n    let numEOL = 0;\n    src = src.substring(2); // skip /*\n    const i = src.indexOf('*/');\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substring(0, i);\n        src = src.substring(i + 2);\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    res = res.replace(/(^\\s+|\\s+$)/, ''); // trim\n    return { src, res, josi, numEOL };\n}\n/**\n * @param {string} src\n */\nfunction cbWordParser(src, isTrimOkurigana = true) {\n    /*\n      kanji    = [\\u3005\\u4E00-\\u9FCF]\n      hiragana = [ぁ-ん]\n      katakana = [ァ-ヶー]\n      emoji    = [\\u1F60-\\u1F6F]\n      uni_extra = [\\uD800-\\uDBFF] [\\uDC00-\\uDFFF]\n      alphabet = [_a-zA-Z]\n      numchars = [0-9]\n    */\n    let res = '';\n    let josi = '';\n    while (src !== '') {\n        // 1文字以上のとき\n        if (res.length > 0) {\n            // 「かつ」「または」なら分割する (#1379 core#84)\n            const jsw = wordSpecial.exec(src);\n            if (jsw) {\n                break;\n            }\n            // 助詞の判定\n            const j = josiRE.exec(src);\n            if (j) {\n                josi = j[0].replace(/^\\s+/, '');\n                src = src.substring(j[0].length);\n                // 助詞の直後にある「,」を飛ばす #877\n                if (src.charAt(0) === ',') {\n                    src = src.substr(1);\n                }\n                break;\n            }\n        }\n        // カタカナ漢字英数字か？\n        const m = kanakanji.exec(src);\n        if (m) {\n            res += m[0];\n            src = src.substring(m[0].length);\n            continue;\n        }\n        // ひらがな？\n        const h = hira.test(src);\n        if (h) {\n            res += src.charAt(0);\n            src = src.substring(1);\n            continue;\n        }\n        break; // other chars\n    }\n    // --- 単語分割における特殊ルール ---\n    // 「間」の特殊ルール (#831)\n    // 「等しい間」や「一致する間」なら「間」をsrcに戻す。ただし「システム時間」はそのままにする。\n    if (/[ぁ-ん]間$/.test(res)) {\n        src = res.charAt(res.length - 1) + src;\n        res = res.slice(0, -1);\n    }\n    // 「以上」「以下」「超」「未満」 #918\n    const ii = wordHasIjoIka.exec(res);\n    if (ii) {\n        src = ii[1] + josi + src;\n        josi = '';\n        res = res.substring(0, res.length - ii[1].length);\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 送り仮名の省略ルール\n    // 漢字カタカナ英語から始まる語句 --- 送り仮名を省略\n    if (isTrimOkurigana) {\n        res = trimOkurigana(res);\n    }\n    // 助詞だけの語句の場合\n    if (res === '' && josi !== '') {\n        res = josi;\n        josi = '';\n    }\n    return { src, res, josi, numEOL: 0 };\n}\nfunction cbString(beginTag, closeTag, src) {\n    let res = '';\n    let josi = '';\n    let numEOL = 0;\n    src = src.substr(beginTag.length); // skip beginTag\n    const i = src.indexOf(closeTag);\n    if (i < 0) { // not found\n        res = src;\n        src = '';\n    }\n    else {\n        res = src.substr(0, i);\n        src = src.substr(i + closeTag.length);\n        // res の中に beginTag があればエラーにする #953\n        if (res.indexOf(beginTag) >= 0) {\n            if (beginTag === '『') {\n                throw new Error('「『」で始めた文字列の中に「『」を含めることはできません。');\n            }\n            else {\n                throw new Error(`『${beginTag}』で始めた文字列の中に『${beginTag}』を含めることはできません。`);\n            }\n        }\n    }\n    // 文字列直後の助詞を取得\n    const j = josiRE.exec(src);\n    if (j) {\n        josi = j[0].replace(/^\\s+/, '');\n        src = src.substr(j[0].length);\n        // 助詞の後のカンマ #877\n        if (src.charAt(0) === ',') {\n            src = src.substr(1);\n        }\n    }\n    // 助詞「こと」「である」「です」などは「＊＊すること」のように使うので削除 #936 #939 #974\n    if (removeJosiMap[josi]) {\n        josi = '';\n    }\n    // 改行を数える\n    for (let i = 0; i < res.length; i++) {\n        if (res.charAt(i) === '\\n') {\n            numEOL++;\n        }\n    }\n    return { src, res, josi, numEOL };\n}\nfunction parseNumber(n) {\n    return Number(n.replace(/_/g, ''));\n}\n","// なでしこの字句解析を行う\n// 既に全角半角を揃えたコードに対して字句解析を行う\nimport { opPriority } from './nako_parser_const.mjs';\n// 予約語句\n// (memo)「回」「間」「繰返」「反復」「抜」「続」「戻」「代入」などは _replaceWord で word から変換\n/** @types {Record<string, string>} */\nimport reservedWords from './nako_reserved_words.mjs';\nimport { isIndentChars } from './nako_indent_chars.mjs';\n// 助詞の一覧\nimport { josiRE, removeJosiMap, tararebaMap } from './nako_josi_list.mjs';\n// 字句解析ルールの一覧\nimport { rules, unitRE } from './nako_lex_rules.mjs';\nimport { NakoLexerError, InternalLexerError } from './nako_errors.mjs';\nexport class NakoLexer {\n    /**\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger; // 字句解析した際,確認された関数の一覧\n        this.funclist = {};\n        this.modList = []; // 字句解析した際,取り込むモジュール一覧 --- nako3::lex で更新される\n        this.result = [];\n        this.modName = 'main.nako3'; // モジュール名\n    }\n    /** 関数一覧をセット */\n    setFuncList(listObj) {\n        this.funclist = listObj;\n    }\n    /**\n     * @param tokens\n     * @param {boolean} isFirst\n     * @param {string} filename\n     */\n    replaceTokens(tokens, isFirst, filename) {\n        this.result = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        // 関数の定義があれば funclist を更新\n        NakoLexer.preDefineFunc(tokens, this.logger, this.funclist);\n        this._replaceWord(this.result);\n        if (isFirst) {\n            if (this.result.length > 0) {\n                const eof = this.result[this.result.length - 1];\n                this.result.push({\n                    type: 'eol',\n                    line: eof.line,\n                    column: 0,\n                    indent: -1,\n                    file: eof.file,\n                    josi: '',\n                    value: '---',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: eof.line,\n                    indent: -1,\n                    column: 0,\n                    file: eof.file,\n                    josi: '',\n                    value: '',\n                    startOffset: eof.startOffset,\n                    endOffset: eof.endOffset,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n            else {\n                this.result.push({\n                    type: 'eol',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '---',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // 改行\n                this.result.push({\n                    type: 'eof',\n                    line: 0,\n                    column: 0,\n                    indent: -1,\n                    file: '',\n                    josi: '',\n                    value: '',\n                    startOffset: 0,\n                    endOffset: 0,\n                    rawJosi: ''\n                }); // ファイル末尾\n            }\n        }\n        return this.result;\n    }\n    /**\n     * ファイル内で定義されている関数名を列挙する。結果はfunclistに書き込む。その他のトークンの置換処理も行う。\n     * シンタックスハイライトの処理から呼び出すためにstaticメソッドにしている。\n     */\n    static preDefineFunc(tokens, logger, funclist) {\n        // 関数を先読みして定義\n        let i = 0;\n        let isFuncPointer = false;\n        const readArgs = () => {\n            const args = [];\n            const keys = {};\n            if (tokens[i].type !== '(') {\n                return [];\n            }\n            i++;\n            while (tokens[i]) {\n                const t = tokens[i];\n                i++;\n                if (t.type === ')') {\n                    break;\n                }\n                if (t.type === 'func') {\n                    isFuncPointer = true;\n                }\n                else if (t.type !== '|' && t.type !== 'comma') {\n                    if (isFuncPointer) {\n                        t.funcPointer = true;\n                        isFuncPointer = false;\n                    }\n                    args.push(t);\n                    if (!keys[t.value]) {\n                        keys[t.value] = [];\n                    }\n                    keys[t.value].push(t.josi);\n                }\n            }\n            const varnames = [];\n            const funcPointers = [];\n            const result = [];\n            const already = {};\n            for (const arg of args) {\n                if (!already[arg.value]) {\n                    const josi = keys[arg.value];\n                    result.push(josi);\n                    varnames.push(arg.value);\n                    if (arg.funcPointer) {\n                        funcPointers.push(arg.value);\n                    }\n                    else {\n                        funcPointers.push(null);\n                    }\n                    already[arg.value] = true;\n                }\n            }\n            return [result, varnames, funcPointers];\n        };\n        // トークンを一つずつ確認\n        while (i < tokens.length) {\n            // タイプの置換\n            const t = tokens[i];\n            // 無名関数の定義：「xxには**」があった場合 ... 暗黙的な関数定義とする\n            if ((t.type === 'word' && t.josi === 'には') || (t.type === 'word' && t.josi === 'は~')) {\n                t.josi = 'には';\n                tokens.splice(i + 1, 0, { type: 'def_func', value: '関数', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset, endOffset: t.endOffset, rawJosi: '', tag: '無名関数' });\n                i++;\n                continue;\n            }\n            // N回をN|回に置換\n            if (t.type === 'word' && t.josi === '' && t.value.length >= 2) {\n                if (t.value.match(/回$/)) {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    // N回を挿入\n                    if (!t.endOffset) {\n                        t.endOffset = 1;\n                    }\n                    const kai = { type: '回', value: '回', indent: t.indent, line: t.line, column: t.column, file: t.file, josi: '', startOffset: t.endOffset - 1, endOffset: t.endOffset, rawJosi: '' };\n                    tokens.splice(i + 1, 0, kai);\n                    t.endOffset--;\n                    i++;\n                }\n            }\n            // 予約語の置換\n            if (t.type === 'word' && reservedWords[t.value]) {\n                t.type = reservedWords[t.value];\n                if (t.value === 'そう') {\n                    t.value = 'それ';\n                }\n            }\n            // 関数定義の確認\n            if (t.type !== 'def_test' && t.type !== 'def_func') {\n                i++;\n                continue;\n            }\n            // 無名関数か普通関数定義かを判定する (1つ前が改行かどうかで判定)\n            let isMumei = true;\n            let prevToken = { type: 'eol' };\n            if (i >= 1) {\n                prevToken = tokens[i - 1];\n            }\n            if (prevToken.type === 'eol') {\n                isMumei = false;\n            }\n            // 関数名や引数を得る\n            const defToken = t;\n            i++; // skip \"●\" or \"関数\"\n            let josi = [];\n            let varnames = [];\n            let funcPointers = [];\n            let funcName = '';\n            let funcNameToken = null;\n            // 関数名の前に引数定義\n            if (tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 関数名を得る\n            if (!isMumei && tokens[i] && tokens[i].type === 'word') {\n                funcNameToken = tokens[i++];\n                funcName = funcNameToken.value;\n            }\n            // 関数名の後で引数定義\n            if (josi.length === 0 && tokens[i] && tokens[i].type === '(') {\n                [josi, varnames, funcPointers] = readArgs();\n            }\n            // 名前のある関数定義ならば関数テーブルに関数名を登録\n            // 無名関数は登録しないように気をつける\n            if (funcName !== '' && funcNameToken) {\n                const modName = NakoLexer.filenameToModName(t.file);\n                funcName = modName + '__' + funcName;\n                if (funcName in funclist) { // 関数の二重定義を警告\n                    // main__は省略 #1223\n                    const dispName = funcName.replace(/^main__/, '');\n                    logger.warn(`関数『${dispName}』は既に定義されています。`, defToken);\n                }\n                funcNameToken.value = funcName;\n                funclist[funcName] = {\n                    type: 'func',\n                    josi,\n                    fn: null,\n                    asyncFn: false,\n                    varnames,\n                    funcPointers\n                };\n            }\n            // 無名関数のために\n            defToken.meta = {\n                type: 'func',\n                josi,\n                varnames,\n                funcPointers\n            };\n        }\n    }\n    /** 文字列を{と}の部分で分割する。中括弧が対応していない場合nullを返す。 */\n    splitStringEx(code) {\n        /** @type {string[]} */\n        const list = [];\n        // \"A{B}C{D}E\" -> [\"A\", \"B}C\", \"D}E\"] -> [\"A\", \"B\", \"C\", \"D\", \"E\"]\n        // \"A{B}C}D{E}F\" -> [\"A\", \"B}C}D\", \"E}F\"] -> [\"A\", \"B\", \"C}D\", \"E\", \"F\"]\n        const arr = code.split(/[{｛]/);\n        list.push(arr[0]);\n        for (const s of arr.slice(1)) {\n            const end = s.replace('｝', '}').indexOf('}');\n            if (end === -1) {\n                return null;\n            }\n            list.push(s.slice(0, end), s.slice(end + 1));\n        }\n        return list;\n    }\n    _replaceWord(tokens) {\n        let comment = [];\n        let i = 0;\n        const getLastType = () => {\n            if (i <= 0) {\n                return 'eol';\n            }\n            return tokens[i - 1].type;\n        };\n        let modSelf = (tokens.length > 0) ? NakoLexer.filenameToModName(tokens[0].file) : 'main.nako3';\n        while (i < tokens.length) {\n            const t = tokens[i];\n            // モジュール名の変更に対応\n            if ((t.type === 'word' || t.type === 'func') && t.value === '名前空間設定') {\n                modSelf = tokens[i - 1].value;\n            }\n            // 関数を強制的に置換( word => func )\n            if (t.type === 'word' && t.value !== 'それ') {\n                // 関数を変換\n                const funcName = t.value;\n                if (funcName.indexOf('__') < 0) {\n                    // 自身のモジュール名を検索\n                    const gname1 = `${modSelf}__${funcName}`;\n                    const gfo1 = this.funclist[gname1];\n                    if (gfo1 && gfo1.type === 'func') {\n                        t.type = 'func';\n                        t.meta = gfo1;\n                        t.value = gname1;\n                        continue;\n                    }\n                    // モジュール関数を置換\n                    for (const mod of this.modList) {\n                        const gname = `${mod}__${funcName}`;\n                        const gfo = this.funclist[gname];\n                        if (gfo && gfo.type === 'func') {\n                            t.type = 'func';\n                            t.meta = gfo;\n                            t.value = gname;\n                            break;\n                        }\n                    }\n                    if (t.type === 'func') {\n                        continue;\n                    }\n                }\n                const fo = this.funclist[funcName];\n                if (fo && fo.type === 'func') {\n                    t.type = 'func';\n                    t.meta = fo;\n                }\n            }\n            // 数字につくマイナス記号を判定\n            // (ng) 5 - 3 || word - 3\n            // (ok) (行頭)-3 || 1 * -3 || Aに -3を 足す\n            if (t.type === '-' && tokens[i + 1] && tokens[i + 1].type === 'number') {\n                // 一つ前の語句が、(行頭|演算子|助詞付きの語句)なら 負数である\n                const ltype = getLastType();\n                if (ltype === 'eol' || opPriority[ltype] || tokens[i - 1].josi !== '') {\n                    tokens.splice(i, 1); // remove '-'\n                    tokens[i].value *= -1;\n                }\n            }\n            // 助詞の「は」を = に展開\n            if (t.josi === undefined) {\n                t.josi = '';\n            }\n            if (t.josi === 'は') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = (t.endOffset === undefined) ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'eq',\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                i += 2;\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                continue;\n            }\n            // 「とは」を一つの単語にする\n            if (t.josi === 'とは') {\n                if (!t.rawJosi) {\n                    t.rawJosi = t.josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: t.josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: '',\n                    value: undefined\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // 助詞のならばをトークンとする\n            if (tararebaMap[t.josi]) {\n                const josi = (t.josi === 'でなければ' || t.josi === 'なければ') ? 'でなければ' : 'ならば';\n                if (!t.rawJosi) {\n                    t.rawJosi = josi;\n                }\n                const startOffset = t.endOffset === undefined ? undefined : t.endOffset - t.rawJosi.length;\n                tokens.splice(i + 1, 0, {\n                    type: 'ならば',\n                    value: josi,\n                    indent: t.indent,\n                    line: t.line,\n                    column: t.column,\n                    file: t.file,\n                    startOffset,\n                    endOffset: t.endOffset,\n                    josi: '',\n                    rawJosi: ''\n                });\n                t.josi = t.rawJosi = '';\n                t.endOffset = startOffset;\n                i += 2;\n                continue;\n            }\n            // '_' + 改行 を飛ばす (演算子直後に改行を入れたい場合に使う)\n            if (t.type === '_eol') {\n                tokens.splice(i, 1);\n                continue;\n            }\n            // コメントを飛ばす\n            if (t.type === 'line_comment' || t.type === 'range_comment') {\n                comment.push(t.value);\n                tokens.splice(i, 1);\n                continue;\n            }\n            // 改行にコメントを埋め込む\n            if (t.type === 'eol') {\n                t.value = comment.join('/');\n                comment = [];\n            }\n            i++;\n        }\n    }\n    /**\n     * インデントの個数を数える\n     * @returns 戻り値として[インデント数, 読み飛ばすべき文字数]を返す\n     */\n    countIndent(src) {\n        let indent = 0;\n        for (let i = 0; i < src.length; i++) {\n            const c = src.charAt(i);\n            const n = isIndentChars(c);\n            if (n === 0) {\n                return [indent, i];\n            }\n            indent += n;\n        }\n        return [indent, src.length];\n    }\n    /**\n     * ソースコードをトークンに分割する\n     * @param src なでしこのソースコード\n     * @param line 先頭行の行番号\n     * @param filename ファイル名\n     */\n    tokenize(src, line, filename) {\n        const srcLength = src.length;\n        const result = [];\n        let columnCurrent;\n        let lineCurrent;\n        let column = 1;\n        let isDefTest = false;\n        let indent = 0;\n        // 最初にインデントを数える\n        const ia = this.countIndent(src);\n        indent = ia[0]; // インデント数\n        src = src.substring(ia[1]); // 読み飛ばす文字数\n        column += ia[1];\n        while (src !== '') {\n            let ok = false;\n            // 各ルールについて\n            for (const rule of rules) {\n                // 正規表現でマッチ\n                const m = rule.pattern.exec(src);\n                if (!m) {\n                    continue;\n                }\n                ok = true;\n                // 空白ならスキップ\n                if (rule.name === 'space') {\n                    column += m[0].length;\n                    src = src.substring(m[0].length);\n                    continue;\n                }\n                // マッチしたルールがコールバックを持つなら\n                if (rule.cbParser) {\n                    // コールバックを呼ぶ\n                    let rp;\n                    if (isDefTest && rule.name === 'word') {\n                        rp = rule.cbParser(src, false);\n                    }\n                    else {\n                        try {\n                            rp = rule.cbParser(src);\n                        }\n                        catch (e) {\n                            throw new NakoLexerError(e.message, srcLength - src.length, srcLength - src.length + 1, line, filename);\n                        }\n                    }\n                    if (rule.name === 'string_ex') {\n                        // 展開あり文字列 → aaa{x}bbb{x}cccc\n                        const list = this.splitStringEx(rp.res);\n                        if (list === null) {\n                            throw new InternalLexerError('展開あり文字列で値の埋め込み{...}が対応していません。', srcLength - src.length, srcLength - rp.src.length, line, filename);\n                        }\n                        let offset = 0;\n                        for (let i = 0; i < list.length; i++) {\n                            const josi = (i === list.length - 1) ? rp.josi : '';\n                            if (i % 2 === 0) {\n                                result.push({\n                                    type: 'string',\n                                    value: list[i],\n                                    file: filename,\n                                    josi,\n                                    indent,\n                                    line,\n                                    column,\n                                    preprocessedCodeOffset: srcLength - src.length + offset,\n                                    preprocessedCodeLength: list[i].length + 2 + josi.length\n                                });\n                                // 先頭なら'\"...{'、それ以外なら'}...{'、最後は何でも良い\n                                offset += list[i].length + 2;\n                            }\n                            else {\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: '(', value: '(', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: 0 });\n                                result.push({ type: 'code', value: list[i], josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset, preprocessedCodeLength: list[i].length });\n                                result.push({ type: ')', value: ')', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                result.push({ type: '&', value: '&', josi: '', indent, file: filename, line, column, preprocessedCodeOffset: srcLength - src.length + offset + list[i].length, preprocessedCodeLength: 0 });\n                                offset += list[i].length;\n                            }\n                        }\n                        line += rp.numEOL;\n                        column += src.length - rp.src.length;\n                        src = rp.src;\n                        if (rp.numEOL > 0) {\n                            column = 1;\n                        }\n                        break;\n                    }\n                    columnCurrent = column;\n                    column += src.length - rp.src.length;\n                    result.push({ type: rule.name, value: rp.res, josi: rp.josi, indent, line, column: columnCurrent, file: filename, preprocessedCodeOffset: srcLength - src.length, preprocessedCodeLength: src.length - rp.src.length });\n                    src = rp.src;\n                    line += rp.numEOL;\n                    if (rp.numEOL > 0) {\n                        column = 1;\n                    }\n                    break;\n                }\n                // ソースを進める前に位置を計算\n                const srcOffset = srcLength - src.length;\n                // 値を変換する必要があるか？\n                let value = m[0];\n                if (rule.cb) {\n                    value = rule.cb(value);\n                }\n                // ソースを進める\n                columnCurrent = column;\n                lineCurrent = line;\n                column += m[0].length;\n                src = src.substring(m[0].length);\n                // 改行の時の処理\n                if ((rule.name === 'eol' && value === '\\n') || rule.name === '_eol') {\n                    value = line++;\n                    column = 1;\n                }\n                // 数値なら単位を持つか？ --- #994\n                if (rule.name === 'number') {\n                    // 単位があれば読み飛ばす\n                    const um = unitRE.exec(src);\n                    if (um) {\n                        src = src.substring(um[0].length);\n                        column += m[0].length;\n                    }\n                }\n                let josi = '';\n                if (rule.readJosi) {\n                    const j = josiRE.exec(src);\n                    if (j) {\n                        josi = j[0].replace(/^\\s+/, '');\n                        column += j[0].length;\n                        src = src.substring(j[0].length);\n                        // 助詞の直後にあるカンマを無視 #877\n                        if (src.charAt(0) === ',') {\n                            src = src.substring(1);\n                        }\n                        // 「＊＊である」なら削除 #939 #974\n                        if (removeJosiMap[josi]) {\n                            josi = '';\n                        }\n                    }\n                }\n                switch (rule.name) {\n                    case 'def_test': {\n                        isDefTest = true;\n                        break;\n                    }\n                    case 'eol': { // eolの処理はほかに↑と↓にある\n                        isDefTest = false;\n                        break;\n                    }\n                    default: {\n                        break;\n                    }\n                }\n                // ここまで‰(#682) を処理\n                if (rule.name === 'dec_lineno') {\n                    line--;\n                    continue;\n                }\n                result.push({\n                    type: rule.name,\n                    value,\n                    indent,\n                    line: lineCurrent,\n                    column: columnCurrent,\n                    file: filename,\n                    josi,\n                    preprocessedCodeOffset: srcOffset,\n                    preprocessedCodeLength: (srcLength - src.length) - srcOffset\n                });\n                // 改行のとき次の行のインデントを調べる。なお、改行の後は必ずcolumnが1になる。インデント構文のため、一行に2つ以上の文を含むときを考慮する。(core #66)\n                if (rule.name === 'eol' && column === 1) {\n                    const ia = this.countIndent(src);\n                    indent = ia[0];\n                    column += ia[1];\n                    src = src.substring(ia[1]); // インデントを飛ばす\n                }\n                break;\n            }\n            if (!ok) {\n                throw new InternalLexerError('未知の語句: ' + src.substring(0, 3) + '...', srcLength - src.length, srcLength - srcLength + 3, line, filename);\n            }\n        }\n        return result;\n    }\n    // トークン配列をtype文字列に変換\n    static tokensToTypeStr(tokens, sep) {\n        const a = tokens.map((v) => {\n            return v.type;\n        });\n        return a.join(sep);\n    }\n    /**\n     * ファイル名からモジュール名へ変換\n     * @param {string} filename\n     * @returns {string}\n     */\n    static filenameToModName(filename) {\n        if (!filename) {\n            return 'main';\n        }\n        // パスがあればパスを削除\n        filename = filename.replace(/[\\\\:]/g, '/'); // Windowsのpath記号を/に置換\n        if (filename.indexOf('/') >= 0) {\n            const a = filename.split('/');\n            filename = a[a.length - 1];\n        }\n        filename = filename.replace(/\\.nako3?$/, '');\n        return filename;\n    }\n}\n","/**\n * nadesiko v3 parser\n */\nimport { opPriority, RenbunJosi, operatorList } from './nako_parser_const.mjs';\nimport { NakoParserBase } from './nako_parser_base.mjs';\nimport { NakoSyntaxError } from './nako_errors.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * 構文解析を行うクラス\n */\nexport class NakoParser extends NakoParserBase {\n    /**\n     * 構文解析を実行する\n     */\n    parse(tokens, filename) {\n        this.reset();\n        this.tokens = tokens;\n        this.modName = NakoLexer.filenameToModName(filename);\n        this.modList.push(this.modName);\n        // 解析開始\n        return this.startParser();\n    }\n    /** パーサーの一番最初に呼び出す構文規則 */\n    startParser() {\n        const b = this.ySentenceList();\n        const c = this.get();\n        if (c && c.type !== 'eof') {\n            this.logger.debug(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, true)}の使い方が間違っています。`, c);\n            throw NakoSyntaxError.fromNode(`構文解析でエラー。${this.nodeToStr(c, { depth: 1 }, false)}の使い方が間違っています。`, c);\n        }\n        return b;\n    }\n    /** 複数文を返す */\n    ySentenceList() {\n        const blocks = [];\n        let line = -1;\n        const map = this.peekSourceMap();\n        while (!this.isEOF()) {\n            const n = this.ySentence();\n            if (!n) {\n                break;\n            }\n            blocks.push(n);\n            if (line < 0) {\n                line = n.line;\n            }\n        }\n        if (blocks.length === 0) {\n            const token = this.peek() || this.tokens[0];\n            this.logger.debug('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, true), token);\n            throw NakoSyntaxError.fromNode('構文解析に失敗:' + this.nodeToStr(this.peek(), { depth: 1 }, false), token);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap(), genMode: this.genMode };\n    }\n    /** 余剰スタックのレポートを作る */\n    makeStackBalanceReport() {\n        const words = [];\n        this.stack.forEach((t) => {\n            let w = this.nodeToStr(t, { depth: 1 }, false);\n            if (t.josi) {\n                w += t.josi;\n            }\n            words.push(w);\n        });\n        const desc = words.join(',');\n        // 最近使った関数の使い方レポートを作る #1093\n        let descFunc = '';\n        const chA = 'A'.charCodeAt(0);\n        for (const f of this.recentlyCalledFunc) {\n            descFunc += ' - ';\n            let no = 0;\n            const josiA = f.josi;\n            if (josiA) {\n                for (const arg of josiA) {\n                    const ch = String.fromCharCode(chA + no);\n                    descFunc += ch;\n                    if (arg.length === 1) {\n                        descFunc += arg[0];\n                    }\n                    else {\n                        descFunc += `(${arg.join('|')})`;\n                    }\n                    no++;\n                }\n            }\n            descFunc += f.name + '\\n';\n        }\n        this.recentlyCalledFunc = [];\n        return `未解決の単語があります: [${desc}]\\n次の命令の可能性があります:\\n${descFunc}`;\n    }\n    yEOL() {\n        // 行末のチェック #1009\n        const eol = this.get();\n        if (!eol) {\n            return null;\n        }\n        // 余剰スタックの確認\n        if (this.stack.length > 0) {\n            const report = this.makeStackBalanceReport();\n            throw NakoSyntaxError.fromNode(report, eol);\n        }\n        this.recentlyCalledFunc = [];\n        return eol; // Token to Ast\n    }\n    /** @returns {Ast | null} */\n    ySentence() {\n        const map = this.peekSourceMap();\n        // 最初の語句が決まっている構文\n        if (this.check('eol')) {\n            return this.yEOL();\n        }\n        if (this.check('もし')) {\n            return this.yIF();\n        }\n        if (this.check('後判定')) {\n            return this.yAtohantei();\n        }\n        if (this.check('エラー監視')) {\n            return this.yTryExcept();\n        }\n        if (this.check('逐次実行')) {\n            return this.yTikuji();\n        }\n        if (this.accept(['抜ける'])) {\n            return { type: 'break', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['続ける'])) {\n            return { type: 'continue', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.accept(['require', 'string', '取込'])) {\n            return this.yRequire();\n        }\n        if (this.accept(['not', '非同期モード'])) {\n            return this.yASyncMode();\n        }\n        if (this.accept(['DNCLモード'])) {\n            return this.yDNCLMode(1);\n        }\n        if (this.accept(['DNCL2モード'])) {\n            return this.yDNCLMode(2);\n        }\n        if (this.accept(['not', 'string', 'モード設定'])) {\n            return this.ySetGenMode(this.y[1].value);\n        }\n        // 関数呼び出し演算子\n        if (this.check2(['func', '←'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数代入演算子『←』は廃止されました。『${word.value}←』の部分。`, word);\n        }\n        if (this.check2(['func', 'eq'])) {\n            const word = this.get() || NewEmptyToken();\n            throw NakoSyntaxError.fromNode(`関数『${word.value}』に代入できません。`, word);\n        }\n        // 先読みして初めて確定する構文\n        if (this.accept([this.ySpeedMode])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yPerformanceMonitor])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yLet])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefTest])) {\n            return this.y[0];\n        }\n        if (this.accept([this.yDefFunc])) {\n            return this.y[0];\n        }\n        // 関数呼び出しの他、各種構文の実装\n        if (this.accept([this.yCall])) {\n            const c1 = this.y[0];\n            if (RenbunJosi.indexOf(c1.josi || '') >= 0) { // 連文をblockとして接続する(もし構文などのため)\n                if (this.stack.length >= 1) { // スタックの余剰をチェック\n                    const report = this.makeStackBalanceReport();\n                    throw NakoSyntaxError.fromNode(report, c1);\n                }\n                const c2 = this.ySentence();\n                if (c2 !== null) {\n                    return {\n                        type: 'block',\n                        block: [c1, c2],\n                        josi: c2.josi,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n            }\n            return c1;\n        }\n        return null;\n    }\n    /** @returns {Ast} */\n    yASyncMode() {\n        const map = this.peekSourceMap();\n        this.genMode = '非同期モード';\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** set DNCL mode */\n    yDNCLMode(ver) {\n        const map = this.peekSourceMap();\n        if (ver === 1) {\n            // 配列インデックスは1から\n            this.arrayIndexFrom = 1;\n            // 配列アクセスをJSと逆順で指定する\n            this.flagReverseArrayIndex = true;\n        }\n        else {\n            // ver2はPythonに近いとのこと\n        }\n        // 配列代入時自動で初期化チェックする\n        this.flagCheckArrayInit = true;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    ySetGenMode(mode) {\n        const map = this.peekSourceMap();\n        this.genMode = mode;\n        return { type: 'eol', ...map, end: this.peekSourceMap() };\n    }\n    /** @returns {Ast} */\n    yRequire() {\n        const nameToken = this.y[1];\n        const filename = nameToken.value;\n        const modName = NakoLexer.filenameToModName(filename);\n        if (this.modList.indexOf(modName) < 0) {\n            // 優先度が最も高いのは modList[0]\n            // [memo] モジュールの検索優先度は、下に書くほど高くなる\n            const modSelf = this.modList.shift();\n            if (modSelf) {\n                this.modList.unshift(modName);\n                this.modList.unshift(modSelf);\n            }\n        }\n        return {\n            type: 'require',\n            value: filename,\n            josi: '',\n            ...this.peekSourceMap(),\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast} */\n    yBlock() {\n        const map = this.peekSourceMap();\n        const blocks = [];\n        if (this.check('ここから')) {\n            this.get();\n        }\n        while (!this.isEOF()) {\n            if (this.checkTypes(['違えば', 'ここまで', 'エラー'])) {\n                break;\n            }\n            if (!this.accept([this.ySentence])) {\n                break;\n            }\n            blocks.push(this.y[0]);\n        }\n        return { type: 'block', block: blocks, ...map, end: this.peekSourceMap() };\n    }\n    yDefFuncReadArgs() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const a = [];\n        this.get(); // skip '('\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                this.get(); // skip ''\n                break;\n            }\n            const t = this.get();\n            if (t) {\n                a.push(t);\n            } // Token to Ast\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    yDefTest() {\n        return this.yDef('def_test');\n    }\n    yDefFunc() {\n        return this.yDef('def_func');\n    }\n    /** ユーザー関数の定義 */\n    yDef(type) {\n        if (!this.check(type)) { // yDefFuncから呼ばれれば def_func なのかをチェックする\n            return null;\n        }\n        const map = this.peekSourceMap();\n        const def = this.get(); // ●\n        if (!def) {\n            return null;\n        }\n        let defArgs = [];\n        if (this.check('(')) {\n            defArgs = this.yDefFuncReadArgs() || [];\n        } // // lexerでも解析しているが再度詳しく\n        const funcName = this.get();\n        if (!funcName || funcName.type !== 'func') {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言でエラー。', funcName);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言でエラー。', def);\n        }\n        if (this.check('(')) {\n            // 関数引数の二重定義\n            if (defArgs.length > 0) {\n                this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n                throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) + 'の宣言で、引数定義は名前の前か後に一度だけ可能です。', funcName);\n            }\n            defArgs = this.yDefFuncReadArgs() || [];\n        }\n        if (this.check('とは')) {\n            this.get();\n        }\n        let block = null;\n        let multiline = false;\n        let asyncFn = false;\n        if (this.check('ここから')) {\n            multiline = true;\n        }\n        if (this.check('eol')) {\n            multiline = true;\n        }\n        try {\n            this.funcLevel++;\n            this.usedAsyncFn = false;\n            // ローカル変数を生成\n            const backupLocalvars = this.localvars;\n            this.localvars = { 'それ': { type: 'var', value: '' } };\n            if (multiline) {\n                this.saveStack();\n                // 関数の引数をローカル変数として登録する\n                for (const arg of defArgs) {\n                    const fnName = (arg.value) ? arg.value + '' : '';\n                    this.localvars[fnName] = { 'type': 'var', 'value': '' };\n                }\n                block = this.yBlock();\n                if (this.check('ここまで')) {\n                    this.get();\n                }\n                else {\n                    throw NakoSyntaxError.fromNode('『ここまで』がありません。関数定義の末尾に必要です。', def);\n                }\n                this.loadStack();\n            }\n            else {\n                this.saveStack();\n                block = this.ySentence();\n                this.loadStack();\n            }\n            this.funcLevel--;\n            asyncFn = this.usedAsyncFn;\n            this.localvars = backupLocalvars;\n        }\n        catch (err) {\n            this.logger.debug(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, true) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n            throw NakoSyntaxError.fromNode(this.nodeToStr(funcName, { depth: 0, typeName: '関数' }, false) +\n                'の定義で以下のエラーがありました。\\n' + err.message, def);\n        }\n        return {\n            type,\n            name: funcName,\n            args: defArgs,\n            block: block || [],\n            asyncFn,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yIFCond() {\n        const map = this.peekSourceMap();\n        let a = this.yGetArg();\n        if (!a) {\n            return null;\n        }\n        // console.log('@@yIFCond=', a)\n        // チェック : Aならば\n        if (a.josi === 'ならば') {\n            return a;\n        }\n        if (a.josi === 'でなければ') {\n            a = { type: 'not', value: a, josi: '', ...map, end: this.peekSourceMap() };\n            return a;\n        }\n        // チェック : AがBならば --- 「関数B(A)」のとき\n        if ((a.josi !== '') && (this.check('func'))) {\n            // もし文で関数呼び出しがある場合\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        else \n        // チェック : AがBならば --- 「A = B」のとき\n        if (a.josi === 'が') {\n            const tmpI = this.index;\n            const b = this.yGetArg();\n            if (!b) {\n                throw NakoSyntaxError.fromNode('もし文の条件「AがBならば」でBがないか条件が複雑過ぎます。' +\n                    this.nodeToStr(this.peek(), { depth: 1 }, false), map);\n            }\n            if (this.check('ならば')) {\n                const naraba = this.get() || { 'value': 'ならば' };\n                b.josi = naraba.value;\n            }\n            if (b && (b.josi === 'ならば' || b.josi === 'でなければ')) {\n                return {\n                    type: 'op',\n                    operator: (b.josi === 'でなければ') ? 'noteq' : 'eq',\n                    left: a,\n                    right: b,\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            this.index = tmpI;\n        }\n        // もし文で追加の関数呼び出しがある場合\n        if (!this.check('ならば')) {\n            this.stack.push(a);\n            a = this.yCall();\n        }\n        // (ならば|でなければ)を確認\n        if (!this.check('ならば')) {\n            const smap = a || { type: '?', ...map };\n            this.logger.debug('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n            throw NakoSyntaxError.fromNode('もし文で『ならば』がないか、条件が複雑過ぎます。' + this.nodeToStr(this.peek(), { depth: 1 }, false) + 'の直前に『ならば』を書いてください。', smap);\n        }\n        const naraba = this.get();\n        // 否定形のチェック\n        if (naraba && naraba.value === 'でなければ') {\n            a = {\n                type: 'not',\n                value: a,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yIF() {\n        const map = this.peekSourceMap();\n        if (!this.check('もし')) {\n            return null;\n        }\n        const mosi = this.get(); // skip もし\n        if (mosi == null) {\n            return null;\n        }\n        while (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let cond = null;\n        try {\n            cond = this.yIFCond();\n        }\n        catch (err) {\n            throw NakoSyntaxError.fromNode('『もし』文の条件で次のエラーがあります。\\n' + err.message, mosi);\n        }\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『もし』文で条件の指定が空です。', mosi);\n        }\n        let trueBlock = null;\n        let falseBlock = null;\n        let tanbun = false;\n        // True Block\n        if (this.check('eol')) {\n            trueBlock = this.yBlock();\n        }\n        else {\n            trueBlock = this.ySentence();\n            tanbun = true;\n        }\n        // skip EOL\n        while (this.check('eol')) {\n            this.get();\n        }\n        // Flase Block\n        if (this.check('違えば')) {\n            this.get(); // skip 違えば\n            while (this.check('comma')) {\n                this.get();\n            }\n            if (this.check('eol')) {\n                falseBlock = this.yBlock();\n            }\n            else {\n                falseBlock = this.ySentence();\n                tanbun = true;\n            }\n        }\n        if (tanbun === false) {\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『もし』文で『ここまで』がありません。', mosi);\n            }\n        }\n        return {\n            type: 'if',\n            expr: cond || [],\n            block: trueBlock || [],\n            false_block: falseBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    ySpeedMode() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', '実行速度優先'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        this.get();\n        let val = '';\n        if (optionNode && optionNode.value) {\n            val = optionNode.value;\n        }\n        else {\n            return null;\n        }\n        const options = { 行番号無し: false, 暗黙の型変換無し: false, 強制ピュア: false, それ無効: false };\n        for (const name of val.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`実行速度優先文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'speed_mode',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    yPerformanceMonitor() {\n        const map = this.peekSourceMap();\n        if (!this.check2(['string', 'パフォーマンスモニタ適用'])) {\n            return null;\n        }\n        const optionNode = this.get();\n        if (!optionNode) {\n            return null;\n        }\n        this.get();\n        const options = { ユーザ関数: false, システム関数本体: false, システム関数: false };\n        for (const name of optionNode.value.split('/')) {\n            // 全て有効化\n            if (name === '全て') {\n                for (const k of Object.keys(options)) {\n                    options[k] = true;\n                }\n                break;\n            }\n            // 個別に有効化\n            if (Object.keys(options).includes(name)) {\n                options[name] = true;\n            }\n            else {\n                // 互換性を考えて、警告に留める。\n                this.logger.warn(`パフォーマンスモニタ適用文のオプション『${name}』は存在しません。`, optionNode);\n            }\n        }\n        let multiline = false;\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'performance_monitor',\n            options,\n            block: block || [],\n            josi: '',\n            ...map\n        };\n    }\n    /** (非推奨) 「逐次実行」構文 @returns {Ast | null} */\n    yTikuji() {\n        const map = this.peekSourceMap();\n        if (!this.check('逐次実行')) {\n            return null;\n        }\n        const tikuji = this.getCur(); // skip 逐次実行\n        this.logger.warn('『逐次実行』構文の使用は非推奨になりました(https://nadesi.com/v3/doc/go.php?944)。', tikuji);\n        const blocks = [];\n        let errorBlock = null;\n        if (!tikuji || !this.check('eol')) {\n            throw NakoSyntaxError.fromNode('『逐次実行』の直後は改行が必要です。', tikuji);\n        }\n        // ブロックを読む\n        for (;;) {\n            if (this.check('ここまで')) {\n                break;\n            }\n            if (this.check('eol')) {\n                this.get(); // skip EOL\n                continue;\n            }\n            if (this.check2(['エラー', 'ならば'])) {\n                this.get(); // skip エラー\n                this.get(); // skip ならば\n                errorBlock = this.yBlock();\n                break;\n            }\n            let block = null;\n            // 「先に」「次に」句はブロック宣言 #717 (ただしブロック以外も可能)\n            if (this.check('先に') || this.check('次に')) {\n                const tugini = this.get(); // skip 先に | 次に\n                if (this.check('comma')) {\n                    this.get();\n                }\n                if (this.check('eol')) { // block\n                    block = this.yBlock();\n                    if (!this.check('ここまで')) {\n                        let tuginiType = '次に';\n                        if (tugini != null) {\n                            tuginiType = tugini.type;\n                        }\n                        throw NakoSyntaxError.fromNode(`『${tuginiType}』...『ここまで』を対応させてください。`, map);\n                    }\n                    this.get(); // skip 'ここまで'\n                }\n                else { // line\n                    block = this.ySentence();\n                }\n            }\n            else {\n                block = this.ySentence();\n            }\n            // add block\n            if (block != null) {\n                blocks.push(block);\n            }\n        }\n        if (!this.check('ここまで')) {\n            console.log(blocks, this.peek());\n            throw NakoSyntaxError.fromNode('『逐次実行』...『ここまで』を対応させてください。', tikuji);\n        }\n        this.get(); // skip 'ここまで'\n        return {\n            type: 'tikuji',\n            blocks: blocks || [],\n            errorBlock: errorBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /**\n     * 1つ目の値を与え、その後に続く計算式を取得し、優先規則に沿って並び替えして戻す\n     * @param {Ast} firstValue\n     */\n    yGetArgOperator(firstValue) {\n        const args = [firstValue];\n        while (!this.isEOF()) {\n            // 演算子がある？\n            let op = this.peek();\n            if (op && opPriority[op.type]) {\n                op = this.getCur();\n                args.push(op); // Token to Ast\n                // 演算子後の値を取得\n                const v = this.yValue();\n                if (v === null) {\n                    throw NakoSyntaxError.fromNode(`計算式で演算子『${op.value}』後に値がありません`, firstValue);\n                }\n                args.push(v);\n                continue;\n            }\n            break;\n        }\n        if (args.length === 0) {\n            return null;\n        }\n        if (args.length === 1) {\n            return args[0];\n        }\n        return this.infixToAST(args);\n    }\n    yGetArg() {\n        // 値を一つ読む\n        const value1 = this.yValue();\n        if (value1 === null) {\n            return null;\n        }\n        // 計算式がある場合を考慮\n        return this.yGetArgOperator(value1);\n    }\n    infixToPolish(list) {\n        // 中間記法から逆ポーランドに変換\n        const priority = (t) => {\n            if (opPriority[t.type]) {\n                return opPriority[t.type];\n            }\n            return 10;\n        };\n        const stack = [];\n        const polish = [];\n        while (list.length > 0) {\n            const t = list.shift();\n            if (!t) {\n                break;\n            }\n            while (stack.length > 0) { // 優先順位を見て移動する\n                const sTop = stack[stack.length - 1];\n                if (priority(t) > priority(sTop)) {\n                    break;\n                }\n                const tpop = stack.pop();\n                if (!tpop) {\n                    this.logger.error('計算式に間違いがあります。', t);\n                    break;\n                }\n                polish.push(tpop);\n            }\n            stack.push(t);\n        }\n        // 残った要素を積み替える\n        while (stack.length > 0) {\n            const t = stack.pop();\n            if (t) {\n                polish.push(t);\n            }\n        }\n        return polish;\n    }\n    /** @returns {Ast | null} */\n    infixToAST(list) {\n        if (list.length === 0) {\n            return null;\n        }\n        // 逆ポーランドを構文木に\n        const josi = list[list.length - 1].josi;\n        const node = list[list.length - 1];\n        const polish = this.infixToPolish(list);\n        /** @type {Ast[]} */\n        const stack = [];\n        for (const t of polish) {\n            if (!opPriority[t.type]) { // 演算子ではない\n                stack.push(t);\n                continue;\n            }\n            const b = stack.pop();\n            const a = stack.pop();\n            if (a === undefined || b === undefined) {\n                this.logger.debug('--- 計算式(逆ポーランド) ---\\n' + JSON.stringify(polish));\n                throw NakoSyntaxError.fromNode('計算式でエラー', node);\n            }\n            /** @type {Ast} */\n            const op = {\n                type: 'op',\n                operator: t.type,\n                left: a,\n                right: b,\n                josi,\n                startOffset: a.startOffset,\n                endOffset: a.endOffset,\n                line: a.line,\n                column: a.column,\n                file: a.file\n            };\n            stack.push(op);\n        }\n        const ans = stack.pop();\n        if (!ans) {\n            return null;\n        }\n        return ans;\n    }\n    yGetArgParen(y) {\n        let isClose = false;\n        const si = this.stack.length;\n        while (!this.isEOF()) {\n            if (this.check(')')) {\n                isClose = true;\n                break;\n            }\n            const v = this.yGetArg();\n            if (v) {\n                this.pushStack(v);\n                if (this.check('comma')) {\n                    this.get();\n                }\n                continue;\n            }\n            break;\n        }\n        if (!isClose) {\n            throw NakoSyntaxError.fromNode(`C風関数『${y[0].value}』でカッコが閉じていません`, y[0]);\n        }\n        const a = [];\n        while (si < this.stack.length) {\n            const v = this.popStack();\n            if (v) {\n                a.unshift(v);\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yRepeatTime() {\n        const map = this.peekSourceMap();\n        if (!this.check('回')) {\n            return null;\n        }\n        this.get(); // skip '回'\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 'N回、繰り返す' (#924)\n        let num = this.popStack([]);\n        let multiline = false;\n        let block = null;\n        if (num === null) {\n            num = { type: 'word', value: 'それ', josi: '', ...map, end: this.peekSourceMap() };\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (this.check('ここから')) {\n            this.get();\n            multiline = true;\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) { // multiline\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『回』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            // singleline\n            block = this.ySentence();\n        }\n        return {\n            type: 'repeat_times',\n            value: num,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yWhile() {\n        const map = this.peekSourceMap();\n        if (!this.check('間')) {\n            return null;\n        }\n        this.get(); // skip '間'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        if (this.check('繰返')) {\n            this.get();\n        } // skip '繰り返す' #927\n        const cond = this.popStack();\n        if (cond === null) {\n            throw NakoSyntaxError.fromNode('『間』で条件がありません。', map);\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        if (!this.checkTypes(['ここから', 'eol'])) {\n            throw NakoSyntaxError.fromNode('『間』の直後は改行が必要です', map);\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        return {\n            type: 'while',\n            cond,\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yAtohantei() {\n        const map = this.peekSourceMap();\n        if (this.check('後判定')) {\n            this.get();\n        } // skip 後判定\n        if (this.check('繰返')) {\n            this.get();\n        } // skip 繰り返す\n        if (this.check('ここから')) {\n            this.get();\n        }\n        const block = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        let cond = this.yGetArg(); // 条件\n        let bUntil = false;\n        const t = this.peek();\n        if (t && t.value === 'なる' && (t.josi === 'まで' || t.josi === 'までの')) {\n            this.get(); // skip なるまで\n            bUntil = true;\n        }\n        if (this.check('間')) {\n            this.get();\n        } // skip 間\n        if (bUntil) { // 条件を反転する\n            cond = {\n                type: 'not',\n                value: cond,\n                josi: '',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return {\n            type: 'atohantei',\n            cond: cond || [],\n            block,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yFor() {\n        let flagDown = true; // AからBまでの時、A>=Bを許容するかどうか\n        const map = this.peekSourceMap();\n        if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n            // pass\n        }\n        else {\n            return null;\n        }\n        const kurikaesu = this.getCur(); // skip 繰り返す\n        // スタックに(増や|減ら)してがある？\n        const incdec = this.stack.pop();\n        if (incdec) {\n            if (incdec.type === 'word' && (incdec.value === '増' || incdec.value === '減')) {\n                if (incdec.value === '増') {\n                    flagDown = false;\n                }\n                kurikaesu.type = incdec.value + kurikaesu.type; // typeを増繰返 | 減繰返 に変換\n            }\n            else {\n                // 普通の繰り返しの場合\n                this.stack.push(incdec); // 違ったので改めて追加\n            }\n        }\n        let vInc = null;\n        if (kurikaesu.type === '増繰返' || kurikaesu.type === '減繰返') {\n            vInc = this.popStack(['ずつ']);\n            if (kurikaesu.type === '増繰返') {\n                flagDown = false;\n            }\n        }\n        const vTo = this.popStack(['まで']);\n        const vFrom = this.popStack(['から']);\n        const word = this.popStack(['を', 'で']);\n        if (vFrom === null || vTo === null) {\n            throw NakoSyntaxError.fromNode('『繰り返す』文でAからBまでの指定がありません。', kurikaesu);\n        }\n        if (this.check('comma')) {\n            this.get();\n        } // skip comma\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n            this.get();\n        }\n        let block = null;\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n            else {\n                throw NakoSyntaxError.fromNode('『ここまで』がありません。『繰り返す』...『ここまで』を対応させてください。', map);\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'for',\n            from: vFrom,\n            to: vTo,\n            inc: vInc,\n            flagDown,\n            word,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yReturn() {\n        const map = this.peekSourceMap();\n        if (!this.check('戻る')) {\n            return null;\n        }\n        this.get(); // skip '戻る'\n        const v = this.popStack(['で', 'を']);\n        if (this.stack.length > 0) {\n            throw NakoSyntaxError.fromNode('『戻』文の直前に未解決の引数があります。『(式)を戻す』のように式をカッコで括ってください。', map);\n        }\n        return {\n            type: 'return',\n            value: v,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yForEach() {\n        const map = this.peekSourceMap();\n        if (!this.check('反復')) {\n            return null;\n        }\n        this.get(); // skip '反復'\n        while (this.check('comma')) {\n            this.get();\n        } // skip ','\n        const target = this.popStack(['を']);\n        const name = this.popStack(['で']);\n        let block = null;\n        let multiline = false;\n        if (this.check('ここから')) {\n            multiline = true;\n            this.get();\n        }\n        else if (this.check('eol')) {\n            multiline = true;\n        }\n        if (multiline) {\n            block = this.yBlock();\n            if (this.check('ここまで')) {\n                this.get();\n            }\n        }\n        else {\n            block = this.ySentence();\n        }\n        return {\n            type: 'foreach',\n            name,\n            target,\n            block: block || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 条件分岐構文 */\n    ySwitch() {\n        const map = this.peekSourceMap();\n        if (!this.check('条件分岐')) {\n            return null;\n        }\n        const joukenbunki = this.get(); // skip '条件分岐'\n        if (!joukenbunki) {\n            return null;\n        }\n        const eol = this.get(); // skip 'eol'\n        if (!eol) {\n            return null;\n        }\n        const value = this.popStack(['で']);\n        if (!value) {\n            throw NakoSyntaxError.fromNode('『(値)で条件分岐』のように記述してください。', joukenbunki);\n        }\n        if (eol.type !== 'eol') {\n            throw NakoSyntaxError.fromNode('『条件分岐』の直後は改行してください。', joukenbunki);\n        }\n        let isDefaultClause = false; // 「違えば」内かどうか\n        let skippedKokomade = false;\n        const cases = [];\n        while (!this.isEOF()) {\n            if (this.check('ここまで')) {\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                this.get(); // skip ここまで\n                break;\n            }\n            if (this.check('eol')) {\n                this.get();\n                continue;\n            }\n            if (isDefaultClause) {\n                throw NakoSyntaxError.fromNode('『条件分岐』で『違えば〜ここまで』の後に処理を続けることは出来ません。', joukenbunki);\n            }\n            // 違えば？\n            let cond = null;\n            const condToken = this.peek();\n            if (condToken && condToken.type === '違えば') {\n                // 違えば\n                skippedKokomade = false;\n                isDefaultClause = true;\n                cond = this.get(); // skip 違えば // Token to Ast\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            else {\n                // ＊＊＊ならば\n                if (skippedKokomade) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 「＊＊ならば」を得る\n                cond = this.yValue();\n                if (!cond) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『(条件)ならば〜ここまで』と記述してください。', joukenbunki);\n                }\n                const naraba = this.get(); // skip ならば\n                if (!naraba || naraba.type !== 'ならば') {\n                    throw NakoSyntaxError.fromNode('『条件分岐』で条件は＊＊ならばと記述してください。', joukenbunki);\n                }\n                if (this.check('comma')) {\n                    this.get();\n                } // skip ','\n            }\n            // 条件にあったときに実行すること\n            const condBlock = this.yBlock();\n            const kokomade = this.peek();\n            if (kokomade && kokomade.type === 'ここまで') {\n                this.get(); // skip ここまで\n            }\n            else {\n                if (isDefaultClause) {\n                    throw NakoSyntaxError.fromNode('『条件分岐』は『違えば〜ここまで』と記述してください。', joukenbunki);\n                }\n                // 次が「違えば」の場合に限り、「もし〜ここまで」の「ここまで」を省略できる\n                skippedKokomade = true;\n            }\n            cases.push([cond, condBlock]);\n        }\n        return {\n            type: 'switch',\n            value,\n            cases: cases || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 無名関数 */\n    yMumeiFunc() {\n        const map = this.peekSourceMap();\n        if (!this.check('def_func')) {\n            return null;\n        }\n        const def = this.get();\n        if (!def) {\n            return null;\n        }\n        let args = [];\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // 関数の引数定義は省略できる\n        if (this.check('(')) {\n            args = this.yDefFuncReadArgs() || [];\n        }\n        // 「,」を飛ばす\n        if (this.check('comma')) {\n            this.get();\n        }\n        // ブロックを読む\n        this.funcLevel++;\n        this.saveStack();\n        const block = this.yBlock();\n        // 末尾の「ここまで」をチェック - もしなければエラーにする #1045\n        if (!this.check('ここまで')) {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『には』構文か無名関数の末尾に『ここまで』が必要です。', map);\n        }\n        this.get(); // skip ここまで\n        this.loadStack();\n        this.funcLevel--;\n        return {\n            type: 'func_obj',\n            args,\n            block,\n            meta: def.meta,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 代入構文 */\n    yDainyu() {\n        const map = this.peekSourceMap();\n        const dainyu = this.get(); // 代入\n        if (dainyu === null) {\n            return null;\n        }\n        const value = this.popStack(['を']);\n        const word = this.popStack(['へ', 'に']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('代入文で代入先の変数が見当たりません。『(変数名)に(値)を代入』のように使います。', dainyu);\n        }\n        // 配列への代入\n        if (word.type === '配列参照') {\n            return {\n                type: 'let_array',\n                name: word.name,\n                index: word.index,\n                value,\n                josi: '',\n                checkInit: this.flagCheckArrayInit,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 一般的な変数への代入\n        const word2 = this.getVarName(word);\n        return {\n            type: 'let',\n            name: word2,\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** 定める構文 */\n    ySadameru() {\n        const map = this.peekSourceMap();\n        const sadameru = this.get(); // 定める\n        if (sadameru === null) {\n            return null;\n        }\n        const word = this.popStack(['を']);\n        const value = this.popStack(['へ', 'に', 'と']);\n        if (!word || (word.type !== 'word' && word.type !== 'func' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode('『定める』文で定数が見当たりません。『(定数名)を(値)に定める』のように使います。', sadameru);\n        }\n        // 変数を生成する\n        const nameToken = this.createVar(word, true);\n        return {\n            type: 'def_local_var',\n            name: nameToken,\n            vartype: '定数',\n            value,\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yIncDec() {\n        const map = this.peekSourceMap();\n        const action = this.get(); // (増やす|減らす)\n        if (action === null) {\n            return null;\n        }\n        // 『Nずつ増やして繰り返す』文か？\n        if (this.check('繰返')) {\n            this.pushStack({ type: 'word', value: action.value, josi: action.josi, ...map, end: this.peekSourceMap() });\n            return this.yFor();\n        }\n        // スタックから引数をポップ\n        let value = this.popStack(['だけ', '']);\n        if (!value) {\n            value = { type: 'number', value: 1, josi: 'だけ', ...map, end: this.peekSourceMap() };\n        }\n        const word = this.popStack(['を']);\n        if (!word || (word.type !== 'word' && word.type !== '配列参照')) {\n            throw NakoSyntaxError.fromNode(`『${action.type}』文で定数が見当たりません。『(変数名)を(値)だけ${action.type}』のように使います。`, action);\n        }\n        // 減らすなら-1かける\n        if (action.value === '減') {\n            value = { type: 'op', operator: '*', left: value, right: { type: 'number', value: -1, line: action.line }, josi: '', ...map };\n        }\n        return {\n            type: 'inc',\n            name: word,\n            value,\n            josi: action.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    yCall() {\n        if (this.isEOF()) {\n            return null;\n        }\n        // スタックに積んでいく\n        while (!this.isEOF()) {\n            if (this.check('ここから')) {\n                this.get();\n            }\n            // 代入\n            if (this.check('代入')) {\n                return this.yDainyu();\n            }\n            if (this.check('定める')) {\n                return this.ySadameru();\n            }\n            // 制御構文\n            if (this.check('回')) {\n                return this.yRepeatTime();\n            }\n            if (this.check('間')) {\n                return this.yWhile();\n            }\n            if (this.check('繰返') || this.check('増繰返') || this.check('減繰返')) {\n                return this.yFor();\n            }\n            if (this.check('反復')) {\n                return this.yForEach();\n            }\n            if (this.check('条件分岐')) {\n                return this.ySwitch();\n            }\n            if (this.check('戻る')) {\n                return this.yReturn();\n            }\n            if (this.check('増') || this.check('減')) {\n                return this.yIncDec();\n            }\n            // C言語風関数\n            if (this.check2([['func', 'word'], '('])) { // C言語風\n                const cur = this.peek();\n                if (cur && cur.josi === '') {\n                    const t = this.yValue(); // yValueにてC言語風呼び出しをパース\n                    if (t) {\n                        const josi = t.josi || '';\n                        if (t.type === 'func' && (t.josi === '' || RenbunJosi.indexOf(josi) >= 0)) {\n                            t.josi = '';\n                            return t; // 関数なら値とする\n                        }\n                        this.pushStack(t);\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    }\n                    continue;\n                }\n            }\n            // なでしこ式関数\n            if (this.check('func')) {\n                const r = this.yCallFunc();\n                if (r === null) {\n                    continue;\n                }\n                // 「〜する間」の形ならスタックに積む。\n                if (this.check('間')) {\n                    this.pushStack(r);\n                    continue;\n                }\n                // 関数呼び出しの直後に、四則演算があるか?\n                if (!this.checkTypes(operatorList)) {\n                    return r;\n                } // なければ関数呼び出しを戻す\n                // 四則演算があった場合、計算してスタックに載せる\n                this.pushStack(this.yGetArgOperator(r));\n                continue;\n            }\n            // 値のとき → スタックに載せる\n            const t = this.yGetArg();\n            if (t) {\n                this.pushStack(t);\n                continue;\n            }\n            break;\n        } // end of while\n        // 助詞が余ってしまった場合\n        if (this.stack.length > 0) {\n            this.logger.debug('--- stack dump ---\\n' + JSON.stringify(this.stack, null, 2) + '\\npeek: ' + JSON.stringify(this.peek(), null, 2));\n            let msgDebug = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, true)).join('、')}が解決していません。`;\n            let msg = `不完全な文です。${this.stack.map((n) => this.nodeToStr(n, { depth: 0 }, false)).join('、')}が解決していません。`;\n            // 各ノードについて、更に詳細な情報があるなら表示\n            for (const n of this.stack) {\n                const d0 = this.nodeToStr(n, { depth: 0 }, false);\n                const d1 = this.nodeToStr(n, { depth: 1 }, false);\n                if (d0 !== d1) {\n                    msgDebug += `${this.nodeToStr(n, { depth: 0 }, true)}は${this.nodeToStr(n, { depth: 1 }, true)}として使われています。`;\n                    msg += `${d0}は${d1}として使われています。`;\n                }\n            }\n            const first = this.stack[0];\n            const last = this.stack[this.stack.length - 1];\n            this.logger.debug(msgDebug, first);\n            throw NakoSyntaxError.fromNode(msg, first, last);\n        }\n        return this.popStack([]);\n    }\n    /** @returns {Ast | null} */\n    yCallFunc() {\n        const map = this.peekSourceMap();\n        const t = this.get();\n        if (!t) {\n            return null;\n        }\n        const f = t.meta;\n        const funcName = t.value;\n        // (関数)には ... 構文 ... https://github.com/kujirahand/nadesiko3/issues/66\n        let funcObj = null;\n        if (t.josi === 'には') {\n            try {\n                funcObj = this.yMumeiFunc();\n            }\n            catch (err) {\n                throw NakoSyntaxError.fromNode(`『${t.value}には...』で無名関数の定義で以下の間違いがあります。\\n${err.message}`, t);\n            }\n            if (funcObj === null) {\n                throw NakoSyntaxError.fromNode('『Fには』構文がありましたが、関数定義が見当たりません。', t);\n            }\n        }\n        if (!f || typeof f.josi === 'undefined') {\n            throw NakoSyntaxError.fromNode('関数の定義でエラー。', t);\n        }\n        // 最近使った関数を記録\n        this.recentlyCalledFunc.push({ name: funcName, ...f });\n        // 呼び出す関数が非同期呼び出しが必要(asyncFn)ならマーク\n        if (f && f.asyncFn) {\n            this.usedAsyncFn = true;\n        }\n        // 関数の引数を取り出す処理\n        const args = [];\n        let nullCount = 0;\n        let valueCount = 0;\n        for (let i = f.josi.length - 1; i >= 0; i--) {\n            while (true) {\n                // スタックから任意の助詞を持つ値を一つ取り出す、助詞がなければ末尾から得る\n                let popArg = this.popStack(f.josi[i]);\n                if (popArg !== null) {\n                    valueCount++;\n                }\n                else if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    nullCount++;\n                    popArg = funcObj;\n                }\n                else {\n                    break;\n                }\n                if (popArg !== null && f.funcPointers !== undefined && f.funcPointers[i] !== null) {\n                    if (popArg.type === 'func') { // 引数が関数の参照渡しに該当する場合、typeを『func_pointer』に変更\n                        popArg.type = 'func_pointer';\n                    }\n                    else {\n                        const varname = (f.varnames) ? f.varnames[i] : `${i + 1}番目の引数`;\n                        throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数『${varname}』には関数オブジェクトが必要です。`, t);\n                    }\n                }\n                args.unshift(popArg);\n                if (i < f.josi.length - 1 || !f.isVariableJosi) {\n                    break;\n                }\n            }\n        }\n        // 引数が不足しているとき(つまり、引数にnullがあるとき)、自動的に『変数「それ」』で補完される。\n        // ただし、nullが1つだけなら、変数「それ」で補完されるが、2つ以上あるときは、エラーにする\n        if (nullCount >= 2 && (valueCount > 0 || t.josi === '' || RenbunJosi.indexOf(t.josi) >= 0)) {\n            throw NakoSyntaxError.fromNode(`関数『${t.value}』の引数が不足しています。`, t);\n        }\n        this.usedFuncs.add(t.value);\n        // 関数呼び出しのAstを構築\n        const funcNode = {\n            type: 'func',\n            name: t.value,\n            args,\n            josi: t.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n        // 「プラグイン名設定」ならば、そこでスコープを変更することを意味する (#1112)\n        if (funcNode.name === 'プラグイン名設定') {\n            if (args.length > 0 && args[0]) {\n                let fname = '' + args[0].value;\n                if (fname === 'メイン') {\n                    fname = '' + args[0].file;\n                }\n                this.namespaceStack.push(this.modName);\n                this.modName = NakoLexer.filenameToModName(fname);\n                this.modList.push(this.modName);\n            }\n        }\n        else if (funcNode.name === '名前空間ポップ') { // (#1409)\n            const space = this.namespaceStack.pop();\n            if (space) {\n                this.modName = space;\n            }\n        }\n        // 言い切りならそこで一度切る\n        if (t.josi === '') {\n            return funcNode;\n        }\n        // 「**して、**」の場合も一度切る\n        if (RenbunJosi.indexOf(t.josi) >= 0) {\n            funcNode.josi = 'して';\n            return funcNode;\n        }\n        // 続き\n        funcNode.meta = f;\n        this.pushStack(funcNode);\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLet() {\n        const map = this.peekSourceMap();\n        // 通常の変数\n        if (this.check2(['word', 'eq'])) {\n            const word = this.peek();\n            let threw = false;\n            try {\n                if (this.accept(['word', 'eq', this.yCalc]) || this.accept(['word', 'eq', this.ySentence])) {\n                    if (this.y[2].type === 'eol') {\n                        throw new Error('値が空です。');\n                    }\n                    if (this.check('comma')) {\n                        this.get();\n                    } // skip comma (ex) name1=val1, name2=val2\n                    const nameToken = this.getVarName(this.y[0]);\n                    const valueToken = this.y[2];\n                    return {\n                        type: 'let',\n                        name: nameToken,\n                        value: valueToken,\n                        ...map,\n                        end: this.peekSourceMap()\n                    };\n                }\n                else {\n                    threw = true;\n                    this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に書き間違いがあります。`, word);\n                    throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に書き間違いがあります。`, map);\n                }\n            }\n            catch (err) {\n                if (threw) {\n                    throw err;\n                }\n                this.logger.debug(`${this.nodeToStr(word, { depth: 1 }, true)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, word);\n                throw NakoSyntaxError.fromNode(`${this.nodeToStr(word, { depth: 1 }, false)}への代入文で計算式に以下の書き間違いがあります。\\n${err.message}`, map);\n            }\n        }\n        // let_array ?\n        if (this.check2(['word', '@'])) {\n            const la = this.yLetArrayAt(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (la) {\n                la.checkInit = this.flagCheckArrayInit;\n                return la;\n            }\n        }\n        if (this.check2(['word', '['])) {\n            const lb = this.yLetArrayBracket(map);\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            if (lb) {\n                lb.checkInit = this.flagCheckArrayInit;\n                return lb;\n            }\n        }\n        // ローカル変数定義\n        if (this.accept(['word', 'とは'])) {\n            const wordToken = this.y[0];\n            if (!this.checkTypes(['変数', '定数'])) {\n                throw NakoSyntaxError.fromNode('ローカル変数『' + wordToken.value + '』の定義エラー', wordToken);\n            }\n            const vtype = this.getCur(); // 変数 or 定数\n            const word = this.createVar(wordToken, vtype.type === '定数');\n            // 初期値がある？\n            let value = null;\n            if (this.check('eq')) {\n                this.get();\n                value = this.yCalc();\n            }\n            if (this.check('comma')) {\n                this.get();\n            } // skip comma (ex) name1=val1, name2=val2\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: vtype.type,\n                value,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // ローカル変数定義（その２）\n        if (this.accept(['変数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], false);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['定数', 'word', 'eq', this.yCalc])) {\n            const word = this.createVar(this.y[1], true);\n            return {\n                type: 'def_local_var',\n                name: word,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数定数への代入 #563\n        if (this.accept(['定数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数定数の代入文${i + 1}番目でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数定数の代入文でエラー。『定数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, true);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '定数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.accept(['変数', this.yJSONArray, 'eq', this.yCalc])) {\n            const names = this.y[1];\n            // check array\n            if (names && names.value instanceof Array) {\n                for (const i in names.value) {\n                    if (names.value[i].type !== 'word') {\n                        throw NakoSyntaxError.fromNode(`複数変数の代入文${i + 1}番目でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。`, this.y[0]);\n                    }\n                }\n            }\n            else {\n                throw NakoSyntaxError.fromNode('複数変数の代入文でエラー。『変数[A,B,C]=[1,2,3]』の書式で記述してください。', this.y[0]);\n            }\n            names.value = this.createVarList(names.value, false);\n            return {\n                type: 'def_local_varlist',\n                names: names.value,\n                vartype: '変数',\n                value: this.y[3],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 複数変数への代入 #563\n        if (this.check2(['word', 'comma', 'word'])) {\n            // 2 word\n            if (this.accept(['word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[4],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 3 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[6],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 4 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[8],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            // 5 word\n            if (this.accept(['word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'comma', 'word', 'eq', this.yCalc])) {\n                let names = [this.y[0], this.y[2], this.y[4], this.y[6], this.y[8]];\n                names = this.createVarList(names, false);\n                return {\n                    type: 'def_local_varlist',\n                    names,\n                    vartype: '変数',\n                    value: this.y[10],\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * 配列のインデックスが1から始まる場合を考慮するか\n     * @param {Ast} node\n     * @returns\n     */\n    checkArrayIndex(node) {\n        // 配列が0から始まるのであればそのまま返す\n        if (this.arrayIndexFrom === 0) {\n            return node;\n        }\n        // 配列が1から始まるのであれば演算を加えて返す\n        return {\n            ...node,\n            'type': 'op',\n            'operator': '-',\n            'left': node,\n            'right': {\n                ...node,\n                'type': 'number',\n                'value': this.arrayIndexFrom\n            }\n        };\n    }\n    /**\n     * 配列のインデックスを逆順にするのを考慮するか\n     * @param {Ast[]| null} ary\n     */\n    checkArrayReverse(ary) {\n        if (!ary) {\n            return [];\n        }\n        if (!this.flagReverseArrayIndex) {\n            return ary;\n        }\n        // 二次元以上の配列変数のアクセスを[y][x]ではなく[x][y]と順序を変更する\n        if (ary.length <= 1) {\n            return ary;\n        }\n        return ary.reverse();\n    }\n    /** @returns {Ast | null} */\n    yLetArrayAt(map) {\n        // 一次元配列\n        if (this.accept(['word', '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[4],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '@', this.yValue, '@', this.yValue, '@', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[6],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列(カンマ指定)\n        if (this.accept(['word', '@', this.yValue, 'comma', this.yValue, 'comma', this.yValue, 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[8],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yLetArrayBracket(map) {\n        // 一次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: [this.checkArrayIndex(this.y[2])],\n                value: this.y[5],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 二次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5])]),\n                value: this.y[8],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4])]),\n                value: this.y[7],\n                tag: '2',\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 三次元配列\n        if (this.accept(['word', '[', this.yCalc, ']', '[', this.yCalc, ']', '[', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[5]), this.checkArrayIndex(this.y[8])]),\n                value: this.y[11],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['word', '[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']', 'eq', this.yCalc])) {\n            return {\n                type: 'let_array',\n                name: this.getVarName(this.y[0]),\n                index: this.checkArrayReverse([this.checkArrayIndex(this.y[2]), this.checkArrayIndex(this.y[4]), this.checkArrayIndex(this.y[6])]),\n                value: this.y[9],\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        return null;\n    }\n    /** @returns {Ast | null} */\n    yCalc() {\n        const map = this.peekSourceMap();\n        if (this.check('eol')) {\n            return null;\n        }\n        // 値を一つ読む\n        const t = this.yGetArg();\n        if (!t) {\n            return null;\n        }\n        // 助詞がある？ つまり、関数呼び出しがある？\n        if (t.josi === '') {\n            return t;\n        } // 値だけの場合\n        // 関数の呼び出しがあるなら、スタックに載せて関数読み出しを呼ぶ\n        this.pushStack(t);\n        const t1 = this.yCall();\n        if (!t1) {\n            return this.popStack();\n        }\n        // それが連文か確認\n        if (RenbunJosi.indexOf(t1.josi || '') < 0) {\n            return t1;\n        } // 連文ではない\n        // 連文なら右側を読んで左側とくっつける\n        const t2 = this.yCalc();\n        if (!t2) {\n            return t1;\n        }\n        return {\n            type: 'renbun',\n            left: t1,\n            right: t2,\n            josi: t2.josi,\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n    /** @returns {Ast | null} */\n    yValueKakko() {\n        if (!this.check('(')) {\n            return null;\n        }\n        const t = this.get(); // skip '('\n        if (!t) {\n            throw new Error('[System Error] check したのに get できない');\n        }\n        this.saveStack();\n        const v = this.yCalc() || this.ySentence();\n        if (v === null) {\n            const v2 = this.get();\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v2, { depth: 1 }, false) + 'の近く', t);\n        }\n        if (!this.check(')')) {\n            this.logger.debug('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, true) + 'の近く', t);\n            throw NakoSyntaxError.fromNode('(...)の解析エラー。' + this.nodeToStr(v, { depth: 1 }, false) + 'の近く', t);\n        }\n        const closeParent = this.get(); // skip ')'\n        this.loadStack();\n        if (closeParent) {\n            v.josi = closeParent.josi;\n        }\n        return v;\n    }\n    /** @returns {Ast | null} */\n    yValue() {\n        const map = this.peekSourceMap();\n        // カンマなら飛ばす #877\n        if (this.check('comma')) {\n            this.get();\n        }\n        // プリミティブな値\n        if (this.checkTypes(['number', 'string'])) {\n            return this.getCur();\n        } // Token To Ast\n        // 丸括弧\n        if (this.check('(')) {\n            return this.yValueKakko();\n        }\n        // マイナス記号\n        if (this.check2(['-', 'number']) || this.check2(['-', 'word']) || this.check2(['-', 'func'])) {\n            const m = this.get(); // skip '-'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            const line = (m && m.line) ? m.line : 0;\n            return {\n                type: 'op',\n                operator: '*',\n                left: { type: 'number', value: -1, line },\n                right: v || [],\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // NOT\n        if (this.check('not')) {\n            this.get(); // skip '!'\n            const v = this.yValue();\n            const josi = (v && v.josi) ? v.josi : '';\n            return {\n                type: 'not',\n                value: v,\n                josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // JSON object\n        const a = this.yJSONArray();\n        if (a) {\n            return a;\n        }\n        const o = this.yJSONObject();\n        if (o) {\n            return o;\n        }\n        // 一語関数\n        const splitType = operatorList.concat(['eol', ')', ']', 'ならば', '回', '間', '反復', '条件分岐']);\n        if (this.check2(['func', splitType])) {\n            const tt = this.get();\n            if (!tt) {\n                throw new Error('[System Error] 正しく値が取れませんでした。');\n            }\n            const f = this.getVarNameRef(tt);\n            this.usedFuncs.add(f.value);\n            // 引数の個数をチェック\n            const meta = f.meta;\n            const args = [];\n            if (!meta) {\n                throw NakoSyntaxError.fromNode(`一語関数『${f.name}』は存在しません。`, tt);\n            }\n            if (meta.josi && meta.josi.length === 1) {\n                args.push({ type: 'word', value: 'それ' });\n            }\n            else if (meta.josi && meta.josi.length >= 2) {\n                throw NakoSyntaxError.fromNode(`関数『${f.name}』で引数が指定されていません。${meta.josi.length}個の引数を指定してください。`, tt);\n            }\n            return {\n                type: 'func',\n                name: f.value,\n                args,\n                josi: f.josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // C風関数呼び出し FUNC(...)\n        if (this.check2([['func', 'word'], '(']) && this.peekDef().josi === '') {\n            const f = this.peek();\n            if (this.accept([['func', 'word'], '(', this.yGetArgParen, ')'])) {\n                const ff = this.getVarNameRef(this.y[0]);\n                const args = this.y[2];\n                const funcName = ff.value;\n                this.usedFuncs.add(funcName);\n                // 引数の個数をチェック\n                const meta = ff.meta;\n                if (meta && meta.josi) {\n                    // 引数の個数が異なる場合\n                    if (meta.josi.length === args.length) {\n                        // ok\n                    }\n                    else if (meta.isVariableJosi) {\n                        // ok\n                    }\n                    else { // 引数の個数が違う\n                        throw NakoSyntaxError.fromNode(`関数『${ff.value}』で引数${args.length}個が指定されましたが、${meta.josi.length}個の引数を指定してください。`, ff);\n                    }\n                }\n                return {\n                    type: 'func',\n                    name: funcName,\n                    args,\n                    josi: this.y[3].josi,\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n            }\n            throw NakoSyntaxError.fromNode('C風関数呼び出しのエラー', f || NewEmptyToken());\n        }\n        // 関数呼び出し演算子(core #83)で廃止\n        if (this.check2(['func', '←'])) {\n            throw new Error('関数呼び出し演算子は廃止されました。');\n        }\n        // 無名関数(関数オブジェクト)\n        if (this.check('def_func')) {\n            return this.yMumeiFunc();\n        }\n        // 変数\n        const word = this.yValueWord();\n        if (word) {\n            return word;\n        }\n        // その他\n        return null;\n    }\n    yValueWordGetIndex(ast) {\n        if (!ast.index) {\n            ast.index = [];\n        }\n        // word @ a, b, c\n        if (this.check('@')) {\n            if (this.accept(['@', this.yValue, 'comma', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index.push(this.checkArrayIndex(this.y[5]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[5].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue, 'comma', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.index.push(this.checkArrayIndex(this.y[3]));\n                ast.index = this.checkArrayReverse(ast.index);\n                ast.josi = this.y[3].josi;\n                return true;\n            }\n            if (this.accept(['@', this.yValue])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[1].josi;\n                return true;\n            }\n            throw NakoSyntaxError.fromNode('変数の後ろの『@要素』の指定が不正です。', ast);\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, ']'])) {\n                ast.index.push(this.checkArrayIndex(this.y[1]));\n                ast.josi = this.y[2].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[4].josi;\n                return true;\n            }\n        }\n        if (this.check('[')) {\n            if (this.accept(['[', this.yCalc, 'comma', this.yCalc, 'comma', this.yCalc, ']'])) {\n                const index = [\n                    this.checkArrayIndex(this.y[1]),\n                    this.checkArrayIndex(this.y[3]),\n                    this.checkArrayIndex(this.y[5])\n                ];\n                ast.index = this.checkArrayReverse(index);\n                ast.josi = this.y[6].josi;\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @returns {Ast | null} */\n    yValueWord() {\n        const map = this.peekSourceMap();\n        if (this.check('word')) {\n            const t = this.getCur();\n            const word = this.getVarNameRef(t);\n            // word[n] || word@n\n            if (word.josi === '' && this.checkTypes(['[', '@'])) {\n                const ast = {\n                    type: '配列参照',\n                    name: word,\n                    index: [],\n                    josi: '',\n                    ...map,\n                    end: this.peekSourceMap()\n                };\n                while (!this.isEOF()) {\n                    if (!this.yValueWordGetIndex(ast)) {\n                        break;\n                    }\n                }\n                if (ast.index && ast.index.length === 0) {\n                    throw NakoSyntaxError.fromNode(`配列『${word.value}』アクセスで指定ミス`, word);\n                }\n                return ast;\n            }\n            return word; // Token to Ast\n        }\n        return null;\n    }\n    /** 変数を生成 */\n    createVar(word, isConst) {\n        let gname = word.value;\n        const typeName = isConst ? 'const' : 'var';\n        if (this.funcLevel === 0) {\n            // global ?\n            if (gname.indexOf('__') < 0) {\n                gname = this.modName + '__' + gname;\n            }\n            this.funclist[gname] = { type: typeName, value: '' };\n            word.value = gname;\n            return word;\n        }\n        else {\n            // local\n            this.localvars[gname] = { type: typeName, value: '' };\n            return word;\n        }\n    }\n    /** 変数名を検索して解決する\n     * @param {Ast|Token} word\n     * @return {Ast|Token}\n     */\n    getVarName(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (f) {\n            if (f && f.scope === 'global') {\n                word.value = f.name;\n            }\n            return word;\n        }\n        // 変数が見つからない\n        this.createVar(word, false);\n        return word;\n    }\n    /** 変数名を検索して解決する */\n    getVarNameRef(word) {\n        // check word name\n        const f = this.findVar(word.value);\n        if (!f) { // 変数が見つからない\n            if (this.funcLevel === 0 && word.value.indexOf('__') < 0) {\n                word.value = this.modName + '__' + word.value;\n            }\n        }\n        else if (f && f.scope === 'global') {\n            word.value = f.name;\n        }\n        return word;\n    }\n    /** 複数の変数名を検索して解決する */\n    createVarList(words, isConst) {\n        for (let i = 0; i < words.length; i++) {\n            words[i] = this.createVar(words[i], isConst);\n        }\n        return words;\n    }\n    yJSONObjectValue() {\n        const a = [];\n        const firstToken = this.peek();\n        if (!firstToken) {\n            return null;\n        }\n        while (!this.isEOF()) {\n            while (this.check('eol')) {\n                this.get();\n            }\n            if (this.check('}')) {\n                break;\n            }\n            if (this.accept(['word', ':', this.yCalc])) {\n                this.y[0].type = 'string'; // キー名の文字列記号省略の場合\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.accept(['string', ':', this.yCalc])) {\n                a.push({\n                    key: this.y[0],\n                    value: this.y[2]\n                });\n            }\n            else if (this.check('word')) {\n                const w = this.getCur();\n                w.type = 'string';\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else if (this.checkTypes(['string', 'number'])) {\n                const w = this.getCur();\n                a.push({\n                    key: w,\n                    value: w\n                });\n            }\n            else {\n                throw NakoSyntaxError.fromNode('辞書オブジェクトの宣言で末尾の『}』がありません。', firstToken);\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONObject() {\n        const map = this.peekSourceMap();\n        if (this.accept(['{', '}'])) {\n            return {\n                type: 'json_obj',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['{', this.yJSONObjectValue, '}'])) {\n            return {\n                type: 'json_obj',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 辞書初期化に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['{', this.yJSONObjectValue])) {\n            throw NakoSyntaxError.fromNode('辞書型変数の初期化が『}』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    yJSONArrayValue() {\n        if (this.check('eol')) {\n            this.get();\n        }\n        const v1 = this.yCalc();\n        if (v1 === null) {\n            return null;\n        }\n        if (this.check('comma')) {\n            this.get();\n        }\n        const a = [v1];\n        while (!this.isEOF()) {\n            if (this.check('eol')) {\n                this.get();\n            }\n            if (this.check(']')) {\n                break;\n            }\n            const v2 = this.yCalc();\n            if (v2 === null) {\n                break;\n            }\n            if (this.check('comma')) {\n                this.get();\n            }\n            a.push(v2);\n        }\n        return a;\n    }\n    /** @returns {Ast | null} */\n    yJSONArray() {\n        const map = this.peekSourceMap();\n        if (this.accept(['[', ']'])) {\n            return {\n                type: 'json_array',\n                value: [],\n                josi: this.y[1].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        if (this.accept(['[', this.yJSONArrayValue, ']'])) {\n            return {\n                type: 'json_array',\n                value: this.y[1],\n                josi: this.y[2].josi,\n                ...map,\n                end: this.peekSourceMap()\n            };\n        }\n        // 配列に終わりがなかった場合 (エラーチェックのため) #958\n        if (this.accept(['[', this.yJSONArrayValue])) {\n            throw NakoSyntaxError.fromNode('配列変数の初期化が『]』で閉じられていません。', this.y[1]);\n        }\n        return null;\n    }\n    /** エラー監視構文 */\n    yTryExcept() {\n        const map = this.peekSourceMap();\n        if (!this.check('エラー監視')) {\n            return null;\n        }\n        const kansi = this.getCur(); // skip エラー監視\n        const block = this.yBlock();\n        if (!this.check2(['エラー', 'ならば'])) {\n            throw NakoSyntaxError.fromNode('エラー構文で『エラーならば』がありません。' +\n                '『エラー監視..エラーならば..ここまで』を対で記述します。', kansi);\n        }\n        this.get(); // skip エラー\n        this.get(); // skip ならば\n        const errBlock = this.yBlock();\n        if (this.check('ここまで')) {\n            this.get();\n        }\n        else {\n            throw NakoSyntaxError.fromNode('『ここまで』がありません。『エラー監視』...『エラーならば』...『ここまで』を対応させてください。', map);\n        }\n        return {\n            type: 'try_except',\n            block,\n            errBlock: errBlock || [],\n            josi: '',\n            ...map,\n            end: this.peekSourceMap()\n        };\n    }\n}\n","import { NewEmptyToken } from './nako_types.mjs';\n/**\n * なでしこの構文解析のためのユーティリティクラス\n */\nexport class NakoParserBase {\n    constructor(logger) {\n        this.logger = logger;\n        this.stackList = []; // 関数定義の際にスタックが混乱しないように整理する\n        this.tokens = [];\n        this.usedFuncs = new Set();\n        /** @type {import('./nako3.mjs').Ast[]} */\n        this.stack = [];\n        this.index = 0;\n        /** トークン出現チェック(accept関数)に利用する\n         * @type {import('./nako3.mjs').Ast[]}\n         */\n        this.y = [];\n        /** モジュル名 @type {string} */\n        this.modName = 'inline';\n        this.namespaceStack = [];\n        /**\n         * 利用するモジュールの名前一覧\n         * @type {Array<string>}\n         */\n        this.modList = [];\n        /** グローバル変数・関数の確認用 */\n        this.funclist = {};\n        this.funcLevel = 0;\n        this.usedAsyncFn = false; // asyncFnの呼び出しがあるかどうか\n        /**\n         * ローカル変数の確認用\n         * @type {Object.<string,Object>}\n         */\n        this.localvars = { 'それ': { type: 'var', value: '' } };\n        /** コード生成器の名前 @type {string} */\n        this.genMode = 'sync'; // #637\n        /** 配列のインデックスが先頭要素(#1140) @type {int} */\n        this.arrayIndexFrom = 0;\n        /** 配列のインデックス順序を反対にするか(#1140) @type {boolean} */\n        this.flagReverseArrayIndex = false;\n        /** 配列を自動的に初期化するか(#1140) @type {boolean} */\n        this.flagCheckArrayInit = false;\n        /** 最近呼び出した関数(余剰エラーの報告に使う) */\n        this.recentlyCalledFunc = [];\n        this.init();\n    }\n    init() {\n        this.funclist = {}; // 関数の一覧\n        this.reset();\n    }\n    reset() {\n        this.tokens = []; // 字句解析済みのトークンの一覧を保存\n        this.index = 0; // tokens[] のどこまで読んだかを管理する\n        this.stack = []; // 計算用のスタック ... 直接は操作せず、pushStack() popStack() を介して使う\n        this.y = []; // accept()で解析済みのトークンを配列で得るときに使う\n        this.genMode = 'sync'; // #637, #1056\n    }\n    setFuncList(funclist) {\n        this.funclist = funclist;\n    }\n    /**\n     * 特定の助詞を持つ要素をスタックから一つ下ろす、指定がなければ末尾を下ろす\n     * @param {string[]} josiList 下ろしたい助詞の配列\n     */\n    popStack(josiList = undefined) {\n        if (!josiList) {\n            const t = this.stack.pop();\n            if (t) {\n                return t;\n            }\n            return null;\n        }\n        // josiList にマッチする助詞を探す\n        for (let i = this.stack.length - 1; i >= 0; i--) {\n            const t = this.stack[i];\n            if (josiList.length === 0 || josiList.indexOf(t.josi) >= 0) {\n                this.stack.splice(i, 1); // remove stack\n                this.logger.trace('POP :' + JSON.stringify(t));\n                return t;\n            }\n        }\n        // 該当する助詞が見つからなかった場合\n        return null;\n    }\n    /**\n     * saveStack と loadStack は対で使う。\n     * 関数定義などでスタックが混乱しないように配慮するためのもの\n     */\n    saveStack() {\n        this.stackList.push(this.stack);\n        this.stack = [];\n    }\n    loadStack() {\n        this.stack = this.stackList.pop();\n    }\n    /** 変数名を探す\n     * @param {string} name\n     * @returns {any}変数名の情報\n     */\n    findVar(name) {\n        // ローカル変数？\n        if (this.localvars[name]) {\n            return {\n                name,\n                scope: 'local',\n                info: this.localvars[name]\n            };\n        }\n        // モジュール名を含んでいる?\n        if (name.indexOf('__') >= 0) {\n            if (this.funclist[name]) {\n                return {\n                    name,\n                    scope: 'global',\n                    info: this.funclist[name]\n                };\n            }\n            else {\n                return undefined;\n            }\n        }\n        // グローバル変数（自身）？\n        const gnameSelf = `${this.modName}__${name}`;\n        if (this.funclist[gnameSelf]) {\n            return {\n                name: gnameSelf,\n                scope: 'global',\n                info: this.funclist[gnameSelf]\n            };\n        }\n        // グローバル変数（モジュールを検索）？\n        for (const mod of this.modList) {\n            const gname = `${mod}__${name}`;\n            if (this.funclist[gname]) {\n                return {\n                    name: gname,\n                    scope: 'global',\n                    info: this.funclist[gname]\n                };\n            }\n        }\n        // システム変数 (funclistを普通に検索)\n        if (this.funclist[name]) {\n            return {\n                name,\n                scope: 'system',\n                info: this.funclist[name]\n            };\n        }\n        return undefined;\n    }\n    /**\n     * 計算用に要素をスタックに積む\n     */\n    pushStack(item) {\n        this.logger.trace('PUSH:' + JSON.stringify(item));\n        this.stack.push(item);\n    }\n    /**\n     * トークンの末尾に達したか\n     */\n    isEOF() {\n        return (this.index >= this.tokens.length);\n    }\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * カーソル位置にある単語の型を確かめる\n     */\n    check(ttype) {\n        return (this.tokens[this.index].type === ttype);\n    }\n    /**\n     * カーソル位置以降にある単語の型を確かめる 2単語以上に対応\n     * @param a [単語1の型, 単語2の型, ... ]\n     */\n    check2(a) {\n        for (let i = 0; i < a.length; i++) {\n            const idx = i + this.index;\n            if (this.tokens.length <= idx) {\n                return false;\n            }\n            if (a[i] === '*') {\n                continue;\n            } // ワイルドカード(どんなタイプも許容)\n            const t = this.tokens[idx];\n            if (a[i] instanceof Array) {\n                if (a[i].indexOf(t.type) < 0) {\n                    return false;\n                }\n                continue;\n            }\n            if (t.type !== a[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * カーソル位置の型を確認するが、複数の種類を確かめられる\n     */\n    checkTypes(a) {\n        const type = this.tokens[this.index].type;\n        return (a.indexOf(type) >= 0);\n    }\n    /**\n     * check2の高度なやつ、型名の他にコールバック関数を指定できる\n     * 型にマッチしなければ false を返し、カーソルを巻き戻す\n     */\n    accept(types) {\n        const y = [];\n        const tmpIndex = this.index;\n        const rollback = () => {\n            this.index = tmpIndex;\n            return false;\n        };\n        for (let i = 0; i < types.length; i++) {\n            if (this.isEOF()) {\n                return rollback();\n            }\n            const type = types[i];\n            if (type == null) {\n                return rollback();\n            }\n            if (typeof type === 'string') {\n                const token = this.get();\n                if (token && token.type !== type) {\n                    return rollback();\n                }\n                y[i] = token;\n                continue;\n            }\n            if (typeof type === 'function') {\n                const f = type.bind(this);\n                const r = f(y);\n                if (r === null) {\n                    return rollback();\n                }\n                y[i] = r;\n                continue;\n            }\n            if (type instanceof Array) {\n                if (!this.checkTypes(type)) {\n                    return rollback();\n                }\n                y[i] = this.get();\n                continue;\n            }\n            throw new Error('System Error : accept broken : ' + typeof type);\n        }\n        this.y = y;\n        return true;\n    }\n    /**\n     * カーソル語句を取得して、カーソルを後ろに移動する\n     */\n    get() {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index++];\n    }\n    /** カーソル語句を取得してカーソルを進める、取得できなければエラーを出す */\n    getCur() {\n        if (this.isEOF()) {\n            throw new Error('トークンが取得できません。');\n        }\n        const t = this.tokens[this.index++];\n        if (!t) {\n            throw new Error('トークンが取得できません。');\n        }\n        return t;\n    }\n    unget() {\n        if (this.index > 0) {\n            this.index--;\n        }\n    }\n    /** 解析中のトークンを返す */\n    peek(i = 0) {\n        if (this.isEOF()) {\n            return null;\n        }\n        return this.tokens[this.index + i];\n    }\n    /** 解析中のトークンを返す、無理なら def を返す */\n    peekDef(def = null) {\n        if (this.isEOF()) {\n            if (!def) {\n                def = NewEmptyToken();\n            }\n            return def;\n        }\n        return this.tokens[this.index];\n    }\n    /**\n     * 現在のカーソル語句のソースコード上の位置を取得する。\n     */\n    peekSourceMap() {\n        const token = this.peek();\n        if (token === null) {\n            return { startOffset: undefined, endOffset: undefined, file: undefined, line: 0, column: 0 };\n        }\n        return { startOffset: token.startOffset, endOffset: token.endOffset, file: token.file, line: token.line, column: token.column };\n    }\n    /**\n     * depth: 表示する深さ\n     * typeName: 先頭のtypeの表示を上書きする場合に設定する\n     * @param {{ depth: number, typeName?: string }} opts\n     * @param {boolean} debugMode\n     */\n    nodeToStr(node, opts, debugMode) {\n        const depth = opts.depth - 1;\n        const typeName = (name) => (opts.typeName !== undefined) ? opts.typeName : name;\n        const debug = debugMode ? (' debug: ' + JSON.stringify(node, null, 2)) : '';\n        if (!node) {\n            return '(NULL)';\n        }\n        switch (node.type) {\n            case 'not':\n                if (depth >= 0) {\n                    const subNode = node.value;\n                    return `${typeName('')}『${this.nodeToStr(subNode, { depth }, debugMode)}に演算子『not』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『not』`;\n                }\n            case 'op': {\n                const node2 = node;\n                let operator = node2.operator || '';\n                const table = { eq: '＝', not: '!', gt: '>', lt: '<', and: 'かつ', or: 'または' };\n                if (operator in table) {\n                    operator = table[operator];\n                }\n                if (depth >= 0) {\n                    const left = this.nodeToStr(node2.left, { depth }, debugMode);\n                    const right = this.nodeToStr(node2.right, { depth }, debugMode);\n                    if (node2.operator === 'eq') {\n                        return `${typeName('')}『${left}と${right}が等しいかどうかの比較${debug}』`;\n                    }\n                    return `${typeName('')}『${left}と${right}に演算子『${operator}』を適用した式${debug}』`;\n                }\n                else {\n                    return `${typeName('演算子')}『${operator}${debug}』`;\n                }\n            }\n            case 'number':\n                return `${typeName('数値')}${node.value}`;\n            case 'string':\n                return `${typeName('文字列')}『${node.value}${debug}』`;\n            case 'word':\n                return `${typeName('単語')}『${node.value}${debug}』`;\n            case 'func':\n                return `${typeName('関数')}『${node.name || node.value}${debug}』`;\n            case 'eol':\n                return '行の末尾';\n            case 'eof':\n                return 'ファイルの末尾';\n            default: {\n                let name = node.name;\n                if (name) {\n                    name = node.value;\n                }\n                if (typeof name !== 'string') {\n                    name = node.type;\n                }\n                return `${typeName('')}『${name}${debug}』`;\n            }\n        }\n    }\n}\n","/**\n * nako_prepare.js\n * 字句解析の前の前処理。全角文字を半角文字に変換するのが主な処理。\n * ただし、コメントや文字列の中は変換しないように考慮して変換する。\n */\nclass ReplaceHistory {\n    constructor(from, to, index) {\n        this.from = from;\n        this.to = to;\n        this.index = index;\n    }\n}\nclass ConvertResult {\n    constructor(text, sourcePosition) {\n        this.text = text;\n        this.sourcePosition = sourcePosition;\n    }\n}\n/**\n * 置換後の位置から置換前の位置へマッピングできる文字列\n */\nexport class Replace {\n    constructor(code) {\n        this.history = [];\n        this.code = code;\n    }\n    getText() {\n        return this.code;\n    }\n    replaceAll(from, to) {\n        while (true) {\n            const index = this.getText().indexOf(from);\n            if (index === -1) {\n                break;\n            }\n            if (from.length !== to.length) {\n                this.history.unshift(new ReplaceHistory(from.length, to.length, index));\n            }\n            this.code = this.code.replace(from, to);\n        }\n    }\n    getSourcePosition(i) {\n        // 少し遅い。パース時間1.4秒に対して0.15秒かかる。iが単調増加することを利用して高速化できるはず。\n        for (const item of this.history) {\n            if (i >= item.index + item.to) { // 置換範囲より後ろ\n                i += item.from - item.to;\n            }\n            else if (item.index <= i && i < item.index + item.to) { // 置換範囲\n                // 置換文字列が2文字以上のとき、最後の文字は最後の文字へマップする。それ以外は最初の文字へマップする。\n                if (item.to >= 2 && i === item.index + item.to - 1) {\n                    i = item.index + item.from - 1;\n                }\n                else {\n                    i = item.index;\n                }\n            }\n        }\n        return i;\n    }\n}\n/**\n * 字句解析を行う前に全角文字を半角に揃える\n *    [memo]\n *    ただし、文字列部分だけは、そのまま全角で出力するようにする\n *    for https://github.com/kujirahand/nadesiko3/issues/94\n */\nexport class NakoPrepare {\n    constructor() {\n        // 単純な変換テーブル\n        this.convertTable = new Map([\n            // ハイフンへの変換\n            // 参考) https://hydrocul.github.io/wiki/blog/2014/1101-hyphen-minus-wave-tilde\n            // 0x2d: true, // ASCIIのハイフン\n            [0x2010, '-'],\n            [0x2011, '-'],\n            [0x2013, '-'],\n            [0x2014, '-'],\n            [0x2015, '-'],\n            [0x2212, '-'],\n            // チルダの変換\n            // 0x7e: true,\n            [0x02dc, '~'],\n            [0x02F7, '~'],\n            [0x2053, '~'],\n            [0x223c, '~'],\n            [0x301c, '~'],\n            [0xFF5E, '~'],\n            // スペースの変換\n            // 参考) http://anti.rosx.net/etc/memo/002_space.html\n            // 0x20: true,\n            [0x2000, ' '],\n            [0x2002, ' '],\n            [0x2003, ' '],\n            [0x2004, ' '],\n            [0x2005, ' '],\n            [0x2006, ' '],\n            [0x2007, ' '],\n            [0x2009, ' '],\n            [0x200A, ' '],\n            [0x200B, ' '],\n            [0x202F, ' '],\n            [0x205F, ' '],\n            [0x3000, ' '],\n            [0x3164, ' '],\n            // その他の変換\n            // [0x09, ' '], // TAB --> SPC\n            [0x203B, '#'],\n            [0x3002, ';'],\n            [0x3010, '['],\n            [0x3011, ']'],\n            // 読点は「,」に変換する (#877)\n            [0x3001, ','],\n            [0xFF0C, ','],\n            [0x2716, '*'],\n            [0x2795, '+'],\n            [0x2796, '-'],\n            [0x2797, '÷'] // ÷の絵文字 (#1183)\n        ]);\n    }\n    /** 唯一のインスタンスを返す */\n    static getInstance() {\n        if (!NakoPrepare._instance) {\n            NakoPrepare._instance = new NakoPrepare();\n        }\n        return NakoPrepare._instance;\n    }\n    // 一文字だけ変換\n    /**\n     * @param {string} ch\n     */\n    convert1ch(ch) {\n        if (!ch) {\n            return '';\n        }\n        const c = ch.codePointAt(0) || 0;\n        // テーブルによる変換\n        const c2 = this.convertTable.get(c) || '';\n        if (c2) {\n            return c2;\n        }\n        // ASCIIエリア\n        if (c < 0x7F) {\n            return ch;\n        }\n        // 全角半角単純変換可能 --- '！' - '～'\n        if (c >= 0xFF01 && c <= 0xFF5E) {\n            const c2 = c - 0xFEE0;\n            return String.fromCodePoint(c2);\n        }\n        return ch;\n    }\n    /** convert code */\n    convert(code) {\n        if (!code) {\n            return [];\n        }\n        const src = new Replace(code);\n        // 改行コードを統一\n        src.replaceAll('\\r\\n', '\\n');\n        src.replaceAll('\\r', '\\n');\n        let flagStr = false; // 文字列リテラル内かどうか\n        let flagStr2 = false; // 絵文字による文字列リテラル内かどうか\n        let endOfStr = ''; // 文字列リテラルを終了させる記号\n        const res = [];\n        let left = 0; // 現在処理中の部分文字列の左端の位置\n        let str = ''; // 文字列リテラルの値\n        // 一文字ずつ全角を半角に置換する\n        let i = 0;\n        while (i < src.getText().length) {\n            const c = src.getText().charAt(i);\n            const ch2 = src.getText().substr(i, 2);\n            // 文字列のとき\n            if (flagStr) {\n                if (c === endOfStr) {\n                    flagStr = false;\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i++;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 絵文字制御による文字列のとき\n            if (flagStr2) {\n                if (ch2 === endOfStr) {\n                    flagStr2 = false;\n                    if (endOfStr === '＊／') {\n                        endOfStr = '*/';\n                    } // 強制変換\n                    res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n                    i += 2;\n                    left = i;\n                    continue;\n                }\n                str += c;\n                i++;\n                continue;\n            }\n            // 文字列判定\n            if (c === '「') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '」';\n                str = '';\n                continue;\n            }\n            if (c === '『') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '』';\n                str = '';\n                continue;\n            }\n            if (c === '“') {\n                res.push(new ConvertResult(c, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = '”';\n                str = '';\n                continue;\n            }\n            // JavaScriptの内部的には文字列はUTF-16で扱われてるので charAt を使う場合 絵文字が2文字扱いになる --- #726\n            if (ch2 === '🌴' || ch2 === '🌿') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = ch2;\n                str = '';\n                continue;\n            }\n            const c1 = this.convert1ch(c);\n            if (c1 === '\"' || c1 === '\\'') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true;\n                endOfStr = c;\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす (#725)\n            if (c1 === '#') {\n                res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n                i++;\n                left = i;\n                flagStr = true; // 本当はコメントだけど便宜上\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // ラインコメントを飛ばす\n            if (ch2 === '//' || ch2 === '／／') {\n                res.push(new ConvertResult('//', src.getSourcePosition(left))); // 強制的に'//'とする\n                i += 2;\n                left = i;\n                flagStr = true;\n                endOfStr = '\\n';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす\n            if (ch2 === '／＊') {\n                res.push(new ConvertResult('/*', src.getSourcePosition(left))); // 強制変換\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '＊／';\n                str = '';\n                continue;\n            }\n            // 複数行コメント内を飛ばす (#731)\n            if (ch2 === '/*') {\n                res.push(new ConvertResult(ch2, src.getSourcePosition(left)));\n                i += 2;\n                left = i;\n                flagStr2 = true;\n                endOfStr = '*/';\n                str = '';\n                continue;\n            }\n            // 変換したものを追加\n            res.push(new ConvertResult(c1, src.getSourcePosition(left)));\n            i++;\n            left = i;\n        }\n        if (flagStr || flagStr2) {\n            res.push(new ConvertResult(str + endOfStr, src.getSourcePosition(left)));\n        }\n        return res;\n    }\n}\n/** なでしこのソースコードのモード(!インデント構文など)が設定されているか調べる */\nexport function checkNakoMode(code, modeNames) {\n    // 先頭の256文字について調べる\n    code = code.substring(0, 256);\n    // 全角半角の揺れを吸収\n    code = code.replace(/(！|💡)/, '!');\n    // 範囲コメントを削除\n    code = code.replace(/\\/\\*.*?\\*\\//g, '');\n    // 毎文調べる\n    const lines = code.split(/[;。\\n]/, 30);\n    for (let line of lines) {\n        line = line.replace(/^\\s+/, '').replace(/\\s+$/, ''); // trim\n        if (modeNames.indexOf(line) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * よく使う処理をまとめたもの\n */\nimport { NewEmptyToken } from './nako_types.mjs';\n/**\n * トークンの内容をデバッグ出力する関数\n * @param tokens トークンの一覧\n * @returns 文字列\n */\nexport function debugTokens(tokens) {\n    const result = [];\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const ftype = t.type;\n        const fvalue = t.value;\n        let s = `[${ftype}:${fvalue}]`;\n        if (ftype === fvalue) {\n            s = ftype;\n        }\n        if (ftype === 'comma') {\n            s = ',';\n        }\n        if (ftype === 'string') {\n            s = `\"${fvalue}\"`;\n        }\n        if (ftype === 'number') {\n            s = `(${fvalue})`;\n        }\n        if (ftype === 'word') {\n            s = `[word:${fvalue}]`;\n        }\n        if (!result[t.line]) {\n            result[t.line] = makeIndent(t.indent);\n        }\n        result[t.line] += s + t.josi + '|';\n    }\n    return result.join('\\n');\n}\nexport function makeIndent(n) {\n    let s = '';\n    for (let i = 0; i < n; i++) {\n        s += ' ';\n    }\n    return s;\n}\nlet lastTokenInfo = NewEmptyToken();\nexport function newToken(type, value, templateToken = undefined) {\n    if (templateToken) {\n        lastTokenInfo = templateToken;\n    }\n    const t = NewEmptyToken(type, value, lastTokenInfo.indent, lastTokenInfo.line, lastTokenInfo.file);\n    return t;\n}\n","/** インデント構文を処理するモジュール */\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { NakoIndentError } from '../src/nako_errors.mjs';\nimport { debugTokens, newToken } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nfunction isSkipWord(t) {\n    if (t.type === '違えば') {\n        return true;\n    }\n    if (t.type === 'word' && t.value === 'エラー' && t.josi === 'ならば') {\n        return true;\n    }\n    return false;\n}\n/** インラインインデント構文 --- 末尾の\":\"をインデントを考慮して\"ここまで\"を挿入 (#1215) */\nexport function convertInlineIndent(tokens) {\n    //\n    // 0:もし、A=0ならば:\n    // 2:  もし、B=0ならば:\n    // 4:    「A=0,B=0」を表示。\n    // 2:  違えば:\n    // 4:    「A=0,B!=0」を表示。\n    // 5:違えば:\n    // 6:  「A!=0」を表示。\n    //\n    const lines = splitTokens(tokens, 'eol');\n    const blockIndents = [];\n    let checkICount = -1;\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        // JSONの途中であればブロックの変更は行わない\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        // インデントの終了を確認する必要があるか？\n        if (checkICount >= 0) {\n            const lineICount = leftToken.indent;\n            while (checkICount >= lineICount) {\n                const tFirst = leftToken;\n                // console.log('@@', lineICount, '>>', checkICount, tFirst.type)\n                if (isSkipWord(tFirst) && (checkICount === lineICount)) { // 「違えば」や「エラーならば」\n                    // 「ここまで」の挿入不要 / ただしネストした際の「違えば」(上記の5の状態なら必要)\n                }\n                else {\n                    // ここまでを挿入する\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', tFirst));\n                    lines[i - 1].push(newToken('eol', '\\n', tFirst));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    checkICount = blockIndents[blockIndents.length - 1];\n                }\n                else {\n                    checkICount = -1;\n                    break;\n                }\n            }\n        }\n        // JSONの途中であればブロックの変更は行わない\n        checkJsonSyntax(line);\n        if (jsonObjLevel > 0 || jsonArrayLevel > 0) {\n            continue;\n        }\n        // 末尾の「:」をチェック\n        const tLast = getLastTokenWithoutEOL(line);\n        if (tLast.type === ':') {\n            // 末尾の「:」を削除\n            lines[i] = lines[i].filter(t => t !== tLast);\n            checkICount = tLast.indent;\n            blockIndents.push(checkICount);\n        }\n    }\n    if (lines.length > 0 && blockIndents.length > 0) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        // ここまでを差し込む\n        for (let i = 0; i < blockIndents.length; i++) {\n            lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n            lines[lines.length - 1].push(newToken('eol', '\\n', t));\n        }\n    }\n    const result = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('###', debugTokens(result));\n    }\n    return result;\n}\n/** 行ごとに分割していたトークンをくっつける */\nexport function joinTokenLines(lines) {\n    const r = [];\n    for (const line of lines) {\n        for (const t of line) {\n            r.push(t);\n        }\n    }\n    return r;\n}\nfunction getLastTokenWithoutEOL(line) {\n    const len = line.length;\n    if (len === 0) {\n        return NewEmptyToken('?');\n    }\n    let res = line[len - 1];\n    if (res.type === 'eol') {\n        if (len >= 2) {\n            res = line[len - 2];\n        }\n    }\n    return res;\n}\nexport function splitTokens(tokens, delimiter) {\n    const result = [];\n    let line = [];\n    let kakko = 0;\n    for (const t of tokens) {\n        line.push(t);\n        if (t.type === '{') {\n            kakko++;\n        }\n        else if (t.type === '}') {\n            kakko--;\n        }\n        else if (kakko === 0 && t.type === delimiter) {\n            result.push(line);\n            line = [];\n        }\n    }\n    if (line.length > 0) {\n        result.push(line);\n    }\n    return result;\n}\n/** トークン行が空かどうか調べる */\nfunction IsEmptyLine(line) {\n    if (line.length === 0) {\n        return true;\n    }\n    for (let j = 0; j < line.length; j++) {\n        const ty = line[j].type;\n        if (ty === 'eol' || ty === 'line_comment' || ty === 'range_comment') {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/** コメントを除去した最初のトークンを返す */\nfunction GetLeftTokens(line) {\n    for (let i = 0; i < line.length; i++) {\n        const t = line[i].type;\n        if (t === 'eol' || t === 'line_comment' || t === 'range_comment') {\n            continue;\n        }\n        return line[i];\n    }\n    return line[0];\n}\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい', '💡インデント構文', '💡ここまでだるい'];\n/** インデント構文 --- インデントを見て\"ここまで\"を自動挿入 (#596) */\nexport function convertIndentSyntax(tokens) {\n    // インデント構文の変換が必要か?\n    if (!useIndentSynax(tokens)) {\n        return tokens;\n    }\n    // 『ここまで』があったらエラーを出す\n    for (const t of tokens) {\n        if (t.type === 'ここまで') {\n            // エラーを出す\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', t.line, t.file);\n        }\n    }\n    // JSON構文のチェック\n    let jsonObjLevel = 0;\n    let jsonArrayLevel = 0;\n    const checkJsonSyntax = (line) => {\n        // JSONのオブジェクトがあるか？\n        line.forEach((t) => {\n            if (t.type === '{') {\n                jsonObjLevel++;\n            }\n            if (t.type === '}') {\n                jsonObjLevel--;\n            }\n            if (t.type === '[') {\n                jsonArrayLevel++;\n            }\n            if (t.type === ']') {\n                jsonArrayLevel--;\n            }\n        });\n    };\n    // 行ごとにトークンを分割\n    const blockIndents = [];\n    const lines = splitTokens(tokens, 'eol');\n    let lastI = 0;\n    // 各行を確認する\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        // 空行は飛ばす || コメント行だけの行も飛ばす\n        if (IsEmptyLine(line)) {\n            continue;\n        }\n        // JSON構文のチェック\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            checkJsonSyntax(line);\n            continue;\n        }\n        const leftToken = GetLeftTokens(line);\n        const curI = leftToken.indent;\n        if (curI === lastI) {\n            continue;\n        }\n        // ブロックの終了?\n        // 0: 3回\n        // 2:   もし、1 > 1ならば\n        // 4:     1を表示\n        // 2:   違えば\n        // 4:     2を表示\n        // 0:\n        // ブロックの終了?\n        if (lastI >= 0) {\n            while (lastI > curI) {\n                const blockIndentTopLast = blockIndents[blockIndents.length - 1][1];\n                // console.log('@@[', i, ']', lastI, '>', curI, '@', blockIndentTopLast, leftToken.type)\n                if (isSkipWord(leftToken) && blockIndentTopLast === curI) {\n                    // 「違えば」などなら不要 (ただし、違えばがネストしている場合は必要)\n                }\n                else {\n                    const t = lines[i - 1][0];\n                    lines[i - 1].push(newToken('ここまで', 'ここまで', t));\n                    lines[i - 1].push(newToken('eol', '\\n', t));\n                }\n                blockIndents.pop();\n                if (blockIndents.length > 0) {\n                    lastI = blockIndents[blockIndents.length - 1][0];\n                }\n                else {\n                    lastI = 0;\n                    break;\n                }\n            }\n        }\n        if (jsonArrayLevel > 0 || jsonObjLevel > 0) {\n            continue;\n        }\n        // JSON構文のチェック\n        checkJsonSyntax(line);\n        // ブロックの開始？\n        if (curI > lastI) {\n            blockIndents.push([curI, lastI]);\n            // console.log('@@@push', curI)\n            lastI = curI;\n            continue;\n        }\n    }\n    // 末尾に「ここまで」を追加する\n    for (let i = 0; i < blockIndents.length; i++) {\n        // トークン情報を得るため、直近のトークンを得る\n        let t = tokens[0];\n        for (let i = lines.length - 1; i >= 0; i--) {\n            const line = lines[i];\n            if (line.length > 0) {\n                t = line[line.length - 1];\n                break;\n            }\n        }\n        lines[lines.length - 1].push(newToken('ここまで', 'ここまで', t));\n        lines[lines.length - 1].push(newToken('eol', '\\n', t));\n    }\n    const result = joinTokenLines(lines);\n    // console.log('###', debugTokens(result))\n    return result;\n}\nfunction useIndentSynax(tokens) {\n    // インデント構文が必要かチェック (最初の100個をチェック)\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && (INDENT_MODE_KEYWORDS.indexOf(t.value) >= 0)) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * DNCLに対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\n// DNCLモードのキーワード\nconst DNCL_KEYWORDS = ['!DNCLモード', '💡DNCLモード'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:を実行': ['ここまで', 'ここまで'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL(tokens) {\n    if (!useDNCLmode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // 行頭の | はただのインデント\n        for (let j = 0; j < line.length; j++) {\n            if (line[j].type === '|') {\n                line[j].type = 'range_comment';\n                continue;\n            }\n            break;\n        }\n        // 後判定の繰り返しの実装のため\n        const t = line[0];\n        if (t.type === 'word' && t.value === '繰返') {\n            line.splice(0, line.length, NewEmptyToken('word', '後判定', t.indent, t.line, t.file), NewEmptyToken('word', '繰返', t.indent, t.line, t.file));\n        }\n        // ^\\s*を,?(.+)になるまで(繰り返す|実行する)/\n        const fi = findTokens(line, ['word:なる', 'word:繰返']);\n        if (fi > 0) {\n            replaceAtohantei(line, fi);\n        }\n        const fi2 = findTokens(line, ['word:なる', 'word:実行']);\n        if (fi2 > 0) {\n            replaceAtohantei(line, fi2);\n        }\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // を繰り返す → ここまで\n        for (;;) {\n            const ni = findTokens(line, ['word:を繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'ここまで';\n            fu.value = 'ここまで';\n            fu.josi = '';\n        }\n        // 'のすべての要素を0にする'\n        // 'のすべての要素に0を代入する'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:要素']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 'のすべての値を0にする'\n        for (;;) {\n            const ni = findTokens(line, ['word:すべて', 'word:値']);\n            if (ni >= 1) {\n                replaceAllElementV(line, ni);\n            }\n            else {\n                break;\n            }\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    return tokens;\n}\nfunction replaceAllElementV(line, ni) {\n    //\n    // const ni = findTokens(line, ['word:すべて', 'word:要素'])\n    //\n    const t = line[ni];\n    line[ni - 1].josi = '';\n    const eq = NewEmptyToken('eq', '=', t.indent, t.line, t.file);\n    const begin = NewEmptyToken('[', '[', t.indent, t.line, t.file);\n    const end = NewEmptyToken(']', ']', t.indent, t.line, t.file);\n    end.josi = 'に';\n    const val = line[ni + 2];\n    val.josi = '';\n    const times = NewEmptyToken('number', 100, t.indent, t.line, t.file);\n    times.josi = 'を';\n    const mul = NewEmptyToken('word', '掛', t.indent, t.line, t.file);\n    line.splice(ni, 4, eq, begin, val, end, times, mul);\n}\nfunction replaceAtohantei(tokens, fi) {\n    // `ここまで、(${r[1]})になるまでの間`\n    const wo = findTokens(tokens, ['word:を']);\n    if (wo >= 0) {\n        tokens[wo].type = 'ここまで';\n        tokens[wo].value = 'ここまで';\n    }\n    const ga = findTokens(tokens, ['word:が']);\n    if (ga >= 0) {\n        tokens[ga].type = 'ここまで';\n        tokens[ga].value = 'ここまで';\n    }\n    // なる:まで(fi) 実行(fi+1)\n    tokens[fi + 1].value = '間';\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCLmode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCLモード';\n            return true;\n        }\n    }\n    return false;\n}\nexport const NakoDncl = {\n    convert: convertDNCL\n};\n","/**\n * DNCL ver2 に対応する構文\n */\n// import { NakoIndentError } from './nako_errors.mjs'\nimport { NewEmptyToken } from './nako_types.mjs';\nimport { joinTokenLines, splitTokens } from './nako_indent_inline.mjs';\nimport { newToken, debugTokens } from './nako_tools.mjs';\nconst IS_DEBUG = false;\nconst DNCL_ARRAY_INIT_COUNT = 30;\n// DNCL2モードのキーワード\nconst DNCL2_KEYWORDS = ['!DNCL2モード', '💡DNCL2モード', '!DNCL2', '💡DNCL2'];\n// 単純な置換チェック\nconst DNCL_SIMPLES = {\n    '←:←': ['eq', '='],\n    '÷:÷': ['÷÷', '÷÷'],\n    '{:{': ['[', '['],\n    '}:}': [']', ']'],\n    'word:and': ['and', 'かつ'],\n    'word:or': ['or', 'または'],\n    'word:not': ['not', '!'],\n    'word:乱数': ['word', '乱数範囲'],\n    'word:表示': ['word', '連続表示']\n};\n/**\n * DNCLのソースコードをなでしこに変換する\n */\nexport function convertDNCL2(tokens) {\n    if (!useDNCL2mode(tokens)) {\n        return tokens;\n    }\n    // 一行ずつに分ける\n    const lines = splitTokens(tokens, 'eol');\n    for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.length <= 1) {\n            continue;\n        } // 空行は飛ばす\n        // --- 制御構文の変換 ---\n        // もし(条件)でないならば → もし(条件)でなければ\n        const nai = findTokens(line, ['word:ない']);\n        if (nai >= 1) {\n            const tt = line[nai];\n            if (tt.josi === 'ならば') {\n                line[nai - 1].josi = 'でなければ';\n                line.splice(nai, 1);\n            }\n        }\n        // そうでなければ(そう|でなければ) → 違えば\n        for (let ni = 0; ni < line.length; ni++) {\n            const t = line[ni];\n            if (t.value === 'そう' && t.josi === 'でなければ') {\n                t.type = '違えば';\n                t.value = '違えば';\n                t.josi = '';\n            }\n        }\n        // 'を実行し,そうでなければ': '違えば',\n        for (;;) {\n            const ni = findTokens(line, ['word:を実行', 'comma:,', 'word:そう']);\n            if (ni < 0) {\n                break;\n            }\n            const sou = line[ni + 2];\n            if (sou.josi === 'でなければ') {\n                sou.type = '違えば';\n                sou.value = '違えば';\n                sou.josi = '';\n                line.splice(ni, 3, sou);\n                continue;\n            }\n            else if (sou.josi === 'で') {\n                const nakumosi = line[ni + 3];\n                if (nakumosi.value.substring(0, 4) === 'なくもし') {\n                    sou.type = '違えば';\n                    sou.value = '違えば';\n                    sou.josi = '';\n                    line.splice(ni, 3, sou);\n                    if (nakumosi.value.length > 4) {\n                        const nakumosiTudukiStr = nakumosi.value.substring(4);\n                        const nakumosiToken = NewEmptyToken('word', nakumosiTudukiStr, nakumosi.indent, nakumosi.line, nakumosi.file);\n                        if (nakumosiTudukiStr.match(/^\\d/)) {\n                            nakumosiToken.type = 'number';\n                        }\n                        line.splice(ni + 2, 0, nakumosiToken);\n                        nakumosi.value = nakumosi.value.substring(0, 4);\n                    }\n                    nakumosi.type = 'もし';\n                    nakumosi.value = 'もし';\n                    nakumosi.josi = '';\n                    continue;\n                }\n            }\n            break;\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返(す)\n        for (;;) {\n            const ni = findTokens(line, ['word:増', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '増繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // Iを1から100まで1(ずつ)|増やしな(が)|ら繰り返す\n        for (;;) {\n            const ni = findTokens(line, ['word:減', 'word:ら繰り返']);\n            if (ni < 0) {\n                break;\n            }\n            const fu = line[ni];\n            fu.type = 'word';\n            fu.value = '減繰返';\n            fu.josi = '';\n            line.splice(ni, 2, fu);\n        }\n        // --- 配列変数周りの変換 ---\n        for (let i = 0; i < line.length; i++) {\n            // 配列|Hindoの|すべての|(要素に|値に)|10を|代入する\n            if (tokenEq([['word:配列', 'word:配列変数'], 'word', 'word:すべて', ['word:要素', 'word:値'], '*', 'word:代入'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                const valToken = line[i + 4];\n                valToken.josi = '';\n                line.splice(i, 6, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n                i += 6; // skip\n            }\n            // Hensuの|すべての|(要素を|値を)|0に|する\n            if (tokenEq(['word', 'word:すべて', ['word:要素', 'word:値'], ['number', 'string', 'word'], 'word:する'], line, i)) {\n                const varToken = line[i];\n                varToken.josi = '';\n                const valToken = line[i + 3];\n                valToken.josi = '';\n                line.splice(i, 5, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), valToken, newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n            // 配列変数 | xxを | 初期化する\n            if (tokenEq([['word:配列変数', 'word:配列'], 'word', 'word:初期化'], line, i)) {\n                const varToken = line[i + 1];\n                varToken.josi = '';\n                line.splice(i, 3, varToken, newToken('eq', '=', varToken), newToken('word', '掛'), newToken('(', '('), newToken('[', '['), newToken('number', 0), newToken(']', ']'), newToken('comma', ','), newToken('number', DNCL_ARRAY_INIT_COUNT), newToken(')', ')'));\n            }\n        }\n        // --- その他の変換 ---\n        // 二進で表示 (255) → 二進表示(255)\n        for (;;) {\n            const ni = findTokens(line, ['word:二進', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            line[ni].value = '二進表示';\n            line[ni].josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // '改行なしで表示' → '連続無改行表示'\n        for (;;) {\n            const ni = findTokens(line, ['word:改行', 'word:表示']);\n            if (ni < 0) {\n                break;\n            }\n            // ここ「改行なしで表示」でも「改行ありで表示」でも同じになってしまう\n            // なでしこの制限のため仕方なし\n            // 「改行ありで表示」は今のところDNCLに存在しないので無視する\n            // もし将来的に区別が必要なら、プリプロセス処理でマクロ的に置換処理を行うことで対応できると思う\n            const t = line[ni];\n            t.value = '連続無改行表示';\n            t.josi = '';\n            line.splice(ni + 1, 1);\n        }\n        // 一つずつチェック\n        let j = 0;\n        while (j < line.length) {\n            const t = line[j];\n            // 減と増の分割\n            if (t.type === 'word' && t.value.length >= 2) {\n                const c = t.value.charAt(t.value.length - 1);\n                if (c === '減' || c === '増') {\n                    t.value = t.value.substring(0, t.value.length - 1);\n                    t.josi = 'だけ';\n                    line.splice(j + 1, 0, NewEmptyToken('word', c, t.indent, t.line, t.file));\n                }\n                j++;\n                continue;\n            }\n            j++;\n        }\n    }\n    // 最後に単純な置換を行う\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        const a = DNCL_SIMPLES[t.type + ':' + t.value];\n        if (a !== undefined) {\n            t.type = a[0];\n            t.value = a[1];\n        }\n    }\n    tokens = joinTokenLines(lines);\n    if (IS_DEBUG) {\n        console.log('@@@---DNCL:tokens---');\n        console.log(debugTokens(tokens));\n        console.log('@@@/---DNCL:tokens---');\n    }\n    return tokens;\n}\n/**\n * トークンが合致するかを確認する\n * @param typeValues ['word:それ']のようなタイプ名と値の配列/'*'でワイルドカードが使える/\":\"がなればタイプだけ確認/配列で選択\n * @param lines 差し替え\n * @param fromIndex 検索場所\n * @returns 合致したかどうか\n */\nfunction tokenEq(typeValues, lines, fromIndex) {\n    const check = (pattern, t) => {\n        if (pattern instanceof Array) {\n            for (let i = 0; i < pattern.length; i++) {\n                if (check(pattern[i], t)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (pattern === '*') {\n            return true;\n        }\n        if (pattern.indexOf(':') < 0) {\n            if (pattern === t.type) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        const tv = `${t.type}:${t.value}`;\n        if (pattern === tv) {\n            return true;\n        }\n        return false;\n    };\n    for (let i = 0; i < typeValues.length; i++) {\n        const idx = i + fromIndex;\n        if (idx >= lines.length) {\n            return false;\n        }\n        const pat = typeValues[i];\n        const t = lines[idx];\n        if (!check(pat, t)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findTokens(tokens, findTypeValue) {\n    const findA = findTypeValue.map(s => s.split(':'));\n    for (let i = 0; i < tokens.length; i++) {\n        let flag = true;\n        for (let j = 0; j < findA.length; j++) {\n            const f = findA[j];\n            const idx = i + j;\n            if (idx >= tokens.length) {\n                return -1;\n            }\n            if (tokens[idx].type === f[0] && tokens[idx].value === f[1]) {\n                continue;\n            }\n            else {\n                flag = false;\n                break;\n            }\n        }\n        if (flag) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction useDNCL2mode(tokens) {\n    // 先頭の100語調べる\n    for (let i = 0; i < tokens.length; i++) {\n        if (i > 100) {\n            break;\n        }\n        const t = tokens[i];\n        if (t.type === 'line_comment' && DNCL2_KEYWORDS.indexOf(t.value) >= 0) {\n            t.type = 'DNCL2モード';\n            return true;\n        }\n    }\n    return false;\n}\n","/** prepareとtokenizeのソースマッピング */\nexport class SourceMappingOfTokenization {\n    /**\n       * @param {number} sourceCodeLength\n       * @param {PreprocessItem[]} preprocessed\n       */\n    constructor(sourceCodeLength, preprocessed) {\n        /** @private @readonly */\n        this.sourceCodeLength = sourceCodeLength;\n        /** @private @readonly */\n        this.preprocessed = preprocessed;\n        let i = 0;\n        /** @private @readonly @type {number[]} */\n        this.cumulativeSum = [];\n        for (const el of preprocessed) {\n            this.cumulativeSum.push(i);\n            i += el.text.length;\n        }\n        /** @private */\n        this.lastIndex = 0;\n        /** @private */\n        this.lastPreprocessedCodePosition = 0;\n    }\n    /**\n       * preprocess後の文字列上のoffsetからソースコード上のoffsetへ変換\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    map(preprocessedCodePosition) {\n        const i = this.findIndex(preprocessedCodePosition);\n        return Math.min(this.preprocessed[i].sourcePosition + (preprocessedCodePosition - this.cumulativeSum[i]), i === this.preprocessed.length - 1 ? this.sourceCodeLength : this.preprocessed[i + 1].sourcePosition - 1);\n    }\n    /**\n       * @param {number} preprocessedCodePosition\n       * @returns {number}\n       */\n    findIndex(preprocessedCodePosition) {\n        // 連続アクセスに対する高速化\n        if (preprocessedCodePosition < this.lastPreprocessedCodePosition) {\n            this.lastIndex = 0;\n        }\n        this.lastPreprocessedCodePosition = preprocessedCodePosition;\n        for (let i = this.lastIndex; i < this.preprocessed.length - 1; i++) {\n            if (preprocessedCodePosition < this.cumulativeSum[i + 1]) {\n                this.lastIndex = i;\n                return i;\n            }\n        }\n        this.lastIndex = this.preprocessed.length - 1;\n        return this.preprocessed.length - 1;\n    }\n}\nexport class SourceMappingOfIndentSyntax {\n    /**\n       * @param {string} codeAfterProcessingIndentationSyntax\n       * @param {readonly number[]} linesInsertedByIndentationSyntax\n       * @param {readonly { lineNumber: number, len: number }[]} linesDeletedByIndentationSyntax\n       */\n    constructor(codeAfterProcessingIndentationSyntax, linesInsertedByIndentationSyntax, linesDeletedByIndentationSyntax) {\n        /** @private @type {{ offset: number, len: number }[]} */\n        this.lines = [];\n        /** @private @readonly */\n        this.linesInsertedByIndentationSyntax = linesInsertedByIndentationSyntax;\n        /** @private @readonly */\n        this.linesDeletedByIndentationSyntax = linesDeletedByIndentationSyntax;\n        let offset = 0;\n        for (const line of codeAfterProcessingIndentationSyntax.split('\\n')) {\n            this.lines.push({ offset, len: line.length });\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number | null} startOffset\n       * @param {number | null} endOffset\n       * @returns {{ startOffset: number | null, endOffset: number | null }}\n       */\n    map(startOffset, endOffset) {\n        if (startOffset === null) {\n            return { startOffset, endOffset };\n        }\n        // 何行目かを判定\n        const tokenLine = this.getLineNumber(startOffset);\n        for (const insertedLine of this.linesInsertedByIndentationSyntax) {\n            // インデント構文の処理後のソースコードの `insertedLine` 行目にあるトークンのソースマップ情報を削除する。\n            if (tokenLine === insertedLine) {\n                startOffset = null;\n                endOffset = null;\n                break;\n            }\n            // インデント構文の処理後のソースコードの `insertedLine` 行目以降にあるトークンのoffsetから\n            // `linesInsertedByIndentationSyntax[i]` 行目の文字数（\\rを含む） を引く。\n            if (tokenLine > insertedLine) {\n                // \"\\n\"の分1足す\n                startOffset -= this.lines[insertedLine].len + 1;\n                if (endOffset !== null) {\n                    endOffset -= this.lines[insertedLine].len + 1;\n                }\n            }\n        }\n        for (const deletedLine of this.linesDeletedByIndentationSyntax) {\n            if (tokenLine >= deletedLine.lineNumber) {\n                // \"\\n\"の分1足す\n                if (startOffset !== null) {\n                    startOffset += deletedLine.len + 1;\n                }\n                if (endOffset !== null) {\n                    endOffset += deletedLine.len + 1;\n                }\n            }\n        }\n        return { startOffset, endOffset };\n    }\n    /**\n       * @param {number} offset\n       * @returns {number}\n       * @private\n       */\n    getLineNumber(offset) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lines.length - 1; i++) {\n            if (offset < this.lines[i + 1].offset) {\n                this.lastLineNumber = i;\n                return i;\n            }\n        }\n        this.lastLineNumber = this.lines.length - 1;\n        return this.lines.length - 1;\n    }\n}\n/** offsetから (line, column) へ変換する。 */\nexport class OffsetToLineColumn {\n    /**\n       * @param {string} code\n       */\n    constructor(code) {\n        /** @private @type {number[]} */\n        this.lineOffsets = [];\n        // 各行の先頭位置を先に計算しておく\n        let offset = 0;\n        for (const line of code.split('\\n')) {\n            this.lineOffsets.push(offset);\n            offset += line.length + 1;\n        }\n        /** @private */\n        this.lastLineNumber = 0;\n        /** @private */\n        this.lastOffset = 0;\n    }\n    /**\n       * @param {number} offset\n       * @param {boolean} oneBasedLineNumber trueのときlineを1から始める\n       * @returns {{ line: number, column: number }}\n       */\n    map(offset, oneBasedLineNumber) {\n        // 連続アクセスに対する高速化\n        if (offset < this.lastOffset) {\n            this.lastLineNumber = 0;\n        }\n        this.lastOffset = offset;\n        for (let i = this.lastLineNumber; i < this.lineOffsets.length - 1; i++) {\n            if (offset < this.lineOffsets[i + 1]) {\n                this.lastLineNumber = i;\n                return {\n                    line: i + (oneBasedLineNumber ? 1 : 0),\n                    column: offset - this.lineOffsets[i]\n                };\n            }\n        }\n        this.lastLineNumber = this.lineOffsets.length - 1;\n        return {\n            line: this.lineOffsets.length - 1 + (oneBasedLineNumber ? 1 : 0),\n            column: offset - this.lineOffsets[this.lineOffsets.length - 1]\n        };\n    }\n}\n/**\n * preCodeの分、ソースマップのoffset、行数、列数を減らす。\n * @type {<T extends {line?: number, column?: number, startOffset: number | null, endOffset: number | null }>(sourceMap: T, preCode: string) => T}\n */\nexport function subtractSourceMapByPreCodeLength(sourceMap, preCode) {\n    // offsetは単純に引くだけでよい\n    if (typeof sourceMap.startOffset === 'number') {\n        sourceMap.startOffset -= preCode.length;\n    }\n    if (typeof sourceMap.endOffset === 'number') {\n        sourceMap.endOffset -= preCode.length;\n    }\n    // たとえば preCode = 'abc\\ndef\\nghi' のとき、line -= 2 して、先頭行なら column -= 3 もする。\n    if (preCode !== '') {\n        const lines = preCode.split('\\n');\n        if (typeof sourceMap.line === 'number') {\n            sourceMap.line -= lines.length - 1;\n        }\n        if (sourceMap.line === 0 && typeof sourceMap.column === 'number') {\n            sourceMap.column -= lines[lines.length - 1].length;\n        }\n    }\n    return sourceMap;\n}\n","/**\n * ブラウザとNode.jsでテキストへの色付けを共通化するためのコード\n */\n/**\n * ANSI escape code の一部\n */\nconst color = { reset: '\\x1b[0m', bold: '\\x1b[1m', black: '\\x1b[30m', red: '\\x1b[31m', green: '\\x1b[32m', yellow: '\\x1b[33m', blue: '\\x1b[34m', magenta: '\\x1b[35m', cyan: '\\x1b[36m', white: '\\x1b[37m' };\n// 30 ~ 37\nconst colorNames = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];\n/** @param {string} t */\nconst escapeHTML = (t) => t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\n/**\n * ANSI escape code で色付けしたテキストを、HTMLやブラウザのconsole.log用のフォーマットに変換する。\n * たとえば `convertColorTextFormat(`foo${color.red}bar`).html` で `\"foobar\"` の `\"bar\"` の部分が赤く表示されるHTMLを取得できる。\n * @param {string} text\n * @returns {{ nodeConsole: string, noColor: string, html: string, browserConsole: string[] }}\n */\nconst convertColorTextFormat = (text) => {\n    // textから [ANSI escape code](https://en.wikipedia.org/wiki/ANSI_escape_code) を削除して、色の無いテキストを作る。\n    // eslint-disable-next-line no-control-regex\n    const noColor = text.replace(/\\x1b\\[\\d+m/g, '');\n    // nodeConsoleからbrowserConsoleを作る\n    /** @type {string[]} */\n    const browserConsoleStyles = [];\n    let consoleColor = 'inherit'; // 文字色\n    let consoleFontWeight = 'inherit'; // 文字の太さ\n    // /\\x1b\\[(\\d+)m/ で正規表現マッチし、それぞれを %c で置換すると同時に browserConsoleStyles にCSSでの表現をpushする。\n    // console.log(browserConsoleText, ...browserConsoleStyles) で表示することを想定。\n    const browserConsoleText = text === noColor\n        ? noColor\n        // eslint-disable-next-line no-control-regex\n        : text.replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n            const m1 = +m1str;\n            if (m1 === 0) {\n                consoleColor = 'inherit';\n                consoleFontWeight = 'inherit';\n            }\n            if (m1 === 1) {\n                consoleFontWeight = 'bold';\n            }\n            if (m1 >= 30 && m1 <= 37) {\n                consoleColor = colorNames[m1 - 30];\n            }\n            browserConsoleStyles.push(`color: ${consoleColor}; font-weight: ${consoleFontWeight};`);\n            return '%c';\n        });\n    // nodeConsoleからhtmlを作る\n    let htmlColor = 'inherit'; // 文字色\n    let htmlFontWeight = 'inherit'; // 文字の太さ\n    // textが色情報を含まないならそれをそのまま使い、含むなら全体を <span>で囲んで、更に、ANSI escape code で囲まれた部分を対応する style を付けた <span> で囲む。\n    // eslint-disable-next-line multiline-ternary\n    const html = text === noColor ? noColor : ('<span>' + escapeHTML(text)\n        // eslint-disable-next-line no-control-regex\n        .replace(/\\x1b\\[(\\d+)m/g, (_, m1str) => {\n        const m1 = +m1str;\n        if (m1 === 0) { // リセット\n            htmlColor = 'inherit';\n            htmlFontWeight = 'inherit';\n        }\n        if (m1 === 1) { // 太字化\n            htmlFontWeight = 'bold';\n        }\n        if (m1 >= 30 && m1 <= 37) { // 文字色の変更\n            htmlColor = colorNames[m1 - 30];\n        }\n        return `</span><span style=\"color: ${htmlColor}; font-weight: ${htmlFontWeight};\">`;\n    }) + '</span>');\n    // 各表現を返す。\n    return {\n        noColor,\n        nodeConsole: text === noColor\n            ? noColor // textが色の情報を含まないならnoColorを返す。\n            : text + '\\x1b[0m',\n        html,\n        browserConsole: [browserConsoleText, ...browserConsoleStyles]\n    };\n};\nexport const NakoColors = { convertColorTextFormat, colorNames, color };\n","/** NakoLogger */\nimport { NakoError, NakoRuntimeError } from './nako_errors.mjs';\nimport { NakoColors } from './nako_colors.mjs';\n/** ログレベル - 数字が高いほど優先度が高い。 */\nexport class LogLevel {\n    // string to level no\n    static fromS(levelStr) {\n        let level = LogLevel.trace;\n        switch (levelStr) {\n            case 'all':\n                level = LogLevel.all;\n                break;\n            case 'trace':\n                level = LogLevel.trace;\n                break;\n            case 'debug':\n                level = LogLevel.debug;\n                break;\n            case 'info':\n                level = LogLevel.info;\n                break;\n            case 'warn':\n                level = LogLevel.warn;\n                break;\n            case 'error':\n                level = LogLevel.error;\n                break;\n            case 'stdout':\n                level = LogLevel.stdout;\n                break;\n            default:\n                throw new Error('[NakoLogger] unknown logger level:' + levelStr);\n        }\n        return level;\n    }\n    static toString(level) {\n        const levels = ['all', 'trace', 'debug', 'info', 'warn', 'error', 'stdout'];\n        return levels[level];\n    }\n}\n// level no\nLogLevel.all = 0;\nLogLevel.trace = 1;\nLogLevel.debug = 2;\nLogLevel.info = 3;\nLogLevel.warn = 4;\nLogLevel.error = 5;\nLogLevel.stdout = 6;\n/**\n * エラー位置を日本語で表示する。\n * たとえば `stringifyPosition({ file: \"foo.txt\", line: 5 })` は `\"foo.txt(6行目):\"` を出力する。\n */\nfunction stringifyPosition(p) {\n    if (!p) {\n        return '';\n    }\n    return `${p.file || ''}${p.line === undefined ? '' : `(${p.line + 1}行目): `}`;\n}\n/**\n * コンパイラのログ情報を出力するためのクラス。\n * trace(), debug(), info(), warn(), error() はそれぞれメッセージに `[警告]` などのタグとエラー位置の日本語表現を付けて表示する。\n * error() は引数にエラーオブジェクトを受け取ることもでき、その場合エラーオブジェクトからエラーメッセージとエラー位置が取り出される。\n */\nexport class NakoLogger {\n    constructor() {\n        this.listeners = [];\n        this.logs = '';\n        this.position = '';\n    }\n    getErrorLogs() {\n        return [this.logs.replace(/\\s+$/, ''), this.position];\n    }\n    clear() {\n        this.logs = '';\n        this.position = '';\n    }\n    /**\n     * sendメソッドで送られた情報を受け取るコールバックを設定する。\n     * @param levelStr\n     * @param callback\n     */\n    addListener(levelStr, callback) {\n        const level = LogLevel.fromS(levelStr);\n        this.listeners.push({ level, callback });\n    }\n    /**\n     * addListenerメソッドで設定したコールバックを取り外す。\n     * @param {LogListener} callback\n     */\n    removeListener(callback) {\n        this.listeners = this.listeners.filter((l) => l.callback !== callback);\n    }\n    /** 本体開発時のデバッグ情報（debugより更に詳細な情報）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    trace(message, position = null) {\n        this.sendI(LogLevel.trace, `${NakoColors.color.bold}[デバッグ情報（詳細）]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** 本体開発時のデバッグ情報\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    debug(message, position = null) {\n        this.sendI(LogLevel.debug, `${NakoColors.color.bold}[デバッグ情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（あまり重要ではないもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    info(message, position = null) {\n        this.sendI(LogLevel.info, `${NakoColors.color.bold}${NakoColors.color.blue}[情報]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** ユーザープログラムのデバッグ情報（重要なもの）\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    warn(message, position = null) {\n        this.sendI(LogLevel.warn, `${NakoColors.color.bold}${NakoColors.color.green}[警告]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** エラーメッセージ\n     * @param {string | Error} message\n     * @param {Position | null} position\n     */\n    error(message, position = null) {\n        // NakoErrorか判定 (`message instanceof NakoError`では判定できない場合がある)\n        if (message instanceof Error && typeof message.type === 'string') {\n            // NakoErrorか\n            const etype = message.type;\n            switch (etype) {\n                case 'NakoRuntimeError':\n                case 'NakoError':\n                    if (message instanceof NakoError) {\n                        const e = message;\n                        let pos = position;\n                        if (pos === null || pos === undefined) {\n                            pos = { file: e.file, line: e.line || 0, startOffset: 0, endOffset: 0 };\n                        }\n                        this.sendI(LogLevel.error, e.message, pos);\n                        return;\n                    }\n            }\n        }\n        if (message instanceof Error) {\n            // 一般のエラーの場合は、messageのみ取得できる。\n            message = message.message;\n        }\n        this.sendI(LogLevel.error, `${NakoColors.color.bold}${NakoColors.color.red}[エラー]${NakoColors.color.reset}${stringifyPosition(position)}${message}`, position);\n    }\n    /** RuntimeErrorを生成する */\n    runtimeError(error, posStr) {\n        const e = new NakoRuntimeError(error, posStr);\n        return e;\n    }\n    /** ユーザープログラムのデバッグ情報（すべて)\n     * @param {string} message\n     * @param {Position | null} position\n     */\n    stdout(message, position = null) {\n        this.sendI(LogLevel.stdout, `${message}`, position);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    send(levelStr, nodeConsole, position, html = null, browserConsole = null) {\n        const i = LogLevel.fromS(levelStr);\n        this.sendI(i, nodeConsole, position, html, browserConsole);\n    }\n    /** 指定したlevelのlistenerにメッセージを送る。htmlやbrowserConsoleは無ければnodeConsoleから生成する。 */\n    sendI(level, nodeConsole, position, html = null, browserConsole = null) {\n        const makeData = () => {\n            // nodeConsoleからnoColor, nodeCondoleなどの形式を生成する。\n            const formats = NakoColors.convertColorTextFormat(nodeConsole);\n            // ログが複数行から構成される場合は、htmlでの表現にborderを設定する。\n            let style = '';\n            if (nodeConsole.includes('\\n')) {\n                style += 'border-top: 1px solid #8080806b; border-bottom: 1px solid #8080806b;';\n            }\n            // 各イベントリスナーが受け取るデータ\n            const data = {\n                noColor: formats.noColor,\n                nodeConsole: formats.nodeConsole,\n                browserConsole: browserConsole || formats.browserConsole,\n                html: `<div style=\"${style}\">` + (html || formats.html) + '</div>',\n                level: LogLevel.toString(level),\n                position\n            };\n            return data;\n        };\n        // エラーならログに追加\n        if (level === LogLevel.error) {\n            const data = makeData();\n            this.logs += data.noColor + '\\n';\n            if (position && this.position !== null) {\n                this.position = `l${position.line}:${position.file}`;\n            }\n        }\n        // 登録したリスナーに通知する\n        for (const l of this.listeners) {\n            if (l.level <= level) {\n                const data = makeData();\n                l.callback(data);\n            }\n        }\n    }\n}\n","import { NakoColors } from './nako_colors.mjs';\n/**\n * コンパイルされたなでしこのプログラムで、グローバル空間のthisが指すオブジェクト\n */\nexport class NakoGlobal {\n    /**\n     * @param compiler\n     * @param gen\n     */\n    constructor(compiler, gen, guid = 0) {\n        this.guid = guid;\n        this.lastJSCode = '';\n        // ユーザーのプログラムから編集される変数\n        this.__locals = {};\n        this.__varslist = [\n            { ...compiler.__varslist[0] },\n            { ...compiler.__varslist[1] },\n            { ...compiler.__varslist[2] } // local [2][3][4][5] ...\n        ];\n        this.numFailures = 0;\n        this.index = 0;\n        this.nextIndex = -1;\n        this.__code = [];\n        this.__callstack = [];\n        this.__stack = [];\n        this.__labels = [];\n        this.__genMode = gen.genMode;\n        // バージョン情報の引き継ぎ\n        this.version = compiler.version;\n        this.coreVersion = compiler.coreVersion;\n        // PluginSystemとdestroy()から参照するため\n        this.__module = { ...compiler.__module }; // shallow copy\n        this.pluginfiles = { ...compiler.getPluginfiles() };\n        // PluginWorkerでユーザー定義関数のJavaScriptコードをworkerのコンパイラのインスタンスへコピーするため\n        this.gen = gen;\n        // 以下のメソッドで使うため\n        this.logger = compiler.getLogger();\n        this.compiler = compiler;\n    }\n    clearLog() {\n        this.__varslist[0]['表示ログ'] = '';\n    }\n    get log() {\n        let s = this.__varslist[0]['表示ログ'];\n        s = s.replace(/\\s+$/, '');\n        return s;\n    }\n    /**\n     * 「ナデシコ」命令のためのメソッド\n     */\n    runEx(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return this.compiler.runSync(code, fname, opts);\n    }\n    async runAsync(code, fname, opts, preCode = '') {\n        // スコープを共有して実行\n        opts.preCode = preCode;\n        opts.nakoGlobal = this;\n        return await this.compiler.runAsync(code, fname, opts);\n    }\n    /**\n     * テスト実行のためのメソッド\n     * @param {{ name: string, f: () => void }[]} tests\n     */\n    _runTests(tests) {\n        let text = `${NakoColors.color.bold}テストの実行結果${NakoColors.color.reset}\\n`;\n        let pass = 0;\n        let numFailures = 0;\n        for (const t of tests) {\n            try {\n                t.f();\n                text += `${NakoColors.color.green}✔${NakoColors.color.reset} ${t.name}\\n`;\n                pass++;\n            }\n            catch (err) {\n                text += `${NakoColors.color.red}☓${NakoColors.color.reset} ${t.name}: ${err.message}\\n`;\n                numFailures++;\n            }\n        }\n        if (numFailures > 0) {\n            text += `${NakoColors.color.green}成功 ${pass}件 ${NakoColors.color.red}失敗 ${numFailures}件`;\n        }\n        else {\n            text += `${NakoColors.color.green}成功 ${pass}件`;\n        }\n        this.numFailures = numFailures;\n        this.logger.stdout(text);\n    }\n    /**\n     * 毎プラグインの「!クリア」関数を実行\n     */\n    clearPlugins() {\n        // 実行している関数をすべて終了させる\n        // プラグインのクリア関数を呼び出す\n        const clearName = '!クリア';\n        for (const pname in this.pluginfiles) {\n            const po = this.__module[pname];\n            if (po[clearName] && po[clearName].fn) {\n                po[clearName].fn(this);\n            }\n        }\n    }\n    /**\n     * 各種リセット処理\n     */\n    reset() {\n        this.clearPlugins();\n    }\n    destroy() {\n        this.reset();\n    }\n}\n","/** plugin_math */\nexport default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 初期化不要\n        }\n    },\n    // @三角関数\n    'SIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.sin(v);\n        }\n    },\n    'COS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.cos(v);\n        }\n    },\n    'TAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.tan(v);\n        }\n    },\n    'ARCSIN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.asin(v);\n        }\n    },\n    'ARCCOS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.acos(v);\n        }\n    },\n    'ARCTAN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return Math.atan(v);\n        }\n    },\n    'ATAN2': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (y, x) {\n            return Math.atan2(y, x);\n        }\n    },\n    '座標角度計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (XY) {\n            return Math.atan2(XY[1], XY[0]) * 180 / Math.PI;\n        }\n    },\n    'RAD2DEG': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'DEG2RAD': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    '度変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return v / Math.PI * 180;\n        }\n    },\n    'ラジアン変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return (v / 180) * Math.PI;\n        }\n    },\n    // @算術関数\n    'SIGN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (v) {\n            return (parseFloat(v) === 0) ? 0 : (v > 0) ? 1 : -1;\n        }\n    },\n    '符号': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        fn: function (v, sys) {\n            return sys.__exec('SIGN', [v]);\n        }\n    },\n    'ABS': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    '絶対値': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.abs(a);\n        }\n    },\n    'EXP': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.exp(a);\n        }\n    },\n    'HYPOT': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    '斜辺': {\n        type: 'func',\n        josi: [['と'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            return Math.hypot(a, b);\n        }\n    },\n    'LN': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOG': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.log(a);\n        }\n    },\n    'LOGN': {\n        type: 'func',\n        josi: [['で'], ['の']],\n        pure: true,\n        fn: function (a, b) {\n            if (a === 2) {\n                return Math.LOG2E * Math.log(b);\n            }\n            if (a === 10) {\n                return Math.LOG10E * Math.log(b);\n            }\n            return Math.log(b) / Math.log(a);\n        }\n    },\n    'FRAC': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '小数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return a % 1;\n        }\n    },\n    '整数部分': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.trunc(a);\n        }\n    },\n    '乱数': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.floor(Math.random() * a);\n        }\n    },\n    '乱数範囲': {\n        type: 'func',\n        josi: [['から'], ['までの', 'の']],\n        pure: true,\n        fn: function (a, b) {\n            return (Math.floor(Math.random() * (b - a + 1)) + a);\n        }\n    },\n    'SQRT': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    '平方根': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            return Math.sqrt(a);\n        }\n    },\n    // @数値切上切捨丸め\n    'ROUND': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '四捨五入': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (v) {\n            return Math.round(v);\n        }\n    },\n    '小数点切上': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.ceil(a * base) / base;\n        }\n    },\n    '小数点切下': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.floor(a * base) / base;\n        }\n    },\n    '小数点四捨五入': {\n        type: 'func',\n        josi: [['を'], ['で']],\n        pure: true,\n        fn: function (a, b) {\n            const base = Math.pow(10, b);\n            return Math.round(a * base) / base;\n        }\n    },\n    'CEIL': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    '切上': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.ceil(v);\n        }\n    },\n    'FLOOR': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    },\n    '切捨': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (v) {\n            return Math.floor(v);\n        }\n    }\n};\n","export const options = {\n    delimiter: ',',\n    eol: '\\r\\n'\n};\nexport function resetEnv() {\n    options.delimiter = ',';\n    options.eol = '\\r\\n';\n}\nexport function parse(txt, delimiter = undefined) {\n    // delimiter\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    // check txt\n    txt = '' + txt + '\\n';\n    // convert CRLF to LF, and CR to LF\n    txt = txt.replace(/(\\r\\n|\\r)/g, '\\n');\n    // trim right\n    txt = txt.replace(/\\s+$/, '') + '\\n';\n    // set pattern\n    const patToDelim = '^(.*?)([\\\\' + delimiter + '\\\\n])';\n    const reToDelim = new RegExp(patToDelim);\n    // if value is number then convert to float\n    const convType = function (v) {\n        if (typeof (v) === 'string') {\n            if (v.search(/^[0-9.]+$/) >= 0) {\n                v = parseFloat(v); // convert number\n            }\n        }\n        return v;\n    };\n    // parse txt\n    const res = [];\n    let cells = [];\n    let c = '';\n    while (txt !== '') {\n        // first check delimiter (because /^\\s+/ skip delimiter'\\t') (#3)\n        c = txt.charAt(0);\n        if (c === delimiter) {\n            txt = txt.substring(1);\n            cells.push('');\n            continue;\n        }\n        // second check LF (#7)\n        if (c === '\\n') {\n            cells.push('');\n            res.push(cells);\n            cells = [];\n            txt = txt.substring(1);\n            continue;\n        }\n        // trim white space\n        txt = txt.replace(/^\\s+/, '');\n        c = txt.charAt(0);\n        // no data\n        if (c === delimiter) {\n            console.log('delimiter');\n            cells.push('');\n            txt = txt.substring(delimiter.length);\n            continue;\n        }\n        // written using the dialect of Excel\n        if (c === '=' && txt.charAt(1) === '\"') {\n            txt = txt.substring(1);\n            continue;\n        }\n        // number or simple string\n        if (c !== '\"') { // number or simple str\n            const m = reToDelim.exec(txt);\n            if (!m) {\n                cells.push(convType(txt));\n                res.push(cells);\n                cells = [];\n                break;\n            }\n            if (m[2] === '\\n') {\n                cells.push(convType(m[1]));\n                res.push(cells);\n                cells = [];\n            }\n            else if (m[2] === delimiter) {\n                cells.push(convType(m[1]));\n            }\n            txt = txt.substring(m[0].length);\n            continue;\n        }\n        // \"\" ... blank data\n        if (txt.substring(0, 2) === '\"\"') {\n            cells.push('');\n            txt = txt.substring(2);\n            continue;\n        }\n        // \"...\"\n        let i = 1;\n        let s = '';\n        while (i < txt.length) {\n            const c1 = txt.charAt(i);\n            const c2 = txt.charAt(i + 1);\n            // console.log(\"@\" + c1 + c2);\n            // 2quote => 1quote char\n            if (c1 === '\"' && c2 === '\"') {\n                i += 2;\n                s += '\"';\n                continue;\n            }\n            if (c1 === '\"') {\n                i++;\n                if (c2 === delimiter) {\n                    i++;\n                    cells.push(convType(s));\n                    s = '';\n                    break;\n                }\n                if (c2 === '\\n') {\n                    i++;\n                    cells.push(convType(s));\n                    res.push(cells);\n                    cells = [];\n                    break;\n                }\n                // if (c2 === \" \" || c2 === \"\\t\") {\n                i++;\n                continue;\n            }\n            s += c1;\n            i++;\n        }\n        txt = txt.substr(i);\n    }\n    if (cells.length > 0)\n        res.push(cells);\n    return res;\n}\nexport function stringify(ary, delimiter = undefined, eol = undefined) {\n    // check arguments\n    if (delimiter === undefined) {\n        delimiter = options.delimiter;\n    }\n    if (eol === undefined) {\n        eol = options.eol;\n    }\n    const valueConv = genValueConverter(delimiter);\n    if (ary === undefined)\n        return '';\n    let r = '';\n    for (let i = 0; i < ary.length; i++) {\n        const cells = ary[i];\n        if (cells === undefined) {\n            r += eol;\n            continue;\n        }\n        for (let j = 0; j < cells.length; j++) {\n            cells[j] = valueConv(cells[j]);\n        }\n        r += cells.join(delimiter) + eol;\n    }\n    // replace return code\n    r = r.replace(/(\\r\\n|\\r|\\n)/g, eol);\n    return r;\n}\nexport function replaceEolMark(eol) {\n    eol = eol.replace(/\\n\\r/g, '[CRLF]');\n    eol = eol.replace(/\\r/g, '[CR]');\n    eol = eol.replace(/\\n/g, '[LF]');\n    return eol;\n}\nfunction genValueConverter(delimiter) {\n    return function (s) {\n        s = '' + s;\n        let fQuot = false;\n        if (s.indexOf('\\n') >= 0 || s.indexOf('\\r') >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf(delimiter) >= 0) {\n            fQuot = true;\n        }\n        if (s.indexOf('\"') >= 0) {\n            fQuot = true;\n            s = s.replace(/\"/g, '\"\"');\n        }\n        if (fQuot)\n            s = '\"' + s + '\"';\n        return s;\n    };\n}\n","import { options, parse, stringify } from './nako_csv.mjs';\nconst PluginCSV = {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            // 基本的に初期化不要\n        }\n    },\n    // @CSV操作\n    'CSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = ',';\n            return parse(str);\n        }\n    },\n    'TSV取得': {\n        type: 'func',\n        josi: [['を', 'の', 'で']],\n        pure: true,\n        fn: function (str) {\n            options.delimiter = '\\t';\n            return parse(str);\n        }\n    },\n    '表CSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = ',';\n            return stringify(a);\n        }\n    },\n    '表TSV変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (a) {\n            options.delimiter = '\\t';\n            return stringify(a);\n        }\n    }\n};\nexport default PluginCSV;\n","export default {\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (sys.__promise == null) {\n                sys.__promise = {\n                    setLastPromise: function (promise) {\n                        sys.__v0['そ'] = promise;\n                        return promise;\n                    }\n                };\n            }\n        }\n    },\n    // @非同期処理の保証の定数\n    'そ': { type: 'const', value: '' },\n    // @非同期処理の保証\n    '動時': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (callback, sys) {\n            return sys.__promise.setLastPromise(new Promise((resolve, reject) => {\n                return callback(resolve, reject);\n            }));\n        },\n        return_none: false\n    },\n    '成功時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return callback(result);\n            }));\n        },\n        return_none: false\n    },\n    '処理時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (cbFunc, promise, sys) {\n            return sys.__promise.setLastPromise(promise.then((result) => {\n                sys.__v0['対象'] = result;\n                return cbFunc(true, result, sys);\n            }, (reason) => {\n                sys.__v0['対象'] = reason;\n                return cbFunc(false, reason, sys);\n            }));\n        },\n        return_none: false\n    },\n    '失敗時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.catch((err) => {\n                sys.__v0['対象'] = err;\n                return callback(err);\n            }));\n        },\n        return_none: false\n    },\n    '終了時': {\n        type: 'func',\n        josi: [['を'], ['の', 'が', 'に']],\n        pure: true,\n        fn: function (callback, promise, sys) {\n            return sys.__promise.setLastPromise(promise.finally(() => {\n                return callback();\n            }));\n        },\n        return_none: false\n    },\n    '束': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (...args) {\n            const sys = args.pop();\n            return sys.__promise.setLastPromise(Promise.all(args));\n        },\n        return_none: false\n    }\n};\n","/**\n * file: plugin_test.js\n * テスト実行用プラグイン\n */\nexport default {\n    // @テスト\n    'ASSERT等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: true,\n        fn: function (a, b) {\n            if (a !== b) {\n                throw new Error(`不一致 [実際]${a} [期待]${b}`);\n            }\n            return true;\n        }\n    },\n    'テスト実行': {\n        type: 'func',\n        josi: [['と'], ['で']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    },\n    'テスト等': {\n        type: 'func',\n        josi: [['と'], ['が']],\n        pure: false,\n        fn: function (a, b, sys) {\n            sys.__exec('ASSERT等', [a, b, sys]);\n        }\n    }\n};\n","// parser / lexer\nimport { NakoParser } from './nako_parser3.mjs';\nimport { NakoLexer } from './nako_lexer.mjs';\nimport { NakoPrepare } from './nako_prepare.mjs';\nimport { generateJS, NakoGenOptions } from './nako_gen.mjs';\nimport { NakoGenASync } from './nako_gen_async.mjs';\nimport { convertInlineIndent, convertIndentSyntax } from './nako_indent_inline.mjs';\nimport { convertDNCL } from './nako_from_dncl.mjs';\nimport { convertDNCL2 } from './nako_from_dncl2.mjs';\nimport { SourceMappingOfTokenization, SourceMappingOfIndentSyntax, OffsetToLineColumn, subtractSourceMapByPreCodeLength } from './nako_source_mapping.mjs';\nimport { NakoLexerError, NakoImportError, NakoSyntaxError, InternalLexerError } from './nako_errors.mjs';\nimport { NakoLogger } from './nako_logger.mjs';\nimport { NakoGlobal } from './nako_global.mjs';\n// version info\nimport coreVersion from './nako_core_version.mjs';\n// basic plugins\nimport PluginSystem from './plugin_system.mjs';\nimport PluginMath from './plugin_math.mjs';\nimport PluginCSV from './plugin_csv.mjs';\nimport PluginPromise from './plugin_promise.mjs';\nimport PluginTest from './plugin_test.mjs';\nconst cloneAsJSON = (x) => JSON.parse(JSON.stringify(x));\n/** コンパイラ実行オプションを生成 */\nexport function newCompilerOptions(initObj = {}) {\n    if (typeof initObj !== 'object') {\n        initObj = {};\n    }\n    initObj.testOnly = initObj.testOnly || false;\n    initObj.resetEnv = initObj.resetEnv || false;\n    initObj.resetAll = initObj.resetAll || false;\n    initObj.preCode = initObj.preCode || '';\n    initObj.nakoGlobal = initObj.nakoGlobal || null;\n    return initObj;\n}\n/** なでしこコンパイラ */\nexport class NakoCompiler {\n    /**\n     * @param {undefined | {'useBasicPlugin':true|false}} options\n     */\n    constructor(options = undefined) {\n        if (options === undefined) {\n            options = { useBasicPlugin: true };\n        }\n        // 環境のリセット\n        this.__varslist = [{}, {}, {}]; // このオブジェクトは変更しないこと (this.gen.__varslist と共有する)\n        this.__locals = {}; // ローカル変数\n        this.__self = this;\n        this.__vars = this.__varslist[2];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        // バージョンを設定\n        this.version = coreVersion.version;\n        this.coreVersion = coreVersion.version;\n        this.__globals = []; // 生成した NakoGlobal のインスタンスを保持\n        this.__globalObj = null;\n        this.__module = {}; // requireなどで取り込んだモジュールの一覧\n        this.pluginFunclist = {}; // プラグインで定義された関数\n        this.funclist = {}; // プラグインで定義された関数 + ユーザーが定義した関数\n        this.pluginfiles = {}; // 取り込んだファイル一覧\n        this.commandlist = new Set(); // プラグインで定義された定数・変数・関数の名前\n        this.nakoFuncList = {}; // __v1に配置するJavaScriptのコードで定義された関数\n        this.eventList = []; // 実行前に環境を変更するためのイベント\n        this.codeGenerateor = {}; // コードジェネレータ\n        this.debugOption = { useDebug: false, waitTime: 0 };\n        this.logger = new NakoLogger();\n        this.filename = 'main.nako3';\n        /**\n         * 取り込み文を置換するためのオブジェクト。\n         * 正規化されたファイル名がキーになり、取り込み文の引数に指定された正規化されていないファイル名はaliasに入れられる。\n         * JavaScriptファイルによるプラグインの場合、contentは空文字列。\n         * funclistはシンタックスハイライトの高速化のために事前に取り出した、ファイルが定義する関数名のリスト。\n         */\n        this.dependencies = {};\n        this.usedFuncs = new Set();\n        this.numFailures = 0;\n        if (options.useBasicPlugin) {\n            this.addBasicPlugins();\n        }\n        // 必要なオブジェクトを覚えておく\n        this.prepare = NakoPrepare.getInstance();\n        this.parser = new NakoParser(this.logger);\n        this.lexer = new NakoLexer(this.logger);\n        // 関数一覧を設定\n        this.lexer.setFuncList(this.funclist);\n    }\n    /** モジュール(名前空間)の一覧を取得する */\n    getModList() {\n        return this.lexer.modList;\n    }\n    getLogger() {\n        return this.logger;\n    }\n    getNakoFuncList() {\n        return this.nakoFuncList;\n    }\n    getNakoFunc(name) {\n        return this.nakoFuncList[name];\n    }\n    getPluginfiles() {\n        return this.pluginfiles;\n    }\n    /**\n     * 基本的なプラグインを追加する\n     */\n    addBasicPlugins() {\n        this.addPluginObject('PluginSystem', PluginSystem);\n        this.addPluginObject('PluginMath', PluginMath);\n        this.addPluginObject('PluginPromise', PluginPromise);\n        this.addPluginObject('PluginAssert', PluginTest);\n        this.addPluginObject('PluginCSV', PluginCSV);\n    }\n    /**\n     * loggerを新しいインスタンスで置き換える。\n     */\n    replaceLogger() {\n        const logger = this.lexer.logger = this.parser.logger = this.logger = new NakoLogger();\n        return logger;\n    }\n    /**\n     * ファイル内のrequire文の位置を列挙する。出力の配列はstartでソートされている。\n     * @param {Token[]} tokens rawtokenizeの出力\n     */\n    static listRequireStatements(tokens) {\n        const requireStatements = [];\n        for (let i = 0; i + 2 < tokens.length; i++) {\n            // not (string|string_ex) '取り込み'\n            if (!(tokens[i].type === 'not' &&\n                (tokens[i + 1].type === 'string' || tokens[i + 1].type === 'string_ex') &&\n                tokens[i + 2].value === '取込')) {\n                continue;\n            }\n            requireStatements.push({\n                ...tokens[i],\n                start: i,\n                end: i + 3,\n                value: tokens[i + 1].value + '',\n                firstToken: tokens[i],\n                lastToken: tokens[i + 2]\n            });\n            i += 2;\n        }\n        return requireStatements;\n    }\n    /**\n     * プログラムが依存するファイルを再帰的に取得する。\n     * - 依存するファイルがJavaScriptファイルの場合、そのファイルを実行して評価結果をthis.addPluginFileに渡す。\n     * - 依存するファイルがなでしこ言語の場合、ファイルの中身を取得して変数に保存し、再帰する。\n     *\n     * @param {string} code\n     * @param {string} filename\n     * @param {string} preCode\n     * @param {LoaderTool} tools 実行環境 (ブラウザ or Node.js) によって外部ファイルの取得・実行方法は異なるため、引数でそれらを行う関数を受け取る。\n     *  - resolvePath は指定した名前をもつファイルを検索し、正規化されたファイル名を返す関数。返されたファイル名はreadNako3かreadJsの引数になる。\n     *  - readNako3は指定されたファイルの中身を返す関数。\n     *  - readJsは指定したファイルをJavaScriptのプログラムとして実行し、`export default` でエクスポートされた値を返す関数。\n     * @returns {Promise<unknown> | void}\n     * @protected\n     */\n    _loadDependencies(code, filename, preCode, tools) {\n        const dependencies = {};\n        const compiler = new NakoCompiler({ useBasicPlugin: true });\n        /**\n         * @param {any} item\n         * @param {any} tasks\n         */\n        const loadJS = (item, tasks) => {\n            // jsならプラグインとして読み込む。(ESMでは必ず動的に読む)\n            const obj = tools.readJs(item.filePath, item.firstToken);\n            tasks.push(obj.task.then((res) => {\n                const pluginFuncs = res();\n                this.addPluginFile(item.value, item.filePath, pluginFuncs, false);\n                dependencies[item.filePath].funclist = pluginFuncs;\n                dependencies[item.filePath].addPluginFile = () => { this.addPluginFile(item.value, item.filePath, pluginFuncs, false); };\n            }));\n        };\n        const loadNako3 = (item, tasks) => {\n            // nako3ならファイルを読んでdependenciesに保存する。\n            const content = tools.readNako3(item.filePath, item.firstToken);\n            const registerFile = (code) => {\n                // シンタックスハイライトの高速化のために、事前にファイルが定義する関数名のリストを取り出しておく。\n                // preDefineFuncはトークン列に変更を加えるため、事前にクローンしておく。\n                // 「プラグイン名設定」を行う (#956)\n                const modName = NakoLexer.filenameToModName(item.filePath);\n                code = `『${modName}』に名前空間設定;『${modName}』にプラグイン名設定;` + code + ';名前空間ポップ;';\n                const tokens = this.rawtokenize(code, 0, item.filePath);\n                dependencies[item.filePath].tokens = tokens;\n                const funclist = {};\n                NakoLexer.preDefineFunc(cloneAsJSON(tokens), this.logger, funclist);\n                dependencies[item.filePath].funclist = funclist;\n                // 再帰\n                return loadRec(code, item.filePath, '');\n            };\n            // 取り込み構文における問題を減らすため、必ず非同期でプログラムを読み込む仕様とした #1219\n            tasks.push(content.task.then((res) => registerFile(res)));\n        };\n        const loadRec = (code, filename, preCode) => {\n            const tasks = [];\n            // 取り込みが必要な情報一覧を調べる(トークン分割して、取り込みタグを得る)\n            const tags = NakoCompiler.listRequireStatements(compiler.rawtokenize(code, 0, filename, preCode));\n            // パスを解決する\n            const tagsResolvePath = tags.map((v) => ({ ...v, ...tools.resolvePath(v.value, v.firstToken, filename) }));\n            // 取り込み開始\n            for (const item of tagsResolvePath) {\n                // 2回目以降の読み込み\n                // eslint-disable-next-line no-prototype-builtins\n                if (dependencies.hasOwnProperty(item.filePath)) {\n                    dependencies[item.filePath].alias.add(item.value);\n                    continue;\n                }\n                // 初回の読み込み\n                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                dependencies[item.filePath] = { tokens: [], alias: new Set([item.value]), addPluginFile: () => { }, funclist: {} };\n                if (item.type === 'js' || item.type === 'mjs') {\n                    loadJS(item, tasks);\n                }\n                else if (item.type === 'nako3') {\n                    loadNako3(item, tasks);\n                }\n                else {\n                    throw new NakoImportError(`ファイル『${item.value}』を読み込めません。ファイルが存在しないか未対応の拡張子です。`, item.firstToken.file, item.firstToken.line);\n                }\n            }\n            if (tasks.length > 0) {\n                return Promise.all(tasks);\n            }\n            return undefined;\n        };\n        try {\n            const result = loadRec(code, filename, preCode);\n            // 非同期な場合のエラーハンドリング\n            if (result !== undefined) {\n                result.catch((err) => {\n                    // 読み込みに失敗したら処理を中断する\n                    this.logger.error(err.msg);\n                    this.numFailures++;\n                });\n            }\n            // すべてが終わってからthis.dependenciesに代入する。そうしないと、「実行」ボタンを連打した場合など、\n            // loadDependencies() が並列実行されるときに正しく動作しない。\n            this.dependencies = dependencies;\n            return result;\n        }\n        catch (err) {\n            // 同期処理では素直に例外を投げる\n            this.logger.error('' + err);\n            throw err;\n        }\n    }\n    /**\n     * コードを単語に分割する\n     * @param code なでしこのプログラム\n     * @param line なでしこのプログラムの行番号\n     * @param filename\n     * @param preCode\n     * @returns トークンのリスト\n     */\n    rawtokenize(code, line, filename, preCode = '') {\n        if (!code.startsWith(preCode)) {\n            throw new Error('codeの先頭にはpreCodeを含める必要があります。');\n        }\n        // 名前空間のモジュールリストに自身を追加\n        const modName = NakoLexer.filenameToModName(filename);\n        const modList = this.getModList();\n        if (modList.indexOf(modName) < 0) {\n            modList.unshift(modName);\n        }\n        // 全角半角の統一処理\n        const preprocessed = this.prepare.convert(code);\n        const tokenizationSourceMapping = new SourceMappingOfTokenization(code.length, preprocessed);\n        const indentationSyntaxSourceMapping = new SourceMappingOfIndentSyntax(code, [], []);\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        // トークン分割\n        let tokens;\n        try {\n            tokens = this.lexer.tokenize(preprocessed.map((v) => v.text).join(''), line, filename);\n        }\n        catch (err) {\n            if (!(err instanceof InternalLexerError)) {\n                throw err;\n            }\n            // エラー位置をソースコード上の位置に変換して返す\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(err.preprocessedCodeStartOffset), tokenizationSourceMapping.map(err.preprocessedCodeEndOffset));\n            const line = dest.startOffset === null ? err.line : offsetToLineColumn.map(dest.startOffset, false).line;\n            const map = subtractSourceMapByPreCodeLength({ ...dest, line }, preCode);\n            throw new NakoLexerError(err.msg, map.startOffset, map.endOffset, map.line, filename);\n        }\n        // DNCL ver2 (core #41)\n        tokens = convertDNCL2(tokens);\n        // DNCL ver1 (#1140)\n        tokens = convertDNCL(tokens);\n        // インデント構文を変換 #596\n        tokens = convertIndentSyntax(tokens);\n        // インラインインデントを変換 #1215\n        tokens = convertInlineIndent(tokens);\n        // ソースコード上の位置に変換\n        tokens = tokens.map((token) => {\n            const dest = indentationSyntaxSourceMapping.map(tokenizationSourceMapping.map(token.preprocessedCodeOffset || 0), tokenizationSourceMapping.map((token.preprocessedCodeOffset || 0) + (token.preprocessedCodeLength || 0)));\n            let line = token.line;\n            let column = 0;\n            if (token.type === 'eol' && dest.endOffset !== null) {\n                // eolはnako_genで `line = ${eolToken.line};` に変換されるため、\n                // 行末のeolのlineは次の行の行数を表す必要がある。\n                const out = offsetToLineColumn.map(dest.endOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            else if (dest.startOffset !== null) {\n                const out = offsetToLineColumn.map(dest.startOffset, false);\n                line = out.line;\n                column = out.column;\n            }\n            return {\n                ...token,\n                ...subtractSourceMapByPreCodeLength({ line, column, startOffset: dest.startOffset, endOffset: dest.endOffset }, preCode),\n                rawJosi: token.josi\n            };\n        });\n        return tokens;\n    }\n    /**\n     * 単語の属性を構文解析に先立ち補正する\n     * @param {Token[]} tokens トークンのリスト\n     * @param {boolean} isFirst 最初の呼び出しかどうか\n     * @param {string} filename\n     * @returns コード (なでしこ)\n     */\n    converttoken(tokens, isFirst, filename) {\n        const tok = this.lexer.replaceTokens(tokens, isFirst, filename);\n        return tok;\n    }\n    /**\n     * 環境のリセット\n     * {NakoResetOption|undefined}\n     */\n    reset(options = undefined) {\n        if (!options || options.needToClearPlugin) {\n            // (メモ) #1245\n            // 通常、リセット処理では、プラグインの!クリアを呼ぶ。\n            // しかし、エディタではクリアイベントを呼ぶと、時計などのコンテンツが止まってしまう\n            // そのため、例外的にオプションを指定すると、プラグインのクリアイベントを呼ばない\n            this.clearPlugins();\n        }\n        /**\n         * なでしこのローカル変数をスタックで管理\n         * __varslist[0] プラグイン領域\n         * __varslist[1] なでしこグローバル領域\n         * __varslist[2] 最初のローカル変数 ( == __vars }\n         */\n        this.__varslist = [this.__varslist[0], {}, {}];\n        this.__v0 = this.__varslist[0];\n        this.__v1 = this.__varslist[1];\n        this.__vars = this.__varslist[2];\n        this.__locals = {};\n        // プラグイン命令以外を削除する。\n        this.funclist = {};\n        for (const name of Object.keys(this.__v0)) {\n            const original = this.pluginFunclist[name];\n            if (!original) {\n                continue;\n            }\n            this.funclist[name] = JSON.parse(JSON.stringify(original));\n        }\n        this.lexer.setFuncList(this.funclist);\n        this.logger.clear();\n    }\n    /**\n     * typeがcodeのトークンを単語に分割するための処理\n     * @param {string} code\n     * @param {number} line\n     * @param {string} filename\n     * @param {number | null} startOffset\n     * @returns\n     * @private\n     */\n    lexCodeToken(code, line, filename, startOffset) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, line, filename, '');\n        // 文字列内位置からファイル内位置へ変換\n        if (startOffset === null) {\n            for (const token of tokens) {\n                token.startOffset = undefined;\n                token.endOffset = undefined;\n            }\n        }\n        else {\n            for (const token of tokens) {\n                if (token.startOffset !== undefined) {\n                    token.startOffset += startOffset;\n                }\n                if (token.endOffset !== undefined) {\n                    token.endOffset += startOffset;\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, false, filename);\n        return { tokens, commentTokens };\n    }\n    /**\n     * 再帰的にrequire文を置換する。\n     * .jsであれば削除し、.nako3であればそのファイルのトークン列で置換する。\n     * @param {TokenWithSourceMap[]} tokens\n     * @param {Set<string>} [includeGuard]\n     * @returns {Token[]} 削除された取り込み文のトークン\n     */\n    replaceRequireStatements(tokens, includeGuard = new Set()) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // C言語のinclude guardと同じ仕組みで無限ループを防ぐ。\n            if (includeGuard.has(r.value)) {\n                deletedTokens.push(...tokens.splice((r.start || 0), (r.end || 0) - (r.start || 0)));\n                continue;\n            }\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath === undefined) {\n                if (!r.firstToken) {\n                    throw new Error(`ファイル『${r.value}』が読み込まれていません。`);\n                }\n                throw new NakoLexerError(`ファイル『${r.value}』が読み込まれていません。`, r.firstToken.startOffset || 0, r.firstToken.endOffset || 0, r.firstToken.line, r.firstToken.file);\n            }\n            this.dependencies[filePath].addPluginFile();\n            const children = cloneAsJSON(this.dependencies[filePath].tokens);\n            includeGuard.add(r.value);\n            deletedTokens.push(...this.replaceRequireStatements(children, includeGuard));\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0), ...children));\n        }\n        return deletedTokens;\n    }\n    /**\n     * replaceRequireStatementsのシンタックスハイライト用の実装。\n     * @param {TokenWithSourceMap[]} tokens\n     * @returns {TokenWithSourceMap[]} 削除された取り込み文のトークン\n     */\n    removeRequireStatements(tokens) {\n        /** @type {TokenWithSourceMap[]} */\n        const deletedTokens = [];\n        for (const r of NakoCompiler.listRequireStatements(tokens).reverse()) {\n            // プラグイン命令のシンタックスハイライトのために、addPluginFileを呼んで関数のリストをthis.dependencies[filePath].funclistに保存させる。\n            const filePath = Object.keys(this.dependencies).find((key) => this.dependencies[key].alias.has(r.value));\n            if (filePath !== undefined) {\n                this.dependencies[filePath].addPluginFile();\n            }\n            // 全ての取り込み文を削除する。そうしないとトークン化に時間がかかりすぎる。\n            deletedTokens.push(...tokens.splice(r.start || 0, (r.end || 0) - (r.start || 0)));\n        }\n        return deletedTokens;\n    }\n    /** 字句解析を行う */\n    lex(code, filename = 'main.nako3', preCode = '', syntaxHighlighting = false) {\n        // 単語に分割\n        let tokens = this.rawtokenize(code, 0, filename, preCode);\n        // require文を再帰的に置換する\n        const requireStatementTokens = syntaxHighlighting ? this.removeRequireStatements(tokens) : this.replaceRequireStatements(tokens, undefined);\n        for (const t of requireStatementTokens) {\n            if (t.type === 'word' || t.type === 'not') {\n                t.type = 'require';\n            }\n        }\n        if (requireStatementTokens.length >= 3) {\n            // modList を更新\n            for (let i = 0; i < requireStatementTokens.length; i += 3) {\n                let modName = requireStatementTokens[i + 1].value;\n                modName = NakoLexer.filenameToModName(modName);\n                if (this.lexer.modList.indexOf(modName) < 0) {\n                    this.lexer.modList.push(modName);\n                }\n            }\n        }\n        // convertTokenで消されるコメントのトークンを残す\n        const commentTokens = tokens.filter((t) => t.type === 'line_comment' || t.type === 'range_comment')\n            .map((v) => ({ ...v })); // clone\n        tokens = this.converttoken(tokens, true, filename);\n        for (let i = 0; i < tokens.length; i++) {\n            if (tokens[i] && tokens[i].type === 'code') {\n                const children = this.lexCodeToken(tokens[i].value, tokens[i].line, filename, tokens[i].startOffset || 0);\n                commentTokens.push(...children.commentTokens);\n                tokens.splice(i, 1, ...children.tokens);\n                i--;\n            }\n        }\n        this.logger.trace('--- lex ---\\n' + JSON.stringify(tokens, null, 2));\n        return { commentTokens, tokens, requireTokens: requireStatementTokens };\n    }\n    /**\n     * コードをパースしてASTにする\n     */\n    parse(code, filename, preCode = '') {\n        // 関数リストを字句解析と構文解析に登録\n        this.lexer.setFuncList(this.funclist);\n        this.parser.setFuncList(this.funclist);\n        // 字句解析を行う\n        const lexerOutput = this.lex(code, filename, preCode);\n        // 構文木を作成\n        let ast;\n        try {\n            this.parser.genMode = 'sync'; // set default\n            ast = this.parser.parse(lexerOutput.tokens, filename);\n        }\n        catch (err) {\n            if (typeof err.startOffset !== 'number') {\n                throw NakoSyntaxError.fromNode(err.message, lexerOutput.tokens[this.parser.getIndex()]);\n            }\n            throw err;\n        }\n        // 使用したシステム関数の一覧を this.usedFuns に入れる(エディタなどで利用される)\n        this.usedFuncs = this.parser.usedFuncs; // 全ての関数呼び出し\n        this.deleteUnNakoFuncs(); // システム関数以外を削除\n        this.logger.trace('--- ast ---\\n' + JSON.stringify(ast, null, 2));\n        return ast;\n    }\n    getUsedFuncs(ast) {\n        const queue = [ast];\n        this.usedFuncs = new Set();\n        while (queue.length > 0) {\n            const ast_ = queue.pop();\n            if (ast_ !== null && ast_ !== undefined && ast_.block !== null && ast_.block !== undefined) {\n                this.getUsedAndDefFuncs(queue, JSON.parse(JSON.stringify(ast_.block)));\n            }\n        }\n        return this.deleteUnNakoFuncs();\n    }\n    getUsedAndDefFuncs(astQueue, blockQueue) {\n        while (blockQueue.length > 0) {\n            const block = blockQueue.pop();\n            if (block !== null && block !== undefined) {\n                this.getUsedAndDefFunc(block, astQueue, blockQueue);\n            }\n        }\n    }\n    getUsedAndDefFunc(block, astQueue, blockQueue) {\n        if (['func', 'func_pointer'].includes(block.type) && block.name !== null && block.name !== undefined) {\n            this.usedFuncs.add(block.name);\n        }\n        astQueue.push([block, block.block]);\n        // eslint-disable-next-line prefer-spread\n        blockQueue.push.apply(blockQueue, [block.value].concat(block.args));\n    }\n    deleteUnNakoFuncs() {\n        for (const func of this.usedFuncs) {\n            if (!this.commandlist.has(func)) {\n                this.usedFuncs.delete(func);\n            }\n        }\n        return this.usedFuncs;\n    }\n    /**\n     * プログラムをコンパイルしてランタイム用のJavaScriptのコードを返す\n     * @param code コード (なでしこ)\n     * @param filename\n     * @param isTest テストかどうか\n     * @param preCode\n     */\n    compile(code, filename, isTest = false, preCode = '') {\n        const opt = newCompilerOptions();\n        opt.testOnly = isTest;\n        opt.preCode = preCode;\n        const res = this.compileFromCode(code, filename, opt);\n        return res.runtimeEnv;\n    }\n    /** parse & generate  */\n    compileFromCode(code, filename, options = undefined) {\n        if (filename === '') {\n            filename = 'main.nako3';\n        }\n        if (options === undefined) {\n            options = newCompilerOptions();\n        }\n        try {\n            if (options.resetEnv) {\n                this.reset();\n            }\n            if (options.resetAll) {\n                this.clearPlugins();\n            }\n            // onBeforeParse\n            this.eventList.filter(o => o.eventName === 'beforeParse').map(e => e.callback(code));\n            // parse\n            const ast = this.parse(code, filename, options.preCode);\n            // onBeforeGenerate\n            this.eventList.filter(o => o.eventName === 'beforeGenerate').map(e => e.callback(ast));\n            // generate\n            const outCode = this.generateCode(ast, new NakoGenOptions(options.testOnly));\n            // onAfterGenerate\n            this.eventList.filter(o => o.eventName === 'afterGenerate').map(e => e.callback(outCode));\n            return outCode;\n        }\n        catch (e) {\n            this.logger.error(e);\n            throw e;\n        }\n    }\n    /**\n     * プログラムをコンパイルしてJavaScriptのコードオブジェクトを返す\n     * @param ast\n     * @param opt テストかどうか\n     */\n    generateCode(ast, opt) {\n        // Select Code Generator #637\n        const mode = ast.genMode || '';\n        // normal mode\n        if (mode === 'sync') {\n            return generateJS(this, ast, opt);\n        }\n        // 非推奨の非同期モード #1164\n        if (mode === '非同期モード') {\n            this.logger.warn('『!非同期モード』の利用は非推奨です。[詳細](https://github.com/kujirahand/nadesiko3/issues/1164)');\n            return NakoGenASync.generate(this, ast, opt.isTest);\n        }\n        // その他のコードジェネレータ(PHPなど)\n        const genObj = this.codeGenerateor[mode];\n        if (!genObj) {\n            throw new Error(`コードジェネレータの「${mode}」はサポートされていません。`);\n        }\n        return genObj.generate(this, ast, opt.isTest);\n    }\n    /** コードジェネレータを追加する */\n    addCodeGenerator(mode, obj) {\n        this.codeGenerateor[mode] = obj;\n    }\n    /** (非推奨)\n     * @param code\n     * @param fname\n     * @param isReset\n     * @param isTest テストかどうか。stringの場合は1つのテストのみ。\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    async _run(code, fname, isReset, isTest, preCode = '') {\n        const opts = newCompilerOptions({\n            resetEnv: isReset,\n            resetAll: isReset,\n            testOnly: isTest,\n            preCode\n        });\n        return this._runEx(code, fname, opts);\n    }\n    /** 各プラグインをリセットする */\n    clearPlugins() {\n        // 他に実行している「なでしこ」があればクリアする\n        this.__globals.forEach((sys) => {\n            sys.__varslist[0].forceClose = true; // core #56\n            sys.reset();\n        });\n        this.__globals = []; // clear\n    }\n    /**\n     * 環境を指定してJavaScriptのコードを実行する\n     * @param code JavaScriptのコード\n     * @param nakoGlobal 実行環境\n     */\n    evalJS(code, nakoGlobal) {\n        // 実行前に環境を初期化するイベントを実行(beforeRun)\n        this.eventList.filter(o => o.eventName === 'beforeRun').map(e => e.callback(nakoGlobal));\n        this.__globalObj = nakoGlobal; // 現在のnakoGlobalを記録\n        this.__globalObj.lastJSCode = code;\n        try {\n            // eslint-disable-next-line no-new-func\n            const f = new Function(code);\n            f.apply(nakoGlobal);\n        }\n        catch (err) {\n            // なでしこコードのエラーは抑止してログにのみ記録\n            nakoGlobal.numFailures++;\n            this.getLogger().error(err);\n            throw err;\n        }\n        // 実行後に終了イベントを実行(finish)\n        this.eventList.filter(o => o.eventName === 'finish').map(e => e.callback(nakoGlobal));\n    }\n    /**\n     * 同期的になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runSync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    /**\n     * 非同期になでしこのプログラムcodeを実行する\n     * @param code なでしこのプログラム\n     * @param filename ファイル名\n     * @param options オプション\n     * @returns 実行に利用したグローバルオブジェクト\n     */\n    async runAsync(code, filename, options = undefined) {\n        // コンパイル\n        options = newCompilerOptions(options);\n        const out = this.compileFromCode(code, filename, options);\n        // 実行前に環境を生成\n        const nakoGlobal = this.getNakoGlobal(options, out.gen, filename);\n        // 実行\n        this.evalJS(out.runtimeEnv, nakoGlobal);\n        return nakoGlobal;\n    }\n    getNakoGlobal(options, gen, filename) {\n        // オプションを参照\n        let g = options.nakoGlobal;\n        if (!g) {\n            // 空ならば前回の値を参照(リセットするなら新規で作成する)\n            if (this.__globals.length > 0 && options.resetAll === false && options.resetEnv === false) {\n                g = this.__globals[this.__globals.length - 1];\n            }\n            else {\n                g = new NakoGlobal(this, gen, (this.__globals.length + 1));\n            }\n            // 名前空間を設定\n            g.__varslist[0]['名前空間'] = NakoLexer.filenameToModName(filename);\n        }\n        if (this.__globals.indexOf(g) < 0) {\n            this.__globals.push(g);\n        }\n        return g;\n    }\n    /**\n     * イベントを登録する\n     * @param eventName イベント名\n     * @param callback コールバック関数\n     */\n    addListener(eventName, callback) {\n        this.eventList.push({ eventName, callback });\n    }\n    /**\n     * テストを実行する\n     * @param code\n     * @param fname\n     * @param preCode\n     * @param testOnly\n     */\n    test(code, fname, preCode = '', testOnly = false) {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        options.testOnly = testOnly;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * なでしこのプログラムを実行（他に実行しているインスタンスはそのまま）\n     * @param code\n     * @param fname\n     * @param [preCode]\n     * @deprecated 代わりに runAsync を使ってください。\n     */\n    run(code, fname = 'main.nako3', preCode = '') {\n        const options = newCompilerOptions();\n        options.preCode = preCode;\n        return this.runSync(code, fname, options);\n    }\n    /**\n     * JavaScriptのみで動くコードを取得する場合\n     * @param code\n     * @param filename\n     * @param opt\n     */\n    compileStandalone(code, filename, opt = null) {\n        if (opt === null) {\n            opt = new NakoGenOptions();\n        }\n        const ast = this.parse(code, filename);\n        return this.generateCode(ast, opt).standalone;\n    }\n    /**\n     * プラグイン・オブジェクトを追加\n     * @param po プラグイン・オブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPlugin(po, persistent = true) {\n        // 変数のメタ情報を確認\n        const __v0 = this.__varslist[0];\n        if (__v0.meta === undefined) {\n            __v0.meta = {};\n        }\n        // プラグインの値をオブジェクトにコピー\n        for (const key in po) {\n            const v = po[key];\n            this.funclist[key] = v;\n            if (persistent) {\n                this.pluginFunclist[key] = JSON.parse(JSON.stringify(v));\n            }\n            if (v.type === 'func') {\n                __v0[key] = v.fn;\n            }\n            else if (v.type === 'const' || v.type === 'var') {\n                __v0[key] = v.value;\n                __v0.meta[key] = {\n                    readonly: (v.type === 'const')\n                };\n            }\n            else {\n                console.error('[プラグイン追加エラー]', v);\n                throw new Error('プラグインの追加でエラー。');\n            }\n            // コマンドを登録するか?\n            if (key === '初期化' || key.substring(0, 1) === '!') { // 登録しない関数名\n                continue;\n            }\n            this.commandlist.add(key);\n        }\n    }\n    /**\n     * プラグイン・オブジェクトを追加(ブラウザ向け)\n     * @param objName オブジェクト名\n     * @param po 関数リスト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginObject(objName, po, persistent = true) {\n        this.__module[objName] = po;\n        this.pluginfiles[objName] = '*';\n        // 初期化をチェック\n        if (typeof (po['初期化']) === 'object') {\n            const def = po['初期化'];\n            delete po['初期化'];\n            const initKey = `!${objName}:初期化`;\n            po[initKey] = def;\n        }\n        // メタ情報をチェック (#1034)\n        if (po.meta && po.meta.value && typeof (po.meta) === 'object') {\n            const meta = po.meta;\n            delete po.meta;\n            const pluginName = meta.value.pluginName || objName;\n            const metaKey = `__${pluginName}`.replace('-', '__');\n            po[metaKey] = meta;\n        }\n        this.addPlugin(po, persistent);\n    }\n    /**\n     * プラグイン・ファイルを追加(Node.js向け)\n     * @param objName オブジェクト名\n     * @param fpath ファイルパス\n     * @param po 登録するオブジェクト\n     * @param persistent falseのとき、次以降の実行では使えない\n     */\n    addPluginFile(objName, fpath, po, persistent = true) {\n        // Windowsのパスがあると、JSファイル書き出しでエラーになるので、置換する\n        if (objName.indexOf('\\\\') >= 0) {\n            objName = objName.replace(/\\\\/g, '/');\n        }\n        this.addPluginObject(objName, po, persistent);\n        if (this.pluginfiles[objName] === undefined) {\n            this.pluginfiles[objName] = fpath;\n        }\n    }\n    /**\n     * 関数を追加する\n     * @param {string} key 関数名\n     * @param {string[][]} josi 助詞\n     * @param {Function} fn 関数\n     * @param {boolean} returnNone 値を返す関数の場合はfalseを指定\n     * @param {boolean} asyncFn Promiseを返す関数かを指定\n     */\n    addFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.funclist[key] = { josi, fn, type: 'func', return_none: returnNone, asyncFn, pure: true };\n        this.pluginFunclist[key] = cloneAsJSON(this.funclist[key]);\n        this.__varslist[0][key] = fn;\n    }\n    /** (非推奨) 互換性のため ... 関数を追加する\n     * @deprecated 代わりにaddFuncを使ってください\n    */\n    setFunc(key, josi, fn, returnNone = true, asyncFn = false) {\n        this.addFunc(key, josi, fn, returnNone, asyncFn);\n    }\n    /**\n     * プラグイン関数を参照する\n     * @param key プラグイン関数の関数名\n     * @returns プラグイン・オブジェクト\n     */\n    getFunc(key) {\n        return this.funclist[key];\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    _runEx(code, filename, opts, preCode = '', nakoGlobal = undefined) {\n        // コンパイル\n        opts.preCode = preCode;\n        if (nakoGlobal) {\n            opts.nakoGlobal = nakoGlobal;\n        }\n        return this.runSync(code, filename, opts);\n    }\n    /** 同期的になでしこのプログラムcodeを実行する\n     * @param code\n     * @param fname\n     * @param opts\n     * @param [preCode]\n     * @deprecated 代わりにrunAsyncメソッドを使ってください。(core #52)\n     */\n    runEx(code, fname, opts, preCode = '') {\n        return this._runEx(code, fname, opts, preCode);\n    }\n    /**\n     * (非推奨) なでしこのプログラムを実行（他に実行しているインスタンスもリセットする)\n     * @param code\n     * @param fname\n     * @param [preCode]\n     */\n    async runReset(code, fname = 'main.nako3', preCode = '') {\n        const opts = newCompilerOptions({ resetAll: true, resetEnv: true });\n        return this._runEx(code, fname, opts, preCode);\n    }\n}\n","import { NakoIndentError } from './nako_errors.mjs';\nimport { NakoPrepare, checkNakoMode } from './nako_prepare.mjs';\n// インデント構文のキーワード\nconst INDENT_MODE_KEYWORDS = ['!インデント構文', '!ここまでだるい'];\n/**\n * インデント構文指定があればコードを変換する\n */\nfunction convert(code, filename = 'main.nako3') {\n    // インデント構文の適用が必要か？\n    if (checkNakoMode(code, INDENT_MODE_KEYWORDS)) {\n        return convertForIndentMode(code, filename);\n    }\n    return { code, insertedLines: [], deletedLines: [] };\n}\n/**\n * インデント構文指定があるかチェックする\n */\nfunction isIndentSyntaxEnabled(code) {\n    return checkNakoMode(code, INDENT_MODE_KEYWORDS);\n}\n/** ありえない改行マークを定義 */\nconst defSpecialRetMark = '🍷🍷改行🍹黐黑鼘鼶齈▨🍺🍺🍶🍶';\nlet SpecialRetMark = defSpecialRetMark;\n/** code中にありえない改行マーク生成しモジュール内の変数SpecialRetMarkに設定 */\nexport function checkSpecialRetMark(code) {\n    SpecialRetMark = defSpecialRetMark;\n    while (code.indexOf(SpecialRetMark) >= 0) {\n        // 適当な文字を足してユニークにする(一応漢字領域で生成)\n        const c = String.fromCodePoint(Math.floor(Math.random() * 40952) + 0x4E00);\n        SpecialRetMark += c + c;\n    }\n    return SpecialRetMark;\n}\n/**\n * ソースコードのある1行の中のコメントを全て取り除く。\n * 事前にreplaceRetMarkによって文字列や範囲コメント内の改行文字が置換されている必要がある。\n */\nexport function removeCommentsFromLine(src) {\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\n    const len = src.length;\n    let result = '';\n    let eos = '';\n    let i = 0;\n    let isComment = false;\n    while (i < len) {\n        const c = src.charAt(i);\n        const ch2 = src.substring(i, 2);\n        const cPrepared = prepare.convert1ch(c);\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\n        // eosか?\n        if (eos !== '') {\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\n                if (!isComment) {\n                    result += src.substr(i, eos.length);\n                }\n                i += eos.length;\n                isComment = false;\n                eos = '';\n            }\n            else {\n                if (!isComment) {\n                    result += c;\n                }\n                i++;\n            }\n            continue;\n        }\n        // 文字列の改行\bも無視する\n        switch (cPrepared) {\n            case '\"':\n            case '\\'':\n                eos = c;\n                result += c;\n                i++;\n                continue;\n            case '「':\n                eos = '」';\n                result += c;\n                i++;\n                continue;\n            case '『':\n                eos = '』';\n                result += c;\n                i++;\n                continue;\n            case '“':\n                eos = '”';\n                result += c;\n                i++;\n                continue;\n            case '{':\n                eos = '}';\n                result += c;\n                i++;\n                continue;\n            case '[':\n                eos = ']';\n                result += c;\n                i++;\n                continue;\n        }\n        switch (ch2) {\n            case '🌴':\n                eos = '🌴';\n                result += ch2;\n                i += 2;\n                continue;\n            case '🌿':\n                eos = '🌿';\n                result += ch2;\n                i += 2;\n                continue;\n        }\n        // 行コメント\n        if (cPrepared === '#') {\n            eos = '\\n';\n            isComment = true;\n            i++;\n            continue;\n        }\n        if (ch2Prepared === '//') {\n            eos = '\\n';\n            isComment = true;\n            i += 2;\n            continue;\n        }\n        // 範囲コメント\n        if (ch2Prepared === '/*') {\n            eos = '*/';\n            isComment = true;\n            i += 2;\n            continue;\n        }\n        result += c;\n        i++;\n    }\n    return result;\n}\n/** インデントモードのための変換処理 */\nfunction convertForIndentMode(code, filename) {\n    // returns => {{ code: string, insertedLines: number[], deletedLines: { lineNumber: number, len: number }[] }}\n    const insertedLines = [];\n    const deletedLines = [];\n    const END = 'ここまで‰';\n    const code2 = replaceRetMark(code); // 文字列の中などの改行を置換\n    const lines = code2.split('\\n');\n    const lines2 = [];\n    const indentStack = [];\n    let lastIndent = 0;\n    // 元ソースコードの中に特殊改行マークが含まれるかチェックして含まれるならもっと複雑な特殊マークを動的に生成\n    checkSpecialRetMark(code);\n    let lineCount = -1;\n    lines.forEach((line) => {\n        lineCount += line.split(SpecialRetMark).length;\n        // trim line\n        // eslint-disable-next-line no-irregular-whitespace\n        if (/^[ 　・\\t]*$/.test(line)) {\n            deletedLines.push({ lineNumber: lines2.length, len: line.length });\n            return;\n        }\n        // eslint-disable-next-line no-irregular-whitespace\n        const lineTrimed = removeCommentsFromLine(line).replace(/^[ 　・\\t]+/, '').replace(/\\s+$/, '');\n        if (lineTrimed === '') {\n            lines2.push(line);\n            return;\n        }\n        if (lineTrimed === 'ここまで') {\n            throw new NakoIndentError('インデント構文が有効化されているときに『ここまで』を使うことはできません。', lineCount, filename);\n        }\n        // check indent\n        const indent = countIndent(line);\n        if (lastIndent === indent) {\n            lines2.push(line);\n            return;\n        }\n        // indent\n        if (lastIndent < indent) {\n            indentStack.push(lastIndent);\n            lastIndent = indent;\n            lines2.push(line);\n            return;\n        }\n        // unindent\n        if (lastIndent > indent) {\n            // 5回\n            //   3回\n            //     1を表示\n            //   |\n            // |\n            lastIndent = indent;\n            while (indentStack.length > 0) {\n                const n = indentStack.pop() || 0;\n                if (n === indent) {\n                    if (lineTrimed.substring(0, 3) !== '違えば') {\n                        insertedLines.push(lines2.length);\n                        lines2.push(makeIndent(n) + END);\n                    }\n                    lines2.push(line);\n                    return;\n                }\n                if (indent < n) {\n                    insertedLines.push(lines2.length);\n                    lines2.push(makeIndent(n) + END);\n                    continue;\n                }\n            }\n        }\n    });\n    // 残りのインデントを処理\n    while (indentStack.length > 0) {\n        const n = indentStack.pop() || 0;\n        insertedLines.push(lines2.length);\n        lines2.push(makeIndent(n) + END);\n    }\n    // 特別マーカーを改行に置換\n    const lines3 = [];\n    for (let i = 0; i < lines2.length; i++) {\n        if (lines2[i].includes(SpecialRetMark)) {\n            const lines4 = lines2[i].split(SpecialRetMark);\n            // 置換されたマーカーの数だけ、それ以降の行数をずらす。\n            // unindentによって挿入された行がSpecialRetMarkを含むことはない。\n            for (let j = 0; j < insertedLines.length; j++) {\n                if (lines3.length < insertedLines[j]) {\n                    insertedLines[j] += lines4.length - 1;\n                }\n            }\n            for (let j = 0; j < deletedLines.length; j++) {\n                if (lines3.length < deletedLines[j].lineNumber) {\n                    deletedLines[j].lineNumber += lines4.length - 1;\n                }\n            }\n            lines3.push(...lines4);\n        }\n        else {\n            lines3.push(lines2[i]);\n        }\n    }\n    return { code: lines3.join('\\n'), insertedLines, deletedLines };\n}\n/**\n * count分だけ字下げする\n * @param {number} count\n */\nfunction makeIndent(count) {\n    let s = '';\n    for (let i = 0; i < count; i++) {\n        s += ' ';\n    }\n    return s;\n}\n/**\n * インデント部分を取り出す\n */\nexport function getIndent(line) {\n    // eslint-disable-next-line no-irregular-whitespace\n    const m = /^([ 　・\\t]*)/.exec(removeCommentsFromLine(line));\n    if (!m) {\n        return '';\n    }\n    return m[1];\n}\n/**\n * インデントの個数を数える\n */\nexport function countIndent(line) {\n    let cnt = 0;\n    for (let i = 0; i < line.length; i++) {\n        const ch = line.charAt(i);\n        if (ch === ' ') {\n            cnt++;\n            continue;\n        }\n        if (ch === '　') {\n            cnt += 2;\n            continue;\n        }\n        if (ch === '・') {\n            cnt += 2;\n            continue;\n        }\n        if (ch === '\\t') {\n            cnt += 4;\n            continue;\n        }\n        break;\n    }\n    return cnt;\n}\nexport function replaceRetMark(src) {\n    const prepare = NakoPrepare.getInstance(); // `※`, `／/`, `／＊` といったパターン全てに対応するために必要\n    const len = src.length;\n    let result = '';\n    let eos = '';\n    let i = 0;\n    while (i < len) {\n        const c = src.charAt(i);\n        const ch2 = src.substr(i, 2);\n        const cPrepared = prepare.convert1ch(c);\n        const ch2Prepared = ch2.split('').map((c) => prepare.convert1ch(c)).join('');\n        // eosか?\n        if (eos !== '') {\n            // srcのi文字目以降がeosで始まるなら文字列を終了、そうでなければ1文字進める\n            if (eos === (eos.length === 1 ? cPrepared : ch2Prepared)) {\n                result += src.substr(i, eos.length);\n                i += eos.length;\n                eos = '';\n            }\n            else {\n                if (c === '\\n') {\n                    result += SpecialRetMark;\n                }\n                else {\n                    result += c;\n                }\n                i++;\n            }\n            continue;\n        }\n        // 文字列の改行\bも無視する\n        switch (cPrepared) {\n            case '\"':\n            case '\\'':\n                eos = c;\n                result += c;\n                i++;\n                continue;\n            case '「':\n                eos = '」';\n                result += c;\n                i++;\n                continue;\n            case '『':\n                eos = '』';\n                result += c;\n                i++;\n                continue;\n            case '“':\n                eos = '”';\n                result += c;\n                i++;\n                continue;\n            case '{':\n                eos = '}';\n                result += c;\n                i++;\n                continue;\n            case '[':\n                eos = ']';\n                result += c;\n                i++;\n                continue;\n        }\n        switch (ch2) {\n            case '🌴':\n                eos = '🌴';\n                result += ch2;\n                i += 2;\n                continue;\n            case '🌿':\n                eos = '🌿';\n                result += ch2;\n                i += 2;\n                continue;\n        }\n        // 行コメント\n        if (cPrepared === '#') {\n            eos = '\\n';\n            result += c;\n            i++;\n            continue;\n        }\n        if (ch2Prepared === '//') {\n            eos = '\\n';\n            result += ch2;\n            i += 2;\n            continue;\n        }\n        // 範囲コメント\n        if (ch2Prepared === '/*') {\n            eos = '*/';\n            result += ch2;\n            i += 2;\n            continue;\n        }\n        result += c;\n        i++;\n    }\n    return result;\n}\n/**\n * コードのインデントの構造を取得する。\n * 空白行や複数行にまたがる構文を考慮する。\n * インデント構文が有効化されていない場合にも使われる。\n */\nexport function getBlockStructure(code) {\n    const result = {\n        lines: [],\n        pairs: [],\n        parents: [],\n        spaces: [] // 各行のインデントの文字列\n    };\n    const lines = replaceRetMark(code).split('\\n');\n    const stack = [];\n    let lineCount = 0;\n    let prev = countIndent(lines[0]);\n    for (const line of lines) {\n        const numLines = line.split(SpecialRetMark).length;\n        const line2 = removeCommentsFromLine(line);\n        // eslint-disable-next-line no-irregular-whitespace\n        const current = (line2.replace(/^[ 　・\\t]+/, '') === '')\n            ? prev\n            : countIndent(line2);\n        result.lines.push(...Array(numLines).fill(current));\n        result.spaces.push(...Array(numLines).fill(getIndent(line2)));\n        if (prev < current) {\n            stack.push(lineCount - 1);\n        }\n        else if (prev > current) {\n            const last = stack.pop();\n            if (last !== undefined) {\n                result.pairs.push([last, lineCount]);\n            }\n        }\n        const parent = stack[stack.length - 1] !== undefined ? stack[stack.length - 1] : null;\n        result.parents.push(...Array(numLines).fill(parent));\n        prev = current;\n        lineCount += numLines;\n    }\n    // スタックが余ったらコードの末尾とペアにする。\n    for (const item of stack) {\n        result.pairs.push([item, lineCount]);\n    }\n    return result;\n}\nexport default {\n    convert,\n    getBlockStructure,\n    getIndent,\n    countIndent,\n    isIndentSyntaxEnabled\n};\n","// @ts-nocheck\n/* eslint-disable no-template-curly-in-string */\n/** なでしこのtokenのtypeをscope（CSSのクラス名）に変換する。 */\nimport { OffsetToLineColumn } from '../core/src/nako_source_mapping.mjs';\nimport { NakoError } from '../core/src/nako_errors.mjs';\nimport NakoIndent from '../core/src/nako_indent.mjs';\nimport { NakoPrepare } from '../core/src/nako_prepare.mjs';\n// alias\nconst getBlockStructure = NakoIndent.getBlockStructure;\nconst getIndent = NakoIndent.getIndent;\nconst countIndent = NakoIndent.countIndent;\nconst isIndentSyntaxEnabled = NakoIndent.isIndentSyntaxEnabled;\n/**\n * シンタックスハイライトでは一般にテキストの各部分に 'comment.line' のようなラベルを付け、各エディタテーマがそのそれぞれの色を設定する。\n * ace editor では例えば 'comment.line' が付いた部分はクラス .ace_comment.ace_line が付いたHTMLタグで囲まれ、各テーマはそれに対応するCSSを実装する。\n * @returns TokenType\n */\nexport function getScope(token) {\n    switch (token.type) {\n        case 'line_comment': return 'comment.line';\n        case 'range_comment': return 'comment.block';\n        case 'def_test': return 'keyword.control';\n        case 'def_func': return 'keyword.control';\n        case 'func': return 'entity.name.function';\n        case 'number': return 'constant.numeric';\n        // 独立した助詞\n        case 'とは':\n        case 'ならば':\n        case 'でなければ':\n            return 'keyword.control';\n        // 制御構文\n        case 'ここから':\n        case 'ここまで':\n        case 'もし':\n        case '違えば':\n        case 'require':\n            return 'keyword.control';\n        // 予約語\n        case '回':\n        case '間':\n        case '繰り返す':\n        case '反復':\n        case '抜ける':\n        case '続ける':\n        case '戻る':\n        case '先に':\n        case '次に':\n        case '代入':\n        case '逐次実行':\n        case '条件分岐':\n        case '取込':\n        case 'エラー監視':\n        case 'エラー':\n        case '変数':\n        case '実行速度優先':\n            return 'keyword.control';\n        case '定める':\n        case '定数':\n            return 'support.constant';\n        // 演算子\n        case 'shift_r0':\n        case 'shift_r':\n        case 'shift_l':\n        case 'gteq':\n        case 'lteq':\n        case 'noteq':\n        case 'eq':\n        case 'not':\n        case 'gt':\n        case 'lt':\n        case 'and':\n        case 'or':\n        case '@':\n        case '+':\n        case '-':\n        case '**':\n        case '*':\n        case '÷÷':\n        case '/':\n        case '%':\n        case '^':\n        case '&':\n            return 'keyword.operator';\n        case 'string':\n        case 'string_ex':\n            return 'string.other';\n        case 'word':\n            if (['そう', 'それ', '回数', '対象キー', '対象'].includes(token.value)) {\n                return 'variable.language';\n            }\n            else {\n                return 'variable.other';\n            }\n        default:\n            return 'markup.other';\n    }\n}\n/**\n * @param {TokenWithSourceMap} compilerToken\n * @param {NakoCompiler} nako3\n * @param {string} value\n * @param {boolean} includesLastCharacter\n * @param {boolean} underlineJosi\n */\nexport function getEditorTokens(compilerToken, nako3, value, includesLastCharacter, underlineJosi) {\n    const type = getScope(compilerToken);\n    const docHTML = getDocumentationHTML(compilerToken, nako3);\n    // 助詞があれば助詞の部分を分割する。\n    // 最後の文字が現在の行に含まれないときは助詞を表示しない。そうしないと例えば `「文字列\\n」を表示` の「列」の部分に下線が引かれてしまう。\n    if (compilerToken.rawJosi && value.length >= compilerToken.rawJosi.length && includesLastCharacter && underlineJosi) {\n        return [\n            { type, docHTML, value: value.slice(0, -compilerToken.rawJosi.length) },\n            { type: type + '.markup.underline', docHTML, value: value.slice(-compilerToken.josi.length) }\n        ];\n    }\n    return [\n        { type, docHTML, value }\n    ];\n}\n/**\n * `name` が定義されたプラグインの名前を返す。\n */\nexport function findPluginName(name, nako3) {\n    for (const pluginName of Object.keys(nako3.__module)) {\n        if (Object.keys(nako3.__module[pluginName]).includes(name)) {\n            return pluginName;\n        }\n    }\n    return null;\n}\n/**\n * i = 0, 1, 2, ... に対して 'A', 'B', 'C', ... 'Z', 'AA', 'AB', ... を返す。\n */\nexport function createParameterName(i) {\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    return i.toString(26).split('').map((v) => alphabet[parseInt(v, 26)]).join('');\n}\n/**\n * パラメータの定義を表す文字列を生成する。例えば `[['と', 'の'], ['を']]` に対して `'（Aと|Aの、Bを）'` を返す、パラメータが無い場合、空文字列を返す。\n */\nexport function createParameterDeclaration(josi) {\n    const args = josi.map((union, i) => union.map((v) => `${createParameterName(i)}${v}`).join('|')).join('、');\n    if (args !== '') {\n        return `（${args}）`;\n    }\n    else {\n        return '';\n    }\n}\n// https://stackoverflow.com/a/6234804\nexport function escapeHTML(t) {\n    return t\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#039;');\n}\n/**\n * 関数のドキュメントを返す。\n */\nexport function getDocumentationHTML(token, nako3) {\n    const meta = (text) => `<span class=\"tooltip-plugin-name\">${escapeHTML(text)}</span>`;\n    if (token.type === 'func') {\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\n        const josi = (token.meta && token.meta.josi) ? createParameterDeclaration(token.meta.josi) : ''; // {関数} のとき token.meta.josi が存在しない\n        if (pluginName) {\n            return escapeHTML(josi + token.value) + meta(pluginName);\n        }\n        return escapeHTML(josi + token.value);\n    }\n    else if (token.type === 'word') {\n        /** @type {string | null} */\n        const pluginName = findPluginName(token.value + '', nako3) || (token.meta && token.meta.file ? token.meta.file : null);\n        if (pluginName) {\n            return escapeHTML(token.value + '') + meta(pluginName);\n        }\n    }\n    return null;\n}\n/**\n * ace editor ではエディタの文字列の全ての部分に何らかの `type` を付けなければならない。\n * なでしこのエディタでは 'markup.other' をデフォルト値として使うことにした。\n * @returns {EditorToken[]}\n */\nconst getDefaultTokens = (row, doc) => [{ type: 'markup.other', value: doc.getLine(row), docHTML: null }];\n/**\n * 一時的にloggerを無効化する。そうしないとシンタックスハイライトの更新のたびにloggerへコンパイルエラーや警告が送られて、結果のボックスに行が追加されてしまう。\n * @type {<T>(nako3: NakoCompiler, f: () => T) => T}\n */\nconst withoutLogger = (nako3, f) => {\n    const logger = nako3.logger;\n    try {\n        nako3.replaceLogger();\n        return f();\n    }\n    finally {\n        nako3.logger = logger;\n    }\n};\n/**\n * プログラムをlexerでtokenizeした後、ace editor 用のトークン列に変換する。\n * @param lines\n * @param nako3\n * @param underlineJosi\n */\nexport function tokenize(lines, nako3, underlineJosi) {\n    const code = lines.join('\\n');\n    // 取り込み文を含めてしまうと依存ファイルが大きい時に時間がかかってしまうため、\n    // 取り込み文を無視してトークン化してから、依存ファイルで定義された関数名と一致するトークンを関数のトークンへ変換する。\n    nako3.reset({ needToClearPlugin: false });\n    const lexerOutput = withoutLogger(nako3, () => nako3.lex(code, 'main.nako3', undefined, true));\n    lexerOutput.commentTokens = lexerOutput.commentTokens.filter((t) => t.file === 'main.nako3');\n    lexerOutput.requireTokens = lexerOutput.requireTokens.filter((t) => t.file === 'main.nako3');\n    lexerOutput.tokens = lexerOutput.tokens.filter((t) => t.file === 'main.nako3');\n    // 外部ファイルで定義された関数名に一致するトークンのtypeをfuncに変更する。\n    // 取り込んでいないファイルも参照される問題や、関数名の重複がある場合に正しくない情報を表示する問題がある。\n    // eslint-disable-next-line no-lone-blocks\n    {\n        /** @type {Record<string, object>} */\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\n            for (const token of lexerOutput.tokens) {\n                if (token.type === 'word' && token.value !== 'それ' && funclist[token.value]) {\n                    token.type = 'func';\n                    // meta.file に定義元のファイル名を持たせる。\n                    token.meta = { ...funclist[token.value + ''], file };\n                }\n            }\n        }\n    }\n    // eol、eof、長さが1未満のトークン、位置を特定できないトークンを消す\n    /** @type {(TokenWithSourceMap & { startOffset: number, endOffset: number })[]} */\n    // @ts-ignore\n    const tokens = [...lexerOutput.tokens, ...lexerOutput.commentTokens, ...lexerOutput.requireTokens].filter((t) => t.type !== 'eol' && t.type !== 'eof' &&\n        typeof t.startOffset === 'number' && typeof t.endOffset === 'number' &&\n        t.startOffset < t.endOffset);\n    // startOffsetでソートする\n    tokens.sort((a, b) => (a.startOffset || 0) - (b.startOffset || 0));\n    // 各行について、余る文字の無いようにエディタのトークンに変換する。\n    // 複数のトークンが重なることはないと仮定する。\n    let lineStartOffset = 0;\n    let tokenIndex = 0;\n    // 実際に必要なプロパティはtype, valueだけで、docは独自に追加した。\n    /** @type {EditorToken[][]} */\n    const editorTokens = []; // 各行のエディタのトークン\n    for (let i = 0; i < lines.length; i++) {\n        editorTokens.push([]);\n        const lineEndOffset = lineStartOffset + lines[i].length;\n        let offset = lineStartOffset;\n        // 現在の行にかかっているトークンまで飛ばす\n        while (tokenIndex < tokens.length &&\n            tokens[tokenIndex].endOffset <= lineStartOffset) {\n            tokenIndex++;\n        }\n        // 行全体を完全にまたがっているトークンが存在する場合\n        if (tokenIndex < tokens.length &&\n            tokens[tokenIndex].startOffset <= lineStartOffset &&\n            tokens[tokenIndex].endOffset >= lineEndOffset) {\n            editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, lines[i], tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\n        }\n        else {\n            // 行頭をまたがっているトークンが存在する場合\n            if (tokenIndex < tokens.length &&\n                tokens[tokenIndex].startOffset <= lineStartOffset) {\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\n                offset = tokens[tokenIndex].endOffset;\n                tokenIndex++;\n            }\n            // 行頭も行末もまたがっていないトークンを処理する\n            while (tokenIndex < tokens.length &&\n                tokens[tokenIndex].endOffset < lineEndOffset) {\n                // このトークンと直前のトークンの間に隙間があるなら、埋める\n                if (offset < tokens[tokenIndex].startOffset) {\n                    editorTokens[i].push({\n                        type: 'markup.other',\n                        docHTML: null,\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\n                    });\n                    offset = tokens[tokenIndex].startOffset;\n                }\n                // 現在のトークンを使う\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(offset, tokens[tokenIndex].endOffset), true, underlineJosi));\n                offset = tokens[tokenIndex].endOffset;\n                tokenIndex++;\n            }\n            // 行末をまたがっているトークンが存在する場合\n            if (tokenIndex < tokens.length &&\n                tokens[tokenIndex].startOffset < lineEndOffset) {\n                // トークンの前の隙間\n                if (offset < tokens[tokenIndex].startOffset) {\n                    editorTokens[i].push({\n                        type: 'markup.other',\n                        docHTML: null,\n                        value: code.slice(offset, tokens[tokenIndex].startOffset)\n                    });\n                    offset = tokens[tokenIndex].startOffset;\n                }\n                // トークンを使う\n                editorTokens[i].push(...getEditorTokens(tokens[tokenIndex], nako3, code.slice(tokens[tokenIndex].startOffset, lineEndOffset), tokens[tokenIndex].endOffset <= lineEndOffset, underlineJosi));\n            }\n            else {\n                editorTokens[i].push({\n                    type: 'markup.other',\n                    docHTML: null,\n                    value: code.slice(offset, lineEndOffset)\n                });\n            }\n        }\n        lineStartOffset += lines[i].length + 1;\n    }\n    return { editorTokens, lexerOutput };\n}\n/**\n * エディタ上にエラーメッセージの波線とgutterの赤いマークとエラーメッセージのポップアップを設定するためのクラス。\n */\nexport class EditorMarkers {\n    /**\n       * @param {any} session\n       * @param {AceDocument} doc\n       * @param {TypeofAceRange} AceRange\n       * @param {boolean} disable\n       */\n    constructor(session, doc, AceRange, disable) {\n        this.session = session;\n        this.doc = doc;\n        this.AceRange = AceRange;\n        /** @type {any[]} */\n        this.markers = [];\n        this.hasAnnotations = false;\n        this.disable = disable;\n    }\n    /**\n       * @param {number} startLine\n       * @param {number | null} startColumn\n       * @param {number | null} endLine\n       * @param {number | null} endColumn\n       * @param {(row: number) => string} getLine\n       * @returns {[number, number, number, number]}\n       */\n    static fromNullable(startLine, startColumn, endLine, endColumn, getLine) {\n        if (startColumn === null) {\n            startColumn = 0;\n        }\n        if (endLine === null) {\n            endLine = startLine;\n        }\n        if (endColumn === null) {\n            endColumn = getLine(endLine).length;\n        }\n        // 最低でも1文字分の長さをとる\n        if (startLine === endLine && startColumn === endColumn) {\n            endColumn++;\n        }\n        return [startLine, startColumn, endLine, endColumn];\n    }\n    /**\n       * @param {string} code @param {number} startOffset @param {number} endOffset\n       * @returns {[number, number, number, number]}\n       */\n    static fromOffset(code, startOffset, endOffset) {\n        const offsetToLineColumn = new OffsetToLineColumn(code);\n        const start = offsetToLineColumn.map(startOffset, false);\n        const end = offsetToLineColumn.map(endOffset, false);\n        return [start.line, start.column, end.line, end.column];\n    }\n    /**\n       * @param {string} code\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\n       * @param {(row: number) => string} getLine\n       * @returns {[number, number, number, number]}\n       */\n    static fromError(code, error, getLine) {\n        if (typeof error.startOffset === 'number' && typeof error.endOffset === 'number') {\n            // 完全な位置を取得できる場合\n            return this.fromOffset(code, error.startOffset, error.endOffset);\n        }\n        else if (typeof error.line === 'number') {\n            // 行全体の場合\n            return this.fromNullable(error.line, null, null, null, getLine);\n        }\n        else {\n            // 位置が不明な場合\n            return this.fromNullable(0, null, null, null, getLine);\n        }\n    }\n    /**\n       * @param {number} startLine\n       * @param {number | null} startColumn\n       * @param {number | null} endLine\n       * @param {number | null} endColumn\n       * @param {string} message\n       * @param {'warn' | 'error'} type\n       */\n    add(startLine, startColumn, endLine, endColumn, message, type) {\n        if (this.disable) {\n            return;\n        }\n        const range = new this.AceRange(...EditorMarkers.fromNullable(startLine, startColumn, endLine, endColumn, (row) => this.doc.getLine(row)));\n        this.markers.push(this.session.addMarker(range, 'marker-' + (type === 'warn' ? 'yellow' : 'red'), 'text', false));\n        // typeは 'error' | 'warning' | 'info'\n        this.session.setAnnotations([{ row: startLine, column: startColumn, text: message, type: type === 'warn' ? 'warning' : 'error' }]);\n        this.hasAnnotations = true;\n    }\n    /**\n       * @param {string} code\n       * @param {{ line?: number, startOffset?: number | null, endOffset?: number | null, message: string }} error\n       * @param {'warn' | 'error'} type\n       */\n    addByError(code, error, type) {\n        this.add(...EditorMarkers.fromError(code, error, (row) => this.doc.getLine(row)), error.message, type);\n    }\n    /**\n       * 全てのエラーメッセージを削除する。\n       */\n    clear() {\n        for (const marker of this.markers) {\n            this.session.removeMarker(marker);\n        }\n        this.markers.length = 0;\n        if (this.hasAnnotations) {\n            this.session.clearAnnotations();\n            this.hasAnnotations = false;\n        }\n    }\n}\n/**\n * ace editor のBackgroundTokenizerを上書きして、シンタックスハイライトを自由に表示するためのクラス。\n * ace editor ではシンタックスハイライトのために正規表現ベースのBackgroundTokenizerクラスを用意し定期的にトークン化を\n * 行っているが、正規表現ではなくなでしこのコンパイラの出力を使うためにはそれを上書きする必要がある。\n */\nexport class BackgroundTokenizer {\n    /**\n       * @param {AceDocument} doc\n       * @param {NakoCompiler} nako3\n       * @param {(firstRow: number, lastRow: number, ms: number) => void} onTokenUpdate\n       * @param {(code: string, err: Error) => void} onCompileError\n       * @param {boolean} underlineJosi\n       */\n    constructor(doc, nako3, onTokenUpdate, onCompileError, underlineJosi) {\n        this.onUpdate = onTokenUpdate;\n        this.doc = doc;\n        this.dirty = true;\n        this.nako3 = nako3;\n        this.onCompileError = onCompileError;\n        this.underlineJosi = underlineJosi;\n        // オートコンプリートで使うために、直近のtokenizeの結果を保存しておく\n        /** @type {ReturnType<NakoCompiler['lex']> | null} */\n        this.lastLexerOutput = null;\n        // 各行のパース結果。\n        // typeはscopeのこと。配列の全要素のvalueを結合した文字列がその行の文字列と等しくなる必要がある。\n        /** @type {EditorToken[][]} */\n        this.lines = this.doc.getAllLines().map((line) => [{ type: 'markup.other', value: line, docHTML: null }]);\n        // this.lines は外部から勝手に編集されてしまうため、コピーを持つ\n        /** @type {{ code: string, lines: string } | null} */\n        this.cache = null;\n        this.deleted = false;\n        /** @public */\n        this.enabled = true;\n        const update = () => {\n            if (this.deleted) {\n                return;\n            }\n            if (this.dirty && this.enabled) {\n                const startTime = Date.now();\n                this.dirty = false;\n                const code = this.doc.getAllLines().join('\\n');\n                try {\n                    const startTime = Date.now();\n                    const out = tokenize(this.doc.getAllLines(), nako3, this.underlineJosi);\n                    this.lastLexerOutput = out.lexerOutput;\n                    this.lines = out.editorTokens;\n                    this.cache = { code, lines: JSON.stringify(this.lines) };\n                    // ファイル全体の更新を通知する。\n                    onTokenUpdate(0, this.doc.getLength() - 1, Date.now() - startTime);\n                }\n                catch (e) {\n                    onCompileError(code, e);\n                }\n                // tokenizeに時間がかかる場合、文字を入力できるように次回の実行を遅くする。\n                setTimeout(update, Math.max(100, Math.min(5000, (Date.now() - startTime) * 5)));\n            }\n            else {\n                setTimeout(update, 100);\n            }\n        };\n        // コンストラクタが返る前にコールバックを呼ぶのはバグの元になるため一瞬待つ。\n        // たとえば `const a = new BackgroundTokenizer(..., () => { /* aを使った処理 */ }, ...)` がReferenceErrorになる。\n        setTimeout(() => { update(); }, 0);\n    }\n    dispose() {\n        this.deleted = true;\n    }\n    /**\n       * テキストに変更があったときに呼ばれる。IME入力中には呼ばれない。\n       * @param {{ action: string, start: { row: number, column: number }, end: { row: number, column: number }, lines: string[] }} delta\n       */\n    $updateOnChange(delta) {\n        this.dirty = true;\n        const startRow = delta.start.row;\n        const endRow = delta.end.row;\n        if (startRow === endRow) { // 1行の編集\n            if (delta.action === 'insert' && this.lines[startRow]) { // 行内に文字列を挿入\n                const columnStart = delta.start.column;\n                // updateOnChangeはIME入力中には呼ばれない。composition_placeholder を消さないとIME確定後の表示がずれる。\n                const oldTokens = this.lines[startRow]\n                    .filter((v) => v.type !== 'composition_placeholder');\n                /** @type {EditorToken[]} */\n                const newTokens = [];\n                let i = 0;\n                let offset = 0;\n                // columnStartより左のトークンはそのまま保持する\n                while (i < oldTokens.length && offset + oldTokens[i].value.length <= columnStart) {\n                    newTokens.push(oldTokens[i]);\n                    offset += oldTokens[i].value.length;\n                    i++;\n                }\n                // columnStartに重なっているトークンがあれば、2つに分割する\n                if (i < oldTokens.length && offset < columnStart) {\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(0, columnStart - offset), docHTML: null });\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\n                    newTokens.push({ type: oldTokens[i].type, value: oldTokens[i].value.slice(columnStart - offset), docHTML: null });\n                    i++;\n                }\n                else {\n                    newTokens.push({ type: 'markup.other', value: delta.lines[0], docHTML: null });\n                }\n                // columnStartより右のトークンもそのまま保持する\n                while (i < oldTokens.length) {\n                    newTokens.push(oldTokens[i]);\n                    i++;\n                }\n                this.lines[startRow] = newTokens;\n            }\n            else {\n                this.lines[startRow] = getDefaultTokens(startRow, this.doc);\n            }\n        }\n        else if (delta.action === 'remove') { // 範囲削除\n            this.lines.splice(startRow, endRow - startRow + 1, getDefaultTokens(startRow, this.doc));\n        }\n        else { // 行の挿入\n            this.lines.splice(startRow, 1, ...Array(endRow - startRow + 1).fill(null).map((_, i) => getDefaultTokens(i + startRow, this.doc)));\n        }\n    }\n    /**\n       * tokenizerの出力を返す。文字入力したときに呼ばれる。\n       * @param {number} row\n       */\n    getTokens(row) {\n        // IME入力中はthis.lines[row]に自動的にnullが設定される。その場合新しく行のトークン列を生成して返さなければならない。\n        // 返した配列には自動的にIMEの入力用のテキストボックスであるcomposition_placeholderが挿入される。\n        if (!this.lines[row]) {\n            let ok = false;\n            if (this.enabled) {\n                // tokenizeは非常に遅いため、キャッシュを使えるならそれを使う。\n                const code = this.doc.getAllLines().join('\\n');\n                if (this.cache !== null && this.cache.code === code) {\n                    ok = true;\n                }\n                else {\n                    try {\n                        const lines = tokenize(this.doc.getAllLines(), this.nako3, this.underlineJosi);\n                        this.cache = { code, lines: JSON.stringify(lines.editorTokens) };\n                        ok = true;\n                    }\n                    catch (e) {\n                        if (!(e instanceof NakoError)) {\n                            console.error(e);\n                        }\n                    }\n                }\n            }\n            if (ok && this.cache !== null) {\n                this.lines[row] = JSON.parse(this.cache.lines)[row];\n            }\n            else {\n                this.lines[row] = getDefaultTokens(row, this.doc);\n            }\n        }\n        return this.lines[row];\n    }\n    // ace側から呼ばれるが無視するメソッド\n    // @ts-ignore\n    start(startRow) { }\n    // @ts-ignore\n    fireUpdateEvent(firstRow, lastRow) { }\n    // @ts-ignore\n    setDocument(doc) { }\n    scheduleStart() { }\n    // @ts-ignore\n    setTokenizer(tokenizer) { }\n    stop() { }\n    // @ts-ignore\n    getState(row) { return 'start'; }\n}\n/**\n * シンタックスハイライト以外のエディタの挙動の定義。\n */\nexport class LanguageFeatures {\n    /**\n       * @param {TypeofAceRange} AceRange\n       * @param {NakoCompiler} nako3\n       */\n    constructor(AceRange, nako3) {\n        this.AceRange = AceRange;\n        this.nako3 = nako3;\n    }\n    /**\n       * Ctrl + / の動作の定義。\n       * @param {string} state\n       * @param {Session} session\n       * @param {number} startRow\n       * @param {number} endRow\n       */\n    static toggleCommentLines(state, { doc }, startRow, endRow) {\n        const prepare = NakoPrepare.getInstance();\n        /**\n             * @param {string} line\n             * @returns {{ type: 'blank' | 'code' } | { type: 'comment', start: number, len: number }}\n             */\n        const parseLine = (line) => {\n            // 先頭の空白を消す\n            const indent = getIndent(line);\n            if (indent === line) {\n                return { type: 'blank' };\n            }\n            line = line.substring(indent.length);\n            // 先頭がコメントの開始文字かどうか確認する\n            const ch2 = line.substring(0, 2).split('').map((c) => prepare.convert1ch(c)).join('');\n            if (ch2.substring(0, 1) === '#') {\n                return { type: 'comment', start: indent.length, len: 1 + (line.charAt(1) === ' ' ? 1 : 0) };\n            }\n            if (ch2 === '//') {\n                return { type: 'comment', start: indent.length, len: 2 + (line.charAt(2) === ' ' ? 1 : 0) };\n            }\n            return { type: 'code' };\n        };\n        /** @type {number[]} */\n        const rows = [];\n        for (let i = startRow; i <= endRow; i++) {\n            rows.push(i);\n        }\n        // 全ての行が空白行ならコメントアウト、全ての行が行コメントで始まるか空白行ならアンコメント、そうでなければコメントアウト。\n        if (!rows.every((row) => parseLine(doc.getLine(row)).type === 'blank') &&\n            rows.every((row) => parseLine(doc.getLine(row)).type !== 'code')) {\n            // アンコメント\n            for (const row of rows) {\n                // 行コメントで始まる行ならアンコメントする。\n                // 行コメントの直後にスペースがあるなら、それも1文字だけ削除する。\n                const line = parseLine(doc.getLine(row));\n                if (line.type === 'comment') {\n                    doc.removeInLine(row, line.start, line.start + line.len);\n                }\n            }\n        }\n        else {\n            // 最もインデントの低い行のインデント数を数える\n            const minIndent = Math.min(...rows.map((row) => countIndent(doc.getLine(row))));\n            // コメントアウトする\n            for (const row of rows) {\n                const line = doc.getLine(row);\n                let column = line.length;\n                for (let i = 0; i < line.length; i++) {\n                    if (countIndent(line.slice(0, i)) >= minIndent) {\n                        column = i;\n                        break;\n                    }\n                }\n                doc.insertInLine({ row, column }, '// ');\n            }\n        }\n    }\n    /**\n       * 文字を入力するたびに呼ばれる。trueを返すとautoOutdentが呼ばれる。\n       * @param {string} state\n       * @param {string} line\n       * @param {string} input\n       * @returns {boolean}\n       */\n    static checkOutdent(state, line, input) {\n        // 特定のキーワードの入力が終わったタイミングでインデントを自動修正する。\n        // '違えば'のautoOutdentは「もし」と「条件分岐」のどちらのものか見分けが付かないため諦める。\n        // 「ここ|ま」（縦線がカーソル）の状態で「で」を打つとtrueになってしまう問題があるが、修正するには引数が足りない。\n        // eslint-disable-next-line no-irregular-whitespace\n        return /^[ 　・\\t]*ここまで$/.test(line + input);\n    }\n    /**\n       * checkOutdentがtrueを返したときに呼ばれる。\n       * @param {string} state\n       * @param {Session} session\n       * @param {number} row\n       * @returns {void}\n       */\n    autoOutdent(state, { doc }, row) {\n        // 1行目なら何もしない\n        if (row === 0) {\n            return;\n        }\n        const prevLine = doc.getLine(row - 1);\n        let indent;\n        if (LanguageFeatures.isBlockStart(prevLine)) {\n            // 1つ前の行が「〜ならば」などのブロック開始行なら、その行に合わせる。\n            indent = getIndent(prevLine);\n        }\n        else {\n            // そうでなければ、1つ前の行のインデントから1段階outdentした位置に合わせる。\n            const s = this.getBlockStructure(doc.getAllLines().join('\\n'));\n            const parent = s.parents[row];\n            indent = parent !== null ? s.spaces[parent] : '';\n        }\n        // 置換する\n        const oldIndent = getIndent(doc.getLine(row));\n        doc.replace(new this.AceRange(row, 0, row, oldIndent.length), indent);\n    }\n    /**\n       * エンターキーを押して行が追加されたときに挿入する文字列を指定する。\n       * @param {string} state\n       * @param {string} line 改行前にカーソルがあった行の文字列\n       * @param {string} tab タブ文字（デフォルトでは \"    \"）\n       */\n    static getNextLineIndent(state, line, tab) {\n        // ●で始まるか、特定のキーワードで終わる場合にマッチする。\n        if (this.isBlockStart(line)) {\n            return getIndent(line) + tab;\n        }\n        return getIndent(line);\n    }\n    /** @param {string} line */\n    static isBlockStart(line) {\n        // eslint-disable-next-line no-irregular-whitespace\n        return /^[ 　・\\t]*●|(ならば|なければ|ここから|条件分岐|違えば|回|繰り返(す|し)|の間|反復|とは|には|エラー監視|エラーならば|実行速度優先)、?\\s*$/.test(line);\n    }\n    /**\n       * オートコンプリート\n       * @param {number} row\n       * @param {string} prefix getCompletionPrefixの出力\n       * @param {NakoCompiler} nako3\n       * @param {BackgroundTokenizer} backgroundTokenizer\n       */\n    static getCompletionItems(row, prefix, nako3, backgroundTokenizer) {\n        /**\n             * keyはcaption。metaは候補の横に薄く表示されるテキスト。\n             * @type {Map<string, { value: string, meta: Set<string>, score: number }>}\n             */\n        const result = new Map();\n        /** 引数のリストを含まない、関数名だけのリスト @type {Set<string>} */\n        const values = new Set();\n        /**\n             * オートコンプリートの項目を追加する。すでに存在するならマージする。\n             * @param {string} caption @param {string} value @param {string} meta\n             */\n        const addItem = (caption, value, meta) => {\n            const item = result.get(caption);\n            if (item) {\n                item.meta.add(meta);\n            }\n            else {\n                // 日本語の文字数は英語よりずっと多いため、ただ一致する文字数を数えるだけで十分。\n                const score = prefix.split('').filter((c) => value.includes(c)).length;\n                result.set(caption, { value, meta: new Set([meta]), score });\n                values.add(value);\n            }\n        };\n        // プラグイン関数\n        for (const name of Object.keys(nako3.__varslist[0])) {\n            if (name.startsWith('!')) { // 「!PluginBrowser:初期化」などを除外\n                continue;\n            }\n            const f = nako3.funclist[name];\n            if (typeof f !== 'object' || f === null) {\n                continue;\n            }\n            const pluginName = findPluginName(name, nako3) || 'プラグイン';\n            if (f.type === 'func') {\n                addItem(createParameterDeclaration(f.josi) + name, name, pluginName);\n            }\n            else {\n                addItem(name, name, pluginName);\n            }\n        }\n        // 依存ファイルが定義した関数名\n        for (const [file, { funclist }] of Object.entries(nako3.dependencies)) {\n            for (const [name, f] of Object.entries(funclist)) {\n                const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\n                addItem(josi + name, name, file);\n            }\n        }\n        // 現在のファイル内に存在する名前\n        if (backgroundTokenizer.lastLexerOutput !== null) {\n            for (const token of backgroundTokenizer.lastLexerOutput.tokens) {\n                const name = token.value + '';\n                // 同じ行のトークンの場合、自分自身にマッチしている可能性が高いため除外する。\n                // すでに定義されている場合も、定義ではなく参照の可能性が高いため除外する。\n                if (token.line === row || values.has(name)) {\n                    continue;\n                }\n                if (token.type === 'word') {\n                    addItem(name, name, '変数');\n                }\n                else if (token.type === 'func') {\n                    const f = nako3.funclist[name];\n                    const josi = (f && f.type === 'func') ? createParameterDeclaration(f.josi) : '';\n                    addItem(josi + name, name, '関数');\n                }\n            }\n        }\n        return Array.from(result.entries()).map(([caption, data]) => ({ caption, ...data, meta: Array.from(data.meta).join(', ') }));\n    }\n    /**\n       * スニペット\n       */\n    /** @param {string} text */\n    static getSnippets(text) {\n        // インデント構文が有効化されているなら「ここまで」を消す\n        const indentSyntax = isIndentSyntaxEnabled(text);\n        /** @param {string} en @param {string} jp @param {string} snippet */\n        const item = (en, jp, snippet) => indentSyntax\n            ? { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t*ここまで(\\n|$)/g, '').replace(/\\t/g, '    ') }\n            : { caption: en, meta: `\\u21E5 ${jp}`, score: 1, snippet: snippet.replace(/\\t/g, '    ') };\n        return [\n            item('if', 'もし〜ならば', 'もし${1:1=1}ならば\\n\\t${2:1を表示}\\n違えば\\n\\t${3:2を表示}\\nここまで\\n'),\n            item('times', '〜回', '${1:3}回\\n\\t${2:1を表示}\\nここまで\\n'),\n            item('for', '繰り返す', '${1:N}で${2:1}から${3:3}まで繰り返す\\n\\t${4:Nを表示}\\nここまで\\n'),\n            item('while', '〜の間', '${1:N<2の間}\\n\\tN=N+1\\nここまで\\n'),\n            item('foreach', '〜を反復', '${1:[1,2,3]}を反復\\n\\t${2:対象を表示}\\nここまで\\n'),\n            item('switch', '〜で条件分岐', '${1:N}で条件分岐\\n\\t${2:1}ならば\\n\\t\\t${3:1を表示}\\n\\tここまで\\n\\t${4:2}ならば\\n\\t\\t${5:2を表示}\\n\\tここまで\\n\\t違えば\\n\\t\\t${6:3を表示}\\n\\tここまで\\nここまで\\n'),\n            item('function', '●〜とは', '●（${1:AとBを}）${2:足す}とは\\n\\t${3:A+Bを戻す}\\nここまで\\n'),\n            item('test', '●テスト:〜とは', '●テスト:${2:足す}とは\\n\\t1と2を足す\\n\\tそれと3がASSERT等しい\\nここまで\\n'),\n            item('try', 'エラー監視', 'エラー監視\\n\\t${1:1のエラー発生}\\nエラーならば\\n\\t${2:2を表示}\\nここまで\\n')\n        ];\n    }\n    /**\n       * @param {string} line\n       * @param {NakoCompiler} nako3\n       */\n    static getCompletionPrefix(line, nako3) {\n        /** @type {ReturnType<NakoCompiler['lex']>[\"tokens\"] | null} */\n        let tokens = null;\n        // ひらがなとアルファベットとカタカナと漢字のみオートコンプリートする。\n        if (line.length === 0 || !/[ぁ-んa-zA-Zァ-ヶー\\u3005\\u4E00-\\u9FCF]/.test(line[line.length - 1])) {\n            return '';\n        }\n        // 現在の行のカーソルより前の部分をlexerにかける。速度を優先して1行だけ処理する。\n        try {\n            nako3.reset();\n            tokens = withoutLogger(nako3, () => nako3.lex(line, 'completion.nako3', undefined, true)).tokens\n                .filter((t) => t.type !== 'eol' && t.type !== 'eof');\n        }\n        catch (e) {\n            if (!(e instanceof NakoError)) {\n                console.error(e);\n            }\n        }\n        if (tokens === null || tokens.length === 0 || !tokens[tokens.length - 1].value) {\n            return '';\n        }\n        const prefix = tokens[tokens.length - 1].value + '';\n        // 単語の先頭がひらがなではなく末尾がひらがなのとき、助詞を打っている可能性が高いためオートコンプリートしない。\n        if (/[ぁ-ん]/.test(prefix[prefix.length - 1]) && !/[ぁ-ん]/.test(prefix[0])) {\n            return '';\n        }\n        // 最後のトークンの値を、オートコンプリートで既に入力した部分とする。\n        return prefix;\n    }\n    /**\n       * 文字を打つたびに各行についてこの関数が呼ばれる。'start'を返した行はfold可能な範囲の先頭の行になる。\n       * @param {Session} session\n       * @param {string} foldStyle\n       * @param {number} row\n       * @returns {'start' | ''}\n       */\n    getFoldWidget({ doc }, foldStyle, row) {\n        // 速度が重要なため正規表現でマッチする。\n        return LanguageFeatures.isBlockStart(doc.getLine(row)) ? 'start' : '';\n    }\n    /**\n       * getFoldWidgetが'start'を返した行に設置されるfold用のボタンが押されたときに呼ばれる。\n       * @param {Session} session\n       * @param {string} foldStyle\n       * @param {number} row\n       * @returns {AceRange | null} foldする範囲\n       */\n    getFoldWidgetRange({ doc }, foldStyle, row) {\n        const pair = this.getBlockStructure(doc.getAllLines().join('\\n')).pairs.find((v) => v[0] === row);\n        if (pair !== undefined) {\n            return new this.AceRange(pair[0], doc.getLine(pair[0]).length, pair[1] - 1, doc.getLine(pair[1] - 1).length);\n        }\n        return null;\n    }\n    /**\n       * @param {AceDocument} doc\n       * @returns {CodeLens[]}\n       */\n    static getCodeLens(doc) {\n        const results = [];\n        for (const [row, line] of Array.from(doc.getAllLines().entries())) {\n            // eslint-disable-next-line no-irregular-whitespace\n            const matches = /^[ 　・\\t]*●テスト:(.+?)(?:とは|$)/.exec(line);\n            if (matches !== null) {\n                results.push({\n                    start: { row },\n                    command: { title: 'テストを実行', id: 'runTest', arguments: [matches[1]] }\n                });\n            }\n        }\n        return results;\n    }\n    /**\n       * @param {string} code\n       * @returns {ReturnType<getBlockStructure>}\n       * @private\n       */\n    getBlockStructure(code) {\n        // キャッシュ\n        if (!this.blockStructure || this.blockStructure.code !== code) {\n            // @ts-ignore\n            this.blockStructure = { code, data: getBlockStructure(code) };\n        }\n        return this.blockStructure.data;\n    }\n}\n/**\n * 複数ファイルを表示するための最低限のAPIを提供する。\n * @typedef {{ content: string, cursor: { range: AceRange, reversed: boolean }, scroll: { top: number, left: number }, undoManger: any }} EditorTabState\n */\nclass EditorTabs {\n    /**\n       * @param {AceEditor} editor\n       * @param {TypeofAceRange} AceRange\n       * @param {any} UndoManager\n       */\n    constructor(editor, AceRange, UndoManager) {\n        this.editor = editor;\n        this.AceRange = AceRange;\n        this.UndoManager = UndoManager;\n    }\n    /** @param {string} content @returns {EditorTabState} */\n    newTab(content) {\n        return {\n            content,\n            cursor: { range: new this.AceRange(0, 0, 0, 0), reversed: false },\n            scroll: { left: 0, top: 0 },\n            undoManger: new this.UndoManager()\n        };\n    }\n    /** @returns {EditorTabState} */\n    getTab() {\n        return {\n            content: this.editor.getValue(),\n            cursor: { range: this.editor.session.selection.getRange(), reversed: this.editor.session.selection.isBackwards() },\n            scroll: { left: this.editor.session.getScrollLeft(), top: this.editor.session.getScrollTop() },\n            undoManger: this.editor.session.getUndoManager()\n        };\n    }\n    /** @param {EditorTabState} state */\n    setTab(state) {\n        this.editor.setValue(state.content);\n        this.editor.session.selection.setRange(state.cursor.range, state.cursor.reversed);\n        this.editor.session.setScrollLeft(state.scroll.left);\n        this.editor.session.setScrollTop(state.scroll.top);\n        this.editor.session.setUndoManager(state.undoManger);\n    }\n}\nclass Options {\n    /** Save Options */\n    static save(editor) {\n        try {\n            /** @type {any} */\n            const obj = {};\n            for (const key of ['syntaxHighlighting', 'keyboardHandler', 'theme', 'fontSize', 'wrap', 'useSoftTabs', 'tabSize', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\n                obj[key] = editor.getOption(key);\n            }\n            localStorage.setItem('nako3EditorOptions', JSON.stringify(obj));\n        }\n        catch (e) {\n            // JSON.stringify のエラー、localStorageのエラーなど\n            console.error(e);\n            return null;\n        }\n    }\n    /** @param {AceEditor} editor */\n    static load(editor) {\n        try {\n            if (!window.localStorage) {\n                return null;\n            }\n            const text = window.localStorage.getItem('nako3EditorOptions');\n            if (text === null) {\n                return null;\n            }\n            const json = JSON.parse(text);\n            if (['ace/keyboard/vscode', 'ace/keyboard/emacs', 'ace/keyboard/sublime', 'ace/keyboard/vim'].includes(json.keyboardHandler)) {\n                editor.setOption('keyboardHandler', json.keyboardHandler);\n            }\n            if (['ace/theme/xcode', 'ace/theme/monokai'].includes(json.theme)) {\n                editor.setOption('theme', json.theme);\n            }\n            if (typeof json.fontSize === 'number') {\n                editor.setOption('fontSize', Math.min(48, Math.max(6, json.fontSize)));\n            }\n            for (const key of ['syntaxHighlighting', 'wrap', 'useSoftTabs', 'showInvisibles', 'enableLiveAutocompletion', 'indentedSoftWrap', 'underlineJosi']) {\n                if (typeof json[key] === 'boolean') {\n                    editor.setOption(key, json[key]);\n                }\n            }\n            if (typeof json.tabSize === 'number') {\n                editor.setOption('tabSize', Math.min(16, Math.max(0, json.tabSize)));\n            }\n        }\n        catch (e) {\n            // JSONのパースエラー、localStorageのエラーなど\n            console.error(e);\n            return null;\n        }\n    }\n    /** OptionPanelクラスをなでしこ用に書き換える。 */\n    static initPanel(OptionPanel, editor) {\n        const panel = new OptionPanel(editor); // editorはエラーが飛ばなければ何でも良い\n        // ページ内で一度だけ呼ぶ\n        if (this.done) {\n            return;\n        }\n        this.done = true;\n        // renderメソッドを呼ぶとrenderOptionGroupにoptionGroups.Main、optionGroups.More が順に渡されることを利用して、optionGroupsを書き換える。\n        let isMain = true;\n        panel.renderOptionGroup = (group) => {\n            if (isMain) { // Main\n                for (const key of Object.keys(group)) {\n                    delete group[key];\n                }\n                // スマートフォンでも見れるように、文字数は最小限にする\n                group['シンタックスハイライト'] = {\n                    path: 'syntaxHighlighting'\n                };\n                group['キーバインド'] = {\n                    path: 'keyboardHandler',\n                    type: 'select',\n                    items: [\n                        { caption: 'VSCode', value: 'ace/keyboard/vscode' },\n                        { caption: 'Emacs', value: 'ace/keyboard/emacs' },\n                        { caption: 'Sublime', value: 'ace/keyboard/sublime' },\n                        { caption: 'Vim', value: 'ace/keyboard/vim' }\n                    ]\n                };\n                group['カラーテーマ'] = {\n                    path: 'theme',\n                    type: 'select',\n                    items: [\n                        { caption: 'ライト', value: 'ace/theme/xcode' },\n                        { caption: 'ダーク', value: 'ace/theme/monokai' }\n                    ]\n                };\n                group['文字サイズ'] = {\n                    path: 'fontSize',\n                    type: 'number',\n                    defaultValue: 16\n                };\n                group['行の折り返し'] = {\n                    path: 'wrap',\n                    type: 'select',\n                    items: [\n                        { caption: 'なし', value: 'off' },\n                        { caption: 'あり', value: 'free' }\n                    ]\n                };\n                group['ソフトタブ'] = [{\n                        path: 'useSoftTabs'\n                    }, {\n                        ariaLabel: 'Tab Size',\n                        path: 'tabSize',\n                        type: 'number',\n                        values: [2, 3, 4, 8, 16]\n                    }];\n                group['空白文字を表示'] = {\n                    path: 'showInvisibles'\n                };\n                group['常に自動補完'] = {\n                    path: 'enableLiveAutocompletion'\n                };\n                group['折り返した行をインデント'] = {\n                    path: 'indentedSoftWrap'\n                };\n                group['助詞に下線を引く'] = {\n                    path: 'underlineJosi'\n                };\n                isMain = false;\n            }\n            else { // More\n                for (const key of Object.keys(group)) {\n                    delete group[key];\n                }\n            }\n        };\n        panel.render();\n        // 設定メニューは ace/ext/settings_menu.js の showSettingsMenu 関数によって開かれる。\n        // showSettingsMenu 関数は new OptionPanel(editor).render() で新しい設定パネルのインスタンスを生成するため、\n        // renderメソッドを上書きすることで、生成されたインスタンスにアクセスできる。\n        const render = OptionPanel.prototype.render;\n        OptionPanel.prototype.render = function (...args) {\n            render.apply(this, ...args); // 元の処理\n            // OptionPanel.setOption() で発火される setOption イベントをキャッチする\n            this.on('setOption', () => {\n                console.log('設定を保存しました。');\n                Options.save(this.editor);\n            });\n        };\n    }\n}\n/**\n * ace/ext/language_tools の設定がグローバル変数で保持されているため、こちら側でもグローバル変数で管理しないと、エディタが複数あるときに正しく動かない。\n * - captionはオートコンプリートの候補として表示されるテキスト\n * - metaはcaptionのテキストの右に薄く表示されるテキスト\n * - docHTMLはその更に右に独立したウィンドウで表示されるHTMLによる説明\n * - valueは決定したときに実際に挿入される文字列。プレースホルダーを配置するなら代わりにsnippetに値を設定する。\n *\n * @typedef {{\n *     getCompletions(\n *         editor: any,\n *         session: Session,\n *         pos: { row: number, column: number },\n *         prefix: any,\n *         callback: (\n *             a: null,\n *             b: { meta: string, caption: string, value?: string, score: number, docHTML?: string, snippet?: string }[]\n *         ) => void\n *     ): void\n *     getDocTooltip?(item: any): void\n * }} Completer\n * @type {Completer[]}\n */\nconst completers = [];\nlet editorIdCounter = 0;\n/**\n * 指定したidのHTML要素をなでしこ言語のエディタにする。\n *\n * - ace editor がグローバルに読み込まれている必要がある。\n * - wnako3_editor.css を読み込む必要がある。\n * - readonly にするには data-nako3-readonly=\"true\" を設定する。\n * - エラー位置の表示を無効化するには data-nako3-disable-marker=\"true\" を設定する。\n * - 縦方向にリサイズ可能にするには nako3-resizable=\"true\" を設定する。\n * - デバイスが遅いときにシンタックスハイライトを無効化する機能を切るには nako3-force-syntax-highlighting=\"true\" を設定する。\n *\n * @param {string | Element} idOrElement HTML要素\n * @param {import('./wnako3')} nako3\n * @param {any} ace\n */\nexport function setupEditor(idOrElement, nako3, ace) {\n    /** @type {AceEditor} */\n    const editor = ace.edit(idOrElement);\n    const element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\n    if (element === null) {\n        throw new Error(`[wnako3_editor] idが ${idOrElement} のHTML要素は存在しません。`);\n    }\n    /** @type {TypeofAceRange} */\n    const AceRange = ace.require('ace/range').Range;\n    const editorMarkers = new EditorMarkers(editor.session, editor.session.bgTokenizer.doc, AceRange, !!element.dataset.nako3DisableMarker);\n    if (element.classList.contains('nako3_ace_mounted')) {\n        // 同じエディタを誤って複数回初期化すると、ace editor の挙動を書き換えているせいで\n        // 意図しない動作をしたため、すでにエディタとして使われていないことを確認する。\n        throw new Error('なでしこ言語のエディタの初期化処理を同一のHTML要素に対して複数回適用しました。');\n    }\n    // lang=\"ja\" があると表示がずれる問題の修正 #839\n    element.setAttribute('lang', 'en');\n    // 以前のバージョンではnako3_editorをhtmlに直接付けていたため、互換性のためnako3_editorとは別のクラス名を使用する。\n    element.classList.add('nako3_ace_mounted');\n    element.classList.add('nako3_editor'); // CSSのため\n    const readonly = element.dataset.nako3Readonly;\n    // eslint-disable-next-line no-extra-boolean-cast\n    if (!!readonly) {\n        element.classList.add('readonly');\n        editor.setReadOnly(true);\n    }\n    editor.setFontSize(16);\n    /** @param {Session} session */\n    const resetEditorTokens = (session) => {\n        // 一旦テキスト全体を消してから、元に戻す\n        /** @type {AceDocument} */\n        const doc = session.doc;\n        const lines = doc.getAllLines();\n        const range = session.selection.getRange();\n        doc.removeFullLines(0, doc.getLength());\n        doc.insert({ row: 0, column: 0 }, lines.join('\\n'));\n        session.selection.setRange(range, false);\n    };\n    ace.require('ace/config').defineOptions(editor.constructor.prototype, 'editor', {\n        syntaxHighlighting: {\n            /** @type {(this: AceEditor, value: boolean) => void} */\n            set: function (value) {\n                this.session.bgTokenizer.enabled = value;\n                resetEditorTokens(this.session);\n            },\n            initialValue: true\n        },\n        underlineJosi: {\n            /** @type {(this: AceEditor, value: boolean) => void} */\n            set: function (value) {\n                this.session.bgTokenizer.underlineJosi = value;\n                resetEditorTokens(this.session);\n            },\n            initialValue: true\n        }\n    });\n    editor.setOptions({\n        wrap: 'free',\n        indentedSoftWrap: false,\n        showPrintMargin: false\n    });\n    ace.require('ace/keybindings/vscode');\n    editor.setKeyboardHandler('ace/keyboard/vscode');\n    // ドキュメントのホバー\n    const Tooltip = ace.require('ace/tooltip').Tooltip;\n    const tooltip = new Tooltip(editor.container);\n    const event = ace.require('ace/lib/event');\n    event.addListener(editor.renderer.content, 'mouseout', () => {\n        // マウスカーソルがエディタの外に出たら、tooltipを隠す\n        tooltip.hide();\n    });\n    editor.on('mousemove', (e) => {\n        // マウスカーソルがトークンに重なったときにtooltipを表示する。モバイル端末の場合はトークンにカーソルが当たったときに表示される。\n        const pos = e.getDocumentPosition();\n        // getTokenAtはcolumnが行末より大きいとき行末のトークンを返してしまう。\n        if (pos.column >= e.editor.session.getLine(pos.row).length) {\n            tooltip.hide();\n            return;\n        }\n        // getTokenAtは実際よりも1文字右のトークンを取得してしまうため、columnに1を足している。\n        /** @type {EditorToken} */\n        const token = e.editor.session.getTokenAt(pos.row, pos.column + 1);\n        if (token === null || !token.docHTML) {\n            // ドキュメントが存在しないトークンならtooltipを表示しない\n            tooltip.hide();\n            return;\n        }\n        tooltip.setHtml(token.docHTML);\n        tooltip.show(null, e.clientX, e.clientY);\n    });\n    editor.session.on('change', () => {\n        // モバイル端末でドキュメントが存在するトークンを編集するときにツールチップが消えない問題を解消するために、文字を打ったらtooltipを隠す。\n        tooltip.hide();\n        // 文字入力したらマーカーを消す\n        editorMarkers.clear();\n    });\n    editor.on('guttermousedown', (e) => {\n        const target = e.domEvent.target;\n        if (target.className.indexOf('ace_gutter-cell') === -1) {\n            return;\n        }\n        if (!editor.isFocused()) {\n            return;\n        }\n        const row = e.getDocumentPosition().row;\n        const editorId = e.editor.editorId || 0;\n        if (target.className.indexOf('ace_breakpoint') === -1) {\n            e.editor.session.setBreakpoint(row);\n            window.postMessage({ action: 'breakpoint:on', row, editorId });\n        }\n        else {\n            e.editor.session.clearBreakpoint(row);\n            window.postMessage({ action: 'breakpoint:off', row, editorId });\n        }\n        // console.log('BREAKPOINT=', row, 'editorId=', editorId)\n        e.stop();\n    });\n    const forceSyntaxHighlighting = !!element.dataset.nako3ForceSyntaxHighlighting;\n    let isFirstTime = true;\n    const oldBgTokenizer = editor.session.bgTokenizer;\n    const backgroundTokenizer = new BackgroundTokenizer(editor.session.bgTokenizer.doc, nako3, (firstRow, lastRow, ms) => {\n        oldBgTokenizer._signal('update', { data: { first: firstRow, last: lastRow } });\n        // 処理が遅い場合シンタックスハイライトを無効化する。\n        if (ms > 220 && editor.getOption('syntaxHighlighting') && !readonly && !forceSyntaxHighlighting && isFirstTime) {\n            isFirstTime = false;\n            slowSpeedMessage.classList.add('visible');\n            editor.setOption('syntaxHighlighting', false);\n            setTimeout(() => {\n                slowSpeedMessage.classList.remove('visible');\n            }, 13000);\n        }\n    }, (code, err) => { editorMarkers.addByError(code, err, 'error'); }, \n    /** @type {boolean} */ (editor.getOption('underlineJosi')));\n    // オートコンプリートを有効化する\n    editor.setOptions({\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: true\n    });\n    const editorId = editorIdCounter++;\n    editor.wnako3EditorId = editorId;\n    // オートコンプリートのcompleterを設定する\n    completers.push({\n        getCompletions(editor, session, pos, prefix, callback) {\n            if (editor.wnako3EditorId !== editorId) {\n                callback(null, []);\n            }\n            else {\n                const items = LanguageFeatures.getCompletionItems(pos.row, prefix, nako3, backgroundTokenizer);\n                // 完全に一致する候補があればオートコンプリートしない。（Aceエディタでの挙動が微妙なため。）\n                if (items.some((v) => v.value === prefix)) {\n                    callback(null, []);\n                    return;\n                }\n                callback(null, items);\n            }\n        }\n    }, { getCompletions(editor, session, pos, prefix, callback) { callback(null, (editor.wnako3EditorId !== editorId) ? [] : LanguageFeatures.getSnippets(editor.session.doc.getAllLines().join('\\n'))); } });\n    ace.require('ace/ext/language_tools').setCompleters(completers);\n    // オートコンプリートの単語の区切りが日本語に対応していないため、メソッドを上書きして対応させる。\n    // 文字を入力するたびに呼ばれ、''以外を返すとその文字列をもとにしてautocompletionが始まる。\n    ace.require('ace/autocomplete/util').getCompletionPrefix = (/** @type {AceEditor} */ editor) => {\n        const pos = editor.getCursorPosition();\n        return LanguageFeatures.getCompletionPrefix(editor.session.doc.getLine(pos.row).slice(0, pos.column), nako3);\n    };\n    // エディタの挙動の設定\n    const languageFeatures = new LanguageFeatures(AceRange, nako3);\n    const oop = ace.require('ace/lib/oop');\n    const TextMode = ace.require('ace/mode/text').Mode;\n    const Mode = function () {\n        this.HighlightRules = new TextMode().HighlightRules;\n        this.foldingRules = {\n            getFoldWidget: languageFeatures.getFoldWidget.bind(languageFeatures),\n            getFoldWidgetRange: languageFeatures.getFoldWidgetRange.bind(languageFeatures)\n        };\n    };\n    oop.inherits(Mode, TextMode);\n    Mode.prototype.toggleCommentLines = LanguageFeatures.toggleCommentLines.bind(LanguageFeatures);\n    Mode.prototype.getNextLineIndent = LanguageFeatures.getNextLineIndent.bind(LanguageFeatures);\n    Mode.prototype.checkOutdent = LanguageFeatures.checkOutdent.bind(LanguageFeatures);\n    Mode.prototype.autoOutdent = languageFeatures.autoOutdent.bind(languageFeatures);\n    editor.session.setMode(new Mode());\n    // tokenizer （シンタックスハイライト）の上書き\n    editor.session.bgTokenizer.stop();\n    editor.session.bgTokenizer = backgroundTokenizer;\n    editor.setTheme('ace/theme/xcode');\n    // 設定メニューの上書き\n    // なでしこ用に上書きした設定の削除やテキストの和訳をする。\n    Options.load(editor);\n    const OptionPanel = ace.require('ace/ext/options').OptionPanel;\n    Options.initPanel(OptionPanel, editor);\n    // 右下のボタン全体を囲むdiv\n    const buttonContainer = document.createElement('div');\n    buttonContainer.classList.add('button-container');\n    editor.container.appendChild(buttonContainer);\n    // 遅い端末へのメッセージのボタン\n    const slowSpeedMessage = document.createElement('span');\n    slowSpeedMessage.classList.add('slow-speed-message');\n    slowSpeedMessage.innerHTML = '<span>エディタの|応答速度が|低下したため|シンタックス|ハイライトを|無効化|しました。</span>'.replace(/\\|/g, '</span><span>');\n    buttonContainer.appendChild(slowSpeedMessage);\n    // テストの定義の上に「テストを実行」ボタンを表示する\n    /** @type {{ name: 'test', callback: (testName: string | undefined) => void }[]} */\n    const codeLensListeners = [];\n    try {\n        const CodeLens = ace.require('ace/ext/code_lens');\n        editor.setOption('enableCodeLens', true);\n        editor.commands.addCommand({\n            name: 'runTest',\n            exec: (/** @type {AceEditor} */ editor, /** @type {any[]} */ args) => {\n                codeLensListeners\n                    .filter((v) => v.name === 'test')\n                    .forEach((f) => f.callback(args[0]));\n            }\n        });\n        CodeLens.registerCodeLensProvider(editor, {\n            provideCodeLenses: (/** @type {Session} */ session, /** @type {(_: null, arr: CodeLens[]) => void} */ callback) => {\n                callback(null, codeLensListeners.some((v) => v.name === 'test') ? LanguageFeatures.getCodeLens(session.doc) : []);\n            }\n        });\n    }\n    catch (e) {\n        console.error(e); // ext/code_lens のscriptタグが読み込まれていない場合など。\n    }\n    // 「全画面」ボタン\n    const exitFullscreen = () => {\n        editor.container.classList.remove('fullscreen');\n        editor.renderer.setScrollMargin(0, 0, 0, 0); // marginを元に戻す\n    };\n    const fullscreenButton = document.createElement('span');\n    fullscreenButton.classList.add('editor-button');\n    fullscreenButton.innerText = '全画面';\n    fullscreenButton.addEventListener('click', (e) => {\n        if (editor.container.classList.contains('fullscreen')) {\n            exitFullscreen();\n        }\n        else {\n            editor.container.classList.add('fullscreen');\n            editor.renderer.setScrollMargin(20, 20, 0, 0); // 上下に少し隙間を開ける\n        }\n        e.preventDefault();\n    });\n    buttonContainer.appendChild(fullscreenButton);\n    // 「設定」ボタン\n    const settingsButton = document.createElement('span');\n    settingsButton.classList.add('editor-button');\n    settingsButton.innerText = '設定';\n    settingsButton.addEventListener('click', (e) => {\n        exitFullscreen();\n        editor.execCommand('showSettingsMenu');\n        e.preventDefault();\n    });\n    buttonContainer.appendChild(settingsButton);\n    // 複数ファイルの切り替え\n    const UndoManager = ace.require('ace/undomanager').UndoManager;\n    const editorTabs = new EditorTabs(editor, AceRange, UndoManager);\n    // リサイズ可能にする\n    const resizable = element.dataset.nako3Resizable;\n    if (resizable) {\n        new MutationObserver(() => { editor.resize(); }).observe(editor.container, { attributes: true });\n        editor.renderer.setScrollMargin(4, 0, 4, 0);\n        editor.container.classList.add('resizable');\n    }\n    const retokenize = () => { backgroundTokenizer.dirty = true; };\n    /**\n       * プログラムを実行して、エラーがあればエディタ上に波線を表示する。出力はoutputContainerに表示する。\n       * methodが'test'のとき、testNameを指定すると1つのテストだけ実行できる。\n       */\n    const run = (opts) => {\n        const code = editor.getValue();\n        const preCode = opts.preCode || ''; // プログラムの前に自動的に挿入されるコード\n        // loggerを新しいインスタンスに置き換える。そうしないとどのエディタで起きたエラー（や警告や出力）なのかが分からない。\n        const logger = nako3.replaceLogger();\n        if (opts.outputContainer) {\n            const c = opts.outputContainer;\n            logger.addListener('info', ({ html }) => {\n                if (!c) {\n                    console.log(html);\n                }\n                c.style.display = 'block';\n                c.innerHTML += html;\n            });\n            opts.outputContainer.classList.add('nako3-output-container');\n        }\n        let filename = opts.file || 'main.nako3';\n        // 警告とエラーをエディタ上に表示する。\n        logger.addListener('info', ({ position, noColor, level }) => {\n            if (position && (position.file === filename && (level === 'warn' || level === 'error'))) {\n                editorMarkers.addByError(code, { ...position, message: noColor }, level);\n            }\n        });\n        // 依存ファイルを読み込む。\n        const promise = nako3.loadDependencies(preCode + code, filename, preCode, opts.localFiles || {})\n            .then(async () => {\n            // プログラムを実行する。\n            if (!filename) {\n                filename = 'main.nako3';\n            }\n            if (opts.method === 'test') {\n                return nako3.test(preCode + code, filename, preCode, opts.testName);\n            }\n            else if (opts.method === 'compile') {\n                return nako3.compile(preCode + code, filename, false, preCode);\n            }\n            else {\n                const opt = { resetEnv: true, resetAll: true, preCode };\n                return await nako3.runAsync(preCode + code, filename, opt);\n            }\n        })\n            .catch((err) => {\n            // エラーはloggerに送られるため何もしなくて良い\n            // しかし念のため console.error で出力\n            console.error('[wnako3_editor]', err, nako3.__globalObj);\n        })\n            .then(async (res) => {\n            // 読み込んだ依存ファイルの情報を使って再度シンタックスハイライトする。\n            retokenize();\n            // シンタックスハイライトが終わるのを待つ\n            while (backgroundTokenizer.dirty) {\n                await new Promise((resolve) => setTimeout(resolve, 0));\n            }\n            return res;\n        })\n            .catch((err) => {\n            console.error('[wnako3_editor::run::promise::catch]', err);\n        });\n        return { promise, logger, code };\n    };\n    return { editor, editorMarkers, editorTabs, retokenize, run, codeLensListeners };\n}\nexport default {\n    tokenize,\n    setupEditor,\n    LanguageFeatures,\n    EditorMarkers,\n    BackgroundTokenizer\n};\n","// 実際のバージョン定義 (自動生成されるので以下を編集しない)\nconst nakoVersion = {\n    version: '3.4.13',\n    major: 3,\n    minor: 4,\n    patch: 13\n};\nexport default nakoVersion;\n","// @ts-nocheck\nexport default {\n    // @色定数\n    '水色': { type: 'const', value: 'aqua' },\n    '紫色': { type: 'const', value: 'fuchsia' },\n    '緑色': { type: 'const', value: 'lime' },\n    '青色': { type: 'const', value: 'blue' },\n    '赤色': { type: 'const', value: 'red' },\n    '黄色': { type: 'const', value: 'yellow' },\n    '黒色': { type: 'const', value: 'black' },\n    '白色': { type: 'const', value: 'white' },\n    '茶色': { type: 'const', value: 'maroon' },\n    '灰色': { type: 'const', value: 'gray' },\n    '金色': { type: 'const', value: 'gold' },\n    '黄金色': { type: 'const', value: 'gold' },\n    '銀色': { type: 'const', value: 'silver' },\n    '白金色': { type: 'const', value: 'silver' },\n    'オリーブ色': { type: 'const', value: 'olive' },\n    'ベージュ色': { type: 'const', value: 'beige' },\n    'アリスブルー色': { type: 'const', value: 'aliceblue' },\n    'RGB': {\n        type: 'func',\n        josi: [['と'], ['と'], ['で', 'の']],\n        pure: true,\n        fn: function (r, g, b) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            return '#' + z2(r) + z2(g) + z2(b);\n        },\n        return_none: false\n    },\n    '色混': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (a) {\n            const z2 = (v) => {\n                const v2 = '00' + v.toString(16);\n                return v2.substr(v2.length - 2, 2);\n            };\n            if (!a) {\n                throw new Error('『色混ぜる』の引数には配列を指定します');\n            }\n            if (a.length < 3) {\n                throw new Error('『色混ぜる』の引数には[RR,GG,BB]形式の配列を指定します');\n            }\n            return '#' + z2(a[0]) + z2(a[1]) + z2(a[2]);\n        },\n        return_none: false\n    }\n};\n","export default {\n    // @システム\n    'WNAKOバージョン': { type: 'const', value: '?' },\n    '終': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // v3.3.74以降 plguin_system.mjsと挙動が同じになった\n            // デバッグモードでなければ例外を投げることでプログラムを終了させる\n            if (sys && sys.__v0) {\n                sys.__v0.forceClose = true;\n                if (!sys.__v0.useDebug) {\n                    throw new Error('__終わる__');\n                }\n            }\n            else {\n                throw new Error('__終わる__');\n            }\n        },\n        return_none: true\n    },\n    'OS取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            const ua = window.navigator.userAgent.toLowerCase();\n            if (ua.indexOf('windows') !== -1) {\n                return 'windows';\n            }\n            if (ua.indexOf('android') !== -1) {\n                return 'android';\n            }\n            if (ua.indexOf('iphone') !== -1) {\n                return 'iphone';\n            }\n            if (ua.indexOf('ipad') !== -1) {\n                return 'ipad';\n            }\n            if (ua.indexOf('mac os x') !== -1) {\n                return 'darwin';\n            }\n            if (ua.indexOf('macintosh') !== -1) {\n                return 'darwin';\n            }\n            if (ua.indexOf('cros') !== -1) {\n                return 'chromeos';\n            }\n            if (ua.indexOf('ubuntu') !== -1) {\n                return 'ubuntu';\n            }\n            if (ua.indexOf('linux') !== -1) {\n                return 'linux';\n            }\n            return 'unknown';\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ダイアログ\n    '言': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s) {\n            window.alert(s);\n        },\n        return_none: true\n    },\n    '尋': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            const r = window.prompt(s);\n            if (!r) {\n                return sys.__v0['空'];\n            }\n            if (/^[-+]?[0-9]+(\\.[0-9]+)?$/.test(r)) {\n                return parseFloat(r);\n            }\n            if (/^[-+－＋]?[0-9０-９]+([.．][0-9０-９]+)?$/.test(r)) {\n                return parseFloat(r.replace(/[－＋０-９．]/g, c => {\n                    return String.fromCharCode(c.charCodeAt(0) - 0xFEE0);\n                }));\n            }\n            return r;\n        }\n    },\n    '文字尋': {\n        type: 'func',\n        josi: [['と', 'を']],\n        pure: true,\n        fn: function (s, sys) {\n            const r = window.prompt(s);\n            if (!r) {\n                return sys.__v0['空'];\n            }\n            return r;\n        }\n    },\n    '二択': {\n        type: 'func',\n        josi: [['で', 'の', 'と', 'を']],\n        pure: true,\n        fn: function (s) {\n            return window.confirm(s);\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ブラウザ操作\n    'ブラウザ移動': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (url, sys) {\n            window.location.href = url;\n        }\n    },\n    'ブラウザ戻': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            window.history.back(-1);\n        }\n    },\n    'ブラウザURL': { type: 'const', value: '' } // @NぶらうざURL\n};\n","export default {\n    // @HTTPとAJAX\n    'HTTP取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX受信時': {\n        type: 'func',\n        josi: [['で'], ['から', 'を']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'AJAX送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            return sys.__exec('AJAXテキスト取得', [url, sys]);\n        }\n    },\n    'AJAX送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (callback, url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                // もし301であれば自動でリダイレクトするため,200だけをチェックすれば良い\n                if (res.status !== 200) {\n                    return sys.__v0['AJAX:ONERROR'](res.status);\n                }\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text, sys);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        },\n        return_none: true\n    },\n    'AJAXオプション': { type: 'const', value: '' },\n    'AJAXオプション設定': {\n        type: 'func',\n        josi: [['に', 'へ', 'と']],\n        pure: true,\n        fn: function (option, sys) {\n            sys.__v0['AJAXオプション'] = option;\n        },\n        return_none: true\n    },\n    'AJAXオプションPOST設定': {\n        type: 'func',\n        josi: [['を', 'で']],\n        pure: true,\n        fn: function (params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            sys.__v0['AJAXオプション'] = options;\n        },\n        return_none: true\n    },\n    'AJAX失敗時': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['AJAX:ONERROR'] = callback;\n        }\n    },\n    'AJAXテキスト取得': {\n        type: 'func',\n        josi: [['から', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.text();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAX_JSON取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const txt = await res.json();\n            return txt;\n        },\n        return_none: false\n    },\n    'AJAXバイナリ取得': {\n        type: 'func',\n        josi: [['から']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            const res = await fetch(url, options);\n            const bin = await res.blob();\n            return bin;\n        },\n        return_none: false\n    },\n    // @GETとPOST\n    'GET送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に']],\n        pure: false,\n        fn: function (callback, url, sys) {\n            sys.__exec('AJAX送信時', [callback, url, sys]);\n        },\n        return_none: true\n    },\n    'POST送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        fn: function (callback, url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTフォーム送信時': {\n        type: 'func',\n        josi: [['の'], ['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (callback, url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                callback(text);\n            }).catch(err => {\n                sys.__v0['AJAX:ONERROR'](err);\n            });\n        }\n    },\n    'POSTデータ生成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (params, sys) {\n            const flist = [];\n            for (const key in params) {\n                const v = params[key];\n                const kv = encodeURIComponent(key) + '=' + encodeURIComponent(v);\n                flist.push(kv);\n            }\n            return flist.join('&');\n        }\n    },\n    'POST送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n                const options = {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    body: bodyData\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    'POSTフォーム送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        asyncFn: true,\n        fn: function (url, params, sys) {\n            return new Promise((resolve, reject) => {\n                const fd = new FormData();\n                for (const key in params) {\n                    fd.set(key, params[key]);\n                }\n                const options = {\n                    method: 'POST',\n                    body: fd\n                };\n                fetch(url, options).then(res => {\n                    return res.text();\n                }).then(text => {\n                    resolve(text);\n                }).catch(err => {\n                    reject(err.message);\n                });\n            });\n        }\n    },\n    // @HTTPとAJAX(保証)\n    'AJAX保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'HTTP保障取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            return sys.__exec('AJAX保障送信', [url, sys]);\n        },\n        return_none: false\n    },\n    'POST保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'POSTフォーム保障送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            return fetch(url, options);\n        },\n        return_none: false\n    },\n    'AJAX内容取得': {\n        type: 'func',\n        josi: [['から'], ['で']],\n        pure: true,\n        fn: function (res, type, sys) {\n            type = type.toString().toUpperCase();\n            if (type === 'TEXT' || type === 'テキスト') {\n                return res.text();\n            }\n            else if (type === 'JSON') {\n                return res.json();\n            }\n            else if (type === 'BLOB') {\n                return res.blob();\n            }\n            else if (type === 'ARRAY' || type === '配列') {\n                return res.arrayBuffer();\n            }\n            else if (type === 'BODY' || type === '本体') {\n                return res.body;\n            }\n            return res.body();\n        },\n        return_none: false\n    },\n    // @Blob\n    'BLOB作成': {\n        type: 'func',\n        josi: [['を', 'から'], ['で']],\n        pure: true,\n        fn: function (data, options) {\n            if (!(data instanceof Array)) {\n                data = [data];\n            }\n            return new Blob(data, options);\n        }\n    },\n    // @HTTPとAJAX(非推奨)\n    'AJAX逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に']],\n        pure: true,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『AJAX逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            let options = sys.__v0['AJAXオプション'];\n            if (options === '') {\n                options = { method: 'GET' };\n            }\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve();\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'HTTP逐次取得': {\n        type: 'func',\n        josi: [['の', 'から', 'を']],\n        pure: false,\n        fn: function (url, sys) {\n            if (!sys.resolve) {\n                throw new Error('『HTTP逐次取得』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.__exec('AJAX逐次送信', [url, sys]);\n        },\n        return_none: true\n    },\n    'POST逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: false,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POST送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const bodyData = sys.__exec('POSTデータ生成', [params, sys]);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: bodyData\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    },\n    'POSTフォーム逐次送信': {\n        type: 'func',\n        josi: [['まで', 'へ', 'に'], ['を']],\n        pure: true,\n        fn: function (url, params, sys) {\n            if (!sys.resolve) {\n                throw new Error('『POSTフォーム逐次送信』は『逐次実行』構文内で利用する必要があります。');\n            }\n            sys.resolveCount++;\n            const resolve = sys.resolve;\n            const reject = sys.reject;\n            const fd = new FormData();\n            for (const key in params) {\n                fd.set(key, params[key]);\n            }\n            const options = {\n                method: 'POST',\n                body: fd\n            };\n            fetch(url, options).then(res => {\n                return res.text();\n            }).then(text => {\n                sys.__v0['対象'] = text;\n                resolve(text);\n            }).catch(err => {\n                reject(err.message);\n            });\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @DOM操作\n    'DOCUMENT': { type: 'const', value: '' },\n    'WINDOW': { type: 'const', value: '' },\n    'NAVIGATOR': { type: 'const', value: '' },\n    'DOM要素ID取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (id) {\n            return document.getElementById(id);\n        }\n    },\n    'DOM要素取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (q) {\n            if (typeof q === 'string') {\n                return document.querySelector(q);\n            }\n            return q;\n        }\n    },\n    'DOM要素全取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (q) {\n            return Array.from(document.querySelectorAll(q));\n        }\n    },\n    'タグ一覧取得': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (tag) {\n            return Array.from(document.getElementsByTagName(tag));\n        }\n    },\n    'DOM子要素取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (pa, q, sys) {\n            pa = sys.__query(pa, 'DOM子要素取得', true);\n            if (!pa.querySelector) {\n                throw new Error('『DOM子要素取得』で親要素がDOMではありません。');\n            }\n            return pa.querySelector(q);\n        }\n    },\n    'DOM子要素全取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: true,\n        fn: function (pa, q, sys) {\n            pa = sys.__query(pa, 'DOM子要素全取得', true);\n            if (!pa.querySelectorAll) {\n                throw new Error('『DOM子要素全取得』で親要素がDOMではありません。');\n            }\n            return Array.from(pa.querySelectorAll(q));\n        }\n    },\n    'DOMイベント設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: false,\n        fn: function (dom, event, funcStr, sys) {\n            dom = sys.__query(dom, 'DOMイベント設定', false);\n            dom[event] = sys.__findVar(funcStr, null);\n        },\n        return_none: true\n    },\n    'DOMテキスト設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, text, sys) {\n            dom = sys.__query(dom, 'DOMテキスト設定', false);\n            const tag = dom.tagName.toUpperCase();\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\n                dom.value = text;\n            }\n            else if (tag === 'SELECT') {\n                for (let i = 0; i < dom.options.length; i++) {\n                    const v = dom.options[i].value;\n                    if (String(v) === text) {\n                        dom.selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            else {\n                dom.innerHTML = text;\n            }\n        },\n        return_none: true\n    },\n    'DOMテキスト取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, 'DOMテキスト取得', true);\n            if (!dom) {\n                return '';\n            }\n            const tag = dom.tagName.toUpperCase();\n            // input or textarea\n            if (tag === 'INPUT' || tag === 'TEXTAREA') {\n                return dom.value;\n            }\n            // select\n            if (tag === 'SELECT') {\n                const idx = dom.selectedIndex;\n                if (idx < 0) {\n                    return null;\n                }\n                return dom.options[idx].value;\n            }\n            return dom.innerHTML;\n        }\n    },\n    'DOM_HTML設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: true,\n        fn: function (dom, text, sys) {\n            dom = sys.__query(dom, 'DOM_HTML設定', false);\n            dom.innerHTML = text;\n        },\n        return_none: true\n    },\n    'DOM_HTML取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, 'DOM_HTML取得', true);\n            if (!dom) {\n                return '';\n            }\n            return dom.innerHTML;\n        }\n    },\n    'テキスト設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: false,\n        fn: function (dom, v, sys) {\n            return sys.__exec('DOMテキスト設定', [dom, v, sys]);\n        }\n    },\n    'テキスト取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: false,\n        fn: function (dom, sys) {\n            return sys.__exec('DOMテキスト取得', [dom, sys]);\n        }\n    },\n    'HTML設定': {\n        type: 'func',\n        josi: [['に', 'の', 'へ'], ['を']],\n        pure: false,\n        fn: function (dom, v, sys) {\n            return sys.__exec('DOM_HTML設定', [dom, v, sys]);\n        }\n    },\n    'HTML取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: false,\n        fn: function (dom, sys) {\n            return sys.__exec('DOM_HTML取得', [dom, sys]);\n        }\n    },\n    'DOM属性設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        uses: ['DOM和属性'],\n        pure: true,\n        fn: function (dom, s, v, sys) {\n            dom = sys.__query(dom, 'DOM属性設定', false);\n            const wa = sys.__v0['DOM和属性'];\n            if (wa[s]) {\n                s = wa[s];\n            }\n            // domのプロパティを確認して存在すればその値を設定する #1392\n            if (s in dom) {\n                dom[s] = v;\n            }\n            else {\n                dom.setAttribute(s, v);\n            }\n        },\n        return_none: true\n    },\n    'DOM属性取得': {\n        type: 'func',\n        josi: [['の', 'から'], ['を']],\n        uses: ['DOM和属性'],\n        pure: true,\n        fn: function (dom, s, sys) {\n            dom = sys.__query(dom, 'DOM属性取得', true);\n            if (!dom) {\n                return '';\n            }\n            const wa = sys.__v0['DOM和属性'];\n            if (wa[s]) {\n                s = wa[s];\n            }\n            // domのプロパティを確認して存在すればその値を取得する #1392\n            if (s in dom) {\n                return dom[s];\n            }\n            return dom.getAttribute(s);\n        }\n    },\n    'DOM和属性': {\n        type: 'const',\n        value: {\n            '幅': 'width',\n            '高さ': 'height',\n            '高': 'height',\n            'タイプ': 'type',\n            'データ': 'data',\n            '名前': 'name',\n            'ID': 'id',\n            '読取専用': 'readOnly',\n            '読み取り専用': 'readOnly',\n            '無効化': 'disabled'\n        }\n    },\n    'DOM和スタイル': {\n        type: 'const',\n        value: {\n            '幅': 'width',\n            '高さ': 'height',\n            '高': 'height',\n            '背景色': 'background-color',\n            '色': 'color',\n            'マージン': 'margin',\n            '余白': 'padding',\n            '文字サイズ': 'font-size',\n            '行揃え': 'text-align',\n            '左': 'left',\n            '右': 'right',\n            '中央': 'center',\n            'ボーダー': 'border',\n            'ボックス表示': 'display',\n            'なし': 'none',\n            'ブロック': 'block',\n            '表示位置': 'float',\n            '重なり': 'z-index',\n            '読取専用': 'readOnly',\n            '読み取り専用': 'readOnly',\n            'readonly': 'readOnly'\n        }\n    },\n    'DOMスタイル設定': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, s, v, sys) {\n            dom = sys.__query(dom, 'DOMスタイル設定', false);\n            const wa = sys.__v0['DOM和スタイル'];\n            if (wa[s] !== undefined) {\n                s = wa[s];\n            }\n            if (wa[v] !== undefined) {\n                v = wa[v];\n            }\n            dom.style[s] = v;\n        },\n        return_none: true\n    },\n    'DOMスタイル一括設定': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, values, sys) {\n            dom = sys.__query(dom, 'DOMスタイル一括設定', false);\n            if (dom instanceof window.HTMLElement) {\n                dom = [dom];\n            }\n            const wa = sys.__v0['DOM和スタイル'];\n            // 列挙したDOM一覧を全てスタイル変更する\n            for (let i = 0; i < dom.length; i++) {\n                const e = dom[i];\n                for (const key in values) {\n                    let s = key;\n                    let v = values[key];\n                    if (wa[s] !== undefined) {\n                        s = wa[s];\n                    }\n                    if (wa[v] !== undefined) {\n                        v = wa[v];\n                    }\n                    e.style[s] = v;\n                }\n            }\n        },\n        return_none: true\n    },\n    'DOMスタイル取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, style, sys) {\n            dom = sys.__query(dom, 'DOMスタイル取得', true);\n            if (!dom) {\n                return '';\n            }\n            const wa = sys.__v0['DOM和スタイル'];\n            if (wa[style]) {\n                style = wa[style];\n            }\n            return dom.style[style];\n        }\n    },\n    'DOMスタイル一括取得': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        uses: ['DOM和スタイル'],\n        pure: true,\n        fn: function (dom, style, sys) {\n            const res = {};\n            dom = sys.__query(dom, 'DOMスタイル一括取得', true);\n            if (!dom) {\n                return res;\n            }\n            if (style instanceof String) {\n                style = [style];\n            }\n            const wa = sys.__v0['DOM和スタイル'];\n            if (style instanceof Array) {\n                style.forEach((key) => {\n                    if (wa[key]) {\n                        key = wa[key];\n                    }\n                    res[key] = dom.style[key];\n                });\n                return res;\n            }\n            if (style instanceof Object) {\n                for (let key in style) {\n                    if (wa[key]) {\n                        key = wa[key];\n                    }\n                    res[key] = dom.style[key];\n                }\n                return res;\n            }\n            return dom.style[style];\n        }\n    },\n    'DOM要素作成': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (tag) {\n            return document.createElement(tag);\n        }\n    },\n    'DOM子要素追加': {\n        type: 'func',\n        josi: [['に', 'へ'], ['を']],\n        pure: true,\n        fn: function (pa, el, sys) {\n            pa = sys.__query(pa, 'DOM子要素追加', false);\n            el = sys.__query(el, 'DOM子要素追加', false);\n            pa.appendChild(el);\n        }\n    },\n    'DOM子要素削除': {\n        type: 'func',\n        josi: [['から'], ['を']],\n        pure: true,\n        fn: function (pa, el, sys) {\n            pa = sys.__query(pa, 'DOM子要素削除', false);\n            el = sys.__query(el, 'DOM子要素削除', false);\n            pa.removeChild(el);\n        }\n    },\n    '注目': {\n        type: 'func',\n        josi: [['を', 'へ', 'に']],\n        pure: true,\n        fn: function (dom, sys) {\n            dom = sys.__query(dom, '注目', true);\n            if (dom && dom.focus) {\n                dom.focus();\n            }\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @DOM操作とイベント\n    '対象イベント': { type: 'const', value: '' },\n    'DOMイベント追加': {\n        type: 'func',\n        josi: [['の'], ['に', 'へ'], ['を']],\n        pure: false,\n        fn: function (dom, event, funcStr, sys) {\n            sys.__addEvent(dom, event, funcStr, null);\n        },\n        return_none: true\n    },\n    'DOMイベント削除': {\n        type: 'func',\n        josi: [['の'], ['から'], ['を']],\n        pure: false,\n        fn: function (dom, event, funcStr, sys) {\n            sys.__removeEvent(dom, event, funcStr);\n        },\n        return_none: true\n    },\n    'DOMイベント発火時': {\n        type: 'func',\n        josi: [['で'], ['の'], ['が']],\n        pure: true,\n        fn: function (callback, dom, event, sys) {\n            sys.__addEvent(dom, event, callback, null);\n        },\n        return_none: true\n    },\n    'DOMイベント処理停止': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (event, sys) {\n            event.preventDefault();\n        },\n        return_none: true\n    },\n    'クリック時': {\n        type: 'func',\n        josi: [['で'], ['を']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'click', func, null);\n        },\n        return_none: true\n    },\n    '読込時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'load', func, null);\n        },\n        return_none: true\n    },\n    'フォーム送信時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'submit', func, null);\n        },\n        return_none: true\n    },\n    '押キー': { type: 'const', value: '' },\n    'キー押時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keydown', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'キー離時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keyup', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'キータイピング時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'keypress', func, sys.__keyHandler);\n        },\n        return_none: true\n    },\n    'マウスX': { type: 'const', value: 0 },\n    'マウスY': { type: 'const', value: 0 },\n    'マウス押時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mousedown', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'マウス移動時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mousemove', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'マウス離時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'mouseup', func, sys.__mouseHandler);\n        },\n        return_none: true\n    },\n    'タッチX': { type: 'const', value: 0 },\n    'タッチY': { type: 'const', value: 0 },\n    'タッチ配列': { type: 'const', value: [] },\n    'タッチイベント計算': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (e, sys) {\n            return sys.__touchHandler(e, sys);\n        }\n    },\n    'タッチ開始時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchstart', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチ時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchmove', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチ終了時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchend', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    'タッチキャンセル時': {\n        type: 'func',\n        josi: [['で'], ['を', 'の']],\n        pure: false,\n        fn: function (func, dom, sys) {\n            sys.__addEvent(dom, 'touchcancel', func, sys.__touchHandler);\n        },\n        return_none: true\n    },\n    '画面更新時実行': {\n        type: 'func',\n        josi: [['を']],\n        pure: false,\n        fn: function (func, sys) {\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\n            if (!func) {\n                throw new Error('『画面更新時実行』で関数の取得に失敗しました。');\n            }\n            sys.__requestAnimationFrameLastId = window.requestAnimationFrame(func);\n            return sys.__requestAnimationFrameLastId;\n        }\n    },\n    '画面更新処理取消': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: false,\n        fn: function (id, sys) {\n            window.cancelAnimationFrame(id);\n            if (sys.__requestAnimationFrameLastId === id) {\n                sys.__requestAnimationFrameLastId = 0;\n            }\n        },\n        return_none: true\n    }\n};\n","export default {\n    // @DOM部品操作\n    'DOM親要素': { type: 'const', value: '' },\n    'DOM部品個数': { type: 'const', value: 0 },\n    'DOM部品オプション': { type: 'const', value: { '自動改行': false, 'テーブル背景色': ['#AA4040', '#ffffff', '#fff0f0'] } },\n    'DOM親要素設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: false,\n        fn: function (el, sys) {\n            if (typeof el === 'string') {\n                el = document.querySelector(el) || document.getElementById(el);\n            }\n            sys.__v0['DOM親要素'] = el;\n            return el;\n        }\n    },\n    'DOM親部品設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: false,\n        fn: function (el, sys) {\n            return sys.__exec('DOM親要素設定', [el, sys]);\n        }\n    },\n    'DOMスキン': { type: 'const', value: '' },\n    'DOMスキン辞書': { type: 'const', value: {} },\n    'DOMスキン設定': {\n        type: 'func',\n        josi: [['を', 'に', 'の']],\n        pure: false,\n        fn: function (skin, sys) {\n            sys.__v0['DOMスキン'] = skin;\n        },\n        return_none: true\n    },\n    'DOM部品作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (elm, sys) {\n            const parent = sys.__v0['DOM親要素'];\n            const btn = (typeof (elm) === 'string') ? document.createElement(elm) : elm;\n            btn.id = 'nadesi-dom-' + sys.__v0['DOM部品個数'];\n            // スキン適用\n            const func = sys.__v0['DOMスキン辞書'][sys.__v0['DOMスキン']];\n            if (typeof (func) === 'function') {\n                func(elm, btn, sys);\n            }\n            // DOM追加\n            parent.appendChild(btn);\n            sys.__v0['DOM部品個数']++;\n            // オプションを適用\n            const opt = sys.__v0['DOM部品オプション'];\n            if (opt['自動改行']) {\n                parent.appendChild(document.createElement('br'));\n            }\n            return btn;\n        }\n    },\n    'ボタン作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (label, sys) {\n            const btn = sys.__exec('DOM部品作成', ['button', sys]);\n            btn.innerHTML = label;\n            return btn;\n        }\n    },\n    'エディタ作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (text, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'text';\n            inp.value = text;\n            return inp;\n        }\n    },\n    'テキストエリア作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (text, sys) {\n            const te = sys.__exec('DOM部品作成', ['textarea', sys]);\n            te.value = text;\n            return te;\n        }\n    },\n    'ラベル作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (text, sys) {\n            const lbl = sys.__exec('DOM部品作成', ['span', sys]);\n            lbl.innerHTML = text;\n            return lbl;\n        }\n    },\n    'キャンバス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (size, sys) {\n            const cv = sys.__exec('DOM部品作成', ['canvas', sys]);\n            cv.width = size[0];\n            cv.height = size[1];\n            cv.style.width = size[0];\n            cv.style.height = size[1];\n            // 描画中キャンバスを移動する\n            sys.__exec('描画開始', [cv, sys]);\n            return cv;\n        }\n    },\n    '画像作成': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: false,\n        fn: function (url, sys) {\n            const img = sys.__exec('DOM部品作成', ['img', sys]);\n            img.src = url;\n            return img;\n        }\n    },\n    '改行作成': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            const br = sys.__exec('DOM部品作成', ['br', sys]);\n            return br;\n        }\n    },\n    'チェックボックス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (text, sys) {\n            // チェックボックスは、<span><input><label></span>で成り立つように構築\n            const span = document.createElement('span');\n            const inp = document.createElement('input');\n            inp.type = 'checkbox';\n            inp.id = 'nadesi-dom-' + sys.__v0['DOM部品個数'];\n            sys.__v0['DOM部品個数']++;\n            const label = document.createElement('label');\n            label.innerHTML = text;\n            label.htmlFor = inp.id;\n            span.appendChild(inp);\n            span.appendChild(label);\n            // 親部品に追加\n            sys.__exec('DOM部品作成', [span, sys]);\n            return inp;\n        }\n    },\n    'セレクトボックス作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (options, sys) {\n            const dom = document.createElement('select');\n            for (let i = 0; i < options.length; i++) {\n                const item = document.createElement('option');\n                item.value = options[i];\n                item.appendChild(document.createTextNode(options[i]));\n                dom.appendChild(item);\n            }\n            // 親部品に追加\n            sys.__exec('DOM部品作成', [dom, sys]);\n            return dom;\n        }\n    },\n    'セレクトボックスアイテム設定': {\n        type: 'func',\n        josi: [['を'], ['へ', 'に']],\n        pure: false,\n        fn: function (options, dom, sys) {\n            if (typeof dom === 'string') {\n                dom = document.querySelector(dom);\n            }\n            // 既存のoptionsをクリア\n            dom.options.length = 0;\n            // アイテムを追加\n            for (let i = 0; i < options.length; i++) {\n                const item = document.createElement('option');\n                item.value = options[i];\n                item.appendChild(document.createTextNode(options[i]));\n                dom.appendChild(item);\n            }\n        },\n        return_none: true\n    },\n    '色選択ボックス作成': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'color';\n            return inp;\n        }\n    },\n    '日付選択ボックス作成': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'date';\n            return inp;\n        }\n    },\n    'パスワード入力エディタ作成': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: false,\n        fn: function (s, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'password';\n            inp.value = s;\n            return inp;\n        }\n    },\n    '値指定バー作成': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: false,\n        fn: function (range, sys) {\n            if (!(range instanceof Array) || range.length < 2) {\n                range = [0, 100, 50];\n            }\n            if (range.length <= 2) { // 3つ目を省略したとき\n                range.push(Math.floor((range[1] - range[0]) / 2));\n            }\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'range';\n            inp.min = range[0];\n            inp.max = range[1];\n            inp.value = range[2];\n            return inp;\n        }\n    },\n    '送信ボタン作成': {\n        type: 'func',\n        josi: [['の']],\n        pure: false,\n        fn: function (label, sys) {\n            const inp = sys.__exec('DOM部品作成', ['input', sys]);\n            inp.type = 'submit';\n            inp.value = label;\n            return inp;\n        }\n    },\n    'フォーム作成': {\n        type: 'func',\n        josi: [['で', 'の'], ['を']],\n        pure: false,\n        fn: function (obj, s, sys) {\n            const frm = sys.__exec('DOM部品作成', ['form', sys]);\n            // 可能ならformにobjの値を移し替える\n            if (obj instanceof Object) {\n                for (const key in obj) {\n                    if (frm[key]) {\n                        frm[key] = obj[key];\n                    }\n                }\n            }\n            // 入力項目をtableで作る\n            const rows = s.split('\\n');\n            const table = document.createElement('table');\n            for (const rowIndex in rows) {\n                let row = '' + (rows[rowIndex]);\n                if (row === '') {\n                    continue;\n                }\n                if (row.indexOf('=') < 0) {\n                    row += '=';\n                }\n                const cols = row.split('=');\n                const key = cols[0];\n                const val = cols[1];\n                // key\n                const th = document.createElement('th');\n                th.innerHTML = sys.__tohtmlQ(key);\n                // val\n                const td = document.createElement('td');\n                if (val.substring(0, 2) === '?(') {\n                    // select box\n                    const it = val.substring(2) + ')';\n                    const ita = it.split(')');\n                    const its = ita[0];\n                    const def = ita[1];\n                    const items = its.split('|');\n                    const select = document.createElement('select');\n                    select.name = key;\n                    for (const it of items) {\n                        const option = document.createElement('option');\n                        option.value = it;\n                        option.text = it;\n                        select.appendChild(option);\n                    }\n                    const idx = items.indexOf(def);\n                    if (idx >= 0) {\n                        select.selectedIndex = idx;\n                    }\n                    td.appendChild(select);\n                }\n                else {\n                    // input element\n                    const inp = document.createElement('input');\n                    td.appendChild(inp);\n                    inp.id = 'nako3form_' + key;\n                    if (val === '?送信' || val === '?submit') {\n                        inp.type = 'submit';\n                        inp.value = val.substring(1);\n                        if (key !== '') {\n                            inp.name = key;\n                        }\n                    }\n                    else if (val.substring(0, 2) === '?c') {\n                        inp.type = 'color';\n                        inp.value = val.substring(2);\n                        inp.name = key;\n                    }\n                    else {\n                        inp.type = 'text';\n                        inp.value = val;\n                        inp.name = key;\n                    }\n                }\n                const tr = document.createElement('tr');\n                tr.appendChild(th);\n                tr.appendChild(td);\n                table.appendChild(tr);\n            }\n            frm.appendChild(table);\n            return frm;\n        }\n    },\n    'フォーム入力一括取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (dom) {\n            if (typeof (dom) === 'string') {\n                dom = document.querySelector(dom);\n            }\n            const res = {};\n            const getChildren = (pa) => {\n                if (!pa || !pa.childNodes) {\n                    return;\n                }\n                for (let i = 0; i < pa.childNodes.length; i++) {\n                    const el = pa.childNodes[i];\n                    if (!el.tagName) {\n                        return;\n                    }\n                    const tag = el.tagName.toLowerCase();\n                    if (tag === 'input') {\n                        if (el.type === 'checkbox') {\n                            res[el.name] = el.checked ? el.value : '';\n                            continue;\n                        }\n                        res[el.name] = el.value;\n                        continue;\n                    }\n                    else if (tag === 'textarea') {\n                        res[el.name] = el.value;\n                    }\n                    else if (tag === 'select') {\n                        if (el.selectedIndex >= 0) {\n                            res[el.name] = el.options[el.selectedIndex].value;\n                        }\n                        else {\n                            res[el.name] = '';\n                        }\n                    }\n                    getChildren(el);\n                }\n            };\n            getChildren(dom);\n            return res;\n        }\n    },\n    'テーブル作成': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: false,\n        fn: function (aa, sys) {\n            if (typeof (aa) === 'string') {\n                const rr = [];\n                const rows = aa.split('\\n');\n                for (const row of rows) {\n                    rr.push(row.split(','));\n                }\n                aa = rr;\n            }\n            const bgColor = JSON.parse(JSON.stringify(sys.__v0['DOM部品オプション']['テーブル背景色']));\n            for (let i = 0; i < 3; i++) {\n                bgColor.push('');\n            }\n            const bgHead = bgColor.shift();\n            const table = sys.__exec('DOM部品作成', ['table', sys]);\n            for (let i = 0; i < aa.length; i++) {\n                const rowNo = i;\n                const row = aa[rowNo];\n                const tr = document.createElement('tr');\n                for (let col of row) {\n                    col = '' + col;\n                    const td = document.createElement((rowNo === 0) ? 'th' : 'td');\n                    td.innerHTML = sys.__tohtml(col);\n                    // 色指定\n                    if (bgHead !== '') {\n                        td.style.backgroundColor = (rowNo === 0) ? bgHead : bgColor[rowNo % 2];\n                        td.style.color = (rowNo === 0) ? 'white' : 'black';\n                    }\n                    if (col.match(/^(\\+|-)?\\d+(\\.\\d+)?$/)) { // number?\n                        td.style.textAlign = 'right';\n                    }\n                    tr.appendChild(td);\n                }\n                table.appendChild(tr);\n            }\n            return table;\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @HTML操作\n    'HTML変換': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (text) {\n            return String(text)\n                .replace(/&/g, '&amp;')\n                .replace(/>/g, '&gt;')\n                .replace(/</g, '&lt;');\n        }\n    },\n    // @クリップボード\n    'クリップボード設定': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        asyncFn: true,\n        fn: async function (text) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                await navigator.clipboard.writeText(text);\n                return;\n            }\n            // Clipboard APIをサポートしていない場合\n            const tmp = document.createElement('div');\n            const pre = document.createElement('pre');\n            pre.style.webkitUserSelect = 'auto';\n            pre.style.userSelect = 'auto';\n            tmp.appendChild(pre).textContent = text;\n            // 画面外へ表示する\n            tmp.style.position = 'fixed';\n            tmp.right = '200%';\n            document.body.appendChild(tmp);\n            document.getSelection().selectAllChildren(tmp);\n            document.execCommand('copy');\n            document.body.removeChild(tmp);\n        },\n        return_none: true\n    },\n    'クリップボード取得時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (f, sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                if (typeof (f) === 'string') {\n                    f = sys.__findFunc(f, 'クリップボード取得時');\n                }\n                const pm = navigator.clipboard.readText();\n                pm.then(text => {\n                    sys.__v0['対象'] = text;\n                    f(sys);\n                });\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    },\n    'クリップボード取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: async function (sys) {\n            // Clipboard APIをサポートしているか\n            if (navigator.clipboard) {\n                const result = await navigator.clipboard.readText();\n                return result;\n            }\n            else {\n                throw new Error('Clipbard APIが利用できません。');\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @ローカルストレージ\n    '保存': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: false,\n        fn: function (v, key, sys) {\n            sys.__exec('ローカルストレージ保存', [v, key, sys]);\n        },\n        return_none: true\n    },\n    '開': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: false,\n        fn: function (key, sys) {\n            return sys.__exec('ローカルストレージ読', [key, sys]);\n        },\n        return_none: false\n    },\n    '読': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: false,\n        fn: function (key, sys) {\n            return sys.__exec('ローカルストレージ読', [key, sys]);\n        },\n        return_none: false\n    },\n    '存在': {\n        type: 'func',\n        josi: [['が']],\n        pure: true,\n        fn: function (key) {\n            const s = window.localStorage.getItem(key);\n            return (s !== null);\n        },\n        return_none: false\n    },\n    'ローカルストレージ保存': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (v, key, sys) {\n            let body = v;\n            if (sys.__v0['保存オプション'] && (sys.__v0['保存オプション'].indexOf('json') >= 0)) {\n                body = JSON.stringify(body);\n            }\n            window.localStorage[key] = body;\n        },\n        return_none: true\n    },\n    'ローカルストレージ読': {\n        type: 'func',\n        josi: [['を', 'から', 'の']],\n        pure: true,\n        fn: function (key, sys) {\n            const v = window.localStorage[key];\n            if (sys.__v0['保存オプション'] && (sys.__v0['保存オプション'].indexOf('json') >= 0)) {\n                try {\n                    return JSON.parse(v);\n                }\n                catch (e) {\n                    console.log('ローカルストレージ『' + key + '』の読み込みに失敗');\n                }\n            }\n            return v;\n        },\n        return_none: false\n    },\n    'ローカルストレージキー列挙': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const keys = [];\n            for (const key in window.localStorage) {\n                keys.push(key);\n            }\n            return keys;\n        },\n        return_none: false\n    },\n    'ローカルストレージキー削除': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (key) {\n            window.localStorage.removeItem(key);\n        },\n        return_none: true\n    },\n    'ローカルストレージ全削除': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            window.localStorage.clear();\n        },\n        return_none: true\n    },\n    'ローカルストレージ有効確認': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function () {\n            return (typeof window.localStorage !== 'undefined');\n        },\n        return_none: false\n    },\n    '保存オプション': { type: 'const', value: 'json' },\n    '保存オプション設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            v = v.toUpperCase(v);\n            sys.__v0['保存オプション'] = v;\n        },\n        return_none: true\n    }\n};\n","/* eslint-disable quote-props */\nconst errMsgCanvasInit = '描画を行うためには、HTML内にcanvasを配置し、idを振って『描画開始』命令に指定します。';\nexport default {\n    // @描画\n    '描画開始': {\n        type: 'func',\n        josi: [['の', 'へ', 'で']],\n        pure: true,\n        fn: function (cv, sys) {\n            if (typeof cv === 'string') {\n                cv = document.querySelector(cv) || document.getElementById(cv);\n            }\n            if (!cv) {\n                throw new Error('『描画開始』でCanvasを取得できませんでした。');\n            }\n            sys.__canvas = cv;\n            sys.__ctx = cv.getContext('2d');\n            sys.__fillStyle = 'black';\n            sys.__strokeStyle = 'black';\n            sys.__v0['描画中キャンバス'] = cv;\n            sys.__v0['描画中コンテキスト'] = sys.__ctx;\n        },\n        return_none: true\n    },\n    '描画中キャンバス': { type: 'const', value: null },\n    '描画中コンテキスト': { type: 'const', value: null },\n    'キャンバス状態保存': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.save();\n        },\n        return_none: true\n    },\n    'キャンバス状態復元': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.restore();\n        },\n        return_none: true\n    },\n    '線色設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__strokeStyle = v;\n            if (v !== '') {\n                sys.__ctx.strokeStyle = v;\n            }\n        },\n        return_none: true\n    },\n    '塗色設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__fillStyle = v;\n            if (v !== '') {\n                sys.__ctx.fillStyle = v;\n            }\n        },\n        return_none: true\n    },\n    '線描画': {\n        type: 'func',\n        josi: [['から'], ['へ', 'まで']],\n        pure: true,\n        fn: function (a, b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.moveTo(a[0], a[1]);\n            sys.__ctx.lineTo(b[0], b[1]);\n            sys.__ctx.stroke();\n        },\n        return_none: true\n    },\n    '線太設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.lineWidth = v;\n        },\n        return_none: true\n    },\n    '四角描画': {\n        type: 'func',\n        josi: [['の', 'へ', 'に']],\n        pure: true,\n        fn: function (b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.rect(b[0], b[1], b[2], b[3]);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '全描画クリア': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.clearRect(0, 0, sys.__canvas.width, sys.__canvas.height);\n        },\n        return_none: true\n    },\n    '描画クリア': {\n        type: 'func',\n        josi: [['の', 'へ', 'に']],\n        pure: true,\n        fn: function (b, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (!(b instanceof Array)) {\n                b = [];\n            }\n            if (b.length === 0) {\n                b = [0, 0, sys.__canvas.width, sys.__canvas.height];\n            }\n            else if (b.length <= 2) {\n                b.unshift(0);\n                b.unshift(0);\n            }\n            sys.__ctx.clearRect(b[0], b[1], b[2], b[3]);\n        },\n        return_none: true\n    },\n    '円描画': {\n        type: 'func',\n        josi: [['へ', 'に'], ['の']],\n        pure: true,\n        fn: function (xy, r, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.arc(xy[0], xy[1], r, 0, 2 * Math.PI, false);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '楕円描画': {\n        type: 'func',\n        josi: [['へ', 'に', 'の']],\n        pure: true,\n        fn: function (args, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (!args) {\n                throw new Error('楕円描画の引数配列が無効です');\n            }\n            if (args.length < 4) {\n                throw new Error('楕円描画の引数配列が不足しています');\n            }\n            if (args.length < 7) {\n                if (!args[4]) {\n                    args[4] = 0;\n                }\n                if (!args[5]) {\n                    args[5] = 0;\n                }\n                if (!args[6]) {\n                    args[6] = Math.PI * 2;\n                }\n                if (!args[7]) {\n                    args[7] = true;\n                }\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            sys.__ctx.ellipse.apply(sys.__ctx, args);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '多角形描画': {\n        type: 'func',\n        josi: [['で', 'の', 'を']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            if (sys.__fillStyle === '' && sys.__strokeStyle === '') {\n                return;\n            }\n            sys.__ctx.beginPath();\n            const p = a[0];\n            sys.__ctx.moveTo(p[0], p[1]);\n            for (let i = 1; i < a.length; i++) {\n                const t = a[i];\n                sys.__ctx.lineTo(t[0], t[1]);\n            }\n            sys.__ctx.lineTo(p[0], p[1]);\n            if (sys.__fillStyle !== '') {\n                sys.__ctx.fill();\n            }\n            if (sys.__strokeStyle !== '') {\n                sys.__ctx.stroke();\n            }\n        },\n        return_none: true\n    },\n    '画像読': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            return img;\n        }\n    },\n    '画像読待': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        asyncFn: true,\n        fn: function (url) {\n            return new Promise((resolve, reject) => {\n                const img = new window.Image();\n                img.src = url;\n                img.crossOrigin = 'Anonymous';\n                img.onload = () => { resolve(img); };\n                img.onerror = () => {\n                    reject(new Error(`『画像読待』で読込みエラー。URL=『${url}』`));\n                };\n            });\n        }\n    },\n    '画像逐次読': {\n        type: 'func',\n        josi: [['の', 'を']],\n        pure: true,\n        fn: function (url, sys) {\n            if (sys.resolve === undefined) {\n                throw new Error('『画像逐次読』は『逐次実行』構文で使ってください。');\n            }\n            sys.resolveCount++;\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            img.onload = () => {\n                sys.__v0['対象'] = img;\n                sys.resolve();\n            };\n            img.onerror = () => {\n                sys.__v0['対象'] = '';\n                sys.reject();\n            };\n            return img;\n        }\n    },\n    '画像読時': {\n        type: 'func',\n        josi: [['で'], ['の', 'を']],\n        pure: true,\n        fn: function (f, url, sys) {\n            // 関数オブジェクトを得る\n            const func = sys.__findVar(f, null); // 文字列指定なら関数に変換\n            // 画像を読む\n            const img = new window.Image();\n            img.src = url;\n            img.crossOrigin = 'Anonymous';\n            img.onload = () => {\n                sys.__v0['対象'] = img;\n                func(sys);\n            };\n            img.onerror = () => {\n                sys.__v0['対象'] = '';\n                func(sys);\n            };\n        },\n        return_none: true\n    },\n    '画像描画': {\n        type: 'func',\n        josi: [['の', 'を'], ['へ', 'に']],\n        pure: true,\n        fn: function (img, xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            const drawFunc = (im, ctx) => {\n                if (xy.length === 2) {\n                    ctx.drawImage(im, xy[0], xy[1]);\n                }\n                else if (xy.length === 4) {\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3]);\n                }\n                else if (xy.length === 8) {\n                    ctx.drawImage(im, xy[0], xy[1], xy[2], xy[3], xy[4], xy[5], xy[6], xy[7]);\n                }\n                else {\n                    throw new Error('『画像描画』の第二引数の配列要素は2,4,8個のいずれかです。');\n                }\n            };\n            if (typeof img === 'string') {\n                const image = new window.Image();\n                image.src = img;\n                image.crossOrigin = 'Anonymous';\n                image.onload = () => {\n                    drawFunc(image, sys.__ctx);\n                };\n                return image;\n            }\n            else {\n                drawFunc(img, sys.__ctx);\n                return img;\n            }\n        },\n        return_none: false\n    },\n    '画像部分描画': {\n        type: 'func',\n        josi: [['の'], ['を', 'から'], ['へ', 'に']],\n        pure: true,\n        fn: function (img, sxy, dxy, sys) {\n            const errArgLen = '『画像部分描画』に使える引数は画像と、描画する座標へ2つか、' +\n                '描画する座標とその位置の4つか、使用する座標と使用する位置と描画する座標と大きさの8つだけです。';\n            if (img && sxy) {\n                if (!Array.isArray(sxy) && Array.isArray(img)) { // 逆になっていれば入れ替える\n                    // eslint-disable-next-line no-proto\n                    if (typeof sxy === 'string' || String(sxy.__proto__) === '[object HTMLImageElement]') {\n                        const sw = img;\n                        img = sxy;\n                        sxy = sw;\n                    }\n                }\n            }\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            const drawFunc = (im, ctx) => {\n                if (!dxy) {\n                    if (!sxy) {\n                        ctx.drawImage(im);\n                    }\n                    else if (sxy.length >= 2) { // もしsxyがあるのにdxyがなかったらdxyを代わりにする\n                        dxy = sxy;\n                        sxy = undefined;\n                    }\n                }\n                if (dxy.length === 2) {\n                    ctx.drawImage(im, dxy[0], dxy[1]);\n                }\n                else if (dxy.length === 4) {\n                    if (!sxy) {\n                        ctx.drawImage(im, dxy[0], dxy[1], dxy[2], dxy[3]);\n                    }\n                    else if (sxy.length === 4) {\n                        ctx.drawImage(im, sxy[0], sxy[1], sxy[2], sxy[3], dxy[0], dxy[1], dxy[2], dxy[3]);\n                    }\n                    else {\n                        throw new Error(errArgLen);\n                    }\n                }\n                else {\n                    throw new Error(errArgLen);\n                }\n            };\n            if (typeof img === 'string') {\n                const image = new window.Image();\n                image.src = img;\n                image.crossOrigin = 'Anonymous';\n                image.onload = () => {\n                    drawFunc(image, sys.__ctx);\n                };\n                return image;\n            }\n            else {\n                drawFunc(img, sys.__ctx);\n                return img;\n            }\n        },\n        return_none: false\n    },\n    '描画フォント設定': {\n        type: 'func',\n        josi: [['を', 'の', 'で', 'に']],\n        pure: true,\n        fn: function (n, sys) {\n            // 数値だけならフォントサイズのみの指定\n            if (typeof n === 'number') {\n                n = n + 'px sans-serif';\n            }\n            // ピクセル数のみの指定なら適当にフォントを足す\n            if (/^[0-9]+(px|em)$/.test(n)) {\n                n = n + ' sans-serif';\n            }\n            sys.__ctx.font = n;\n        },\n        return_none: true\n    },\n    '文字描画': {\n        type: 'func',\n        josi: [['へ', 'に'], ['の', 'を']],\n        pure: true,\n        fn: function (xy, s, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.fillText(s, xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '文字描画幅取得': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (s, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            return sys.__ctx.measureText(s);\n        },\n        return_none: true\n    },\n    '描画起点設定': {\n        type: 'func',\n        josi: [['へ', 'に']],\n        pure: true,\n        fn: function (xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.translate(xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '描画回転': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.rotate(a * Math.PI / 180);\n        },\n        return_none: true\n    },\n    '描画拡大': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (xy, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.scale(xy[0], xy[1]);\n        },\n        return_none: true\n    },\n    '描画変換マトリクス設定': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.setTransform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\n        },\n        return_none: true\n    },\n    '描画変換マトリクス追加': {\n        type: 'func',\n        josi: [['だけ', 'に', 'へ']],\n        pure: true,\n        fn: function (a, sys) {\n            if (!sys.__ctx) {\n                throw new Error(errMsgCanvasInit);\n            }\n            sys.__ctx.transform(a[0], a[1], a[2], a[3], a[4], a[5], a[6]);\n        },\n        return_none: true\n    },\n    '描画データURL変換': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const cv = sys.__v0['描画中キャンバス'];\n            const url = cv.toDataURL('image/png');\n            return url;\n        }\n    },\n    '描画データBLOB変換': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        asyncFn: true,\n        fn: function (sys) {\n            return new Promise((resolve, reject) => {\n                const cv = sys.__v0['描画中キャンバス'];\n                cv.toBlob((result) => { resolve(result); }, 'image/png');\n            });\n        }\n    },\n    '描画ダウンロードリンク作成': {\n        type: 'func',\n        josi: [['へ', 'に']],\n        pure: true,\n        fn: function (dom, sys) {\n            if (typeof dom === 'string') {\n                dom = document.querySelector(dom);\n            }\n            if (!dom) {\n                throw new Error('『描画ダウンロードリンク作成』でDOMが見当たりません。');\n            }\n            const cv = sys.__v0['描画中キャンバス'];\n            if (!cv) {\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\n            }\n            dom.href = cv.toDataURL('image/png');\n            dom.download = 'canvas.png';\n        },\n        return_none: true\n    },\n    '描画ダウンロード': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            const cv = sys.__v0['描画中キャンバス'];\n            if (!cv) {\n                throw new Error('『描画ダウンロード』で描画中キャンバスが設定されていません。');\n            }\n            const a = document.createElement('a');\n            a.href = cv.toDataURL('image/png');\n            a.download = 'canvas.png';\n            a.click();\n            return true;\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @位置情報\n    '位置情報取得時': {\n        type: 'func',\n        josi: [['の', 'に', 'へ']],\n        pure: false,\n        fn: function (func, sys) {\n            let cb = func;\n            if (typeof cb === 'string') {\n                cb = sys.__findVar(cb);\n            }\n            if (!('geolocation' in navigator)) {\n                throw new Error('関数『位置情報取得時』は使えません。');\n            }\n            navigator.geolocation.getCurrentPosition((position) => {\n                sys.__v0['対象'] = [\n                    position.coords.latitude,\n                    position.coords.longitude\n                ];\n                cb(position);\n            });\n        },\n        return_none: true\n    },\n    '位置情報監視時': {\n        type: 'func',\n        josi: [['の', 'に', 'へ']],\n        pure: false,\n        fn: function (func, sys) {\n            let cb = func;\n            if (typeof cb === 'string') {\n                cb = sys.__findVar(cb);\n            }\n            if (!('geolocation' in navigator)) {\n                throw new Error('関数『位置情報監視時』は使えません。');\n            }\n            return navigator.geolocation.watchPosition((position) => {\n                sys.__v0['対象'] = [\n                    position.coords.latitude,\n                    position.coords.longitude\n                ];\n                cb(position);\n            });\n        },\n        return_none: false\n    },\n    '位置情報監視停止': {\n        type: 'func',\n        josi: [['の']],\n        pure: true,\n        fn: function (wid, sys) {\n            navigator.geolocation.clearWatch(wid);\n        },\n        return_none: true\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @音声合成\n    '話': {\n        type: 'func',\n        josi: [['と', 'を', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n            window.speechSynthesis.speak(msg);\n            console.log('#話す:', s);\n            return s;\n        }\n    },\n    '話終': {\n        type: 'func',\n        josi: [['と', 'を', 'の']],\n        pure: true,\n        asyncFn: true,\n        fn: function (s, sys) {\n            return new Promise((resolve, reject) => {\n                try {\n                    const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n                    msg.onend = () => { resolve(); };\n                    window.speechSynthesis.speak(msg);\n                    console.log('#話す:', s);\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        }\n    },\n    '話終時': {\n        type: 'func',\n        josi: [['で'], ['と', 'を', 'の']],\n        pure: true,\n        fn: function (callback, s, sys) {\n            const msg = sys.__exec('音声合成発話オブジェクト取得', [s, sys]);\n            msg.onend = (e) => {\n                console.log('#話終時');\n                sys.__v0['対象イベント'] = e;\n                callback(sys);\n            };\n            window.speechSynthesis.speak(msg);\n            console.log('#話す:', s);\n            return s;\n        }\n    },\n    '音声合成発話オブジェクト取得': {\n        type: 'func',\n        josi: [['の', 'で']],\n        pure: true,\n        fn: function (s, sys) {\n            // 話者の特定\n            let voice = sys.__v0['話:話者'];\n            if (!voice) {\n                voice = sys.__exec('話者設定', ['ja', sys]);\n            }\n            // インスタンス作成\n            const msg = new SpeechSynthesisUtterance(s);\n            msg.voice = voice;\n            if (voice) {\n                msg.lang = voice.lang;\n            } // 必ず話者の特定に成功している訳ではない\n            msg.rate = sys.__v0['話者速度'];\n            msg.pitch = sys.__v0['話者声高'];\n            msg.volume = sys.__v0['話者音量'];\n            return msg;\n        }\n    },\n    '話者一覧取得': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            // 対応している？\n            if (!('SpeechSynthesisUtterance' in window)) {\n                throw new Error('音声合成APIに対応していません');\n            }\n            return window.speechSynthesis.getVoices();\n        }\n    },\n    '話者設定': {\n        type: 'func',\n        josi: [['に', 'へ']],\n        pure: true,\n        fn: function (v, sys) {\n            // 対応している？\n            if (!('SpeechSynthesisUtterance' in window)) {\n                throw new Error('音声合成APIに対応していません');\n            }\n            // 文字列で値を指定\n            if (typeof v === 'string') {\n                // 話者を特定する\n                const voices = window.speechSynthesis.getVoices();\n                for (const i of voices) {\n                    if (i.lang.indexOf(v) >= 0 || i.name === v) {\n                        const msg = new SpeechSynthesisUtterance();\n                        msg.voice = i;\n                        msg.lang = i.lang;\n                        sys.__v0['話:話者'] = i;\n                        console.log('#話者:', i.name);\n                        return i;\n                    }\n                }\n            }\n            // 話者一覧取得で得たオブジェクトを直接指定した場合\n            if (typeof v === 'object') {\n                sys.__v0['話:話者'] = v;\n                return v;\n            }\n            return undefined;\n        }\n    },\n    '話者速度': { type: 'const', value: 1.0 },\n    '話者声高': { type: 'const', value: 1.0 },\n    '話者音量': { type: 'const', value: 1.0 },\n    '話者詳細設定': {\n        type: 'func',\n        josi: [['で', 'に', 'へ']],\n        pure: true,\n        fn: function (obj, sys) {\n            const changeFunc = (key, v) => {\n                if (key === '速度') {\n                    sys.__v0['話者速度'] = v;\n                }\n                if (key === '声高' || key === 'ピッチ') {\n                    sys.__v0['話者声高'] = v;\n                }\n                if (key === '音量') {\n                    sys.__v0['話者音量'] = v;\n                }\n            };\n            // 一括変更\n            for (const key in obj) {\n                const v = obj[key];\n                changeFunc(key, v);\n            }\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @WebSocket\n    'WS接続完了時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONOPEN'] = callback;\n        },\n        return_none: true\n    },\n    'WS受信時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONMESSAGE'] = callback;\n        },\n        return_none: true\n    },\n    'WSエラー発生時': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (callback, sys) {\n            sys.__v0['WS:ONERROR'] = callback;\n        },\n        return_none: true\n    },\n    'WS接続': {\n        type: 'func',\n        josi: [['に', 'へ', 'の']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = new WebSocket(s);\n            ws.onopen = () => {\n                const cbOpen = sys.__v0['WS:ONOPEN'];\n                if (cbOpen) {\n                    cbOpen(sys);\n                }\n            };\n            ws.onerror = (err) => {\n                const cbError = sys.__v0['WS:ONERROR'];\n                if (cbError) {\n                    cbError(err, sys);\n                }\n                console.log('WSエラー', err);\n            };\n            ws.onmessage = (e) => {\n                sys.__v0['対象'] = e.data;\n                const cbMsg = sys.__v0['WS:ONMESSAGE'];\n                if (cbMsg) {\n                    cbMsg(sys);\n                }\n            };\n            sys.__v0['WS:SOCKET'] = ws;\n            return ws;\n        }\n    },\n    'WS送信': {\n        type: 'func',\n        josi: [['を', 'と']],\n        pure: true,\n        fn: function (s, sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.send(s);\n        }\n    },\n    'WS切断': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            const ws = sys.__v0['WS:SOCKET'];\n            ws.close();\n        }\n    }\n};\n","/* eslint-disable quote-props */\nexport default {\n    // @オーディオ\n    'オーディオ開': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (url, sys) {\n            const a = new Audio();\n            a.src = url;\n            return a;\n        },\n        return_none: false\n    },\n    'オーディオ再生': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.loop = false;\n            obj.play();\n        },\n        return_none: true\n    },\n    'オーディオループ再生': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.loop = true;\n            obj.play();\n        },\n        return_none: true\n    },\n    'オーディオ停止': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.pause();\n            obj.currentTime = 0; // 暫定\n            // オーディオ停止で再生位置が0に戻らない問題(#715)\n            setTimeout(() => {\n                obj.currentTime = 0; // しっかりと設定\n            }, 10);\n        },\n        return_none: true\n    },\n    'オーディオ一時停止': {\n        type: 'func',\n        josi: [['を']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ一時停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.pause();\n        },\n        return_none: true\n    },\n    'オーディオ音量取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.volume;\n        }\n    },\n    'オーディオ音量設定': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (obj, v, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.volume = v;\n        },\n        return_none: true\n    },\n    'オーディオ長取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ長取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.duration;\n        }\n    },\n    'オーディオ再生位置取得': {\n        type: 'func',\n        josi: [['の', 'から']],\n        pure: true,\n        fn: function (obj, sys) {\n            if (!obj) {\n                throw new Error('オーディオ再生位置取得する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            return obj.currentTime;\n        }\n    },\n    'オーディオ再生位置設定': {\n        type: 'func',\n        josi: [['を'], ['に', 'へ']],\n        pure: true,\n        fn: function (obj, v, sys) {\n            if (!obj) {\n                throw new Error('オーディオ停止する前に、オーディオ開くで音声ファイルを読み込んでください');\n            }\n            obj.currentTime = v;\n        },\n        return_none: true\n    }\n};\n","// plugin_browser\n// @ts-nocheck\nimport PartBrowserColor from './plugin_browser_color.mjs';\nimport PartBrowserSystem from './plugin_browser_system.mjs';\nimport PartBrowserDialog from './plugin_browser_dialog.mjs';\nimport PartBrowserLocation from './plugin_browser_location.mjs';\nimport PartBrowserAjax from './plugin_browser_ajax.mjs';\nimport PartBrowserDomBasic from './plugin_browser_dom_basic.mjs';\nimport PartBrowserDomEvent from './plugin_browser_dom_event.mjs';\nimport PartBrowserDomParts from './plugin_browser_dom_parts.mjs';\nimport PartBrowserHtml from './plugin_browser_html.mjs';\nimport PartBrowserStorage from './plugin_browser_storage.mjs';\nimport PartBrowserCanvas from './plugin_browser_canvas.mjs';\nimport PartBrowserGeolocation from './plugin_browser_geolocation.mjs';\nimport PartBrowserSpeech from './plugin_browser_speech.mjs';\nimport PartBrowserWebsocket from './plugin_browser_websocket.mjs';\nimport PartBrowserAudio from './plugin_browser_audio.mjs';\nimport PartBrowserHotkey from './plugin_browser_hotkey.mjs';\nimport PartBrowserChart from './plugin_browser_chart.mjs';\nimport PartBrowserCrypto from './plugin_browser_crypto.mjs';\nconst BrowserParts = [\n    PartBrowserColor,\n    PartBrowserSystem,\n    PartBrowserDialog,\n    PartBrowserLocation,\n    PartBrowserAjax,\n    PartBrowserDomBasic,\n    PartBrowserDomEvent,\n    PartBrowserDomParts,\n    PartBrowserHtml,\n    PartBrowserStorage,\n    PartBrowserCanvas,\n    PartBrowserGeolocation,\n    PartBrowserSpeech,\n    PartBrowserWebsocket,\n    PartBrowserAudio,\n    PartBrowserHotkey,\n    PartBrowserChart,\n    PartBrowserCrypto\n];\nconst PluginBrowser = {\n    'meta': {\n        type: 'const',\n        value: {\n            pluginName: 'plugin_browser',\n            pluginVersion: '3.2.24',\n            nakoRuntime: ['wnako'],\n            nakoVersion: '^3.2.24' // 要求なでしこバージョン\n        }\n    },\n    '初期化': {\n        type: 'func',\n        josi: [],\n        pure: true,\n        fn: function (sys) {\n            /* eslint no-global-assign: 0 */\n            const doc = (typeof document === 'undefined') ? { 'body': {} } : document;\n            const win = (typeof window === 'undefined') ? { 'location': { 'href': 'http://localhost/' } } : window;\n            const nav = (typeof navigator === 'undefined') ? {} : navigator;\n            const loc = (typeof win.location === 'undefined') ? { 'href': 'http://localhost/' } : win.location;\n            // 定数を初期化\n            sys.__v0['AJAX:ONERROR'] = (err) => { console.log(err); };\n            // オブジェクトを初期化\n            sys.__v0.DOCUMENT = doc;\n            sys.__v0.WINDOW = win;\n            sys.__v0.NAVIGATOR = nav;\n            sys.__v0['DOM親要素'] = doc.body;\n            sys.__v0['ブラウザURL'] = loc.href;\n            // 便利なメソッドを定義\n            sys.__tohtml = (text) => {\n                return ('' + text)\n                    .replace(/&/g, '&amp;')\n                    .replace(/>/g, '&gt;')\n                    .replace(/</g, '&lt;');\n            };\n            sys.__tohtmlQ = (text) => {\n                return sys.__tohtml(text)\n                    .replace(/\"/g, '&#34;')\n                    .replace(/'/g, '&#39;');\n            };\n            // 「!クリア」でDOMイベントを削除するため\n            sys.__dom_events = []; // [{}, {}, {} ...]\n            // DOM追加イベント\n            sys.__addEvent = (dom, event, func, setHandler) => {\n                // dom\n                if (typeof (dom) === 'string') {\n                    dom = doc.querySelector(dom);\n                    if (!dom) {\n                        throw new Error('DOMイベントが追加できません。要素が見当たりません。');\n                    }\n                }\n                // func\n                if (typeof (func) === 'string') {\n                    func = sys.__findVar(func, null);\n                    if (!func) {\n                        throw new Error('DOMイベントが追加できません。関数が見当たりません。');\n                    }\n                }\n                // make wrapper func\n                const wrapperFunc = (e) => {\n                    sys.__v0['対象'] = e.target;\n                    sys.__v0['対象イベント'] = e;\n                    // 追加データが得られる場合\n                    if (setHandler) {\n                        setHandler(e, sys);\n                    }\n                    if (sys.__genMode === '非同期モード') {\n                        sys.newenv = true;\n                    }\n                    return func(e, sys);\n                };\n                // add\n                sys.__dom_events.push({ dom, event, func: wrapperFunc, rawFunc: func });\n                dom.addEventListener(event, wrapperFunc);\n            };\n            // キーイベントハンドラ\n            sys.__keyHandler = (e, sys) => {\n                sys.__v0['押キー'] = e.key;\n            };\n            // マウスイベントハンドラ\n            sys.__mouseHandler = (e, sys) => {\n                const box = e.target.getBoundingClientRect();\n                sys.__v0['マウスX'] = e.clientX - box.left;\n                sys.__v0['マウスY'] = e.clientY - box.top;\n            };\n            // タッチイベントハンドラ\n            sys.__touchHandler = (e, sys) => {\n                const box = e.target.getBoundingClientRect();\n                const touches = e.changedTouches;\n                if (touches.length <= 0) {\n                    return;\n                }\n                const ts = [];\n                for (let i = 0; i < touches.length; i++) {\n                    const t = touches[i];\n                    const tx = t.clientX - box.left;\n                    const ty = t.clientY - box.top;\n                    if (i === 0) {\n                        sys.__v0['タッチX'] = tx;\n                        sys.__v0['タッチY'] = ty;\n                    }\n                    ts.push([tx, ty]);\n                }\n                sys.__v0['タッチ配列'] = ts;\n                return ts;\n            };\n            // DOMイベント削除 (探して削除)\n            sys.__removeEvent = (dom, event, func) => {\n                // dom\n                if (typeof (dom) === 'string') {\n                    dom = doc.querySelector(dom);\n                    if (!dom) {\n                        throw new Error('DOMイベントが削除できません。要素が見当たりません。');\n                    }\n                }\n                // func\n                if (typeof (func) === 'string') {\n                    func = sys.__findVar(func, null);\n                    if (!func) {\n                        throw new Error('DOMイベントが削除できません。関数が見当たりません。');\n                    }\n                }\n                // find\n                for (let i = 0; i < sys.__dom_events.length; i++) {\n                    const e = sys.__dom_events[i];\n                    if (e.dom === dom && e.event === event && e.rawFunc === func) {\n                        e.dom.removeEventListener(e.event, e.func);\n                        sys.__dom_events.splice(i, 1);\n                        break;\n                    }\n                }\n            };\n            // requestAnimationFrame のためのid\n            sys.__requestAnimationFrameLastId = 0;\n            // DOMイベント全クリア\n            sys.__removeAllDomEvent = () => {\n                sys.__dom_events.forEach(e => {\n                    console.log(e.event, e.dom, e);\n                    e.dom.removeEventListener(e.event, e.func);\n                });\n                sys.__dom_events = [];\n                // requestAnimationFrame\n                if (sys.__requestAnimationFrameLastId > 0) {\n                    win.cancelAnimationFrame(sys.__requestAnimationFrameLastId);\n                    sys.__requestAnimationFrameLastId = 0;\n                }\n            };\n            // DOM取得のために使う\n            sys.__query = (dom, commandName, isGetFunc) => {\n                const elm = (typeof dom === 'string') ? document.querySelector(dom) : dom;\n                if (!elm) {\n                    if (isGetFunc) {\n                        // 取得イベントではコンソールにヒントを出す\n                        console.warn(`[ヒント](${sys.__v0.line})『${commandName}』でDOM取得に失敗しています。DOM=`, dom);\n                    }\n                    else {\n                        // 設定イベントでは実行時エラーにする\n                        const desc = (typeof dom === 'string') ? dom : String(dom);\n                        throw new Error(`『${commandName}』でクエリ『${desc}』でDOM取得に失敗しました。`);\n                    }\n                }\n                return elm;\n            };\n        }\n    },\n    '!クリア': {\n        type: 'func',\n        josi: [],\n        pure: false,\n        fn: function (sys) {\n            // chart.jsを破棄\n            if (sys.__chartjs) {\n                sys.__chartjs.destroy();\n            }\n            // 全DOMイベントをクリア\n            sys.__removeAllDomEvent();\n        }\n    }\n};\nBrowserParts.forEach((a) => {\n    const b = {};\n    Object.assign(b, a);\n    // 各モジュールでの初期化処理は認めない\n    if (typeof b['初期化'] !== 'undefined') {\n        delete b['初期化'];\n    }\n    Object.assign(PluginBrowser, b);\n});\nexport default PluginBrowser;\n","// @ts-nocheck\nimport hotkeys from 'hotkeys-js';\nexport default {\n    // @ホットキー\n    'ホットキー登録': {\n        type: 'func',\n        josi: [['に', 'で'], ['を']],\n        pure: true,\n        fn: function (key, fname, sys) {\n            hotkeys(key, function (event, handler) {\n                event.preventDefault();\n                const f = sys.__findFunc(fname);\n                f(sys);\n            });\n        }\n    },\n    'ホットキー解除': {\n        type: 'func',\n        josi: [['を', 'の']],\n        pure: true,\n        fn: function (key) {\n            hotkeys.unbind(key);\n        }\n    }\n};\n","// @ts-nocheck\nexport default {\n    // @グラフ描画_CHARTJS\n    'グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: true,\n        fn: function (data, sys) {\n            // Chart.jsが使えるかチェック\n            if (!window.Chart) {\n                throw new Error('『グラフ描画』のエラー。Chart.jsを取り込んでください。');\n            }\n            // Canvasが有効？\n            if (!sys.__canvas) {\n                throw new Error('『グラフ描画』のエラー。『描画開始』命令で描画先のCanvasを指定してください。 ');\n            }\n            // 日本語のキーワードを変換\n            if (data['タイプ']) {\n                data.type = data['タイプ'];\n            }\n            if (data['データ']) {\n                data.data = data['データ'];\n            }\n            if (data['オプション']) {\n                data.options = data['オプション'];\n            }\n            if (sys.__chartjs) {\n                sys.__chartjs.destroy();\n            }\n            // eslint-disable-next-line no-undef\n            const chart = new Chart(sys.__canvas, data);\n            sys.__chartjs = chart;\n            return chart;\n        }\n    },\n    'グラフオプション': { type: 'const', value: {} },\n    '線グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['line', data, sys]);\n            const d = {\n                type: 'line',\n                data,\n                options: sys.__v0['グラフオプション']\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], { 'indexAxis': 'x' });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '横棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], { 'indexAxis': 'y' });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '積上棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {\n                'indexAxis': 'x',\n                'scales': {\n                    x: { stacked: true },\n                    y: { stacked: true }\n                }\n            });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '積上横棒グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {\n                'indexAxis': 'y',\n                'scales': {\n                    x: { stacked: true },\n                    y: { stacked: true }\n                }\n            });\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'bar',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '散布図描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            // グラフオプションの差分作成\n            const gopt = Object.assign({}, sys.__v0['グラフオプション'], {});\n            data = sys.__exec('二次元グラフデータ変形', ['scatter', data, sys]);\n            const d = {\n                type: 'scatter',\n                data,\n                options: gopt\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '円グラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'pie',\n                data,\n                options: sys.__v0['グラフオプション']\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'ドーナツグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'doughnut',\n                data,\n                options: sys.__v0['グラフオプション']\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'ポーラーグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['pie', data, sys]);\n            const d = {\n                type: 'polarArea',\n                data,\n                options: sys.__v0['グラフオプション']\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    'レーダーグラフ描画': {\n        type: 'func',\n        josi: [['を', 'で', 'の']],\n        pure: false,\n        fn: function (data, sys) {\n            data = sys.__exec('二次元グラフデータ変形', ['bar', data, sys]);\n            const d = {\n                type: 'radar',\n                data,\n                options: sys.__v0['グラフオプション']\n            };\n            return sys.__exec('グラフ描画', [d, sys]);\n        }\n    },\n    '二次元グラフデータ変形': {\n        type: 'func',\n        josi: [['の'], ['を']],\n        pure: false,\n        fn: function (t, dataOrg, sys) {\n            // データを破壊的に変更してしまうので最初にデータをコピー (#1416)\n            const data = JSON.parse(JSON.stringify(dataOrg));\n            const bgcolorList = [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ];\n            const fgcolorList = [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ];\n            const res = {};\n            const bgcolors = [];\n            const fgcolors = [];\n            res.labels = [];\n            // 配列かどうか\n            if (data instanceof Array) {\n                // 二次元データのとき\n                if (data[0] instanceof Array) {\n                    if (t === 'pie') { // 円グラフの時だけ整形方法が異なる\n                        const o = {};\n                        o.data = [];\n                        res.datasets = [o];\n                        for (let i = 0; i < data.length; i++) {\n                            res.labels.push(data[i][0]); // label\n                            o.data.push(data[i][1]); // value\n                            bgcolors.push(bgcolorList[i % 6]);\n                            fgcolors.push(fgcolorList[i % 6]);\n                        }\n                        o.backgroundColor = bgcolors;\n                        o.borderColor = fgcolors;\n                        return res;\n                    }\n                    // 左側のラベルの処理\n                    // [1,0]が文字列ならラベルあり\n                    if (typeof (data[1][0]) === 'string') {\n                        for (let i = 1; i < data.length; i++) {\n                            res.labels.push(data[i][0]); // 左ラベルを追加\n                            data[i] = data[i].slice(1); // 左ラベル除去\n                        }\n                        data[0] = data[0].slice(1); // ヘッダ行も左ラベルを削除\n                    }\n                    else {\n                        // 左側ラベルない場合 - ダミーのラベルを追加\n                        for (let i = 1; i < data.length; i++) {\n                            res.labels.push(i);\n                        }\n                    }\n                    res.datasets = [];\n                    for (let i = 0; i < data[0].length; i++) {\n                        const o = {};\n                        res.datasets.push(o);\n                        o.label = data[0][i];\n                        o.backgroundColor = bgcolorList[i % 6];\n                        o.borderColor = fgcolorList[i % 6];\n                        o.data = [];\n                        for (let j = 1; j < data.length; j++) {\n                            o.data.push(data[j][i]);\n                        }\n                    }\n                    return res;\n                }\n                // 一次元データのとき\n                // ラベルを作成\n                for (let i = 0; i < data.length; i++) {\n                    res.labels.push(i + 1);\n                    bgcolors.push(bgcolorList[i % 6]);\n                    fgcolors.push(fgcolorList[i % 6]);\n                }\n                const o1 = {};\n                res.datasets = [o1];\n                o1.label = 'データ';\n                o1.data = data;\n                o1.backgroundColor = bgcolors;\n                o1.borderColor = fgcolors;\n                return res;\n            }\n            if (data instanceof Object) {\n                return data;\n            }\n            // データが1つだけのとき\n            return sys.__exec('二次元グラフデータ変形', [[data], sys]);\n        }\n    }\n};\n","export default {\n    // @ハッシュ関数\n    'ハッシュ値計算時': {\n        type: 'func',\n        josi: [['へ'], ['を'], ['で']],\n        pure: false,\n        fn: function (func, s, alg, sys) {\n            func = sys.__findVar(func, null); // 文字列指定なら関数に変換\n            // convert\n            const buffer = new TextEncoder().encode(s);\n            crypto.subtle.digest(alg, buffer).then(function (hash) {\n                const codes = [];\n                const view = new DataView(hash);\n                for (let i = 0; i < view.byteLength; i += 4) {\n                    const v = view.getUint32(i);\n                    const h = v.toString(16);\n                    const pad = '00' + h;\n                    codes.push(pad.substr(pad.length - 2, 2));\n                }\n                const res = sys.__v0['対象'] = codes.join('');\n                func(res);\n            });\n        },\n        return_none: true\n    }\n};\n","// wnako3mod - nadesiko for web browser\n// - wnako3 から wnako3mod を取り込む。\n// - このファイルはモジュールとして別のファイルから取り込み可能。\nimport { NakoCompiler } from '../core/src/nako3.mjs';\nimport { NakoImportError } from '../core/src/nako_errors.mjs';\nimport { setupEditor } from './wnako3_editor.mjs';\nimport nakoVersion from './nako_version.mjs';\nimport PluginBrowser from './plugin_browser.mjs';\nconst NAKO_SCRIPT_RE = /^(なでしこ|nako|nadesiko)3?$/;\nexport class WebNakoCompiler extends NakoCompiler {\n    constructor() {\n        super({ useBasicPlugin: true });\n        this.wnakoVersion = nakoVersion;\n        this.localFiles = {};\n        // プラグインを追加\n        this.addPluginObject('PluginBrowser', PluginBrowser);\n        // 必要な定数を設定\n        this.addListener('beforeRun', (g) => {\n            // バージョン情報を設定\n            g.__varslist[0]['ナデシコ種類'] = 'wnako3';\n            g.__varslist[0]['ナデシコバージョン'] = nakoVersion.version;\n            g.__varslist[0]['WNAKOバージョン'] = nakoVersion.version;\n        });\n    }\n    /**\n     * ブラウザでtype=\"なでしこ\"というスクリプトを得て実行する\n     */\n    async runNakoScript() {\n        // スクリプトタグの中身を得る\n        let nakoScriptCount = 0;\n        const scripts = document.querySelectorAll('script');\n        for (let i = 0; i < scripts.length; i++) {\n            const script = scripts[i];\n            if (script.type.match(NAKO_SCRIPT_RE)) {\n                nakoScriptCount++;\n                // URLからスクリプト名を見つける\n                const url = (typeof (window.location) === 'object') ? window.location.href : 'url_unknown';\n                const fname = `${url}#script${nakoScriptCount}.nako3`;\n                const code = script.text;\n                // 依存するライブラリをロード\n                await this.loadDependencies(code, fname);\n                // プログラムを実行\n                await this.runAsync(script.text, fname);\n            }\n        }\n        if (nakoScriptCount > 1) {\n            console.log('実行したなでしこの個数=', nakoScriptCount);\n        }\n    }\n    /** 取り込む文を実行する */\n    async loadDependencies(code, filename, preCode = '', localFiles = {}) {\n        this.localFiles = localFiles || {};\n        return this._loadDependencies(code, filename, preCode, this.getLoaderTool());\n    }\n    /**\n     * type=なでしこ のスクリプトを自動実行するべきかどうかを返す\n     * @returns type=なでしこ のスクリプトを自動実行するべきかどうか\n     */\n    checkScriptTagParam() {\n        const scripts = document.querySelectorAll('script');\n        for (let i = 0; i < scripts.length; i++) {\n            const script = scripts[i];\n            const src = script.src || '';\n            if (src.indexOf('wnako3.js?run') >= 0 ||\n                src.indexOf('wnako3.js&run') >= 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * 指定したidのHTML要素をなでしこ言語のエディタにする。\n     * @param {string | Element} idOrElement HTML要素\n     * @see {setupEditor}\n     */\n    setupEditor(idOrElement) {\n        return setupEditor(idOrElement, this, window.ace);\n    }\n    /** なでしこ3の『取り込む』命令のための読み込みツール */\n    getLoaderTool() {\n        const tool = { readJs: this.readJs, readNako3: this.readNako3, resolvePath: this.resolvePath };\n        return tool;\n    }\n    /** JSプラグインの読み込み */\n    readJs(filePath, token) {\n        if (this.localFiles && this.localFiles[filePath]) {\n            return {\n                task: (async () => () => {\n                    // eslint-disable-next-line no-new-func\n                    Function(this.localFiles[filePath])();\n                    return {};\n                })()\n            };\n        }\n        return {\n            task: (async () => {\n                // もし動的インポートに対応していれば動的インポートを試す\n                const basename = ('/' + filePath).split('/').pop() || '?';\n                /*\n                try {\n                  const obj = await import(filePath)\n                  this.addPluginObject(basename, obj)\n                  return {}\n                } catch (e) { }\n                */\n                // WebPackの関係で動的インポートが失敗するので、テキストとしてJSソースを取り出して処理する\n                // JavaScriptをテキストとして取得\n                const res = await fetch(filePath);\n                if (!res.ok) {\n                    throw new NakoImportError(`ファイル『${filePath}』のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\n                }\n                let jstext = await res.text();\n                // ESModuleっぽければ `default export`を置き換える\n                const r = Math.floor(Math.random() * 1000000);\n                const exportName = `exportObject${r}`;\n                if (jstext.includes('default export')) {\n                    jstext = jstext.replace('default export', `;let ${exportName} = `);\n                    jstext += `\\n;navigator.nako3.addPluginObject('${basename}', ${exportName});\\n`;\n                }\n                // addPluginObjectが存在する\n                if (!jstext.includes('navigator.nako3.addPluginObject')) {\n                    throw new NakoImportError(`ファイル ${filePath} の中に文字列 \"navigator.nako3.addPluginObject\" が存在しません。現在、ブラウザ版のなでしこ言語v3は自動登録するプラグインのみをサポートしています。`, token.file, token.line);\n                }\n                const gNavigator = navigator;\n                const gSelf = gNavigator.nako3;\n                // textの例: `navigator.nako3.addPluginObject('PluginRequireTest', { requiretest: { type: 'var', value: 100 } })`\n                return () => {\n                    // プラグインの自動登録は navigator.nako3 を参照するため、 navigator.nako3 を一時的に現在のインスタンスにする。\n                    const globalNavigator = gNavigator;\n                    const globalNako3 = globalNavigator.nako3;\n                    globalNavigator.nako3 = gSelf;\n                    try {\n                        // eslint-disable-next-line no-new-func\n                        const f = Function(jstext);\n                        f.apply(gSelf.__globalObj);\n                    }\n                    catch (err) {\n                        throw new NakoImportError(`プラグイン ${filePath} の取り込みに失敗: ${err instanceof Error ? err.message : err + ''}`, token.file, token.line);\n                    }\n                    finally {\n                        globalNavigator.nako3 = globalNako3;\n                    }\n                    return {};\n                };\n            })()\n        };\n    }\n    /** NAKO3プラグインの読み込み */\n    readNako3(filePath, token) {\n        if (this.localFiles && this.localFiles[filePath]) { // ローカルファイルを使う場合\n            return {\n                task: (() => {\n                    return (new Promise((resolve, reject) => {\n                        const s = this.localFiles[filePath];\n                        resolve(s);\n                    }));\n                })()\n            };\n        }\n        return {\n            task: (async () => {\n                const res = await fetch(filePath);\n                if (!res.ok) {\n                    throw new NakoImportError(`ファイル ${filePath} のダウンロードに失敗しました: ${res.status} ${res.statusText}`, token.file, token.line);\n                }\n                return await res.text();\n            })()\n        };\n    }\n    /** 読み込みでパスを解決する */\n    resolvePath(name, token, fromFile) {\n        let pathname = name;\n        // http から始まっていれば解決は不要\n        if (pathname.match(/^https?:\\/\\//)) { // フルパスなら解決不要\n        }\n        else if (this.localFiles && this.localFiles[name]) {\n            pathname = this.localFiles[name];\n        }\n        else {\n            try {\n                pathname = new URL(name).pathname;\n            }\n            catch (e) {\n                // 単純にパスに変換できなければ、location.hrefを参考にパスを組み立てる\n                try {\n                    let baseDir = dirname(fromFile);\n                    if (baseDir === '') {\n                        // https://2/3/4.html\n                        const a = window.location.href.split('/');\n                        baseDir = '/' + a.slice(3, a.length - 1).join('/');\n                    }\n                    pathname = resolveURL(baseDir, name);\n                }\n                catch (e) {\n                    throw new NakoImportError(`取り込み文の引数でパスが解決できません。https:// か http:// で始まるアドレスを指定してください。\\n${e}`, token.file, token.line);\n                }\n            }\n        }\n        // 拡張子によってプラグインタイプを分岐する\n        const checkExt = (name, extlist) => {\n            for (const ext of extlist) {\n                if (name.endsWith(ext)) {\n                    return true;\n                }\n                if (name.endsWith(ext + '.txt')) {\n                    return true;\n                } // '.mjs.txt' にもマッチ\n            }\n            return false;\n        };\n        // URLパラメータを考慮する\n        const aname = (pathname + '?').split('?')[0];\n        // JSプラグイン    → (.js|.mjs)\n        // NAKO3プラグイン → (.nako3|.nako)\n        if (checkExt(aname, ['.js', '.mjs'])) {\n            return { filePath: pathname, type: 'js' };\n        }\n        if (checkExt(aname, ['.nako3', '.nako'])) {\n            return { filePath: pathname, type: 'nako3' };\n        }\n        if (checkExt(pathname, ['.js', '.mjs'])) {\n            return { filePath: pathname, type: 'js' };\n        }\n        if (checkExt(pathname, ['.nako3', '.nako'])) {\n            return { filePath: pathname, type: 'nako3' };\n        }\n        // ファイル拡張子が未指定の場合\n        throw new NakoImportError(`ファイル『${name}』は拡張子が(.nako3|.js|.js.txt|.mjs|.mjs.txt)以外なので取り込めません。`, token.file, token.line);\n    }\n}\nfunction dirname(s) {\n    const a = s.split('/');\n    if (a && a.length > 1) {\n        return a.slice(0, a.length - 1).join('/');\n    }\n    return '';\n}\nfunction resolveURL(base, s) {\n    const baseA = base.split('/');\n    const sA = s.split('/');\n    for (const p of sA) {\n        if (p === '') {\n            continue;\n        }\n        if (p === '.') {\n            continue;\n        }\n        if (p === '..') {\n            baseA.pop();\n            continue;\n        }\n        baseA.push(p);\n    }\n    return baseA.join('/');\n}\n","// wnako3 - nadesiko for web browser\nimport { WebNakoCompiler } from './wnako3mod.mjs';\n// ブラウザから取り込まれる時 navigator.nako3 になでしこを登録\nif ((typeof navigator) === 'object' && !navigator.exportWNako3) {\n    const wnako3 = navigator.nako3 = new WebNakoCompiler();\n    window.addEventListener('DOMContentLoaded', (e) => {\n        const isAutoRun = wnako3.checkScriptTagParam();\n        if (isAutoRun) {\n            wnako3.runNakoScript();\n        }\n    }, false);\n}\n"],"names":["isff","navigator","userAgent","toLowerCase","indexOf","addEvent","e","n","t","o","addEventListener","attachEvent","concat","window","event","getMods","slice","length","getKeys","replace","split","lastIndexOf","splice","_keyMap","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","ins","insert","home","end","pageup","pagedown","capslock","num_0","num_1","num_2","num_3","num_4","num_5","num_6","num_7","num_8","num_9","num_multiply","num_add","num_enter","num_subtract","num_decimal","num_divide","_modifier","shift","alt","option","ctrl","control","cmd","command","modifierMap","shiftKey","ctrlKey","altKey","metaKey","_mods","_handlers","k","_downKeys","winListendFocus","_scope","elementHasBindEvent","code","toUpperCase","charCodeAt","setScope","getScope","eachUnbind","s","scope","i","method","splitKey","r","key","forEach","filter","compareArray","mods","eventHandler","element","Object","prototype","hasOwnProperty","call","shortcut","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","keyCode","which","charCode","hotkeys","this","push","getModifierState","d","type","keydown","keyup","a","c","l","f","y","sort","join","document","toString","capture","isElementBind","clearModifier","_hotkeys","_api","deleteScope","getPressedKeyCodes","isPressed","target","srcElement","tagName","isContentEditable","readOnly","trigger","arguments","keys","find","unbind","Array","isArray","keyMap","modifier","noConflict","module","exports","version","major","minor","patch","NakoError","Error","constructor","tag","msg","file","line","positionJa","undefined","super","name","NakoIndentError","InternalLexerError","preprocessedCodeStartOffset","preprocessedCodeEndOffset","NakoLexerError","startOffset","endOffset","NakoSyntaxError","static","first","last","NakoRuntimeError","error","lineNo","matches","message","exec","parseInt","NakoImportError","NakoGenOptions","isTest","importFiles","codeStandalone","convEnv","codeEnv","fname","NakoGen","com","nakoFuncList","getNakoFuncList","nakoTestFuncs","usedFuncSet","Set","loopId","numAsyncFn","usedAsyncFn","flagLoop","__self","genMode","lastLineNo","varslistSet","__varslist","map","v","isFunction","names","readonly","varsSet","speedMode","lineNumbers","implicitTypeCasting","invalidSore","forcePure","performanceMonitor","userFunction","systemFunction","systemFunctionBody","mumeiId","warnUndefinedVar","constPools","warnUndefinedReturnUserFunc","warnUndefinedCallingUserFunc","warnUndefinedCallingSystemFunc","warnUndefinedCalledUserFuncArgs","debugOption","test","convLineno","node","forceUpdate","incLine","lineNoStr","lineDataJSON","JSON","stringify","debugCode","useDebug","messageAction","waitTime","varname","isValidIdentifier","getFuncName","name2","convRequire","moduleName","value","getDefFuncCode","opt","getModList","nakoFuncCode","fn","asyncFn","testCode","addPlugin","po","addPluginObject","addPluginFile","objName","path","addFunc","josi","getFunc","registerFunction","ast","funcList","registFunc","block","blockList","add","meta","initialNames","convGen","result","_convGen","isExpression","blocks","b","convComment","convCheckLoop","convString","convDefLocalVar","convDefLocalVarlist","convLet","convInc","convGetVar","convOp","convRenbun","convCallFunc","convIf","convTikuji","convFor","convForeach","convRepeatTimes","convSpeedMode","convPerformanceMonitor","convWhile","convAtohantei","convSwitch","convLetArray","convRefArray","convJsonArray","convJsonObj","convFuncObj","convDefTest","convDefFunc","convReturn","convTryExcept","findVar","has","isTop","js","genVar","position","res","lno","dispName","getLogger","warn","pv","getNakoFunc","commentSrc","String","poolIndex","cmdj","convDefFuncCommon","performanceMonitorInjectAtStart","performanceMonitorInjectAtEnd","variableDeclarations","varsDeclared","from","values","varnames","word","oldUsedAsyncFn","includes","pop","list","index","codeInit","codeArray","checkInit","arrayDefCode","convGenLoop","tmpflag","varName","idLoop","varI","kara","made","to","flagDown","inc","varFrom","varTo","sorePrefex","nameS","id","options","prev","cond","varId","cases","body","cvalue","cblock","expr","falseBlock","false_block","curName","errorCode","errorBlock","convFuncGetArgsCalcType","_funcName","_func","args","opts","nodeArgs","arg","sore","getPluginList","__module","funcName","func","return_none","argsInfo","argsOpts","funcDef","funcBegin","funcEnd","setter","pure","localVars","str","indent","text","repeat","noCheckFuncs","argsCode","argsA","argStr","funcCall","OP_TBL","eq","noteq","gt","lt","gteq","lteq","and","or","shift_l","shift_r","shift_r0","op","operator","jsName","nodeName","vtype","vartype","mode","rf","errBlock","getUsedFuncSet","getPluginInitCode","pluginCode","initkey","generateJS","gen","jsInit","funcID","Date","getTime","Math","floor","random","asyncMain","syncMain","trace","codeImportFiles","importNames","ff","standaloneJSCode","coreVersion","initCode","runtimeEnv","standalone","NakoCodeNop","NakoCodeLabel","NakoCodeEOL","NakoCodeJump","NakoCodeJumpIfTrue","NakoCodeJumpIfFalse","NakoCodeCall","NakoCodeCallObj","NakoCodeReturn","NakoCodeTry","NakoCodeCode","NakoCode","no","NakoGenASync","nakoTestList","codeId","labelContinue","labelBreak","labels","getVarsCode","needToFixAddr","codes","usedLabels","addCode","addCodeStr","convFunc","codeStr","a2","row","makeLabel","uniqLabel","makeLabelDirectly","labelName","makeJump","label","makeJumpIfTrue","makeJumpIfFalse","labelBegin","labelEnd","labelIfFalse","loopVar","loopCount","labelCheck","isMumeiFunc","codeCall","size","labelInc","taisyo","targetArray","targetKeys","setTarget","_node","_isExpression","varValue","nextLabel","isJSFunc","arcCount","nameObj","vname","labelExcept","nako3","addCodeGenerator","josiList","tararebaJosiList","removeJosiList","tararebaMap","removeJosiMap","josiRE","RegExp","pluginName","pluginVersion","nakoRuntime","nakoVersion","sys","isDebug","__v0","__namespaceList","__findVar","nameStr","def","__locals","varScope","modList","__modList","__modName","modName","gname","__findFunc","parentFunc","__exec","params","f0","apply","__timeout","__interval","z2","__zero2","substring","__zero","keta","zeroS","__formatDate","getFullYear","getMonth","getDate","__formatTime","getHours","getSeconds","getMinutes","__formatDateTime","fmt","dateStr","timeStr","match","__str2date","parseFloat","__printPool","chk","constId","cp","logger","__genMode","__stopAsync","PI","NaN","Infinity","send","isVariableJosi","console","log","aa","pow","reduce","p","__reisetu","src","eval","async","Function","obj","m","runEx","resetEnv","resetLog","out","resetAll","tf","performance","now","t1","forceClose","isNaN","Number","g","v2","fromCodePoint","fromCharCode","codePointAt","ss","cnt","chr","zen1","han1","zen2","han2","c2","n2","charAt","j","parse","re","sa","global","z","ufunc","reverse","tmp","old","x","max","min","nn","ns","ms","col","cols","rows","idx","nr","sum","Promise","resolve","reject","timerId","setTimeout","err","newenv","unshift","setInterval","clearInterval","clearTimeout","getDay","tm","getMilliseconds","era","gengo","d2","t2","ceil","unit","sec","rd","opc","addY","addM","addD","setFullYear","setMonth","setDate","curLine","breakpoints","forceLine","vars","pluginfiles","then","mod","assign","catch","w","default","encodeURIComponent","decodeURIComponent","url","kv","btoa","u8a","TextEncoder","encode","utf8str","Buffer","atob","decodedUtf8str","dec","decodedArray","Uint8Array","TextDecoder","decode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","get","prop","Symbol","toStringTag","opPriority","RenbunJosi","operatorList","NewEmptyToken","column","isIndentChars","ch","kanakanji","hira","allHiragana","wordHasIjoIka","wordSpecial","errorRead","unitRE","rules","pattern","cbParser","numEOL","readJosi","cb","parseNumber","cbString","isTrimOkurigana","substr","ii","trimOkurigana","beginTag","closeTag","NakoLexer","funclist","setFuncList","listObj","replaceTokens","tokens","isFirst","filename","filenameToModName","preDefineFunc","_replaceWord","eof","rawJosi","isFuncPointer","readArgs","funcPointer","funcPointers","already","kai","isMumei","prevToken","defToken","funcNameToken","splitStringEx","arr","comment","modSelf","gname1","gfo1","gfo","fo","ltype","countIndent","tokenize","srcLength","columnCurrent","lineCurrent","isDefTest","ia","ok","rule","rp","offset","preprocessedCodeOffset","preprocessedCodeLength","srcOffset","um","sep","NakoParser","stackList","usedFuncs","stack","namespaceStack","funcLevel","localvars","arrayIndexFrom","flagReverseArrayIndex","flagCheckArrayInit","recentlyCalledFunc","init","reset","popStack","saveStack","loadStack","info","gnameSelf","pushStack","item","isEOF","getIndex","check","ttype","check2","checkTypes","accept","types","tmpIndex","rollback","bind","token","getCur","unget","peek","peekDef","peekSourceMap","nodeToStr","debugMode","depth","typeName","debug","subNode","node2","table","not","startParser","ySentenceList","ySentence","makeStackBalanceReport","words","desc","descFunc","chA","josiA","yEOL","eol","report","yIF","yAtohantei","yTryExcept","yTikuji","yRequire","yASyncMode","yDNCLMode","ySetGenMode","ySpeedMode","yPerformanceMonitor","yLet","yDefTest","yDefFunc","yCall","c1","ver","yBlock","yDefFuncReadArgs","yDef","defArgs","multiline","backupLocalvars","fnName","yIFCond","yGetArg","tmpI","naraba","smap","mosi","trueBlock","tanbun","optionNode","val","tikuji","tugini","tuginiType","yGetArgOperator","firstValue","yValue","infixToAST","value1","infixToPolish","priority","polish","sTop","tpop","ans","yGetArgParen","isClose","si","yRepeatTime","num","yWhile","bUntil","yFor","kurikaesu","incdec","vInc","vTo","vFrom","yReturn","yForEach","ySwitch","joukenbunki","isDefaultClause","skippedKokomade","condToken","condBlock","kokomade","yMumeiFunc","yDainyu","dainyu","getVarName","ySadameru","sadameru","createVar","yIncDec","action","cur","yCallFunc","msgDebug","d0","d1","funcObj","nullCount","valueCount","popArg","funcNode","threw","yCalc","nameToken","la","yLetArrayAt","lb","yLetArrayBracket","wordToken","yJSONArray","createVarList","checkArrayIndex","checkArrayReverse","ary","yValueKakko","closeParent","yJSONObject","splitType","tt","getVarNameRef","yValueWord","yValueWordGetIndex","isConst","yJSONObjectValue","firstToken","yJSONArrayValue","v1","kansi","ReplaceHistory","ConvertResult","sourcePosition","Replace","history","getText","replaceAll","getSourcePosition","NakoPrepare","convertTable","Map","_instance","convert1ch","convert","flagStr","flagStr2","endOfStr","ch2","checkNakoMode","modeNames","lines","lastTokenInfo","newToken","templateToken","isSkipWord","joinTokenLines","getLastTokenWithoutEOL","len","splitTokens","delimiter","kakko","IsEmptyLine","ty","GetLeftTokens","INDENT_MODE_KEYWORDS","convertIndentSyntax","useIndentSynax","jsonObjLevel","jsonArrayLevel","checkJsonSyntax","blockIndents","lastI","leftToken","curI","blockIndentTopLast","DNCL_KEYWORDS","DNCL_SIMPLES","convertDNCL","useDNCLmode","fi","findTokens","replaceAtohantei","fi2","nai","ni","sou","nakumosi","nakumosiTudukiStr","nakumosiToken","fu","replaceAllElementV","begin","times","mul","wo","ga","findTypeValue","findA","flag","DNCL2_KEYWORDS","convertDNCL2","useDNCL2mode","tokenEq","varToken","valToken","typeValues","fromIndex","pat","SourceMappingOfTokenization","sourceCodeLength","preprocessed","cumulativeSum","el","lastIndex","lastPreprocessedCodePosition","preprocessedCodePosition","findIndex","SourceMappingOfIndentSyntax","codeAfterProcessingIndentationSyntax","linesInsertedByIndentationSyntax","linesDeletedByIndentationSyntax","lastLineNumber","lastOffset","tokenLine","getLineNumber","insertedLine","deletedLine","lineNumber","OffsetToLineColumn","lineOffsets","oneBasedLineNumber","subtractSourceMapByPreCodeLength","sourceMap","preCode","colorNames","NakoColors","noColor","browserConsoleStyles","consoleColor","consoleFontWeight","browserConsoleText","_","m1str","m1","htmlColor","htmlFontWeight","nodeConsole","html","browserConsole","bold","black","red","green","yellow","blue","magenta","cyan","white","LogLevel","levelStr","level","all","stdout","stringifyPosition","NakoLogger","listeners","logs","getErrorLogs","addListener","callback","fromS","removeListener","sendI","pos","runtimeError","posStr","makeData","formats","style","data","NakoGlobal","compiler","guid","lastJSCode","numFailures","nextIndex","__code","__callstack","__stack","__labels","getPluginfiles","clearLog","nakoGlobal","runSync","runAsync","_runTests","tests","pass","clearPlugins","pname","clearName","destroy","sin","cos","tan","asin","acos","atan","atan2","XY","abs","exp","hypot","LOG2E","LOG10E","trunc","sqrt","round","base","txt","reToDelim","convType","search","cells","valueConv","fQuot","genValueConverter","__promise","setLastPromise","promise","cbFunc","reason","finally","cloneAsJSON","newCompilerOptions","initObj","testOnly","NakoCompiler","useBasicPlugin","__vars","__v1","__globals","__globalObj","pluginFunclist","commandlist","eventList","codeGenerateor","dependencies","addBasicPlugins","prepare","getInstance","parser","lexer","replaceLogger","requireStatements","start","lastToken","_loadDependencies","tools","loadJS","tasks","readJs","filePath","task","pluginFuncs","loadNako3","content","readNako3","registerFile","rawtokenize","loadRec","tagsResolvePath","listRequireStatements","resolvePath","alias","startsWith","tokenizationSourceMapping","indentationSyntaxSourceMapping","offsetToLineColumn","dest","checkICount","lineICount","tFirst","tLast","convertInlineIndent","converttoken","needToClearPlugin","original","lexCodeToken","commentTokens","replaceRequireStatements","includeGuard","deletedTokens","children","removeRequireStatements","lex","syntaxHighlighting","requireStatementTokens","requireTokens","lexerOutput","deleteUnNakoFuncs","getUsedFuncs","queue","ast_","getUsedAndDefFuncs","astQueue","blockQueue","getUsedAndDefFunc","compile","compileFromCode","eventName","outCode","generateCode","genObj","generate","isReset","_runEx","evalJS","getNakoGlobal","run","compileStandalone","persistent","fpath","returnNone","setFunc","defSpecialRetMark","SpecialRetMark","removeCommentsFromLine","eos","isComment","cPrepared","ch2Prepared","getIndent","replaceRetMark","pairs","parents","spaces","lineCount","numLines","line2","current","fill","parent","getEditorTokens","compilerToken","includesLastCharacter","underlineJosi","docHTML","findPluginName","createParameterDeclaration","getDocumentationHTML","union","alphabet","createParameterName","getDefaultTokens","doc","getLine","withoutLogger","entries","lineStartOffset","tokenIndex","editorTokens","lineEndOffset","EditorMarkers","session","AceRange","disable","markers","hasAnnotations","startLine","startColumn","endLine","endColumn","fromOffset","fromNullable","range","addMarker","setAnnotations","addByError","fromError","marker","removeMarker","clearAnnotations","BackgroundTokenizer","onTokenUpdate","onCompileError","onUpdate","dirty","lastLexerOutput","getAllLines","cache","deleted","enabled","update","startTime","getLength","dispose","$updateOnChange","delta","startRow","endRow","columnStart","oldTokens","newTokens","getTokens","fireUpdateEvent","firstRow","lastRow","setDocument","scheduleStart","setTokenizer","tokenizer","stop","getState","LanguageFeatures","state","parseLine","every","removeInLine","minIndent","insertInLine","input","autoOutdent","prevLine","isBlockStart","getBlockStructure","oldIndent","prefix","backgroundTokenizer","addItem","caption","score","set","indentSyntax","en","jp","snippet","getFoldWidget","foldStyle","getFoldWidgetRange","pair","results","title","blockStructure","EditorTabs","editor","UndoManager","newTab","cursor","reversed","scroll","top","undoManger","getTab","getValue","selection","getRange","isBackwards","getScrollLeft","getScrollTop","getUndoManager","setTab","setValue","setRange","setScrollLeft","setScrollTop","setUndoManager","Options","getOption","localStorage","setItem","getItem","json","keyboardHandler","setOption","theme","fontSize","tabSize","OptionPanel","panel","done","isMain","renderOptionGroup","group","items","defaultValue","ariaLabel","render","on","save","completers","editorIdCounter","setupEditor","idOrElement","ace","edit","getElementById","require","Range","editorMarkers","bgTokenizer","dataset","nako3DisableMarker","classList","contains","setAttribute","nako3Readonly","setReadOnly","setFontSize","resetEditorTokens","removeFullLines","defineOptions","initialValue","setOptions","wrap","indentedSoftWrap","showPrintMargin","setKeyboardHandler","tooltip","Tooltip","container","renderer","hide","getDocumentPosition","getTokenAt","setHtml","show","clientX","clientY","domEvent","className","isFocused","editorId","setBreakpoint","postMessage","clearBreakpoint","forceSyntaxHighlighting","nako3ForceSyntaxHighlighting","isFirstTime","oldBgTokenizer","_signal","slowSpeedMessage","remove","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","wnako3EditorId","getCompletions","getCompletionItems","some","getSnippets","setCompleters","getCompletionPrefix","getCursorPosition","languageFeatures","oop","TextMode","Mode","HighlightRules","foldingRules","inherits","toggleCommentLines","getNextLineIndent","checkOutdent","setMode","setTheme","load","initPanel","buttonContainer","createElement","appendChild","innerHTML","codeLensListeners","CodeLens","commands","addCommand","registerCodeLensProvider","provideCodeLenses","getCodeLens","exitFullscreen","setScrollMargin","fullscreenButton","innerText","settingsButton","execCommand","editorTabs","nako3Resizable","MutationObserver","resize","observe","attributes","retokenize","outputContainer","display","loadDependencies","localFiles","testName","ua","alert","prompt","confirm","location","href","back","fetch","status","headers","blob","bodyData","fd","FormData","flist","arrayBuffer","Blob","resolveCount","q","querySelector","querySelectorAll","getElementsByTagName","pa","__query","dom","funcStr","selectedIndex","uses","wa","getAttribute","HTMLElement","removeChild","focus","__addEvent","__removeEvent","__keyHandler","__mouseHandler","__touchHandler","__requestAnimationFrameLastId","requestAnimationFrame","cancelAnimationFrame","skin","elm","btn","inp","te","lbl","cv","width","height","img","span","htmlFor","createTextNode","frm","rowIndex","th","__tohtmlQ","td","ita","its","select","it","tr","getChildren","childNodes","checked","rr","bgColor","bgHead","rowNo","__tohtml","backgroundColor","color","textAlign","clipboard","writeText","pre","webkitUserSelect","userSelect","textContent","getSelection","selectAllChildren","readText","removeItem","errMsgCanvasInit","__canvas","__ctx","getContext","__fillStyle","__strokeStyle","restore","strokeStyle","fillStyle","beginPath","moveTo","lineTo","stroke","lineWidth","rect","clearRect","xy","arc","ellipse","Image","crossOrigin","onload","onerror","drawFunc","im","ctx","drawImage","image","sxy","dxy","errArgLen","__proto__","sw","font","fillText","measureText","translate","rotate","scale","setTransform","transform","toDataURL","toBlob","download","click","geolocation","getCurrentPosition","coords","latitude","longitude","watchPosition","wid","clearWatch","speechSynthesis","speak","onend","voice","SpeechSynthesisUtterance","lang","rate","pitch","volume","getVoices","voices","changeFunc","ws","WebSocket","onopen","cbOpen","cbError","onmessage","cbMsg","close","Audio","loop","play","pause","currentTime","duration","PluginBrowser","win","nav","loc","DOCUMENT","WINDOW","NAVIGATOR","__dom_events","setHandler","wrapperFunc","rawFunc","box","getBoundingClientRect","touches","changedTouches","ts","tx","removeEventListener","__removeAllDomEvent","commandName","isGetFunc","__chartjs","handler","Chart","chart","gopt","stacked","dataOrg","bgcolorList","fgcolorList","bgcolors","fgcolors","datasets","borderColor","o1","alg","buffer","crypto","subtle","digest","hash","view","DataView","byteLength","pad","getUint32","NAKO_SCRIPT_RE","WebNakoCompiler","wnakoVersion","nakoScriptCount","scripts","script","getLoaderTool","checkScriptTagParam","basename","statusText","jstext","exportName","gNavigator","gSelf","globalNavigator","globalNako3","fromFile","pathname","URL","baseDir","dirname","baseA","sA","resolveURL","checkExt","extlist","ext","endsWith","aname","exportWNako3","wnako3","runNakoScript"],"sourceRoot":""}